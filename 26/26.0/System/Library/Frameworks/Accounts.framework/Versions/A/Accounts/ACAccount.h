@class NSURL, ACMutableTrackedSet, NSMutableDictionary, NSDate, NSDictionary, NSString, ACAccountCredential, NSSet, NSMutableSet, NSArray, ACAccountType, ACAccountStore;
@protocol NSObject;

@interface ACAccount : NSObject <ACProtobufCoding, NSCoding, NSCopying, NSSecureCoding> {
    ACAccountStore *_accountStore;
    NSString *_identifier;
    NSString *_accountDescription;
    NSString *_owningBundleID;
    NSString *_username;
    NSString *_authenticationType;
    NSString *_credentialType;
    NSString *_clientToken;
    ACAccountType *_accountType;
    ACAccountCredential *_credential;
    NSMutableDictionary *_properties;
    NSMutableDictionary *_dataclassProperties;
    NSURL *_objectID;
    NSDate *_date;
    NSDate *_lastCredentialRenewalRejectionDate;
    NSString *_modificationID;
    NSString *_cachedParentAccountID;
    ACAccount *_parentAccount;
    NSArray *_childAccounts;
    NSSet *_provisionedEnumDataclasses;
    NSSet *_enabledEnumDataclasses;
    NSMutableSet *_dirtyProperties;
    NSMutableSet *_dirtyAccountProperties;
    NSMutableSet *_dirtyDataclassProperties;
    id<NSObject> _credentialsDidChangeObserver;
    BOOL _haveCheckedForClientToken;
    BOOL _accountAccessAvailable;
    BOOL _authenticated;
    BOOL _active;
    BOOL _warmingUp;
    BOOL _supportsAuthentication;
    BOOL _visible;
    BOOL _haveCheckedForChildAccounts;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (nonatomic, setter=proto_setAgeRange:) unsigned long long proto_ageRange;
@property (copy, nonatomic, setter=proto_setGivenName:) NSString *proto_givenName;
@property (copy, nonatomic) ACMutableTrackedSet *trackedProvisionedDataclasses;
@property (readonly, nonatomic) BOOL wasProvisionedDataclassesReset;
@property (copy, nonatomic) ACMutableTrackedSet *trackedEnabledDataclasses;
@property (readonly, nonatomic) BOOL wasEnabledDataclassesReset;
@property (readonly) ACAccountCredential *internalCredential;
@property (readonly) NSString *modificationID;
@property (readonly) unsigned long long notifyGenerationID;
@property (readonly) NSURL *objectID;
@property (readonly) ACAccountStore *accountStore;
@property (retain) ACAccount *parentAccount;
@property (readonly) NSString *parentAccountIdentifier;
@property (readonly) NSArray *childAccounts;
@property (retain) NSMutableSet *enabledDataclasses;
@property (retain) NSMutableSet *provisionedDataclasses;
@property (readonly, weak) NSDictionary *dataclassProperties;
@property (getter=isAuthenticated) BOOL authenticated;
@property (readonly, weak) NSDictionary *accountProperties;
@property (readonly, weak) ACAccount *displayAccount;
@property (getter=isActive) BOOL active;
@property BOOL supportsAuthentication;
@property (getter=isWarmingUp) BOOL warmingUp;
@property unsigned long long credentialLocation;
@property (readonly, getter=isDirty) BOOL dirty;
@property (readonly) NSSet *dirtyProperties;
@property (readonly) NSSet *dirtyAccountProperties;
@property (readonly) NSSet *dirtyDataclassProperties;
@property (readonly) NSString *authenticationType;
@property (readonly) NSString *credentialType;
@property (readonly) BOOL supportsPush;
@property (retain) NSDate *creationDate;
@property (getter=isVisible) BOOL visible;
@property (retain) NSDate *lastCredentialRenewalRejectionDate;
@property (readonly, nonatomic) NSString *shortDebugName;
@property (readonly) NSString *clientToken;
@property (copy) id /* block */ accountPropertiesTransformer;
@property (retain) NSString *managingOwnerIdentifier;
@property (retain) NSString *managingSourceName;
@property (readonly, weak) NSString *identifier;
@property (retain) ACAccountType *accountType;
@property (copy) NSString *accountDescription;
@property (copy) NSString *username;
@property (readonly) NSString *userFullName;
@property (retain) ACAccountCredential *credential;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)createProtoAccountWithAgeRange:(unsigned long long)a0;
+ (id)createProtoAccountWithGivenName:(id)a0 ageRange:(unsigned long long)a1;
+ (id)keypathsRequiredForInitialization;

- (unsigned long long)dca_ageRange;
- (id)dca_givenName;
- (void)dca_setAgeRange:(unsigned long long)a0;
- (void)dca_setGivenName:(id)a0;
- (id)initWithGivenName:(id)a0 ageRange:(unsigned long long)a1;
- (id)_encodeProtobufData;
- (id)_initWithProtobufData:(id)a0;
- (id)fullDescription;
- (id)_encodeProtobuf;
- (id)personaIdentifier;
- (id)_initWithProtobuf:(id)a0;
- (id)objectForKeyedSubscript:(id)a0;
- (BOOL)isEnabledForDataclass:(id)a0;
- (void)refresh;
- (void)dealloc;
- (void)setEnabled:(BOOL)a0 forDataclass:(id)a1;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)propertyForKey:(id)a0;
- (void)markAllPropertiesDirty;
- (void)encodeWithCoder:(id)a0;
- (void)setObject:(id)a0 forKeyedSubscript:(id)a1;
- (BOOL)isProvisionedForDataclass:(id)a0;
- (void)reload;
- (void)setProperty:(id)a0 forKey:(id)a1;
- (void)setAccountProperty:(id)a0 forKey:(id)a1;
- (id)init;
- (void)_markPropertyDirty:(id)a0;
- (void)_clearDirtyProperties;
- (BOOL)isPropertyDirty:(id)a0;
- (void)setOwningBundleID:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)accountPropertyForKey:(id)a0;
- (void)setIdentifier:(id)a0;
- (id)propertiesForDataclass:(id)a0;
- (void)setCredentialType:(id)a0;
- (void).cxx_destruct;
- (id)initWithAccountType:(id)a0;
- (id)owningBundleID;
- (struct __SecIdentity { } *)copySecIdentity;
- (BOOL)addClientToken:(id)a0;
- (id)secCertificates;
- (void)setSecIdentity:(struct __SecIdentity { } *)a0;
- (void)_applyDirtyStateFromAccount:(id)a0;
- (void)_cacheParentAccountID;
- (id)_cachedParentAccountID;
- (void)_clearCachedChildAccounts;
- (void)_clearCachedCredentials;
- (void)_clearCachedTrackedSets;
- (void)_installCredentialsChangedObserver;
- (BOOL)_isDifferentFrom:(id)a0;
- (void)_loadAllCachedProperties;
- (void)_markAccountPropertyDirty:(id)a0;
- (void)_markCredentialDirty;
- (void)_markDataclassPropertyDirty:(id)a0;
- (void)_resetParentAccount:(id)a0;
- (void)_setAccountStore:(id)a0;
- (void)_setModID:(id)a0;
- (void)_setObjectID:(id)a0;
- (void)_unsafe_loadEnabledDataclasses;
- (void)_unsafe_loadProvisionedDataclasses;
- (void)_unsafe_markAccountPropertyDirty:(id)a0;
- (void)_unsafe_markDataclassPropertyDirty:(id)a0;
- (void)_unsafe_markPropertyDirty:(id)a0;
- (BOOL)_useParentForCredentials;
- (id)accountByCleaningThirdPartyTransformations;
- (BOOL)authenticated;
- (id)changeTypeForEnabledDataclass:(id)a0;
- (id)changeTypeForProvisionedDataclass:(id)a0;
- (id)childAccountsWithAccountTypeIdentifier:(id)a0;
- (id)childCardDAVAccountIdentifier;
- (BOOL)correctPersonaScopedForAccount;
- (id)credentialWithError:(id *)a0;
- (void)credentialsChanged:(id)a0;
- (id)defaultAutodiscoverDomainForChildType:(id)a0;
- (id)initWithManagedAccount:(id)a0;
- (id)initWithManagedAccount:(id)a0 accountStore:(id)a1;
- (BOOL)isDataSeparatedAccount;
- (BOOL)isEnabledToSyncDataclass:(id)a0;
- (id)portableCopy;
- (id)qualifiedUsername;
- (void)setAccountProperties:(id)a0;
- (void)setAuthenticationType:(id)a0;
- (void)setChildCardDAVAccountIdentifier:(id)a0;
- (void)setDataclassProperties:(id)a0;
- (void)setDirty:(BOOL)a0 forProperty:(id)a1;
- (void)setProperties:(id)a0 forDataclass:(id)a1;
- (void)setProvisioned:(BOOL)a0 forDataclass:(id)a1;
- (void)setSecCertificates:(id)a0;
- (void)takeValuesFromModifiedAccount:(id)a0;

@end

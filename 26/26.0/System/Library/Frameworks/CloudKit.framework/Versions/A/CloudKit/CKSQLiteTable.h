@class CKSQLiteTableGroup, NSString, CKSQLiteDatabase, NSObject, NSNumber;

@interface CKSQLiteTable : NSObject {
    CKSQLiteDatabase *_db;
    _Atomic unsigned int _flags;
    BOOL _suppressForeignKeyErrors;
}

@property (weak, nonatomic) CKSQLiteTableGroup *tableGroup;
@property (retain, nonatomic) NSObject *databaseManagerData;
@property (retain, nonatomic) id tocTableEntry;
@property (retain, nonatomic) NSNumber *tableID;
@property (nonatomic) BOOL ignoreCompiledStatementLabelsForTests;
@property (readonly, nonatomic) NSString *logicalTableName;
@property (readonly, nonatomic) NSString *dbTableName;
@property (readonly, nonatomic) NSString *primaryKey;
@property (readonly, nonatomic) BOOL databaseTableWasCreated;
@property (nonatomic) BOOL logOperations;

+ (unsigned long long)dbVersion;
+ (void)initialize;
+ (id)defaultLogicalTableName;
+ (Class)entryClass;
+ (id)allPropertyNames;
+ (id)objectClassesForProperty:(id)a0;
+ (id)dbProperties;
+ (void)enumeratePropertyDataWithBlock:(id /* block */)a0;
+ (void)addSingletonInstanceToGroup:(id)a0;
+ (id)copyOfEntry:(id)a0;
+ (void)decodeEntry:(id)a0 withCoder:(id)a1;
+ (id)descriptionOfEntry:(id)a0;
+ (id)descriptionOfProperties:(id)a0 from:(id)a1;
+ (void)encodeEntry:(id)a0 withCoder:(id)a1;
+ (BOOL)entriesHaveEqualProperties:(id)a0 other:(id)a1 includePrimaryKey:(BOOL)a2;
+ (void)enumerateClassPropertyDictionariesWithBlock:(id /* block */)a0;
+ (id)flattenedDBProperties;
+ (void)flushCompiledStatementCache;
+ (unsigned long long)hashForEntry:(id)a0;
+ (id)nonKeyProperties;
+ (unsigned int)propertyCount;
+ (unsigned int)propertyInfo:(id)a0;
+ (void)setValue:(id)a0 forProperty:(id)a1 propertyInfo:(unsigned int)a2 inObject:(id)a3;
+ (id)singletonInstanceInGroup:(id)a0;
+ (Class)tableClassWithName:(id)a0 properties:(id)a1 version:(unsigned long long)a2 entryClass:(Class)a3;
+ (BOOL)useNSCoding;
+ (id)valueForProperty:(id)a0 propertyInfo:(unsigned int)a1 inObject:(id)a2;
+ (id)valueForProperty:(id)a0 propertyInfo:(unsigned int)a1 inObject:(id)a2 allowFetchingUnsetPropertySentinel:(BOOL)a3;

- (id)deleteObject:(id)a0;
- (void)dealloc;
- (id)insertObject:(id)a0;
- (id)initWithLogicalTableName:(id)a0;
- (id)createTableSQL;
- (id)performTransaction:(id /* block */)a0;
- (id)db;
- (void)willAddToGroup:(id)a0;
- (id)init;
- (void)addTransactionCompletionHandler:(id /* block */)a0;
- (id)wakeFromDatabase;
- (id)description;
- (void)cacheStatement:(id)a0;
- (id)deletePrimaryKeyValue:(id)a0;
- (void)serialize:(id /* block */)a0;
- (void)setDbTableName:(id)a0;
- (id)tableForReferenceProperty:(id)a0;
- (BOOL)migrateEntryDataFromTable:(id)a0 entry:(id)a1 toEntry:(id)a2 addedProperties:(id)a3;
- (unsigned long long)count:(id *)a0;
- (void).cxx_destruct;
- (id)entryEnumerator;
- (BOOL)hasEntry:(id)a0 error:(id *)a1;
- (id)fetchProperties:(id)a0 inObject:(id)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2;
- (BOOL)shouldLogError:(id)a0;
- (id)UUIDValueForKey:(id)a0 error:(id *)a1;
- (void)_addPredicateForMatching:(id)a0 toStatement:(id)a1;
- (id)_bindProperties:(id)a0 valueObject:(id)a1 inStatement:(id)a2 includePrimaryKey:(BOOL)a3;
- (id)_fetchProperties:(id)a0 distinct:(BOOL)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2 error:(id *)a3;
- (id)_fetchPropertiesUsingStatement:(id)a0 inObject:(id)a1 matchingDBProperties:(id)a2 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a3;
- (id)_performInsertOrUpdateStatement:(id)a0 usingObject:(id)a1;
- (id)_predicateForMatchingProperties:(id)a0;
- (void)_setupActivityEntry:(id)a0;
- (id)_statementForFetchingEntriesMatchingObject:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 setupBlock:(id /* block */)a2;
- (BOOL)_useTemporaryTables;
- (id)_valueDictionaryForProperties:(id)a0 inObject:(id)a1 nilPropertyError:(id *)a2 selForNilPropertyError:(SEL)a3;
- (void)activityTriggerWasRolledBack;
- (void)activityTriggered:(id)a0;
- (void)addPredicateToStatement:(id)a0 predicate:(id /* block */)a1;
- (id)checkConstraintForProperty:(id)a0 info:(unsigned int)a1;
- (id)compiledStatementWithLabel:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a0 creationBlock:(id /* block */)a1;
- (unsigned long long)countOfEntriesMatching:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2 predicate:(id /* block */)a3;
- (id)createTriggerSQL;
- (id)dataValueForKey:(id)a0 error:(id *)a1;
- (id)dateValueForKey:(id)a0 error:(id *)a1;
- (void)defaultSearchOrder:(id)a0;
- (unsigned long long)deleteAllEntries:(id *)a0;
- (unsigned long long)deleteEntriesMatching:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2 predicate:(id /* block */)a3;
- (id)didCreateDatabaseTable;
- (id)entriesMatchingObject:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 setupBlock:(id /* block */)a2;
- (id)entriesWithValues:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 setupBlock:(id /* block */)a2;
- (id)entryEnumeratorWithLabel:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a0 setupBlock:(id /* block */)a1;
- (id)entryWithPrimaryKey:(id)a0 error:(id *)a1;
- (id)entryWithPrimaryKey:(id)a0 fetchProperties:(id)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2 error:(id *)a3;
- (id)entryWithValues:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2 setupBlock:(id /* block */)a3;
- (id)enumerateEntriesWithBlock:(id /* block */)a0;
- (id)fetchAllEntries:(id *)a0;
- (id)fetchAllProperties:(id)a0;
- (id)fetchDistinctProperties:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2;
- (id)fetchProperties:(id)a0 inObject:(id)a1 matchingDBProperties:(id)a2 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a3;
- (id)fetchProperties:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2;
- (id)finishInitializing;
- (BOOL)hasEntries:(id *)a0;
- (BOOL)hasEntriesMatching:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2 predicate:(id /* block */)a3;
- (BOOL)hasEntryWithPrimaryKey:(id)a0 error:(id *)a1;
- (id)insertObject:(id)a0 orUpdateProperties:(id)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2;
- (id)maximumValueOfProperty:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2;
- (BOOL)migrateDataFromTable:(id)a0 error:(id *)a1;
- (id)minimumValueOfProperty:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2;
- (id)newEntryObject;
- (id)newEntryObjectFromStatement:(id)a0 error:(id *)a1;
- (id)numberValueForKey:(id)a0 error:(id *)a1;
- (id)objectReferenceProperties;
- (id)performInTransaction:(id /* block */)a0;
- (id)predicateForMatchingPrimaryKey;
- (id)primaryKeyValueInEntry:(id)a0;
- (id)referenceIDValueForProperty:(id)a0 inEntry:(id)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2 error:(id *)a3;
- (id)requestCallbackWithDate:(id)a0 coalescingInterval:(double)a1 minimumSeparation:(double)a2;
- (id)setDataValue:(id)a0 forKey:(id)a1;
- (id)setDateValue:(id)a0 forKey:(id)a1;
- (id)setNumberValue:(id)a0 forKey:(id)a1;
- (void)setPrimaryKeyValue:(id)a0 inEntry:(id)a1;
- (unsigned long long)setProperties:(id)a0 valuesToStore:(id)a1 inEntriesMatching:(id)a2 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a3 error:(id *)a4 predicate:(id /* block */)a5;
- (id)setStringValue:(id)a0 forKey:(id)a1;
- (id)setUUIDValue:(id)a0 forKey:(id)a1;
- (void)setValue:(id)a0 forProperty:(id)a1 propertyInfo:(unsigned int)a2 inObject:(id)a3;
- (long long)sizeOfProperty:(id)a0 inEntriesMatching:(id)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2 error:(id *)a3 predicate:(id /* block */)a4;
- (long long)sizeOfProperty:(id)a0 inEntry:(id)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2 error:(id *)a3;
- (long long)sizeOfProperty:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2;
- (id)statementForFetchingProperties:(id)a0 distinct:(BOOL)a1 inEntriesMatchingColumns:(id)a2;
- (id)stringValueForKey:(id)a0 error:(id *)a1;
- (long long)sumOfProperty:(id)a0 inEntriesMatching:(id)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2 error:(id *)a3 predicate:(id /* block */)a4;
- (long long)sumOfProperty:(id)a0 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a1 error:(id *)a2;
- (id)updateProperties:(id)a0 usingObject:(id)a1 label:(struct _CKSQLiteCompiledStatementLabel { char *x0; char *x1; int x2; } *)a2;
- (id)updateUsingObject:(id)a0;
- (id)validateTableMatchesTOCEntry;
- (id)valueForProperty:(id)a0 propertyInfo:(unsigned int)a1 inObject:(id)a2;

@end

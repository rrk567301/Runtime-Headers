@class NSUUID, NSDate, NSArray, NSString, NSOrderedSet, CKRecordID, NSDictionary, CKServerChangeToken, CKSyncEngineAccount, NSMutableDictionary, NSObject, NSMutableOrderedSet;
@protocol OS_dispatch_queue;

@interface CKSyncEngineState : NSObject <NSSecureCoding> {
    NSMutableDictionary *_zoneStateByZoneID;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableOrderedSet *_zoneIDsNeedingToFetchChangesSet;
    NSMutableOrderedSet *_pendingDatabaseChangesSet;
    NSMutableOrderedSet *_inFlightDatabaseChangesSet;
    NSMutableOrderedSet *_pendingRecordZoneChangesSet;
    NSMutableOrderedSet *_inFlightRecordChangesSet;
    NSMutableOrderedSet *_pendingAutomaticSyncZoneIDsSet;
    NSMutableOrderedSet *_pendingAssetSyncsSet;
    NSMutableOrderedSet *_inFlightAssetSyncSet;
    NSMutableOrderedSet *_pendingAutomaticSyncAssetsSyncsSet;
    unsigned long long _internalChangeCount;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly) NSArray *zoneState;
@property (copy) NSOrderedSet *fakeRecordIDsToSaveForSerializationTests;
@property (copy) NSOrderedSet *fakeRecordIDsToDeleteForSerializationTests;
@property (copy) NSDictionary *fakeZonesToSaveForSerializationTests;
@property (copy) NSOrderedSet *fakeZoneIDsToSaveForSerializationTests;
@property (copy) NSOrderedSet *fakeZoneIDsToDeleteForSerializationTests;
@property (readonly, copy, nonatomic) NSUUID *identifier;
@property (copy, nonatomic) id /* block */ changeHandler;
@property (readonly, nonatomic) unsigned long long changeCount;
@property (copy) NSArray *pendingRecordZoneChanges;
@property (copy) NSArray *pendingDatabaseChanges;
@property BOOL needsToFetchDatabaseChanges;
@property BOOL needsToSaveDatabaseSubscription;
@property (copy) NSDate *lastFetchDatabaseChangesDate;
@property (copy, nonatomic) NSString *existingDatabaseSubscriptionID;
@property (readonly, nonatomic) NSArray *inFlightDatabaseChanges;
@property (readonly, nonatomic) NSArray *inFlightRecordChanges;
@property (readonly, nonatomic) NSArray *inFlightAssetSyncs;
@property (readonly, copy) NSArray *pendingAutomaticSyncAssetSyncs_fetch_Assets;
@property (readonly, copy) NSArray *pendingAssetSyncs_fetch_Assets;
@property (readonly, copy) NSArray *inFlightAssetSyncs_fetch_Assets;
@property (copy) CKSyncEngineAccount *lastAccount;
@property (readonly, copy) CKRecordID *lastKnownUserRecordID;
@property BOOL hasInFlightUntrackedChanges;
@property (copy) NSString *loggingID;
@property BOOL scheduledSyncInProgress;
@property (readonly, copy) NSArray *pendingAutomaticSyncZoneIDs;
@property (readonly, copy) NSArray *pendingAutomaticSyncAssetSyncs;
@property (retain) CKServerChangeToken *serverChangeTokenForDatabase;
@property (copy) NSArray *pendingAssetSyncs;
@property BOOL hasPendingUntrackedChanges;
@property (readonly, copy) NSArray *zoneIDsWithUnfetchedServerChanges;

+ (id)emptyState;

- (id)initWithData:(id)a0 error:(id *)a1;
- (unsigned long long)weight;
- (void)reset;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)a0 private:(BOOL)a1 shouldExpand:(BOOL)a2;
- (void)encodeWithCoder:(id)a0;
- (id)init;
- (id)initInternal;
- (id)description;
- (id)initWithCoder:(id)a0;
- (id)shortDescription;
- (void).cxx_destruct;
- (id)redactedDescription;
- (void)markRecordZoneChanges:(id)a0 inFlight:(BOOL)a1;
- (void)moveInFlightAssetSyncsToPending;
- (void)setServerChangeToken:(id)a0 forZoneID:(id)a1;
- (void)removePendingRecordZoneChanges:(id)a0;
- (void)addPendingAssetSyncs:(id)a0;
- (void)addPendingAssetSyncs_fetch:(id)a0;
- (void)addPendingDatabaseChanges:(id)a0;
- (void)addPendingRecordZoneChanges:(id)a0;
- (BOOL)containsInFlightRecordZoneChange:(id)a0;
- (BOOL)containsPendingRecordZoneChange:(id)a0;
- (id)fetchChangesZoneConfigurationForZoneID:(id)a0;
- (void)getDataRepresentation:(id /* block */)a0;
- (id)initWithStateSerialization:(id)a0 error:(id *)a1;
- (void)markAssetSync:(id)a0 inFlight:(BOOL)a1;
- (void)markDatabaseChanges:(id)a0 inFlight:(BOOL)a1;
- (void)mark_assetFetch:(id)a0 inFlight:(BOOL)a1;
- (void)moveInFlightDatabaseChangesToPending;
- (void)moveInFlightRecordZoneChangesToPending;
- (BOOL)needsToDeleteZoneID:(id)a0;
- (BOOL)needsToFetchChangesForZoneID:(id)a0;
- (BOOL)needsToSaveZoneID:(id)a0;
- (void)notifyChangeHandlerWithCoalescing:(BOOL)a0 scheduleSync:(BOOL)a1;
- (void)purgeLegacyLastKnownUserRecordIDIfNecessary;
- (void)purgePendingAutomaticSyncAssetSyncs;
- (void)purgePendingAutomaticSyncZoneIDs;
- (void)removeInFlightAssetSync:(id)a0;
- (void)removeInFlightDatabaseChanges:(id)a0;
- (void)removeInFlightRecordZoneChanges:(id)a0;
- (void)removePendingAssetSyncs:(id)a0;
- (void)removePendingAssetSyncs_fetch:(id)a0;
- (void)removePendingDatabaseChanges:(id)a0;
- (void)removeRecordZoneWithZoneID:(id)a0;
- (id)serverChangeTokenForZoneID:(id)a0;
- (id)serverChangeTokenForZoneID:(id)a0 exists:(BOOL *)a1;
- (id)serverChangeTokensByZoneID;
- (void)setInitialValues;
- (void)setLastKnownUserRecordID:(id)a0;
- (void)setNeedsToFetchChanges:(BOOL)a0 forRecordZoneID:(id)a1;
- (void)setNeedsToFetchDatabaseChanges:(BOOL)a0 postStateUpdate:(BOOL)a1;
- (void)trackPendingAssetSyncDuringAutomaticSync:(id)a0;
- (void)trackPendingZoneIDDuringAutomaticSync:(id)a0;
- (void)unTrackPendingAssetSyncDuringAutomaticSync:(id)a0;
- (void)unTrackPendingZoneIDDuringAutomaticSync:(id)a0;

@end

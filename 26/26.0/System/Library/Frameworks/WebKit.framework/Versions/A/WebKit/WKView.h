@class WKViewData, NSString, NSView, WKBrowsingContextController, NSTouchBar, _WKThumbnailView, NSColor;

@interface WKView : NSView <NSFilePromiseProviderDelegate, NSDraggingSource, NSScrollViewSeparatorTrackingAdapter, NSTouchBarProvider, WebViewImplDelegate, NSTextInputClient> {
    WKViewData *_data;
    unsigned int _unused;
}

@property (readonly) struct OpaqueWKPage { } *pageRef;
@property struct CGSize { double x0; double x1; } minimumSizeForAutoLayout;
@property struct CGSize { double x0; double x1; } sizeToContentAutoSizeMaximumSize;
@property BOOL shouldClipToVisibleRect;
@property BOOL shouldExpandToViewHeightForAutoLayout;
@property (readonly, getter=isUsingUISideCompositing) BOOL usingUISideCompositing;
@property BOOL allowsMagnification;
@property double magnification;
@property (setter=_setIgnoresNonWheelEvents:) BOOL _ignoresNonWheelEvents;
@property (setter=_setIgnoresAllEvents:) BOOL _ignoresAllEvents;
@property BOOL allowsBackForwardNavigationGestures;
@property (nonatomic, setter=_setTopContentInset:) double _topContentInset;
@property (nonatomic, setter=_setTotalHeightOfBanners:) double _totalHeightOfBanners;
@property (nonatomic, setter=_setOverlayScrollbarStyle:) unsigned long long _overlayScrollbarStyle;
@property (nonatomic, setter=_setLayoutMode:) unsigned int _layoutMode;
@property (nonatomic, setter=_setFixedLayoutSize:) struct CGSize { double x0; double x1; } _fixedLayoutSize;
@property (nonatomic, setter=_setViewScale:) double _viewScale;
@property (nonatomic, setter=_setOverrideDeviceScaleFactor:) double _overrideDeviceScaleFactor;
@property (nonatomic, setter=_setAutomaticallyAdjustsContentInsets:) BOOL _automaticallyAdjustsContentInsets;
@property (copy, nonatomic) NSColor *underlayColor;
@property (nonatomic, setter=_setBackgroundColor:) NSColor *_backgroundColor;
@property (retain, nonatomic, setter=_setInspectorAttachmentView:) NSView *_inspectorAttachmentView;
@property (nonatomic, setter=_setWantsMediaPlaybackControlsView:) BOOL _wantsMediaPlaybackControlsView;
@property (readonly, nonatomic) id _mediaPlaybackControlsView;
@property (nonatomic, setter=_setUseSystemAppearance:) BOOL _useSystemAppearance;
@property (nonatomic, setter=_setThumbnailView:) _WKThumbnailView *_thumbnailView;
@property (readonly) WKBrowsingContextController *browsingContextController;
@property BOOL drawsBackground;
@property BOOL drawsTransparentBackground;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewFrame;
@property (readonly) BOOL hasScrolledContentsUnderTitlebar;
@property (readonly) double separatorOffset;
@property (readonly) BOOL relaxRegistrationRequirements;
@property (readonly) BOOL hasHeader;
@property long long titlebarBackgroundStyle;
@property (readonly) NSTouchBar *touchBar;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } unionRectInVisibleSelectedRange;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } documentVisibleRect;
@property (readonly) BOOL supportsAdaptiveImageGlyph;

+ (void)hideWordDefinitionWindow;

- (void)selectAll:(id)a0;
- (void)unmarkText;
- (void)uppercaseWord:(id)a0;
- (void)copyFont:(id)a0;
- (void)swipeWithEvent:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })markedRange;
- (BOOL)validateUserInterfaceItem:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectedRange;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)moveForward:(id)a0;
- (void)pasteFont:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseUp:(id)a0;
- (BOOL)hasMarkedText;
- (void)alignLeft:(id)a0;
- (BOOL)isOpaque;
- (void)viewWillMoveToWindow:(id)a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)alignRight:(id)a0;
- (void)lowercaseWord:(id)a0;
- (void)makeTextWritingDirectionNatural:(id)a0;
- (void)makeTextWritingDirectionLeftToRight:(id)a0;
- (void)updateLayer;
- (void)mouseDragged:(id)a0;
- (void)dealloc;
- (void)keyDown:(id)a0;
- (void)setGrammarCheckingEnabled:(BOOL)a0;
- (BOOL)resignFirstResponder;
- (void)paste:(id)a0;
- (BOOL)isFlipped;
- (BOOL)becomeFirstResponder;
- (void)copy:(id)a0;
- (long long)conversationIdentifier;
- (void)endPreviewPanelControl:(id)a0;
- (void)insertText:(id)a0;
- (void)cut:(id)a0;
- (void)doCommandBySelector:(SEL)a0;
- (unsigned long long)characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)beginPreviewPanelControl:(id)a0;
- (void)capitalizeWord:(id)a0;
- (void)insertNewline:(id)a0;
- (void)makeTextWritingDirectionRightToLeft:(id)a0;
- (void)alignJustified:(id)a0;
- (void)alignCenter:(id)a0;
- (void)viewDidMoveToWindow;
- (void)viewDidChangeBackingProperties;
- (void)viewDidChangeEffectiveAppearance;
- (void)moveBackward:(id)a0;
- (BOOL)acceptsPreviewPanelControl:(id)a0;
- (void)deleteBackward:(id)a0;
- (void)draggedImage:(id)a0 endedAt:(struct CGPoint { double x0; double x1; })a1 operation:(unsigned long long)a2;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (void)moveUp:(id)a0;
- (void)rightMouseDown:(id)a0;
- (void)scrollPageDown:(id)a0;
- (void)changeSpelling:(id)a0;
- (void)delete:(id)a0;
- (void)draggingExited:(id)a0;
- (void)ignoreSpelling:(id)a0;
- (void)indent:(id)a0;
- (void)moveBackwardAndModifySelection:(id)a0;
- (void)moveWordLeftAndModifySelection:(id)a0;
- (void)otherMouseDown:(id)a0;
- (void)pageUp:(id)a0;
- (void)scrollLineDown:(id)a0;
- (void)showGuessPanel:(id)a0;
- (void)toggleAutomaticTextReplacement:(id)a0;
- (long long)_addTrackingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 owner:(id)a1 userData:(void *)a2 assumeInside:(BOOL)a3 useTrackingNum:(int)a4;
- (void)_addTrackingRects:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 owner:(id)a1 userDataList:(void **)a2 assumeInsideList:(BOOL *)a3 trackingNums:(long long *)a4 count:(int)a5;
- (id)_hitTest:(struct CGPoint { double x0; double x1; } *)a0 dragTypes:(id)a1;
- (void)_removeTrackingRects:(long long *)a0 count:(int)a1;
- (void)_setSemanticContext:(long long)a0;
- (BOOL)_wantsKeyDownForEvent:(id)a0;
- (BOOL)_windowResizeMouseLocationIsInVisibleScrollerThumb:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)acceptsFirstMouse:(id)a0;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityAttributeValue:(id)a0;
- (id)accessibilityAttributeValue:(id)a0 forParameter:(id)a1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityParameterizedAttributeNames;
- (long long)addTrackingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 owner:(id)a1 userData:(void *)a2 assumeInside:(BOOL)a3;
- (id)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (id)candidateListTouchBarItem;
- (void)centerSelectionInVisibleArea:(id)a0;
- (void)changeFont:(id)a0;
- (void)characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0 completionHandler:(id /* block */)a1;
- (void)checkSpelling:(id)a0;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)a0;
- (void)deleteForward:(id)a0;
- (void)deleteToBeginningOfLine:(id)a0;
- (void)deleteToBeginningOfParagraph:(id)a0;
- (void)deleteToEndOfLine:(id)a0;
- (void)deleteToEndOfParagraph:(id)a0;
- (void)deleteToMark:(id)a0;
- (void)deleteWordBackward:(id)a0;
- (void)deleteWordForward:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (void)draggingSession:(id)a0 endedAtPoint:(struct CGPoint { double x0; double x1; })a1 operation:(unsigned long long)a2;
- (unsigned long long)draggingSession:(id)a0 sourceOperationMaskForDraggingContext:(long long)a1;
- (unsigned long long)draggingUpdated:(id)a0;
- (id)filePromiseProvider:(id)a0 fileNameForType:(id)a1;
- (void)filePromiseProvider:(id)a0 writePromiseToURL:(id)a1 completionHandler:(id /* block */)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (void)flagsChanged:(id)a0;
- (void)hasMarkedTextWithCompletionHandler:(id /* block */)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)inputContext;
- (void)insertBacktab:(id)a0;
- (void)insertLineBreak:(id)a0;
- (void)insertNewlineIgnoringFieldEditor:(id)a0;
- (void)insertParagraphSeparator:(id)a0;
- (void)insertTab:(id)a0;
- (void)insertTabIgnoringFieldEditor:(id)a0;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isGrammarCheckingEnabled;
- (void)keyUp:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (id)makeTouchBar;
- (void)markedRangeWithCompletionHandler:(id /* block */)a0;
- (BOOL)mouseDownCanMoveWindow;
- (void)moveDown:(id)a0;
- (void)moveDownAndModifySelection:(id)a0;
- (void)moveForwardAndModifySelection:(id)a0;
- (void)moveLeft:(id)a0;
- (void)moveLeftAndModifySelection:(id)a0;
- (void)moveParagraphBackwardAndModifySelection:(id)a0;
- (void)moveParagraphForwardAndModifySelection:(id)a0;
- (void)moveRight:(id)a0;
- (void)moveRightAndModifySelection:(id)a0;
- (void)moveToBeginningOfDocument:(id)a0;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)a0;
- (void)moveToBeginningOfLine:(id)a0;
- (void)moveToBeginningOfLineAndModifySelection:(id)a0;
- (void)moveToBeginningOfParagraph:(id)a0;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)a0;
- (void)moveToEndOfDocument:(id)a0;
- (void)moveToEndOfDocumentAndModifySelection:(id)a0;
- (void)moveToEndOfLine:(id)a0;
- (void)moveToEndOfLineAndModifySelection:(id)a0;
- (void)moveToEndOfParagraph:(id)a0;
- (void)moveToEndOfParagraphAndModifySelection:(id)a0;
- (void)moveToLeftEndOfLine:(id)a0;
- (void)moveToLeftEndOfLineAndModifySelection:(id)a0;
- (void)moveToRightEndOfLine:(id)a0;
- (void)moveToRightEndOfLineAndModifySelection:(id)a0;
- (void)moveUpAndModifySelection:(id)a0;
- (void)moveWordBackward:(id)a0;
- (void)moveWordBackwardAndModifySelection:(id)a0;
- (void)moveWordForward:(id)a0;
- (void)moveWordForwardAndModifySelection:(id)a0;
- (void)moveWordLeft:(id)a0;
- (void)moveWordRight:(id)a0;
- (void)moveWordRightAndModifySelection:(id)a0;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)a0;
- (void)orderFrontSubstitutionsPanel:(id)a0;
- (void)otherMouseDragged:(id)a0;
- (void)otherMouseUp:(id)a0;
- (void)pageDown:(id)a0;
- (void)pageDownAndModifySelection:(id)a0;
- (void)pageUpAndModifySelection:(id)a0;
- (void)pasteAsPlainText:(id)a0;
- (void)pasteboard:(id)a0 provideDataForType:(id)a1;
- (void)pasteboardChangedOwner:(id)a0;
- (BOOL)performDragOperation:(id)a0;
- (BOOL)performKeyEquivalent:(id)a0;
- (void)prepareContentInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)prepareForDragOperation:(id)a0;
- (void)pressureChangeWithEvent:(id)a0;
- (void)quickLookWithEvent:(id)a0;
- (BOOL)readSelectionFromPasteboard:(id)a0;
- (void)removeTrackingRect:(long long)a0;
- (void)renewGState;
- (void)rightMouseDragged:(id)a0;
- (void)rightMouseUp:(id)a0;
- (void)rotateWithEvent:(id)a0;
- (void)scrollLineUp:(id)a0;
- (void)scrollPageUp:(id)a0;
- (void)scrollToBeginningOfDocument:(id)a0;
- (void)scrollToEndOfDocument:(id)a0;
- (void)scrollWheel:(id)a0;
- (void)selectLine:(id)a0;
- (void)selectParagraph:(id)a0;
- (void)selectToMark:(id)a0;
- (void)selectWord:(id)a0;
- (void)selectedRangeWithCompletionHandler:(id /* block */)a0;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)a0;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)a0;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)a0;
- (void)setAutomaticTextReplacementEnabled:(BOOL)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)setMagnification:(double)a0 centeredAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)setMark:(id)a0;
- (void)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setUserInterfaceLayoutDirection:(long long)a0;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)a0;
- (void)smartMagnifyWithEvent:(id)a0;
- (void)startSpeaking:(id)a0;
- (void)stopSpeaking:(id)a0;
- (void)subscript:(id)a0;
- (void)superscript:(id)a0;
- (void)swapWithMark:(id)a0;
- (void)toggleAutomaticDashSubstitution:(id)a0;
- (void)toggleAutomaticLinkDetection:(id)a0;
- (void)toggleAutomaticQuoteSubstitution:(id)a0;
- (void)toggleAutomaticSpellingCorrection:(id)a0;
- (void)toggleContinuousSpellChecking:(id)a0;
- (void)toggleGrammarChecking:(id)a0;
- (void)toggleSmartInsertDelete:(id)a0;
- (void)transpose:(id)a0;
- (void)underline:(id)a0;
- (void)unscript:(id)a0;
- (id)validAttributesForMarkedText;
- (id)validRequestorForSendType:(id)a0 returnType:(id)a1;
- (id)view:(id)a0 stringForToolTip:(long long)a1 point:(struct CGPoint { double x0; double x1; })a2 userData:(void *)a3;
- (void)viewDidEndLiveResize;
- (void)viewDidHide;
- (void)viewDidUnhide;
- (void)viewWillStartLiveResize;
- (BOOL)wantsUpdateLayer;
- (BOOL)writeSelectionToPasteboard:(id)a0 types:(id)a1;
- (void)yank:(id)a0;
- (void)yankAndSelect:(id)a0;
- (void)selectSentence:(id)a0;
- (BOOL)windowOcclusionDetectionEnabled;
- (id)fullScreenPlaceholderView;
- (void)moveToBeginningOfSentence:(id)a0;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)a0;
- (void)moveToEndOfSentence:(id)a0;
- (void)moveToEndOfSentenceAndModifySelection:(id)a0;
- (void)outdent:(id)a0;
- (void)setWindowOcclusionDetectionEnabled:(BOOL)a0;
- (void)takeFindStringFromSelection:(id)a0;
- (BOOL)_web_superPerformKeyEquivalent:(id)a0;
- (void)_cancelImmediateActionAnimation;
- (void)_doAfterNextPresentationUpdate:(id /* block */)a0;
- (void)_setIgnoresNonWheelMouseEvents:(BOOL)a0;
- (void)endDeferringViewInWindowChanges;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 configurationRef:(struct OpaqueWKPageConfiguration { } *)a1;
- (void)saveBackForwardSnapshotForItem:(struct OpaqueWKBackForwardListItem { } *)a0;
- (void)_activeSpaceDidChange:(id)a0;
- (void)_addMediaPlaybackControlsView:(id)a0;
- (void)_completeImmediateActionAnimation;
- (void)_didChangeContentSize:(struct CGSize { double x0; double x1; })a0;
- (void)_didHandleAcceptedCandidate;
- (void)_didUpdateCandidateListVisibility:(BOOL)a0;
- (void)_dismissContentRelativeChildWindows;
- (void)_dismissContentRelativeChildWindowsWithAnimation:(BOOL)a0;
- (void)_gestureEventWasNotHandledByWebCore:(id)a0;
- (id)_immediateActionAnimationControllerForHitTestResult:(struct OpaqueWKHitTestResult { } *)a0 withType:(unsigned int)a1 userData:(void *)a2;
- (void)_prepareForImmediateActionAnimation;
- (void)_prepareForMoveToWindow:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)_removeMediaPlaybackControlsView;
- (void)_setCustomSwipeViews:(id)a0;
- (void)_setCustomSwipeViewsTopContentInset:(float)a0;
- (void)_setDidMoveSwipeSnapshotCallback:(id /* block */)a0;
- (void)_setShouldSuppressFirstResponderChanges:(BOOL)a0;
- (void)_simulateMouseMove:(id)a0;
- (BOOL)_tryToSwipeWithEvent:(id)a0 ignoringPinnedState:(BOOL)a1;
- (void)_web_cancelImmediateActionAnimation;
- (void)_web_completeImmediateActionAnimation;
- (void)_web_didAddMediaControlsManager:(id)a0;
- (void)_web_didChangeContentSize:(struct CGSize { double x0; double x1; })a0;
- (void)_web_didPerformDragOperation:(BOOL)a0;
- (void)_web_didRemoveMediaControlsManager;
- (void)_web_dismissContentRelativeChildWindows;
- (void)_web_dismissContentRelativeChildWindowsWithAnimation:(BOOL)a0;
- (unsigned long long)_web_dragDestinationActionForDraggingInfo:(id)a0;
- (void)_web_editorStateDidChange;
- (void)_web_gestureEventWasNotHandledByWebCore:(id)a0;
- (id)_web_immediateActionAnimationControllerForHitTestResultInternal:(void *)a0 withType:(unsigned int)a1 userData:(struct Object { void /* function */ **x0; void *x1; } *)a2;
- (void)_web_prepareForImmediateActionAnimation;
- (id)_web_superAccessibilityAttributeValue:(id)a0;
- (void)_web_superDoCommandBySelector:(SEL)a0;
- (id)_web_superHitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)_web_superInputContext;
- (void)_web_superKeyDown:(id)a0;
- (void)_web_superMagnifyWithEvent:(id)a0;
- (void)_web_superQuickLookWithEvent:(id)a0;
- (void)_web_superRemoveTrackingRect:(long long)a0;
- (void)_web_superSmartMagnifyWithEvent:(id)a0;
- (void)_web_superSwipeWithEvent:(id)a0;
- (BOOL)allowsLinkPreview;
- (void)beginDeferringViewInWindowChanges;
- (BOOL)canChangeFrameLayout:(struct OpaqueWKFrame { } *)a0;
- (id)createFullScreenWindow;
- (void)disableFrameSizeUpdates;
- (void)enableFrameSizeUpdates;
- (void)endDeferringViewInWindowChangesSync;
- (BOOL)frameSizeUpdatesDisabled;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 contextRef:(struct OpaqueWKContext { } *)a1 pageGroupRef:(struct OpaqueWKPageGroup { } *)a2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 contextRef:(struct OpaqueWKContext { } *)a1 pageGroupRef:(struct OpaqueWKPageGroup { } *)a2 relatedToPage:(struct OpaqueWKPage { } *)a3;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 processPool:(struct reference_wrapper<WebKit::WebProcessPool> { struct WebProcessPool *x0; })a1 configuration:(void *)a2;
- (BOOL)isDeferringViewInWindowChanges;
- (void)maybeInstallIconLoadingClient;
- (id)printOperationWithPrintInfo:(id)a0 forFrame:(struct OpaqueWKFrame { } *)a1;
- (void)saveBackForwardSnapshotForCurrentItem;
- (void)setAllowsLinkPreview:(BOOL)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 andScrollBy:(struct CGSize { double x0; double x1; })a1;

@end

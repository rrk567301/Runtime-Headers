@class DOMCSSStyleDeclaration, NSTouchBar, WebBackForwardList, WebScriptObject, WebViewPrivate, NSImage, NSString, DOMDocument, NSUndoManager, DOMRange, WebPreferences, NSArray, NSData, NSWindow, WebFrame;
@protocol WebFrameLoadDelegate, WebPolicyDelegate, WebDownloadDelegate, WebResourceLoadDelegate, WebUIDelegate, WebEditingDelegate;

@interface WebView : NSView <NSUserInterfaceValidations, NSCandidateListTouchBarItemDelegate, NSTouchBarDelegate, NSTouchBarProvider> {
    WebViewPrivate *_private;
}

@property (class, readonly, nonatomic) BOOL _canHandleContextMenuTranslation;

@property (nonatomic, setter=_setUseDarkAppearance:) BOOL _useDarkAppearance;
@property (nonatomic, setter=_setUseElevatedUserInterfaceLevel:) BOOL _useElevatedUserInterfaceLevel;
@property (copy, nonatomic, getter=_sourceApplicationAuditData, setter=_setSourceApplicationAuditData:) NSData *sourceApplicationAuditData;
@property (nonatomic, setter=_setUnobscuredSafeAreaInsets:) struct WebEdgeInsets { double x0; double x1; double x2; double x3; } _unobscuredSafeAreaInsets;
@property (nonatomic, setter=_setUseSystemAppearance:) BOOL _useSystemAppearance;
@property (readonly, nonatomic) BOOL canGoBack;
@property (readonly, nonatomic) BOOL canGoForward;
@property (readonly, nonatomic) BOOL canMakeTextLarger;
@property (readonly, nonatomic) BOOL canMakeTextSmaller;
@property (readonly, nonatomic) BOOL canMakeTextStandardSize;
@property (nonatomic, setter=_setAllowsLinkPreview:) BOOL _allowsLinkPreview;
@property (readonly, nonatomic) DOMRange *selectedDOMRange;
@property (readonly, nonatomic) unsigned long long selectionAffinity;
@property (readonly, nonatomic) BOOL maintainsInactiveSelection;
@property (nonatomic, getter=isEditable) BOOL editable;
@property (retain, nonatomic) DOMCSSStyleDeclaration *typingStyle;
@property (nonatomic) BOOL smartInsertDeleteEnabled;
@property (nonatomic, getter=isContinuousSpellCheckingEnabled) BOOL continuousSpellCheckingEnabled;
@property (readonly, nonatomic) long long spellCheckerDocumentTag;
@property (readonly, nonatomic) NSUndoManager *undoManager;
@property (nonatomic) id<WebEditingDelegate> editingDelegate;
@property (nonatomic) BOOL shouldCloseWithWindow;
@property (nonatomic) id<WebUIDelegate> UIDelegate;
@property (nonatomic) id<WebResourceLoadDelegate> resourceLoadDelegate;
@property (nonatomic) id<WebDownloadDelegate> downloadDelegate;
@property (nonatomic) id<WebFrameLoadDelegate> frameLoadDelegate;
@property (nonatomic) id<WebPolicyDelegate> policyDelegate;
@property (readonly, nonatomic) WebFrame *mainFrame;
@property (readonly, nonatomic) WebFrame *selectedFrame;
@property (readonly, nonatomic) WebBackForwardList *backForwardList;
@property (nonatomic) float textSizeMultiplier;
@property (copy, nonatomic) NSString *applicationNameForUserAgent;
@property (copy, nonatomic) NSString *customUserAgent;
@property (readonly, nonatomic) BOOL supportsTextEncoding;
@property (copy, nonatomic) NSString *customTextEncodingName;
@property (copy, nonatomic) NSString *mediaStyle;
@property (readonly, nonatomic) WebScriptObject *windowScriptObject;
@property (retain, nonatomic) WebPreferences *preferences;
@property (copy, nonatomic) NSString *preferencesIdentifier;
@property (retain, nonatomic) NSWindow *hostWindow;
@property (copy, nonatomic) NSString *groupName;
@property (readonly, nonatomic) double estimatedProgress;
@property (readonly, nonatomic, getter=isLoading) BOOL loading;
@property (readonly, copy, nonatomic) NSArray *pasteboardTypesForSelection;
@property (nonatomic) BOOL drawsBackground;
@property (nonatomic) BOOL shouldUpdateWhileOffscreen;
@property (copy, nonatomic) NSString *mainFrameURL;
@property (readonly, nonatomic) DOMDocument *mainFrameDocument;
@property (readonly, copy, nonatomic) NSString *mainFrameTitle;
@property (readonly, nonatomic) NSImage *mainFrameIcon;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSTouchBar *touchBar;

+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (void)initialize;
+ (void)_applicationWillTerminate;
+ (id)URLFromPasteboard:(id)a0;
+ (BOOL)_canHandleRequest:(id)a0 forMainFrame:(BOOL)a1;
+ (id)_generatedMIMETypeForURLScheme:(id)a0;
+ (void)_removeAllUserContentFromGroup:(id)a0;
+ (void)_setCacheModel:(unsigned long long)a0;
+ (void)_setUsesTestModeFocusRingColor:(BOOL)a0;
+ (BOOL)_shouldGrammarCheckingBeEnabled;
+ (id)URLTitleFromPasteboard:(id)a0;
+ (BOOL)_HTTPPipeliningEnabled;
+ (id)_MIMETypeForFile:(id)a0;
+ (void)_addOriginAccessAllowListEntryWithSourceOrigin:(id)a0 destinationProtocol:(id)a1 destinationHost:(id)a2 allowDestinationSubdomains:(BOOL)a3;
+ (void)_addUserScriptToGroup:(id)a0 world:(id)a1 source:(id)a2 url:(id)a3 includeMatchPatternStrings:(id)a4 excludeMatchPatternStrings:(id)a5 injectionTime:(int)a6 injectedFrames:(int)a7;
+ (id)_decodeData:(id)a0;
+ (void)_didChangeAutomaticQuoteSubstitutionEnabled:(id)a0;
+ (void)_didChangeAutomaticTextReplacementEnabled:(id)a0;
+ (void)_enableRemoteInspector;
+ (id)MIMETypesShownAsHTML;
+ (void)_cacheModelChangedNotification:(id)a0;
+ (void)_addUserStyleSheetToGroup:(id)a0 world:(id)a1 source:(id)a2 url:(id)a3 includeMatchPatternStrings:(id)a4 excludeMatchPatternStrings:(id)a5 injectedFrames:(int)a6;
+ (unsigned long long)_cacheModel;
+ (BOOL)_canHandleRequest:(id)a0;
+ (BOOL)_canShowMIMEType:(id)a0 allowingPlugins:(BOOL)a1;
+ (void)_didChangeAutomaticDashSubstitutionEnabled:(id)a0;
+ (void)_didChangeAutomaticSpellingCorrectionEnabled:(id)a0;
+ (BOOL)_didSetCacheModel;
+ (void)_disableAutoStartRemoteInspector;
+ (void)_disableRemoteInspector;
+ (BOOL)shouldIncludeInWebKitStatistics;
+ (BOOL)_hasRemoteInspectorSession;
+ (BOOL)_isIconLoadingEnabled;
+ (BOOL)_isRemoteInspectorEnabled;
+ (void)_makeAllWebViewsPerformSelector:(SEL)a0;
+ (unsigned long long)_maxCacheModelInAnyInstance;
+ (void)_preferencesRemovedNotification:(id)a0;
+ (void)_preflightSpellChecker;
+ (void)_preflightSpellCheckerNow:(id)a0;
+ (void)_registerPluginMIMEType:(id)a0;
+ (void)_registerURLSchemeAsAllowingDatabaseAccessInPrivateBrowsing:(id)a0;
+ (void)_registerURLSchemeAsAllowingLocalStorageAccessInPrivateBrowsing:(id)a0;
+ (void)_registerURLSchemeAsSecure:(id)a0;
+ (void)_registerViewClass:(Class)a0 representationClass:(Class)a1 forURLScheme:(id)a2;
+ (void)_removeOriginAccessAllowListEntryWithSourceOrigin:(id)a0 destinationProtocol:(id)a1 destinationHost:(id)a2 allowDestinationSubdomains:(BOOL)a3;
+ (void)_removeUserScriptFromGroup:(id)a0 world:(id)a1 url:(id)a2;
+ (void)_removeUserScriptsFromGroup:(id)a0 world:(id)a1;
+ (void)_removeUserStyleSheetFromGroup:(id)a0 world:(id)a1 url:(id)a2;
+ (void)_removeUserStyleSheetsFromGroup:(id)a0 world:(id)a1;
+ (void)_reportException:(struct OpaqueJSValue { } *)a0 inContext:(struct OpaqueJSContext { } *)a1;
+ (BOOL)_representationExistsForURLScheme:(id)a0;
+ (void)_resetOriginAccessAllowLists;
+ (void)_setAlwaysUsesComplexTextCodePath:(BOOL)a0;
+ (void)_setDomainRelaxationForbidden:(BOOL)a0 forURLScheme:(id)a1;
+ (void)_setFontAllowList:(id)a0;
+ (void)_setHTTPPipeliningEnabled:(BOOL)a0;
+ (void)_setIconLoadingEnabled:(BOOL)a0;
+ (void)_setLoadResourcesSerially:(BOOL)a0;
+ (BOOL)_shouldAutomaticDashSubstitutionBeEnabled;
+ (BOOL)_shouldAutomaticQuoteSubstitutionBeEnabled;
+ (BOOL)_shouldAutomaticSpellingCorrectionBeEnabled;
+ (BOOL)_shouldAutomaticTextReplacementBeEnabled;
+ (id)_standardUserAgentWithApplicationName:(id)a0;
+ (id)_supportedFileExtensions;
+ (id)_supportedMIMETypes;
+ (void)_unregisterPluginMIMEType:(id)a0;
+ (void)_unregisterViewClassAndRepresentationClassForMIMEType:(id)a0;
+ (BOOL)_usesTestModeFocusRingColor;
+ (BOOL)_viewClass:(Class *)a0 andRepresentationClass:(Class *)a1 forMIMEType:(id)a2 allowingPlugins:(BOOL)a3;
+ (BOOL)canCloseAllWebViews;
+ (BOOL)canShowFile:(id)a0;
+ (BOOL)canShowMIMEType:(id)a0;
+ (BOOL)canShowMIMETypeAsHTML:(id)a0;
+ (void)closeAllWebViews;
+ (void)registerURLSchemeAsLocal:(id)a0;
+ (void)registerViewClass:(Class)a0 representationClass:(Class)a1 forMIMEType:(id)a2;
+ (void)setMIMETypesShownAsHTML:(id)a0;
+ (id)suggestedFileExtensionForMIMEType:(id)a0;

- (void)selectAll:(id)a0;
- (void)reloadFromOrigin:(id)a0;
- (void)makeTextSmaller:(id)a0;
- (void)stopLoading:(id)a0;
- (void)uppercaseWord:(id)a0;
- (void)copyFont:(id)a0;
- (BOOL)validateUserInterfaceItem:(id)a0;
- (void)moveForward:(id)a0;
- (void)_close;
- (void)pasteFont:(id)a0;
- (id)typingAttributes;
- (void)setShowingInspectorIndication:(BOOL)a0;
- (void)alignLeft:(id)a0;
- (void)viewWillMoveToWindow:(id)a0;
- (struct NakedPtr<WebCore::Page> { struct Page *x0; })page;
- (void)alignRight:(id)a0;
- (void)lowercaseWord:(id)a0;
- (void)makeTextWritingDirectionNatural:(id)a0;
- (void)makeTextWritingDirectionLeftToRight:(id)a0;
- (void)goBack:(id)a0;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)shouldClose;
- (void)dealloc;
- (void)setGrammarCheckingEnabled:(BOOL)a0;
- (id)candidateList;
- (void)paste:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (void)unscheduleFromRunLoop:(id)a0 forMode:(id)a1;
- (BOOL)becomeFirstResponder;
- (void)copy:(id)a0;
- (void)insertText:(id)a0;
- (void)cut:(id)a0;
- (void)setMediaVolume:(float)a0;
- (void)removeObserver:(id)a0 forKeyPath:(id)a1;
- (void)capitalizeWord:(id)a0;
- (id)_contentsOfUserInterfaceItem:(id)a0;
- (void)setDefersCallbacks:(BOOL)a0;
- (void)insertNewline:(id)a0;
- (void)makeTextWritingDirectionRightToLeft:(id)a0;
- (void)alignJustified:(id)a0;
- (void)alignCenter:(id)a0;
- (void)scheduleInRunLoop:(id)a0 forMode:(id)a1;
- (void)viewDidMoveToWindow;
- (float)mediaVolume;
- (id)initWithCoder:(id)a0;
- (void)viewDidChangeEffectiveAppearance;
- (void)moveBackward:(id)a0;
- (void)close;
- (void)addObserver:(id)a0 forKeyPath:(id)a1 options:(unsigned long long)a2 context:(void *)a3;
- (BOOL)defersCallbacks;
- (id)DOMRangeOfString:(id)a0 relativeTo:(id)a1 options:(unsigned long long)a2;
- (void)deleteBackward:(id)a0;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (void)moveUp:(id)a0;
- (void)scrollPageDown:(id)a0;
- (id)touchBar:(id)a0 makeItemForIdentifier:(id)a1;
- (void)changeSpelling:(id)a0;
- (void)delete:(id)a0;
- (void)draggingExited:(id)a0;
- (void)ignoreSpelling:(id)a0;
- (void)indent:(id)a0;
- (void)moveBackwardAndModifySelection:(id)a0;
- (void)moveWordLeftAndModifySelection:(id)a0;
- (void)pageUp:(id)a0;
- (void)scrollLineDown:(id)a0;
- (void)setNextKeyView:(id)a0;
- (void)showGuessPanel:(id)a0;
- (void)toggleAutomaticTextReplacement:(id)a0;
- (void)_autoscrollForDraggingInfo:(id)a0 timeDelta:(double)a1;
- (BOOL)_continuousCheckingAllowed;
- (id)_declaredKeys;
- (id)_hitTest:(struct CGPoint { double x0; double x1; } *)a0 dragTypes:(id)a1;
- (unsigned long long)_pageCount;
- (void)_searchWithGoogleFromMenu:(id)a0;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)a0;
- (void)_windowChangedKeyState;
- (void)_windowWillClose:(id)a0;
- (BOOL)acceptsFirstResponder;
- (BOOL)allowsUndo;
- (void)candidateListTouchBarItem:(id)a0 changedCandidateListVisibility:(BOOL)a1;
- (void)candidateListTouchBarItem:(id)a0 endSelectingCandidateAtIndex:(long long)a1;
- (void)centerSelectionInVisibleArea:(id)a0;
- (void)changeAttributes:(id)a0;
- (void)changeBaseWritingDirection:(id)a0;
- (void)changeColor:(id)a0;
- (void)changeDocumentBackgroundColor:(id)a0;
- (void)changeFont:(id)a0;
- (void)checkSpelling:(id)a0;
- (void)complete:(id)a0;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)a0;
- (void)deleteForward:(id)a0;
- (void)deleteToBeginningOfLine:(id)a0;
- (void)deleteToBeginningOfParagraph:(id)a0;
- (void)deleteToEndOfLine:(id)a0;
- (void)deleteToEndOfParagraph:(id)a0;
- (void)deleteToMark:(id)a0;
- (void)deleteWordBackward:(id)a0;
- (void)deleteWordForward:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (unsigned long long)draggingUpdated:(id)a0;
- (void)insertBacktab:(id)a0;
- (void)insertLineBreak:(id)a0;
- (void)insertNewlineIgnoringFieldEditor:(id)a0;
- (void)insertParagraphSeparator:(id)a0;
- (void)insertTab:(id)a0;
- (void)insertTabIgnoringFieldEditor:(id)a0;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isGrammarCheckingEnabled;
- (void)makeBaseWritingDirectionLeftToRight:(id)a0;
- (void)makeBaseWritingDirectionRightToLeft:(id)a0;
- (id)makeTouchBar;
- (void)moveDown:(id)a0;
- (void)moveDownAndModifySelection:(id)a0;
- (void)moveForwardAndModifySelection:(id)a0;
- (void)moveLeft:(id)a0;
- (void)moveLeftAndModifySelection:(id)a0;
- (void)moveParagraphBackwardAndModifySelection:(id)a0;
- (void)moveParagraphForwardAndModifySelection:(id)a0;
- (void)moveRight:(id)a0;
- (void)moveRightAndModifySelection:(id)a0;
- (void)moveToBeginningOfDocument:(id)a0;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)a0;
- (void)moveToBeginningOfLine:(id)a0;
- (void)moveToBeginningOfLineAndModifySelection:(id)a0;
- (void)moveToBeginningOfParagraph:(id)a0;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)a0;
- (void)moveToEndOfDocument:(id)a0;
- (void)moveToEndOfDocumentAndModifySelection:(id)a0;
- (void)moveToEndOfLine:(id)a0;
- (void)moveToEndOfLineAndModifySelection:(id)a0;
- (void)moveToEndOfParagraph:(id)a0;
- (void)moveToEndOfParagraphAndModifySelection:(id)a0;
- (void)moveToLeftEndOfLine:(id)a0;
- (void)moveToLeftEndOfLineAndModifySelection:(id)a0;
- (void)moveToRightEndOfLine:(id)a0;
- (void)moveToRightEndOfLineAndModifySelection:(id)a0;
- (void)moveUpAndModifySelection:(id)a0;
- (void)moveWordBackward:(id)a0;
- (void)moveWordBackwardAndModifySelection:(id)a0;
- (void)moveWordForward:(id)a0;
- (void)moveWordForwardAndModifySelection:(id)a0;
- (void)moveWordLeft:(id)a0;
- (void)moveWordRight:(id)a0;
- (void)moveWordRightAndModifySelection:(id)a0;
- (void)orderFrontSubstitutionsPanel:(id)a0;
- (void)pageDown:(id)a0;
- (void)pageDownAndModifySelection:(id)a0;
- (void)pageUpAndModifySelection:(id)a0;
- (void)pasteAsPlainText:(id)a0;
- (void)pasteAsRichText:(id)a0;
- (BOOL)performDragOperation:(id)a0;
- (void)performFindPanelAction:(id)a0;
- (BOOL)prepareForDragOperation:(id)a0;
- (id)previousValidKeyView;
- (void)replaceSelectionWithMarkupString:(id)a0;
- (void)replaceSelectionWithText:(id)a0;
- (void)scrollLineUp:(id)a0;
- (void)scrollPageUp:(id)a0;
- (void)scrollToBeginningOfDocument:(id)a0;
- (void)scrollToEndOfDocument:(id)a0;
- (void)selectLine:(id)a0;
- (void)selectParagraph:(id)a0;
- (void)selectToMark:(id)a0;
- (void)selectWord:(id)a0;
- (void)setAllowsUndo:(BOOL)a0;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)a0;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)a0;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)a0;
- (void)setAutomaticSpellingCorrectionEnabled:(BOOL)a0;
- (void)setAutomaticTextReplacementEnabled:(BOOL)a0;
- (void)setMark:(id)a0;
- (void)setSelectedDOMRange:(id)a0 affinity:(unsigned long long)a1;
- (void)startSpeaking:(id)a0;
- (void)stopSpeaking:(id)a0;
- (void)subscript:(id)a0;
- (void)superscript:(id)a0;
- (void)swapWithMark:(id)a0;
- (void)toggleAutomaticDashSubstitution:(id)a0;
- (void)toggleAutomaticLinkDetection:(id)a0;
- (void)toggleAutomaticQuoteSubstitution:(id)a0;
- (void)toggleAutomaticSpellingCorrection:(id)a0;
- (void)toggleBaseWritingDirection:(id)a0;
- (void)toggleContinuousSpellChecking:(id)a0;
- (void)toggleGrammarChecking:(id)a0;
- (void)toggleSmartInsertDelete:(id)a0;
- (void)transpose:(id)a0;
- (void)underline:(id)a0;
- (void)unscript:(id)a0;
- (void)viewDidHide;
- (void)viewDidUnhide;
- (void)yank:(id)a0;
- (void)yankAndSelect:(id)a0;
- (void)setUsesPageCache:(BOOL)a0;
- (id)_objectForIdentifier:(unsigned long long)a0;
- (id)inspector;
- (void)_closeWindow;
- (void)setMaintainsBackForwardList:(BOOL)a0;
- (void)_windowWillOrderOnScreen:(id)a0;
- (void)_checkDidPerformFirstNavigation;
- (int)_paginationMode;
- (void)_setMaintainsInactiveSelection:(BOOL)a0;
- (void)_setTextIndicator:(void *)a0 withLifetime:(unsigned char)a1;
- (id)elementAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)historyDelegate;
- (id)_animationControllerForDictionaryLookupPopupInfo:(const void *)a0;
- (BOOL)_becomingFirstResponderFromOutside;
- (void)_cacheHistoryDelegateImplementations;
- (void)_cacheResourceLoadDelegateImplementations;
- (BOOL)_canResetZoom:(BOOL)a0;
- (BOOL)_canShowMIMEType:(id)a0;
- (void)_clearUndoRedoOperations;
- (void)_commonInitializationWithFrameName:(id)a0 groupName:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectFromRootView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_cookieEnabled;
- (void)_detachScriptDebuggerFromAllFrames;
- (id)_deviceOrientationProvider;
- (float)_deviceScaleFactor;
- (void)_didChangeValueForKey:(id)a0;
- (void)setTabKeyCyclesThroughElements:(BOOL)a0;
- (void)_didCompleteRenderingFrame;
- (void)_didFinishLoadForFrame:(id)a0;
- (void)_didScrollDocumentInFrameView:(id)a0;
- (void)_didStartProvisionalLoadForFrame:(id)a0;
- (void)_dispatchPendingLoadRequests;
- (id)_downloadURL:(id)a0;
- (void)_drawHeaderAndFooter;
- (BOOL)_effectiveAppearanceIsDark;
- (void)_enterVideoFullscreenForVideoElement:(struct NakedPtr<WebCore::HTMLVideoElement> { struct HTMLVideoElement *x0; })a0 mode:(unsigned int)a1;
- (void)_executeCoreCommandByName:(id)a0 value:(id)a1;
- (void)_exitVideoFullscreen;
- (void)_addPlaybackTargetPickerClient:(struct ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::PlaybackTargetClientContextIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long>> { struct ObjectIdentifierGeneric<WebCore::PlaybackTargetClientContextIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; } x0; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; } x1; })a0;
- (void)_didFailLoadWithError:(id)a0 forFrame:(id)a1;
- (void)_geolocationDidFailWithMessage:(id)a0;
- (int)_keyboardUIMode;
- (void)_popPerformingProgrammaticFocus;
- (BOOL)_selectionIsAll;
- (void)_setPageLength:(double)a0;
- (BOOL)_useFixedLayout;
- (void)_windowDidChangeOcclusionState:(id)a0;
- (void)deleteSelection;
- (id)_UIDelegateForwarder;
- (void)_addObject:(id)a0 forIdentifier:(unsigned long long)a1;
- (void)_addToAllWebViewsSet;
- (void)_adjustPrintingMarginsForHeaderAndFooter;
- (struct OptionSet<WebCore::DragApplicationFlags> { unsigned char x0; })_applicationFlagsForDrag:(id)a0;
- (void)_attachScriptDebuggerToAllFrames;
- (double)_backingScaleFactor;
- (void)makeTextLarger:(id)a0;
- (void)_cacheFrameLoadDelegateImplementations;
- (void)_cacheScriptDebugDelegateImplementations;
- (id)_cachedResponseForURL:(id)a0;
- (BOOL)_canZoomIn:(BOOL)a0;
- (BOOL)_canZoomOut:(BOOL)a0;
- (void)reload:(id)a0;
- (void)removeDragCaret;
- (void)_clearCredentials;
- (void)_clearMainFrameName;
- (void)_clearNotificationPermissionState;
- (void)_clearPlaybackControlsManager;
- (void)_clearTextIndicatorWithAnimation:(unsigned char)a0;
- (void)_closePluginDatabases;
- (void)_closeWithFastTeardown;
- (void)selectSentence:(id)a0;
- (struct CGPoint { double x0; double x1; })_convertPointFromRootView:(struct CGPoint { double x0; double x1; })a0;
- (void)setProhibitsMainFrameScrolling:(BOOL)a0;
- (void *)_devicePicker;
- (struct Vector<WTF::String, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct String *x0; unsigned int x1; unsigned int x2; })_dictationAlternatives:(struct ObjectIdentifierGeneric<WebCore::DictationContextType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; })a0;
- (void)_didChangeBackForwardKeys;
- (void)_didCommitLoadForFrame:(id)a0;
- (void)_didCompleteRenderingUpdateDisplay;
- (void)_didFailProvisionalLoadWithError:(id)a0 forFrame:(id)a1;
- (void)_dismissTextTouchBarPopoverItemWithIdentifier:(id)a0;
- (void)_drawFooterInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawHeaderInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_editingDelegateForwarder;
- (BOOL)_effectiveUserInterfaceLevelIsElevated;
- (void)touchBarWillEnterCustomization:(id)a0;
- (id)_elementAtWindowPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_enterFullScreenForElement:(struct NakedPtr<WebCore::Element> { struct Element *x0; })a0 willEnterFullscreen:(void *)a1 didEnterFullscreen:(void *)a2;
- (BOOL)windowOcclusionDetectionEnabled;
- (void)_exitFullScreenForElement:(struct NakedPtr<WebCore::Element> { struct Element *x0; })a0 completionHandler:(void *)a1;
- (struct CGSize { double x0; double x1; })_fixedLayoutSize;
- (BOOL)_flushCompositingChanges;
- (id)_focusedFrame;
- (float)_footerHeight;
- (void)_forceRepaintForTesting;
- (id)_formDelegate;
- (id)_frameViewAtWindowPoint:(struct CGPoint { double x0; double x1; })a0;
- (double)_gapBetweenPages;
- (void)_geolocationDidChangePosition:(id)a0;
- (id)_geolocationProvider;
- (void)_getWebCoreDictationAlternatives:(void *)a0 fromTextAlternatives:(const void *)a1;
- (void)_handleContextMenuTranslation:(const void *)a0;
- (BOOL)_hasActiveVideoForControlsInterface;
- (float)_headerHeight;
- (id)_immediateActionController;
- (BOOL)_inFastImageScalingMode;
- (id)_initWithArguments:(id)a0;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 frameName:(id)a1 groupName:(id)a2;
- (void)_insertNewlineInQuotedContent;
- (id)_insertionPasteboard;
- (void)_invalidateUserAgentCache;
- (BOOL)_isClosed;
- (BOOL)_isLoading;
- (BOOL)_isMIMETypeRegisteredAsPlugin:(id)a0;
- (BOOL)_isPerformingProgrammaticFocus;
- (BOOL)_isProcessingUserGesture;
- (BOOL)_isRichlyEditable;
- (BOOL)_isSoftwareRenderable;
- (BOOL)_isUsingAcceleratedCompositing;
- (BOOL)_isViewVisible;
- (unsigned long long)_layoutMilestones;
- (void)_listenForLayoutMilestones:(unsigned long long)a0;
- (void)_loadBackForwardListFromOtherView:(id)a0;
- (void *)_mainCoreFrame;
- (id)_mainFrameOverrideEncoding;
- (id)_menuForElement:(id)a0 defaultItems:(id)a1;
- (void)_mockMediaPlaybackTargetPickerDismissPopup;
- (void)_mouseDidMoveOverElement:(id)a0 modifierFlags:(unsigned long long)a1;
- (BOOL)_needsFrameLoadDelegateRetainQuirk;
- (BOOL)_needsOneShotDrawingSynchronization;
- (void)_notificationDidClick:(id)a0;
- (void)_notificationDidShow:(id)a0;
- (id)_notificationIDForTesting:(struct OpaqueJSValue { } *)a0;
- (id)_notificationProvider;
- (void)_notificationsDidClose:(id)a0;
- (void)_openFrameInNewWindowFromMenu:(id)a0;
- (id)_openNewWindowWithRequest:(id)a0;
- (double)_pageLength;
- (BOOL)_paginationBehavesLikeColumns;
- (BOOL)_paginationLineGridEnabled;
- (id)_passwordTextTouchBarDefaultItemIdentifiers;
- (void)_performResponderOperation:(SEL)a0 with:(id)a1;
- (id)_plainTextTouchBarDefaultItemIdentifiers;
- (void)_playbackControlsMediaEngineChanged;
- (void)_playbackTargetPickerClientStateDidChange:(struct ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::PlaybackTargetClientContextIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long>> { struct ObjectIdentifierGeneric<WebCore::PlaybackTargetClientContextIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; } x0; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; } x1; })a0 state:(struct OptionSet<WebCore::MediaProducerMediaState> { unsigned int x0; })a1;
- (id)_pluginForExtension:(id)a0;
- (id)_pluginForMIMEType:(id)a0;
- (id)_policyDelegateForwarder;
- (BOOL)_postsAcceleratedCompositingNotifications;
- (void)_preferencesChanged:(id)a0;
- (void)_preferencesChangedGenerated:(id)a0;
- (void)_preferencesChangedNotification:(id)a0;
- (void)_prepareForDictionaryLookup;
- (id)_pressureEvent;
- (void)_pushPerformingProgrammaticFocus;
- (float)_realZoomMultiplier;
- (BOOL)_realZoomMultiplierIsTextOnly;
- (void)_registerDraggedTypes;
- (void)_removeDictationAlternatives:(struct ObjectIdentifierGeneric<WebCore::DictationContextType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; })a0;
- (void)_removeFromAllWebViewsSet;
- (void)_removeObjectForIdentifier:(unsigned long long)a0;
- (void)_removePlaybackTargetPickerClient:(struct ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::PlaybackTargetClientContextIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long>> { struct ObjectIdentifierGeneric<WebCore::PlaybackTargetClientContextIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; } x0; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; } x1; })a0;
- (void)_replaceSelectionWithNode:(id)a0 matchStyle:(BOOL)a1;
- (void)_resetZoom:(id)a0 isTextOnly:(BOOL)a1;
- (id)_responderForResponderOperations;
- (BOOL)_responderValidateUserInterfaceItem:(id)a0;
- (void)_retrieveKeyboardUIModeFromPreferences:(id)a0;
- (id)_richTextTouchBarDefaultItemIdentifiers;
- (void)_scaleWebView:(float)a0 atOrigin:(struct CGPoint { double x0; double x1; })a1;
- (void)_scheduleUpdateRendering;
- (id)_selectedOrMainFrame;
- (BOOL)_selectionIsCaret;
- (void *)_selectionServiceController;
- (void)_setAdditionalWebPlugInPaths:(id)a0;
- (void)_setBaseCTM:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0 forContext:(struct CGContext { } *)a1;
- (void)_setCookieEnabled:(BOOL)a0;
- (void)_setCustomBackingScaleFactor:(double)a0;
- (void)_setDeviceOrientationProvider:(id)a0;
- (void)_setFixedLayoutSize:(struct CGSize { double x0; double x1; })a0;
- (void)_setFontFallbackPrefersPictographs:(BOOL)a0;
- (void)_setFormDelegate:(id)a0;
- (void)_setGapBetweenPages:(double)a0;
- (void)_setGeolocationProvider:(id)a0;
- (void)_setInitiatedDrag:(BOOL)a0;
- (void)_setInsertionPasteboard:(id)a0;
- (void)_setIsVisible:(BOOL)a0;
- (void)_setMainFrameIcon:(id)a0;
- (void)_setMockMediaPlaybackTargetPickerEnabled:(BOOL)a0;
- (void)_setMockMediaPlaybackTargetPickerName:(id)a0 state:(unsigned char)a1;
- (void)_setNeedsOneShotDrawingSynchronization:(BOOL)a0;
- (void)_setNotificationProvider:(id)a0;
- (void)_setObscuredTopContentInsetForTesting:(float)a0 right:(float)a1 bottom:(float)a2 left:(float)a3;
- (void)_setPaginationBehavesLikeColumns:(BOOL)a0;
- (void)_setPaginationLineGridEnabled:(BOOL)a0;
- (void)_setPaginationMode:(int)a0;
- (void)_setPortsForUpgradingInsecureSchemeForTesting:(unsigned short)a0 withSecurePort:(unsigned short)a1;
- (void)_setPostsAcceleratedCompositingNotifications:(BOOL)a0;
- (void)_setPressureEvent:(id)a0;
- (void)_setTextIndicator:(void *)a0;
- (void)_setTextIndicatorAnimationProgress:(float)a0;
- (void)_setUpPlaybackControlsManagerForMediaElement:(struct reference_wrapper<WebCore::HTMLMediaElement> { struct HTMLMediaElement *x0; })a0;
- (void)_setUseDarkAppearance:(BOOL)a0 useElevatedUserInterfaceLevel:(BOOL)a1;
- (void)_setUseDarkAppearance:(BOOL)a0 useInactiveAppearance:(BOOL)a1;
- (void)_setUseFastImageScalingMode:(BOOL)a0;
- (void)_setUseFixedLayout:(BOOL)a0;
- (void)_setVisibilityState:(int)a0 isInitialState:(BOOL)a1;
- (void)_setZoomMultiplier:(float)a0 isTextOnly:(BOOL)a1;
- (BOOL)_shouldChangeSelectedDOMRange:(id)a0 toDOMRange:(id)a1 affinity:(unsigned long long)a2 stillSelecting:(BOOL)a3;
- (void)_showDictationAlternativeUI:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)a0 forDictationContext:(struct ObjectIdentifierGeneric<WebCore::DictationContextType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; })a1;
- (void)_showDictionaryLookupPopup:(const void *)a0;
- (void)_showPlaybackTargetPicker:(struct ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::PlaybackTargetClientContextIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long>> { struct ObjectIdentifierGeneric<WebCore::PlaybackTargetClientContextIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; } x0; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits<uint64_t>, unsigned long long> { unsigned long long x0; } x1; })a0 location:(const struct IntPoint { int x0; int x1; } *)a1 hasVideo:(BOOL)a2;
- (void)_simplifyMarkup:(id)a0 endNode:(id)a1;
- (BOOL)_supportsFullScreenForElement:(struct NakedPtr<const WebCore::Element> { struct Element *x0; })a0 withKeyboard:(BOOL)a1;
- (id)_textTouchBarCustomizationAllowedIdentifiers;
- (void)_updateActiveState;
- (void)_updateRendering;
- (void)_updateVisibilityState;
- (struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *x0; } x0; })_userAgentString;
- (BOOL)_viewClass:(Class *)a0 andRepresentationClass:(Class *)a1 forMIMEType:(id)a2;
- (float)_viewScaleFactor;
- (int)_visibilityState;
- (id)_webcore_effectiveFirstResponder;
- (void)_willChangeBackForwardKeys;
- (void)_willChangeValueForKey:(id)a0;
- (void)_willStartRenderingUpdateDisplay;
- (void)_windowDidChangeBackingProperties:(id)a0;
- (void)_windowDidChangeScreen:(id)a0;
- (id)_windowSnapshotInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withOptions:(unsigned int)a1;
- (void)_windowVisibilityChanged:(id)a0;
- (void)_windowWillOrderOffScreen:(id)a0;
- (void)_writeImageForElement:(id)a0 withPasteboardTypes:(id)a1 toPasteboard:(id)a2;
- (void)_writeLinkElement:(id)a0 withPasteboardTypes:(id)a1 toPasteboard:(id)a2;
- (void)_zoomIn:(id)a0 isTextOnly:(BOOL)a1;
- (float)_zoomMultiplier:(BOOL)a0;
- (void)_zoomOut:(id)a0 isTextOnly:(BOOL)a1;
- (struct OptionSet<WebCore::DragDestinationAction> { unsigned char x0; })actionMaskForDraggingInfo:(id)a0;
- (void)addPluginInstanceView:(id)a0;
- (void)addVisitedLinks:(id)a0;
- (void)addWindowObserversForWindow:(id)a0;
- (id)aeDescByEvaluatingJavaScriptFromString:(id)a0;
- (BOOL)allowsRemoteInspection;
- (BOOL)alwaysShowHorizontalScroller;
- (BOOL)alwaysShowVerticalScroller;
- (void)applyStyle:(id)a0;
- (BOOL)areMemoryCacheDelegateCallsEnabled;
- (BOOL)canMarkAllTextMatches;
- (BOOL)canResetPageZoom;
- (BOOL)canZoomPageIn;
- (BOOL)canZoomPageOut;
- (void)changeBaseWritingDirectionToLTR:(id)a0;
- (void)changeBaseWritingDirectionToRTL:(id)a0;
- (id)computedStyleForElement:(id)a0 pseudoElement:(id)a1;
- (unsigned long long)countMatchesForText:(id)a0 caseSensitive:(BOOL)a1 highlight:(BOOL)a2 limit:(unsigned long long)a3 markMatches:(BOOL)a4;
- (unsigned long long)countMatchesForText:(id)a0 inDOMRange:(id)a1 options:(unsigned long long)a2 highlight:(BOOL)a3 limit:(unsigned long long)a4 markMatches:(BOOL)a5;
- (unsigned long long)countMatchesForText:(id)a0 options:(unsigned long long)a1 highlight:(BOOL)a2 limit:(unsigned long long)a3 markMatches:(BOOL)a4;
- (id)currentNodeHighlight;
- (void)didChangeAutomaticTextCompletion:(id)a0;
- (void)doWindowDidChangeScreen;
- (id)documentViewAtWindowPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)editableDOMRangeForPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)findString:(id)a0 options:(unsigned long long)a1;
- (void)forceRequestCandidatesForTesting;
- (id)fullScreenPlaceholderView;
- (BOOL)goBack;
- (BOOL)goForward;
- (void)goForward:(id)a0;
- (BOOL)goToBackForwardItem:(id)a0;
- (void)handleAcceptedAlternativeText:(id)a0;
- (void)hideFormValidationMessage;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 frameName:(id)a1 groupName:(id)a2;
- (BOOL)interactiveFormValidationEnabled;
- (BOOL)isSelectTrailingWhitespaceEnabled;
- (BOOL)isTrackingRepaints;
- (void)makeTextStandardSize:(id)a0;
- (unsigned long long)markAllMatchesForText:(id)a0 caseSensitive:(BOOL)a1 highlight:(BOOL)a2 limit:(unsigned long long)a3;
- (void)moveDragCaretToPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)moveToBeginningOfSentence:(id)a0;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)a0;
- (void)moveToEndOfSentence:(id)a0;
- (void)moveToEndOfSentenceAndModifySelection:(id)a0;
- (void)outdent:(id)a0;
- (void)overWrite:(id)a0;
- (float)pageSizeMultiplier;
- (id)pasteboardTypesForElement:(id)a0;
- (void)prepareForMouseDown;
- (void)prepareForMouseUp;
- (id)rectsForTextMatches;
- (void)registerForEditingDelegateNotification:(id)a0 selector:(SEL)a1;
- (void)removePluginInstanceView:(id)a0;
- (void)removePluginInstanceViewsFor:(id)a0;
- (void)removeWindowObservers;
- (void)replaceSelectionWithArchive:(id)a0;
- (void)replaceSelectionWithNode:(id)a0;
- (void)resetPageZoom:(id)a0;
- (void)resetTrackedRepaints;
- (void)resumeAllMediaPlayback;
- (id)scriptDebugDelegate;
- (void)scrollDOMRangeToVisible:(id)a0;
- (BOOL)searchFor:(id)a0 direction:(BOOL)a1 caseSensitive:(BOOL)a2 wrap:(BOOL)a3;
- (BOOL)searchFor:(id)a0 direction:(BOOL)a1 caseSensitive:(BOOL)a2 wrap:(BOOL)a3 startInSelection:(BOOL)a4;
- (void)setAllowsRemoteInspection:(BOOL)a0;
- (void)setAlwaysShowHorizontalScroller:(BOOL)a0;
- (void)setAlwaysShowVerticalScroller:(BOOL)a0;
- (void)setCurrentNodeHighlight:(id)a0;
- (void)setHistoryDelegate:(id)a0;
- (void)setInteractiveFormValidationEnabled:(BOOL)a0;
- (void)setMainFrameDocumentReady:(BOOL)a0;
- (void)setMemoryCacheDelegateCallsEnabled:(BOOL)a0;
- (void)setPageSizeMultiplier:(float)a0;
- (void)setScriptDebugDelegate:(id)a0;
- (void)setSelectTrailingWhitespaceEnabled:(BOOL)a0;
- (void)setTracksRepaints:(BOOL)a0;
- (void)setUpTextTouchBar:(id)a0;
- (void)setValidationMessageTimerMagnification:(int)a0;
- (void)setWindowOcclusionDetectionEnabled:(BOOL)a0;
- (BOOL)shouldRequestCandidates;
- (void)showCandidates:(id)a0 forString:(id)a1 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 forSelectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 view:(id)a4 completionHandler:(id /* block */)a5;
- (void)showFormValidationMessage:(id)a0 withAnchorRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)stringByEvaluatingJavaScriptFromString:(id)a0;
- (id)styleDeclarationWithText:(id)a0;
- (void)suspendAllMediaPlayback;
- (BOOL)tabKeyCyclesThroughElements;
- (void)takeFindStringFromSelection:(id)a0;
- (void)takeStringURLFrom:(id)a0;
- (id)textIteratorForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)textTouchBar;
- (void)touchBarDidExitCustomization:(id)a0;
- (id)trackedRepaintRects;
- (void)unmarkAllTextMatches;
- (void)updateMediaTouchBar;
- (void)updateTextTouchBar;
- (void)updateTouchBar;
- (id)userAgentForURL:(id)a0;
- (BOOL)usesPageCache;
- (BOOL)validateUserInterfaceItemWithoutDelegate:(id)a0;
- (int)validationMessageTimerMagnification;
- (void)windowKeyStateChanged:(id)a0;
- (void)writeElement:(id)a0 withPasteboardTypes:(id)a1 toPasteboard:(id)a2;
- (void)writeSelectionWithPasteboardTypes:(id)a0 toPasteboard:(id)a1;
- (void)zoomPageIn:(id)a0;
- (void)zoomPageOut:(id)a0;

@end

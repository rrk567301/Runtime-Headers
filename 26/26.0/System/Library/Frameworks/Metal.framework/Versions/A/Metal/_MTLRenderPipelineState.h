@class MTLDebugInstrumentationData, NSString, MTLRenderPipelineReflection;
@protocol MTLComputePipelineState, MTLDevice;

@interface _MTLRenderPipelineState : _MTLAllocation <MTLRenderPipelineState> {
    struct { id x0; id x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; } *_meshShaderEmulatorProperties;
    long long _textureWriteRoundingMode;
    BOOL _supportIndirectCommandBuffers;
    BOOL _usesMeshShaderEmulation;
}

@property (readonly) id<MTLDevice> device;
@property (retain, nonatomic) MTLDebugInstrumentationData *vertexDebugInstrumentationData;
@property (retain, nonatomic) MTLDebugInstrumentationData *fragmentDebugInstrumentationData;
@property (retain, nonatomic) MTLDebugInstrumentationData *tileDebugInstrumentationData;
@property (retain, nonatomic) MTLDebugInstrumentationData *objectDebugInstrumentationData;
@property (retain, nonatomic) MTLDebugInstrumentationData *meshDebugInstrumentationData;
@property (retain, nonatomic) id<MTLComputePipelineState> emulationObjectShaderPSO;
@property (readonly, retain, nonatomic) id<MTLComputePipelineState> emulationObjectPrefixSumPSO;
@property (readonly, retain, nonatomic) id<MTLComputePipelineState> emulationNoObjectPrefixSumPSO;
@property (retain, nonatomic) id<MTLComputePipelineState> emulationMeshShaderPSO;
@property (readonly, retain, nonatomic) id<MTLComputePipelineState> emulationMeshPrefixSum1PSO;
@property (readonly, retain, nonatomic) id<MTLComputePipelineState> emulationMeshPrefixSum2PSO;
@property (readonly, retain, nonatomic) id<MTLComputePipelineState> emulationMeshPrefixSum3PSO;
@property (nonatomic) unsigned long long emulationMeshSize;
@property (nonatomic) unsigned long long emulationMeshMaxVertexCount;
@property (nonatomic) unsigned long long emulationMeshMaxPrimitiveCount;
@property (nonatomic) unsigned long long emulationObjectShaderIntermediateBufferSlot;
@property (nonatomic) unsigned long long emulationMeshShaderIntermediateBufferSlot;
@property (nonatomic) unsigned long long emulationVertexShaderIntermediateBufferSlot;
@property (nonatomic) unsigned long long emulationPrimitiveTopology;
@property (nonatomic) unsigned long long emulationPayloadMemoryLength;
@property (nonatomic) BOOL usesMeshShaderEmulation;
@property (readonly) unsigned long long maxTotalThreadsPerObjectThreadgroup;
@property (readonly) unsigned long long maxTotalThreadsPerMeshThreadgroup;
@property (readonly) unsigned long long objectThreadExecutionWidth;
@property (readonly) unsigned long long meshThreadExecutionWidth;
@property (readonly) unsigned long long maxTotalThreadgroupsPerMeshGrid;
@property (readonly) long long textureWriteRoundingMode;
@property (readonly) unsigned long long uniqueIdentifier;
@property (readonly, nonatomic) unsigned long long resourceIndex;
@property (readonly, nonatomic) unsigned long long gpuAddress;
@property (readonly, nonatomic) unsigned long long allocatedSize;
@property (readonly) unsigned long long imageBlockSampleLength;
@property (readonly) unsigned long long maxTotalThreadsPerThreadgroup;
@property (readonly) BOOL threadgroupSizeMatchesTileSize;
@property (readonly) unsigned int explicitVisibilityGroupID;
@property (readonly) struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } requiredThreadsPerThreadgroup;
@property (readonly) struct { unsigned long long width; unsigned long long height; unsigned long long depth; } requiredThreadsPerTileThreadgroup;
@property (readonly) struct { unsigned long long width; unsigned long long height; unsigned long long depth; } requiredThreadsPerObjectThreadgroup;
@property (readonly) struct { unsigned long long width; unsigned long long height; unsigned long long depth; } requiredThreadsPerMeshThreadgroup;
@property (readonly) unsigned long long gpuHandle;
@property (readonly, nonatomic) long long shaderValidation;
@property (readonly, nonatomic) long long shaderValidationState;
@property (readonly) MTLRenderPipelineReflection *reflection;
@property (readonly) NSString *label;
@property (readonly) unsigned long long imageblockSampleLength;
@property (readonly) BOOL supportIndirectCommandBuffers;
@property (readonly) struct MTLResourceID { unsigned long long x0; } gpuResourceID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)newObjectIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)newTileRenderPipelineStateWithAdditionalBinaryFunctions:(id)a0 error:(id *)a1;
- (id)newVisibleFunctionTableWithDescriptor:(id)a0 stage:(unsigned long long)a1;
- (id)newVisibleFunctionTableFromMeshStageWithDescriptor:(id)a0;
- (id)initWithDevice:(id)a0 pipelineStateDescriptor:(id)a1;
- (id)functionReflectionWithFunctionDescriptor:(id)a0 stage:(unsigned long long)a1;
- (id)vertexFunctionHandleWithFunction:(id)a0;
- (id)newVisibleFunctionTableFromFragmentStageWithDescriptor:(id)a0;
- (id)initWithDevice:(id)a0 meshRenderPipelineStateDescriptor:(id)a1 objectThreadExecutionWidth:(unsigned long long)a2 meshThreadExecutionWidth:(unsigned long long)a3 maxTotalThreadgroupsPerMeshGrid:(unsigned long long)a4;
- (void)dealloc;
- (id)objectFunctionHandleWithFunction:(id)a0;
- (unsigned int)getFragmentShaderTelemetryID;
- (id)newIntersectionFunctionTableWithDescriptor:(id)a0 stage:(unsigned long long)a1;
- (unsigned int)getVertexShaderTelemetryID;
- (id)newRenderPipelineStateWithAdditionalBinaryFunctions:(id)a0 fragmentAdditionalBinaryFunctions:(id)a1 error:(id *)a2;
- (id)initWithDeviceAndTileDesc:(id)a0 tilePipelineStateDescriptor:(id)a1;
- (id)newVisibleFunctionTableFromTileStageWithDescriptor:(id)a0;
- (id)newRenderPipelineStateWithBinaryFunctions:(id)a0 error:(id *)a1;
- (id)functionHandleWithName:(id)a0 stage:(unsigned long long)a1;
- (id)reflectionForFunctionDescriptor:(id)a0;
- (id)newVertexIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)pipelineBinaries;
- (id)initWithParent:(id)a0;
- (void)setDebugInstrumentationDataForstage:(id)a0 stage:(unsigned long long)a1;
- (id)newMeshIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)newRenderPipelineStateWithAdditionalBinaryFunctions:(id)a0 error:(id *)a1;
- (id)initWithTileParent:(id)a0;
- (unsigned int)getMeshShaderTelemetryID;
- (id)initWithDevice:(id)a0 meshRenderPipelineStateDescriptor:(id)a1 objectThreadExecutionWidth:(unsigned long long)a2 meshThreadExecutionWidth:(unsigned long long)a3;
- (id)newTileIntersectionFunctionTableWithDescriptor:(id)a0;
- (unsigned long long)imageblockMemoryLengthForDimensions:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0;
- (id)newFragmentIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)newVisibleFunctionTableFromObjectStageWithDescriptor:(id)a0;
- (id)meshFunctionHandleWithFunction:(id)a0;
- (unsigned int)getObjectShaderTelemetryID;
- (id)tileFunctionHandleWithFunction:(id)a0;
- (id)functionHandleWithBinaryFunction:(id)a0 stage:(unsigned long long)a1;
- (id)functionHandleWithFunction:(id)a0 stage:(unsigned long long)a1;
- (id)newRenderPipelineDescriptorForSpecialization;
- (long long)textureWriteFPRoundingMode;
- (id)fragmentFunctionHandleWithFunction:(id)a0;
- (id)newVisibleFunctionTableFromVertexStageWithDescriptor:(id)a0;

@end

@class NSString, NSArray, NSMutableDictionary, GKEntity, SKScene, SKReachConstraints, NSDictionary, NSMutableArray, SKPhysicsBody;

@interface SKNode : NSResponder <NSCopying, NSSecureCoding> {
    void *_skcNode;
    SKNode *_parent;
    NSMutableArray *_children;
    NSMutableArray *_actions;
    NSMutableDictionary *_keyedActions;
    NSMutableDictionary *_keyedSubSprites;
    NSMutableDictionary *_info;
    NSMutableDictionary *_attributeValues;
    NSArray *_constraints;
    unsigned int _version;
    BOOL _userInteractionEnabled;
    BOOL __explicitlySetIsAccessibilityElement;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (weak, nonatomic) GKEntity *entity;
@property (readonly, nonatomic) struct { void /* unknown type, empty encoding */ x0[4]; } globalBoundingVerts;
@property (readonly, nonatomic) struct { void /* unknown type, empty encoding */ x0[4]; } globalAccumulatedBoundingVerts;
@property (readonly, nonatomic) struct CGPath { } *outline;
@property (nonatomic) BOOL _showBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _untransformedBounds;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } _untransformedSize;
@property (nonatomic) struct CGPoint { double x0; double x1; } _anchorPoint;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } _size;
@property (retain, nonatomic) NSMutableDictionary *_info;
@property (readonly, nonatomic) NSArray *_allActions;
@property (readonly, nonatomic) struct shared_ptr<PKCAether> { struct PKCAether *x0; struct __shared_weak_count *x1; } _aether;
@property (nonatomic, getter=isAccessibilityElement) BOOL accessibilityElement;
@property (copy, nonatomic) NSString *accessibilityRole;
@property (copy, nonatomic) NSString *accessibilityRoleDescription;
@property (copy, nonatomic) NSString *accessibilitySubrole;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } accessibilityFrame;
@property (weak, nonatomic) id accessibilityParent;
@property (copy, nonatomic) NSArray *accessibilityChildren;
@property (copy, nonatomic) NSString *accessibilityHelp;
@property (copy, nonatomic) NSString *accessibilityLabel;
@property (nonatomic, getter=isAccessibilityEnabled) BOOL accessibilityEnabled;
@property (weak, nonatomic) GKEntity *entity;
@property BOOL performFullCapture;
@property (readonly, nonatomic) void *_backingNode;
@property (nonatomic) double xRotation;
@property (nonatomic) double yRotation;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frame;
@property (nonatomic) struct CGPoint { double x0; double x1; } position;
@property (nonatomic) double zPosition;
@property (nonatomic) double zRotation;
@property (nonatomic) double xScale;
@property (nonatomic) double yScale;
@property (nonatomic) double speed;
@property (nonatomic) double alpha;
@property (nonatomic, getter=isPaused) BOOL paused;
@property (nonatomic, getter=isHidden) BOOL hidden;
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
@property (nonatomic) long long focusBehavior;
@property (readonly, nonatomic) SKNode *parent;
@property (readonly, nonatomic) NSArray *children;
@property (copy, nonatomic) NSString *name;
@property (readonly, nonatomic) SKScene *scene;
@property (retain, nonatomic) SKPhysicsBody *physicsBody;
@property (retain, nonatomic) NSMutableDictionary *userData;
@property (copy, nonatomic) SKReachConstraints *reachConstraints;
@property (copy, nonatomic) NSArray *constraints;
@property (copy, nonatomic) NSDictionary *attributeValues;

+ (id)node;
+ (id)debugHierarchyChildGroupingID;
+ (id)debugHierarchyObjectsInGroupWithID:(id)a0 onObject:(id)a1 outOptions:(id *)a2;
+ (id)debugHierarchyPropertyDescriptions;
+ (id)debugHierarchyValueForPropertyWithName:(id)a0 onObject:(id)a1 outOptions:(id *)a2 outError:(id *)a3;
+ (id)nodeFromCaptureData:(id)a0;
+ (id)nodeWithFileNamed:(id)a0;
+ (id)nodeWithFileNamed:(id)a0 securelyWithClasses:(id)a1 andError:(id *)a2;

- (void)setSize:(struct CGSize { double x0; double x1; })a0;
- (void)setParent:(id)a0;
- (id)objectForKeyedSubscript:(id)a0;
- (id)actionForKey:(id)a0;
- (void)dealloc;
- (void)setScale:(double)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)removeAllActions;
- (void)_update:(double)a0;
- (void)encodeWithCoder:(id)a0;
- (id)copy;
- (id)init;
- (id)description;
- (void)_performCleanup;
- (BOOL)needsUpdate;
- (id)initWithCoder:(id)a0;
- (BOOL)hasActions;
- (struct CGSize { double x0; double x1; })size;
- (void).cxx_destruct;
- (void)addChild:(id)a0;
- (void)insertChild:(id)a0 atIndex:(long long)a1;
- (void)removeChildAtIndex:(long long)a0;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)accessibilityNotifiesWhenDestroyed;
- (id)containingView;
- (BOOL)containsPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)removeChild:(id)a0;
- (void)removeFromParent;
- (BOOL)intersectsNode:(id)a0;
- (BOOL)hasChildren;
- (BOOL)isEqualToNode:(id)a0;
- (id)childNodeWithName:(id)a0;
- (id)_subnodeFromIndexPath:(id)a0;
- (id)nodeAtPoint:(struct CGPoint { double x0; double x1; })a0 recursive:(BOOL)a1;
- (id)physicsField;
- (void)removeActionForKey:(id)a0;
- (void)runAction:(id)a0;
- (id)nodeAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_getBasePhysicsScale:(float *)a0 yScale:(float *)a1;
- (void)_getWorldTransform:(float *)a0 positionY:(float *)a1 rotation:(float *)a2 xScale:(float *)a3 yScale:(float *)a4;
- (void)removeAllChildren;
- (void)_removeAction:(id)a0;
- (BOOL)_pathFromPhysicsBodyToPoints:(void **)a0 outSize:(unsigned long long *)a1;
- (id)childrenInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertFrameToView:(id)a0;
- (id)_copyImageData;
- (void)_debugPrint:(int)a0;
- (void)_debugPrint:(int)a0 mask:(unsigned long long)a1;
- (id)_descendants;
- (void)_descendantsToMutableArray:(id)a0;
- (id)_descendantsWithPredicate:(id /* block */)a0;
- (void)_descendantsWithPredicate:(id /* block */)a0 toMutableArray:(id)a1;
- (void)_didMakeBackingNode;
- (void)_enumerateChildNodesWithName:(id)a0 usingBlock:(id /* block */)a1 stopPointer:(BOOL *)a2;
- (void)_flippedChangedFrom:(BOOL)a0 to:(BOOL)a1;
- (void)_initAccessibility;
- (void *)_makeBackingNode;
- (void)_processSearchTokens:(struct vector<Token, std::allocator<Token>> { struct Token *x0; struct Token *x1; struct Token *x2; })a0 visited:(void *)a1 usingBlock:(id /* block */)a2 stopPointer:(BOOL *)a3;
- (void)_removeChild:(id)a0;
- (void)_runAction:(id)a0;
- (void)_scaleFactorChangedFrom:(float)a0 to:(float)a1;
- (void)addChild:(id)a0 withKey:(id)a1;
- (id)allIntersectionsWithNode:(id)a0 useAlphaTest:(BOOL)a1;
- (id)archiveToFile:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })calculateAccumulatedFrame;
- (BOOL)containsPoint:(struct CGPoint { double x0; double x1; })a0 withRadius:(double)a1;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 fromNode:(id)a1;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 toNode:(id)a1;
- (struct CGPoint { double x0; double x1; })convertPointFromParent:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointToParent:(struct CGPoint { double x0; double x1; })a0;
- (id)createDebugHierarchyVisualRepresentation;
- (id)createFullCaptureData;
- (void)debugPrint;
- (void)enumerateChildNodesWithName:(id)a0 usingBlock:(id /* block */)a1;
- (BOOL)hasUniformAlphaAndIsVisible;
- (BOOL)inParentHierarchy:(id)a0;
- (BOOL)intersectsNode:(id)a0 useAlphaTest:(BOOL)a1;
- (void)moveToParent:(id)a0;
- (id)nodesAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)removeChildrenInArray:(id)a0;
- (void)runAction:(id)a0 completion:(id /* block */)a1;
- (void)runAction:(id)a0 withKey:(id)a1;
- (void)setValue:(id)a0 forAttributeNamed:(id)a1;
- (Class)swiftClassFromString:(id)a0 moduleName:(id)a1;
- (void)updatePhysicsPositionAndScaleFromSprite;
- (id)valueForAttributeNamed:(id)a0;

@end

@class NSURL, IMKUIProperties, IMKCandidateData, IMKCandidateUIProperties, IMKCandidateDefinitionUnit, IMKCandidateNavigationController, IMKDefinitionToLayoutController, IMKCandidateWindowPositioning, NSString, IMKCandidateCanvas, IMKCandidatePopoverController, IMKWindowController, IMKLayoutToViewController, NSArray, NSView, IMKServer, NSViewController;
@protocol IMKCandidateControllerDelegate, IMKCandidateSelectionViewDelegate;

@interface IMKCandidateController : NSObject {
    struct __IDXIndex { } *_definitionIndexRef;
    NSViewController *_viewController;
}

@property (retain, nonatomic) IMKCandidateData *currentlyShownCandidates;
@property (nonatomic) long long windowType;
@property (nonatomic) double totalCandidateLineSize;
@property (nonatomic) double maxCandidateLineSize;
@property (readonly, nonatomic) double minCandidateLineSize;
@property (nonatomic) BOOL expandedInternal;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } customSize;
@property (nonatomic) double informationViewMinimumSize;
@property (retain, nonatomic) NSView *informationView;
@property (nonatomic) BOOL deferredWindowVisibility;
@property (nonatomic, getter=isGrouping) BOOL grouping;
@property (nonatomic) BOOL windowVisibleWithDeferral;
@property (nonatomic) BOOL windowVisibilityDidChange;
@property (retain, nonatomic) IMKCandidateWindowPositioning *windowPositioning;
@property (nonatomic) struct CGPoint { double x; double y; } previousPosition;
@property (readonly, nonatomic) BOOL showsLegacyScroller;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } extraSize;
@property (readonly, nonatomic) BOOL shouldLimitWindowSizeToCanvasSize;
@property (nonatomic) id textClient;
@property (nonatomic) struct CGSize { double width; double height; } positionalGridSize;
@property (readonly, nonatomic) BOOL canExpand;
@property (readonly, nonatomic) BOOL hasCandidates;
@property (retain, nonatomic) IMKCandidateNavigationController *navigationController;
@property (retain, nonatomic) IMKWindowController *windowController;
@property (nonatomic) double numberOfColumns;
@property (nonatomic) double numberOfRows;
@property (copy, nonatomic) NSString *displayMethod;
@property (retain, nonatomic) IMKCandidateCanvas *canvas;
@property (retain, nonatomic) NSArray *sortingMethods;
@property (nonatomic) BOOL previousActionWasSortingChange;
@property (nonatomic) double candidateThickness;
@property (readonly, nonatomic) BOOL flattensViewArchitecture;
@property (readonly, nonatomic) BOOL showsAnnotations;
@property (nonatomic) BOOL secondaryCandidatesShowChevron;
@property (readonly, nonatomic) BOOL candidateWindowOnlyHasOneLine;
@property (nonatomic) long long UIState;
@property (readonly, nonatomic) IMKCandidateDefinitionUnit *currentlySelectedCandidate;
@property (nonatomic) struct __DCSDictionary { } *definitionDictionary;
@property (retain, nonatomic) NSURL *descriptionStyleSheet;
@property (retain, nonatomic) IMKDefinitionToLayoutController *definitionToLayoutController;
@property (nonatomic) BOOL descriptionEnabled;
@property (nonatomic) id<IMKCandidateControllerDelegate, IMKCandidateSelectionViewDelegate> delegate;
@property (readonly, nonatomic, getter=isExpanded) BOOL expanded;
@property (nonatomic) double fontSize;
@property (nonatomic) BOOL forceNoIncrementalSearchPositioning;
@property (retain, nonatomic) IMKServer *inputServer;
@property (readonly, nonatomic) BOOL isUsingIncrementalSearch;
@property (copy, nonatomic) NSString *noCandidatesMessage;
@property (nonatomic) BOOL optimizeLayoutForFixedSize;
@property (nonatomic) long long layoutDirection;
@property (nonatomic) long long layoutOrientation;
@property (retain, nonatomic) IMKLayoutToViewController *layoutToViewController;
@property (nonatomic) unsigned long long numberOfSimilarWidthCandidates;
@property (retain, nonatomic) IMKCandidatePopoverController *popoverController;
@property (retain, nonatomic) IMKUIProperties *properties;
@property (nonatomic) BOOL resetCandidatesOnRelayout;
@property (nonatomic) BOOL resizeOnSelectionChanged;
@property (copy, nonatomic) NSString *selectedCandidateKey;
@property (retain, nonatomic) NSArray *selectionKeyTitles;
@property (nonatomic) unsigned long long topVisibleLine;
@property (nonatomic) unsigned long long truncationType;
@property (retain, nonatomic) IMKCandidateUIProperties *UIProperties;
@property (copy, nonatomic) NSString *UISettingName;
@property (nonatomic) long long UIType;
@property (nonatomic, getter=isVisible) BOOL visible;
@property (readonly, nonatomic) BOOL windowIsHorizontal;
@property (nonatomic) long long windowLevel;
@property (readonly, nonatomic) BOOL windowWillClose;
@property (readonly, nonatomic) BOOL windowTextIsVerticallyAligned;

+ (BOOL)isAppleInternal;
+ (id)defaultSelectionKeyTitles;
+ (id)sharedCandidateController;
+ (id)sharedFunctionRowCandidateController;
+ (BOOL)touchBarAvailable;

- (void)moveForward:(id)a0;
- (void)touchesEnded;
- (id)viewController;
- (void)dealloc;
- (id)styleSheet;
- (void)reload;
- (id)init;
- (BOOL)handleKeyboardEvent:(id)a0;
- (void)beginGrouping;
- (void)moveUp:(id)a0;
- (void)pageUp:(id)a0;
- (void)animateChanges;
- (void)collapse;
- (void)endGrouping;
- (void)expand;
- (void)hide;
- (void)moveDown:(id)a0;
- (void)moveLeft:(id)a0;
- (void)moveRight:(id)a0;
- (void)pageDown:(id)a0;
- (void)clearPasteboard;
- (void)setupProperties;
- (void)updateTopVisibleLineIfNecessary;
- (void)initializeViews;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })layout:(BOOL)a0;
- (void)moveToBeginning;
- (void)setupUISettings;
- (void)updateArrowView;
- (void)addCandidatesToPasteboard;
- (struct CGPoint { double x0; double x1; })adjustedPositionWithGrid:(struct CGPoint { double x0; double x1; })a0;
- (void)arrowViewPressed:(id)a0;
- (double)auxilliaryViewWidthForWindowType:(long long)a0;
- (void)calibrateLayoutForCollapsedHorizontalView;
- (void)calibrateLayoutForExpandedHorizontalView;
- (id)candidateDataForSortingMethod:(id)a0;
- (BOOL)candidateIsVisible:(id)a0;
- (void)changeGroupViewVisibility;
- (void)collapseWindowWithAnimation;
- (void)collapseWindowWithoutAnimation;
- (unsigned long long)currentlySelectedIndex;
- (struct CGSize { double x0; double x1; })customSizeWithWindowType:(long long)a0 expanded:(BOOL)a1;
- (void)didSelectSortingMode:(id)a0;
- (id)elementsPresentInLine:(id)a0 andLine:(id)a1;
- (void)expandWindowWithAnimation;
- (void)forceCollapse;
- (void)layoutAccordingToWindowType;
- (void)layoutAndResizeCandidateView;
- (BOOL)layoutUnitsContainIdentifier:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })layoutWithoutResizingCandidateView;
- (id)lineViewWithNumber:(unsigned long long)a0;
- (double)minimumSelectionViewWidth;
- (void)moveBackwards:(id)a0;
- (void)moveElementsInFromTheLeft:(id)a0 inLine:(id)a1;
- (void)moveElementsOutToTheLeft:(id)a0 inLine:(id)a1;
- (void)moveToEnd;
- (void)moveToNextCandidate:(id)a0;
- (void)moveToPreviousCandidate:(id)a0;
- (void)nilOutConnectionsToCandidateController;
- (BOOL)numberKeyPressed:(unsigned long long)a0;
- (void)performVisualLineUpdates;
- (void)prepareNewLayoutForAnimation:(id)a0;
- (void)reloadWithUpdatingFirstCandidate:(BOOL)a0;
- (void)requestRadar;
- (void)resetPreviousPosition;
- (void)resizeWindow:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })resizedWindowFrame;
- (id)restrictedLayoutForCandidates:(id)a0;
- (void)scrubbedCandidate:(id)a0;
- (void)selectCandidate:(id)a0 confirm:(BOOL)a1;
- (void)selectCurrentlyFocusedItem;
- (void)selectDefaultSortingMethod;
- (void)selectFirstCandidate;
- (void)selectNextSortingMethod;
- (void)selectPreviousSortingMethod;
- (void)selectSortingMethod:(id)a0 expand:(BOOL)a1;
- (BOOL)selectionKeyPressed:(id)a0;
- (double)selectionViewHeight;
- (void)setCandidateWindowCanvas;
- (void)setCurrentlySelectedIndex:(unsigned long long)a0;
- (void)setLayoutConstraintsForWindowTypeWithCandidates:(id)a0;
- (void)setOriginalFramesForNewLine:(id)a0 originalLine:(id)a1;
- (void)setSelectedCandidateKey:(id)a0 clickCount:(unsigned long long)a1;
- (void)setSelectedCandidateKey:(id)a0 clickCount:(unsigned long long)a1 sendMessageToDelegate:(BOOL)a2;
- (void)setWindowFrameWithAnimation:(BOOL)a0;
- (BOOL)shouldShowRadarButton;
- (BOOL)shouldShowSelectionUpdateInTouchBar;
- (void)shouldUpdateForPressAndHold:(id)a0;
- (void)showPrimaryCandidateWindowAndSelectCandidate:(id)a0;
- (void)stepperViewDownArrowPressed;
- (void)stepperViewUpArrowPressed;
- (struct CGPoint { double x0; double x1; })topPositionForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)topVisibleCandidates;
- (void)topVisibleLineDidMoveTo:(unsigned long long)a0;
- (struct CGPoint { double x0; double x1; })topWindowPositionForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withClient:(id)a1;
- (void)touchesEndedOutsideView;
- (void)transformDefinitionUnitsIntoLayoutUnits;
- (void)unselectCandidates;
- (void)updateAuxilliaryViews;
- (void)updateDocumentViewSize;
- (void)updateGroupNames;
- (void)updateHighlights;
- (void)updateIncrementalSearchStateWithClient:(id)a0;
- (void)updatePreviousPosition;
- (void)updateSelectionForKey:(id)a0;
- (void)updateSelectionKeys;
- (void)updateStepper;
- (void)updateUIType;
- (void)updateVisibleSelection;
- (void)updateWindowLevelWithClient:(id)a0;
- (void)updateWindowType;
- (double)widthOfStandardRow;
- (BOOL)windowTypeIsSortable;

@end

@interface DRDevice : NSObject {
    void *_ref;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (id)devices;
+ (id)XMLComplianceElementWithNumber:(id)a0;
+ (void)XMLAddComplianceDTDToDTD:(id)a0;
+ (void)XMLAddDeviceDTDToDTD:(id)a0;
+ (void)XMLAddDeviceListDTDToDTD:(id)a0;
+ (void)XMLAddDiscInfoBlockDTDToDTD:(id)a0;
+ (void)XMLAddDiscInfoPOWResourcesBlockDTDToDTD:(id)a0;
+ (void)XMLAddFirmwareDTDToDTD:(id)a0;
+ (void)XMLAddInterconnectDTDToDTD:(id)a0;
+ (void)XMLAddProductDTDToDTD:(id)a0;
+ (void)XMLAddProfilePathDTDToDTD:(id)a0;
+ (void)XMLAddSupportDTDToDTD:(id)a0;
+ (void)XMLAddVendorDTDToDTD:(id)a0;
+ (id)XMLDeviceListElement;
+ (id)XMLRawDataElementWithData:(id)a0;
+ (void)XMLAddComplianceListDTDToDTD:(id)a0;
+ (void)XMLAddDeviceInfoDTDToDTD:(id)a0;
+ (void)XMLAddDeviceStatusDTDToDTD:(id)a0;
+ (void)XMLAddDiscInfoDTDToDTD:(id)a0;
+ (void)XMLAddDiscInfoTrackResourcesBlockDTDToDTD:(id)a0;
+ (void)XMLAddInquiryDTDToDTD:(id)a0;
+ (void)XMLAddMediaInfoDTDToDTD:(id)a0;
+ (void)XMLAddProfileListDTDToDTD:(id)a0;
+ (void)XMLAddRawDataDTDToDTD:(id)a0;
+ (void)XMLAddTrackInfoListDTDToDTD:(id)a0;
+ (id)XMLComplianceListElementWithArray:(id)a0;
+ (id)deviceForBSDName:(id)a0;
+ (id)deviceForIORegistryEntryPath:(id)a0;
+ (BOOL)isPropertyKey:(id)a0;
+ (id)keyPathsForValuesAffectingDRDeviceBurnSpeedsKey;
+ (id)keyPathsForValuesAffectingDRDeviceCurrentWriteSpeedKey;
+ (id)keyPathsForValuesAffectingDRDeviceIsBusyKey;
+ (id)keyPathsForValuesAffectingDRDeviceIsTrayOpenKey;
+ (id)keyPathsForValuesAffectingDRDeviceMaximumWriteSpeedKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaBSDNameKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaBlocksFreeKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaBlocksOverwritableKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaBlocksUsedKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaClassKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaDoubleLayerL0DataZoneBlocksKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaInfoKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaIsAppendableKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaIsBlankKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaIsErasableKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaIsOverwritableKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaIsReservedKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaSessionCountKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaStateKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaTrackCountKey;
+ (id)keyPathsForValuesAffectingDRDeviceMediaTypeKey;
+ (id)keyPathsForValuesAffectingDRDeviceTrackInfoKey;
+ (id)keyPathsForValuesAffectingDRDeviceTrackRefsKey;
+ (void)setupBindings;

- (void)finalize;
- (BOOL)isValid;
- (unsigned long long)_cfTypeID;
- (void)dealloc;
- (id)displayName;
- (id)valueForKey:(id)a0;
- (void)forwardInvocation:(id)a0;
- (id)bsdName;
- (id)valueForUndefinedKey:(id)a0;
- (id)mediaType;
- (id)description;
- (id)info;
- (id)status;
- (id)methodSignatureForSelector:(SEL)a0;
- (BOOL)isEqualToDevice:(id)a0;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)a0;
- (BOOL)isSupported;
- (id)_status;
- (BOOL)mediaIsErasable;
- (unsigned int)mediaTrackCount;
- (id)XMLDeviceElement;
- (id)XMLDiscInfoElement;
- (id)XMLFirmwareElement;
- (id)XMLInquiryElement;
- (id)XMLMediaInfoElement;
- (id)XMLProfileListElement;
- (id)XMLTrackInfoListElement;
- (BOOL)vendorSupported;
- (id)_DiscRecording_KVCGetterPlaceholder;
- (BOOL)mediaIsReserved;
- (id)XMLDeviceInfoElement;
- (id)XMLDeviceStatusElement;
- (id)XMLFeatureElement:(id)a0;
- (id)XMLFormatCapacitiesElement;
- (id)XMLInterconnectElement;
- (id)XMLProductElement;
- (id)XMLProfilePathElement;
- (id)XMLSupportElement;
- (id)XMLVendorElement;
- (void)_DiscRecording_KVCSetterPlaceholder:(id)a0;
- (int)_acquireExclusiveAccess;
- (BOOL)_boolForPrivateProperty:(id)a0;
- (int)_closeTray;
- (int)_ejectMedia;
- (long long)_filterScore;
- (id)_locationDescription;
- (void)_notifyObserversOfStatusChange;
- (struct DRDeviceObject { void /* function */ **x0; struct DRMutex { struct DRMutexObject *x0; } x1; void *x2; struct DRRefConCallbacks { unsigned long long x0; void /* function */ *x1; void /* function */ *x2; } x3; struct __CFDictionary *x4; struct __DRType *x5; void *x6; } *)_obj;
- (int)_openTray;
- (BOOL)acquireExclusiveAccess;
- (void)acquireMediaReservation;
- (BOOL)appleShipping;
- (BOOL)appleSupported;
- (id)cdText;
- (BOOL)closeTray;
- (float)currentWriteSpeed;
- (BOOL)ejectMedia;
- (id)firmwareString;
- (id)initWithRegistryPath:(struct __CFString { } *)a0 forGUID:(id)a1;
- (id)initWithRegistryPath:(struct __CFString { } *)a0 forGUID:(id)a1 usingProfile:(id)a2;
- (id)interconnectString;
- (id)ioRegistryEntryPath;
- (float)maximumWriteSpeed;
- (BOOL)mediaIsAppendable;
- (BOOL)mediaIsBlank;
- (BOOL)mediaIsBusy;
- (BOOL)mediaIsOverwritable;
- (BOOL)mediaIsPresent;
- (BOOL)mediaIsTransitioning;
- (unsigned int)mediaSessionCount;
- (id)mediaSpaceFree;
- (id)mediaSpaceOverwritable;
- (id)mediaSpaceUsed;
- (BOOL)openTray;
- (id)productString;
- (void)releaseExclusiveAccess;
- (void)releaseMediaReservation;
- (BOOL)trayIsOpen;
- (id)vendorString;
- (BOOL)writesCD;
- (BOOL)writesCDR;
- (BOOL)writesCDRW;
- (BOOL)writesCDText;
- (BOOL)writesDVD;
- (BOOL)writesDVDR;
- (BOOL)writesDVDRAM;

@end

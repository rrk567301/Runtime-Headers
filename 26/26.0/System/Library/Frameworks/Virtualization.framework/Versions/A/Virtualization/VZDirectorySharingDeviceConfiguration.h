@class NSString;

@interface VZDirectorySharingDeviceConfiguration : NSObject <_VZVirtualMachineConfigurationEncodable, NSCopying>

@property (readonly) struct expected<std::variant<VzCore::VirtualMachineConfiguration::DirectorySharingDevices::VirtioFileSystem>, NSError *> { struct __conditional_no_unique_address<true, std::__expected_base<std::variant<VzCore::VirtualMachineConfiguration::DirectorySharingDevices::VirtioFileSystem>, NSError *>::__repr> { struct __repr { struct __conditional_no_unique_address<false, std::__expected_base<std::variant<VzCore::VirtualMachineConfiguration::DirectorySharingDevices::VirtioFileSystem>, NSError *>::__union_t> { union __union_t { struct variant<VzCore::VirtualMachineConfiguration::DirectorySharingDevices::VirtioFileSystem> { struct __impl<VzCore::VirtualMachineConfiguration::DirectorySharingDevices::VirtioFileSystem> { union __union<std::__variant_detail::_Trait::_Available, 0UL, VzCore::VirtualMachineConfiguration::DirectorySharingDevices::VirtioFileSystem> { char x0; struct __alt<0UL, VzCore::VirtualMachineConfiguration::DirectorySharingDevices::VirtioFileSystem> { struct VirtioFileSystem { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x0; struct optional<std::variant<VzCore::Hardware::DirectoryShares::Single, VzCore::Hardware::DirectoryShares::Multiple, VzCore::Hardware::DirectoryShares::Rosetta>> { union { char x0; struct variant<VzCore::Hardware::DirectoryShares::Single, VzCore::Hardware::DirectoryShares::Multiple, VzCore::Hardware::DirectoryShares::Rosetta> { struct __impl<VzCore::Hardware::DirectoryShares::Single, VzCore::Hardware::DirectoryShares::Multiple, VzCore::Hardware::DirectoryShares::Rosetta> { union __union<std::__variant_detail::_Trait::_Available, 0UL, VzCore::Hardware::DirectoryShares::Single, VzCore::Hardware::DirectoryShares::Multiple, VzCore::Hardware::DirectoryShares::Rosetta> { char x0; struct __alt<0UL, VzCore::Hardware::DirectoryShares::Single> { struct Single { struct SharedDirectory { struct FileDescriptor { int x0; } x0; BOOL x1; unsigned long long x2; } x0; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 1UL, VzCore::Hardware::DirectoryShares::Multiple, VzCore::Hardware::DirectoryShares::Rosetta> { char x0; struct __alt<1UL, VzCore::Hardware::DirectoryShares::Multiple> { struct Multiple { struct unordered_map<std::string, VzCore::Hardware::SharedDirectory, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, VzCore::Hardware::SharedDirectory>>> { struct __hash_table<std::__hash_value_type<std::string, VzCore::Hardware::SharedDirectory>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, VzCore::Hardware::SharedDirectory>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, VzCore::Hardware::SharedDirectory>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, VzCore::Hardware::SharedDirectory>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, VzCore::Hardware::SharedDirectory>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, VzCore::Hardware::SharedDirectory>, void *> *> *>>> { void **x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, VzCore::Hardware::SharedDirectory>, void *> *> *>> { unsigned long long x0; } x1; } x0; struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, VzCore::Hardware::SharedDirectory>, void *> *> { void *x0; } x1; unsigned long long x2; float x3; } x0; } x0; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 2UL, VzCore::Hardware::DirectoryShares::Rosetta> { char x0; struct __alt<2UL, VzCore::Hardware::DirectoryShares::Rosetta> { struct Rosetta { struct SharedDirectory { struct FileDescriptor { int x0; } x0; BOOL x1; unsigned long long x2; } x0; struct optional<VzCore::Hardware::DirectoryShares::Rosetta::CachingOptions> { union { char x0; struct CachingOptions { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x0; BOOL x1; } x1; } x0; BOOL x1; } x1; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 3UL> { } x2; } x2; } x2; } x0; unsigned int x1; } x0; } x1; } x0; BOOL x1; } x1; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 1UL> { } x2; } x0; unsigned int x1; } x0; } x0; id x1; } x0; } x0; BOOL x1; } x0; } x0; } _directorySharingDevice;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

@end

@interface _VZMacBifrostDeviceConfiguration : _VZBifrostDeviceConfiguration

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (struct expected<VzCore::VirtualMachineConfiguration::BifrostDevice, NSError *> { struct __conditional_no_unique_address<true, std::__expected_base<VzCore::VirtualMachineConfiguration::BifrostDevice, NSError *>::__repr> { struct __repr { struct __conditional_no_unique_address<false, std::__expected_base<VzCore::VirtualMachineConfiguration::BifrostDevice, NSError *>::__union_t> { union __union_t { struct BifrostDevice { struct variant<VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::Xpc, VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::UnixSocket> { struct __impl<VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::Xpc, VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::UnixSocket> { union __union<std::__variant_detail::_Trait::_Available, 0UL, VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::Xpc, VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::UnixSocket> { char x0; struct __alt<0UL, VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::Xpc> { struct Xpc { } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 1UL, VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::UnixSocket> { char x0; struct __alt<1UL, VzCore::VirtualMachineConfiguration::BifrostDevice::Attachments::UnixSocket> { struct UnixSocket { struct path { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x0; } x0; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 2UL> { } x2; } x2; } x0; unsigned int x1; } x0; } x0; unsigned long long x1; } x0; id x1; } x0; } x0; BOOL x1; } x0; } x0; })_bifrostDevice;
- (struct expected<NSDictionary *, NSError *> { struct __conditional_no_unique_address<true, std::__expected_base<NSDictionary *, NSError *>::__repr> { struct __repr { struct __conditional_no_unique_address<false, std::__expected_base<NSDictionary *, NSError *>::__union_t> { union __union_t { id x0; id x1; } x0; } x0; BOOL x1; } x0; } x0; })encodeWithEncoder:(id)a0;
- (id)initWithAttachment:(id)a0 MMIOSize:(unsigned long long)a1;

@end

@class NSFileHandle;

@interface VZFileHandleNetworkDeviceAttachment : VZNetworkDeviceAttachment

@property (readonly) NSFileHandle *fileHandle;
@property long long maximumTransmissionUnit;

- (id)initWithFileHandle:(id)a0;
- (void).cxx_destruct;
- (struct expected<std::variant<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet>, NSError *> { struct __conditional_no_unique_address<true, std::__expected_base<std::variant<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet>, NSError *>::__repr> { struct __repr { struct __conditional_no_unique_address<false, std::__expected_base<std::variant<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet>, NSError *>::__union_t> { union __union_t { struct variant<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { struct __impl<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { union __union<std::__variant_detail::_Trait::_Available, 0UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { char x0; struct __alt<0UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged> { struct Bridged { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x0; BOOL x1; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 1UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { char x0; struct __alt<1UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor> { struct FileDescriptor { struct FileDescriptor { int x0; } x0; unsigned long long x1; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 2UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { char x0; struct __alt<2UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly> { struct HostOnly { } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 3UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { char x0; struct __alt<3UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat> { struct Nat { BOOL x0; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 4UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { char x0; struct __alt<4UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { struct VhostUser { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x0; int x1; unsigned long long x2; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x3; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x4; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x5; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x6; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 5UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { char x0; struct __alt<5UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Vmnet> { struct Vmnet { struct CfPtr<vmnet_network *> { struct vmnet_network *x0; } x0; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 6UL> { } x2; } x2; } x2; } x2; } x2; } x2; } x0; unsigned int x1; } x0; } x0; id x1; } x0; } x0; BOOL x1; } x0; } x0; })_attachment;

@end

@class GCMotion, GCControllerLiveInput, _GCControllerInputComponent, GCDeviceBattery, NSObject, GCDeviceLight, NSMutableArray, GCGamepad, GCExtendedGamepad, NSString, GCPhysicalInputProfile, NSArray, GCMicroGamepad, GCDeviceHaptics;
@protocol GCControllerProductInfo, GCDeviceHapticCapabilityInfo, NSObject, GCControllerPlayerIndicator, GCDeviceSpatial, OS_dispatch_queue, GCDeviceLightComponent, GCControllerCoalescingDelegate, GCNamedProfile, GCControllerSettingsComponent, GCSystemGestureComponent, NSCopying, GCControllerMotionConfigurableSensors, GCDeviceBatteryComponent, NSSecureCoding;

@interface GCController : NSObject <NSSecureCoding, _GCIPCObject, GCDevice> {
    id<NSCopying, NSObject, NSSecureCoding> _identifier;
    id<GCControllerProductInfo> _info;
    _GCControllerInputComponent *_input;
    GCPhysicalInputProfile *_physicalInput;
    GCMotion *_motion;
    id<GCControllerMotionConfigurableSensors> _motionConfigurableSensors;
    id<GCControllerSettingsComponent> _settings;
    id<GCControllerPlayerIndicator> _playerIndicator;
    id<GCDeviceHapticCapabilityInfo> _hapticCapabilityInfo;
    id<GCDeviceLightComponent> _light;
    id<GCDeviceBatteryComponent> _battery;
    id<GCSystemGestureComponent> _systemGesture;
    id<GCNamedProfile> _profile;
    id _coalescingDelegate;
    _GCControllerInputComponent *_legacy_input;
    NSString *_uniqueIdentifier;
    NSMutableArray *_hidServices;
    NSString *_physicalDeviceUniqueID;
    NSString *_debugName;
    NSString *_vendorName;
    NSString *_description;
    unsigned long long _deviceHash;
    long long _playerIndex;
    BOOL _physicalDeviceUsesCompass;
    BOOL _forwarded;
    BOOL _allHIDDevicesConnected;
    BOOL _published;
    BOOL _snapshot;
}

@property (class, readonly) BOOL supportsSecureCoding;
@property (class, readonly) GCController *current;
@property (class, nonatomic) BOOL shouldMonitorBackgroundEvents;

@property (copy, nonatomic) id /* block */ __deprecated_controllerPausedHandler;
@property (retain, nonatomic) GCPhysicalInputProfile<GCNamedProfile> *profile;
@property (weak, nonatomic) id<GCControllerCoalescingDelegate> coalescingDelegate;
@property (retain, nonatomic) NSString *uniqueIdentifier;
@property (readonly) NSArray *hidServices;
@property (retain, nonatomic) NSString *physicalDeviceUniqueID;
@property (nonatomic) BOOL physicalDeviceUsesCompass;
@property (readonly, nonatomic) unsigned long long deviceHash;
@property (copy, nonatomic) NSString *debugName;
@property (nonatomic, getter=isForwarded) BOOL forwarded;
@property (nonatomic, getter=areAllHIDDevicesConnected) BOOL allHIDDevicesConnected;
@property (nonatomic, getter=isPublished) BOOL published;
@property (readonly, getter=isSnapshot) BOOL snapshot;
@property (readonly) NSString *persistentIdentifier;
@property (readonly, nonatomic) NSString *physicalInputProfileName;
@property (readonly, nonatomic) NSString *detailedProductCategory;
@property (readonly, nonatomic) NSString *anonymizedIdentifier;
@property (copy, nonatomic) NSArray *components;
@property (readonly, nonatomic) id<GCControllerMotionConfigurableSensors> motionConfigurableSensors;
@property (readonly, nonatomic) id<GCSystemGestureComponent> systemGestureComponent;
@property (copy, nonatomic) id /* block */ controllerPausedHandler;
@property (readonly, nonatomic, getter=isAttachedToDevice) BOOL attachedToDevice;
@property (nonatomic) long long playerIndex;
@property (readonly, nonatomic) GCControllerLiveInput *input;
@property (readonly, copy, nonatomic) GCDeviceBattery *battery;
@property (readonly, nonatomic) GCPhysicalInputProfile *physicalInputProfile;
@property (readonly, nonatomic) GCGamepad *gamepad;
@property (readonly, nonatomic) GCMicroGamepad *microGamepad;
@property (readonly, nonatomic) GCExtendedGamepad *extendedGamepad;
@property (readonly, nonatomic) GCMotion *motion;
@property (readonly, retain, nonatomic) GCDeviceLight *light;
@property (readonly, retain, nonatomic) GCDeviceHaptics *haptics;
@property (readonly) id<NSObject, NSCopying, NSSecureCoding> identifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *handlerQueue;
@property (readonly, copy, nonatomic) NSString *vendorName;
@property (readonly, nonatomic) NSString *productCategory;
@property (readonly) id<GCDeviceSpatial> spatial;

+ (id)controllers;
+ (void)__daemon__appDidEnterBackground;
+ (void)stopWirelessControllerDiscovery;
+ (void)__daemon__appWillEnterForeground;
+ (void)__openXPC__;
+ (void)__openXPC_and_CBApplicationDidBecomeActive__;
+ (void)__open__;
+ (BOOL)_settingsSupportedForBLEDevice:(id)a0 settingsStore:(id)a1;
+ (BOOL)_settingsSupportedForBTClassicDevice:(id)a0 settingsStore:(id)a1;
+ (void)_startWirelessControllerDiscoveryWithBTClassic:(BOOL)a0 btle:(BOOL)a1 completionHandler:(id /* block */)a2;
+ (void)_startWirelessControllerDiscoveryWithCompanions:(BOOL)a0 btClassic:(BOOL)a1 btle:(BOOL)a2 completionHandler:(id /* block */)a3;
+ (id)controllerWithExtendedGamepad;
+ (id)controllerWithMicroGamepad;
+ (BOOL)settingsSupportedForCBDevice:(id)a0;
+ (id)snapshotWithProfile:(id)a0;
+ (void)startWirelessControllerDiscoveryWithCompletionHandler:(id /* block */)a0;
+ (BOOL)supportsHIDDevice:(struct __IOHIDDevice { } *)a0;
+ (BOOL)userHasPairedGameController;
+ (BOOL)userHasPairedGameControllerSupportingInteractionProfile:(id)a0;

- (id)initWithProfile:(id)a0;
- (unsigned int)sampleRate;
- (void)dealloc;
- (void)encodeWithCoder:(id)a0;
- (void)setVendorName:(id)a0;
- (id)capture;
- (id)initWithCoder:(id)a0;
- (void).cxx_destruct;
- (id)initWithComponents:(id)a0;
- (id)_legacy_gamepad;
- (void)clearServiceRef;
- (void)setHidServices:(id)a0;
- (void)_legacy_dealloc;
- (void)_legacy_noteInputProfileAccess:(void *)a0;
- (void)addServiceRefs:(id)a0;
- (void)_addComponent:(id)a0;
- (void)_becomeCurrent;
- (id)_componentOfClass:(Class)a0;
- (id)_componentWithProtocol:(id)a0;
- (id)_legacy_description;
- (id)_legacy_extendedGamepad;
- (void)_legacy_handleEvent:(struct __IOHIDEvent { } *)a0;
- (id)_legacy_input;
- (void)_legacy_invalidateDescription;
- (BOOL)_legacy_isAttachedToDevice;
- (id)_legacy_microGamepad;
- (id)_legacy_motion;
- (id)_legacy_physicalInputProfile;
- (id)_legacy_physicalInputProfileName;
- (long long)_legacy_playerIndex;
- (id)_legacy_productCategory;
- (void)_legacy_setPlayerIndex:(long long)a0;
- (id)_legacy_vendorName;
- (void)addServiceRef:(id)a0;
- (id)componentForClass:(Class)a0;
- (id)componentForProtocol:(id)a0;
- (id)controllerSettings;
- (BOOL)displayTrueSiriRemoteName;
- (id)hapticEngines;
- (BOOL)hasServiceRef:(struct __IOHIDServiceClient { } *)a0;
- (id)initWithIdentifier:(id)a0 components:(id)a1;
- (id)initWithIdentifier:(id)a0 queue:(id)a1 components:(id)a2;
- (id)initWithProfileClass:(Class)a0 service:(id)a1;
- (void)initializeHapticEngines;
- (BOOL)isATVRemote;
- (BOOL)isComponentBased;
- (void)removeComponent:(id)a0;
- (void)removeHapticEngines;
- (void)removeServiceRef:(struct __IOHIDServiceClient { } *)a0;
- (void)setDeviceHash:(unsigned long long)a0;

@end

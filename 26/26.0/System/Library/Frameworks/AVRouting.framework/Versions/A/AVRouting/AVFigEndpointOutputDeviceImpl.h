@class NSString, NSArray, NSData, NSDictionary, NSNumber, AVRoutingWeakReference;
@protocol FigRoutingContextFactory, AVOutputDeviceImplSupport, AVOutputDeviceDelegate;

@interface AVFigEndpointOutputDeviceImpl : NSObject <AVOutputDeviceImpl> {
    AVRoutingWeakReference *_weakObserver;
    struct OpaqueFigEndpoint { } *_figEndpoint;
    struct OpaqueFigVolumeControllerState { } *_volumeController;
    id<FigRoutingContextFactory> _routingContextFactory;
    BOOL _useRouteConfigUpdatedNotification;
}

@property (weak) id<AVOutputDeviceImplSupport> implEventListener;
@property (weak) id<AVOutputDeviceDelegate> delegate;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, copy, nonatomic) NSString *ID;
@property (readonly, nonatomic) long long deviceType;
@property (readonly, nonatomic) long long deviceSubType;
@property (readonly, nonatomic) long long clusterType;
@property (readonly, nonatomic) long long configuredClusterSize;
@property (readonly, nonatomic) NSString *manufacturer;
@property (readonly, copy, nonatomic) NSString *modelID;
@property (readonly, nonatomic) NSString *serialNumber;
@property (readonly, nonatomic) NSString *firmwareVersion;
@property (readonly, copy, nonatomic) NSData *identifyingMACAddress;
@property (readonly, nonatomic) NSArray *clusteredDeviceDescriptions;
@property (readonly, nonatomic) BOOL isClusterLeader;
@property (readonly, nonatomic) NSString *clusterID;
@property (readonly, nonatomic) BOOL producesLowFidelityAudio;
@property (readonly, nonatomic, getter=isAppleAccessory) BOOL appleAccessory;
@property (readonly, nonatomic, getter=isEligibleToBePredictedOutputDevice) BOOL eligibleToBePredictedOutputDevice;
@property (readonly, nonatomic, getter=isActivatedForContinuityScreen) BOOL activatedForContinuityScreen;
@property (readonly, nonatomic, getter=isCached) BOOL cached;
@property (readonly, nonatomic) NSNumber *batteryLevel;
@property (readonly, nonatomic) NSNumber *caseBatteryLevel;
@property (readonly, nonatomic) NSNumber *leftBatteryLevel;
@property (readonly, nonatomic) NSNumber *rightBatteryLevel;
@property (readonly, nonatomic) NSNumber *supportsDataOverACLProtocol;
@property (readonly, nonatomic) NSNumber *isInEar;
@property (readonly, nonatomic) NSDictionary *airPlayProperties;
@property (readonly, nonatomic, getter=isInUseByPairedDevice) BOOL inUseByPairedDevice;
@property (readonly, copy, nonatomic) NSArray *connectedPairedDevices;
@property (readonly, nonatomic) unsigned long long deviceFeatures;
@property (readonly, nonatomic) BOOL requiresAuthorization;
@property (readonly, nonatomic) BOOL automaticallyAllowsConnectionsFromPeersInHomeGroup;
@property (readonly, nonatomic) BOOL onlyAllowsConnectionsFromPeersInHomeGroup;
@property (readonly, nonatomic) BOOL canAccessRemoteAssets;
@property (readonly, nonatomic) BOOL canAccessAppleMusic;
@property (readonly, nonatomic) BOOL canAccessiCloudMusicLibrary;
@property (readonly, nonatomic) BOOL supportsBufferedAirPlay;
@property (readonly, nonatomic) long long mediaSessionStatus;
@property (readonly, getter=isCarPlayVideoAllowed) BOOL carPlayVideoAllowed;
@property (readonly, getter=isCarPlayVideoActive) BOOL carPlayVideoActive;
@property (readonly) float volume;
@property (readonly) BOOL canSetVolume;
@property (readonly) BOOL canMute;
@property (getter=isMuted) BOOL muted;
@property (readonly) long long volumeControlType;
@property (readonly, nonatomic) BOOL canBeGrouped;
@property (readonly, copy, nonatomic) NSString *groupID;
@property (readonly, copy, nonatomic) NSString *proposedGroupID;
@property (readonly, nonatomic) BOOL canBeGroupLeader;
@property (readonly, nonatomic) BOOL isGroupLeader;
@property (readonly, nonatomic) BOOL participatesInGroupPlayback;
@property (readonly, nonatomic) BOOL groupContainsGroupLeader;
@property (readonly, nonatomic) NSString *logicalDeviceID;
@property (readonly, nonatomic) BOOL isLogicalDeviceLeader;
@property (readonly, nonatomic) BOOL canCommunicateWithAllLogicalDeviceMembers;
@property (readonly, nonatomic) BOOL canRelayCommunicationChannel;
@property (readonly, nonatomic) BOOL canPlayEncryptedProgressiveDownloadAssets;
@property (readonly, nonatomic) BOOL canFetchMediaDataFromSender;
@property (readonly, nonatomic) BOOL presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
@property (readonly, nonatomic) BOOL supportsBluetoothSharing;
@property (readonly, nonatomic) long long HAPConformance;
@property (readonly, nonatomic) BOOL supportsHeadTrackedSpatialAudio;
@property (readonly, nonatomic) BOOL allowsHeadTrackedSpatialAudio;
@property (readonly, nonatomic) NSString *headTrackedSpatialAudioMode;
@property (readonly, nonatomic, getter=isHeadTrackedSpatialAudioActive) BOOL headTrackedSpatialAudioActive;
@property (readonly, nonatomic) NSArray *availableBluetoothListeningModes;
@property (readonly, nonatomic) NSString *currentBluetoothListeningMode;
@property (readonly, nonatomic) NSString *alternateTransportType;
@property (readonly, nonatomic) BOOL supportsConversationDetection;
@property (readonly, nonatomic, getter=isConversationDetectionEnabled) BOOL conversationDetectionEnabled;
@property (readonly, nonatomic) NSArray *OEMIcons;
@property (readonly, nonatomic) NSString *OEMIconLabel;
@property (readonly, nonatomic) BOOL OEMIconVisible;
@property (readonly, nonatomic) NSArray *outputDeviceHIDs;
@property (readonly, nonatomic) BOOL nightMode;
@property (readonly, nonatomic, getter=isNightModeSupported) BOOL nightModeSupported;
@property (readonly, nonatomic) BOOL rightHandDrive;
@property (readonly, nonatomic) NSArray *limitedUIElements;
@property (readonly, nonatomic) BOOL limitedUI;
@property (readonly, nonatomic) BOOL carOwnsScreen;
@property (readonly, nonatomic) BOOL ownsTurnByTurnNavigation;
@property (readonly, nonatomic) BOOL recognizingSpeech;
@property (readonly, nonatomic) NSArray *supportedFeatures;
@property (readonly, nonatomic) long long electronicTollCollection;
@property (readonly, nonatomic) long long navigationAidedDriving;
@property (readonly, nonatomic) long long transportType;
@property (readonly, nonatomic) NSData *MFiCertificateSerialNumber;
@property BOOL siriForwardingEnabled;
@property (readonly, nonatomic) BOOL carOwnsMainAudio;
@property (retain, nonatomic) NSDictionary *displayCornerMasks;
@property (readonly, nonatomic) long long voiceTriggerMode;
@property (readonly, nonatomic) long long authenticationType;
@property (readonly, nonatomic, getter=isActivated) BOOL activated;
@property (readonly, nonatomic) NSArray *screens;
@property (readonly, nonatomic) NSDictionary *outputDeviceInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setCurrentBluetoothListeningMode:(id)a0;
- (void)suggestUIWithURLs:(id)a0 completionHandler:(id /* block */)a1;
- (void)setVolume:(float)a0;
- (void)_iOSUIRequestedNotification:(id)a0;
- (void)setMediaRemoteData:(id)a0 completionHandler:(id /* block */)a1;
- (void)_mutedDidChangeForEndpointWithID:(struct __CFString { } *)a0;
- (float)volumeForActivatedDeviceClusterMembersWithRoomID:(id)a0;
- (void)dealloc;
- (void)decreaseVolumeByCount:(long long)a0;
- (void)_endpointVolumeControlTypeDidChangeForEndpointWithID:(struct __CFString { } *)a0;
- (void)performHapticFeedbackForUUID:(id)a0 withHapticType:(id)a1 completionHandler:(id /* block */)a2;
- (void)requestCarUIForURL:(id)a0 withUUID:(id)a1;
- (void)configureUsingBlock:(id /* block */)a0 options:(id)a1 completionHandler:(id /* block */)a2;
- (void)_unhandledRemoteCommandNotification:(id)a0;
- (void)_canSetEndpointVolumeDidChangeForEndpointWithID:(struct __CFString { } *)a0;
- (void)requestViewArea:(long long)a0 forScreenID:(id)a1;
- (id)init;
- (BOOL)setHeadTrackedSpatialAudioMode:(id)a0 error:(id *)a1;
- (id)requestTurnByTurnNavigationOwnership;
- (BOOL)setConversationDetectionEnabled:(BOOL)a0 error:(id *)a1;
- (void)_vehicleInformationDidChange:(id)a0;
- (id)borrowScreenForClient:(id)a0 reason:(id)a1;
- (void)increaseVolumeByCount:(long long)a0;
- (void)_volumeForEndpointDidChange:(struct __CFString { } *)a0 forRoomID:(struct __CFString { } *)a1;
- (id)currentScreenViewAreaForScreenID:(id)a0;
- (BOOL)setCurrentBluetoothListeningMode:(id)a0 error:(id *)a1;
- (void)takeScreenForClient:(id)a0 reason:(id)a1;
- (BOOL)setAllowsHeadTrackedSpatialAudio:(BOOL)a0 error:(id *)a1;
- (void)setSecondDisplayEnabled:(BOOL)a0;
- (void)_volumeDidChangeForEndpointWithID:(struct __CFString { } *)a0;
- (void)_siriRequestedNotification:(id)a0;
- (BOOL)isEqual:(id)a0;
- (void)setActivatedDeviceClusterMembersVolume:(float)a0 withRoomID:(id)a1;
- (void)_canMuteDidChangeForEndpointWithID:(struct __CFString { } *)a0;
- (void)setSecondDisplayMode:(id)a0 completionHandler:(id /* block */)a1;
- (void).cxx_destruct;
- (void)_carPlayTestNotification:(id)a0;
- (id)_figEndpointPropertyValueForKey:(struct __CFString { } *)a0;
- (void)_handleFigEndpointEvent:(struct __CFString { } *)a0 payload:(id)a1;
- (struct OpaqueFigEndpoint { } *)figEndpoint;
- (id)initWithFigEndpoint:(struct OpaqueFigEndpoint { } *)a0 volumeController:(struct OpaqueFigVolumeControllerState { } *)a1 routingContextFactory:(id)a2 useRouteConfigUpdatedNotification:(BOOL)a3;

@end

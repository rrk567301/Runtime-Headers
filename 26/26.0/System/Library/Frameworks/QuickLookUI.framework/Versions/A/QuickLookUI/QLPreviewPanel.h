@class QLPreviewPanelReserved, NSArray, NSString, NSURL;
@protocol QLPreviewPanelDataSource, QLPreviewItem;

@interface QLPreviewPanel : NSPanel {
    QLPreviewPanelReserved *_reserved;
}

@property (readonly) NSArray *itemsToActOn;
@property (readonly) NSURL *appURLForOpening;
@property (copy) NSString *noItemsTitle;
@property (copy) NSString *loadingTitle;
@property (readonly) long long editMode;
@property (readonly) long long currentActivity;
@property BOOL showsAddToiPhotoButton;
@property BOOL showsFullscreenButton;
@property BOOL showsIndexSheetButton;
@property (readonly, getter=isTransient) BOOL transient;
@property BOOL autosizesAndCenters;
@property BOOL positionNearPreviewItem;
@property BOOL loadingForForceTouch;
@property BOOL showsIndexSheet;
@property BOOL playsSlideShow;
@property BOOL autostarts;
@property BOOL playsDuringPanelAnimation;
@property BOOL deferredLoading;
@property (retain) NSString *forcedContentTypeUTI;
@property (retain) id mandatoryServer;
@property int defaultOpenCloseEffect;
@property (readonly) id currentController;
@property id<QLPreviewPanelDataSource> dataSource;
@property long long currentPreviewItemIndex;
@property (readonly) id<QLPreviewItem> currentPreviewItem;
@property (retain) id displayState;
@property id delegate;
@property (readonly, getter=isInFullScreenMode) BOOL inFullScreenMode;

+ (BOOL)_allowsNontitledResizableWindows;
+ (id)sharedPreviewPanel;
+ (BOOL)sharedPreviewPanelExists;
+ (id)keyPathsForValuesAffectingCurrentPreviewItemIndex;
+ (id)newPreviewPanel;
+ (id)_newPreviewPanelAndController:(id *)a0;
+ (id)keyPathsForValuesAffectingEditMode;
+ (BOOL)sharedPreviewPanelIsControlledByApplication;

- (BOOL)isOpen;
- (void)reloadData;
- (void)sendEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (int)focusMode;
- (BOOL)isOnScreen;
- (void)dealloc;
- (void)setFocusMode:(int)a0;
- (BOOL)isVisible;
- (BOOL)isClosing;
- (void)_close:(id)a0;
- (BOOL)canBecomeKeyWindow;
- (void)stop:(id)a0;
- (void)setTransient:(BOOL)a0;
- (void)close;
- (void).cxx_destruct;
- (void)start:(id)a0;
- (id)_cornerMask;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_standardFrame;
- (id)accessibilityAttributeValue:(id)a0;
- (long long)animationBehavior;
- (BOOL)canBecomeMainWindow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dragRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)enterFullScreenMode:(id)a0 withOptions:(id)a1;
- (void)exitFullScreenModeWithOptions:(id)a0;
- (BOOL)hasKeyAppearance;
- (id)initWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1 backing:(unsigned long long)a2 defer:(BOOL)a3;
- (BOOL)isOpening;
- (void)makeKeyAndOrderFront:(id)a0;
- (void)orderFront:(id)a0;
- (void)orderOut:(id)a0;
- (void)performClose:(id)a0;
- (BOOL)performKeyEquivalent:(id)a0;
- (void)quickLookPreviewItems:(id)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 display:(BOOL)a1 animate:(BOOL)a2;
- (id)standardWindowButton:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })startRectForSheet:(id)a0;
- (void)updateController;
- (BOOL)worksWhenModal;
- (void)closePanel;
- (void)refreshCurrentPreviewItem;
- (void)reloadDataPreservingDisplayState:(BOOL)a0;
- (id)sharedPreviewView;
- (id)currentEffect;
- (void)_openingAnimationOperationBegan;
- (BOOL)_qlIgnoreWindowForPreviewPanel:(id)a0;
- (void)_qlUnlinkWindow;
- (void)closeIgnoringDirtyDocumentState;
- (BOOL)cyclesSelection;
- (void)_openingAnimationOperationEnded;
- (void)_qlMakeController:(id)a0 linkedWindow:(id)a1;
- (void)_watchForMouseDownWithCallback:(id /* block */)a0;
- (void)makeKeyAndOrderFrontWithEffect:(int)a0;
- (void)orderPanelFront;
- (id)_backgroundFocusEffectForScreen:(id)a0;
- (void)_cleanupPanel;
- (void)_closeWithEffect:(int)a0 canToggle:(BOOL)a1 force:(BOOL)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentItemFrame;
- (id)_currentTransitionImageWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)_doReloadDataIfNecessary;
- (BOOL)_isRunningInBackgroundApp;
- (void)_openWithEffect:(int)a0 willOpen:(BOOL)a1 toFullscreen:(BOOL)a2;
- (id)_openingAnimationOperationNameWithContentId:(id)a0;
- (unsigned long long)_openingAnimationSignpostID;
- (void)_orderFrontAndMakeKey:(BOOL)a0;
- (void)_qlApplicationDidActivate;
- (id)_qlControllerCandidateForPreviewPanel:(id)a0;
- (id)_qlFirstAvailableControllerFromWindow:(id *)a0;
- (void)_qlLinkWindow:(id)a0;
- (void)_qlLinkedWindowDidResign:(id)a0;
- (void)_qlLinkedWindowWillClose:(id)a0;
- (void)_qlNewWindowBecameKeyOrMain:(id)a0;
- (void)_qlScheduleControllerUpdate;
- (void)_qlSetupController;
- (void)_qlUnsetupController;
- (id)_scaleEffectForItemFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 isClosing:(BOOL)a1;
- (id)_scalePopEffectForItemFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_setupPanelWindow;
- (void)_stopWatchingForMouseDown;
- (id)_subEffectsForFadeWithWindow:(id)a0 transitionWindows:(id *)a1;
- (void)_superMakeKeyAndOrderFront:(id)a0;
- (void)_updateFocusBackgroundWindowWithSpotlight:(BOOL)a0 forScreen:(id)a1;
- (void)beginDeferredClosing;
- (BOOL)canPerformKeyEquivalent:(id)a0;
- (void)closeWithEffect:(int)a0 ignoreDirtyDocumentState:(BOOL)a1 canToggle:(BOOL)a2 force:(BOOL)a3;
- (id /* block */)closingCompletionBlock;
- (void)endDeferredClosing;
- (BOOL)isControlledByApplication;
- (id /* block */)openingCompletionBlock;
- (int)openingEffect;
- (id /* block */)panelDidCloseCompletionBlock;
- (long long)panelWindowLevel;
- (void)resizeToFit;
- (void)restoreDisplayBundleToSharedPreviewView:(id)a0;
- (void)selectNextItem;
- (void)selectPreviousItem;
- (void)setCyclesSelection:(BOOL)a0;
- (void)setFocusMode:(int)a0 animate:(BOOL)a1;
- (void)setOpeningEffect:(int)a0;
- (void)setPanelDidCloseCompletionBlock:(id /* block */)a0;
- (void)setSharedPreviewView:(id)a0;
- (BOOL)shouldHideOnDeactivate;
- (BOOL)shouldIgnorePanelFrameChanges;
- (void)updateFocus;

@end

@class NSView, QLBubbleAnimator, NSString, NSArray, QLFrameDebugWindow, QLBubbleWindowController, NSWindow, QLAnimationWindowEffect, QLControlsController;
@protocol QLBubbleDelegate;

@interface QLBubble : NSObject <QLControlsDelegate, NSWindowDelegate> {
    NSView *_contentView;
    QLBubbleWindowController *_windowController;
    NSWindow *_parentWindow;
    QLControlsController *_controlsController;
    NSArray *_controls;
    QLBubbleAnimator *_animator;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _sourceFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _animationSourceFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _animationContentFrame;
    unsigned long long _preferredEdge;
    unsigned long long _usedEdge;
    BOOL _savedVisible;
    long long _windowLevel;
    struct CGPoint { double x; double y; } _aimPoint;
    BOOL _forcePreferredEdge;
    BOOL _forceTitleBar;
    BOOL _forceNoArrow;
    int _invokeBubbleTimeout;
    BOOL _bubbleWasManuallyMoved;
    id _eventMonitor;
    BOOL _isOpen;
    BOOL _closing;
    QLAnimationWindowEffect *_effect;
    QLFrameDebugWindow *_debugFrameWindow;
}

@property (weak) id<QLBubbleDelegate> delegate;
@property (readonly) BOOL _shouldDrawBubbleBackground;
@property (readonly) BOOL hasControls;
@property (copy) id /* block */ activateMonitorBlock;
@property BOOL preventsActivation;
@property BOOL skipAnimationInvoke;
@property BOOL skipAlphaDuringOpenAnimation;
@property BOOL ignoreItemFrameWhenResizing;
@property BOOL neverResize;
@property BOOL mouseDownCanMoveBubble;
@property (retain) NSView *contentView;
@property (retain) NSWindow *parentWindow;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } sourceFrame;
@property unsigned long long preferredEdge;
@property int animationType;
@property (copy) NSString *appearanceName;
@property (getter=isVisible) BOOL visible;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)level;
- (long long)titleAlignment;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })window:(id)a0 willPositionSheet:(id)a1 usingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)setTitleAlignment:(long long)a0;
- (void)_open;
- (BOOL)mouseDown:(id)a0;
- (id)controls;
- (BOOL)resizing;
- (id)window;
- (BOOL)mouseDragged:(id)a0;
- (void)dealloc;
- (void)setLevel:(long long)a0;
- (void)setControls:(id)a0;
- (id)init;
- (id)effect;
- (id)title;
- (void)update;
- (void)setTitle:(id)a0;
- (void)updateWithOptions:(int)a0;
- (void)close;
- (void).cxx_destruct;
- (BOOL)animating;
- (double)arrowPosition;
- (void)setArrowPosition:(double)a0;
- (id)windowController;
- (void)_dismiss;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bubbleFrame;
- (void)setBubbleFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateControls;
- (void)windowDidUpdate;
- (void)_activateEventMonitor;
- (double)_additionalContentInset;
- (void)_breakWithParentWindow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_bubbleFrameFromItemFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forcedEdge:(unsigned long long)a1 inScreen:(id)a2 arrowEdge:(unsigned long long *)a3 position:(double *)a4;
- (void)_deactivateEventMonitor;
- (void)_drawBubbleBackgroundInFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_linkWithParentWindow;
- (id)_openCloseWindowEffect;
- (void)_setDirectlyVisible:(BOOL)a0;
- (void)_showBubble;
- (void)_updateBubbleShow:(BOOL)a0;
- (void)_windowDidDeminiaturize;
- (void)_windowDidMove;
- (void)_windowWillClose;
- (void)_windowWillMiniaturize;
- (struct CGPoint { double x0; double x1; })aimPoint;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })animationContentFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })animationSourceFrame;
- (unsigned long long)arrowEdge;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bubbleFrameFromItemFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 size:(struct CGSize { double x0; double x1; })a1 forcedEdge:(unsigned long long)a2 inScreen:(id)a3 arrowEdge:(unsigned long long *)a4 position:(double *)a5;
- (id /* block */)closingCompletionBlock;
- (long long)controlAlignment;
- (BOOL)controlsAtBottom;
- (void)createWindowIfNeeded;
- (void)endResizing;
- (BOOL)forcePreferredEdge;
- (BOOL)forceTitleBar;
- (BOOL)hasWindowOwnership;
- (void)invalidateBackground;
- (void)invertShowBubbleEffect;
- (void)invokeShowBubbleEffect;
- (id /* block */)openingCompletionBlock;
- (void)performBubbleAction:(id)a0;
- (void)resetTitlebarVisibility;
- (void)setAimPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)setAnimationContentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setAnimationSourceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setArrowEdge:(unsigned long long)a0;
- (void)setAutomaticallyCloseWithMask:(unsigned long long)a0 filterMask:(unsigned long long)a1 block:(id /* block */)a2;
- (void)setControlAlignment:(long long)a0;
- (void)setControlsAtBottom:(BOOL)a0;
- (void)setForcePreferredEdge:(BOOL)a0;
- (void)setForceTitleBar:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sourceFrameOnScreen;
- (void)startResizing;
- (unsigned long long)usedEdge;

@end

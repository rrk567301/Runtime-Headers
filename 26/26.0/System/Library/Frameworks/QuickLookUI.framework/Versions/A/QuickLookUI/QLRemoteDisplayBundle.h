@class QLUIServiceEditToolbarHostViewController, NSString, NSDictionary, NSURL, CALayerHost, NSMutableArray;
@protocol QLUIServiceViewControllerProtocol, QLUIServiceEditToolbarViewControllerProtocol;

@interface QLRemoteDisplayBundle : QLUIServiceBaseDisplayBundle <QLUIServiceHostViewControllerDelegate> {
    CALayerHost *_layer;
    NSDictionary *_remotePropertiesBeingUpdated;
    BOOL _highlighted;
    BOOL _playing;
    double _seekTolerance;
    double _currentTime;
    BOOL _muted;
    float _volume;
    double _currentScroll;
    double _currentHorizontalScroll;
    NSDictionary *_axElements;
    NSDictionary *_uiElements;
}

@property (retain) NSString *displayBundleID;
@property BOOL fullyLoaded;
@property struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } contentFrame;
@property struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } opaqueFrame;
@property struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } borderFrame;
@property (retain) NSDictionary *sizingConstraints;
@property BOOL scalable;
@property BOOL guessedOptimalSize;
@property int navigationControls;
@property unsigned long long numberOfPages;
@property double duration;
@property unsigned long long currentPage;
@property double totalScroll;
@property double totalHorizontalScroll;
@property BOOL hasAudio;
@property BOOL autoplay;
@property BOOL needsTimeControl;
@property int pageDisplay;
@property double defaultPageThumbnailRatio;
@property int backgroundStyle;
@property BOOL canBeReused;
@property BOOL prefersLocalEventLoop;
@property BOOL showScrollerToChangePages;
@property (retain) NSDictionary *openingApplicationInfo;
@property (copy) NSString *customDisplayName;
@property int displayFlags;
@property BOOL contentHasHDR;
@property double contentsEDRStrength;
@property BOOL visualSearchSupported;
@property BOOL inVisualSearch;
@property BOOL hasActiveTextSelection;
@property (copy) NSString *visualSearchSymbolName;
@property BOOL markupSupported;
@property BOOL inMarkup;
@property BOOL trimmingSupported;
@property BOOL isTrimming;
@property BOOL rotateSupported;
@property BOOL isExporting;
@property BOOL supportsZoomActions;
@property long long currentScreentimePolicy;
@property (retain) NSMutableArray *connectionMadeObservers;
@property BOOL keepThumbnailUnderInlinePreview;
@property BOOL overlayVisibilityOptions;
@property (retain) NSURL *launchURL;
@property (retain) NSURL *shareItemURL;
@property (retain) QLUIServiceEditToolbarHostViewController *editToolbarViewController;
@property (readonly) id<QLUIServiceEditToolbarViewControllerProtocol> serviceEditToolbarViewController;
@property (readonly) id<QLUIServiceViewControllerProtocol> remoteServiceViewController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)keyPathsForValuesAffectingTouchBar;
+ (id)remoteDisplayBundleWithPreview:(id)a0 displayBundleID:(id)a1 owner:(id)a2;
+ (id)windowUnsupportedError;

- (void)selectAll:(id)a0;
- (void)setHighlighted:(BOOL)a0;
- (void)setCurrentTime:(double)a0;
- (void)setPlaying:(BOOL)a0;
- (id)touchBar;
- (BOOL)highlighted;
- (void)setVolume:(float)a0;
- (void)dealloc;
- (double)currentTime;
- (void)discard;
- (void)copy:(id)a0;
- (void)_startObserving;
- (float)volume;
- (void)setMuted:(BOOL)a0;
- (void)didOpen;
- (void)deactivate;
- (BOOL)playing;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)activate;
- (void)_stopObserving;
- (void)_performBlock:(id /* block */)a0;
- (void).cxx_destruct;
- (void)rotate:(long long)a0;
- (BOOL)muted;
- (void)refreshSynchronously;
- (void)enterMarkup;
- (void)promptSaveForCloseWithCloseHandler:(id /* block */)a0;
- (void)animateEDRToMatchViewSize:(struct CGSize { double x0; double x1; })a0 duration:(double)a1;
- (void)updateProperties:(id /* block */)a0;
- (void)performBlockOnMainThread:(id /* block */)a0;
- (void)willShow;
- (void)willOpen;
- (void)willHide;
- (struct CGImage { } *)copyImageRepresentationWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)didLoad;
- (void)endVisualSearch;
- (void)_setRemoteProperty:(id)a0 value:(id)a1 async:(BOOL)a2;
- (void)remotePreviewDesistedWithHints:(id)a0;
- (void)updatePropertiesFromDictionary:(id)a0;
- (void)zoomWithAction:(long long)a0;
- (void)_checkWindowSupport;
- (struct __CFString { } *)_createSandboxTokenForEdit:(BOOL)a0;
- (void)_exitMarkupIfNeededWaitingForSave:(BOOL)a0;
- (id)_filteredHintsForLoading:(id)a0;
- (id)_propertiesToForward;
- (void)_setupToolbarRemoteView:(id /* block */)a0;
- (void)_teardownMarkupToolbar;
- (void)_updateActivationState:(int)a0;
- (void)appHDRSuppressionDidChange;
- (void)backingScaleFactorDidChange;
- (void)beginTrim;
- (void)beginVisualSearch;
- (void)commitTrim;
- (double)currentHorizontalScroll;
- (double)currentScroll;
- (void)didEnterMarkup;
- (void)didSaveEdit:(BOOL)a0 toURL:(id)a1;
- (void)didShowScreentimeLockout:(BOOL)a0 withPolicy:(long long)a1;
- (void)disableHDRUpdates;
- (void)exitMarkup:(long long)a0;
- (BOOL)forwardTextSelectionModification:(id)a0;
- (BOOL)generateThumbnailForPage:(unsigned long long)a0 maxSize:(struct CGSize { double x0; double x1; })a1 completionBlock:(id /* block */)a2;
- (void)getImageRepresentationWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 completion:(id /* block */)a1;
- (id)initWithPreview:(id)a0 owner:(id)a1;
- (int)loadWithHints:(id)a0;
- (id)markupControls;
- (void)modeDidChange;
- (void)pageUpdatedContent:(long long)a0;
- (void)previewStatusDidChange;
- (id)quickLookView;
- (void)reenableHDRUpdatesWithAnimationDuration:(double)a0;
- (void)refreshQuickLookFrame;
- (void)remotePreviewSizingUpdated;
- (void)resetAccessibility;
- (void)revertMarkup:(id /* block */)a0;
- (void)revertTrim;
- (void)saveModeDidChange;
- (double)seekTolerance;
- (void)serviceDidCancelMarkup;
- (void)setCurrentHorizontalScroll:(double)a0;
- (void)setCurrentScroll:(double)a0;
- (void)setOverlayControlOverlayFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 rollOverFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)setQuickLookFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setSeekTolerance:(double)a0;
- (void)set_QLBundleAppearance:(id)a0;
- (BOOL)shouldBeFilePresenter;
- (void)showOverlayControls:(BOOL)a0 withOverlayController:(id)a1;
- (void)showPasswordUI;
- (void)updatePropertiesForSize:(struct CGSize { double x0; double x1; })a0 previewMode:(int)a1 completion:(id /* block */)a2;
- (void)willChangeWindow;
- (void)windowKeyDidChange;

@end

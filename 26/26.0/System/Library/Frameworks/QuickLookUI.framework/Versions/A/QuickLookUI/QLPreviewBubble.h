@class QLPreviewBubbleReserved, NSArray, NSImage, NSString, NSURL, NSObject, NSWindow;
@protocol QLPreviewBubbleDelegate, OS_dispatch_queue, QLPreviewItem;

@interface QLPreviewBubble : NSObject <QLSeamlessOpenerDelegate> {
    QLPreviewBubbleReserved *_reserved;
    id<QLPreviewItem> _previewItem;
    NSURL *_representedURL;
    NSWindow *_parentWindow;
    struct __QLPreviewBubble { } *_bubbleRef;
    int _animationType;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _itemFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _animationSourceFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _animationContentFrame;
    unsigned long long _preferredEdge;
    BOOL _needsToSendPreviewItem;
    long long _windowLevel;
    struct CGPoint { double x; double y; } _aimPoint;
    struct CGSize { double width; double height; } _maximumSize;
    NSArray *_controls;
    id<QLPreviewBubbleDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
    NSArray *_modes;
    BOOL _modesAreCustom;
    BOOL _autoplays;
    BOOL _forcePreferredEdge;
    id _eventMonitor;
    BOOL _seamlesslyOpening;
    BOOL _seamlesslyVisible;
    BOOL _seamlesslyClosed;
    BOOL _disableAnimation;
}

@property (copy) id /* block */ activateMonitorBlock;
@property (copy) id /* block */ bubbleDidCloseCompletionBlock;
@property (weak) id<QLPreviewBubbleDelegate> delegate;
@property long long level;
@property struct CGPoint { double x0; double x1; } aimPoint;
@property double maxArea;
@property int animationType;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } animationSourceFrame;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } animationContentFrame;
@property BOOL autoplays;
@property BOOL forcePreferredEdge;
@property (readonly) unsigned long long usedEdge;
@property (readonly) unsigned int bubbleWindowID;
@property (copy) NSArray *runLoopModes;
@property (retain) NSArray *preloadedItems;
@property (copy) NSArray *controls;
@property (readonly, copy) NSImage *contentSnapshot;
@property BOOL skipAnimationInvoke;
@property BOOL skipAlphaDuringOpenAnimation;
@property struct CGSize { double x0; double x1; } maximumSize;
@property unsigned long long preferredEdge;
@property (retain) NSWindow *parentWindow;
@property (getter=isVisible) BOOL visible;
@property (retain) id<QLPreviewItem> previewItem;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } itemFrame;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)presentBubbleForItem:(id)a0 parentWindow:(id)a1 itemFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 maximumSize:(struct CGSize { double x0; double x1; })a3 preferredEdge:(unsigned long long)a4;
+ (void)presentBubbleForItem:(id)a0 parentWindow:(id)a1 itemFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 maximumSize:(struct CGSize { double x0; double x1; })a3 preferredEdge:(unsigned long long)a4 filterMask:(unsigned long long)a5 autocloseMask:(unsigned long long)a6;
+ (void)setGlobalSeamlesslyOpening:(BOOL)a0;

- (void)dealloc;
- (id)init;
- (void)close;
- (void).cxx_destruct;
- (void)hide:(id)a0;
- (id)seamlessOpener:(id)a0 sourceBubbleForPreviewItem:(id)a1;
- (void)show:(id)a0;
- (void)_didLoad;
- (void)_activateEventMonitor;
- (BOOL)_animateHide;
- (BOOL)_animateShow;
- (void)_applicationWillDeactivate;
- (void)_breakWithParentWindow;
- (id)_bubbleOptions;
- (void)_buttonClickEvent:(id)a0;
- (void)_checkSeamlesslyOpening;
- (void)_deactivateEventMonitor;
- (void)_doubleClickEvent:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_itemFrameOnScreen;
- (id)_launchURL;
- (void)_linkWithParentWindow;
- (void)_makeQueueIfNecessary;
- (void)_seamlesslyOpenWithURL:(id)a0;
- (void)_updateBubbleShow:(BOOL)a0;
- (void)_updateModesIfNecessary;
- (void)_willOpenURLEvent:(id)a0;
- (void)_windowDidMove;
- (void)_windowWillClose;
- (void)_windowWillMiniaturize;
- (struct __QLPreviewBubble { } *)bubbleRef;
- (id)effectiveControls;
- (BOOL)isSeamlesslyOpening;
- (void)makeBubble;
- (void)setAutomaticallyCloseWithMask:(unsigned long long)a0 filterMask:(unsigned long long)a1 block:(id /* block */)a2;
- (void)setDisplayPath:(id)a0 additionalString:(id)a1;
- (void)setSeamlesslyOpening:(BOOL)a0;
- (void)showPreviewItem:(id)a0 itemFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;

@end

@class NSView, NSArray, NSSet, NSMutableDictionary, NSScrubber, NSScrubberSelectionStyle, NSMutableSet, NSScrubberLayout, NSIndexSet;
@protocol NSScrubberSelectionLayout, NSScrubberItemLayout;

@interface NSScrubberDocumentView : NSView {
    NSScrubberLayout *_scrubberLayout;
    NSMutableDictionary *_reuseQueue;
    NSMutableSet *_selectionPairsAnimatingOut;
    NSScrubberSelectionStyle *_selectionBackground;
    NSScrubberSelectionStyle *_selectionOverlay;
    NSIndexSet *_forcedItemIndexes;
    struct { struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } visibleContentRect; long long selectedIndex; long long secondarySelectedIndex; double fractionOfSecondary; long long highlightedIndex; long long numberOfItems; struct CGPoint { double x; double y; } contentTrackingPoint; BOOL trackingSelection; } _modelState;
    long long _numberOfItems;
    long long _pinnedItemAlignment;
    long long _pinnedItemIndex;
    struct _NSRange { unsigned long long location; unsigned long long length; } _lastKnownVisibleRange;
    unsigned char _observingScrollBounds : 1;
    unsigned char _needsItemLayout : 1;
    unsigned char _animatingLayout : 1;
    unsigned char _adjustingScroll : 1;
    unsigned char _isRTL : 1;
    unsigned char _floatsSelection : 1;
    unsigned char _animatingSelections : 1;
}

@property struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; } modelState;
@property (retain) id<NSScrubberItemLayout> itemLayout;
@property (retain) id<NSScrubberSelectionLayout> selectionLayout;
@property (retain) NSMutableDictionary *itemViewMap;
@property (retain) NSMutableDictionary *selectionPairMap;
@property (copy) NSSet *currentItemLayoutAttributes;
@property (copy) NSSet *currentSelectionLayoutAttributes;
@property (copy) NSArray *pendingItemTransitions;
@property (copy) NSArray *pendingSelectionTransitions;
@property (copy) NSSet *pendingItemLayoutAttributes;
@property (copy) NSSet *pendingSelectionLayoutAttributes;
@property BOOL animatingSelections;
@property struct { long long itemIndex; long long alignment; double offset; } pendingScrollPin;
@property (weak) NSScrubber *scrubber;
@property (retain) NSScrubberLayout *scrubberLayout;
@property (retain) NSScrubberSelectionStyle *selectionBackground;
@property (retain) NSScrubberSelectionStyle *selectionOverlay;
@property (readonly) NSView *contentView;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } rectInClip;
@property long long numberOfItems;
@property long long selectedIndex;
@property long long highlightedIndex;
@property BOOL floatsSelection;
@property struct { struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } visibleContentRect; long long selectedIndex; long long secondarySelectedIndex; double fractionOfSecondary; long long highlightedIndex; long long numberOfItems; struct CGPoint { double x; double y; } contentTrackingPoint; BOOL trackingSelection; } proxyState;
@property double endcapCornerRadius;
@property (copy) NSIndexSet *requiredPopulatedItemIndexes;
@property (readonly) NSMutableDictionary *registeredViewClasses;
@property (readonly) NSMutableDictionary *registeredViewNibs;

+ (id)keyPathsForValuesInvalidatingLayout;

- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)layout;
- (void)viewDidMoveToWindow;
- (void)viewDidMoveToSuperview;
- (void).cxx_destruct;
- (id)cachedAttributesForItemAtIndex:(long long)a0;
- (void)clearPinnedItem;
- (BOOL)itemNearestToPoint:(struct CGPoint { double x0; double x1; })a0 index:(long long *)a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (void)layoutScrubberContentsAnimated:(BOOL)a0;
- (void)prepareForSelectionTransitions:(id)a0;
- (Class)_animatorClass;
- (id)_preferredSuperviewForAttributes:(id)a0;
- (id)_preferredSuperviewForTransition:(id)a0;
- (id)_presentationLayoutAttributesForItemAttributes:(id)a0;
- (id)_presentationLayoutAttributesForLayoutAttributes:(id)a0;
- (void)_setHighlightedIndex:(long long)a0;
- (void)_setSelectedIndex:(long long)a0;
- (void)addItemView:(id)a0 toSuperview:(id)a1;
- (void)adjustForContentSize:(struct CGSize { double x0; double x1; })a0 contentInsets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a1;
- (void)applyItemAttributes:(id)a0 startingAttributes:(id)a1 withState:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; })a2;
- (void)applyLayoutAttributes:(id)a0 toItemView:(id)a1;
- (void)applyPinningConfiguration:(struct { long long x0; long long x1; double x2; })a0;
- (void)applySelectionAttributes:(id)a0 startingAttributes:(id)a1 withState:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; })a2;
- (id)attributesNearestToPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct { long long x0; long long x1; double x2; })calculatePinningConfigurationForState:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })calculateVisibleContentRect;
- (void)cleanupAfterItemTransitions:(id)a0;
- (void)cleanupAfterSelectionTransitions:(id)a0;
- (void)clipBoundsDidChange:(id)a0;
- (void)clipFrameDidChange:(id)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })contentViewInsetsForContentSize:(struct CGSize { double x0; double x1; })a0;
- (id)createItemViewForIndex:(long long)a0;
- (void)executePendingChanges:(id)a0 completionHandler:(id /* block */)a1;
- (long long)indexForItemView:(id)a0;
- (void)invalidateEverythingAndReload;
- (BOOL)itemAtPoint:(struct CGPoint { double x0; double x1; })a0 index:(long long *)a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (id)itemTransitionsFromAttributes:(id)a0 toAttributes:(id)a1 withState:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; })a2;
- (id)makeItemWithIdentifier:(id)a0 owner:(id)a1;
- (id)makeSelectionPairForItemView:(id)a0 withIndex:(long long)a1;
- (void)performItemTransitions:(id)a0 withState:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; })a1;
- (void)performPendingTransitionsWithCompletion:(id /* block */)a0;
- (void)performSelectionTransitions:(id)a0 withState:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; })a1;
- (void)pinItemAtIndex:(long long)a0 toAlignment:(long long)a1;
- (id)populatedItemViews;
- (void)prepareForItemTransitions:(id)a0;
- (void)recycleView:(id)a0;
- (void)registerClass:(Class)a0 forItemIdentifier:(id)a1;
- (void)registerNib:(id)a0 forItemIdentifier:(id)a1;
- (void)resetSelectionPairs;
- (void)retargetSelectionPairsAnimatingOut;
- (void)scrollItemAtIndex:(long long)a0 toAlignment:(long long)a1;
- (struct CGPoint { double x0; double x1; })scrollPointAligningItemAtIndex:(long long)a0 toAlignment:(long long)a1;
- (struct CGPoint { double x0; double x1; })scrollPointAligningItemAtIndex:(long long)a0 toAlignment:(long long)a1 forSelectedIndex:(long long)a2 approximatedScrollPoint:(struct CGPoint { double x0; double x1; })a3;
- (struct CGPoint { double x0; double x1; })scrollPointAligningItemAtIndex:(long long)a0 toAlignment:(long long)a1 forState:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; })a2;
- (id)selectionPairForItemAtIndex:(long long)a0 creatingIfNeeded:(BOOL)a1;
- (id)selectionTransitionsFromAttributes:(id)a0 toAttributes:(id)a1 presentationItemAttributes:(id)a2 newItemAttributes:(id)a3;
- (void)setNeedsItemLayout;
- (void)setSuppressScrollCorrection:(BOOL)a0;
- (void)setUserInterfaceLayoutDirection:(long long)a0;
- (id)snapshotForPendingChanges;
- (void)sortScrubberSubviews;
- (void)updateCornerMaskingForState:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; long long x1; long long x2; double x3; long long x4; long long x5; struct CGPoint { double x0; double x1; } x6; BOOL x7; })a0;
- (void)updateForTrackingPoint:(struct CGPoint { double x0; double x1; })a0 isTrackingSelection:(BOOL)a1;
- (void)updateItemLayoutObject;
- (void)updateSelectionForContinuousFree;
- (void)updateSelectionLayoutObject;
- (id)viewForItemAtIndex:(long long)a0 creatingIfNeeded:(BOOL)a1;
- (void)viewWillMoveToSuperview:(id)a0;
- (void)visibleContentRectDidChange;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleContentRectForPinningConfiguration:(struct { long long x0; long long x1; double x2; })a0;

@end

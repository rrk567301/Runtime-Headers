@class NSFloatRange;

@interface NSPopoverFrame : NSVisualEffectView {
    id _privatePopoverFrameData;
    struct { unsigned char useDragWindowAppearance : 1; unsigned char unused1 : 1; unsigned char unused2 : 1; unsigned char unused3 : 1; unsigned char unused4 : 1; unsigned char unused5 : 1; unsigned char shouldInsetForAnchor : 1; unsigned char wantsDragWindowAppearance : 1; unsigned int _reserved : 24; } _flags;
}

@property unsigned long long anchorEdge;
@property struct CGSize { double x0; double x1; } anchorSize;
@property struct NSEdgeInsets { double x0; double x1; double x2; double x3; } contentInset;
@property struct CGPoint { double x0; double x1; } anchorPoint;
@property BOOL shouldInsetForAnchor;
@property (setter=_setWantsDragWindowAppearance:) BOOL _wantsDragWindowAppearance;
@property (retain, nonatomic) NSFloatRange *rangeOfInterest1;
@property (retain, nonatomic) NSFloatRange *rangeOfInterest2;
@property (nonatomic) BOOL usesLayerMasking;
@property (nonatomic) BOOL hasFullSizeContent;

+ (BOOL)clipsToBounds;
+ (BOOL)automaticallyNotifiesObserversOfAnchorPoint;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 appearance:(id)a1 anchorSize:(struct CGSize { double x0; double x1; })a2 contentInset:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a3;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 appearance:(id)a1 anchorSize:(struct CGSize { double x0; double x1; })a2 contentInset:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a3 hasTitlebar:(BOOL)a4;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
+ (id)defaultAnimationForKey:(id)a0;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 appearance:(id)a1 anchorSize:(struct CGSize { double x0; double x1; })a2 contentInset:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a3;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 appearance:(id)a1 anchorSize:(struct CGSize { double x0; double x1; })a2 contentInset:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a3 hasTitlebar:(BOOL)a4;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
+ (struct CGSize { double x0; double x1; })minFrameSizeForMinContentSize:(struct CGSize { double x0; double x1; })a0 styleMask:(unsigned long long)a1;

- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)layout;
- (double)_cornerRadius;
- (id)title;
- (void)setTitle:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)viewDidChangeBackingProperties;
- (void)viewDidChangeEffectiveAppearance;
- (BOOL)_toolbarIsShown;
- (void)setRangeOfInterest:(id *)a0 sourceRange:(id)a1;
- (BOOL)_canHaveToolbar;
- (void)_markAnchorRectAsNeedingDisplay;
- (void)draggingExited:(id)a0;
- (void)_addTitlebarAnimated:(BOOL)a0 completionHandler:(id /* block */)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_arrowRect;
- (void)_closeButtonPressed:(id)a0;
- (void)_commonPopoverInit;
- (struct CGPath { } *)_copyFrameMaskPathInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_coreUIOptionsWithAnchorEdge:(unsigned long long)a0 anchorPoint:(struct CGPoint { double x0; double x1; })a1 anchorSize:(struct CGSize { double x0; double x1; })a2 shouldInsetForAnchor:(BOOL)a3 areasOfInterest:(id)a4 cornerRadius:(double)a5;
- (id)_cornerMask;
- (struct CGPath { } *)_cornerPath;
- (double)_distanceFromToolbarBaseToTitlebar;
- (id)_dragImage;
- (long long)_glassVariant;
- (BOOL)_hasActiveDragTypes;
- (BOOL)_hasDragWindowAppearance;
- (BOOL)_hasTitlebar;
- (void)_hideToolbarWithAnimation:(BOOL)a0;
- (BOOL)_isBackdropCompatible;
- (BOOL)_isBorderView;
- (id)_metricsForPopoverFrame;
- (void)_removeTitlebarAnimated:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)_setAnchorPoint:(struct CGPoint { double x0; double x1; })a0 reshape:(BOOL)a1;
- (void)_setDragImage:(id)a0;
- (void)_setFrameNeedsDisplay:(BOOL)a0;
- (void)_setHasDragWindowAppearance:(BOOL)a0;
- (void)_showToolbarWithAnimation:(BOOL)a0;
- (BOOL)_toolbarIsHidden;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsManagedByExternalWindow;
- (void)_updateGlassVariant;
- (id)_verticalRangesForAreasOfInterest;
- (void)_windowChangedKeyState;
- (void)_windowWillOrderOnScreen;
- (id)closeButton;
- (void)concludeDragOperation:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dragRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)draggingEnded:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (unsigned long long)effectiveAnchorEdge;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1 owner:(id)a2;
- (id)minimizeButton;
- (id)opaqueAncestor;
- (BOOL)performDragOperation:(id)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)shapeWindow;
- (unsigned long long)styleMask;
- (void)tileAndSetWindowShape:(BOOL)a0;
- (void)tileAndSetWindowShape:(BOOL)a0 updateContentView:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titlebarRect;
- (id)zoomButton;

@end

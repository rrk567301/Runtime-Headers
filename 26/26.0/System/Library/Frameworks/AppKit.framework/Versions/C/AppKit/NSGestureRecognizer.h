@class NSString, NSView, NSMutableSet, NSPressureConfiguration, NSMutableArray, NSTouchDevice;
@protocol NSGestureRecognizerContainer, _NSGestureEnvironment, GFGestureNode, NSGestureRecognizerDelegate;

@interface NSGestureRecognizer : NSObject <GFGestureNodeDelegate, GFGestureNodeContainer, NSCoding> {
    id<GFGestureNode> _node;
    BOOL _shouldBeArchived;
    NSMutableArray *_targets;
    id _target;
    NSMutableArray *_delayedEvents;
    id<NSGestureRecognizerContainer> _container;
    id<NSGestureRecognizerDelegate> _delegate;
    NSMutableSet *_friends;
    long long _state_DO_NOT_USE_DIRECTLY;
    struct { unsigned char delegateShouldBegin : 1; unsigned char delegateCanPrevent : 1; unsigned char delegateCanBePrevented : 1; unsigned char delegateShouldRecognizeSimultaneously : 1; unsigned char delegateShouldAttemptToRecognizeWithEvent : 1; unsigned char delegateShouldRequireFailure : 1; unsigned char delegateShouldBeRequiredToFail : 1; unsigned char delegateFailed : 1; unsigned char privateDelegateShouldBegin : 1; unsigned char privateDelegateCanPrevent : 1; unsigned char privateDelegateCanBePrevented : 1; unsigned char privateDelegateShouldRecognizeSimultaneously : 1; unsigned char privateDelegateShouldAttemptToRecognizeWithEvent : 1; unsigned char privateDelegateShouldRequireFailure : 1; unsigned char privateDelegateShouldBeRequiredToFail : 1; unsigned char privateDelegateCanCancel : 1; unsigned char privateDelegateCanBeCancelled : 1; unsigned char privateDelegateAcceptsBeingFailureRequirement : 1; unsigned char privateDelegateAcceptsBeingFailureDependent : 1; unsigned char subclassShouldRequireFailure : 1; unsigned char subclassShouldBeRequiredToFail : 1; unsigned char privateSubclassShouldRequireFailure : 1; unsigned char privateSubclassShouldBeRequiredToFail : 1; unsigned char hasSubclassDynamicFailureRequirements : 1; unsigned char hasDelegateDynamicFailureRequirements : 1; unsigned char queriedFailureRequirements : 1; unsigned char disabled_DO_NOT_USE_DIRECTLY : 1; unsigned char dirty : 1; unsigned char delivered : 1; unsigned char deliveredEndedOrCancelled : 1; unsigned char continuous : 1; unsigned char requiresDelayedBegan : 1; unsigned char willBeginAfterSatisfyingFailureRequirements : 1; unsigned char requiresSystemGesturesToFail : 1; unsigned char acceptsFailureRequirements : 1; unsigned char cancelsTouchesInView : 1; unsigned char skipUpdatingContainerInSetView : 1; unsigned char insideSetState : 1; } _gestureFlags;
    unsigned long long _delayFlags;
    id _failureMap;
    NSPressureConfiguration *_activePressureConfiguration;
    NSTouchDevice *_touchDevice;
    id<_NSGestureEnvironment> _gestureEnvironment;
    long long _touchContextId;
    unsigned long long _allowedTouchTypes;
    id _componentController;
    struct { unsigned char sendsActionWhenPossible : 1; unsigned char privateDelegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer : 1; unsigned char delegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer : 1; unsigned char delegateIsUnsafeUnretained : 1; unsigned char targetIsUnsafeUnretained : 1; unsigned char privateDelegateShouldReceiveTouch : 1; unsigned char delegateShouldReceiveTouch : 1; unsigned int reserved : 24; } _additionalFlags;
}

@property (readonly, nonatomic) NSMutableSet *_failureRequirements;
@property (readonly, nonatomic) NSMutableSet *_failureDependents;
@property (weak) id target;
@property SEL action;
@property (readonly) long long state;
@property (weak) id<NSGestureRecognizerDelegate> delegate;
@property (getter=isEnabled) BOOL enabled;
@property (readonly) NSView *view;
@property (retain) NSPressureConfiguration *pressureConfiguration;
@property BOOL delaysPrimaryMouseButtonEvents;
@property BOOL delaysSecondaryMouseButtonEvents;
@property BOOL delaysOtherMouseButtonEvents;
@property BOOL delaysKeyEvents;
@property BOOL delaysMagnificationEvents;
@property BOOL delaysRotationEvents;
@property (copy) NSString *name;
@property (readonly) unsigned long long modifierFlags;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_mostCompatibleRecognizerFromConfigured:(id)a0;

- (BOOL)cancelsTouchesInView;
- (void)setState:(long long)a0;
- (void)mouseDown:(id)a0;
- (void)_resetGestureRecognizer;
- (void)mouseUp:(id)a0;
- (BOOL)canBePreventedByGestureRecognizer:(id)a0;
- (BOOL)shouldBeRequiredToFailByGestureRecognizer:(id)a0;
- (void)mouseDragged:(id)a0;
- (void)setAllowedTouchTypes:(unsigned long long)a0;
- (void)reset;
- (void)dealloc;
- (unsigned long long)allowedTouchTypes;
- (id)initWithTarget:(id)a0 action:(SEL)a1;
- (void)keyDown:(id)a0;
- (void)setContainer:(id)a0;
- (struct CGPoint { double x0; double x1; })locationInView:(id)a0;
- (void)setView:(id)a0;
- (BOOL)canPreventGestureRecognizer:(id)a0;
- (void)_invalidate;
- (void)encodeWithCoder:(id)a0;
- (id)init;
- (BOOL)_canCancelGestureRecognizer:(id)a0;
- (BOOL)_acceptsBeingFailureDependentOnGestureRecognizer:(id)a0;
- (BOOL)_needsDynamicDependentRequirementForGestureRecognizer:(id)a0;
- (BOOL)shouldRequireFailureOfGestureRecognizer:(id)a0;
- (id)container;
- (BOOL)_acceptsBeingFailureRequirementForGestureRecognizer:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)_appendSubclassDescription:(id)a0;
- (BOOL)_acceptsFailureRequirements;
- (void)removeTarget:(id)a0 action:(SEL)a1;
- (void).cxx_destruct;
- (void)setCancelsTouchesInView:(BOOL)a0;
- (void)_didSendActions;
- (void)mouseCancelled:(id)a0;
- (void)rightMouseDown:(id)a0;
- (void)_setFailureMap:(id)a0;
- (long long)_touchContextId;
- (void)_updateForView:(id)a0;
- (void)otherMouseDown:(id)a0;
- (BOOL)preventsPreKeyEquivalentRouting;
- (unsigned long long)_acceptedEventMask;
- (id)_activePressureConfiguration;
- (void)_addFailureDependent:(id)a0;
- (void)_addFriendGesture:(id)a0;
- (BOOL)_affectedByGesture:(id)a0;
- (void)_appendDescription:(id)a0 forDependencies:(id)a1 toString:(id)a2 atLevel:(int)a3;
- (void)_appendDescriptionToString:(id)a0 atLevel:(int)a1 includingDependencies:(BOOL)a2;
- (id)_briefDescription;
- (BOOL)_canBeCancelledByGestureRecognizer:(id)a0;
- (void)_cancelRecognition;
- (void)_clearDelayedEvents;
- (void)_clearReferencesToRelatedGesture:(id)a0;
- (void)_clearUpdateTimer;
- (id)_createNode;
- (BOOL)_delayEvent:(id)a0;
- (id)_delayedEvents;
- (void)_delayedUpdateGesture;
- (BOOL)_delegateAcceptsBeingFailureDependentOnGestureRecognizer:(id)a0;
- (BOOL)_delegateAcceptsBeingFailureRequirementForGestureRecognizer:(id)a0;
- (BOOL)_delegateCanBeCancelledByGestureRecognizer:(id)a0;
- (BOOL)_delegateCanBePreventedByGestureRecognizer:(id)a0;
- (BOOL)_delegateCanCancelGestureRecognizer:(id)a0;
- (BOOL)_delegateCanPreventGestureRecognizer:(id)a0;
- (BOOL)_delegateShouldAttemptToRecognizeWithEvent:(id)a0;
- (BOOL)_delegateShouldReceiveTouch:(id)a0;
- (BOOL)_delegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer:(id)a0;
- (long long)_depthFirstCompare:(id)a0;
- (id)_desiredPressureBehavior;
- (void)_enqueueDelayedEventsToSend;
- (void)_eventWasCancelled:(id)a0;
- (void)_exclude;
- (id)_failureMap;
- (void)_failureRequirementCompleted:(id)a0;
- (id)_gestureEnvironment;
- (BOOL)_hasClearedDelayedEvents;
- (BOOL)_hasDelayedEvents;
- (BOOL)_hasTargets;
- (BOOL)_hasUnmetFailureRequirements;
- (BOOL)_isDirty;
- (BOOL)_isExcludedByGesture:(id)a0;
- (BOOL)_isFriendWithGesture:(id)a0;
- (BOOL)_isRecognized;
- (BOOL)_needsDynamicFailureRequirementForGestureRecognizer:(id)a0;
- (void)_noteDesiredPressureBehaviorChanged;
- (void)_queueForResetIfFinished;
- (id)_rawBriefDescription;
- (void)_removeActiveGestureRecognizerFromTouchDevice;
- (BOOL)_requiresSystemGesturesToFail;
- (void)_resetComponentController;
- (void)_resetIfFinished;
- (void)_setAcceptsFailureRequiments:(BOOL)a0;
- (void)_setDirty;
- (void)_setGestureEnvironment:(id)a0;
- (void)_setRequiresSystemGesturesToFail:(BOOL)a0;
- (void)_setTouchContextId:(long long)a0;
- (void)_setTouchDevice:(id)a0;
- (void)_setViewPreventingContainerUpdate:(id)a0;
- (void)_setWantsFunctionRowTouches:(BOOL)a0;
- (BOOL)_shouldAttemptToRecognizeWithEvent:(id)a0;
- (BOOL)_shouldBeRequiredToFailByGestureRecognizer:(id)a0;
- (BOOL)_shouldBegin;
- (BOOL)_shouldRequireFailureOfGestureRecognizer:(id)a0;
- (BOOL)_shouldSendActionWhenPossibleConcurrentlyWithRecognizer:(id)a0;
- (id)_touchDevice;
- (void)_updateContainer:(id)a0;
- (void)_updateForActiveEvents;
- (void)_updateGesture;
- (void)_updateGestureStateAfterDelay:(BOOL)a0;
- (BOOL)_wantsFunctionRowTouches;
- (void)_willBeginAfterSatisfyingFailureRequirements;
- (BOOL)acceptsFirstMouse:(id)a0;
- (void)addTarget:(id)a0 action:(SEL)a1;
- (void)flagsChanged:(id)a0;
- (void)gestureNode:(id)a0 didEnqueuePhase:(long long)a1;
- (void)gestureNode:(id)a0 didUpdatePhase:(long long)a1;
- (id)gestureNode:(id)a0 roleForRelationType:(long long)a1 relatedNode:(id)a2;
- (BOOL)gestureNodeShouldActivate:(id)a0;
- (void)gestureNodeWillUnblock:(id)a0;
- (long long)indexOfGestureNode:(id)a0;
- (BOOL)isDeeperThanContainer:(id)a0 referenceNode:(id)a1;
- (BOOL)isDescendantOfContainer:(id)a0 referenceNode:(id)a1;
- (void)keyUp:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (void)otherMouseDragged:(id)a0;
- (void)otherMouseUp:(id)a0;
- (void)pressureChangeWithEvent:(id)a0;
- (void)quickLookWithEvent:(id)a0;
- (void)removeFailureRequirement:(id)a0;
- (void)requireOtherGestureToFail:(id)a0;
- (void)rightMouseDragged:(id)a0;
- (void)rightMouseUp:(id)a0;
- (void)rotateWithEvent:(id)a0;
- (BOOL)sendsActionWhenPossible;
- (void)setSendsActionWhenPossible:(BOOL)a0;
- (void)setShouldBeArchived:(BOOL)a0;
- (BOOL)shouldBeArchived;
- (void)tabletPoint:(id)a0;
- (void)touchesBeganWithEvent:(id)a0;
- (void)touchesCancelledWithEvent:(id)a0;
- (void)touchesEndedWithEvent:(id)a0;
- (void)touchesMovedWithEvent:(id)a0;
- (void)translateWithEvent:(id)a0;
- (BOOL)wantsForceGestureEvents;

@end

@class NSCursor, NSString, NSView, NSScrollAnimationHelper, NSColor;

@interface NSClipView : NSView <NSScrollAnimationHelperDelegate> {
    NSView *_docView;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _docRect;
    struct CGPoint { double x; double y; } _scrollVelocity;
    struct NSEdgeInsets { double top; double left; double bottom; double right; } _contentInsets;
    struct CGSize { double width; double height; } _contentSize;
    NSColor *_backgroundColor;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _oldDocFrame;
    NSCursor *_cursor;
    NSScrollAnimationHelper *_scrollAnimationHelper;
    BOOL _automaticallyAdjustsContentInsets;
    struct { unsigned char reflectScroll : 1; unsigned char usedByCell : 1; unsigned char scrollClipTo : 1; unsigned char noCopyOnScroll : 1; unsigned char drawsBackground : 1; unsigned char scrollInProgress : 1; unsigned char skipRemoveSuperviewCheck : 1; unsigned char animateCurrentScroll : 1; unsigned char canAnimateScrolls : 1; unsigned char nextScrollRelativeToCurrentPosition : 1; unsigned char viewBoundsChangedOverridden : 1; unsigned char viewFrameChangedOverridden : 1; unsigned char documentViewAlignment : 4; unsigned char dontConstrainScroll : 1; unsigned char  : 4; unsigned char showOverlayScrollersForScrollStep : 1; unsigned char scrollerKnobFlashSpecifier : 2; unsigned char drawsContentShadow : 1; unsigned char dontConstrainBoundsChange : 1; unsigned char isScrollDueToUserAction : 1; unsigned char automaticallyCalculateContentSize : 1; } _cvFlags;
}

@property (nonatomic, setter=_setDocumentViewAlignment:) unsigned long long _documentViewAlignment;
@property (nonatomic, setter=_setCanAnimateScrolls:) BOOL _canAnimateScrolls;
@property (nonatomic) BOOL drawsContentShadow;
@property struct NSEdgeInsets { double x0; double x1; double x2; double x3; } contentInset;
@property struct CGSize { double x0; double x1; } contentSize;
@property BOOL automaticallyCalculatesContentSize;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _insetVisibleRect;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _insetBounds;
@property (nonatomic, getter=_shouldDontConstrainScroll, setter=_setDontConstrainScroll:) BOOL _dontConstrainScroll;
@property BOOL copiesOnScroll;
@property BOOL copiesOnScroll;
@property (copy) NSColor *backgroundColor;
@property BOOL drawsBackground;
@property (retain) NSView *documentView;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } documentRect;
@property (retain) NSCursor *documentCursor;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } documentVisibleRect;
@property struct NSEdgeInsets { double x0; double x1; double x2; double x3; } contentInsets;
@property BOOL automaticallyAdjustsContentInsets;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (void)initialize;
+ (BOOL)clipsToBounds;
+ (double)_autoscrollResponseMultiplier;
+ (Class)_classToCheckForRequiresConstraintBasedLayout;
+ (id)_contentShadow;
+ (Class)_focusProxyClass;
+ (void)_setAutoscrollResponseMultiplier:(double)a0;
+ (id)defaultAnimationForKey:(id)a0;
+ (BOOL)isCompatibleWithResponsiveScrolling;

- (id)screen;
- (void)willRemoveSubview:(id)a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (unsigned long long)_edgesPropagatingSafeAreaInsetsToSubviews;
- (BOOL)isOpaque;
- (void)updateLayer;
- (void)setLayer:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)encodeWithCoder:(id)a0;
- (id)valueForKey:(id)a0;
- (BOOL)isFlipped;
- (BOOL)becomeFirstResponder;
- (void)setValue:(id)a0 forKeyPath:(id)a1;
- (id)initWithCoder:(id)a0;
- (void)viewDidMoveToSuperview;
- (void)updateConstraints;
- (BOOL)_forcePixelAlignedClipViewFrame;
- (void)_reflectDocumentViewFrameChange;
- (void)_removeOverhangSubviewsIfNeeded;
- (void)setFrameOrigin:(struct CGPoint { double x0; double x1; })a0;
- (id)_markUsedByCell;
- (BOOL)_scrollRectToVisible:(const struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 fromView:(id)a1 animateScroll:(long long)a2 flashScrollerKnobs:(unsigned long long)a3;
- (void)_setAnimationCompletionHandler:(id /* block */)a0;
- (void)_updateOverhangSubviewsIfNeeded;
- (void)setNextKeyView:(id)a0;
- (void)_addOverhangSubviewsIfNeeded;
- (void)_alignCoords;
- (BOOL)_alignOriginOfBoundsRectToBackingIfNeeded:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (BOOL)_animateCurrentScroll;
- (void)_animatedScrollToPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })_animatingScrollTargetOrigin;
- (Class)_animatorClass;
- (void)_autoscrollForDraggingInfo:(id)a0 timeDelta:(double)a1;
- (void)_checkAlignmentOfOriginOfBoundsRectIfNeeded:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (Class)_classToCheckForWantsUpdateLayer;
- (BOOL)_clipViewShouldClipFocusRing;
- (void)_computeBounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_constrainBoundsRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_constrainBoundsRectAndAlignIfNeeded:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_convertedContentInsetsToProposedBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentDocViewFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_dirtyRectUncoveredFromOldDocFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 byNewDocFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (BOOL)_drawsOverhangRects;
- (unsigned long long)_effectiveAutoresizingMask;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_effectiveContentFrame;
- (void)_extendNextScrollRelativeToCurrentPosition;
- (void)_getOverhangFrames:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; }[8])a0;
- (void)_handleBoundsChangeForSubview:(id)a0;
- (void)_handleFrameChangeForSubview:(id)a0;
- (void)_immediateScrollToPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_interactiveBounds;
- (BOOL)_isAnimatingScroll;
- (BOOL)_isScrollDueToUserAction;
- (BOOL)_isUsedByCell;
- (struct CGPoint { double x0; double x1; })_magnificationAnchorPointForCursorPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })_minimumFrameSize;
- (id)_overhangSubviews;
- (void)_pinDocRect;
- (struct CGPoint { double x0; double x1; })_pixelAlignProposedScrollPosition:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_proposedScrollPositionIsPixelAligned:(struct CGPoint { double x0; double x1; })a0;
- (void)_reflectDocumentViewBoundsChange;
- (void)_registerForDocViewFrameAndBoundsChangeNotifications;
- (double)_scrollAmountForLineScroll:(double)a0 percentageTowardsMax:(double)a1 limitingSize:(double)a2 multiplier:(double)a3;
- (BOOL)_scrollInProgress;
- (void)_scrollPoint:(const struct CGPoint { double x0; double x1; } *)a0 fromView:(id)a1;
- (BOOL)_scrollRectToVisible:(const struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 fromView:(id)a1;
- (BOOL)_scrollTo:(const struct CGPoint { double x0; double x1; } *)a0;
- (BOOL)_scrollTo:(const struct CGPoint { double x0; double x1; } *)a0 animate:(BOOL)a1;
- (BOOL)_scrollTo:(const struct CGPoint { double x0; double x1; } *)a0 animateScroll:(long long)a1 flashScrollerKnobs:(unsigned long long)a2;
- (void)_selfBoundsChanged;
- (void)_setAnimateCurrentScroll:(BOOL)a0;
- (void)_setDocViewFromRead:(id)a0;
- (void)_setDontConstrainBoundsChange:(BOOL)a0;
- (void)_setIsScrollDueToUserAction:(BOOL)a0;
- (void)_setNeedsDisplayInOverhang:(BOOL)a0;
- (void)_setOverhangSubviews:(id)a0;
- (void)_setSuperview:(id)a0;
- (BOOL)_shouldAdjustPatternPhase;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)a0;
- (BOOL)_shouldShowOverlayScrollersForScrollToPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_unregisterForDocViewFrameAndBoundsChangeNotifications;
- (BOOL)acceptsFirstResponder;
- (BOOL)autoscroll:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })constrainBoundsRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGPoint { double x0; double x1; })constrainScrollPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)makeBackingLayer;
- (BOOL)needsPanelToBecomeKey;
- (void)resetCursorRects;
- (void)rotateByAngle:(double)a0;
- (void)scaleUnitSquareToSize:(struct CGSize { double x0; double x1; })a0;
- (void)scrollToPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })scrollVelocity;
- (void)setBoundsOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)setBoundsRotation:(double)a0;
- (void)setBoundsSize:(struct CGSize { double x0; double x1; })a0;
- (void)setFrameRotation:(double)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)setScrollVelocity:(struct CGPoint { double x0; double x1; })a0;
- (void)setUpGState;
- (void)translateOriginToPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)viewBoundsChanged:(id)a0;
- (void)viewFrameChanged:(id)a0;

@end

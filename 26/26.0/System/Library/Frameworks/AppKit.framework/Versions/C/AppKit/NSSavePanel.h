@class UTType, NSString, NSURL, NSArray, NSView, NSTextField, NSDictionary, NSButton, NSCFRunLoopSemaphore;
@protocol NSOpenSavePanelDelegate;

@interface NSSavePanel : NSPanel <NSOSPHostExportedToServiceProtocol, _NSSavePanelCommonIPI, _NSModalWindowProtocol> {
    NSTextField *_nameField;
    NSButton *_newFolderButton;
    NSButton *_okButton;
    NSButton *_cancelButton;
    NSArray *_allowedContentTypes;
    NSDictionary *_preferredExtensions;
    UTType *_currentContentType;
    BOOL _showsContentTypes;
    BOOL _showsContentTypesExclusive;
    int _extensionHiddenState;
}

@property BOOL hidesSharedSection;
@property (setter=_setShowNewDocumentButton:) BOOL _showNewDocumentButton;
@property (setter=_setOkButtonDisabled:) BOOL _okButtonDisabled;
@property (copy, setter=_setNewDocumentButtonTitle:) NSString *_newDocumentButtonTitle;
@property (setter=_setUseAlertStyle:) BOOL _useAlertStyle;
@property (copy, setter=_setAlertMessage:) NSString *_alertMessage;
@property (copy, setter=_setAlertInformativeMessage:) NSString *_alertInformativeMessage;
@property (setter=_setShowsRevertOriginalDocumentButton:) BOOL _showsRevertOriginalDocumentButton;
@property (setter=_setShouldRevertOriginalDocument:) BOOL _shouldRevertOriginalDocument;
@property (copy) NSDictionary *contentTypeNames;
@property (readonly) NSString *currentExtension;
@property (setter=_setShouldShowOptionsButton:) BOOL _shouldShowOptionsButton;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSCFRunLoopSemaphore *advanceToRunPhaseIfNeededSemaphore;
@property struct CGSize { double width; double height; } lastReportedAccessorySize;
@property (copy) id /* block */ completionHandler;
@property (weak) id<NSOpenSavePanelDelegate> openSaveDelegate;
@property (retain) NSSavePanel *retainedSelf;
@property (retain) NSURL *finalURL;
@property (retain) NSArray *finalURLs;
@property BOOL observingBridge;
@property BOOL attachSandboxExtensionsToFinalURLDone;
@property BOOL attachSandboxExtensionsToFinalURLsDone;
@property long long runMode;
@property BOOL panelCompleted;
@property BOOL nsAppObservers;
@property BOOL didPrepareToRun;
@property BOOL didBeginServicePanel;
@property BOOL _shouldSendRunModal;
@property BOOL becameAppModalWindow;
@property BOOL panelIsNowUseless;
@property (setter=_setShowsContentTypesExclusive:) BOOL _showsContentTypesExclusive;
@property (copy) NSArray *customActions;
@property (readonly, copy) NSURL *URL;
@property (copy) NSString *identifier;
@property (copy) NSURL *directoryURL;
@property (copy) NSArray *allowedContentTypes;
@property BOOL allowsOtherFileTypes;
@property (copy) UTType *currentContentType;
@property (retain) NSView *accessoryView;
@property (weak) id<NSOpenSavePanelDelegate> delegate;
@property (readonly, getter=isExpanded) BOOL expanded;
@property BOOL canCreateDirectories;
@property BOOL canSelectHiddenExtension;
@property (getter=isExtensionHidden) BOOL extensionHidden;
@property BOOL treatsFilePackagesAsDirectories;
@property (copy) NSString *prompt;
@property (copy) NSString *title;
@property (copy) NSString *nameFieldLabel;
@property (copy) NSString *nameFieldStringValue;
@property (copy) NSString *message;
@property BOOL showsHiddenFiles;
@property BOOL showsTagField;
@property (copy) NSArray *tagNames;
@property BOOL showsContentTypes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (id)keyPathsForValuesAffectingValueForKey:(id)a0;
+ (id)kvoKeysForType:(long long)a0;
+ (void)_warmUp;
+ (BOOL)_actuallyValidateURLs:(id)a0 fromPanel:(id)a1 onDelegate:(id)a2 outError:(id *)a3;
+ (BOOL)_clientWithSecurityTaskRef:(struct __SecTask { } *)a0 hasEntitlement:(const char *)a1 sandboxPermissions:(const char **)a2;
+ (id)_createPanel:(int)a0;
+ (BOOL)_defaultSettingForUbiquitousBehaviors;
+ (BOOL)_isDirectoryURL:(id)a0 treatFilePackagesAsDirectories:(BOOL)a1 fauxFilePackageTypes:(id)a2 enabledFileTypes:(id)a3;
+ (BOOL)_isFauxFilePackageURL:(id)a0 fauxFilePackageTypes:(id)a1 enabledFileTypes:(id)a2;
+ (void *)dlsym:(const char *)a0;
+ (BOOL)fiAddNewTagsToSidebarBeforeEditing:(id)a0 afterEditing:(id)a1;
+ (Class)fiFinderViewClass;
+ (Class)fiTagEditorViewClass;
+ (id)fiTagNamesForTags:(id)a0;
+ (id)fiTagsForTagNames:(id)a0;
+ (BOOL)hostApp:(struct { unsigned int x0[8]; })a0 isEntitledToSandboxPermissions:(const char *)a1;
+ (id)keyPathsForValuesAffectingURL;
+ (void)newDocument:(id)a0;
+ (void)newDocumentAfterDelay;
+ (id)savePanel;

- (void)_setBool:(BOOL)a0 forKey:(id)a1;
- (id)directory;
- (id)_setForKey:(id)a0;
- (void)cancel:(id)a0;
- (id)exportedInterface;
- (id)filename;
- (id)filenames;
- (void)setAllowedFileTypes:(id)a0;
- (id)identifier;
- (void)dealloc;
- (id)bridge;
- (void)setAllowsMultipleSelection:(BOOL)a0;
- (BOOL)allowsMultipleSelection;
- (id)accessibilityIdentifier;
- (id)init;
- (void)_setString:(id)a0 forKey:(id)a1;
- (id)_serviceProxy;
- (id)allowedFileTypes;
- (void)setURL:(id)a0;
- (void)setDirectory:(id)a0;
- (id)URLs;
- (void)setTitle:(id)a0;
- (void)setIdentifier:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_prepareForReuse;
- (id)_descriptionProperties;
- (void).cxx_destruct;
- (void)beginSheetModalForWindow:(id)a0 completionHandler:(id /* block */)a1;
- (long long)runModal;
- (void)setAccessoryViewDisclosed:(BOOL)a0;
- (void)validateVisibleColumns;
- (void)setURL:(id)a0 forKey:(id)a1;
- (id)_overwritingAlertSuppressionURL;
- (void)_updateServiceShowsContentTypes;
- (void)delegateValidateURLs:(id)a0 withReply:(id /* block */)a1;
- (void)ok:(id)a0;
- (BOOL)resolvesAliases;
- (void)MondoSetFilenameWithProperSelection:(id)a0;
- (void)_setIsExpanded:(BOOL)a0;
- (void)_setSet:(id)a0 forKey:(id)a1;
- (id)kvoKeys;
- (id)_URLWithSecurityScoped:(BOOL)a0;
- (id)_URLsWithSecurityScoped:(BOOL)a0;
- (BOOL)_accessoryViewDisclosed;
- (BOOL)_accessoryViewDisclosureIsSupported;
- (BOOL)_allowsAnyType;
- (id)_arrayForKey:(id)a0;
- (void)_attachSandboxExtension:(id)a0 toURL:(id)a1;
- (BOOL)_attachSandboxExtensions:(id)a0 toURL:(id)a1 orURLs:(id)a2;
- (void)_attachSandboxExtensionsAndStartAccessing;
- (BOOL)_boolForKey:(id)a0;
- (id)_configurationDescription;
- (void)_configureForFilename:(id)a0;
- (id)_createVBSemaphore;
- (void)_customActionChanged:(id)a0;
- (id)_dictForKey:(id)a0;
- (void)_didPresentErrorWithRecovery:(BOOL)a0 contextInfo:(void *)a1;
- (void)_displayCannotCreatePanelAlertIfNeeded;
- (void)_documentWindowFrameForPanelRunningAsASheetInService:(id /* block */)a0;
- (id)_dontSaveButtonTitle;
- (BOOL)_excludeFilesInEnableURLDelegateCheck;
- (id)_extensionHiddenDescription;
- (BOOL)_fauxToolbarShouldDragWindow;
- (double)_floatForKey:(id)a0;
- (id)_initBridgeAndStuff;
- (void)_invalidateRemoteView;
- (BOOL)_isAllowedExtension:(id)a0;
- (void)_logMethod:(SEL)a0;
- (void)_maintainAppObservers:(BOOL)a0;
- (void)_maintainObservers:(BOOL)a0 onBridge:(id)a1;
- (id)_preferredFilenameExtension;
- (void)_reallyDoOrderWindow:(id)a0;
- (void)_resetPrivateState;
- (BOOL)_saveMode;
- (id)_securityScopedURL;
- (id)_securityScopedURLs;
- (void)_sendCustomActionsToOSP;
- (void)_serviceDidChangeContentType:(id)a0;
- (void)_setAccessoryViewDisclosed:(BOOL)a0;
- (void)_setAlertWindow:(BOOL)a0;
- (void)_setArray:(id)a0 forKey:(id)a1;
- (void)_setDefaultBridgeValues;
- (void)_setDict:(id)a0 forKey:(id)a1;
- (void)_setDontSaveButtonTitle:(id)a0;
- (void)_setEnabledFileTypes:(id)a0;
- (void)_setIsExpanded:(BOOL)a0 andStoreState:(BOOL)a1;
- (void)_setOverwritingAlertSuppressionURL:(id)a0;
- (void)_setSupportedDelegateMethods:(id)a0;
- (BOOL)_shouldSetTagsForClient;
- (double)_startRectForSheetHeightOffset;
- (BOOL)_startServiceFailedAlert;
- (id)_stringForKey:(id)a0;
- (id)_supportedDelegateMethods;
- (void)_updateContentTypeNames;
- (void)_updateCurrentContentType;
- (void)_updateSidebarDividerPosition:(double)a0;
- (id)accessibilityAttributeNames;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (void)accessoryDidChangeConstraints:(struct CGSize { double x0; double x1; })a0;
- (void)accessoryWindowOfViewWillUpdateConstraintsIfNeeded:(id)a0;
- (void)beginServicePanel;
- (void)beginSheetForDirectory:(id)a0 file:(id)a1 modalForWindow:(id)a2 modalDelegate:(id)a3 didEndSelector:(SEL)a4 contextInfo:(void *)a5;
- (void)beginSheetForDirectory:(id)a0 file:(id)a1 types:(id)a2 modalForWindow:(id)a3 modalDelegate:(id)a4 didEndSelector:(SEL)a5 contextInfo:(void *)a6;
- (void)beginWithCompletionHandler:(id /* block */)a0;
- (BOOL)canBecomeMainWindow;
- (BOOL)canChooseDirectories;
- (BOOL)canChooseFiles;
- (BOOL)canDownloadUbiquitousContents;
- (BOOL)canResolveUbiquitousConflicts;
- (BOOL)commonPrep:(id /* block */)a0 mode:(long long)a1;
- (void)completeModal:(long long)a0;
- (void)completeModeless:(long long)a0;
- (void)completeSheet:(long long)a0;
- (void)completeWithReturnCode:(long long)a0 url:(id)a1 urls:(id)a2;
- (void)configureContentView:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })constrainFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toScreen:(id)a1;
- (void)delegateCustomActionInvoked:(id)a0 forURLs:(id)a1;
- (void)delegateRequestNewDocumentNameWithReply:(id /* block */)a0;
- (void)delegateShouldCreateNewDocumentAtURL:(id)a0;
- (void)didEndPanelWithReturnCode:(long long)a0;
- (void)didEndSheet:(id)a0 returnCode:(long long)a1 contextInfo:(void *)a2;
- (void)induceEventLoopIterationSoon;
- (id)initWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1 backing:(unsigned long long)a2 defer:(BOOL)a3;
- (BOOL)isAccessoryViewDisclosed;
- (void)observeAsynchronousDelegateMethodCallKeyPath:(id)a0 paramDict:(id)a1;
- (void)observeAsynchronousIBActionKeyPath:(id)a0 paramDict:(id)a1;
- (void)observeAsynchronousRemoteMethodCallKeyPath:(id)a0 paramDict:(id)a1;
- (void)observeMostRecentCompletion:(id)a0;
- (void)refreshDelegateOptions;
- (id)remoteView;
- (void)requestAppEnabledStateForItems:(id)a0 replyBlock:(id /* block */)a1;
- (id)requiredFileType;
- (long long)runModalForDirectory:(id)a0 file:(id)a1;
- (long long)runModalForDirectory:(id)a0 file:(id)a1 types:(id)a2;
- (long long)runModalForTypes:(id)a0;
- (id)serviceViewControllerInterface;
- (void)setCanChooseDirectories:(BOOL)a0;
- (void)setCanChooseFiles:(BOOL)a0;
- (void)setCanDownloadUbiquitousContents:(BOOL)a0;
- (void)setCanResolveUbiquitousConflicts:(BOOL)a0;
- (void)setRequiredFileType:(id)a0;
- (void)setResolvesAliases:(BOOL)a0;
- (void)setSpi_customActions:(id)a0;
- (BOOL)shouldRetainExportedObject;
- (unsigned long long)styleMaskForHostWindow;
- (id)urlForKey:(id)a0;
- (BOOL)view:(id)a0 shouldResize:(struct CGSize { double x0; double x1; })a1;
- (void)viewDidAdvanceToRunPhase:(id)a0;
- (void)viewDidInvalidate:(id)a0;
- (void)viewWillInvalidate:(id)a0;

@end

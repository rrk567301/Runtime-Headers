@class NSScroller, NSString, CALayer, NSColor;
@protocol NSScrollerImpDelegate;

@interface NSScrollerImp : NSObject <CALayerDelegate> {
    NSScroller *_scroller;
    double _doubleValue;
    double _trackAlpha;
    double _knobAlpha;
    BOOL *_outstandingRolloverAnimationCancelledPtr;
    struct { unsigned char partsUsable : 2; unsigned char overlayScrollerState : 2; unsigned char enabled : 1; unsigned char tracking : 1; unsigned char knobStyle : 2; unsigned char shouldDrawRolloverState : 1; unsigned char useCoreUILayerContents : 1; unsigned char userInterfaceLayoutDirection : 1; unsigned char invalid : 1; unsigned int  : 20; unsigned int  : 32; } _sFlags;
    CALayer *_layer;
    CALayer *_trackLayer;
    double _presentationValue;
    unsigned char _usePresentationValue : 1;
    CALayer *_knobLayer;
    struct CGSize { double width; double height; } _boundsSize;
    double _knobProportion;
    unsigned char _isHorizontal : 1;
    unsigned char _avoidingOtherScrollerThumb : 1;
    NSColor *_trackColor;
    NSColor *_knobColor;
}

@property (getter=isTracking) BOOL tracking;
@property (readonly, copy) NSColor *_effectiveKnobColor;
@property (readonly, copy) NSColor *_effectiveTrackColor;
@property double rangeIndicatorAlpha;
@property (weak) id target;
@property SEL action;
@property (retain) CALayer *layer;
@property (retain) CALayer *trackLayer;
@property (retain) CALayer *knobLayer;
@property (readonly) unsigned long long controlSize;
@property (readonly) long long scrollerStyle;
@property long long knobStyle;
@property (getter=isHorizontal) BOOL horizontal;
@property long long userInterfaceLayoutDirection;
@property struct CGSize { double x0; double x1; } boundsSize;
@property (getter=isEnabled) BOOL enabled;
@property (getter=isAvoidingOtherScrollerThumb) BOOL avoidingOtherScrollerThumb;
@property double doubleValue;
@property double presentationValue;
@property (getter=shouldUsePresentationValue) BOOL usePresentationValue;
@property double knobProportion;
@property (readonly) double knobLength;
@property double uiStateTransitionProgress;
@property double expansionTransitionProgress;
@property double trackAlpha;
@property double knobAlpha;
@property BOOL shouldDrawRolloverState;
@property (getter=isExpanded) BOOL expanded;
@property (copy) NSColor *trackColor;
@property (copy) NSColor *knobColor;
@property (weak) NSScroller *scroller;
@property (weak) id<NSScrollerImpDelegate> delegate;
@property (readonly) double trackBoxWidth;
@property (readonly) double trackWidth;
@property (readonly) double trackSideInset;
@property (readonly) double trackEndInset;
@property (readonly) double knobEndInset;
@property (readonly) double knobMinLength;
@property (readonly) double knobOverlapEndInset;
@property (readonly) double trackOverlapEndInset;
@property (readonly) unsigned long long usableParts;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)scrollerImpClassForStyle:(long long)a0 controlSize:(unsigned long long)a1;
+ (id)scrollerImpWithStyle:(long long)a0 controlSize:(unsigned long long)a1 horizontal:(BOOL)a2 replacingScrollerImp:(id)a3;
+ (double)scrollerWidth;
+ (double)scrollerWidthForControlSize:(unsigned long long)a0 scrollerStyle:(long long)a1;

- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)actionForLayer:(id)a0 forKey:(id)a1;
- (void)dealloc;
- (void)invalidate;
- (id)init;
- (void)updateTrackingAreas;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)displayLayer:(id)a0;
- (void).cxx_destruct;
- (id)effectiveAppearance;
- (void)_animateKnobLayerContentsWithDuration:(double)a0;
- (void)_animateToRolloverState;
- (id)_color:(id)a0 byMultiplyingOpacity:(double)a1;
- (void)_drawScrollerPartForLayer:(id)a0;
- (double)_expandedKnobMinLength;
- (double)_expandedTrackBoxWidth;
- (double)_expandedTrackWidth;
- (BOOL)_hasCustomScroller;
- (void)_installDelayedRolloverAnimation;
- (double)_knobRolloverProportion;
- (id)_makeScrollerPartLayer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectForPart:(unsigned long long)a0 usingExpandedParts:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rolloverTrackingRect;
- (void)_setUseCoreUILayerContents:(BOOL)a0;
- (void)_setupCommonLayerProperties:(id)a0;
- (void)_updateKnobPresentation;
- (void)_updateLayerGeometry;
- (BOOL)_useCoreUILayerContents;
- (BOOL)_usesSeparateLayersPerPart;
- (int)_vibrancyBlendModeForAppearance:(id)a0;
- (BOOL)_wantsRedisplayOnTransitionProgress;
- (BOOL)avoidingOtherScrollerThumb;
- (void)checkSpaceForParts;
- (struct __CFDictionary { } *)copyCoreUIKnobOptions;
- (struct __CFDictionary { } *)copyCoreUIOptions;
- (struct __CFDictionary { } *)copyCoreUITrackOptions;
- (void)drawKnob;
- (void)drawKnobSlotInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 highlight:(BOOL)a1;
- (void)drawKnobSlotInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 highlight:(BOOL)a1 alpha:(double)a2;
- (void)drawKnobWithAlpha:(double)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })expandedRectForPart:(unsigned long long)a0;
- (BOOL)hitTestForLocalPoint:(struct CGPoint { double x0; double x1; })a0;
- (double)knobInset;
- (BOOL)layer:(id)a0 shouldInheritContentsScale:(double)a1 fromWindow:(id)a2;
- (void)mouseEnteredScroller;
- (void)mouseExitedScroller;
- (unsigned long long)overlayScrollerState;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForPart:(unsigned long long)a0;
- (void)removeTrackingAreas;
- (void)setNeedsDisplay:(BOOL)a0;
- (void)setOverlayScrollerState:(unsigned long long)a0 forceImmediately:(BOOL)a1;

@end

@class NSString, NSImage, NSSlider, NSSliderAccessoryBehavior, NSURL, NSArray;
@protocol NSSliderAccessoryContainer;

@interface NSSliderAccessory : NSObject <NSAccessibility, NSAccessibilityElement, NSCoding> {
    id _content;
}

@property (readonly, copy) NSImage *_image;
@property (weak) NSSlider *enclosingSlider;
@property (weak) id<NSSliderAccessoryContainer> container;
@property (readonly) BOOL repeatsOnLongPress;
@property NSSlider *enclosingSlider;
@property id container;
@property (copy) NSSliderAccessoryBehavior *behavior;
@property (getter=isEnabled) BOOL enabled;
@property (getter=isAccessibilityElement) BOOL accessibilityElement;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } accessibilityFrame;
@property (getter=isAccessibilityFocused) BOOL accessibilityFocused;
@property struct CGPoint { double x0; double x1; } accessibilityActivationPoint;
@property (weak) id accessibilityTopLevelUIElement;
@property (copy) NSURL *accessibilityURL;
@property (retain) id accessibilityValue;
@property (copy) NSString *accessibilityValueDescription;
@property (copy) NSArray *accessibilityVisibleChildren;
@property (copy) NSString *accessibilitySubrole;
@property (copy) NSString *accessibilityTitle;
@property (weak) id accessibilityTitleUIElement;
@property (copy) NSArray *accessibilityNextContents;
@property long long accessibilityOrientation;
@property (retain) id accessibilityOverflowButton;
@property (weak) id accessibilityParent;
@property (copy) NSString *accessibilityPlaceholderValue;
@property (copy) NSArray *accessibilityPreviousContents;
@property (copy) NSString *accessibilityRole;
@property (copy) NSString *accessibilityRoleDescription;
@property (retain) id accessibilitySearchButton;
@property (retain) id accessibilitySearchMenu;
@property (getter=isAccessibilitySelected) BOOL accessibilitySelected;
@property (copy) NSArray *accessibilitySelectedChildren;
@property (copy) NSArray *accessibilityServesAsTitleForUIElements;
@property (retain) id accessibilityShownMenu;
@property (retain) id accessibilityMinValue;
@property (retain) id accessibilityMaxValue;
@property (copy) NSArray *accessibilityLinkedUIElements;
@property (weak) id accessibilityWindow;
@property (copy) NSString *accessibilityIdentifier;
@property (copy) NSString *accessibilityHelp;
@property (copy) NSString *accessibilityFilename;
@property (getter=isAccessibilityExpanded) BOOL accessibilityExpanded;
@property (getter=isAccessibilityEdited) BOOL accessibilityEdited;
@property (getter=isAccessibilityEnabled) BOOL accessibilityEnabled;
@property (copy) NSArray *accessibilityChildren;
@property (copy) NSArray *accessibilityChildrenInNavigationOrder;
@property (retain) id accessibilityClearButton;
@property (retain) id accessibilityCancelButton;
@property (getter=isAccessibilityProtectedContent) BOOL accessibilityProtectedContent;
@property (copy) NSArray *accessibilityContents;
@property (copy) NSString *accessibilityLabel;
@property (getter=isAccessibilityAlternateUIVisible) BOOL accessibilityAlternateUIVisible;
@property (copy) NSArray *accessibilitySharedFocusElements;
@property (getter=isAccessibilityRequired) BOOL accessibilityRequired;
@property (copy) NSArray *accessibilityCustomRotors;
@property (copy) NSArray *accessibilityUserInputLabels;
@property (copy) NSArray *accessibilityAttributedUserInputLabels;
@property (retain) id accessibilityApplicationFocusedUIElement;
@property (retain) id accessibilityMainWindow;
@property (getter=isAccessibilityHidden) BOOL accessibilityHidden;
@property (getter=isAccessibilityFrontmost) BOOL accessibilityFrontmost;
@property (retain) id accessibilityFocusedWindow;
@property (copy) NSArray *accessibilityWindows;
@property (weak) id accessibilityExtrasMenuBar;
@property (weak) id accessibilityMenuBar;
@property (copy) NSArray *accessibilityColumnTitles;
@property (getter=isAccessibilityOrderedByRow) BOOL accessibilityOrderedByRow;
@property long long accessibilityHorizontalUnits;
@property long long accessibilityVerticalUnits;
@property (copy) NSString *accessibilityHorizontalUnitDescription;
@property (copy) NSString *accessibilityVerticalUnitDescription;
@property (copy) NSArray *accessibilityHandles;
@property (retain) id accessibilityWarningValue;
@property (retain) id accessibilityCriticalValue;
@property (getter=isAccessibilityDisclosed) BOOL accessibilityDisclosed;
@property (weak) id accessibilityDisclosedByRow;
@property (retain) id accessibilityDisclosedRows;
@property long long accessibilityDisclosureLevel;
@property (copy) NSArray *accessibilityMarkerUIElements;
@property (retain) id accessibilityMarkerValues;
@property (retain) id accessibilityMarkerGroupUIElement;
@property long long accessibilityUnits;
@property (copy) NSString *accessibilityUnitDescription;
@property long long accessibilityRulerMarkerType;
@property (copy) NSString *accessibilityMarkerTypeDescription;
@property (retain) id accessibilityHorizontalScrollBar;
@property (retain) id accessibilityVerticalScrollBar;
@property (copy) NSArray *accessibilityAllowedValues;
@property (copy) NSArray *accessibilityLabelUIElements;
@property float accessibilityLabelValue;
@property (copy) NSArray *accessibilitySplitters;
@property (retain) id accessibilityDecrementButton;
@property (retain) id accessibilityIncrementButton;
@property (copy) NSArray *accessibilityTabs;
@property (retain) id accessibilityHeader;
@property long long accessibilityColumnCount;
@property long long accessibilityRowCount;
@property long long accessibilityIndex;
@property (copy) NSArray *accessibilityColumns;
@property (copy) NSArray *accessibilityRows;
@property (copy) NSArray *accessibilityVisibleRows;
@property (copy) NSArray *accessibilitySelectedRows;
@property (copy) NSArray *accessibilityVisibleColumns;
@property (copy) NSArray *accessibilitySelectedColumns;
@property long long accessibilitySortDirection;
@property (copy) NSArray *accessibilityRowHeaderUIElements;
@property (copy) NSArray *accessibilitySelectedCells;
@property (copy) NSArray *accessibilityVisibleCells;
@property (copy) NSArray *accessibilityColumnHeaderUIElements;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilityRowIndexRange;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilityColumnIndexRange;
@property long long accessibilityInsertionPointLineNumber;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilitySharedCharacterRange;
@property (copy) NSArray *accessibilitySharedTextUIElements;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilityVisibleCharacterRange;
@property long long accessibilityNumberOfCharacters;
@property (copy) NSString *accessibilitySelectedText;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilitySelectedTextRange;
@property (copy) NSArray *accessibilitySelectedTextRanges;
@property (retain) id accessibilityToolbarButton;
@property (getter=isAccessibilityModal) BOOL accessibilityModal;
@property (retain) id accessibilityProxy;
@property (getter=isAccessibilityMain) BOOL accessibilityMain;
@property (retain) id accessibilityFullScreenButton;
@property (retain) id accessibilityGrowArea;
@property (copy) NSString *accessibilityDocument;
@property (retain) id accessibilityDefaultButton;
@property (retain) id accessibilityCloseButton;
@property (retain) id accessibilityZoomButton;
@property (retain) id accessibilityMinimizeButton;
@property (getter=isAccessibilityMinimized) BOOL accessibilityMinimized;
@property (copy) NSArray *accessibilityCustomActions;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)accessoryWithImage:(id)a0;
+ (id)keyPathsForValuesAffectingRepeatsOnLongPress;

- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityFrame;
- (void)setAccessibilityIdentifier:(id)a0;
- (id)accessibilityLabel;
- (id)initWithImage:(id)a0;
- (void)dealloc;
- (void)setAccessibilityContainerType:(long long)a0;
- (void)encodeWithCoder:(id)a0;
- (void)setAccessibilityFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setAccessibilityTitle:(id)a0;
- (id)accessibilityIdentifier;
- (id)init;
- (id)accessibilityValue;
- (void)setAccessibilityValue:(id)a0;
- (id)accessibilityUserInputLabels;
- (id)accessibilityTitle;
- (id)initWithCoder:(id)a0;
- (id)accessibilityRole;
- (void)setAccessibilityCustomActions:(id)a0;
- (id)accessibilityCustomActions;
- (void)setAccessibilityLabel:(id)a0;
- (void)setAccessibilityUserInputLabels:(id)a0;
- (long long)accessibilityContainerType;
- (id)accessibilityLastContentSibling;
- (id)accessibilityNextContentSibling;
- (id)accessibilitySelectedTextRanges;
- (BOOL)isAccessibilityAutoInteractable;
- (BOOL)isAccessibilitySelectorAllowed:(SEL)a0;
- (void)setAccessibilityDisclosedByRow:(id)a0;
- (void)setAccessibilityOverflowButton:(id)a0;
- (void)setAccessibilityVisibleColumns:(id)a0;
- (id)accessibilityCellForColumn:(long long)a0 row:(long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityFrameInParentSpace;
- (id)accessibilityHeaderForRowIndex:(long long)a0;
- (long long)accessibilityNumberOfCharacters;
- (void)setAccessibilityCustomChoosers:(id)a0;
- (void)setAccessibilityMinimizeButton:(id)a0;
- (void)setAccessibilityTitleUIElement:(id)a0;
- (id)_accessibilityLabel;
- (struct CGPoint { double x0; double x1; })accessibilityActivationPoint;
- (id)accessibilityAllowedValues;
- (id)accessibilityApplicationFocusedUIElement;
- (id)accessibilityAttributedStringForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)accessibilityAttributedUserInputLabels;
- (id)accessibilityAuditIssues;
- (id)accessibilityCancelButton;
- (id)accessibilityChartDescriptor;
- (id)accessibilityChildren;
- (id)accessibilityChildrenInNavigationOrder;
- (id)accessibilityClearButton;
- (id)accessibilityCloseButton;
- (long long)accessibilityColumnCount;
- (id)accessibilityColumnHeaderUIElements;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityColumnIndexRange;
- (id)accessibilityColumnTitles;
- (id)accessibilityColumns;
- (id)accessibilityContentSiblingAbove;
- (id)accessibilityContentSiblingBelow;
- (struct CGSize { double x0; double x1; })accessibilityContentSize;
- (id)accessibilityContents;
- (id)accessibilityCriticalValue;
- (id)accessibilityCustomChoosers;
- (id)accessibilityCustomContent;
- (id)accessibilityCustomRotors;
- (id)accessibilityDecrementButton;
- (id)accessibilityDefaultButton;
- (id)accessibilityDisclosedByRow;
- (id)accessibilityDisclosedRows;
- (long long)accessibilityDisclosureLevel;
- (id)accessibilityDocument;
- (id)accessibilityEmbeddedImageDescription;
- (id)accessibilityExtrasMenuBar;
- (id)accessibilityFilename;
- (id)accessibilityFirstContentSibling;
- (id)accessibilityFocusedWindow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityFrameForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)accessibilityFullScreenButton;
- (id)accessibilityFunctionRowTopLevelElements;
- (id)accessibilityGrowArea;
- (id)accessibilityHandles;
- (id)accessibilityHeader;
- (id)accessibilityHeaderForColumnIndex:(long long)a0;
- (id)accessibilityHeaderGroup;
- (id)accessibilityHelp;
- (id)accessibilityHorizontalScrollBar;
- (id)accessibilityHorizontalUnitDescription;
- (long long)accessibilityHorizontalUnits;
- (id)accessibilityIncrementButton;
- (long long)accessibilityIndex;
- (long long)accessibilityInsertionPointLineNumber;
- (id)accessibilityLabelUIElements;
- (float)accessibilityLabelValue;
- (struct CGPoint { double x0; double x1; })accessibilityLayoutPointForScreenPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })accessibilityLayoutSizeForScreenSize:(struct CGSize { double x0; double x1; })a0;
- (long long)accessibilityLineForIndex:(long long)a0;
- (id)accessibilityLinkedUIElements;
- (id)accessibilityMainWindow;
- (id)accessibilityMarkerGroupUIElement;
- (id)accessibilityMarkerTypeDescription;
- (id)accessibilityMarkerUIElements;
- (id)accessibilityMarkerValues;
- (id)accessibilityMaxValue;
- (id)accessibilityMenuBar;
- (id)accessibilityMinValue;
- (id)accessibilityMinimizeButton;
- (id)accessibilityNextContents;
- (long long)accessibilityOrientation;
- (id)accessibilityOverflowButton;
- (BOOL)accessibilityOverridesAlwaysTakePrecedence;
- (id)accessibilityParent;
- (id)accessibilityPath;
- (BOOL)accessibilityPerformCancel;
- (BOOL)accessibilityPerformConfirm;
- (BOOL)accessibilityPerformDecrement;
- (BOOL)accessibilityPerformDelete;
- (BOOL)accessibilityPerformIncrement;
- (BOOL)accessibilityPerformPick;
- (BOOL)accessibilityPerformPress;
- (BOOL)accessibilityPerformRaise;
- (BOOL)accessibilityPerformShowAlternateUI;
- (BOOL)accessibilityPerformShowDefaultUI;
- (BOOL)accessibilityPerformShowMenu;
- (id)accessibilityPlaceholderValue;
- (id)accessibilityPreferredLanguage;
- (id)accessibilityPreviousContentSibling;
- (id)accessibilityPreviousContents;
- (id)accessibilityProxy;
- (id)accessibilityRTFForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityRangeForIndex:(long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityRangeForLine:(long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityRangeForPosition:(struct CGPoint { double x0; double x1; })a0;
- (id)accessibilityResultsForSearchPredicate:(id)a0;
- (id)accessibilityRoleDescription;
- (long long)accessibilityRowCount;
- (id)accessibilityRowHeaderUIElements;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityRowIndexRange;
- (id)accessibilityRows;
- (long long)accessibilityRulerMarkerType;
- (struct CGPoint { double x0; double x1; })accessibilityScreenPointForLayoutPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })accessibilityScreenSizeForLayoutSize:(struct CGSize { double x0; double x1; })a0;
- (id)accessibilitySearchButton;
- (id)accessibilitySearchMenu;
- (id)accessibilitySections;
- (id)accessibilitySelectedCells;
- (id)accessibilitySelectedChildren;
- (id)accessibilitySelectedColumns;
- (id)accessibilitySelectedRows;
- (id)accessibilitySelectedText;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilitySelectedTextRange;
- (id)accessibilityServesAsTitleForUIElements;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilitySharedCharacterRange;
- (id)accessibilitySharedFocusElements;
- (id)accessibilitySharedTextUIElements;
- (id)accessibilityShownMenu;
- (long long)accessibilitySortDirection;
- (id)accessibilitySplitters;
- (id)accessibilityStringForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityStyleRangeForIndex:(long long)a0;
- (id)accessibilitySubrole;
- (id)accessibilityTabs;
- (id)accessibilityTitleUIElement;
- (id)accessibilityToolbarButton;
- (id)accessibilityTopLevelUIElement;
- (id)accessibilityURL;
- (id)accessibilityUnitDescription;
- (long long)accessibilityUnits;
- (id)accessibilityValueDescription;
- (id)accessibilityVerticalScrollBar;
- (id)accessibilityVerticalUnitDescription;
- (long long)accessibilityVerticalUnits;
- (id)accessibilityVisibleCells;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityVisibleCharacterRange;
- (id)accessibilityVisibleChildren;
- (id)accessibilityVisibleColumns;
- (id)accessibilityVisibleRows;
- (id)accessibilityWarningValue;
- (id)accessibilityWindow;
- (id)accessibilityWindows;
- (id)accessibilityZoomButton;
- (BOOL)isAccessibilityEnhancedUserInterface;
- (BOOL)isAccessibilityMimicNativeView;
- (void)setAccessibilityActivationPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)setAccessibilityAllowedValues:(id)a0;
- (void)setAccessibilityAlternateUIVisible:(BOOL)a0;
- (void)setAccessibilityApplicationFocusedUIElement:(id)a0;
- (void)setAccessibilityAttributedUserInputLabels:(id)a0;
- (void)setAccessibilityAuditIssues:(id)a0;
- (void)setAccessibilityAutoInteractable:(BOOL)a0;
- (void)setAccessibilityCancelButton:(id)a0;
- (void)setAccessibilityChartDescriptor:(id)a0;
- (void)setAccessibilityChildren:(id)a0;
- (void)setAccessibilityChildrenInNavigationOrder:(id)a0;
- (void)setAccessibilityClearButton:(id)a0;
- (void)setAccessibilityCloseButton:(id)a0;
- (void)setAccessibilityColumnCount:(long long)a0;
- (void)setAccessibilityColumnHeaderUIElements:(id)a0;
- (void)setAccessibilityColumnIndexRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)setAccessibilityColumnTitles:(id)a0;
- (void)setAccessibilityColumns:(id)a0;
- (void)setAccessibilityContentSiblingAbove:(id)a0;
- (void)setAccessibilityContentSiblingBelow:(id)a0;
- (void)setAccessibilityContentSize:(struct CGSize { double x0; double x1; })a0;
- (void)setAccessibilityContents:(id)a0;
- (void)setAccessibilityCriticalValue:(id)a0;
- (void)setAccessibilityCustomContent:(id)a0;
- (void)setAccessibilityCustomRotors:(id)a0;
- (void)setAccessibilityDecrementButton:(id)a0;
- (void)setAccessibilityDefaultButton:(id)a0;
- (void)setAccessibilityDisclosed:(BOOL)a0;
- (void)setAccessibilityDisclosedRows:(id)a0;
- (void)setAccessibilityDisclosureLevel:(long long)a0;
- (void)setAccessibilityDocument:(id)a0;
- (void)setAccessibilityEdited:(BOOL)a0;
- (void)setAccessibilityElement:(BOOL)a0;
- (void)setAccessibilityEmbeddedImageDescription:(id)a0;
- (void)setAccessibilityEnabled:(BOOL)a0;
- (void)setAccessibilityEnhancedUserInterface:(BOOL)a0;
- (void)setAccessibilityExpanded:(BOOL)a0;
- (void)setAccessibilityExtrasMenuBar:(id)a0;
- (void)setAccessibilityFilename:(id)a0;
- (void)setAccessibilityFirstContentSibling:(id)a0;
- (void)setAccessibilityFocused:(BOOL)a0;
- (void)setAccessibilityFocusedWindow:(id)a0;
- (void)setAccessibilityFrameInParentSpace:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setAccessibilityFrontmost:(BOOL)a0;
- (void)setAccessibilityFullScreenButton:(id)a0;
- (void)setAccessibilityFunctionRowTopLevelElements:(id)a0;
- (void)setAccessibilityGrowArea:(id)a0;
- (void)setAccessibilityHandles:(id)a0;
- (void)setAccessibilityHeader:(id)a0;
- (void)setAccessibilityHeaderGroup:(id)a0;
- (void)setAccessibilityHelp:(id)a0;
- (void)setAccessibilityHidden:(BOOL)a0;
- (void)setAccessibilityHorizontalScrollBar:(id)a0;
- (void)setAccessibilityHorizontalUnitDescription:(id)a0;
- (void)setAccessibilityHorizontalUnits:(long long)a0;
- (void)setAccessibilityIncrementButton:(id)a0;
- (void)setAccessibilityIndex:(long long)a0;
- (void)setAccessibilityInsertionPointLineNumber:(long long)a0;
- (void)setAccessibilityLabelUIElements:(id)a0;
- (void)setAccessibilityLabelValue:(float)a0;
- (void)setAccessibilityLastContentSibling:(id)a0;
- (void)setAccessibilityLinkedUIElements:(id)a0;
- (void)setAccessibilityMain:(BOOL)a0;
- (void)setAccessibilityMainWindow:(id)a0;
- (void)setAccessibilityMarkerGroupUIElement:(id)a0;
- (void)setAccessibilityMarkerTypeDescription:(id)a0;
- (void)setAccessibilityMarkerUIElements:(id)a0;
- (void)setAccessibilityMarkerValues:(id)a0;
- (void)setAccessibilityMaxValue:(id)a0;
- (void)setAccessibilityMenuBar:(id)a0;
- (void)setAccessibilityMimicNativeView:(BOOL)a0;
- (void)setAccessibilityMinValue:(id)a0;
- (void)setAccessibilityMinimized:(BOOL)a0;
- (void)setAccessibilityModal:(BOOL)a0;
- (void)setAccessibilityNextContents:(id)a0;
- (void)setAccessibilityNumberOfCharacters:(long long)a0;
- (void)setAccessibilityOrderedByRow:(BOOL)a0;
- (void)setAccessibilityOrientation:(long long)a0;
- (void)setAccessibilityOverridesAlwaysTakePrecedence:(BOOL)a0;
- (void)setAccessibilityParent:(id)a0;
- (void)setAccessibilityPath:(id)a0;
- (void)setAccessibilityPlaceholderValue:(id)a0;
- (void)setAccessibilityPreferredLanguage:(id)a0;
- (void)setAccessibilityPreviousContents:(id)a0;
- (void)setAccessibilityProtectedContent:(BOOL)a0;
- (void)setAccessibilityProxy:(id)a0;
- (void)setAccessibilityRequired:(BOOL)a0;
- (void)setAccessibilityRole:(id)a0;
- (void)setAccessibilityRoleDescription:(id)a0;
- (void)setAccessibilityRowCount:(long long)a0;
- (void)setAccessibilityRowHeaderUIElements:(id)a0;
- (void)setAccessibilityRowIndexRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)setAccessibilityRows:(id)a0;
- (void)setAccessibilityRulerMarkerType:(long long)a0;
- (void)setAccessibilitySearchButton:(id)a0;
- (void)setAccessibilitySearchMenu:(id)a0;
- (void)setAccessibilitySections:(id)a0;
- (void)setAccessibilitySelected:(BOOL)a0;
- (void)setAccessibilitySelectedCells:(id)a0;
- (void)setAccessibilitySelectedChildren:(id)a0;
- (void)setAccessibilitySelectedColumns:(id)a0;
- (void)setAccessibilitySelectedRows:(id)a0;
- (void)setAccessibilitySelectedText:(id)a0;
- (void)setAccessibilitySelectedTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)setAccessibilitySelectedTextRanges:(id)a0;
- (void)setAccessibilityServesAsTitleForUIElements:(id)a0;
- (void)setAccessibilitySharedCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)setAccessibilitySharedFocusElements:(id)a0;
- (void)setAccessibilitySharedTextUIElements:(id)a0;
- (void)setAccessibilityShownMenu:(id)a0;
- (void)setAccessibilitySortDirection:(long long)a0;
- (void)setAccessibilitySplitters:(id)a0;
- (void)setAccessibilitySubrole:(id)a0;
- (void)setAccessibilityTabs:(id)a0;
- (void)setAccessibilityToolbarButton:(id)a0;
- (void)setAccessibilityTopLevelUIElement:(id)a0;
- (void)setAccessibilityURL:(id)a0;
- (void)setAccessibilityUnitDescription:(id)a0;
- (void)setAccessibilityUnits:(long long)a0;
- (void)setAccessibilityValueDescription:(id)a0;
- (void)setAccessibilityVerticalScrollBar:(id)a0;
- (void)setAccessibilityVerticalUnitDescription:(id)a0;
- (void)setAccessibilityVerticalUnits:(long long)a0;
- (void)setAccessibilityVisibleCells:(id)a0;
- (void)setAccessibilityVisibleCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)setAccessibilityVisibleChildren:(id)a0;
- (void)setAccessibilityVisibleRows:(id)a0;
- (void)setAccessibilityWarningValue:(id)a0;
- (void)setAccessibilityWindow:(id)a0;
- (void)setAccessibilityWindows:(id)a0;
- (void)setAccessibilityZoomButton:(id)a0;
- (void)setNextContentSibling:(id)a0;
- (void)setPreviousContentSibling:(id)a0;

@end

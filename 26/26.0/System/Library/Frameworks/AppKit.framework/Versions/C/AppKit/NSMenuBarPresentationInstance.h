@class NSCocoaMenuImpl, NSMenuBarTrackingSession;
@protocol NSMenuBarLifecycleProtocol;

@interface NSMenuBarPresentationInstance : NSObject {
    struct __CFRunLoopTimer { } *_autoShowHideTimer;
    unsigned long long _currentSpaceID;
    int _displaySeed;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _bounds;
    double _autoHideHeight;
    double _activeMenuBarHeight;
    double _cachedActiveMenuBarHeight;
    unsigned int _fullScreenUIMode;
    unsigned int _fullScreenUIOptions;
    unsigned int _aggregateUIMode;
    unsigned int _aggregateUIOptions;
    BOOL _isOnFullScreenSpace;
    BOOL _isAlwaysVisibleInFullScreen;
    BOOL _isVisInitializedFromMode;
    BOOL _isVisible;
    BOOL _areBoundsDirty;
    BOOL _hasBeenHiddenAtLeastOnce;
    BOOL _isWindowVisible;
    BOOL _isVisibleForAutoShow;
    BOOL _isCurrentlyBeingShownOrHidden;
    BOOL _isAutoShowHideTimerShowing;
}

@property (class, retain, nonatomic) NSCocoaMenuImpl<NSMenuBarLifecycleProtocol> *menuBarImpl;
@property (class, readonly, retain, nonatomic) NSMenuBarTrackingSession *trackingSession;

+ (BOOL)isLocalInstance;
+ (void)_ensureMenuBarAutoShowListeners;
+ (void)_getReveal:(double *)a0 fullScreenRevealPtr:(double *)a1;
+ (int)_positionUnlock;
+ (void)_removeMenuBarAutoShowListeners;
+ (void)_accessibilityDisplayOptionsDidChange:(id)a0;
+ (void)_activeDisplayChanged:(id)a0;
+ (id)_activeInstanceOnDisplay:(unsigned int)a0 space:(unsigned long long)a1 ignoringFullScreenSpaces:(BOOL)a2;
+ (id)_activeMenuBarScreen;
+ (unsigned long long)_carbonMenuBarAppearance;
+ (int)_countAutoShowInstances;
+ (id)_createInstanceForFullScreenSpace:(unsigned long long)a0;
+ (id)_createInstanceWithFullScreenMode:(unsigned long long)a0 mode:(unsigned int)a1 options:(unsigned int)a2;
+ (id)_createMenuBarForSpace:(unsigned long long)a0 withInitialFullScreenMode:(unsigned int)a1 options:(unsigned int)a2;
+ (void)_ensureAutoHidePref;
+ (void)_ensureTrackingListeners;
+ (void)_ensureVisibleAutoShowMenuBar;
+ (id)_findMenuBarForSpace:(unsigned long long)a0 ignoringFullScreenSpaces:(BOOL)a1;
+ (int)_getActiveSystemUIMode:(unsigned int *)a0;
+ (int)_getActiveSystemUIMode:(unsigned int *)a0 andOptions:(unsigned int *)a1;
+ (void)_getAggregateUIMode:(unsigned int *)a0 withOptionsPtr:(unsigned int *)a1;
+ (void)_getSystemUIMode:(unsigned int *)a0 withOptionsPtr:(unsigned int *)a1;
+ (void)_hideMenuBar;
+ (BOOL)_isAutoShowEnabled;
+ (BOOL)_isDarkModeEnabled;
+ (BOOL)_isFrontMenuBarVisible;
+ (BOOL)_isMenuBarAutoHideEnabled;
+ (BOOL)_isMenuBarTransparencyEnabled;
+ (BOOL)_isMenuBarVisible;
+ (BOOL)_isMenuBarVisibleOnSpace:(unsigned long long)a0;
+ (BOOL)_isScreenPointInMenuBar:(struct CGPoint { double x0; double x1; })a0;
+ (id)_lookupInstanceForSpace:(unsigned long long)a0;
+ (double)_menuBarHeightOnDisplay:(unsigned int)a0 space:(unsigned long long)a1 options:(unsigned long long)a2;
+ (int)_modeAndOptionsForProcess:(struct __LSASN { } *)a0 modePtr:(unsigned int *)a1 andOptionsPtr:(unsigned int *)a2;
+ (int)_positionLock;
+ (void)_removeTrackingListeners;
+ (BOOL)_requestVisibility:(BOOL)a0 correctStatePtr:(BOOL *)a1 withCompletionBlock:(id /* block */)a2;
+ (void)_setAppearanceOverride:(unsigned long long)a0;
+ (void)_setAutoHideHeight:(double)a0;
+ (void)_setAutoShowDelay:(double)a0;
+ (int)_setBaroloFullScreenModeUIMode:(unsigned int)a0 withOptions:(unsigned int)a1;
+ (void)_setFullScreenHasAlwaysVisibleMenuBar:(BOOL)a0;
+ (void)_setMenuBarObscured:(BOOL)a0;
+ (int)_setSystemUIMode:(unsigned int)a0 withOptions:(unsigned int)a1;
+ (void)_setTransitionDuration:(double)a0;
+ (id)_sharedFullScreenMenuBarCreatingIfNeeded:(BOOL)a0;
+ (void)_showMenuBar;
+ (void)_startSystemUIModeMenuBarAnimation:(double)a0 withOptions:(struct __CFDictionary { } *)a1;
+ (double)_transitionDuration;
+ (void)_updateAllAggregateUIModes:(long long)a0 orderBar:(BOOL)a1;
+ (void)_updateMenuBarAutoShowVisibility:(BOOL)a0;
+ (void)_updateMenuBarObscured:(BOOL)a0;
+ (id)_userSpaceMenuBar;
+ (BOOL)_windowUseBackdrops;
+ (id)activeMenuBar;
+ (id)activeOrUserMenuBar;
+ (void)forEachPresentationInstance:(id /* block */)a0;
+ (BOOL)preventsHidingMenuBarDueToActiveTracking;
+ (void)updateRemoteSettings:(id)a0 globalSettings:(id)a1 applicationTitle:(id)a2;

- (void)dealloc;
- (void)_setShowHideTimer:(struct CGPoint { double x0; double x1; })a0 withShowArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 withKeepVisibleArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 wantsToShow:(BOOL)a3;
- (id)_targetedScreen;
- (id)initFullscreen:(BOOL)a0;
- (void)_assignToSpace:(unsigned long long)a0;
- (void)_enableAutoShow;
- (BOOL)_hasStationaryMenuBarOnDisplay:(unsigned int)a0;
- (void)_updateAggregateUIMode:(long long)a0 orderBar:(BOOL)a1 baroloFSMToggle:(BOOL)a2 activeInstance:(BOOL)a3;
- (double)_animate:(long long)a0 shouldShow:(BOOL)a1;
- (BOOL)_anyAutoShowInstanceIsVisible;
- (void)_appendMenuBarSettings:(id)a0;
- (double)_atRestHeightForDisplay:(unsigned int)a0;
- (void)_autoShowHideTimer:(struct __CFRunLoopTimer { } *)a0;
- (void)_calcBounds;
- (void)_disableAutoShow;
- (void)_disableOtherHotKeys;
- (void)_displayDidChange;
- (void)_enableOtherHotKeys;
- (void)_ensureAutoShowObserver;
- (void)_forEachWindowDo:(BOOL)a0 withBlock:(id /* block */)a1;
- (void)_getAggregateUIMode:(unsigned int *)a0 withOptions:(unsigned int *)a1;
- (double)_getAutoHideHeightForDisplay:(unsigned int)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_getBoundsOnSpace;
- (BOOL)_isAutoShowHideAllowed;
- (BOOL)_isMenuBarForcedVisibleOnDisplay:(unsigned int)a0;
- (BOOL)_isMouseInMenuBarHotRegion;
- (BOOL)_isMouseInMenuBarHotRegion:(struct CGPoint { double x0; double x1; })a0 makeVisibleBoundsPtr:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1 keepVisibleBoundsPtr:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2 displayPtr:(unsigned int *)a3;
- (BOOL)_isScreenPointInMenuBar:(struct CGPoint { double x0; double x1; })a0;
- (double)_menuBarHeightForDisplay:(unsigned int)a0 options:(unsigned long long)a1;
- (void)_menuBarInstanceSetupForFullscreen:(BOOL)a0;
- (void)_menuImplDidChange;
- (void)_noteMenuBarVisibility:(BOOL)a0 afterDelay:(double)a1;
- (void)_presentationInstanceDisplayDidChange;
- (int)_presentationInstanceSetSpace:(unsigned long long)a0;
- (int)_presentationInstanceSetUIMode:(unsigned int)a0 withOptions:(unsigned int)a1;
- (void)_removeAutoShowObserver;
- (void)_setBoundsAndUpdateResolution;
- (int)_setFullScreenUIMode:(unsigned int)a0 withOptions:(unsigned int)a1;
- (void)_setHasAlwaysVisibleMenuBar:(BOOL)a0;
- (void)_setHotkeysEnabledInRange:(BOOL)a0 firstHotKey:(int)a1 lastHotKey:(int)a2 enableStatePtr:(BOOL *)a3;
- (void)_setOtherHotKeysEnabled:(BOOL)a0;
- (void)_startAnimation:(double)a0 withOptions:(struct __CFDictionary { } *)a1;
- (void)_startAsyncAnimation:(BOOL)a0 withDuration:(double)a1;
- (void)_startMenuBarAnimation:(double)a0 withOptions:(struct __CFDictionary { } *)a1;
- (void)_transparencyChangedListener:(id)a0;
- (void)_updateAutoShowObserver;
- (void)_updateAutoShowObserverForNotification:(id)a0;
- (void)_updateAutoShowVisibility:(struct CGPoint { double x0; double x1; })a0 immediateChanges:(BOOL)a1;
- (void)isRevealedOnUserSpace:(BOOL *)a0 inFullScreen:(BOOL *)a1;
- (void)needsRedrawForView:(id)a0;

@end

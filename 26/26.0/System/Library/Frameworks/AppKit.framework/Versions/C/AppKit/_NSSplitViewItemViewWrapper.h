@class NSView, NSString, _NSSplitViewItemAccessoryViewWrapper, NSBlurryAlleywayView, NSLayoutGuide, NSVisualEffectView, NSLayoutConstraint, NSGlassView, NSSplitViewItem;
@protocol NSSplitViewItemAccessoryView;

@interface _NSSplitViewItemViewWrapper : NSView <NSSplitViewItemSeparatorTrackingAdapter, NSSplitViewItemAccessoryViewWrapperDelegate> {
    NSSplitViewItem *_splitViewItem;
    _NSSplitViewItemAccessoryViewWrapper *_topAccessoryWrapper;
    _NSSplitViewItemAccessoryViewWrapper *_bottomAccessoryWrapper;
    NSVisualEffectView *_effectView;
    NSGlassView *_glassView;
    NSBlurryAlleywayView *_overlaySidebarExteriorPerimeterView;
    double _minimumThickness;
    double _maximumThickness;
    struct NSEdgeInsets { double top; double left; double bottom; double right; } _sidebarAdditionalSafeAreaInsets;
    double _topSidebarInset;
    NSLayoutConstraint *_stayPutConstraint;
    NSLayoutConstraint *_topConstraint;
    NSLayoutConstraint *_minimumThicknessConstraint;
    NSLayoutGuide *_flexibleSafeAreaLayoutGuide;
    NSLayoutConstraint *_minimumSafeAreaWidthConstraint;
    NSLayoutConstraint *_leadingSafeAreaConstraint;
    NSLayoutConstraint *_trailingSafeAreaConstraint;
    NSLayoutConstraint *_topSafeAreaConstraint;
    NSLayoutConstraint *_bottomSafeAreaConstraint;
    unsigned char _isOverlaid : 1;
    unsigned char _sidebar : 1;
    unsigned char _hasBaseVibrancyEffect : 1;
    unsigned char _forceWithinWindowBlending : 1;
    unsigned char _isRegisteredWithTitlebar : 1;
    unsigned char _isPeekEngaged : 1;
    unsigned char _adjacentPeekEngaged : 1;
    unsigned char _leadingEdgeOverlaid : 1;
    unsigned char _trailingEdgeOverlaid : 1;
    unsigned char _minimumThicknessEnabled : 1;
}

@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } splitFrame;
@property (readonly) long long titlebarSeparatorStyle;
@property (readonly) BOOL isSidebar;
@property (readonly) BOOL isTrailingSidebar;
@property (readonly) BOOL allowsFullHeightLayout;
@property (readonly) BOOL allowsFloatingLayout;
@property (readonly) NSView<NSSplitViewItemAccessoryView> *titlebarAlignedAccessoryView;
@property (readonly) NSView<NSSplitViewItemAccessoryView> *bottomAlignedAccessoryView;
@property struct NSEdgeInsets { double x0; double x1; double x2; double x3; } sidebarAdditionalSafeAreaInsets;
@property double topSidebarInset;
@property (readonly) struct NSEdgeInsets { double x0; double x1; double x2; double x3; } floatingSidebarInsets;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSLayoutConstraint *firstEdgeConstraint;
@property (retain) NSLayoutConstraint *lastEdgeConstraint;
@property (retain) NSLayoutConstraint *topAccessoryBottomConstraint;
@property (retain) NSLayoutConstraint *topAccessoryFirstEdgeConstraint;
@property (retain) NSLayoutConstraint *topAccessoryLastEdgeConstraint;
@property (retain) NSLayoutConstraint *bottomAccessoryTopConstraint;
@property (retain) NSLayoutConstraint *bottomAccessoryFirstEdgeConstraint;
@property (retain) NSLayoutConstraint *bottomAccessoryLastEdgeConstraint;
@property (retain) NSSplitViewItem *splitViewItem;
@property NSLayoutConstraint *breadthConstraint;
@property NSLayoutConstraint *equalBreadthConstraint;
@property (readonly) double breadthInsets;
@property (getter=isOverlaid) BOOL overlaid;
@property double minimumThickness;
@property double maximumThickness;
@property (getter=isSidebar) BOOL sidebar;
@property BOOL hasBaseVibrancyEffect;
@property BOOL forceWithinWindowBlending;
@property BOOL isRegisteredWithTitlebar;
@property (getter=isLeadingEdgeOverlaid) BOOL leadingEdgeOverlaid;
@property (getter=isTrailingEdgeOverlaid) BOOL trailingEdgeOverlaid;

+ (id)keyPathsForValuesAffectingSplitFrame;
+ (id)keyPathsForValuesAffectingTitlebarSeparatorStyle;

- (void)mouseDown:(id)a0;
- (void)mouseDragged:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)layout;
- (void)viewDidChangeEffectiveAppearance;
- (void)updateConstraints;
- (void)didChangeValueForKey:(id)a0;
- (void)setHidden:(BOOL)a0;
- (void)rightMouseDown:(id)a0;
- (void)_updateAdditionalSafeAreaInsets;
- (void)otherMouseDown:(id)a0;
- (void)updateBreadthConstraintPriority;
- (double)_bottomAccessoryViewHeight;
- (void)_configureFlexibleSafeAreaLayoutGuideConstraints;
- (void)_configureGlassSidebarPath;
- (void)_createOrUpdateMaximumSizeConstraint;
- (void)_createOrUpdateMinimumSizeConstraint;
- (id)_flexibleSafeAreaLayoutGuide;
- (double)_glassCornerRadius;
- (long long)_glassVariant;
- (double)_minimumThickness;
- (id)_nextResponderForEvent:(id)a0;
- (id)_overlayMaterialGroupName;
- (id)_preferredAppearance;
- (BOOL)_shouldConsumeMouseEvents;
- (id)_splitView;
- (double)_topAccessoryViewHeight;
- (void)_updateEffectViewState;
- (void)_updateFlexibleSafeAreaLayoutGuideIfNecessary;
- (void)_updateSafeAreaLayoutGuideConstraintsIfNecessary;
- (BOOL)_useSafeAreaOverride;
- (void)disengageAdjacentPeek;
- (void)disengageBreadthConstraint;
- (void)disengagePeek;
- (void)engageAdjacentPeekOnLeadingEdge:(BOOL)a0;
- (double)engageBreadthConstraintForAnimatingLastEdge:(BOOL)a0;
- (void)engagePeek;
- (BOOL)isInspector;
- (void)mouseMoved:(id)a0;
- (id)safeAreaLayoutGuide;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })safeAreaRect;
- (void)scrollWheel:(id)a0;
- (void)splitViewItemAccessoryViewWrapperChangedHeight:(id)a0;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)wrapView;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })wrapperInsets;

@end

@class NSMenu, NSString, _NSFullScreenModalStackController, NSMutableDictionary, NSTabBar, NSMutableArray, NSWindow, NSTabPickerWindow, NSWindowTab, NSTabPickerViewController;

@interface NSWindowStackController : NSWindowTabGroup <NSTabPickerDelegate, NSTabBarDelegate> {
    NSMutableArray *_syncedItems;
    NSMutableDictionary *_talTabbingOrder;
    NSTabBar *_tabBar;
    NSWindow *_overlayWindow;
    NSWindow *_minimizedWindow;
    NSWindow *_windowBeingRemoved;
    NSMenu *_tabItemMenu;
    NSMenu *_pinnedTabItemMenu;
    NSTabPickerViewController *_tabPickerViewController;
    NSTabPickerWindow *_tabPickerWindow;
    NSWindowTab *_plusTab;
    unsigned char _doingClose : 1;
    unsigned char _inFullScreen : 1;
    unsigned char _changingSelection : 1;
    unsigned char _shouldAnimate : 1;
    unsigned char _isSyncing : 1;
}

@property BOOL shouldAnimate;
@property (readonly, weak) NSWindow *windowBeingDragged;
@property (readonly) BOOL isSyncing;
@property (readonly) long long numberOfTabs;
@property NSWindow *selectedWindow;
@property BOOL shouldShowTabBarWithOneItem;
@property (getter=isTabBarVisible) BOOL tabBarVisible;
@property (copy) NSString *stateIdentifier;
@property (weak) _NSFullScreenModalStackController *fullScreenModalStackController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)_tabBarIsVisibleForIdentifier:(id)a0;
+ (BOOL)canJoinExistingStackForWindow:(id)a0;
+ (void)didFinishRestoring;
+ (void)disableTabBar;
+ (void)enableTabBar;
+ (id)findStackControllerForIdentifier:(id)a0 stateIdentifier:(id)a1;
+ (BOOL)mergeAllWindowsWithWindow:(id)a0;
+ (void)moveWindow:(id)a0 toModalStackController:(id)a1;
+ (void)setTabPlusButtonWasClicked:(BOOL)a0;
+ (void)setupStackControllerForWindow:(id)a0 attemptToJoinExistingStack:(BOOL)a1 makeIfNeeded:(BOOL)a2;
+ (void)setupStackControllerIfTabBarShownForWindow:(id)a0;
+ (BOOL)tabPlusButtonWasClicked;
+ (id)topStackController;

- (BOOL)shouldAnimate;
- (long long)windowCount;
- (void).cxx_destruct;
- (void)removeWindow:(id)a0 sendNotifications:(BOOL)a1;
- (id)_selectedWindow;
- (id)_tabBar;
- (BOOL)isTabBarEnabled;
- (void)makeActiveStack;
- (id)plusTab;
- (void)setShouldShowTabBarWithOneItem:(BOOL)a0;
- (id)windows;
- (id)_activeWindow;
- (void)_addSyncedTabBarItemForWindow:(id)a0 atIndex:(long long)a1;
- (void)_addTabPickerView:(id)a0 toWindow:(id)a1;
- (BOOL)_animateTabMergeOfWindowsFromTargetWindow:(id)a0;
- (void)_checkIfWindowWasClosedByTabPicker:(id)a0;
- (void)_closeAllWindowsExceptItemAtIndex:(long long)a0;
- (void)_closeTabPickerAnimated:(BOOL)a0;
- (void)_closeWindowAtIndex:(long long)a0;
- (id)_currentTabMenuTargetedForWindow:(id)a0;
- (void)_doDockWindowMinimizeOfSelectedWindow;
- (void)_doTabSelectionAndWindowOrderingAtIndex:(unsigned long long)a0;
- (void)_doWindowOrderingForOverlaySwapWithNewWindow:(id)a0 priorWindow:(id)a1;
- (void)_doWindowOrderingToSwapPriorWindow:(id)a0 withNewWindow:(id)a1;
- (void)_ensureAccessoryViewControllerExistsForWindow:(id)a0;
- (void)_ensureTabBarBasedOnWindow:(id)a0;
- (void)_ensureTabPickerViewController;
- (void)_ensureWindowHasTabBar:(id)a0;
- (void)_enterWindow:(id)a0 intoFullScreenWithWindow:(id)a1;
- (void)_enumerateTabMergableWindows:(id /* block */)a0 targetWindow:(id)a1;
- (void)_exitWindowFromFullScreenIfNeeded:(id)a0 basedOnWindow:(id)a1;
- (unsigned long long)_indexOfWrapperForTabBarItem:(id)a0;
- (BOOL)_insertDraggedItemAtIndex:(unsigned long long)a0 fromController:(id)a1 sourceIndex:(unsigned long long)a2;
- (void)_makeTabBarForWindow:(id)a0 visible:(BOOL)a1;
- (void)_moveItemAtIndex:(unsigned long long)a0 toIndex:(unsigned long long)a1;
- (unsigned long long)_nextSelectedIndexAfterRemovingIndex:(unsigned long long)a0;
- (void)_noteTabbingChangedForWindow:(id)a0;
- (long long)_onePastLastPinnedTab;
- (void)_openTabPickerAnimated:(BOOL)a0;
- (id)_overlayWindow;
- (BOOL)_overlayWindowIsVisible;
- (BOOL)_regularTabMergeOfWindowsFromTargetWindow:(id)a0;
- (void)_removeSyncedItemAtIndex:(unsigned long long)a0;
- (void)_removeSyncedTabBarItem:(id)a0;
- (void)_removeTabBarAccessoryViewControllerForWindow:(id)a0;
- (void)_selectNextTabWhenRemovingTabAtIndex:(unsigned long long)a0;
- (void)_selectWindowWithoutOrderingFront:(id)a0;
- (void)_sendTabOverviewIsVisibleDidChange;
- (void)_setTabBarIsVisible:(BOOL)a0 force:(BOOL)a1;
- (BOOL)_shouldAnimateTabChanges;
- (id)_shouldShowTabBarKey;
- (void)_syncInactiveTabWindowSizesForSnapshot;
- (void)_syncInactiveTabWindowSizesToWindow:(id)a0;
- (void)_syncToolbarOfWindow:(id)a0 withPropertiesOfWindow:(id)a1;
- (void)_syncWindowFrameStateForSwapWithNewWindow:(id)a0 priorWindow:(id)a1;
- (id)_syncedWrapperForTabBarItem:(id)a0;
- (BOOL)_tabBarShouldBeVisible;
- (BOOL)_tabPickerIsVisible;
- (id)_tabPickerThumbnailViews;
- (id)_windowForTabViewItem:(id)a0;
- (id)_windowYankedOutIntoNewControllerFromIndex:(long long)a0;
- (id)_windows;
- (id)_wrapperForTabBarItem:(id)a0;
- (void)_yankWindowFromIndex:(long long)a0;
- (void)_yankWindowFromIndex:(long long)a0 sendNotifications:(BOOL)a1;
- (void)addWindow:(id)a0;
- (BOOL)attemptToCloseEntireStack:(id)a0;
- (void)beginNextSheetAfterWindow:(id)a0;
- (void)createNewTabInTabBar:(id)a0;
- (id)detachedFullScreenModalTabBar;
- (void)didEnterFullScreenForWindow:(id)a0;
- (void)didExitFullScreenForWindow:(id)a0;
- (void)didFinishDeminiaturizeWindow:(id)a0;
- (BOOL)handleDeminimizingWindow:(id)a0;
- (BOOL)handleMinimizingWindow:(id)a0;
- (id)initWithTabbingIdentifier:(id)a0;
- (void)insertWindow:(id)a0 atIndex:(long long)a1;
- (BOOL)isOverviewVisible;
- (void)moveTabToNewWindow:(id)a0;
- (void)moveWindow:(id)a0 toWindowStackController:(id)a1 atIndex:(long long)a2;
- (id)nextWindowToSelectAfterClosingWindow:(id)a0;
- (void)performCloseAllWindowsExcept:(id)a0;
- (void)pinTabForWindow:(id)a0;
- (void)reattachFullScreenModalTabBar;
- (void)removeWindow:(id)a0;
- (void)selectNextTab;
- (void)selectPreviousTab;
- (id)selectedTabBarViewItemAfterClosingCurrentTabInTabBar:(id)a0;
- (unsigned long long)selectedTabButtonIndex;
- (id)selectedWindow;
- (void)setOverviewVisible:(BOOL)a0;
- (void)setSelectedTabButtonIndex:(unsigned long long)a0;
- (void)setSelectedWindow:(id)a0;
- (void)setShouldAnimate:(BOOL)a0;
- (void)setTALTabIndex:(long long)a0 forWindow:(id)a1;
- (void)setTabBarEnabled:(BOOL)a0;
- (BOOL)shouldShowTabBarWithOneItem;
- (void)syncToolbarsBasedOnWindow:(id)a0;
- (BOOL)tabBar:(id)a0 acceptDrop:(id)a1 index:(unsigned long long)a2;
- (BOOL)tabBar:(id)a0 acceptTabDrop:(id)a1 index:(unsigned long long)a2;
- (BOOL)tabBar:(id)a0 canCloseTabBarViewItem:(id)a1;
- (void)tabBar:(id)a0 closeTabBarViewItem:(id)a1;
- (id)tabBar:(id)a0 destinationWindowForDetachedTabBarViewItem:(id)a1;
- (id)tabBar:(id)a0 detachedWindowImageForDraggedTabBarViewItem:(id)a1;
- (void)tabBar:(id)a0 didFinishTransitionAnimationForWindow:(id)a1;
- (void)tabBar:(id)a0 didMoveTabBarViewItem:(id)a1 fromIndex:(unsigned long long)a2 toIndex:(unsigned long long)a3 isChangingPinnedness:(BOOL)a4;
- (BOOL)tabBar:(id)a0 droppedWindowTabShouldMoveToSpace:(long long)a1;
- (void)tabBar:(id)a0 hideWindowForDraggingItemAtIndex:(unsigned long long)a1;
- (id)tabBar:(id)a0 menuForTabBarViewItem:(id)a1 event:(id)a2;
- (void)tabBar:(id)a0 selectTabBarViewItem:(id)a1;
- (void)tabBar:(id)a0 showWindowForDraggingItemAtIndex:(unsigned long long)a1;
- (unsigned long long)tabBar:(id)a0 validateDrop:(id)a1;
- (unsigned long long)tabBar:(id)a0 validateTabDrop:(id)a1;
- (BOOL)tabBarCanDragItems:(id)a0;
- (id)tabBarSnapshotForTabPicker:(id)a0;
- (long long)tabIndexForWindow:(id)a0;
- (void)tabPicker:(id)a0 closeTabBarItem:(id)a1;
- (void)tabPicker:(id)a0 didSelectTabItemWhenClosing:(id)a1;
- (BOOL)tabPicker:(id)a0 highlightStateForTabItem:(id)a1;
- (id)tabPicker:(id)a0 imageForTabItem:(id)a1;
- (id)tabPicker:(id)a0 nextTabPickerItemAfterClosingItem:(id)a1;
- (id)tabPicker:(id)a0 thumbnailViewForTabItem:(id)a1;
- (id)tabPickerCreatingNewTabItem:(id)a0;
- (id)tabPickerCurrentlySelectedTabItem:(id)a0;
- (void)tabPickerDidClose:(id)a0;
- (void)tabPickerDidOpen:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tabPickerFrameForWindowContentAnimation:(id)a0;
- (id)tabPickerItemsForTabPicker:(id)a0;
- (void)tabPickerWillClose:(id)a0;
- (void)tabPickerWillOpen:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tabRectForWindow:(id)a0;
- (void)unpinTabForWindow:(id)a0;
- (void)willEnterFullScreenForWindow:(id)a0;
- (void)windowDidGainToolbar:(id)a0;
- (id)windowSnapshotForTabPickerAnimation:(id)a0;

@end

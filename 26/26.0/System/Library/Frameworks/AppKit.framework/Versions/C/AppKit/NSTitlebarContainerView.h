@class NSMutableArray, NSTimer, NSView, _NSTitlebarDecorationView, NSTrackingArea, NSWindowSectionController, NSThemeFrame;
@protocol WindowSectionDelegate;

@interface NSTitlebarContainerView : NSView {
    BOOL _transparent;
    BOOL _hitTestsWhenTransparent;
    BOOL _drawsBottomDividerWhenTransparent;
    BOOL _drawsDecorationView;
    BOOL _titlebarIsForcingDisplayOfDividers;
    BOOL _updateDividerLayersOnLayout;
    BOOL _mouseInside;
    NSView *_nonRootLayerBackedWindowChromeBackstopRenderingView;
    NSView *_leadingDragDisablingView;
    NSView *_trailingDragDisablingView;
    double _sidebarDividerPosition;
    double _trailingSidebarDividerPosition;
    NSMutableArray *_sectionContentControllers;
    NSMutableArray *_dividerLayers;
    NSTrackingArea *_forceDisplayContentDividersTrackingArea;
    NSTimer *_forceDisplayContentDividersTimer;
}

@property (getter=isTransparent) BOOL transparent;
@property BOOL transparencyAllowedInFullScreen;
@property BOOL hitTestsWhenTransparent;
@property BOOL drawsBottomDividerWhenTransparent;
@property (weak) NSThemeFrame *associatedThemeFrame;
@property (readonly) double titleHeightToHideInFullScreen;
@property double buttonRevealAmount;
@property (retain) _NSTitlebarDecorationView *decorationView;
@property BOOL drawsBottomSeparator;
@property double sidebarDividerPosition;
@property double trailingSidebarDividerPosition;
@property BOOL drawsDecorationView;
@property (readonly) NSWindowSectionController *windowSectionController;
@property (weak) id<WindowSectionDelegate> windowSectionDelegate;
@property (readonly) BOOL _titlebarIsForcingDisplayOfDividers;
@property (readonly) BOOL _allowRolloverInToolbarControls;

- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })safeAreaInsets;
- (void)mouseUp:(id)a0;
- (void)updateLayer;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)layout;
- (void)updateTrackingAreas;
- (void)viewDidMoveToWindow;
- (id)menuForEvent:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)viewDidChangeEffectiveAppearance;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void).cxx_destruct;
- (void)_observeWindow:(id)a0;
- (void)_windowWillDrag;
- (void)setFrameOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)_configureLayer:(id)a0 forDividerStyle:(long long)a1 widgetHeight:(double *)a2;
- (void)_forceDisplayOfDividers:(BOOL)a0 didUpdateBackgroundViewVEVs:(BOOL *)a1;
- (void)_fullscreenWindowMoved:(id)a0;
- (id)_hitTestToBlockWindowResizing:(struct CGPoint { double x0; double x1; })a0 forResizeDirection:(long long)a1;
- (BOOL)_isMouseInAccessoryView:(id)a0;
- (BOOL)_isTitlebarAssociatedScrollPocketElementContainer;
- (void)_mouseReallyEntered:(id)a0;
- (void)_mouseReallyExited:(id)a0;
- (id)_nextResponderForEvent:(id)a0;
- (void)_refreshDividerLayers;
- (void)_refreshLayerHitTesting;
- (struct CGSRegionObject { } *)_regionForOpaqueDescendants:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forMove:(BOOL)a1 forUnderTitlebar:(BOOL)a2;
- (void)_setDividerLayersHidden:(BOOL)a0;
- (void)_startForceShadowContentDividersTimer;
- (void)_stopForceShadowContentDividersTimer;
- (void)_syncDividerLayerCountToContentControllerCount;
- (id)_themeFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_titlebarTrackingRect;
- (void)_trackMouse:(id)a0;
- (void)_unobserveWindow:(id)a0;
- (void)_unsetForcedDividersAndUpdateRelatedViews;
- (void)_updateAllDividerLayersAnimated:(BOOL)a0;
- (void)_updateAllTitlebarBackgroundViewVEVs;
- (void)_updateDividerLayerForController:(id)a0 animated:(BOOL)a1;
- (void)_updateNonRootLayerBackedWindowChromeBackstopRenderingView;
- (void)_updateSectionContentControllers:(id)a0;
- (void)_updateTitlebarMaterialWithSectionController:(id)a0;
- (void)_updateTitlebarWithSectionController:(id)a0;
- (void)_windowChangedKeyState;
- (void)_windowDidChangeSeparatorStyle;
- (void)_windowDidEnterFS;
- (void)_windowDidExitFS;
- (void)_windowWillExitFS;
- (double)buttonRevealAmount;
- (BOOL)computed_allowRolloverInToolbarControls;
- (BOOL)computed_titlebarIsForcingDisplayOfDividers;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dividerCursorRectForAdapter:(id)a0;
- (double)dividerWidthForAdapter:(id)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)layer:(id)a0 shouldInheritContentsScale:(double)a1 fromWindow:(id)a2;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseMoved:(id)a0;
- (void)noteWindowSheetStatusChanged:(id)a0;
- (void)setButtonRevealAmount:(double)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sidebarDividerCursorRect;
- (double)titleHeightToHideInFullScreen;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trailingSidebarDividerCursorRect;
- (BOOL)wantsUpdateLayer;

@end

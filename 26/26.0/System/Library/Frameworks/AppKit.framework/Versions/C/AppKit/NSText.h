@class NSString, NSColor, NSFont;
@protocol NSTextDelegate;

@interface NSText : NSView <NSChangeSpelling, NSIgnoreMisspelledWords> {
    id _ivars;
}

@property (copy) NSString *string;
@property id<NSTextDelegate> delegate;
@property (getter=isEditable) BOOL editable;
@property (getter=isSelectable) BOOL selectable;
@property (getter=isRichText) BOOL richText;
@property BOOL importsGraphics;
@property (getter=isFieldEditor) BOOL fieldEditor;
@property BOOL usesFontPanel;
@property BOOL drawsBackground;
@property (copy) NSColor *backgroundColor;
@property (readonly, getter=isRulerVisible) BOOL rulerVisible;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } selectedRange;
@property (retain) NSFont *font;
@property (copy) NSColor *textColor;
@property long long alignment;
@property long long baseWritingDirection;
@property struct CGSize { double x0; double x1; } maxSize;
@property struct CGSize { double x0; double x1; } minSize;
@property (getter=isHorizontallyResizable) BOOL horizontallyResizable;
@property (getter=isVerticallyResizable) BOOL verticallyResizable;

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone { } *)a0;

- (void)selectAll:(id)a0;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withString:(id)a1;
- (void)copyFont:(id)a0;
- (void)pasteFont:(id)a0;
- (void)alignLeft:(id)a0;
- (void)alignRight:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)paste:(id)a0;
- (void)copy:(id)a0;
- (void)cut:(id)a0;
- (void)scrollRangeToVisible:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)alignCenter:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)sizeToFit;
- (unsigned long long)_numberOfLinesToCharacterIndex:(unsigned long long)a0;
- (id)RTFDFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)RTFFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)accessibilityAttachmentAtIndex:(unsigned long long)a0;
- (void)changeSpelling:(id)a0;
- (void)delete:(id)a0;
- (void)ignoreSpelling:(id)a0;
- (void)showGuessPanel:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)accessibilityAXAttributedStringForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 parent:(id)a1;
- (id)accessibilityAttachments;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityBoundsForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityCharacterRangeForLineNumber:(unsigned long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityCharacterRangeForPosition:(struct CGPoint { double x0; double x1; })a0;
- (unsigned long long)accessibilityIndexForAttachment:(id)a0;
- (unsigned long long)accessibilityInsertionPointLineNumber;
- (BOOL)accessibilityIsSelectedRangeSettable;
- (BOOL)accessibilityIsSelectedTextSettable;
- (BOOL)accessibilityIsVisibleCharacterRangeSettable;
- (unsigned long long)accessibilityLineNumberForCharacterIndex:(unsigned long long)a0;
- (void)accessibilityPostNotification:(id)a0;
- (void)accessibilityPostNotification:(id)a0 withNotificationElement:(id)a1;
- (id)accessibilityRTFForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilitySelectedRange;
- (id)accessibilitySelectedText;
- (void)accessibilitySetSelectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)accessibilitySetSelectedText:(id)a0;
- (void)accessibilitySetVisibleCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilitySharedCharacterRange;
- (id)accessibilitySharedTextViews;
- (id)accessibilitySharedViewForIndex:(long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityStyleRangeForCharacterIndex:(unsigned long long)a0;
- (id)accessibilityTextLinkAtIndex:(unsigned long long)a0;
- (id)accessibilityTextLinks;
- (id)accessibilityTextView;
- (id)accessibilityValueAttribute;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityVisibleCharacterRange;
- (void)changeFont:(id)a0;
- (void)checkSpelling:(id)a0;
- (void)copyRuler:(id)a0;
- (void)pasteRuler:(id)a0;
- (BOOL)readRTFDFromFile:(id)a0;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withRTF:(id)a1;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withRTFD:(id)a1;
- (void)setFont:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setTextColor:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)subscript:(id)a0;
- (void)superscript:(id)a0;
- (void)toggleRuler:(id)a0;
- (void)underline:(id)a0;
- (void)unscript:(id)a0;
- (BOOL)writeRTFDToFile:(id)a0 atomically:(BOOL)a1;

@end

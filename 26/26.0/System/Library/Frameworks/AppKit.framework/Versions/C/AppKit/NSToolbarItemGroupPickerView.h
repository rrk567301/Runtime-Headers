@class NSToolbarItemGroupPickerExpandedView, NSString, NSArray, NSFont, NSPopUpButton, NSImage, NSLayoutConstraint, NSMutableIndexSet;

@interface NSToolbarItemGroupPickerView : NSView <NSToolbarItemNonContiguousLayout> {
    NSArray *_subitems;
    long long _controlRepresentation;
    long long _effectiveControlRepresentation;
    long long _selectionMode;
    NSString *_title;
    NSImage *_image;
    unsigned long long _controlSize;
    NSFont *_font;
    long long _selectedIndex;
    NSMutableIndexSet *_selectedIndexes;
    BOOL _enabled;
    BOOL _supportsCollapsedRepresentation;
    struct CGSize { double width; double height; } _minimumCollapsedSize;
    struct CGSize { double width; double height; } _minimumExpandedSize;
    struct CGSize { double width; double height; } _maximumExpandedSize;
    NSLayoutConstraint *_minWidthConstraint;
    NSLayoutConstraint *_maxWidthConstraint;
    NSLayoutConstraint *_heightConstraint;
    NSToolbarItemGroupPickerExpandedView *_segmentedControl;
    NSPopUpButton *_popUpButton;
}

@property (retain) NSArray *subitems;
@property (weak) id target;
@property SEL action;
@property (getter=isEnabled) BOOL enabled;
@property (copy) NSString *title;
@property (retain) NSImage *image;
@property unsigned long long controlSize;
@property (copy) NSFont *font;
@property long long controlRepresentation;
@property (readonly) long long effectiveControlRepresentation;
@property long long selectionMode;
@property long long selectedIndex;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (void)dealloc;
- (void)layout;
- (id)init;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)updateConstraints;
- (void).cxx_destruct;
- (struct CGSize { double x0; double x1; })sizeThatFitsProposedLayoutSize:(struct CGSize { double x0; double x1; })a0;
- (void)_optionInvoked:(id)a0;
- (void)_beginObservingSubitems;
- (void)_configureAsCollapsedRepresentation;
- (void)_configureAsExpandedRepresentation;
- (void)_configureCollapsedSubitemAtIndex:(long long)a0;
- (void)_configureCollapsedSubitems;
- (void)_configureExpandedSubitemAtIndex:(long long)a0;
- (void)_configureExpandedSubitems;
- (void)_endObservingSubitems;
- (id)_imageToDisplayForImage:(id)a0;
- (void)_invalidateCachedSizesAffectingControlRepresentation:(long long)a0;
- (void)_loadCollapsedRepresentation;
- (void)_loadControlRepresentations;
- (void)_loadExpandedRepresentation;
- (struct CGSize { double x0; double x1; })_maximumExpandedAlignmentSize;
- (struct CGSize { double x0; double x1; })_minimumCollapsedAlignmentSize;
- (struct CGSize { double x0; double x1; })_minimumExpandedAlignmentSize;
- (BOOL)_shouldToggleItemAtIndex:(long long)a0;
- (void)_syncSelection;
- (void)_unloadCollapsedRepresentation;
- (void)_unloadExpandedRepresentation;
- (void)_updateCollapsedDisplayItem;
- (void)_updatePopUpButtonSizingBehavior:(long long)a0;
- (void)_updateSpringLoading;
- (void)_updateSupportsCollapsedRepresentation;
- (double)additionalWidthRequiredForProposedLayoutSize:(struct CGSize { double x0; double x1; })a0;
- (BOOL)isSelectedAtIndex:(long long)a0;
- (void)itemToggledAtIndex:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForItem:(id)a0;
- (long long)respectedControlRepresentation;
- (void)setSelected:(BOOL)a0 atIndex:(long long)a1;

@end

@class NSString, NSWindowRestorationOptions, NSPersistentUIRestorer, NSPersistentUIEncodingQueue, NSPersistentUIRestorationCrashDataHandler, NSPersistentUICrashHistory, NSPersistentUIWindowSnapshotter, NSObject, NSPersistentUIFlushScheduler, NSMutableArray, NSMapTable, NSMutableDictionary;
@protocol OS_dispatch_queue, NSPersistentUIStorageClient;

@interface NSPersistentUIManager : NSObject <NSPersistentUIFlushHandler, NSPersistentUIManagerCarbonMethods> {
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
    NSObject<OS_dispatch_queue> *workQueue;
    NSPersistentUIEncodingQueue *_encodingQueue;
    id<NSPersistentUIStorageClient> _store;
    NSPersistentUIFlushScheduler *_flushScheduler;
    NSPersistentUIWindowSnapshotter *_windowSnapshotter;
    NSPersistentUICrashHistory *_crashHistory;
    NSPersistentUIRestorer *_stateRestorer;
    NSPersistentUIRestorationCrashDataHandler *_restorationCrashDataHandler;
    NSWindowRestorationOptions *_launchRestorationOptions;
    BOOL _isClosedToChanges;
    NSMutableArray *sortedWindowInfos;
    NSMapTable *objectToPendingKeyPaths;
    NSMutableArray *pendingRecords;
    NSMutableDictionary *additionalBuckets;
    unsigned long long _approximateWrittenAmountSinceLastStaleDataFlush;
    unsigned int _publicPlistChecksum;
    NSMutableArray *_waitingCompletionHandlers;
    BOOL _didInitialEmptying;
    BOOL treatEverythingAsDirty;
    BOOL _hadPersistentStateToRestoreAtLaunch;
    BOOL _isWaiting;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)unarchiver:(id)a0 didDecodeObject:(id)a1;
+ (id)sharedManager;
+ (id)_NSPersistentUIAcquireTalagentWindowsOnConnections:(unsigned int)a0 :(id)a1;
+ (void)_NSPersistentUIDestroyTalagentWindows:(unsigned int)a0 :(id)a1;
+ (id /* block */)_copyCGWindowOrderingReplayer;
+ (id)_debugUnrestoredWindows;
+ (void)_didDecodeObject:(id)a0 uid:(unsigned int)a1;
+ (void)_permitWindowOrderingUntilStateRestoration;
+ (void)_resuppressWindowOrderingNowThatStateRestorationIsOccurring;
+ (BOOL)_suppressCGWindowOrdering;
+ (id)copyDebugDumpStateDirectory:(id)a0;
+ (id)copyPersistentCarbonWindowDictionariesForBundleID:(id)a0;
+ (void)nibDecoder:(id)a0 didDecodeObject:(id)a1;

- (id)initWithBundleID:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void).cxx_destruct;
- (void)flushAllChanges;
- (void)_cancelFlushTimer;
- (void)_finishEncodingImmediatelyWithCompletionHandler:(id /* block */)a0;
- (void)_flushPendingPostEncodingChangesSynchronously;
- (void)_setPublicProperties:(id)a0 forWindowID:(unsigned int)a1;
- (void)_waitForPendingChangesToFinish;
- (void)acquireDirtyState;
- (void)addObjectInBackgroundForKeyedState:(id)a0 underKey:(id)a1 forIdentifier:(id)a2 inWindow:(unsigned int)a3;
- (void)addPendingKeyPath:(id)a0 forObject:(id)a1;
- (void)beginAcquiringExternallyCreatedWindows;
- (void)changePersistentKeyPathObservationForPaths:(id)a0 inObject:(id)a1 to:(BOOL)a2;
- (void)changeWindow:(unsigned int)a0 toStatus:(int)a1 withConditionalGeneration:(unsigned int)a2;
- (void)clearCrashCountFileIfNecessary;
- (id)copyAcquiredExternallyCreatedWindows;
- (id)copyPersistentCarbonWindowDictionariesAtTimeOfAppLaunch;
- (long long)crashBlameCounter;
- (unsigned int)createPersistentWindow;
- (void)delayCGWindowOrderingIfNecessary;
- (void)deletePersistentWindow:(unsigned int)a0;
- (void)destroyExternallyCreatedWindows:(id)a0;
- (void)disableRestorableStateWriting;
- (void)discardAllPersistentStateAndClose;
- (void)enableRestorableStateWriting;
- (void)encryptionKeyChangedNotification:(id)a0;
- (void)flushForScheduler:(id)a0;
- (void)flushPersistentStateAndClose;
- (void)flushPersistentStateAndClose:(BOOL)a0 waitingUntilDone:(BOOL)a1;
- (void)fullyDirtyAndReopenPersistentState;
- (BOOL)hasFinishedRestoringWindows;
- (BOOL)hasPersistentStateToRestore;
- (void)ignoreAnyPreexistingPersistentState;
- (void)invalidateStateDirectoryAtLaunch;
- (unsigned int)modifyCrashBlameCounterBy:(int)a0;
- (void)performDockCommands:(id)a0 withOldWindowIDToNewWindowID:(id)a1;
- (BOOL)performingWindowOrdering;
- (id)previousSpaceOrder;
- (BOOL)promptToIgnorePersistentState;
- (void)refreshEncryptionKey;
- (BOOL)restoreAllPersistentStateWithFullFidelity:(BOOL)a0 completionHandler:(id /* block */)a1;
- (void)setObject:(id)a0 forKey:(id)a1 forPersistentWindowID:(unsigned int)a2;
- (void)setPublicProperties:(id)a0 forWindowID:(unsigned int)a1;
- (BOOL)shouldRestoreStateOnLaunch;
- (BOOL)shouldRestoreWithFullFidelity;
- (BOOL)shouldUseOneWindowHeuristic;
- (id)stateDirectoryAtLaunch;
- (id)windowInfoForWindowID:(unsigned int)a0 createIfNecessary:(BOOL)a1;
- (void)writePublicPlistWithOpenWindowIDs:(id)a0;

@end

@class NSMutableDictionary, SCNMorpher, SCNNodeComponent, SCNSkinner, SCNCamera, NSMutableArray, NSString, SCNLight, SCNPhysicsBody, SCNGeometry, NSArray, SCNPhysicsField, SCNOrderedDictionary;
@protocol SCNNodeRendererDelegate;

@interface SCNNode : NSObject <SCNTransactionCommandObject, NSCopying, NSSecureCoding, SCNAnimatable, SCNActionable, SCNBoundingVolume> {
    struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DNode *x1; struct __C3DNode *x2; struct __C3DNode *x3; int x4; struct { union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x0; union { } x1; } x5; union C3DMatrix4x4)BfQib1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b3b1{? { } *x6; BOOL x7; float x8; unsigned long long x9; int x10; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 3; unsigned char x35 : 1; struct { struct { unsigned short x0; unsigned short x1; } x0; unsigned int x1; } x36; struct *x37; struct __C3DGeometry *x38; struct __C3DDeformerStack *x39; float x40; struct { } x41; } *_node;
    SCNNode *_parent;
    NSMutableArray *_childNodes;
    SCNNode *_presentationInstance;
    unsigned char _isPresentationInstance : 1;
    unsigned char _lightLoaded : 1;
    unsigned char _geometryLoaded : 1;
    unsigned char _cameraLoaded : 1;
    unsigned char _skinnerLoaded : 1;
    unsigned char _morpherLoaded : 1;
    unsigned char _paused : 1;
    unsigned char _pausedByInheritance : 1;
    unsigned char _affineUpToDate : 1;
    unsigned char _transformUpToDate : 1;
    unsigned char _hasPivot : 1;
    unsigned char _isJoint : 1;
    unsigned char _rotationRepresentation : 2;
    unsigned char _movability : 1;
    unsigned char _hidden : 1;
    unsigned char _castsShadow : 1;
    unsigned char _depthPrePass : 1;
    unsigned char _ignoreAnimationWhenCopying_tmp : 1;
    unsigned char _focusBehavior : 2;
    unsigned char _isFocusableOrHasFocusableChild : 1;
    unsigned char _authoringEnvironmentNode : 1;
    unsigned short _hasComponentBitmask : 13;
    struct { void /* unknown type, empty encoding */ columns[4]; } _transform;
    void /* unknown type, empty encoding */ _position;
    union { void /* unknown type, empty encoding */ eulerAngles; void /* unknown type, empty encoding */ axisAngle; struct { void /* unknown type, empty encoding */ vector; } quaternion; } _rotation;
    void /* unknown type, empty encoding */ _scale;
    float _opacity;
    unsigned long long _categoryBitMask;
    long long _renderingOrder;
    SCNNodeComponent *_components;
    SCNOrderedDictionary *_actions;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _animationsLock;
    SCNOrderedDictionary *_animations;
    NSMutableDictionary *_bindings;
    struct SCNVector3 { double x0; double x1; double x2; } *_fixedBoundingBoxExtrema;
    NSString *_name;
    NSMutableDictionary *_valueForKey;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _valueForKeyLock;
    id _rendererDelegate;
}

@property (class, readonly, nonatomic) struct SCNVector3 { double x0; double x1; double x2; } localUp;
@property (class, readonly, nonatomic) struct SCNVector3 { double x0; double x1; double x2; } localRight;
@property (class, readonly, nonatomic) struct SCNVector3 { double x0; double x1; double x2; } localFront;
@property (class, readonly, nonatomic) void /* unknown type, empty encoding */ simdLocalUp;
@property (class, readonly, nonatomic) void /* unknown type, empty encoding */ simdLocalRight;
@property (class, readonly, nonatomic) void /* unknown type, empty encoding */ simdLocalFront;
@property (class, readonly) BOOL supportsSecureCoding;

@property (nonatomic) long long authoringCameraType;
@property (readonly, nonatomic) struct SCNVector3 { double x0; double x1; double x2; } worldUp;
@property (readonly, nonatomic) struct SCNVector3 { double x0; double x1; double x2; } worldRight;
@property (readonly, nonatomic) struct SCNVector3 { double x0; double x1; double x2; } worldFront;
@property (nonatomic) struct { void /* unknown type, empty encoding */ x0[4]; } simdTransform;
@property (nonatomic) void /* unknown type, empty encoding */ simdPosition;
@property (nonatomic) void /* unknown type, empty encoding */ simdRotation;
@property (nonatomic) struct { } simdOrientation;
@property (nonatomic) void /* unknown type, empty encoding */ simdEulerAngles;
@property (nonatomic) void /* unknown type, empty encoding */ simdScale;
@property (nonatomic) struct { void /* unknown type, empty encoding */ x0[4]; } simdPivot;
@property (nonatomic) void /* unknown type, empty encoding */ simdWorldPosition;
@property (nonatomic) struct { } simdWorldOrientation;
@property (nonatomic) struct { void /* unknown type, empty encoding */ x0[4]; } simdWorldTransform;
@property (readonly, nonatomic) void /* unknown type, empty encoding */ simdWorldUp;
@property (readonly, nonatomic) void /* unknown type, empty encoding */ simdWorldRight;
@property (readonly, nonatomic) void /* unknown type, empty encoding */ simdWorldFront;
@property (copy, nonatomic) NSString *name;
@property (retain, nonatomic) SCNLight *light;
@property (retain, nonatomic) SCNCamera *camera;
@property (retain, nonatomic) SCNGeometry *geometry;
@property (retain, nonatomic) SCNSkinner *skinner;
@property (retain, nonatomic) SCNMorpher *morpher;
@property (nonatomic) struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } transform;
@property (readonly, nonatomic) struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } worldTransform;
@property (nonatomic) struct SCNVector3 { double x0; double x1; double x2; } position;
@property (nonatomic) struct SCNVector3 { double x0; double x1; double x2; } worldPosition;
@property (nonatomic) struct SCNVector4 { double x0; double x1; double x2; double x3; } rotation;
@property (nonatomic) struct SCNVector4 { double x0; double x1; double x2; double x3; } orientation;
@property (nonatomic) struct SCNVector4 { double x0; double x1; double x2; double x3; } worldOrientation;
@property (nonatomic) struct SCNVector3 { double x0; double x1; double x2; } eulerAngles;
@property (nonatomic) struct SCNVector3 { double x0; double x1; double x2; } scale;
@property (nonatomic) struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } pivot;
@property (nonatomic, getter=isHidden) BOOL hidden;
@property (nonatomic) double opacity;
@property (nonatomic) long long renderingOrder;
@property (nonatomic) BOOL castsShadow;
@property (nonatomic) long long movabilityHint;
@property (readonly, nonatomic) SCNNode *parentNode;
@property (readonly, nonatomic) NSArray *childNodes;
@property (retain, nonatomic) SCNPhysicsBody *physicsBody;
@property (retain, nonatomic) SCNPhysicsField *physicsField;
@property (copy) NSArray *constraints;
@property (copy, nonatomic) NSArray *filters;
@property (readonly, nonatomic) SCNNode *presentationNode;
@property (nonatomic, getter=isPaused) BOOL paused;
@property (nonatomic) id<SCNNodeRendererDelegate> rendererDelegate;
@property (nonatomic) unsigned long long categoryBitMask;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSArray *animationKeys;
@property (readonly, nonatomic) BOOL hasActions;
@property (readonly, nonatomic) NSArray *actionKeys;

+ (id)node;
+ (BOOL)resolveInstanceMethod:(SEL)a0;
+ (id)keyPathsForValuesAffectingTransform;
+ (id)nodeWithGeometry:(id)a0;
+ (id)nodeWithNodeRef:(struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DNode *x1; struct __C3DNode *x2; struct __C3DNode *x3; int x4; struct { union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x0; union { } x1; } x5; union C3DMatrix4x4)BfQib1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b3b1{? { } *x6; BOOL x7; float x8; unsigned long long x9; int x10; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 3; unsigned char x35 : 1; struct { struct { unsigned short x0; unsigned short x1; } x0; unsigned int x1; } x36; struct *x37; struct __C3DGeometry *x38; struct __C3DDeformerStack *x39; float x40; struct { } x41; } *)a0;
+ (id)SCNUID_additionalProperties;
+ (BOOL)SCNUID_rangeForFloatProperty:(id)a0 min:(double *)a1 max:(double *)a2;
+ (Class)SCNUID_classForElementOfArray:(id)a0;
+ (id)SCNUID_creationOptions;
+ (id)SCNUID_instanciateWithOption:(id)a0;
+ (id)SCNUID_propertyOrdering;
+ (id)keyPathsForValuesAffectingScale;
+ (id)_dumpNodeTree:(id)a0 tab:(id)a1;
+ (id)keyPathsForValuesAffectingEulerAngles;
+ (id)keyPathsForValuesAffectingOrientation;
+ (id)keyPathsForValuesAffectingPosition;
+ (id)keyPathsForValuesAffectingRotation;
+ (id)nodeWithMDLAsset:(id)a0;
+ (id)nodeWithMDLAsset:(id)a0 options:(id)a1;
+ (id)nodeWithMDLObject:(id)a0;
+ (id)nodeWithMDLObject:(id)a0 masterObjects:(id)a1 sceneNodes:(id)a2 skinnedMeshes:(id)a3 skelNodesMap:(void *)a4 asset:(id)a5 options:(id)a6;
+ (id)nodeWithMDLObject:(id)a0 options:(id)a1;

- (void)dump;
- (id)debugQuickLookObject;
- (id)scene;
- (id)entity;
- (void)setEntity:(id)a0;
- (void)renderInContext:(void *)a0;
- (void)_setAttributes:(id)a0;
- (id)actionForKey:(id)a0;
- (id)identifier;
- (void)dealloc;
- (void)enumerateNodesUsingBlock:(id /* block */)a0;
- (void)setAttribute:(id)a0 forKey:(id)a1;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)removeAllActions;
- (void)encodeWithCoder:(id)a0;
- (id)copy;
- (id)init;
- (id)valueForKeyPath:(id)a0;
- (BOOL)isGizmo;
- (id)valueForUndefinedKey:(id)a0;
- (BOOL)canBecomeFocused;
- (BOOL)hidden;
- (void)setValue:(id)a0 forKeyPath:(id)a1;
- (void)_updateTransform;
- (void)setValue:(id)a0 forUndefinedKey:(id)a1;
- (void)addAnimation:(id)a0;
- (void)_setParent:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)actions;
- (void)_setPosition:(SEL)a0;
- (void)setIdentifier:(id)a0;
- (void)addAnimation:(id)a0 forKey:(id)a1;
- (struct SCNVector4 { double x0; double x1; double x2; double x3; })quaternion;
- (void)setQuaternion:(struct SCNVector4 { double x0; double x1; double x2; double x3; })a0;
- (void)removeAllAnimations;
- (BOOL)_isEffectivelyHidden;
- (id)animationForKey:(id)a0;
- (id)clone;
- (unsigned long long)countOfChildNodes;
- (id)mutableChildNodes;
- (id)objectInChildNodesAtIndex:(unsigned long long)a0;
- (id)presentationInstance;
- (void)removeAnimationForKey:(id)a0;
- (struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DNode *x1; struct __C3DNode *x2; struct __C3DNode *x3; int x4; struct { union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x0; union { } x1; } x5; union C3DMatrix4x4)BfQib1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b3b1{? { } *x6; BOOL x7; float x8; unsigned long long x9; int x10; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 3; unsigned char x35 : 1; struct { struct { unsigned short x0; unsigned short x1; } x0; unsigned int x1; } x36; struct *x37; struct __C3DGeometry *x38; struct __C3DDeformerStack *x39; float x40; struct { } x41; } *)nodeRef;
- (id)attributeForKey:(id)a0;
- (void)_setScale:(SEL)a0;
- (void)addChildNode:(id)a0;
- (void)enumerateChildNodesUsingBlock:(id /* block */)a0;
- (unsigned long long)indexOfChildNode:(id)a0;
- (void)insertChildNode:(id)a0 atIndex:(unsigned long long)a1;
- (void)removeFromParentNode;
- (void)setWorldTransform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })a0;
- (struct __C3DAnimationManager { } *)animationManager;
- (id)__light;
- (id)__camera;
- (id)__morpher;
- (void)removeAllChilds;
- (BOOL)_childNodesPassingTest:(id /* block */)a0 recursively:(BOOL)a1 output:(id)a2;
- (id)_copyRecursively;
- (void *)__CFObject;
- (id)__geometry;
- (void)__insertObject:(id)a0 inChildNodesAtIndex:(unsigned long long)a1;
- (void)__removeObjectFromChildNodesAtIndex:(unsigned long long)a0;
- (id)__skinner;
- (BOOL)getBoundingSphereCenter:(struct SCNVector3 { double x0; double x1; double x2; } *)a0 radius:(double *)a1;
- (BOOL)isJoint;
- (void)_childNodesWithAttribute:(Class)a0 output:(id)a1 recursively:(BOOL)a2;
- (void)_dump:(id)a0;
- (void)_initChildNodesArray;
- (void)_registerAsObserver;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (BOOL)canAddChildNode:(id)a0;
- (id)childNodeWithName:(id)a0;
- (id)childNodeWithName:(id)a0 recursively:(BOOL)a1;
- (id)childNodesPassingTest:(id /* block */)a0;
- (id)childNodesPassingTest:(id /* block */)a0 recursively:(BOOL)a1;
- (id)childNodesWithAttribute:(Class)a0 recursively:(BOOL)a1;
- (id)flattenedCopy;
- (id)getBoundingBox;
- (BOOL)getBoundingBoxMin:(struct SCNVector3 { double x0; double x1; double x2; } *)a0 max:(struct SCNVector3 { double x0; double x1; double x2; } *)a1;
- (id)getBoundingSphere;
- (id)initPresentationNodeWithNodeRef:(struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DNode *x1; struct __C3DNode *x2; struct __C3DNode *x3; int x4; struct { union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x0; union { } x1; } x5; union C3DMatrix4x4)BfQib1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b3b1{? { } *x6; BOOL x7; float x8; unsigned long long x9; int x10; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 3; unsigned char x35 : 1; struct { struct { unsigned short x0; unsigned short x1; } x0; unsigned int x1; } x36; struct *x37; struct __C3DGeometry *x38; struct __C3DDeformerStack *x39; float x40; struct { } x41; } *)a0;
- (id)initWithNodeRef:(struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DNode *x1; struct __C3DNode *x2; struct __C3DNode *x3; int x4; struct { union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x0; union { } x1; } x5; union C3DMatrix4x4)BfQib1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b3b1{? { } *x6; BOOL x7; float x8; unsigned long long x9; int x10; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 3; unsigned char x35 : 1; struct { struct { unsigned short x0; unsigned short x1; } x0; unsigned int x1; } x36; struct *x37; struct __C3DGeometry *x38; struct __C3DDeformerStack *x39; float x40; struct { } x41; } *)a0;
- (void)insertObject:(id)a0 inChildNodesAtIndex:(unsigned long long)a1;
- (BOOL)isPresentationInstance;
- (id)jsChildNodesWithAttribute:(id)a0;
- (id)objectInChildNodesWithAttribute:(id)a0 firstOnly:(BOOL)a1;
- (id)objectInChildNodesWithName:(id)a0;
- (void)pauseAnimationForKey:(id)a0;
- (void)removeObjectFromChildNodesAtIndex:(unsigned long long)a0;
- (void)replaceChildNode:(id)a0 with:(id)a1;
- (void)replaceObjectInChildNodesAtIndex:(unsigned long long)a0 withObject:(id)a1;
- (void)resumeAnimationForKey:(id)a0;
- (struct __C3DScene { } *)sceneRef;
- (void)setGizmo:(BOOL)a0;
- (BOOL)_enumerateChildNodesUsingBlock:(id /* block */)a0;
- (void)addAudioPlayer:(id)a0;
- (void)lookAt:(struct SCNVector3 { double x0; double x1; double x2; })a0;
- (id)objectInParticleSystemsAtIndex:(unsigned long long)a0;
- (id)particleSystems;
- (void)_addSkinnerWithMDLMesh:(id)a0 sceneNodes:(id)a1;
- (id)_associatedMDLObject;
- (id)_audioPlayers;
- (void)_bakeNodes:(id)a0 folderPath:(id)a1 inVertex:(BOOL)a2 bakeAO:(BOOL)a3 quality:(float)a4 attenuation:(float)a5 geomSetter:(id /* block */)a6 terminateSetter:(id /* block */)a7;
- (void)_encodeNodePropertiesWithCoder:(id)a0;
- (void)_setQuaternion:(struct { })a0;
- (BOOL)__removeAnimation:(id)a0 forKey:(id)a1;
- (void)_appendFocusableNodesInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 ofView:(id)a1 toFocusItems:(id)a2;
- (void)_assignComponent:(id)a0 toContainerWithType:(long long)a1;
- (void)_copyAnimationsFrom:(id)a0;
- (void)_customDecodingOfSCNNode:(id)a0;
- (void)_customEncodingOfSCNNode:(id)a0 usePresentationInstance:(BOOL)a1;
- (void)_didDecodeSCNNode:(id)a0;
- (id)_dumpTree;
- (void /* unknown type, empty encoding */)_euler;
- (id)_findComponentWithType:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_focusFrameInView:(id)a0;
- (BOOL)_isAReference;
- (id)_particleSystems;
- (void)_pauseAnimation:(BOOL)a0 forKey:(id)a1 pausedByNode:(BOOL)a2;
- (struct { })_quaternion;
- (void)_removeAction:(id)a0 forKey:(id)a1;
- (void)_removeComponentWithType:(long long)a0;
- (void)_removeDeadParticleSystem:(struct __C3DParticleSystem { } *)a0;
- (id)_scnAnimationForKey:(id)a0;
- (id)_scnBindings;
- (void)_setComponent:(id)a0 withType:(long long)a1;
- (void)_setHasFocusableChild;
- (void)_setPausedOrPausedByInheritance:(BOOL)a0;
- (id)_subdividedCopyWithSubdivisionLevel:(long long)a0;
- (void)_syncObjCModelAfterC3DIOSceneLoadingWithNodeRef:(struct __C3DNode { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __C3DScene *x5; long long x6; } x0; struct __C3DNode *x1; struct __C3DNode *x2; struct __C3DNode *x3; int x4; struct { union C3DMatrix4x4 { float x0[16]; void /* unknown type, empty encoding */ x1[4]; struct { void /* unknown type, empty encoding */ x0[4]; } x2; } x0; union { } x1; } x5; union C3DMatrix4x4)BfQib1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b3b1{? { } *x6; BOOL x7; float x8; unsigned long long x9; int x10; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 3; unsigned char x35 : 1; struct { struct { unsigned short x0; unsigned short x1; } x0; unsigned int x1; } x36; struct *x37; struct __C3DGeometry *x38; struct __C3DDeformerStack *x39; float x40; struct { } x41; } *)a0;
- (void)_updateAffine;
- (void)_updateFocusableCache;
- (void)addAnimationPlayer:(id)a0 forKey:(id)a1;
- (void)addParticleSystem:(id)a0;
- (id)animationPlayerForKey:(id)a0;
- (id)audioPlayers;
- (id)authoringEnvironmentCompanionNode;
- (BOOL)authoringEnvironmentNode;
- (id)authoringEnvironmentPresentationNode;
- (void)bindAnimatablePath:(id)a0 toObject:(id)a1 withKeyPath:(id)a2 options:(id)a3;
- (struct SCNVector3 { double x0; double x1; double x2; })convertPosition:(struct SCNVector3 { double x0; double x1; double x2; })a0 fromNode:(id)a1;
- (struct SCNVector3 { double x0; double x1; double x2; })convertPosition:(struct SCNVector3 { double x0; double x1; double x2; })a0 toNode:(id)a1;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })convertTransform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })a0 fromNode:(id)a1;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })convertTransform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })a0 toNode:(id)a1;
- (struct SCNVector3 { double x0; double x1; double x2; })convertVector:(struct SCNVector3 { double x0; double x1; double x2; })a0 fromNode:(id)a1;
- (struct SCNVector3 { double x0; double x1; double x2; })convertVector:(struct SCNVector3 { double x0; double x1; double x2; })a0 toNode:(id)a1;
- (id)copyAnimationChannelForKeyPath:(id)a0 animation:(id)a1;
- (unsigned long long)countOfAudioPlayers;
- (unsigned long long)countOfParticleSystems;
- (id)debugQuickLookData;
- (void)enumerateHierarchyUsingBlock:(id /* block */)a0;
- (id)flattenedClone;
- (long long)focusBehavior;
- (BOOL)getFrustum:(SEL)a0 withViewport:(struct { union { struct { float x0; float x1; float x2; float x3; } x0; } x0[6]; } *)a1;
- (id)hitTestWithSegmentFromPoint:(struct SCNVector3 { double x0; double x1; double x2; })a0 toPoint:(struct SCNVector3 { double x0; double x1; double x2; })a1 options:(id)a2;
- (void)insertObject:(id)a0 inAudioPlayersAtIndex:(unsigned long long)a1;
- (void)insertObject:(id)a0 inParticleSystemsAtIndex:(unsigned long long)a1;
- (BOOL)isAnimationForKeyPaused:(id)a0;
- (BOOL)isFocusInteractionEnabled;
- (BOOL)isHittable;
- (BOOL)isPausedOrPausedByInheritance;
- (void)localRotateBy:(struct SCNVector4 { double x0; double x1; double x2; double x3; })a0;
- (void)localTranslateBy:(struct SCNVector3 { double x0; double x1; double x2; })a0;
- (void)lookAt:(struct SCNVector3 { double x0; double x1; double x2; })a0 up:(struct SCNVector3 { double x0; double x1; double x2; })a1 localFront:(struct SCNVector3 { double x0; double x1; double x2; })a2;
- (id)objectInAudioPlayersAtIndex:(unsigned long long)a0;
- (BOOL)parseSpecialKey:(id)a0 withPath:(id)a1 intoDestination:(id *)a2;
- (id)postMorphingDeformers;
- (id)postSkinningDeformers;
- (void)removeActionForKey:(id)a0;
- (void)removeAllAnimationsWithBlendOutDuration:(double)a0;
- (void)removeAllAudioPlayers;
- (void)removeAllBindings;
- (void)removeAllParticleSystems;
- (void)removeAnimationForKey:(id)a0 blendOutDuration:(double)a1;
- (void)removeAnimationForKey:(id)a0 fadeOutDuration:(double)a1;
- (void)removeAudioPlayer:(id)a0;
- (void)removeObjectFromAudioPlayersAtIndex:(unsigned long long)a0;
- (void)removeObjectFromParticleSystemsAtIndex:(unsigned long long)a0;
- (void)removeParticleSystem:(id)a0;
- (void)replaceObjectInAudioPlayerAtIndex:(unsigned long long)a0 withObject:(id)a1;
- (void)replaceObjectInParticleSystemsAtIndex:(unsigned long long)a0 withObject:(id)a1;
- (void)rotateBy:(struct SCNVector4 { double x0; double x1; double x2; double x3; })a0 aroundTarget:(struct SCNVector3 { double x0; double x1; double x2; })a1;
- (long long)rotationRepresentation;
- (void)runAction:(id)a0;
- (void)runAction:(id)a0 completionHandler:(id /* block */)a1;
- (void)runAction:(id)a0 forKey:(id)a1;
- (void)runAction:(id)a0 forKey:(id)a1 completionHandler:(id /* block */)a2;
- (void)setAuthoringEnvironmentCompanionNode:(id)a0;
- (void)setAuthoringEnvironmentNode:(BOOL)a0;
- (void)setAuthoringEnvironmentPresentationNode:(id)a0;
- (void)setBoundingBoxMin:(struct SCNVector3 { double x0; double x1; double x2; } *)a0 max:(struct SCNVector3 { double x0; double x1; double x2; } *)a1;
- (void)setFocusBehavior:(long long)a0;
- (void)setHittable:(BOOL)a0;
- (void)setIsJoint:(BOOL)a0;
- (void)setPostMorphingDeformers:(id)a0;
- (void)setPostSkinningDeformers:(id)a0;
- (void)setSpeed:(double)a0 forAnimationKey:(id)a1;
- (void)setUsesDepthPrePass:(BOOL)a0;
- (void /* unknown type, empty encoding */)simdConvertPosition:(SEL)a0 fromNode:(id)a1;
- (void /* unknown type, empty encoding */)simdConvertPosition:(SEL)a0 toNode:(id)a1;
- (struct { void /* unknown type, empty encoding */ x0[4]; })simdConvertTransform:(struct { void /* unknown type, empty encoding */ x0[4]; })a0 fromNode:(id)a1;
- (struct { void /* unknown type, empty encoding */ x0[4]; })simdConvertTransform:(struct { void /* unknown type, empty encoding */ x0[4]; })a0 toNode:(id)a1;
- (void /* unknown type, empty encoding */)simdConvertVector:(SEL)a0 fromNode:(id)a1;
- (void /* unknown type, empty encoding */)simdConvertVector:(SEL)a0 toNode:(id)a1;
- (BOOL)simdGetBoundingSphereCenter:(void *)a0 radius:(float *)a1;
- (void)simdLocalRotateBy:(struct { })a0;
- (void)simdLocalTranslateBy:(SEL)a0;
- (void)simdLookAt:(SEL)a0;
- (void)simdLookAt:(id)a0 up:(SEL)a1 localFront:(void /* unknown type, empty encoding */)a2;
- (void)simdRotateBy:(SEL)a0 aroundTarget:(struct { })a1;
- (void)unbindAnimatablePath:(id)a0;
- (BOOL)usesDepthPrePass;

@end

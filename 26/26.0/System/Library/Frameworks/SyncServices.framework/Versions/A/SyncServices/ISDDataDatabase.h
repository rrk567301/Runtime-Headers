@interface ISDDataDatabase : ISDDatabase {
    struct sqlite3_stmt { } *_addRecordStatement;
    struct sqlite3_stmt { } *_addRelationshipTupleStatement;
    struct sqlite3_stmt { } *_addUnformattedRelationshipTupleStatement;
    struct sqlite3_stmt { } *_containsRecordStatement;
    struct sqlite3_stmt { } *_getRecordCountsStatement;
    struct sqlite3_stmt { } *_getAddCountsStatement;
    struct sqlite3_stmt { } *_getDeleteCountsStatement;
    struct sqlite3_stmt { } *_getEntitiesInTruthStatement;
    struct sqlite3_stmt { } *_getEntitiesForRecordIdsStatement;
    struct sqlite3_stmt { } *_getRecordIdsStatement;
    struct sqlite3_stmt { } *_getRecordIdsAddedAfterGenerationStatement;
    struct sqlite3_stmt { } *_getRowidsAddedAfterGenerationStatement;
    struct sqlite3_stmt { } *_getRowidsForRecordIdsStatement;
    struct sqlite3_stmt { } *_getRecordIdsFromRowidsStatement;
    struct sqlite3_stmt { } *_getRecordIdsToBeAppliedWithEntityNumberStatement;
    struct sqlite3_stmt { } *_getToBeAppliedCountWithEntityNumberStatement;
    struct sqlite3_stmt { } *_getRecordIdsWithEntityNumberStatement;
    struct sqlite3_stmt { } *_getRecordIdsOfRecordsWithStatesAndWithEntityNumbersStatement;
    struct sqlite3_stmt { } *_getRecordIdsOfRecordsWithoutStatesAndWithEntityNumbersStatement;
    struct sqlite3_stmt { } *_getRecordIdsThatHaveDataRefsWithEntityNumberStatement;
    struct sqlite3_stmt { } *_getRecordIdsUnappliedStatement;
    struct sqlite3_stmt { } *_getRecordIdsThatExist;
    struct sqlite3_stmt { } *_getRecordIdsThatExistIncludeDeleted;
    struct sqlite3_stmt { } *_getRecordPropertiesStatement;
    struct sqlite3_stmt { } *_getRecordPropertiesForEntityStatement;
    struct sqlite3_stmt { } *_getRecordsAlteredSinceGenerationStatement;
    struct sqlite3_stmt { } *_getRecordsWithPropertiesStatement;
    struct sqlite3_stmt { } *_getRecordsWithoutPropertiesStatement;
    struct sqlite3_stmt { } *_getRelationshipTuplesStatement;
    struct sqlite3_stmt { } *_getUndeletedRecordIdsWithEntityNumberStatement;
    struct sqlite3_stmt { } *_getUnformattedTuplesStatement;
    struct sqlite3_stmt { } *_removeAllTuplesStatement;
    struct sqlite3_stmt { } *_removeAllUnformattedTuplesStatement;
    struct sqlite3_stmt { } *_removePropertiesStatement;
    struct sqlite3_stmt { } *_removeRecordsStatement;
    struct sqlite3_stmt { } *_removeSelectedTuplesStatement;
    struct sqlite3_stmt { } *_removeSelectedUnformattedTuplesStatement;
    struct sqlite3_stmt { } *_removeTupleReferencesStatement;
    struct sqlite3_stmt { } *_removeTuplesStatement;
    struct sqlite3_stmt { } *_removeUnformattedTupleReferencesStatement;
    struct sqlite3_stmt { } *_removeUnformattedTuplesStatement;
    struct sqlite3_stmt { } *_replaceRecordIdInRecordStatement;
    struct sqlite3_stmt { } *_replaceRecordIdInRelationshipFromStatement;
    struct sqlite3_stmt { } *_replaceRecordIdInRelationshipToStatement;
    struct sqlite3_stmt { } *_replaceRecordIdInUnformattedFromStatement;
    struct sqlite3_stmt { } *_replaceRecordIdInUnformattedToStatement;
    struct sqlite3_stmt { } *_replaceTupleIdInRelationshipStatement;
    struct sqlite3_stmt { } *_replaceTupleIdInUnformattedStatement;
    struct sqlite3_stmt { } *_setDeletedStatement;
    struct sqlite3_stmt { } *_setDeletedTupleStatement;
    struct sqlite3_stmt { } *_setLastChangedGenerationStatement;
    struct sqlite3_stmt { } *_setRecordStateStatement;
    struct sqlite3_stmt { } *_setRecordStateToBeAppliedStatement;
    struct sqlite3_stmt { } *_setToBeAppliedStatement;
    struct sqlite3_stmt { } *_setToBeAppliedByEntityStatement;
    struct sqlite3_stmt { } *_updateRecordStatement;
    struct sqlite3_stmt { } *_updateRecordPropertiesStatement;
    struct sqlite3_stmt { } *_lastGenerationForEntitiesStatement;
    struct sqlite3_stmt { } *_fastSourceEnumerateStatement;
    struct sqlite3_stmt { } *_fastTargetEnumerateStatement;
    struct sqlite3_stmt { } *_addRecordDataReferenceStatement;
    struct sqlite3_stmt { } *_removeRecordDataReferencesForRecordIdWithPropertyStatement;
    struct sqlite3_stmt { } *_removeRecordDataReferencesForRecordIdsStatement;
    struct sqlite3_stmt { } *_getRecordDataReferencesForRecordIdsStatement;
    struct sqlite3_stmt { } *_getRecordDataReferencesForRecordIdAndPropertyStatement;
    struct sqlite3_stmt { } *_getAllRecordDataReferencesStatement;
    struct sqlite3_stmt { } *_getAllRecordIdsThatHaveDataRefsStatement;
    struct sqlite3_stmt { } *_setRecordIdsHaveDataReferencesStatement;
    struct sqlite3_stmt { } *_replaceRecordIdInDataReferencesStatement;
    struct sqlite3_stmt { } *_addGlobalEquivalents;
    struct sqlite3_stmt { } *_removeGlobalEquivalents;
    struct sqlite3_stmt { } *_getNativeRecordId;
    struct sqlite3_stmt { } *_getEquivalentIds;
    struct sqlite3_stmt { } *_getRecordIdsToPurge;
    struct sqlite3_stmt { } *_getTupleRowsToPurge;
    struct sqlite3_stmt { } *_deleteRecordsByRowid;
    struct sqlite3_stmt { } *_deleteTuplesByRowid;
    struct sqlite3_stmt { } *_deleteGlobalEquivalentsByNativeId;
    struct sqlite3_stmt { } *_deleteStillBornRecords;
}

+ (BOOL)createDatabaseAtPath:(id)a0;
+ (id)defaultDatabasePath:(id)a0;

- (void)finalize;
- (void)dealloc;
- (void)closeDatabase;
- (void)removeAllRecords;
- (id)createArrayWithRecordsWithIdentifiers:(id)a0 constructRelationshipMap:(BOOL)a1;
- (id)createRecordIdsForRowids:(unsigned long long *)a0 count:(unsigned long long)a1;
- (void)recreateIndexes;
- (void)_updateRelationshipsInRecord:(id)a0 ignoreDeletedRelationshipTuples:(BOOL)a1 removeTuplesFirst:(BOOL)a2;
- (void)_updateUnformattedRelationshipsInRecord:(id)a0 ignoreDeletedRelationshipTuples:(BOOL)a1 removeTuplesFirst:(BOOL)a2;
- (id)addCountsForEntityNames:(id)a0 generation:(unsigned int)a1;
- (void)addDataReference:(id)a0 withRecordId:(id)a1 forPropertyName:(id)a2;
- (void)addEquivalentGlobalIds:(id)a0 forNativeGlobalId:(id)a1;
- (void)addRecord:(id)a0 state:(int)a1 toBeAppliedFlag:(BOOL)a2 ignoreDeletedRelationshipTuples:(BOOL)a3;
- (void)addRowidsToIndexSet:(id)a0 forRecordsWithIds:(id)a1;
- (id)allRecordIdentifiers;
- (BOOL)containsRecordWithId:(id)a0;
- (id)createArrayOfEntityNamesEntityNamesWithUndeletedRecords:(id)a0 lessThanGeneration:(unsigned int)a1;
- (id)createDataFromDataWrapperForSqlite:(id)a0;
- (id)createDictionaryAndArray:(id *)a0 withRecordsWithIdentifiers:(id)a1 constructRelationshipMap:(BOOL)a2;
- (id)createDictionaryWithRecordsWithIdentifiers:(id)a0;
- (id)createDictionaryWithRecordsWithIdentifiers:(id)a0 constructRelationshipMap:(BOOL)a1;
- (id)deleteCountsForEntityNames:(id)a0 generation:(unsigned int)a1;
- (void)deleteStillBornRecords;
- (void)deleteTuple:(id)a0 inGeneration:(unsigned int)a1;
- (id)deletedRecordIdsInTruth:(id)a0;
- (void)dropIndexes;
- (id)entityNumbersForRecords:(id)a0;
- (void)enumerateRecordDataReferencesForRecordIds:(id)a0 asArgumentsToFunction:(void /* function */ *)a1 context:(void *)a2;
- (void)enumerateRecordHeadersForRecordsAlteredSinceLastSyncedGenerations:(id)a0 asArgumentsToFunction:(void /* function */ *)a1 context:(void *)a2;
- (void)enumerateRecordHeadersForRecordsWithIds:(id)a0 asArgumentsToFunction:(void /* function */ *)a1 context:(void *)a2;
- (void)enumerateRecordIdsForEntityNames:(id)a0 ignoreDeletedRecords:(BOOL)a1 asArgumentsToFunction:(void /* function */ *)a2 context:(void *)a3;
- (void)enumerateRecordIdsForRecordsWithMatchingAttributes:(id)a0 asArgumentsToFunction:(void /* function */ *)a1 context:(void *)a2;
- (void)enumerateRecordIdsForRecordsWithMatchingAttributes:(id)a0 asArgumentsToFunction:(void /* function */ *)a1 context:(void *)a2 matchAll:(BOOL)a3;
- (void)enumerateRecordIdsWithDataReferencesForEntityNames:(id)a0 asArgumentsToFunction:(void /* function */ *)a1 context:(void *)a2;
- (void)enumerateRecordsForRecordIds:(id)a0 includeProperties:(BOOL)a1 asArgumentsToFunction:(void /* function */ *)a2 context:(void *)a3;
- (void)fastEnumerateSourcesOfRelationshipNames:(id)a0 toRecordIds:(id)a1 asArgumentsToFunction:(void /* function */ *)a2 context:(void *)a3;
- (void)fastEnumerateTargetsOfRelationshipNames:(id)a0 fromRecordIds:(id)a1 asArgumentsToFunction:(void /* function */ *)a2 context:(void *)a3;
- (void)finalizeStatements;
- (id)getRecordDataReferencesForRecordId:(id)a0 forPropertyName:(id)a1;
- (id)getRecordDataReferencesForRecordWithIdentifiers:(id)a0;
- (id)globalIdEquivalentsForNativeRecordId:(id)a0;
- (BOOL)haveAllMatchingAttributes:(id)a0 inPropertyValues:(id)a1;
- (BOOL)haveAnyMatchingAttributes:(id)a0 inPropertyValues:(id)a1;
- (id)initWithDatabaseInDirectory:(id)a0;
- (id)initWithDatabaseInDirectory:(id)a0 delegate:(id)a1;
- (unsigned int)latestGenerationForEntitiesNamed:(id)a0;
- (id)nativeGlobalIdForEquivalentId:(id)a0;
- (id)newDataWithPropertiesEncodedForSqlite:(id)a0;
- (void)purgeRecordsForEntitiesNamed:(id)a0 inGenerationsLessThan:(unsigned int)a1;
- (id)recordCountsForEntityNames:(id)a0;
- (id)recordIdentifiersOfRecordsInStates:(int *)a0 count:(unsigned long long)a1 entityNames:(id)a2;
- (id)recordIdsAddedAfterGeneration:(unsigned int)a0 forEntityWithName:(id)a1 fromAnyClientsExceptClientWithId:(id)a2;
- (id)recordIdsForEntityNames:(id)a0;
- (id)recordIdsInTruth:(id)a0;
- (id)recordIdsInTruth:(id)a0 includeDeletedRecords:(BOOL)a1;
- (id)recordIdsWithDataReferencesForEntityNames:(id)a0;
- (id)recordsWithIdentifiers:(id)a0;
- (id)recordsWithRowids:(unsigned long long *)a0 count:(unsigned long long)a1;
- (void)removeAllRecordDataReferences;
- (void)removeAttributes:(id)a0 andRelationships:(id)a1 forRecordsWithIdentifiers:(id)a2;
- (void)removeDataReferencesWithRecordId:(id)a0 forPropertyName:(id)a1 updateRecord:(BOOL)a2;
- (void)removeDataReferencesWithRecordIds:(id)a0;
- (void)removeEquivalentGlobalsIdsForNativeGlobalId:(id)a0;
- (void)removePropertiesForRecordsWithIdentifiers:(id)a0;
- (void)removeRecordsWithIds:(id)a0 nullifyReferencesToRemovedRecords:(BOOL)a1;
- (void)removeTuplesForRecordsWithIds:(id)a0 nullifyReferencesToRemovedRecords:(BOOL)a1;
- (void)replaceRecordId:(id)a0 withRecordId:(id)a1;
- (void)replaceRelationshipTupleId:(id)a0 withRelationshipTupleId:(id)a1;
- (void)rowids:(id)a0 addedAfterGeneration:(unsigned int)a1 forEntityWithName:(id)a2 fromAnyClientsExceptClientWithId:(id)a3;
- (void)setDeleted:(BOOL)a0 forRecord:(id)a1 inGeneration:(unsigned int)a2 lastChangedByClientId:(id)a3;
- (void)setLastChangedGeneration:(unsigned int)a0 forRecordIds:(id)a1;
- (void)setPropertyValueNamed:(id)a0 toValue:(id)a1 forClient:(id)a2 inGeneration:(unsigned int)a3 forRecordsWithIdentifiers:(id)a4;
- (void)setRecordHasDataReferences:(BOOL)a0 forRecordIds:(id)a1;
- (void)setRecordState:(int)a0 forRecordIds:(id)a1;
- (void)setRecordState:(int)a0 toBeAppliedFlag:(BOOL)a1 forRecordIds:(id)a2 removeProperties:(BOOL)a3;
- (void)setToBeApplied:(BOOL)a0 forRecordIds:(id)a1;
- (void)setToBeApplied:(BOOL)a0 forRecordsWithEntityNames:(id)a1;
- (unsigned long long)toBeAppliedRecordCountForEntityNames:(id)a0;
- (id)toBeAppliedRecordIdentifiersForEntityNames:(id)a0;
- (id)unappliedRecordIdentifiers;
- (void)updateRecord:(id)a0 inGeneration:(unsigned int)a1 lastChangedByClientId:(id)a2 ignoreDeletedRelationshipTuples:(BOOL)a3;
- (void)updateRelationshipsForRecordsInDictionary:(id)a0 withRecordIds:(id)a1 stringTable:(id)a2 constructRelationshipMap:(BOOL)a3;

@end

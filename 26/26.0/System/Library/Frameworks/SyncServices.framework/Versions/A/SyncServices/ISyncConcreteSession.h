@class NSMutableDictionary, ISyncClient, ISDRecord, NSDate, ISDRecordStore, NSDictionary, ISDClientState, NSMutableArray, NSRunLoop, NSString, NSSet, ISDStructuredDelta, NSMutableSet, ISyncRecordSnapshot, NSArray, NSCountedSet;

@interface ISyncConcreteSession : ISyncSession <ISyncSessionCallback> {
    ISyncClient *_client;
    NSString *_clientId;
    NSString *_planId;
    NSArray *_entityNames;
    NSArray *_entities;
    NSArray *_syncStates;
    int _anchorPhase;
    NSArray *_anchorRefreshSyncEntities;
    NSArray *_anchorSlowSyncEntities;
    NSDictionary *_pendingNextAnchors;
    NSDictionary *_truthPullers;
    ISDClientState *_clientState;
    ISDStructuredDelta *_structuredDelta;
    ISDRecordStore *_truth;
    ISyncRecordSnapshot *_snapshot;
    NSString *_cancelReason;
    NSDictionary *_cancelUserInfo;
    NSRunLoop *_waitingRunLoop;
    id _callbackTarget;
    SEL _callbackSelector;
    id _callbackSessionArgument;
    BOOL _shouldInvokeCallback;
    BOOL _pendingCancel;
    BOOL _running;
    BOOL _applyPushedChanges;
    BOOL _vacuumClientStateAfterSync;
    id _pushedChangesObserver;
    NSMutableSet *_modifiedRecordIdentifiers;
    NSMutableSet *_addedRecordIdentifiers;
    NSMutableSet *_deletedRecordIdentifiers;
    NSMutableSet *_deletedGlobalIds;
    NSCountedSet *_accumulatedPushedAdds;
    NSCountedSet *_accumulatedPushedModifies;
    NSCountedSet *_accumulatedPushedDeletes;
    NSCountedSet *_accumulatedPulledAdds;
    NSCountedSet *_accumulatedPulledModifies;
    NSCountedSet *_accumulatedPulledDeletes;
    int _sessionResponse;
    unsigned int _currentGeneration;
    int _phase;
    int _newPhase;
    NSMutableSet *_lostRecordIds;
    NSMutableSet *_lostRecordIdsForReplacement;
    NSMutableDictionary *_relationshipInfoMap;
    NSMutableDictionary *_knownRecordEntityNumbers;
    NSDate *_lastServerPingDate;
    NSMutableSet *_recordIdsToDeleteAfterPushing;
    NSMutableDictionary *_pushedChangesCache;
    NSMutableDictionary *_pushedRecordsCache;
    NSMutableSet *_pushedDeletesCache;
    NSMutableSet *_pushedAddedRecordIds;
    unsigned long long _pushedCacheSize;
    int _rebuildIndicesAfterPushing;
    BOOL _modifiesDuringPushing;
    NSSet *_refreshSyncingEntityNames;
    BOOL _changeStoreHasChanges;
    NSSet *_slowSyncingEntityNames;
    NSMutableDictionary *_unacceptedClientRecords;
    NSMutableDictionary *_acceptedClientRecords;
    NSMutableDictionary *_rejectedClientRecords;
    NSMutableDictionary *_acceptedUnknowns;
    NSMutableSet *_rejectedUnknowns;
    NSMutableSet *_unchangedRecordIds;
    unsigned long long _addCount;
    unsigned long long _modifyCount;
    unsigned long long _deleteCount;
    unsigned long long _pushCount;
    NSMutableDictionary *_dataReferencesToSave;
    NSMutableArray *_recordIdsWithDataReferencesToDelete;
    ISDRecord *_recordBeingPushed;
    BOOL _ignoreDecodedDataWrapper;
    NSMutableSet *_acceptedFormattedRecordsWithDataReferences;
    NSArray *_clientRecordCache;
    NSMutableDictionary *_recordIdsNotToPropagate;
    NSDate *enterSessionCreateTime;
    NSDate *enterPushingTime;
    NSDate *enterMinglingTime;
    NSDate *enterPullingTime;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;

- (void)ping;
- (void)finalize;
- (BOOL)isCancelled;
- (void)dealloc;
- (id)entityNames;
- (BOOL)isRunning;
- (id)_client;
- (void)_setRunning:(BOOL)a0;
- (void)_releaseSnapshot;
- (void)_clientCommittedAcceptedChanges;
- (void)_logPushSummary;
- (id)_recordIdMapper;
- (id)_applicableFilters;
- (void)clientChangedRecordIdentifiers:(id)a0;
- (id)_changeForChangeEnumerator:(id)a0 betweenTruthRecord:(id)a1 clientRecord:(id)a2;
- (void)_cleanupClientAfterFailedAttemptToBeginSession;
- (void)_clientDidResetEntityNames:(id)a0;
- (void)_commitUnknownRejects:(id)a0 acceptedRecordIds:(id)a1;
- (void)_completePushingPhase;
- (BOOL)_convertUnresolvedReferencesToGlobalIds;
- (void)_createClientState;
- (BOOL)shouldPushChangesForEntityName:(id)a0;
- (void)_enterCancelled;
- (void)_logPullSummary;
- (void)_appendChangeToChangeStore:(id)a0;
- (void)_applyAnchorSyncModes;
- (id)changeEnumeratorForEntityNames:(id)a0;
- (BOOL)_clientIsKnownToSyncAllSupportedEntities:(id)a0;
- (void)prepareToPullChangesInBackgroundForEntityNames:(id)a0 target:(id)a1 selector:(SEL)a2;
- (void)_commitAcceptedChangesAndStartAnotherTransaction:(BOOL)a0;
- (void)_commitUnknownAccepts:(id)a0 deletedRecordIds:(id)a1 filteredRecordIds:(id)a2;
- (void)setAnchorPhase:(int)a0;
- (BOOL)shouldPullChangesForEntityName:(id)a0;
- (void)_deleteUnreferencedRecords;
- (void)_doFinalCleanupIfNeeded:(BOOL)a0;
- (void)_doPeriodicPingToServer;
- (void)_enterFinished;
- (void)_enterMingling;
- (void)_enterNegotiating;
- (void)_enterPulling;
- (id)_enterPullingDirectly;
- (void)_enterPushing;
- (void)_enterReadyToPull;
- (id)_entityDescriptionForChange:(id)a0;
- (id)_entityDescriptionWithName:(id)a0;
- (void)_filterRecords;
- (id)_findRecordInCacheWithId:(id)a0;
- (void)_finishTransactionAndStartAnother:(BOOL)a0;
- (void)_forceCompleteRefreshSyncs;
- (BOOL)_hasAlreadyReturnedOrAcceptedChangeForRecordWithIdentifier:(id)a0;
- (void)_leaveMingling;
- (void)_leaveNegotiating;
- (void)_leavePending;
- (void)_leavePulling;
- (void)_leavePushing;
- (void)_leaveReadyToPull;
- (void)_logUnresolvedReferencesInconsistency;
- (void)_negotiateSyncMode:(int)a0 forEntityNames:(id)a1;
- (id)_newDictionaryWithRecordsPushedByClient;
- (id)_newEntitiesMapping;
- (void)_noteDataWrapper:(id)a0 forRecordWithIdentifier:(id)a1 withPropertyName:(id)a2;
- (void)_noteDataWrapper:(id)a0 forRecordWithIdentifier:(id)a1 withPropertyName:(id)a2 onlyForUpdate:(BOOL)a3;
- (void)_notePushingOfKnownPropertyNotRegisteredToSyncByClient:(id)a0 forPropertyName:(id)a1 forEntityName:(id)a2;
- (void)_noteRecordWithDataReferenceWasFormatted:(id)a0;
- (void)_notifyTheGuyWaitingToTransitionPhases;
- (void)_prepareRecordStoreForRefreshSyncingEntityNames:(id)a0;
- (void)_prepareRecordStoreForSlowSyncingEntityNames:(id)a0;
- (void)_prepareRecordStoreForSyncing;
- (void)_prepareRecordStoreForTruthPullingEntityNames:(id)a0;
- (void)_prepareRecordStoreForTruthPushingEntityNames:(id)a0;
- (void)_prepareToPullChangesForEntityNames:(id)a0 inBackground:(BOOL)a1 target:(id)a2 selector:(SEL)a3;
- (void)_processAcceptedClientRecord:(id)a0 acceptedRecordIds:(id)a1 deletedRecordIds:(id)a2 filteredRecordIds:(id)a3;
- (void)_processAllAcceptedClientRecords:(id)a0 deletedRecordIds:(id)a1 filteredRecordIds:(id)a2;
- (void)_processDeletedRecords:(id)a0;
- (void)_processLostRecords;
- (void)_processModifiedRecords;
- (void)_processPushedStuff;
- (void)_processPushedStuffIfNowIsAGoodTime;
- (void)_processRejectedClientRecord:(id)a0 rejectedRecordIds:(id)a1 acceptedRecordIds:(id)a2;
- (void)_processRemainingChangesAsAdds;
- (void)_processRemainingRecordsAsAdds;
- (void)_pushChange:(id)a0;
- (void)_pushChangesFromRecord:(id)a0 withGlobalId:(id)a1;
- (void)_pushDeleteForRecordWithGlobalId:(id)a0;
- (void)_raiseAndResetEntities:(id)a0 reason:(id)a1;
- (BOOL)_recordWithDataReferenceWasFormatted:(id)a0;
- (void)_releaseClientState;
- (void)_replaceRecordIdentifier:(id)a0 withRecordIdentifier:(id)a1 inSet:(id)a2;
- (void)_resetClientAfterException:(id)a0;
- (void)_resolveRecordIdTypes:(id)a0;
- (void)_rollbackPushingPhase;
- (void)_setAnchorRefreshSyncEntities:(id)a0;
- (void)_setAnchorSlowSyncEntities:(id)a0;
- (void)_setClientRecordCache:(id)a0;
- (void)_setIgnoreDataWrapperDecode:(BOOL)a0;
- (void)_setKeepAwayFromServerForRecordWithId:(id)a0 ofType:(id)a1;
- (void)_setPendingCancel;
- (void)_setSyncPlanIdentifier:(id)a0;
- (void)_setTarget:(id)a0 selector:(SEL)a1;
- (void)_snapshot:(id)a0 willReturnRecordToClient:(id)a1;
- (int)_stateMachinePhase;
- (BOOL)_supportedEntityNamesIsEqualToEntityNames:(id)a0 forClient:(id)a1;
- (long long)_syncPhase;
- (id)_syncPlanIdentifier;
- (id)_syncStateForEntityName:(id)a0;
- (void)_transitionStateMachine:(int)a0;
- (id)_truthPullingClients;
- (void)_updateClientRecord:(id)a0 withChangesFromTruth:(id)a1 formattedRecordDictionary:(id)a2 saveUnformattedValues:(BOOL)a3;
- (void)_updateDataReferencesForRecordsWithIdentifiers:(id)a0;
- (void)_updateDataReferencesForRecordsWithIdentifiers:(id)a0 resetOnError:(BOOL)a1;
- (void)_updateGlobalRecordIdentifiers:(id)a0 inChanges:(id)a1;
- (void)_updateGlobalRecordIdentifiers:(id)a0 inKnownTargetsMap:(id)a1;
- (void)_updateGlobalRecordIdentifiers:(id)a0 inRecordDictionaries:(id)a1;
- (void)_updateGlobalRecordIdentifiers:(id)a0 inRecords:(id)a1;
- (void)_updateRecordIdMapperWithNewLocalIdentifiers:(id)a0;
- (void)_updateRecordStoresWithNewGlobalIdentifiers:(id)a0;
- (void)_updateRecordStoresWithNewLocalIdentifiers:(id)a0;
- (void)_vacuumClientState;
- (void)_validateCanPullChangesForEntityNames:(id)a0;
- (void)_validatePushedChange:(id)a0 againstEntity:(id)a1;
- (void)_validatePushedRecord:(id)a0 againstEntity:(id)a1;
- (void)_validateRelationshipTargets;
- (void)_validateSubType:(id)a0 forProperty:(id)a1 onEntityName:(id)a2;
- (void)_waitForTransitionFromPhase:(int)a0 untilDate:(id)a1;
- (int)anchorPhase;
- (void)attentionClassDumpUser:(id)a0 reverseEngineeringThisClassAndCallingPrivateMethodsIsFunButMayLeadToCompleteAndIrrevocableDataLoss:(id)a1 atTheVeryLeastItWillCauseUnexpectedBehaviourForOtherApplications:(id)a2 youHaveBeenWarnedAgainstDoingSo:(id)a3;
- (void)cancelSyncing;
- (void)cancelSyncing:(id)a0;
- (void)cancelSyncing:(id)a0 notifyServer:(BOOL)a1 pendingCancel:(BOOL)a2;
- (void)clientAcceptedChangesForRecordWithIdentifier:(id)a0 formattedRecord:(id)a1 newRecordIdentifier:(id)a2;
- (void)clientAcceptedChangesForRecordWithIdentifier:(id)a0 formattedRecord:(id)a1 newRecordIdentifier:(id)a2 keepAwayFromServer:(BOOL)a3;
- (void)clientCommittedAcceptedChanges;
- (void)clientCommittedAcceptedChangesWithNextAnchors:(id)a0;
- (void)clientDidResetEntityNames:(id)a0;
- (void)clientFinishedPushingChangesWithNextAnchors:(id)a0;
- (id)clientInfoForRecordWithIdentifier:(id)a0;
- (void)clientLostRecordWithIdentifier:(id)a0 shouldReplaceOnNextSync:(BOOL)a1;
- (void)clientRefusedChangesForRecordWithIdentifier:(id)a0;
- (void)clientWantsToPushAllRecordsForEntityNames:(id)a0;
- (oneway void)clientWithId:(bycopy id)a0 canBeginSyncingPlanWithId:(bycopy id)a1 currentGeneration:(unsigned int)a2 syncModes:(bycopy id)a3 entities:(bycopy id)a4 truthPullers:(bycopy id)a5;
- (oneway void)clientWithIdCanStartPullingChanges:(bycopy id)a0;
- (void)deleteRecordWithIdentifier:(id)a0;
- (void)finishSyncing;
- (id)getInfoForRelationship:(id)a0 ofEntity:(id)a1;
- (id)initWithClient:(id)a0 entityNames:(id)a1;
- (void)isd_didDecodeDataWrapper:(id)a0 forRecordWithIdentifier:(id)a1 withPropertyName:(id)a2;
- (id)isd_willEncodeDataWrapper:(id)a0 forRecordWithIdentifier:(id)a1 withPropertyName:(id)a2;
- (id)knownRecordTypes;
- (void)notePushingOfUnknownEntityNamed:(id)a0 forRecordWithIdentifier:(id)a1;
- (void)notePushingOfUnknownPropertyNamed:(id)a0 forEntityNamed:(id)a1 inChange:(id)a2;
- (void)notifyUserOfUnresolvedReferences:(id)a0 onlyUnknownTypeReferences:(BOOL)a1;
- (BOOL)prepareToPullChangesForEntityNames:(id)a0 beforeDate:(id)a1;
- (void)pushChange:(id)a0;
- (void)pushChangesFromRecord:(id)a0 withIdentifier:(id)a1;
- (void)pushChangesFromRecord:(id)a0 withIdentifier:(id)a1 withDefaultedPropertyValues:(id)a2;
- (oneway void)sessionWasCancelledForClientWithIdentifier:(bycopy id)a0 reason:(bycopy id)a1;
- (oneway void)sessionWasCancelledForClientWithIdentifier:(bycopy id)a0 reason:(bycopy id)a1 userInfo:(bycopy id)a2;
- (void)setApplyPushedChanges:(BOOL)a0;
- (void)setClientInfo:(id)a0 forRecordWithIdentifier:(id)a1;
- (void)setEntityName:(id)a0 forRecordId:(id)a1;
- (void)setPendingNextAnchors:(id)a0;
- (void)setPushCacheSize:(unsigned long long)a0;
- (void)setPushedChangesObserver:(id)a0;
- (void)setRelationshipPropChanges:(id)a0 forEntity:(id)a1 relationshipName:(id)a2 forRecordId:(id)a3;
- (void)setSyncStates:(id)a0;
- (BOOL)shouldPushAllRecordsForEntityName:(id)a0;
- (BOOL)shouldReplaceAllRecordsOnClientForEntityName:(id)a0;
- (id)snapshotOfRecordsInTruth;
- (id)unresolvedReferencesAreForUnknownTypes:(BOOL *)a0;

@end

@class NSColor, NSScrollView, NSView, NSString, IKImageBackgroundLayer, CALayer, IKImageContentView;
@protocol IKImageViewVisionKitDelegate, IKImageView2Delegate;

@interface IKImageView2 : NSView {
    BOOL _alwaysHidesScrollers;
    BOOL _hasImage;
    IKImageContentView *_documentViewInLoading;
    BOOL _backgroundLoaded;
    BOOL _documentViewLayersAreSetup;
    IKImageBackgroundLayer *_checkerboardLayer;
    CALayer *_backgroundColorLayer;
    double _lastCompletedRotationAngle;
    NSView *_contentOverlayView;
    BOOL _applicationShouldSuppressHDRContent;
}

@property (readonly) IKImageContentView *imageContentView;
@property (readonly, nonatomic) IKImageContentView *layeredImageDocumentView;
@property struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } hdrSuppressionLock;
@property id<IKImageView2Delegate> delegate;
@property BOOL restrainsMinZoomToViewSize;
@property double zoomFactor;
@property NSColor *backgroundColor;
@property double rotationAngle;
@property (readonly) NSScrollView *scrollView;
@property (nonatomic) BOOL alwaysHidesScrollers;
@property BOOL stickyZoomToFit;
@property double minZoomFactor;
@property double maxZoomFactor;
@property BOOL loadsSynchronously;
@property (readonly) double zoomToFitScaleFactor;
@property (nonatomic) BOOL contentRoundsCorners;
@property (readonly) NSView *contentOverlayView;
@property BOOL wantsExtendedDynamicRangeContent;
@property (readonly) double contentsMaximumDesiredEDR;
@property (readonly) double contentsEDRStrength;
@property (readonly) BOOL imageHasHDR;
@property BOOL HDRUpdatesPaused;
@property (nonatomic) long long hdrFocusMode;
@property id<IKImageViewVisionKitDelegate> visionKitDelegate;
@property (nonatomic) unsigned long long visionKitInteractionTypes;
@property (nonatomic) BOOL automaticallyShowVisualSearchResults;
@property (nonatomic) BOOL quickActionsEnabled;
@property (nonatomic) BOOL copySubjectEnabled;
@property (nonatomic) BOOL inhibitAutomaticReanalysis;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } analysisContentsRect;
@property (readonly) BOOL hasActiveTextSelection;
@property (copy, nonatomic) NSString *highlightedString;
@property (readonly, nonatomic) NSString *visualSearchInfoButtonGlyphName;
@property (readonly, nonatomic) NSString *visualSearchFilledInfoButtonGlyphName;
@property (readonly, nonatomic) BOOL isSubjectHighlightAvailable;
@property (nonatomic) BOOL subjectHighlightActive;

+ (id)keyPathsForValuesAffectingContentsEDRStrength;
+ (id)keyPathsForValuesAffectingHasActiveTextSelection;
+ (id)keyPathsForValuesAffectingImageRectInView;
+ (id)keyPathsForValuesAffectingZoomFactor;
+ (double)rotationDegreeForEXIFOrientation:(long long)a0;

- (void)mouseDown:(id)a0;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (BOOL)dataDetectorExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)copy:(id)a0;
- (struct CGSize { double x0; double x1; })imageSize;
- (BOOL)textExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)visualSearchExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)viewDidMoveToWindow;
- (void)beginImageSubjectAnalysisIfNecessary;
- (BOOL)applicationShouldSuppressHDRContent;
- (void)awakeFromNib;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageRect;
- (id)magnificationInflectionPointsForScrollView:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (void)menuDidClose:(id)a0;
- (void)setAnimates:(BOOL)a0;
- (id)annotationsView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageRectInView;
- (struct CGPoint { double x0; double x1; })convertPointFromImage:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointToImage:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectFromImage:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToImage:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)copyText:(id)a0;
- (void)forceReanalysisWithFlattenedImageData:(id)a0;
- (BOOL)hasResultsForAnalysisTypes:(unsigned long long)a0;
- (void)removeCurrentAnalysis;
- (void)resetTextSelection;
- (void)rotateImageLeft:(id)a0;
- (void)rotateImageRight:(id)a0;
- (BOOL)setImage:(struct CGImage { } *)a0 imageProperties:(id)a1 displayProperties:(id)a2;
- (BOOL)setImageData:(id)a0 imageAtIndex:(long long)a1 withDisplayProperties:(id)a2;
- (BOOL)setImageURL:(id)a0 imageAtIndex:(long long)a1 withDisplayProperties:(id)a2;
- (void)setZoomFactor:(double)a0 withCenter:(struct CGPoint { double x0; double x1; })a1 animate:(BOOL)a2 stickyFit:(BOOL)a3;
- (void)updateUnderlyingCIImage:(id)a0 imageProperties:(id)a1 displayProperties:(id)a2 usingFlattenedImage:(BOOL)a3;
- (void)clipviewBoundsChanged:(id)a0;
- (void)setShouldUseTiles:(BOOL)a0;
- (void)setZoomFactor:(double)a0 centeredAtImagePoint:(struct CGPoint { double x0; double x1; })a1 animate:(BOOL)a2 stickyFit:(BOOL)a3;
- (void)setShowsCheckerboardBackground:(BOOL)a0;
- (id)softProofFilter;
- (void)updateHDRFocus:(id)a0;
- (void)_constrainCheckerboardMaskBounds;
- (struct CGPoint { double x0; double x1; })_convertDocumentPointToImage:(struct CGPoint { double x0; double x1; })a0;
- (void)_forceConstrainCheckerboardMaskBounds;
- (struct CGSize { double x0; double x1; })_imageSizeWithoutRotations;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_insetContentBounds;
- (void)_reinsertContentOverlayView;
- (void)_replaceDocumentView;
- (void)_setupDocumentViewForLoading;
- (void)_updateNotificationObservationsForHDRFocusMode;
- (void)animateEDRToMatchViewSize:(struct CGSize { double x0; double x1; })a0 duration:(double)a1;
- (id)annotationsLayer;
- (id)applyFiltersToImage:(id)a0;
- (void)applyFlipAnimation:(int)a0;
- (void)applyZoomAnimationFrom:(double)a0 to:(double)a1;
- (id)borrowContent;
- (void)cancelAndDisposeOfDocumentViewInLoading;
- (void)contentRotatingBy:(double)a0 aroundImagePoint:(struct CGPoint { double x0; double x1; })a1;
- (void)contentViewReadyForDisplay:(id)a0;
- (void)copySubject:(id)a0;
- (double)defaultTransformAnimationDuration;
- (void)didCompleteFlipAnimation;
- (void)didCompleteRotationAnimation;
- (void)didCompleteZoomAnimation;
- (id)flattenedUnfilteredCIImage;
- (void)flipImageHorizontal:(id)a0;
- (void)flipImageVertical:(id)a0;
- (void)forceReanalysisWithFlattenedImageAtURL:(id)a0;
- (void)freezeMoveToWindowUpdates;
- (BOOL)isAnimatingTransform;
- (void)loadingFailed;
- (id)magnificationInflectionPoints;
- (struct CGImage { } *)newVisibleImageSnapshot;
- (void)originalImageFileWillChangeOnDiskTo:(id)a0;
- (void)redrawTiles;
- (void)redrawVisibleRect;
- (void)reenableEDRUpdateWithAnimationDuration:(double)a0;
- (void)reloadWithHDR:(BOOL)a0 completion:(id /* block */)a1;
- (void)returnBorrowedContent;
- (void)scrollviewFrameChanged:(id)a0;
- (void)selectAllText:(id)a0;
- (void)setAllowsGestureElasticity:(BOOL)a0;
- (void)setApplicationShouldSuppressHDRContent:(BOOL)a0;
- (BOOL)setCIImage:(id)a0 imageProperties:(id)a1 displayProperties:(id)a2;
- (BOOL)setCIImage:(id)a0 imageProperties:(id)a1 displayProperties:(id)a2 colorSpace:(struct CGColorSpace { } *)a3;
- (BOOL)setImageData:(id)a0 withDisplayProperties:(id)a1;
- (BOOL)setImageURL:(id)a0 withDisplayProperties:(id)a1;
- (void)setMinNearestNeighborScale:(double)a0;
- (void)setRotationAngle:(double)a0 centeredAroundImagePoint:(struct CGPoint { double x0; double x1; })a1;
- (void)setRotationAngleWithAnimation:(double)a0 aroundImagePoint:(struct CGPoint { double x0; double x1; })a1 duration:(double)a2;
- (void)setSoftProofFilter:(id)a0;
- (void)setUsesTiles:(BOOL)a0;
- (void)setupForRotationAnimationCenteredAroundImagePoint:(struct CGPoint { double x0; double x1; })a0;
- (void)setupForZoomAnimationCenteredAroundImagePoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)shouldUseTiles;
- (BOOL)showsCheckerboardBackground;
- (void)subjectAnalysisAvailabilityDidUpdateForContentView:(id)a0;
- (void)unfreezeMoveToWindowUpdates;
- (void)updateHDRFocusWithAnimation:(BOOL)a0;
- (void)updateUnderlyingCIImage:(id)a0 imageProperties:(id)a1 displayProperties:(id)a2 usingFlattenedImage:(BOOL)a3 colorSpace:(struct CGColorSpace { } *)a4;
- (id)updatedDisplayPropertiesFromScreen:(id)a0;
- (BOOL)usesTiles;
- (void)willCompleteFlipAnimation;
- (void)willCompleteRotationAnimation;
- (void)willCompleteZoomAnimation;
- (void)zoomImageToScale:(double)a0 aroundImagePoint:(struct CGPoint { double x0; double x1; })a1;
- (void)zoomToFitSticky:(BOOL)a0;
- (void)zoomToFullSize;

@end

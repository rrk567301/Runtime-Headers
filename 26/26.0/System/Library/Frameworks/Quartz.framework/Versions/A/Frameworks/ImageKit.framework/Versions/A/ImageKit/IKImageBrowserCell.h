@interface IKImageBrowserCell : NSObject {
    id _parent;
    void *_ibCellReserved;
}

+ (struct CGPoint { double x0; double x1; })anchorPointTranslationWithView:(id)a0;
+ (BOOL)aCellIsPlayingInView:(id)a0;
+ (struct CGPoint { double x0; double x1; })anchorPointForCellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withView:(id)a1;
+ (BOOL)shouldWrapLabelsForIconSize:(double)a0 gridSpacing:(double)a1 titlesOnRight:(BOOL)a2;
+ (void)stopCurrentPlayerIfAny;
+ (BOOL)supportsHeightOfInfoSpaceFactorization;
+ (void)temporaryPauseCurrentPlayingMovieIfAny:(id)a0;

- (void)finalize;
- (void)setSize:(struct CGSize { double x0; double x1; })a0;
- (void)setAspectRatio:(float)a0;
- (BOOL)isPlaying;
- (void)setParent:(id)a0;
- (int)contentMode;
- (double)opacity;
- (void)draw;
- (BOOL)isSelected;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (unsigned long long)fileSize;
- (void)invalidateLayout;
- (void)setSelected:(BOOL)a0;
- (void)sizeDidChange;
- (void)setBrowser:(id)a0;
- (void)dealloc;
- (id)browser;
- (void)invalidate;
- (double)baseline;
- (id)forwardingTargetForSelector:(SEL)a0;
- (float)rotation;
- (float)aspectRatio;
- (void)setGroup:(id)a0;
- (id)init;
- (BOOL)hidden;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setPosition:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })position;
- (void)setRotation:(float)a0;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void)setReordering:(BOOL)a0;
- (struct CGSize { double x0; double x1; })size;
- (void).cxx_destruct;
- (void)setHidden:(BOOL)a0;
- (id)representedItem;
- (void)drawImage:(id)a0;
- (unsigned long long)imageAlignment;
- (BOOL)isSelectable;
- (int)cellState;
- (void)drawBackground;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titleFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageFrame;
- (BOOL)isBlinking;
- (id)playerView;
- (id)layerForType:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionFrame;
- (void)installToolTips;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })playButtonFrame;
- (double)roundedWidthForCenterAlignment:(double)a0;
- (void)setLayoutValid:(BOOL)a0;
- (void)drawPlaceHolder;
- (void)invalidateTitle;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reflectionFrame;
- (id)__caRenderer;
- (float)_computeAspectRatio;
- (void)_computeImageFrame;
- (struct CGSize { double x0; double x1; })_getTitleSize;
- (int)_heightOfFixedSizeSpace;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_iconFrameForCellFrameSize:(struct CGSize { double x0; double x1; })a0;
- (BOOL)_isFirstPageOfBookletStyle;
- (BOOL)_playerViewHasPlayControls;
- (BOOL)_redisplayOnRollover;
- (int)_sizeToDraw;
- (BOOL)_transform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } *)a0 forLayer:(id)a1 inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (struct CGSize { double x0; double x1; })_virtualImageFrameSizeForSizeToFill:(struct CGSize { double x0; double x1; })a0;
- (BOOL)acceptsDrop;
- (BOOL)cachedTitleSizeIsValid;
- (BOOL)canBeDoubleClicked;
- (void)centerToPosition:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)contentCanBePlayed;
- (id)currentTitleAttributes;
- (void)datasourceItemDidChange;
- (void)didImport;
- (void)didRecoverImageFromCache;
- (void)drawDragHighlight;
- (void)drawImageOutline;
- (void)drawOverlays;
- (void)drawPlayerControl;
- (void)drawSelection;
- (void)drawSelectionOnTitle;
- (void)drawShadow;
- (void)drawSubtitle;
- (void)drawTitle;
- (void)drawTitleBackground;
- (void)drawWithComponentMask:(int)a0;
- (int)heightOfInfoSpace;
- (BOOL)hitTestWithPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)hitTestWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageBorderFrame;
- (id)imageBrowserView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageContainerFrame;
- (void)imageDidChange;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageFrameForCellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageFrameForImageContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageFrameForImageContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 useAspectRatio:(BOOL)a1;
- (struct CGSize { double x0; double x1; })imageSizeForCellSize:(struct CGSize { double x0; double x1; })a0 withAspectRatio:(float)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageSourceRectForImage:(id)a0;
- (unsigned long long)indexOfRepresentedItem;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })inlinePreviewFrame;
- (void)invalidateTitleSize;
- (BOOL)isLayoutValid;
- (BOOL)isMouseOver;
- (BOOL)mouseDown:(struct CGPoint { double x0; double x1; })a0 inView:(id)a1;
- (void)parentWillDie:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })playerFrame;
- (void)positionDidChange;
- (unsigned int)privateAnimationMask;
- (void)renderLayer:(id)a0 inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (BOOL)reordering;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })roundedFrame;
- (void)setBlinking:(BOOL)a0;
- (void)setImageBrowserView:(id)a0;
- (void)setPrivateAnimationMask:(unsigned int)a0;
- (BOOL)showPlayerControls;
- (void)startPlay;
- (void)stopPlay;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })subtitleFrame;
- (void)temporaryPauseMovie;
- (BOOL)titleIsTruncated;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titleStringFrame;
- (id)typeSelectString;
- (void)unpauseMovie;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })usedRectInCellFrame:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })a0;
- (BOOL)wantsRollover;
- (void)willBeRemovedFromView;

@end

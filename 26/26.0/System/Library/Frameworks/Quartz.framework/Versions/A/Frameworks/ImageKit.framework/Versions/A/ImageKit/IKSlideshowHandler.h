@class NSScreen, NSString, IKSlideshowAudioPlayer, IKSlideshowDataSourceHandler, IKSSPanel, NSOperationQueue, IKSSIndexHandler, IKSSBackgroundWindow, IKSlideshow, NSMutableArray, IKSlideshowElement;

@interface IKSlideshowHandler : NSObject <NSWindowDelegate> {
    IKSlideshowDataSourceHandler *_dataSourceHandler;
    IKSSBackgroundWindow *_backgroundWindow;
    double _autoPlayTransitionTime;
    IKSlideshow *_slideshow;
    IKSlideshowElement *_itemList;
    IKSSPanel *_panel;
    IKSSIndexHandler *_indexHandler;
    IKSlideshowAudioPlayer *_audioPlayer;
    NSOperationQueue *_operationQueue;
    unsigned int _sToken;
    NSString *_mode;
    NSScreen *_slideshowScreen;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _slideshowScreenRectWhenLaunched;
    NSMutableArray *_otherScreens;
    long long _pageIncrement;
}

@property double autoPlayDelay;
@property long long itemArraySize;
@property long long currentIndex;
@property unsigned long long itemCount;
@property (readonly) BOOL slideshowIsRunning;
@property BOOL autoPlaying;
@property BOOL autoPlayWrapAround;
@property (readonly) IKSlideshowElement *currentItem;
@property (copy) NSString *audioFile;
@property long long pdfDisplayBox;
@property long long pdfDisplayMode;
@property BOOL pdfDisplayAsBook;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedSlideshowHandler;

- (void)play:(id)a0;
- (void)reloadData;
- (void)finalize;
- (void)swipeWithEvent:(id)a0;
- (id)itemAtIndex:(unsigned long long)a0;
- (void)cleanup;
- (void)dealloc;
- (id)init;
- (void)appWillResignActive:(id)a0;
- (void)debugState;
- (unsigned long long)indexForItem:(id)a0;
- (void)applicationDidChangeScreenParameters:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (id)panel;
- (double)userSpaceScaleFactor;
- (void)itemWasRotated:(id)a0;
- (id)pdfView;
- (id)slideshowScreen;
- (void)toggleAutoPlay:(id)a0;
- (void)updateItemCount;
- (void)addSibling:(id)a0 forItem:(id)a1;
- (void)appWillBecomeActive:(id)a0;
- (void)appWillHide:(id)a0;
- (void)appWillUnhide:(id)a0;
- (void)closeDown;
- (void)createPanel:(id)a0;
- (void)doStopSlideshow:(id)a0;
- (void)exportMarkedItems;
- (void)fadeFromBlackToNormal:(float)a0 wait:(BOOL)a1;
- (void)fadeFromNormalToBlack:(float)a0 wait:(BOOL)a1;
- (void)freeItems;
- (void)goFullScreen:(id)a0;
- (void)gotoFirst;
- (void)gotoIndex:(unsigned long long)a0 transitionTime:(double)a1 direction:(int)a2;
- (void)gotoLast;
- (void)gotoNext;
- (void)gotoPrevious;
- (BOOL)handleKeyCode:(unsigned short)a0;
- (void)imageDidLoad:(id)a0;
- (void)installOtherScreensBackground;
- (void)itemCountChanged;
- (void)leaveFullScreen:(id)a0;
- (void)loadItem:(id)a0;
- (void)loadNeighborsOfItem:(id)a0 direction:(int)a1;
- (void)loadThumbnailForElement:(id)a0 currentCount:(unsigned long long)a1;
- (void)makeCurrentItem:(id)a0;
- (void)makePanelFadeOut;
- (void)pdfDidLoad:(id)a0;
- (void)releaseFadeReservation;
- (void)reloadSlideshowItemAtIndex:(unsigned long long)a0;
- (void)removeOtherScreensBackground;
- (void)rotateLeft;
- (void)rotateRight;
- (void)runWithSlideshow:(id)a0 dataSource:(id)a1 inMode:(id)a2 options:(id)a3;
- (BOOL)shouldLoad:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })slideshowScreenRect;
- (void)slideshowToggleExportToiPhoto;
- (void)startAutoPlay;
- (void)startPlayAudio;
- (void)stopAutoPlay;
- (void)stopPlayAudio;
- (void)stopSlideshow:(id)a0;
- (void)switchToActualSize;
- (void)switchToFullScreen;
- (void)switchToIndexMode;
- (void)switchToSingleMode:(unsigned long long)a0;
- (void)thumbnailDidLoad:(id)a0;
- (void)thumbnailDidLoad:(id)a0 currentCount:(unsigned long long)a1;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transformFromRect:(const struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 windowWidth:(float)a1 windowHeight:(float)a2;
- (void)unloadFarNeighborsOfItem:(id)a0;

@end

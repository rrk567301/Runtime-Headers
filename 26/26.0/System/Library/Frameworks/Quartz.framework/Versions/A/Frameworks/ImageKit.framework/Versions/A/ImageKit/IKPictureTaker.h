@class NSTimer, NSView, NSMutableDictionary, NSImage, IKPictureTakerRecentPicture, NSButton, IKPTContentViewController, NSPopover;

@interface IKPictureTaker : NSPanel {
    void *_ikReserved;
    NSImage *_originalImage;
    NSImage *_ouputImageCache;
    float _zoomMinValue;
    float _zoomMaxValue;
    IKPictureTakerRecentPicture *_recentPicture;
    BOOL _imageHasChanged;
    BOOL _recentIsModified;
    BOOL _changesAccepted;
    NSTimer *_pictureDelayTimer;
    id _pictureTakerDelegate;
    SEL _didEndSelector;
    void *_clientContextInfo;
    NSMutableDictionary *_pictureTakerConfiguration;
    BOOL _modalMode;
    BOOL _sheetMode;
    BOOL _popoverMode;
    BOOL _animates;
    BOOL _mirroring;
    BOOL _showRecents;
    IKPTContentViewController *_ikpt_contentViewController;
    NSButton *_closeButton;
    NSView *_panelHostView;
    NSPopover *_popover;
    struct CGSize { double width; double height; } _cropAreaSize;
}

+ (id)bundle;
+ (unsigned long long)defaultStyleMask;
+ (id)pictureTaker;

- (void)finalize;
- (BOOL)validateMenuItem:(id)a0;
- (void)windowDidBecomeKey:(id)a0;
- (BOOL)windowShouldClose:(id)a0;
- (void)windowWillClose:(id)a0;
- (void)dealloc;
- (void)setDelegate:(id)a0;
- (id)outputImage;
- (void)paste:(id)a0;
- (id)inputImage;
- (void)copy:(id)a0;
- (id)init;
- (id)valueForUndefinedKey:(id)a0;
- (BOOL)canBecomeKeyWindow;
- (void)setValue:(id)a0 forUndefinedKey:(id)a1;
- (void)setInputImage:(id)a0;
- (BOOL)mirroring;
- (id)delegate;
- (void)close;
- (void).cxx_destruct;
- (long long)runModal;
- (BOOL)animates;
- (id)initWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1 backing:(unsigned long long)a2 defer:(BOOL)a3;
- (BOOL)isResizable;
- (void)removeAllEffects;
- (void)setAnimates:(BOOL)a0;
- (void)sheetDidEnd:(id)a0 returnCode:(long long)a1 contextInfo:(void *)a2;
- (id)initWithTexture:(BOOL)a0;
- (void)cancelButton:(id)a0;
- (void)performCancel;
- (BOOL)imageHasChanged;
- (BOOL)isTakingPicture;
- (id)recentPictureID;
- (void)setImageAtPath:(id)a0;
- (void)handlePictureTakenNotification:(id)a0;
- (void)setAcceptsDrop:(BOOL)a0;
- (void)stopLiveCapture;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_defaultContentRect;
- (void)_dismissPopoverIfVisible;
- (id)_getOriginalNSImageWithOriginalData;
- (void)_saveRecents;
- (void)_setInputIKImage:(id)a0;
- (void)_setupPanelContents;
- (void)_setupPanelForDelegate:(id)a0 didEndSelector:(SEL)a1 contextInfo:(void *)a2;
- (void)_updateCameraButton;
- (BOOL)acceptsDrop;
- (void)adjustZoomSliderValue;
- (void)beginPictureTakerPopoverForView:(id)a0 withDelegate:(id)a1 relativeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 source:(long long)a3 didEndSelector:(SEL)a4 contextInfo:(void *)a5;
- (void)beginPictureTakerSheetForWindow:(id)a0 withDelegate:(id)a1 didEndSelector:(SEL)a2 contextInfo:(void *)a3;
- (void)beginPictureTakerWithDelegate:(id)a0 didEndSelector:(SEL)a1 contextInfo:(void *)a2;
- (void)cameraButton:(id)a0;
- (void)cameraStatusDidChange:(id)a0;
- (void)cancelDelayedPicture;
- (void)chooseButton:(id)a0;
- (BOOL)contentIsInPanel;
- (struct CGSize { double x0; double x1; })cropAreaSize;
- (id)cropInfo;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropRectFromView:(id)a0;
- (void)delayedPictureTaking:(id)a0;
- (void)didEndShouldCloseSheet:(id)a0 returnCode:(long long)a1 contextInfo:(void *)a2;
- (void)doneButton:(id)a0;
- (void)fxButtonClicked:(id)a0;
- (void)handleTakePictureAbortedNotification:(id)a0;
- (id)ikpt_contentViewController;
- (void)imageChosenFromPanel:(id)a0 returnCode:(long long)a1 contextInfo:(void *)a2;
- (void)imageCropView:(id)a0 didReceiveDraggedImage:(id)a1;
- (void)imageCropView:(id)a0 updateComponentStateWithZoomValue:(float)a1 withZoomControlsEnabled:(BOOL)a2;
- (void)imageCropViewEditedImageDidChange:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageCroppedRect;
- (void)importer:(id)a0 willPopupRecentItems:(id)a1;
- (id)initWithTexture:(BOOL)a0 atPoint:(struct CGPoint { double x0; double x1; })a1;
- (id)inputImageData;
- (id)inputImageWrapper;
- (void)invalidateOutputCache;
- (void)maximizeSize:(id)a0;
- (void)minimizeSize:(id)a0;
- (BOOL)modalMode;
- (void)moveSliderWithIncrement:(BOOL)a0;
- (void)notifyDelegateWithResultCode:(long long)a0;
- (id)outputImageWithSize:(struct CGSize { double x0; double x1; })a0;
- (id)panelHostView;
- (void)pictureTakerCommonInit:(BOOL)a0;
- (void)pictureTakerSessionDidEndWithCode:(long long)a0;
- (void)popUpRecentsMenuForView:(id)a0 withDelegate:(id)a1 didEndSelector:(SEL)a2 contextInfo:(void *)a3;
- (void)qcPickerDidValidate:(id)a0;
- (void)releasePopover;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })screenCropRect;
- (id)selectedRecentPicture;
- (void)sendCancelToOwner;
- (void)setCropAreaSize:(struct CGSize { double x0; double x1; })a0;
- (void)setCropInfo:(id)a0;
- (void)setDefaultCropIsZoomToFit:(BOOL)a0;
- (void)setDefaultParameters;
- (void)setFirstRecentPictureAsImageInput;
- (void)setImageCroppedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setImageHasChanged:(BOOL)a0;
- (void)setImageWithPickedImage:(id)a0;
- (void)setMirroring:(BOOL)a0;
- (void)setRecentPictureAsImageInput:(id)a0;
- (void)setupContentControllerWithInitialSource:(long long)a0;
- (void)setupPanelDecoration;
- (BOOL)shouldShowEffects;
- (BOOL)showSourceSelector;
- (double)sidebarTopMarginForCloseButton;
- (BOOL)takeAPicture;
- (void)updateButtonState;
- (void)updateButtonVisibility;
- (void)zoomSliderAction:(id)a0;

@end

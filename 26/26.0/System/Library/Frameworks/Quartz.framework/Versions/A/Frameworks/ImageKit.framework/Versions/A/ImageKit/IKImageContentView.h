@class NSURL, CIImage, IKImageAnalysisManager, CIContext, NSDictionary, NSMutableArray, CALayer, NSClipView, IKImageViewLayerQueue, NSString, NSTimer, IKImageRenderInfo, NSView, NSData, IKImageView2, CIFilter;

@interface IKImageContentView : NSView {
    BOOL _initialized;
    CIImage *_ciImage;
    CIImage *_scaledCIImage;
    CIImage *_flattenedCIImage;
    CIImage *_thumbnailCIImage;
    CIImage *_drawingCIImage;
    CIContext *_flatteningContext;
    BOOL _thumbnailNeedsToUpdateFilters;
    BOOL _drawingCIImageNeedsToUpdate;
    struct CGImage { } *_originalCGImage;
    struct CGImage { } *_cachedHigherResThumbnailImage;
    struct CGImage { } *_thumbnailCGImage;
    NSDictionary *_displayProperties;
    BOOL _needToReloadThumbnailForHigherResolution;
    BOOL _finishedFirstLowResThumbnail;
    double _imageWidth;
    double _imageHeight;
    double _zoomedWidth;
    double _zoomedHeight;
    double _startingScreenScaleFactor;
    BOOL _stickyZoomToFit;
    BOOL _isAnimatingZoom;
    BOOL _isAnimating;
    double _minNearestNeighborScale;
    double _edrAnimationTarget;
    BOOL _isAnimatingEDR;
    struct CGPoint { double x; double y; } _startingViewCenter;
    NSMutableArray *_blockCollection;
    NSMutableArray *_lastEnqueuedBlockCollection;
    IKImageViewLayerQueue *_layerRenderingQueue;
    NSTimer *_blockCleanupTimer;
    BOOL _canInvalidateBlockCleanupTimer;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastUpdatedBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _loadedRect;
    CALayer *_backgroundThumbnailMask;
    NSView *_contentView;
    CALayer *_oldbgThumbnailLayer;
    CALayer *_contentViewContainerLayer;
    CALayer *_incomingContentViewContainerLayer;
    CALayer *_combinedCurrentTilesAndBGLayer;
    CALayer *_animationLayer;
    CALayer *_flipLayer;
    NSView *_annotationsView;
    CALayer *_annotationsLayer;
    BOOL _inMagnifyGesture;
    NSTimer *_zoomTimer;
    BOOL _completedInitialImageLoading;
    long long _exifOrientation;
    double _rotationAngle;
    BOOL _canAnimateImage;
    NSURL *_imgURL;
    NSData *_imgData;
    NSClipView *_clipView;
    CIFilter *_softProofFilter;
    BOOL _shouldUseTiles;
}

@property BOOL documentViewLayerSetupComplete;
@property BOOL backgroundThumbnailLoadingComplete;
@property BOOL scrollingLoadsTiles;
@property unsigned long long imageIndex;
@property struct CGImage { } *cachedHigherResThumbnailImage;
@property struct CGImage { } *originalCGImage;
@property struct CGImage { } *thumbnailCGImage;
@property (retain) IKImageRenderInfo *renderInfo;
@property (retain) NSURL *webImageURL;
@property (retain) NSURL *webPageURL;
@property BOOL ignoreWindowUpdates;
@property BOOL isReloading;
@property (getter=isAnimatingImageContent) BOOL animatingImageContent;
@property (retain) IKImageAnalysisManager *imageAnalysisManager;
@property (nonatomic) BOOL inhibitAutomaticReanalysis;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } analysisContentsRect;
@property (copy, nonatomic) NSString *highlightedString;
@property (retain) CALayer *backgroundThumbnailLayer;
@property (readonly) IKImageView2 *imageView;
@property (nonatomic) double zoomFactor;
@property BOOL stickyZoomToFit;
@property double rotationAngle;
@property (nonatomic) BOOL alwaysHidesScrollers;
@property BOOL loadsSynchronously;
@property BOOL shouldUseTiles;
@property (readonly) double contentsMaximumDesiredEDR;
@property (readonly) double contentsEDRStrength;
@property (readonly) BOOL imageHasHDR;
@property (nonatomic) unsigned long long visionKitInteractionTypes;
@property (nonatomic) BOOL quickActionsEnabled;
@property (readonly) NSView *annotationsView;
@property (readonly) CALayer *annotationsLayer;

+ (void)initialize;
+ (BOOL)isCompatibleWithResponsiveScrolling;
+ (id)_clampImageAlphaTo01:(id)a0 colorSpace:(struct CGColorSpace { } *)a1;
+ (BOOL)_colorSpaceNeedsExtendedRangeSupport:(struct CGColorSpace { } *)a0;
+ (BOOL)_dropsToSDRWhenBackgrounded;
+ (id)keyPathsForValuesAffectingContentsEDRStrength;
+ (id)keyPathsForValuesAffectingHasActiveTextSelection;

- (void)windowDidChangeScreen:(id)a0;
- (BOOL)hasActiveTextSelection;
- (void)removeFromSuperview;
- (void)analysisDidUpdate:(id)a0;
- (void)viewWillMoveToWindow:(id)a0;
- (void)commonInit;
- (BOOL)isSubjectHighlightAvailable;
- (void)dealloc;
- (BOOL)dataDetectorExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)teardown;
- (BOOL)automaticallyShowVisualSearchResults;
- (struct CGSize { double x0; double x1; })imageSize;
- (BOOL)textExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)visualSearchExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)viewDidMoveToWindow;
- (BOOL)subjectHighlightActive;
- (void)viewDidMoveToSuperview;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)setSubjectHighlightActive:(BOOL)a0;
- (void)beginImageSubjectAnalysisIfNecessary;
- (void)setAutomaticallyShowVisualSearchResults:(BOOL)a0;
- (void)setAnimates:(BOOL)a0;
- (void)viewDidEndLiveResize;
- (void)windowDidChangeBackingProperties:(id)a0;
- (id)visualSearchInfoButtonGlyphName;
- (struct CGPoint { double x0; double x1; })convertPointFromImage:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointToImage:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectFromImage:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToImage:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)copyText:(id)a0;
- (void)forceReanalysisWithFlattenedImageData:(id)a0;
- (BOOL)hasResultsForAnalysisTypes:(unsigned long long)a0;
- (void)removeCurrentAnalysis;
- (void)resetTextSelection;
- (BOOL)setImage:(struct CGImage { } *)a0 imageProperties:(id)a1 displayProperties:(id)a2;
- (BOOL)setImageData:(id)a0 imageAtIndex:(long long)a1 withDisplayProperties:(id)a2;
- (BOOL)setImageURL:(id)a0 imageAtIndex:(long long)a1 withDisplayProperties:(id)a2;
- (id)visionKitDelegate;
- (id)visualSearchFilledInfoButtonGlyphName;
- (void)setZoomFactor:(double)a0 centeredAtImagePoint:(struct CGPoint { double x0; double x1; })a1 animate:(BOOL)a2 stickyFit:(BOOL)a3;
- (int)_flipTypeAppliedToOriginalImage;
- (id)softProofFilter;
- (void)_setZoomFactor:(double)a0;
- (void)loadVisibleRect;
- (id)originalCIImage;
- (void)_backgroundDidFinishLoading;
- (void)_beginOperation:(id)a0;
- (id)_cachedCIContext;
- (void)_cancelLoadBlocks;
- (void)_cleanUpZoomTimer;
- (void)_clearBackgroundLayerDelayed:(BOOL)a0;
- (void)_clearImageBlocks:(id)a0 fromCollection:(id)a1;
- (void)_clearOldBackgroundLayer;
- (void)_clearUnseenImageBlocksTimerFired:(id)a0;
- (void)_doFastPathUpdate;
- (void)_endOperation:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_extendRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 byRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_flipImageDirection:(int)a0;
- (void)_flipImageDirectionWithAnimation:(int)a0;
- (BOOL)_flipShouldHappenOnOppositeOfRequestedAxis;
- (BOOL)_hasBeenTornDown;
- (BOOL)_hasLoadedRepresentation;
- (double)_imageScaleWithImageProperties:(id)a0 andDisplayProperties:(id)a1 usingLowResScaleFactorIfAvailable:(BOOL)a2;
- (struct CGSize { double x0; double x1; })_imageSizeWithExif:(unsigned long long)a0;
- (id)_imageToDrawForLayer:(id)a0;
- (void)_installAnimationLayer;
- (BOOL)_isUsingTiles;
- (void)_loadBackgroundThumbnail;
- (double)_maximumDesiredEDR;
- (struct CGImage { } *)_newScaledCGImageFromCGImage:(struct CGImage { } *)a0 atScale:(double)a1 rotation:(double)a2 flipped:(int)a3;
- (id)_newThumbnailMaskWithBlockWidth:(double)a0 blockHeight:(double)a1;
- (struct CGPoint { double x0; double x1; })_positionAfterZoomAnimationWithScale:(double)a0 andCenter:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)_readyForVisionKit;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectToLoadForZoomFactor:(double)a0 withViewCenterPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_redrawExistingBlocks;
- (BOOL)_replacingOldThumbnail;
- (void)_resetLayersAndReloadLayersWithImageProperties:(id)a0 preserveAnnotations:(BOOL)a1 displayProperties:(id)a2;
- (void)_resetScaledCIImage;
- (void)_rotateContent:(double)a0 aroundPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_rotateContent:(double)a0 aroundPoint:(struct CGPoint { double x0; double x1; })a1 contentDoesFill:(BOOL)a2;
- (struct CGPoint { double x0; double x1; })_rotatedPoint:(struct CGPoint { double x0; double x1; })a0 byDegrees:(double)a1;
- (double)_scaleFactorForResettingScaledCIImage;
- (void)_scheduleDeferredCleanupOfUnseenBlocks;
- (struct CGPoint { double x0; double x1; })_scrollPointAfterChangingSizeTo:(struct CGSize { double x0; double x1; })a0 offset:(struct CGPoint { double x0; double x1; } *)a1;
- (BOOL)_setCIImage:(id)a0 imageProperties:(id)a1 displayProperties:(id)a2 preserveAnnotations:(BOOL)a3;
- (void)_setEnclosingScrollViewScrollersCanShow:(BOOL)a0;
- (void)_setEnclosingScrollViewScrollersCanShowIfAllowed:(BOOL)a0;
- (BOOL)_setImage:(struct CGImage { } *)a0 imageProperties:(id)a1 displayProperties:(id)a2 preserveAnnotations:(BOOL)a3;
- (BOOL)_setImageFromImageSource:(struct CGImageSource { } *)a0 imageAtIndex:(long long)a1 preserveAnnotations:(BOOL)a2 displayProperties:(id)a3 completion:(id /* block */)a4;
- (BOOL)_setImageWithSize:(struct CGSize { double x0; double x1; })a0 imageProperties:(id)a1 preserveAnnotations:(BOOL)a2 displayProperties:(id)a3;
- (void)_setUnderlyingCIImage:(id)a0;
- (void)_setZoomFactor:(double)a0 loadInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_setupExtendedDynamicRangeForColorSpace:(struct CGColorSpace { } *)a0;
- (void)_setupForHDR:(struct CGImage { } *)a0;
- (void)_shiftContentViewToViewCenter;
- (struct CGSize { double x0; double x1; })_sizeOfRotatedRectOriginal:(struct CGSize { double x0; double x1; })a0 byDegrees:(double)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sourceRectToDrawForLayer:(id)a0 andImage:(id)a1;
- (double)_targetContentsEDRStrength;
- (double)_underlyingCIImageScale;
- (void)_uninstallAnimationLayer;
- (void)_updateAnnotationsView;
- (void)_updateBackgroundThumbnailLayerWithNoGeometryChange;
- (void)_updateEDRStrength;
- (void)_updateLoadingStatus;
- (void)_updateUnderlyingCIImageToFullSizeIfNecessaryForZoomFactor:(double)a0;
- (void)_updateUnderlyingCIImageWithScale:(double)a0;
- (void)_updateVisionKitOverlayWithReanalysis:(BOOL)a0;
- (void)_updatedHighlightedString;
- (BOOL)_viewSupportsHDR;
- (struct CGPoint { double x0; double x1; })_zoomCenter;
- (void)_zoomToFit;
- (double)_zoomToFitScaleFactorForImageWithSize:(struct CGSize { double x0; double x1; })a0;
- (double)_zoomToFitScaleFactorIgnoringWindowSizeForImageWithSize:(struct CGSize { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_zoomedImageRectForViewRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)animateEDRStrengthTo:(double)a0 duration:(double)a1;
- (void)animateUpdateEDRStrengthWithDuration:(double)a0;
- (void)applyExif:(id)a0;
- (id)borrowContent;
- (void)centerDocument;
- (void)clearBlocksFromBlockCollection:(id)a0 didCancelDisplay:(BOOL *)a1;
- (void)clearFlattenedCIImage;
- (void)clearUnseenImageBlocks;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToUpperLeftOrigin:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inBoundingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)copyImage;
- (void)copySubject;
- (struct CGImage { } *)createFullscaleCGImage;
- (struct CGImageSource { } *)createImageSourceFromLoadedRepresentation;
- (double)defaultTransformAnimationDuration;
- (long long)effectiveExifOrientation;
- (void)finishMovingViewToScrollView;
- (void)finishedDrawingLayer:(id)a0;
- (id)flattenedUnfilteredCIImage;
- (void)flipImageHorizontal;
- (void)flipImageVertical;
- (void)forceReanalysisWithFlattenedImageAtURL:(id)a0;
- (void)freezeMoveToWindowUpdates;
- (void)ik_reflectScrolledClipView;
- (struct CGSize { double x0; double x1; })imageSizeWithoutRotations;
- (void)imageViewResized:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 andImageView:(id)a1;
- (void)insertOverlayView:(id)a0;
- (BOOL)isAnimatingTransform;
- (void)loadBlocksInScaledSourceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)loadBlocksInScaledSourceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 usingBlockCollection:(id)a1;
- (void)loadingCompleteForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withBlockCollection:(id)a1 andThumbnailMask:(id)a2;
- (id)newFlattenedImageForImage:(id)a0;
- (struct CGImage { } *)newVisibleImageSnapshot;
- (void)originalImageFileWillChangeOnDiskTo:(id)a0;
- (void)pausedInZoomGesture:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectInThisViewForBlock:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectVisibleInClipView;
- (void)reloadWithHDR:(BOOL)a0 completion:(id /* block */)a1;
- (void)returnBorrowedContent;
- (void)scrollDidEndMagnify:(id)a0;
- (void)scrollWillStartMagnify:(id)a0;
- (void)selectAllText:(id)a0;
- (BOOL)setCIImage:(id)a0 imageProperties:(id)a1 displayProperties:(id)a2 colorSpace:(struct CGColorSpace { } *)a3;
- (void)setFlattenedDrawingCIImage:(id)a0 colorSpace:(struct CGColorSpace { } *)a1;
- (void)setImgData:(id)a0;
- (void)setImgURL:(id)a0;
- (void)setMinNearestNeighborScale:(double)a0;
- (void)setRotationAngle:(double)a0 centeredAroundImagePoint:(struct CGPoint { double x0; double x1; })a1;
- (void)setRotationAngleWithAnimation:(double)a0 aroundImagePoint:(struct CGPoint { double x0; double x1; })a1 duration:(double)a2;
- (void)setSoftProofFilter:(id)a0;
- (void)setupFlattenedCIImage;
- (void)subjectAnalysisAvailabilityDidUpdate:(id)a0;
- (void)unfreezeMoveToWindowUpdates;
- (void)updateContentForLayer:(id)a0;
- (void)updateCornerRadius;
- (void)viewDidScroll:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })viewRectToScaledImageRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withZoomFactor:(double)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleScaledImageRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleScaledImageRectForZoomFactor:(double)a0;
- (double)zoomFactorWithScreenScale;
- (void)zoomImageToScale:(double)a0 aroundImagePoint:(struct CGPoint { double x0; double x1; })a1;
- (double)zoomToFitScaleFactor;
- (void)zoomToFullSize;

@end

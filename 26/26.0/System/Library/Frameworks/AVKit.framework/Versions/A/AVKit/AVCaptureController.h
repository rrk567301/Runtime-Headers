@class AVCaptureQualityItem, NSString, NSArray, AVCaptureDeviceInputSourceItem, NSObject, AVCaptureAudioPreviewOutput, AVCaptureSession, AVTouchBarCaptureInputSourceItem, AVCaptureFileOutput, AVCaptureDeviceInput, NSNumber, AVCaptureDeviceSelectionController;
@protocol AVCaptureControllerDelegate, OS_dispatch_source;

@interface AVCaptureController : NSResponder <AVTouchBarRecordingControlsControllingInternal> {
    AVCaptureSession *_session;
    BOOL _sessionHasBeenSet;
    AVCaptureFileOutput *_fileOutput;
    id _didStartRunningObserver;
    id _didStopRunningObserver;
    NSObject<OS_dispatch_source> *_recordingTimeAndSizeTimer;
    NSNumber *_previouslyRecordedFileSize;
    double _previouslyRecordedTime;
    BOOL _audioPreviewMuted;
    float _audioPreviewVolume;
    NSObject<OS_dispatch_source> *_audioLevelIndicatorTimer;
    AVCaptureAudioPreviewOutput *_captureAudioPreviewOutput;
    NSArray *_captureQualityItems;
    AVCaptureQualityItem *_selectedQualityItem;
    BOOL _shouldSelectAssociatedAudioInputSourceItems;
    long long _discoveringWirelessCaptureDevicesCount;
    long long _cameraAuthorizationStatus;
    long long _microphoneAuthorizationStatus;
}

@property (readonly) BOOL canAssociateAudioAndVideoDevices;
@property (readonly) double recordedTime;
@property (readonly) NSNumber *recordedFileSize;
@property (readonly, getter=isRecording) BOOL recording;
@property (readonly, getter=isPaused) BOOL paused;
@property (readonly) BOOL canStartRecording;
@property (readonly) BOOL canPauseRecording;
@property (readonly) BOOL canResumeRecording;
@property (readonly) BOOL canStopRecording;
@property (readonly) NSArray *videoTouchBarInputSourceItems;
@property (readonly) AVTouchBarCaptureInputSourceItem *selectedVideoTouchBarInputSourceItem;
@property (readonly) NSArray *audioTouchBarInputSourceItems;
@property (readonly) AVTouchBarCaptureInputSourceItem *selectedAudioTouchBarInputSourceItem;
@property (readonly) NSArray *screenTouchBarInputSourceItems;
@property (readonly) AVTouchBarCaptureInputSourceItem *selectedScreenTouchBarInputSourceItem;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property double audioLevel;
@property BOOL canStartRecording;
@property (getter=isCaptureSessionRunning) BOOL captureSessionRunning;
@property double recordedTime;
@property (retain) NSNumber *recordedFileSize;
@property (retain) AVCaptureDeviceSelectionController *captureDeviceSelectionController;
@property (getter=isVideoPreviewEnabled) BOOL videoPreviewEnabled;
@property (getter=isAudioPreviewEnabled) BOOL audioPreviewEnabled;
@property (readonly) AVCaptureSession *session;
@property (readonly) BOOL sessionHasBeenSet;
@property BOOL wantsDefaultConfiguration;
@property (weak, nonatomic) id<AVCaptureControllerDelegate> delegate;
@property (readonly) AVCaptureDeviceInput *videoInput;
@property (readonly) AVCaptureDeviceInput *audioInput;
@property (readonly) AVCaptureFileOutput *fileOutput;
@property (readonly) long long status;
@property (readonly, getter=isRecording) BOOL recording;
@property (readonly, getter=isPaused) BOOL paused;
@property (getter=isFinishingRecording) BOOL finishingRecording;
@property (readonly) struct CGSize { double x0; double x1; } contentDimensions;
@property (nonatomic) float audioPreviewVolume;
@property (nonatomic) BOOL audioPreviewMuted;
@property (readonly) BOOL canAssociateAudioAndVideoDevices;
@property (readonly) NSArray *cameraInputSourceItems;
@property (readonly) NSArray *screenInputSourceItems;
@property (readonly) NSArray *speakerInputSourceItems;
@property (readonly) AVCaptureDeviceInputSourceItem *selectedVideoInputSourceItem;
@property (readonly) NSArray *microphoneInputSourceItems;
@property (readonly) NSArray *audioInputSourceItems;
@property (readonly) AVCaptureDeviceInputSourceItem *selectedAudioInputSourceItem;
@property (copy) NSArray *captureQualityItems;
@property (retain) AVCaptureQualityItem *selectedQualityItem;
@property (readonly) NSString *deviceDisabledDescription;
@property (readonly) NSString *deviceErrorDescription;
@property (readonly) long long cameraAuthorizationStatus;
@property (readonly) long long microphoneAuthorizationStatus;
@property (readonly) BOOL canPauseRecording;
@property (readonly) BOOL canResumeRecording;
@property (readonly) BOOL canStopRecording;

+ (id)keyPathsForValuesAffectingContentDimensions;
+ (id)keyPathsForValuesAffectingAudioInput;
+ (id)keyPathsForValuesAffectingAudioInputSourceItems;
+ (id)keyPathsForValuesAffectingAudioTouchBarInputSourceItems;
+ (id)keyPathsForValuesAffectingCameraInputSourceItems;
+ (id)keyPathsForValuesAffectingCanAssociateAudioAndVideoDevices;
+ (id)keyPathsForValuesAffectingCanPauseRecording;
+ (id)keyPathsForValuesAffectingCanResumeRecording;
+ (id)keyPathsForValuesAffectingCanStopRecording;
+ (id)keyPathsForValuesAffectingDeviceDisabledDescription;
+ (id)keyPathsForValuesAffectingDeviceErrorDescription;
+ (id)keyPathsForValuesAffectingFinishingRecording;
+ (id)keyPathsForValuesAffectingMicrophoneInputSourceItems;
+ (id)keyPathsForValuesAffectingPaused;
+ (id)keyPathsForValuesAffectingRecording;
+ (id)keyPathsForValuesAffectingScreenInputSourceItems;
+ (id)keyPathsForValuesAffectingSelectedAudioInputSourceItem;
+ (id)keyPathsForValuesAffectingSelectedAudioTouchBarInputSourceItem;
+ (id)keyPathsForValuesAffectingSelectedVideoInputSourceItem;
+ (id)keyPathsForValuesAffectingSelectedVideoTouchBarInputSourceItem;
+ (id)keyPathsForValuesAffectingSpeakerInputSourceItems;
+ (id)keyPathsForValuesAffectingVideoInput;
+ (id)keyPathsForValuesAffectingVideoInputSourceItems;
+ (id)keyPathsForValuesAffectingVideoTouchBarInputSourceItems;

- (void)stopRecording;
- (void)dealloc;
- (void)keyDown:(id)a0;
- (void)resumeRecording;
- (id)init;
- (void)setStatus:(long long)a0;
- (void)startRecording;
- (void)pauseRecording;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void).cxx_destruct;
- (BOOL)_associateItemsWithVideoInputSourceItems:(id)a0 audioInputSourceItems:(id)a1 outIndexOfBuiltInVideoItem:(unsigned long long *)a2 outIndexOfBuiltInAudioItem:(unsigned long long *)a3 outIndexOfExternalVideoItem:(unsigned long long *)a4 outIndexOfExternalAudioItem:(unsigned long long *)a5;
- (void)_createDefaultSessionAndFileOutputAsynchronously:(BOOL)a0;
- (id)_defaultCaptureQualityItems;
- (id)_firstDeviceInputWithConnectionOfMediaType:(id)a0 fromSession:(id)a1;
- (void)_handleSpaceKeyWithEvent:(id)a0;
- (id)_inputSourceItemsForType:(unsigned long long)a0;
- (id)_inputSourceItemsWithoutAssociatedAudioItemsForCaptureDevices:(id)a0 withType:(unsigned long long)a1;
- (id)_makeTouchBarCaptureInputSourceItem:(id)a0;
- (void)_setWirelessDeviceDiscoveryEnabled:(BOOL)a0;
- (void)_updateAudioInputForSession:(id)a0;
- (void)_updateAudioPreviewVolumeIfNeeded;
- (void)_updateVideoInputForSession:(id)a0;
- (id)audioDeviceErrorDescription;
- (void)audioLevelIndicatorTimerTask;
- (BOOL)canHandleSelector:(SEL)a0 withEvent:(id)a1 shouldIgnoreSpaceKey:(BOOL)a2;
- (void)changeAudioPreviewVolumeToMaximum;
- (void)changeAudioPreviewVolumeToMinimum;
- (void)createDefaultSessionAndFileOutputAsynchronously;
- (void)decreaseAudioPreviewVolume;
- (void)increaseAudioPreviewVolume;
- (void)recordingTimeAndSizeTimerTask;
- (void)selectInputSourceItem:(id)a0;
- (void)selectTouchBarInputSourceItem:(id)a0;
- (void)setFileOutput:(id)a0;
- (void)setSession:(id)a0 videoPreviewEnabled:(BOOL)a1 audioPreviewEnabled:(BOOL)a2;
- (void)startAudioLevelIndicatorTimer;
- (void)startDiscoveringWirelessCaptureDevices;
- (void)startRecordingTimeAndSizeTimer;
- (void)stopAudioLevelIndicatorTimer;
- (void)stopDiscoveringWirelessCaptureDevices;
- (void)stopRecordingTimeAndSizeTimer;
- (void)updateCanStartRecording;
- (void)updateCaptureSessionRunning;
- (void)updateRecordingTimeAndSize;
- (id)videoDeviceErrorDescription;
- (id)videoInputSourceItems;

@end

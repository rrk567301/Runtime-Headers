@class AVCaptureVideoPreviewLayer, AVCaptureDevice, NSObject, NSTouchBar, AVControlsContainerViewController, AVCaptureController, NSString, NSTimer, AVCaptureControlsViewController, AVCaptureSession, AVLoadingIndicatorView, AVCameraDisabledView, AVCaptureFileOutput, NSTrackingArea;
@protocol AVCaptureViewDelegate, OS_dispatch_semaphore;

@interface AVCaptureView : NSView <AVCaptureControllerDelegate, NSTouchBarProvider> {
    NSObject<OS_dispatch_semaphore> *_propertySemaphore;
    id<AVCaptureViewDelegate> _delegate;
    AVCaptureVideoPreviewLayer *_videoPreviewLayer;
    NSString *_videoGravity;
    AVCameraDisabledView *_cameraDisabledView;
    AVLoadingIndicatorView *_loadingIndicatorView;
    AVControlsContainerViewController *_controlsContainerViewController;
    AVCaptureControlsViewController *_initialControlsViewController;
    AVCaptureControlsViewController *_captureControlsViewController;
    long long _showControlsCount;
    BOOL _isShowingControlsForMouseMovingInsideView;
    NSTimer *_controlsTimer;
    NSTimer *_temporaryControlsTimer;
    NSTrackingArea *_trackingArea;
    BOOL _viewHasBeenSetup;
    BOOL _showsControlsPane;
    BOOL _canHideControls;
    BOOL _hideControlsOnMouseUp;
    BOOL _doNotMakeCurrentControlsViewControllerViewFirstResponder;
    BOOL _viewNeedsResetupInViewDidMoveToWindow;
    BOOL _usesDefaultSession;
    struct { double top; double right; double bottom; double left; } _floatingCaptureControlsMargin;
}

@property (readonly) BOOL showsControlsPane;
@property BOOL canHideControls;
@property (readonly) BOOL prefersUnobscuredContent;
@property struct { double x0; double x1; double x2; double x3; } floatingCaptureControlsMargin;
@property (copy) NSString *selectedCompressionOptionsIdentifier;
@property (readonly) AVCaptureDevice *videoDevice;
@property (readonly) AVCaptureDevice *audioDevice;
@property (getter=isFinishingRecording) BOOL finishingRecording;
@property (retain) AVCaptureController *captureController;
@property (retain) AVCaptureControlsViewController *captureControlsViewController;
@property (readonly) AVCaptureSession *session;
@property (readonly) AVCaptureFileOutput *fileOutput;
@property (weak) id<AVCaptureViewDelegate> delegate;
@property long long controlsStyle;
@property (copy) NSString *videoGravity;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSTouchBar *touchBar;

+ (void)initialize;
+ (id)keyPathsForValuesAffectingTouchBar;
+ (BOOL)automaticallyNotifiesObserversOfFileOutput;
+ (BOOL)automaticallyNotifiesObserversOfSession;
+ (id)keyPathsForValuesAffectingAudioDevice;
+ (id)keyPathsForValuesAffectingFileOutput;
+ (id)keyPathsForValuesAffectingPrefersUnobscuredContent;
+ (id)keyPathsForValuesAffectingSelectedCompressionOptionsIdentifier;
+ (id)keyPathsForValuesAffectingSession;
+ (id)keyPathsForValuesAffectingVideoDevice;

- (void)swipeWithEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseUp:(id)a0;
- (void)viewWillMoveToWindow:(id)a0;
- (void)mouseDragged:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)keyDown:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (BOOL)becomeFirstResponder;
- (void)updateTrackingAreas;
- (void)viewDidMoveToWindow;
- (id)initWithCoder:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void).cxx_destruct;
- (void)rightMouseDown:(id)a0;
- (void)otherMouseDown:(id)a0;
- (BOOL)acceptsFirstResponder;
- (void)beginGestureWithEvent:(id)a0;
- (void)cursorUpdate:(id)a0;
- (void)endGestureWithEvent:(id)a0;
- (void)flagsChanged:(id)a0;
- (void)keyUp:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (void)mouseMoved:(id)a0;
- (void)otherMouseDragged:(id)a0;
- (void)otherMouseUp:(id)a0;
- (void)rightMouseDragged:(id)a0;
- (void)rightMouseUp:(id)a0;
- (void)rotateWithEvent:(id)a0;
- (void)scrollWheel:(id)a0;
- (void)setCompressionOptions:(id)a0;
- (id)supplementalTargetForAction:(SEL)a0 sender:(id)a1;
- (void)tabletPoint:(id)a0;
- (void)tabletProximity:(id)a0;
- (void)touchesBeganWithEvent:(id)a0;
- (void)touchesCancelledWithEvent:(id)a0;
- (void)touchesEndedWithEvent:(id)a0;
- (void)touchesMovedWithEvent:(id)a0;
- (id)_currentControlsViewController;
- (void)_fireControlsTimer:(id)a0;
- (void)_fireTemporaryControlsTimer:(id)a0;
- (void)_hideControlsIfPossible;
- (void)_hideControlsIfPossibleAfterDelay;
- (id)_makeSelfFirstResponderIfCurrentFirstResponderIsDescendantOfSelfAndReturnCurrentFirstResponderInThatCase;
- (void)_replaceCurrentControlsViewControllerWithViewController:(id)a0;
- (void)_restorePreviousFirstResponderOrMakeCurrentControlsViewControllersInitialFirstResponderFirstResponderIfSelfIsCurrentFirstResponder:(id)a0;
- (void)_setupCameraDisabledView;
- (void)_setupControlsContainerView;
- (void)_setupLoadingIndicatorView;
- (void)_showControlsIfNeeded;
- (void)_showControlsTemporarily;
- (void)_showOrHideControls;
- (void)_updateVideoPreviewLayerIfNeeded;
- (void)captureController:(id)a0 startRecordingToFileOutput:(id)a1;
- (void)setSession:(id)a0 showVideoPreview:(BOOL)a1 showAudioPreview:(BOOL)a2;
- (void)volumeControlButton:(id)a0 didHideVolumeSlider:(id)a1;
- (void)volumeControlButton:(id)a0 didShowVolumeSlider:(id)a1;
- (id)volumeControlButton:(id)a0 viewContainingVolumeSlider:(id)a1;
- (void)volumeControlViewDidChangeMutedState:(id)a0;
- (void)volumeControlViewDidChangeVolume:(id)a0;

@end

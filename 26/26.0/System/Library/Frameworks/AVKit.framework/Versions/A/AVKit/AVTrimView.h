@class AVTimeFormatter, AVTimeIndicatorPopover, AVTrimDimmerView, AVTrimIndicatorFocusRingView, AVTrimSelectionEndFocusRingView, AVTrimSelectionView, AVTrimClipView, CAGradientLayer, AVTrimTracksView, NSTimer, AVTrimSelectionStartFocusRingView, NSArray, NSView, AVTrimIndicatorView, NSColor;
@protocol NSCopying, NSObject, AVTrimViewDelegate;

@interface AVTrimView : NSView {
    unsigned long long _style;
    AVTrimClipView *_clipView;
    AVTrimTracksView *_tracksView;
    AVTrimDimmerView *_dimmerViews[2];
    AVTrimSelectionView *_selectionView;
    NSView *_selectionContainerView;
    AVTrimIndicatorView *_indicatorView;
    AVTrimSelectionStartFocusRingView *_selectionStartFocusRingView;
    AVTrimSelectionEndFocusRingView *_selectionEndFocusRingView;
    AVTrimIndicatorFocusRingView *_indicatorFocusRingView;
    AVTimeIndicatorPopover *_timeIndicatorPopover;
    AVTimeFormatter *_timeIndicatorTimeFormatter;
    double _minValue;
    double _maxValue;
    double _currentValue;
    double _selectionStart;
    double _selectionEnd;
    struct { double fromZoomFactor; double currentZoomFactor; double toZoomFactor; double fromOffset; double currentOffset; double toOffset; double centerTime; } _zoomInfo;
    CAGradientLayer *_clipViewMaskLayer;
    CAGradientLayer *_selectionContainerViewMaskLayer;
    NSColor *_opaqueColor;
    NSColor *_semiOpaqueColor;
    NSColor *_clearColor;
    NSArray *_trackViewControllers;
    id<AVTrimViewDelegate> _delegate;
    unsigned long long _focusedPart;
    double _offsetOnTrimHandle;
    unsigned long long _scrollDirection;
    BOOL _needsLayoutSubviews;
    BOOL _isFirstResponder;
    BOOL _isScrolling;
    BOOL _zoomOutWhenScrollFinishes;
    NSTimer *_scrollTimer;
    NSTimer *_zoomInTimer;
    id<NSObject, NSCopying> _identityOfTrackedTouch;
}

@property (nonatomic) double zoomFactor;
@property (nonatomic) double offset;
@property (nonatomic) unsigned long long trackedPart;
@property (retain, nonatomic) NSTimer *stopTrackingTimer;
@property unsigned long long style;
@property (nonatomic) double minValue;
@property (nonatomic) double maxValue;
@property (nonatomic) double currentValue;
@property (nonatomic) double selectionStart;
@property (nonatomic) double selectionEnd;
@property (nonatomic) double maximumSelectionDuration;
@property (nonatomic) double nominalFrameRate;
@property (copy, nonatomic) NSArray *trackViewControllers;
@property (weak, nonatomic) id<AVTrimViewDelegate> delegate;

+ (void)initialize;

- (void)mouseDown:(id)a0;
- (void)handleEvent:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)keyDown:(id)a0;
- (BOOL)resignFirstResponder;
- (void)encodeWithCoder:(id)a0;
- (BOOL)becomeFirstResponder;
- (BOOL)canHandleEvent:(id)a0;
- (id)initWithCoder:(id)a0;
- (void).cxx_destruct;
- (BOOL)_isScrolling;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)a0;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)accessibilityIsAttributeSettable:(id)a0;
- (BOOL)accessibilityIsIgnored;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)mouseDownCanMoveWindow;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)touchesBeganWithEvent:(id)a0;
- (void)touchesCancelledWithEvent:(id)a0;
- (void)touchesEndedWithEvent:(id)a0;
- (void)touchesMovedWithEvent:(id)a0;
- (BOOL)_isTracking;
- (BOOL)_isZooming;
- (BOOL)_canStartTracking;
- (BOOL)_canZoom;
- (void)_fireStopTrackingTimer:(id)a0;
- (BOOL)_isZoomed;
- (double)_maximumPossibleOffset;
- (unsigned long long)_partForLocation:(struct CGPoint { double x0; double x1; })a0 shouldJumpToLocation:(BOOL *)a1;
- (void)_scroll:(id)a0;
- (void)_setZoomFactor:(unsigned long long)a0 centerZoomAtTime:(double)a1;
- (void)_startScrollingPart:(unsigned long long)a0 inDirection:(unsigned long long)a1;
- (void)_startTrackingWithPart:(unsigned long long)a0;
- (void)_startTrackingWithPart:(unsigned long long)a0 location:(struct CGPoint { double x0; double x1; })a1 shouldJumpToLocation:(BOOL)a2;
- (void)_startZoomInTimerForTime:(double)a0;
- (void)_stopScrolling;
- (void)_stopTrackingImmediately;
- (void)_stopTrackingWithPart:(unsigned long long)a0;
- (void)_stopTrackingWithPart:(unsigned long long)a0 afterDelay:(double)a1;
- (void)_stopZoomInTimer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_timeIndicatorPopoverPositioningRectForValue:(double)a0;
- (void)_touchesEndedOrCancelledWithEvent:(id)a0;
- (double)_trimHandleWidth;
- (void)_updateFocusRingVisibility;
- (void)_updateValueForPart:(unsigned long long)a0 location:(struct CGPoint { double x0; double x1; })a1 event:(id)a2;
- (double)_valueForLocation:(struct CGPoint { double x0; double x1; })a0;
- (unsigned long long)_zoomFactorForZoomDepth:(unsigned long long)a0;
- (void)_zoomInTimerTask:(id)a0;
- (void)_zoomOutAndStopScrollingForLocation:(struct CGPoint { double x0; double x1; })a0;
- (double)_zoomedRange;
- (double)displayedMaxValue;
- (double)displayedMinValue;
- (void)hideTimeIndicatorPopover;
- (id)indicatorAccessibilityElementForPart:(unsigned long long)a0;
- (void)layoutSubviewsIfNeeded;
- (void)setNeedsLayoutSubviews;
- (void)showTimeIndicatorPopoverWithValue:(double)a0;
- (void)updateTimeIndicatorPopoverWithValue:(double)a0;
- (double)valueForPart:(unsigned long long)a0;

@end

@class NSTimer, NSObject;
@protocol OS_dispatch_queue;

@interface IOBluetoothHostController : NSObject {
    unsigned long long _eventCodeMask;
    unsigned int _cachedClassOfDevice;
    NSTimer *_timerClassOfDeviceSetting;
    void *_eventListener;
    id _mReserved;
    id _mUnused000;
    id _mUnused001;
    id _mUnused002;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *hostControllerQueue;
@property (weak) id delegate;
@property (readonly) int powerState;

+ (id)controllers;
+ (void)enableNotifications;
+ (id)defaultController;
+ (id)getPropertyObjectFromIOServiceNamed:(const char *)a0 forKey:(id)a1;

- (int)setPowerState:(int)a0;
- (BOOL)isReady;
- (int)setProperty:(id)a0 forKey:(id)a1;
- (id)init;
- (unsigned int)featureFlags;
- (struct BluetoothHCISupportedFeatures { unsigned char x0[8]; })supportedFeatures;
- (void).cxx_destruct;
- (id)addressAsString;
- (int)BluetoothHCIBroadcomReadLocalFirmwareInfo:(unsigned char)a0 outLocalFirmwareInfo:(struct BluetoothBroadcomLocalFirmwareInfo { unsigned char x0; unsigned char x1; unsigned long long x2; } *)a1;
- (int)BluetoothHCICommandWriteClass15PowerTable:(unsigned char)a0 radioTXPowerMode:(unsigned char)a1 powerTableLength:(unsigned char)a2 testModePowerTableLength:(unsigned char)a3 powerTable:(char *)a4 testPowerTable:(char *)a5;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionRead:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 addressType:(unsigned char)a1 outLEextOpcode:(char *)a2 outAction:(char *)a3 outFeatureSelection:(unsigned int *)a4 outLogicalType:(char *)a5;
- (int)BluetoothHCIAcceptConnectionRequest:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inRole:(unsigned char)a1 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; } *)a2;
- (int)BluetoothHCILESetRandomAddress:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIAtherosReadRawRSSI:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 outRSSI:(char *)a1;
- (int)BluetoothHCIWriteCurrentIACLAP:(const struct BluetoothHCICurrentInquiryAccessCodesForWrite { unsigned char x0; unsigned char x1[192]; } *)a0;
- (int)BluetoothHCIAuthenticationRequested:(unsigned short)a0 outAuthenticationCompleteResults:(struct BluetoothHCIEventAuthenticationCompleteResults { unsigned short x0; } *)a1;
- (int)BluetoothHCIBroadcomARMMemoryPoke:(unsigned int)a0 inValue:(unsigned int)a1 outValue:(char *)a2;
- (int)BluetoothHCIBroadcomBFCIsConnectionTBFCSuspended:(unsigned short)a0 outBFCConnectionInfo:(struct BluetoothBroadcomBFCConnectionTBFCSuspendedInfo { unsigned short x0; unsigned char x1; } *)a1;
- (int)BluetoothHCIBroadcomBFCReadRemoteBPCSFeatures:(unsigned short)a0 outBPCSFeatures:(struct BluetoothBroadcomBFCRemoteBPCSFeatures { unsigned short x0; unsigned int x1; } *)a1;
- (int)BluetoothHCIBroadcomBFCResume:(unsigned short)a0 inDeviceAddress:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1 inBFCResume:(struct BluetoothBroadcomBFCReconnectData { unsigned char x0[33]; } *)a2;
- (int)BluetoothHCIBroadcomBFCWriteScanEnable:(unsigned char)a0;
- (int)BluetoothHCIBroadcomDownloadMiniDriver;
- (int)BluetoothHCIBroadcomFactoryCalReadTable:(unsigned char)a0 outChoice:(char *)a1 outTable:(char *)a2;
- (int)BluetoothHCIBroadcomFactoryCalRxRSSITable:(char *)a0;
- (int)BluetoothHCIBroadcomFactoryCalSetTxPower:(unsigned char)a0 inChannel:(unsigned char)a1 inTransmitPower:(unsigned char)a2 inPadVal:(unsigned char)a3 outPadVal:(char *)a4;
- (int)BluetoothHCIBroadcomFactoryCalUpdateTxTable:(char *)a0;
- (int)BluetoothHCIBroadcomGetBasicRateACLConnectionStats;
- (int)BluetoothHCIBroadcomGetEDRACLConnectionStats;
- (int)BluetoothHCIBroadcomHPBTControl:(char *)a0;
- (int)BluetoothHCIBroadcomIgnoreUSBReset:(char *)a0;
- (int)BluetoothHCIBroadcomLaunchRAM:(unsigned int)a0;
- (int)BluetoothHCIBroadcomMasterSkipSniffMode:(unsigned short)a0 inEnable:(unsigned char)a1 inNumInstants:(unsigned char)a2 inInactivityTimer:(unsigned short)a3 inStopSkipTimer:(unsigned short)a4;
- (int)BluetoothHCIBroadcomRSSIMeasurements:(unsigned int)a0 inFrequency:(unsigned short)a1 inAGCGainSetting:(unsigned char)a2 outRSSIValue:(char *)a3;
- (int)BluetoothHCIBroadcomReadRawRSSI:(unsigned short)a0 outRSSI:(char *)a1;
- (int)BluetoothHCIBroadcomResetBasicRateACLConnectionStats;
- (int)BluetoothHCIBroadcomSetProximityTable:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inPowerSteps:(unsigned char)a1 inAwayTriggerValues:(struct BluetoothBroadcomRSSITriggerValue { char x0[20]; } *)a2 inPresentTriggerValues:(struct BluetoothBroadcomRSSITriggerValue { char x0[20]; } *)a3;
- (int)BluetoothHCIBroadcomSetTransmitCarrierFrequencyARM:(unsigned char)a0 inCarrierFrequencyEncoded:(unsigned char)a1 inMode:(unsigned char)a2 inModulationType:(unsigned char)a3 inTransmitPower:(unsigned char)a4 inTXPowerdBm:(unsigned char)a5 inTXPowerTableIndex:(unsigned char)a6;
- (int)BluetoothHCIBroadcomSetTransmitPowerRange:(unsigned short)a0 inMaxTxPower:(char)a1 inMinTxPower:(char)a2;
- (int)BluetoothHCIBroadcomStoreFactoryCalibrationData:(unsigned char)a0 inVersion:(unsigned char)a1 inLength:(unsigned short)a2 inCalData:(char *)a3;
- (int)BluetoothHCIBroadcomUARTSetSleepmodeParam:(unsigned char)a0 inIdleThresholdHost:(unsigned char)a1 inIdleThresholdHC:(unsigned char)a2 inBTWAKEActiveMode:(unsigned char)a3 inHOSTWAKEActiveMode:(unsigned char)a4 inAllowHostSleepDuringSCO:(unsigned char)a5 inCombineSleepModeAndLPM:(unsigned char)a6 inEnableTristateControlOfUARTTxLine:(unsigned int)a7 inPulsedHOSTWAKE:(unsigned char)a8;
- (int)BluetoothHCIChangeConnectionLinkKey:(unsigned short)a0 outChangeConnectionLinkKeyCompleteResults:(struct BluetoothHCIEventChangeConnectionLinkKeyCompleteResults { unsigned short x0; } *)a1;
- (int)BluetoothHCIChangeConnectionPriority:(unsigned short)a0 option:(unsigned char)a1;
- (int)BluetoothHCICreateConnectionCancel:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIDeleteStoredLinkKey:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inDeleteAllFlag:(unsigned char)a1 outNumKeysDeleted:(unsigned short *)a2;
- (int)BluetoothHCIEnableDeviceUnderTestMode;
- (int)BluetoothHCIEnhancedFlush:(unsigned short)a0 inPacketType:(unsigned char)a1 outConnectionHandle:(unsigned short *)a2;
- (void)BluetoothHCIEventNotification:(const struct IOBluetoothHCIEventNotificationMessage { struct BluetoothHCIUserClientNotificationDataInfo { unsigned long long x0; unsigned long long x1; struct BluetoothHCIRequestCallbackInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; } x2; unsigned int x3; unsigned int x4; unsigned short x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; } x0; void *x1; } *)a0;
- (int)BluetoothHCIExitParkState:(unsigned short)a0 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x0; unsigned char x1; unsigned short x2; } *)a1;
- (int)BluetoothHCIExitSniffMode:(unsigned short)a0 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x0; unsigned char x1; unsigned short x2; } *)a1;
- (int)BluetoothHCIFlush:(unsigned short)a0;
- (int)BluetoothHCIHostNumberOfCompletedPackets:(unsigned char)a0 inHandle:(const unsigned short *)a1 inHostNumOfCompletedPackets:(const unsigned short *)a2;
- (int)BluetoothHCIIOCapabilityRequestReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inIOCapability:(unsigned char)a1 inOOBDataPresent:(unsigned char)a2 inAuthenticationRequirements:(unsigned char)a3;
- (int)BluetoothHCIInquiryCancel;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionClear:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 addressType:(unsigned char)a1 outLEextOpcode:(char *)a2 outAction:(char *)a3;
- (int)BluetoothHCILEAdvPacketPacketFilterServiceUUIDClear:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 addressType:(unsigned char)a1 outLEextOpcode:(char *)a2 outAction:(char *)a3;
- (int)BluetoothHCILEBroadcomAddIRKToList:(char *)a0 addressType:(unsigned char)a1 address:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a2 outLEextOpcode:(char *)a3 outIRKListAvailableSpace:(char *)a4;
- (int)BluetoothHCILEBroadcomEnableCustomerSpecificFeatures:(unsigned int)a0 outLEextOpcode:(char *)a1;
- (int)BluetoothHCILEBroadcomRemoveIRKFromList:(unsigned char)a0 address:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1 outLEextOpcode:(char *)a2 outIRKListAvailableSpace:(char *)a3;
- (int)BluetoothHCILEConnectionUpdate:(unsigned short)a0 connectionIntervalMin:(unsigned short)a1 connectionIntervalMax:(unsigned short)a2 connectionLatency:(unsigned short)a3 supervisionTimeout:(unsigned short)a4 minimumCELength:(unsigned short)a5 maximumCELength:(unsigned short)a6;
- (int)BluetoothHCILECreateConnectionCancel;
- (int)BluetoothHCILEEncrypt:(char *)a0 plaintextData:(char *)a1 encryptedData:(char *)a2;
- (int)BluetoothHCILEEnhancedTransmitterTest:(unsigned char)a0 lengthOfTestData:(unsigned char)a1 packetPayload:(unsigned char)a2 phy:(unsigned char)a3;
- (int)BluetoothHCILELongTermKeyRequestNegativeReply:(unsigned short)a0;
- (int)BluetoothHCILERand:(unsigned long long *)a0;
- (int)BluetoothHCILEReadBufferSize:(unsigned short *)a0 totalNumberLEDataPackets:(char *)a1;
- (int)BluetoothHCILEReadLocalSupportedFeatures:(unsigned long long *)a0;
- (int)BluetoothHCILEReadSuggestedDefaultDataLength:(unsigned short *)a0 maxTxTime:(unsigned short *)a1;
- (int)BluetoothHCILEReadWhiteListSize:(char *)a0;
- (int)BluetoothHCILERemoveDeviceFromWhiteList:(unsigned char)a0 address:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1;
- (int)BluetoothHCILEScanRSSIThresholdRead:(char *)a0 outMode:(char *)a1 outRSSIThreshold:(char *)a2;
- (int)BluetoothHCILESetAdvertiseEnable:(unsigned char)a0;
- (int)BluetoothHCILESetAdvertisingParameters:(unsigned short)a0 advertisingIntervalMax:(unsigned short)a1 advertisingType:(unsigned char)a2 ownAddressType:(unsigned char)a3 directAddressType:(unsigned char)a4 directAddress:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a5 advertisingChannelMap:(unsigned char)a6 advertisingFilterPolicy:(unsigned char)a7;
- (int)BluetoothHCILESetEventMask:(unsigned long long)a0;
- (int)BluetoothHCILESetExtendedAdvertisingData:(unsigned char)a0 advertisingDataLength:(unsigned char)a1 advertsingData:(char *)a2;
- (int)BluetoothHCILESetExtendedScanResponseData:(unsigned char)a0 scanResponseDataLength:(unsigned char)a1 scanResponseData:(char *)a2;
- (int)BluetoothHCILESetScanEnable:(unsigned char)a0 filterDuplicates:(unsigned char)a1;
- (int)BluetoothHCILESetScanResponseData:(unsigned char)a0 scanResponseData:(char *)a1;
- (int)BluetoothHCILETestEnd:(unsigned short *)a0;
- (int)BluetoothHCILETransmitterTest:(unsigned char)a0 lengthOfTestData:(unsigned char)a1 packetPayload:(unsigned char)a2;
- (int)BluetoothHCILEWriteSuggestedDefaultDataLength:(unsigned short)a0 suggestedMaxTxTime:(unsigned short)a1;
- (int)BluetoothHCILighthouseDebugQuery:(unsigned char)a0;
- (int)BluetoothHCILinkKeyRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIMasterLinkKey:(unsigned char)a0 outMasterLinkKeyCompleteResults:(struct BluetoothHCIEventMasterLinkKeyCompleteResults { unsigned short x0; unsigned char x1; } *)a1;
- (int)BluetoothHCIPINCodeRequestReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inPINCodeLength:(unsigned long long)a1 inPINCode:(const struct BluetoothPINCode { unsigned char x0[16]; } *)a2;
- (int)BluetoothHCIPeriodicInquiryMode:(unsigned char)a0 inMinPeriodLength:(unsigned char)a1 inLAP:(unsigned int)a2 inInquiryLength:(unsigned char)a3 inNumResponses:(unsigned char)a4 outInquiryResults:(struct BluetoothHCIInquiryResults { struct BluetoothHCIInquiryResult { struct BluetoothDeviceAddress { unsigned char x0[6]; } x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned int x4; unsigned short x5; } x0[50]; unsigned int x1; } *)a5;
- (int)BluetoothHCIReadAFHChannelAssessmentMode:(char *)a0;
- (int)BluetoothHCIReadAuthenticationEnable:(char *)a0;
- (int)BluetoothHCIReadBufferSize:(unsigned short *)a0 outHCSynchronousDataPacketLength:(char *)a1 outHCTotalNumACLDataPackets:(unsigned short *)a2 outHCTotalNumSynchronousDataPackets:(unsigned short *)a3;
- (int)BluetoothHCIReadClock:(unsigned short)a0 inWhichClock:(unsigned char)a1 outReadClockInfo:(struct BluetoothReadClockInfo { unsigned short x0; unsigned int x1; unsigned short x2; } *)a2;
- (int)BluetoothHCIReadConnectionAcceptTimeout:(unsigned short *)a0;
- (int)BluetoothHCIReadDefaultErroneousDataReporting:(char *)a0;
- (int)BluetoothHCIReadDeviceAddress:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIReadFailedContactCounter:(unsigned short)a0 outFailedContactCounter:(unsigned short *)a1;
- (int)BluetoothHCIReadInquiryMode:(char *)a0;
- (int)BluetoothHCIReadInquiryScanActivity:(unsigned short *)a0 outInquiryScanWindow:(unsigned short *)a1;
- (int)BluetoothHCIReadLEHostSupported:(char *)a0 simultaneousLEHost:(char *)a1;
- (int)BluetoothHCIReadLinkPolicySettings:(unsigned short)a0 outLinkPolicySettings:(unsigned short *)a1;
- (int)BluetoothHCIReadLinkSupervisionTimeout:(unsigned short)a0 outLinkSupervisionTimeout:(unsigned short *)a1;
- (void)releaseRequest:(unsigned int)a0;
- (int)BluetoothHCIReadLocalName:(unsigned char[248])a0;
- (int)BluetoothHCIReadLocalSupportedCommands:(struct BluetoothHCISupportedCommands { unsigned char x0[64]; } *)a0;
- (int)BluetoothHCIReadLocalVersionInformation:(char *)a0 outHCIRevision:(unsigned short *)a1 outLMPVersion:(char *)a2 outManufacturerName:(unsigned short *)a3 outLMPSubversion:(unsigned short *)a4;
- (int)BluetoothHCIReadNumBroadcastRetransmissions:(char *)a0;
- (int)BluetoothHCIReadPINType:(char *)a0;
- (int)BluetoothHCIReadPageScanType:(char *)a0;
- (int)BluetoothHCIReadRSSI:(unsigned short)a0 outRSSI:(char *)a1;
- (int)BluetoothHCIReadRemoteSupportedFeatures:(unsigned short)a0 outReadRemoteSupportedFeaturesCompleteResults:(struct BluetoothHCIEventReadRemoteSupportedFeaturesResults { unsigned char x0; unsigned short x1; struct BluetoothHCISupportedFeatures { unsigned char x0[8]; } x2; } *)a1;
- (int)BluetoothHCIReadScanEnable:(char *)a0;
- (int)BluetoothHCIReadSimplePairingMode:(char *)a0;
- (int)BluetoothHCIReadSynchronousFlowControlEnable:(char *)a0;
- (int)BluetoothHCIReadVoiceSetting:(unsigned short *)a0;
- (int)BluetoothHCIRejectConnectionRequest:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inReason:(unsigned char)a1 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; } *)a2;
- (int)BluetoothHCIRemoteNameRequest:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inPageScanRepetitionMode:(unsigned char)a1 inReserved:(unsigned char)a2 inClockOffset:(unsigned short)a3 outRemoteNameRequestCompleteResults:(struct BluetoothHCIEventRemoteNameRequestResults { struct BluetoothDeviceAddress { unsigned char x0[6]; } x0; unsigned char x1[248]; } *)a4;
- (int)BluetoothHCIRemoteOOBDataRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIReset;
- (int)BluetoothHCIRoleDiscovery:(unsigned short)a0 outCurrentRole:(char *)a1;
- (int)BluetoothHCISetAFHHostChannelClassification:(const struct BluetoothAFHHostChannelClassification { unsigned char x0[10]; } *)a0;
- (int)BluetoothHCISetControllerToHostFlowControl:(unsigned char)a0;
- (int)BluetoothHCISetEventMask:(const struct BluetoothSetEventMask { unsigned char x0[8]; } *)a0;
- (int)BluetoothHCISetLighthouseDebugQuery:(unsigned char)a0;
- (int)BluetoothHCISetMinAFHChannels:(unsigned char)a0;
- (int)BluetoothHCISetupSynchronousConnection:(unsigned short)a0 inTransmitBandwidth:(unsigned int)a1 inReceiveBandwidth:(unsigned int)a2 inMaxLatency:(unsigned short)a3 inVoiceSetting:(unsigned short)a4 inRetransmissionEffort:(unsigned char)a5 inPacketType:(unsigned short)a6 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned short x5; unsigned short x6; unsigned char x7; } *)a7;
- (int)BluetoothHCISniffSubrating:(unsigned short)a0 inMaximumLatency:(unsigned short)a1 inMinimumRemoteTimeout:(unsigned short)a2 inMinimumLocalTimeout:(unsigned short)a3 outConnectionHandle:(unsigned short *)a4;
- (int)BluetoothHCIUserConfirmationRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIUserPasskeyRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIWriteAFHChannelAssessmentMode:(unsigned char)a0;
- (int)BluetoothHCIWriteAutomaticFlushTimeout:(unsigned short)a0 inFlushTimeout:(unsigned short)a1;
- (int)BluetoothHCIWriteDefaultErroneousDataReporting:(unsigned char)a0;
- (int)BluetoothHCIWriteExtendedInquiryResponse:(unsigned char)a0 inExtendedInquiryResponse:(const struct BluetoothHCIExtendedInquiryResponse { unsigned char x0[240]; } *)a1;
- (int)BluetoothHCIWriteHoldModeActivity:(unsigned char)a0;
- (int)BluetoothHCIWriteInquiryScanActivity:(unsigned short)a0 inInquiryScanWindow:(unsigned short)a1;
- (int)BluetoothHCIBroadcomBFCSuspend:(unsigned short)a0;
- (int)BluetoothHCIBroadcomTurnOFFDynamicPowerControl:(unsigned char)a0 inDeviceAddress:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1;
- (int)BluetoothHCIHostBufferSize:(unsigned short)a0 inHostSynchronousDataPacketLength:(unsigned char)a1 inHostTotalNumACLDataPackets:(unsigned short)a2 inHostTotalNumSynchronousDataPackets:(unsigned short)a3;
- (int)BluetoothHCILERemoveExtendedAdvertisingInstance:(unsigned char)a0 outLEextOpcode:(char *)a1;
- (int)BluetoothHCIAcceptSynchronousConnectionRequest:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inTransmitBandwidth:(unsigned int)a1 inReceiveBandwidth:(unsigned int)a2 inMaxLatency:(unsigned short)a3 inContentFormat:(unsigned short)a4 inRetransmissionEffort:(unsigned char)a5 inPacketType:(unsigned short)a6 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned short x5; unsigned short x6; unsigned char x7; } *)a7;
- (int)BluetoothHCIWriteClassOfDevice:(unsigned int)a0;
- (int)BluetoothHCIBroadcomARMMemoryPeek:(unsigned int)a0 outValue:(char *)a1;
- (int)BluetoothHCIBroadcomBFCCreateConnection:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inPacketType:(unsigned short)a1 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; } *)a2;
- (int)BluetoothHCIBroadcomBFCReadParams:(struct BluetoothBroadcomBFCParams { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned char x8; unsigned char x9; unsigned char x10; } *)a0;
- (int)BluetoothHCIBroadcomBFCReadScanEnable:(char *)a0;
- (int)BluetoothHCIBroadcomBFCSetParams:(struct BluetoothBroadcomBFCParams { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned char x8; unsigned char x9; unsigned char x10; } *)a0;
- (int)BluetoothHCIBroadcomChangeLNAGainCoexsECI:(unsigned char)a0;
- (int)BluetoothHCIBroadcomFactoryCalReadTemp:(char *)a0;
- (int)BluetoothHCIBroadcomFactoryCalRxRSSITest:(unsigned char)a0 inChannel:(unsigned char)a1 inPower:(unsigned char)a2 inGainRange:(unsigned char)a3 inMode:(unsigned char)a4 outCalStatus:(char *)a5 outTCARSSIIL0P1db:(char *)a6;
- (int)BluetoothHCIBroadcomFactoryCalTrimTxPower:(unsigned char)a0 outPadVal:(char *)a1;
- (int)BluetoothHCIBroadcomFactoryCommitBDADDR:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inCommitBTWSecurityKey:(unsigned char)a1 inBTWSecurityKey:(char *)a2;
- (int)BluetoothHCIBroadcomHPBTClassic:(unsigned short)a0 inEnable:(unsigned char)a1 inPowerHigh:(unsigned char)a2 inPowerLow:(unsigned char)a3 inRSSIThreshold:(char)a4;
- (int)BluetoothHCIBroadcomIncreaseDecreasePowerLevel:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 increase:(unsigned char)a1;
- (int)BluetoothHCIBroadcomLoadPwrRegulatoryFile:(char *)a0 inPtbDataLength:(unsigned char)a1;
- (int)BluetoothHCIBroadcomNumberCompletedPacketsThreshold:(unsigned long long)a0;
- (int)BluetoothHCIBroadcomReadRAM:(unsigned int)a0 inLength:(unsigned char)a1 outData:(char *)a2;
- (int)BluetoothHCIBroadcomReadRetransmissionStatus:(unsigned char)a0 inConnectionHandle:(unsigned short)a1 inNotificationEnable:(unsigned char)a2 inNotificationThreshold:(unsigned char)a3 outConnectionHandle:(unsigned short *)a4 outRetransmissionCounter:(unsigned int *)a5 outRetransmissionPercentage:(char *)a6;
- (int)BluetoothHCIBroadcomSectorErase:(unsigned int)a0;
- (int)BluetoothHCIBroadcomSetEventMask:(const struct BluetoothBroadcomSetEventMask { unsigned char x0[32]; } *)a0;
- (int)BluetoothHCIBroadcomSetProximityTrigger:(unsigned char)a0 inEnableAwayTrigger:(unsigned char)a1;
- (int)BluetoothHCIBroadcomSetTransmitPower:(unsigned short)a0 inPower:(char)a1;
- (int)BluetoothHCIBroadcomSetUSBAutoResume:(unsigned short)a0;
- (int)BluetoothHCIBroadcomTagLEA:(unsigned long long)a0 connectionHandle:(unsigned short)a1 input:(BOOL)a2 channel:(BOOL)a3;
- (int)BluetoothHCIBroadcomWriteRAM:(unsigned int)a0 inLength:(unsigned char)a1 inData:(char *)a2;
- (int)BluetoothHCICSRReadRawRSSI:(unsigned short)a0 outRSSI:(char *)a1;
- (int)BluetoothHCIChangeConnectionPacketType:(unsigned short)a0 inPacketType:(unsigned short)a1 outConnectionPacketTypeChangedResults:(struct BluetoothHCIEventConnectionPacketTypeResults { unsigned short x0; unsigned short x1; } *)a2;
- (int)BluetoothHCICreateConnection:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inPacketType:(unsigned short)a1 inPageScanRepetitionMode:(unsigned char)a2 inReserved:(unsigned char)a3 inClockOffset:(unsigned short)a4 inAllowRoleSwitch:(unsigned char)a5 outConnectionCompleteResults:(struct BluetoothHCIEventConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; } *)a6;
- (int)BluetoothHCICreateNewUnitKey;
- (int)BluetoothHCIDisconnect:(unsigned short)a0 inReason:(unsigned char)a1 outDisconnectionCompleteResults:(struct BluetoothHCIEventDisconnectionCompleteResults { unsigned short x0; unsigned char x1; } *)a2;
- (int)BluetoothHCIEnhancedAcceptSynchronousConnection:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inTransmitBandwidth:(unsigned int)a1 inReceiveBandwidth:(unsigned int)a2 inTransmitCodingFormat:(unsigned long long)a3 inReceiveCodingFormat:(unsigned long long)a4 inTransmitCodecFrameSize:(unsigned short)a5 inReceiveCodecFrameSize:(unsigned short)a6 inInputBandwith:(unsigned int)a7 inOutputBandwth:(unsigned int)a8 inInputCodingFormat:(unsigned long long)a9 inOutputCodingFormat:(unsigned long long)a10 inInputCodedDataSize:(unsigned short)a11 inOutputCodedDataSize:(unsigned short)a12 inInputPCMDataFormat:(unsigned char)a13 inOutputPCMDataFormat:(unsigned char)a14 inInputPCMSamplePayloadMSBPosition:(unsigned char)a15 inOutputPCMSamplePayloadMSBPosition:(unsigned char)a16 inInputDataPath:(unsigned char)a17 inOutputDataPath:(unsigned char)a18 inInputTransportUnitSize:(unsigned char)a19 inOutputTransportUnitSize:(unsigned char)a20 inMaxLatency:(unsigned short)a21 inRetransmissionEffort:(unsigned char)a22 inPacketType:(unsigned short)a23 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned short x5; unsigned short x6; unsigned char x7; } *)a24;
- (int)BluetoothHCIEnhancedSetupSynchronousConnection:(unsigned short)a0 inTransmitBandwidth:(unsigned int)a1 inReceiveBandwidth:(unsigned int)a2 inTransmitCodingFormat:(unsigned long long)a3 inReceiveCodingFormat:(unsigned long long)a4 inTransmitCodecFrameSize:(unsigned short)a5 inReceiveCodecFrameSize:(unsigned short)a6 inInputBandwith:(unsigned int)a7 inOutputBandwth:(unsigned int)a8 inInputCodingFormat:(unsigned long long)a9 inOutputCodingFormat:(unsigned long long)a10 inInputCodedDataSize:(unsigned short)a11 inOutputCodedDataSize:(unsigned short)a12 inInputPCMDataFormat:(unsigned char)a13 inOutputPCMDataFormat:(unsigned char)a14 inInputPCMSamplePayloadMSBPosition:(unsigned char)a15 inOutputPCMSamplePayloadMSBPosition:(unsigned char)a16 inInputDataPath:(unsigned char)a17 inOutputDataPath:(unsigned char)a18 inInputTransportUnitSize:(unsigned char)a19 inOutputTransportUnitSize:(unsigned char)a20 inMaxLatency:(unsigned short)a21 inRetransmissionEffort:(unsigned char)a22 inPacketType:(unsigned short)a23 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned short x5; unsigned short x6; unsigned char x7; } *)a24;
- (int)BluetoothHCIExitPeriodicInquiryMode;
- (int)BluetoothHCIFlowSpecification:(struct BluetoothHCIEventFlowSpecificationData { unsigned short x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; } *)a0 outFlowSpecificationCompleteResults:(struct BluetoothHCIEventFlowSpecificationData { unsigned short x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; } *)a1;
- (int)BluetoothHCIHoldMode:(unsigned short)a0 inHoldModeMaxInterval:(unsigned short)a1 inHoldModeMinInterval:(unsigned short)a2 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x0; unsigned char x1; unsigned short x2; } *)a3;
- (int)BluetoothHCIIOCapabilityRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inReason:(unsigned char)a1;
- (int)BluetoothHCIInquiry:(unsigned int)a0 inInquiryLength:(unsigned char)a1 inNumResponses:(unsigned char)a2 outInquiryResults:(struct BluetoothHCIInquiryResults { struct BluetoothHCIInquiryResult { struct BluetoothDeviceAddress { unsigned char x0[6]; } x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned int x4; unsigned short x5; } x0[50]; unsigned int x1; } *)a3;
- (int)BluetoothHCILEAddDeviceToWhiteList:(unsigned char)a0 address:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1;
- (int)BluetoothHCILEAdvPacketContentFilterFeatureSectionWrite:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 addressType:(unsigned char)a1 featureSelection:(unsigned int)a2 logicalType:(unsigned char)a3 outLEextOpcode:(char *)a4 outAction:(char *)a5;
- (int)BluetoothHCILEAdvPacketPacketFilterServiceUUIDWrite:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 addressType:(unsigned char)a1 logicalType:(unsigned char)a2 outLEextOpcode:(char *)a3 outAction:(char *)a4 UUID:(char *)a5;
- (int)BluetoothHCILEBroadcomClearIRKList:(char *)a0 outIRKListAvailableSpace:(char *)a1;
- (int)BluetoothHCILEBroadcomReadIRKList:(unsigned char)a0 outLEextOpcode:(char *)a1 outIRKListIndex:(char *)a2 outIRK:(char *)a3 outAddressType:(char *)a4 outAddress:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a5 outResolvedPrivateAddress:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a6;
- (int)BluetoothHCILEClearWhiteList;
- (int)BluetoothHCILECreateConnection:(unsigned short)a0 LEScanWindow:(unsigned short)a1 initiatorFilterPolicy:(unsigned char)a2 peerAddressType:(unsigned char)a3 peerAddress:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a4 ownAddressType:(unsigned char)a5 connectionIntervalMin:(unsigned short)a6 connectionIntervalMax:(unsigned short)a7 connectionLatency:(unsigned short)a8 supervisionTimeout:(unsigned short)a9 minimumCELength:(unsigned short)a10 maximumCELength:(unsigned short)a11;
- (int)BluetoothHCILECreateExtendedAdvertisingInstance:(unsigned char)a0 address:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1 outLEextOpcode:(char *)a2 outHandle:(char *)a3;
- (int)BluetoothHCILEEnhancedReceiverTest:(unsigned char)a0 phy:(unsigned char)a1 modulationIndex:(unsigned char)a2;
- (int)BluetoothHCILEExtendedDuplicateFilter:(char *)a0 outAction:(unsigned char)a1;
- (int)BluetoothHCILELongTermKeyRequestReply:(unsigned short)a0 longTermKey:(char *)a1;
- (int)BluetoothHCILEReadAdvertisingChannelTxPower:(char *)a0;
- (int)BluetoothHCILEReadChannelMap:(unsigned short)a0 channelMap:(unsigned long long *)a1;
- (int)BluetoothHCILEReadRemoteUsedFeatures:(unsigned short)a0;
- (int)BluetoothHCILEReadSupportedStates:(unsigned long long *)a0;
- (int)BluetoothHCILEReceiverTest:(unsigned char)a0;
- (int)BluetoothHCILEScanCache:(unsigned char)a0;
- (int)BluetoothHCILEScanRSSIThresholdWrite:(unsigned char)a0 rssiThresdhold:(char)a1 outAction:(char *)a2;
- (int)BluetoothHCILESetAdvertisingData:(unsigned char)a0 advertsingData:(char *)a1;
- (int)BluetoothHCILESetDataLength:(unsigned short)a0 maxTxOctets:(unsigned short)a1 maxTxTime:(unsigned short)a2 connectionHandle:(unsigned short *)a3;
- (int)BluetoothHCILESetExtendedAdvertiseEnable:(unsigned char)a0 advertiseEnable:(unsigned char)a1 timeout:(unsigned int)a2 timeoutEvent:(unsigned char)a3;
- (int)BluetoothHCILESetExtendedAdvertisingParameters:(unsigned char)a0 advertisingIntervalMin:(unsigned short)a1 advertisingIntervalMax:(unsigned short)a2 advertisingType:(unsigned char)a3 advertisingChannelMap:(unsigned char)a4 advertisingFilterPolicy:(unsigned char)a5;
- (int)BluetoothHCILESetHostChannelClassification:(unsigned long long)a0;
- (int)BluetoothHCILESetScanParameters:(unsigned char)a0 LEScanInterval:(unsigned short)a1 LEScanWindow:(unsigned short)a2 ownAddressType:(unsigned char)a3 scanningFilterPolicy:(unsigned char)a4;
- (int)BluetoothHCILEStartEncryption:(unsigned short)a0 randomNumber:(unsigned long long)a1 encryptedDiversifier:(unsigned short)a2 longTermKey:(char *)a3;
- (int)BluetoothHCILETrackSensor:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 addressType:(unsigned char)a1 timeoutValue:(unsigned char)a2 outLEextOpcode:(char *)a3;
- (int)BluetoothHCILighthouseControl:(unsigned char)a0;
- (int)BluetoothHCILighthouseSetParameters:(unsigned short)a0 leScanWindowSize:(unsigned short)a1 leAdvertisementInterval:(unsigned short)a2 leAdvertisementType:(unsigned char)a3 leAdvertisementFilterControl:(unsigned char)a4 rssiThreshold:(char)a5 timeout:(unsigned char)a6;
- (int)BluetoothHCILinkKeyRequestReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inLinkKey:(const struct BluetoothKey { unsigned char x0[16]; } *)a1;
- (int)BluetoothHCIPINCodeRequestNegativeReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIParkState:(unsigned short)a0 inBeaconMaxInterval:(unsigned short)a1 inBeaconMinInterval:(unsigned short)a2 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x0; unsigned char x1; unsigned short x2; } *)a3;
- (int)BluetoothHCIQoSSetup:(unsigned short)a0 inFlags:(unsigned char)a1 inServiceType:(unsigned char)a2 inTokenRate:(unsigned int)a3 inPeakBandwidth:(unsigned int)a4 inLatency:(unsigned int)a5 inDelayVariation:(unsigned int)a6 outQoSSetupCompleteResults:(struct BluetoothHCIEventQoSSetupCompleteResults { unsigned short x0; struct BluetoothHCIQualityOfServiceSetupParams { unsigned char x0; unsigned char x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; } x1; } *)a7;
- (int)BluetoothHCIReadAFHChannelMap:(unsigned short)a0 outAFHMode:(char *)a1 outAFHChannelMap:(unsigned char[10])a2;
- (int)BluetoothHCIReadAutomaticFlushTimeout:(unsigned short)a0 outFlushTimeout:(unsigned short *)a1;
- (int)BluetoothHCIReadClassOfDevice:(unsigned int *)a0;
- (int)BluetoothHCIReadClockOffset:(unsigned short)a0 outReadClockOffsetCompleteResults:(unsigned short *)a1;
- (int)BluetoothHCIReadCurrentIACLAP:(struct BluetoothHCICurrentInquiryAccessCodes { unsigned char x0; struct BluetoothHCIInquiryAccessCode *x1; } *)a0;
- (int)BluetoothHCIReadDefaultLinkPolicySettings:(unsigned short *)a0;
- (int)BluetoothHCIReadExtendedInquiryResponse:(char *)a0 outExtendedInquiryResponse:(struct BluetoothHCIExtendedInquiryResponse { unsigned char x0[240]; } *)a1;
- (int)BluetoothHCIReadHoldModeActivity:(char *)a0;
- (int)BluetoothHCIReadInquiryResponseTransmitPowerLevel:(char *)a0;
- (int)BluetoothHCIReadInquiryScanType:(char *)a0;
- (int)BluetoothHCIReadLMPHandle:(unsigned short)a0 outReadLMPHandleResults:(struct BluetoothHCIReadLMPHandleResults { unsigned short x0; unsigned char x1; unsigned int x2; } *)a1;
- (int)BluetoothHCIReadLinkQuality:(unsigned short)a0 outLinkQuality:(char *)a1;
- (int)BluetoothHCIReadLocalExtendedFeatures:(unsigned char)a0 outMaximumPageNumber:(char *)a1 outExtendedLMPFeatures:(struct BluetoothHCISupportedFeatures { unsigned char x0[8]; } *)a2;
- (int)BluetoothHCIReadLocalOOBData:(struct BluetoothHCISimplePairingOOBData { unsigned char x0[16]; } *)a0 outR:(struct BluetoothHCISimplePairingOOBData { unsigned char x0[16]; } *)a1;
- (int)BluetoothHCIReadLocalSupportedFeatures:(struct BluetoothHCISupportedFeatures { unsigned char x0[8]; } *)a0;
- (int)BluetoothHCIReadLoopbackMode:(char *)a0;
- (int)BluetoothHCIReadNumberOfSupportedIAC:(char *)a0;
- (int)BluetoothHCIReadPageScanActivity:(unsigned short *)a0 outPageScanWindow:(unsigned short *)a1;
- (int)BluetoothHCIReadPageTimeout:(unsigned short *)a0;
- (int)BluetoothHCIReadRemoteExtendedFeatures:(unsigned short)a0 inPageNumber:(unsigned char)a1 outReadRemoteExtendedFeaturesCompleteResults:(struct BluetoothHCIEventReadRemoteExtendedFeaturesResults { unsigned char x0; unsigned short x1; unsigned char x2; unsigned char x3; struct BluetoothHCISupportedFeatures { unsigned char x0[8]; } x4; } *)a2;
- (int)BluetoothHCIReadRemoteVersionInformation:(unsigned short)a0 outReadRemoteVersionInformationCompleteResults:(struct BluetoothHCIEventReadRemoteVersionInfoResults { unsigned short x0; unsigned char x1; unsigned short x2; unsigned short x3; } *)a1;
- (int)BluetoothHCIReadSecureConnectionsHostSupport:(char *)a0;
- (int)BluetoothHCIReadStoredLinkKey:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inReadAllFlag:(unsigned char)a1 outStoredLinkKeysInfo:(struct BluetoothHCIStoredLinkKeysInfo { unsigned short x0; unsigned short x1; } *)a2;
- (int)BluetoothHCIReadTransmitPowerLevel:(unsigned short)a0 inType:(unsigned char)a1 outTransmitPowerLevel:(char *)a2;
- (int)BluetoothHCIRefreshEncryptionKey:(unsigned short)a0 outRefreshEncryptionKeyResults:(struct BluetoothHCIEventEncryptionKeyRefreshCompleteResults { unsigned short x0; } *)a1;
- (int)BluetoothHCIRejectSynchronousConnectionRequest:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inReason:(unsigned char)a1 outSynchronousConnectionCompleteResults:(struct BluetoothHCIEventSynchronousConnectionCompleteResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned short x5; unsigned short x6; unsigned char x7; } *)a2;
- (int)BluetoothHCIRemoteNameRequestCancel:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIRemoteOOBDataRequestReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inC:(const struct BluetoothHCISimplePairingOOBData { unsigned char x0[16]; } *)a1 inR:(const struct BluetoothHCISimplePairingOOBData { unsigned char x0[16]; } *)a2;
- (int)BluetoothHCIResetFailedContactCounter:(unsigned short)a0;
- (int)BluetoothHCISendKeypressNotification:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inNotificationType:(unsigned char)a1;
- (int)BluetoothHCISetConnectionEncryption:(unsigned short)a0 inEncryptionEnable:(unsigned char)a1 outEncryptionChangeResults:(struct BluetoothHCIEventEncryptionChangeResults { unsigned short x0; unsigned char x1; } *)a2;
- (int)BluetoothHCISetEventFilter:(unsigned char)a0 inFilterConditionType:(unsigned char)a1 inCondition:(struct BluetoothEventFilterCondition { unsigned char x0[7]; } *)a2;
- (int)BluetoothHCISetLighthouseControl:(unsigned char)a0;
- (int)BluetoothHCISetLighthouseSetParameters:(unsigned short)a0 inLEScanWindow:(unsigned short)a1 inLEAdvertisementInterval:(unsigned short)a2 inAdvType:(unsigned char)a3 inAdvAddressFilterControl:(unsigned char)a4 inRSSIThreshold:(char)a5 inTimeout:(unsigned char)a6;
- (int)BluetoothHCISetSpecialSniffTransitionEnable:(unsigned short)a0 enable:(unsigned char)a1;
- (int)BluetoothHCISniffMode:(unsigned short)a0 inSniffMaxInterval:(unsigned short)a1 inSniffMinInterval:(unsigned short)a2 inSniffAttempt:(unsigned short)a3 inSniffTimeout:(unsigned short)a4 outModeChangeResults:(struct BluetoothHCIEventModeChangeResults { unsigned short x0; unsigned char x1; unsigned short x2; } *)a5;
- (int)BluetoothHCISwitchRole:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inRole:(unsigned char)a1 outRoleChangeResults:(struct BluetoothHCIEventRoleChangeResults { unsigned short x0; struct BluetoothDeviceAddress { unsigned char x0[6]; } x1; unsigned char x2; } *)a2;
- (int)BluetoothHCIUserConfirmationRequestReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0;
- (int)BluetoothHCIUserPasskeyRequestReply:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 inNumericValue:(unsigned int)a1;
- (int)BluetoothHCIWriteAuthenticationEnable:(unsigned char)a0;
- (int)BluetoothHCIWriteConnectionAcceptTimeout:(unsigned short)a0;
- (int)BluetoothHCIWriteDefaultLinkPolicySettings:(unsigned short)a0;
- (int)BluetoothHCIWriteInquiryMode:(unsigned char)a0;
- (int)BluetoothHCIWriteInquiryScanType:(unsigned char)a0;
- (int)BluetoothHCIWriteInquiryTransmitPowerLevel:(char)a0;
- (int)BluetoothHCIWriteLEHostSupported:(unsigned char)a0 simultaneousLEHost:(unsigned char)a1;
- (int)BluetoothHCIWriteLinkPolicySettings:(unsigned short)a0 inLinkPolicySettings:(unsigned short)a1;
- (int)BluetoothHCIWriteLinkSupervisionTimeout:(unsigned short)a0 inLinkSupervisionTimeout:(unsigned short)a1;
- (int)BluetoothHCIWriteLocalName:(unsigned char[248])a0;
- (int)BluetoothHCIWriteLoopbackMode:(unsigned char)a0;
- (int)BluetoothHCIWriteNumBroadcastRetransmissions:(unsigned char)a0;
- (int)BluetoothHCIWritePINType:(unsigned char)a0;
- (int)BluetoothHCIWritePageScanActivity:(unsigned short)a0 inPageScanWindow:(unsigned short)a1;
- (int)BluetoothHCIWritePageScanType:(unsigned char)a0;
- (int)BluetoothHCIWritePageTimeout:(unsigned short)a0;
- (int)BluetoothHCIWriteScanEnable:(unsigned char)a0;
- (int)BluetoothHCIWriteSecureConnectionsHostSupport:(unsigned char)a0;
- (int)BluetoothHCIWriteSimplePairingDebugMode:(unsigned char)a0;
- (int)BluetoothHCIWriteSimplePairingMode:(unsigned char)a0;
- (int)BluetoothHCIWriteStoredLinkKey:(unsigned int)a0 inDeviceAddress:(const struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1 inLinkKey:(const struct BluetoothKey { unsigned char x0[16]; } *)a2 outNumKeysWritten:(char *)a3;
- (int)BluetoothHCIWriteSynchronousFlowControlEnable:(unsigned char)a0;
- (int)BluetoothHCIWriteVoiceSetting:(unsigned short)a0;
- (void)BluetoothHostControllerDoNotTickleDisplay;
- (int)BluetoothHostControllerHardwareResetTest:(unsigned char)a0 inEnableDisable:(unsigned char)a1;
- (int)BluetoothHostControllerLEAdvertisingReportEventTest:(unsigned char)a0;
- (int)BluetoothHostControllerRemoveLEDeviceFromList:(unsigned short)a0;
- (void)BluetoothHostControllerSetupCompleted;
- (int)BroadcomHCILEAddAdvancedMatchingRule:(struct { unsigned char x0[22]; })a0 mask:(struct { unsigned char x0[22]; })a1 RSSIThreshold:(char)a2 packetType:(unsigned char)a3 matchingCapacity:(char *)a4 matchingRemaining:(char *)a5;
- (int)BroadcomHCILEAddAdvancedMatchingRuleWithAddress:(char)a0 address:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1 blob:(struct { unsigned char x0[22]; })a2 mask:(struct { unsigned char x0[22]; })a3 RSSIThreshold:(char)a4 packetType:(unsigned char)a5 matchingCapacity:(char *)a6 matchingRemaining:(char *)a7;
- (int)BroadcomHCILEAddAdvancedMatchingRuleWithAddressEnhanced:(char)a0 address:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1 blob:(struct { unsigned char x0[22]; })a2 mask:(struct { unsigned char x0[22]; })a3 RSSIThreshold:(char)a4 packetType:(unsigned char)a5 allowDuplicates:(unsigned char)a6 matchingCapacity:(char *)a7 matchingRemaining:(char *)a8;
- (int)BroadcomHCILERemoveAdvancedMatchingRule:(struct { unsigned char x0[22]; })a0 mask:(struct { unsigned char x0[22]; })a1 RSSIThreshold:(char)a2 packetType:(unsigned char)a3 matchingCapacity:(char *)a4 matchingRemaining:(char *)a5;
- (int)BroadcomHCILERemoveAdvancedMatchingRuleWithAddress:(char)a0 address:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1 blob:(struct { unsigned char x0[22]; })a2 mask:(struct { unsigned char x0[22]; })a3 RSSIThreshold:(char)a4 packetType:(unsigned char)a5 matchingCapacity:(char *)a6 matchingRemaining:(char *)a7;
- (int)BroadcomHCILERemoveAdvancedMatchingRuleWithAddressEnhanced:(char)a0 address:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a1 blob:(struct { unsigned char x0[22]; })a2 mask:(struct { unsigned char x0[22]; })a3 RSSIThreshold:(char)a4 packetType:(unsigned char)a5 allowDuplicates:(unsigned char)a6 matchingCapacity:(char *)a7 matchingRemaining:(char *)a8;
- (int)BroadcomHCILEResetAdvancedMatchingRules:(char *)a0 matchingRemaining:(char *)a1;
- (int)BroadcomHCILESetScanEnableEnhanced:(unsigned char)a0 scanType:(unsigned char)a1 filterDuplicates:(unsigned char)a2 bypassFilterDuplicateControl:(unsigned char)a3 targetCore:(unsigned char)a4 scanPeriod:(unsigned short)a5 scanDuration:(unsigned short)a6;
- (unsigned short)USBProductID;
- (unsigned short)USBVendorID;
- (void)addDeviceToOutstandingRequests:(id)a0 forHCIRequestID:(unsigned int)a1;
- (int)addHIDEmulationDevice:(struct BluetoothDeviceAddress { unsigned char x0[6]; })a0 classOfDevice:(unsigned int)a1 linkKey:(struct BluetoothKey { unsigned char x0[16]; })a2;
- (void)asyncHCIEventNotificationWithRef:(struct OpaqueIOBluetoothNotificationRef { } *)a0 subClass:(unsigned int)a1 data:(const void *)a2 dataSize:(unsigned long long)a3;
- (id)cachedDeviceAddress;
- (id)cachedDeviceAddressString;
- (unsigned char)cachedHCIVersion;
- (unsigned int)classOfDevice;
- (BOOL)concurrentCreateConnectionSupported;
- (int)configState;
- (void)controllerStateMessage:(unsigned int)a0;
- (int)enableRemoteWake:(BOOL)a0;
- (int)getControllerManufacturerName;
- (id)getDeviceForHCIRequestID:(unsigned int)a0 removeIfFound:(BOOL)a1;
- (int)getDiagnosticInfo;
- (BOOL)lowEnergySupported;
- (id)nameAsString;
- (BOOL)powerChangeSupported;
- (void)processRawEventData:(const void *)a0 dataSize:(unsigned long long)a1;
- (int)readHIDEmulationDevices;
- (int)readRawRSSIForDevice:(id)a0;
- (int)readVerboseConfigVersionInfo:(char *)a0 outTargetID:(char *)a1 outBaseline:(unsigned short *)a2 outBuild:(unsigned short *)a3;
- (int)removeHIDEmulationDevice:(struct BluetoothDeviceAddress { unsigned char x0[6]; })a0;
- (unsigned int)requestWithTimeout:(int)a0 isSynchronous:(BOOL)a1 device:(id)a2;
- (void)sendInquiryResultToDelegate:(struct IOBluetoothHCIEventNotificationMessage { struct BluetoothHCIUserClientNotificationDataInfo { unsigned long long x0; unsigned long long x1; struct BluetoothHCIRequestCallbackInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; } x2; unsigned int x3; unsigned int x4; unsigned short x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; } x0; void *x1; } *)a0;
- (int)setClassOfDevice:(unsigned int)a0 forTimeInterval:(double)a1;
- (int)setTransmitPowerForDevice:(id)a0 toLevel:(unsigned char)a1;
- (int)softwareVersion:(struct NumVersion { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; } *)a0 firmwareVersion:(struct BluetoothHCIVersionInfo { unsigned short x0; unsigned char x1; unsigned short x2; unsigned char x3; unsigned short x4; } *)a1;
- (int)startReceiveTest:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 reportPeriod:(unsigned short)a1 frequency:(unsigned char)a2 modulationType:(unsigned char)a3 logicalChannel:(unsigned char)a4 packetType:(unsigned char)a5 packetLength:(unsigned short)a6;
- (int)startTransmitTest:(struct BluetoothDeviceAddress { unsigned char x0[6]; } *)a0 hoppingMode:(unsigned char)a1 frequency:(unsigned char)a2 modulationType:(unsigned char)a3 logicalChannel:(unsigned char)a4 packetType:(unsigned char)a5 packetLength:(unsigned short)a6 transmitPower:(unsigned char)a7 transmitPowerdBm:(unsigned char)a8 transmitPowerTableIndex:(unsigned char)a9 transmitConnectionInterval:(unsigned char)a10 packetsInGroup:(unsigned char)a11;
- (void)stopHCIEventListener;
- (BOOL)tbfcPageSupported;
- (BOOL)tbfcSupported;
- (int)triStateEnabled:(BOOL)a0;

@end

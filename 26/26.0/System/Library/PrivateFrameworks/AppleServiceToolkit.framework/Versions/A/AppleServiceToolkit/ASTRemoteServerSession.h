@class ASTAuthInfoResult, NSString, NSMutableDictionary, ASTProfileResult, ASTRequest, NSObject, NSError;
@protocol ASTConnectionManager, OS_dispatch_queue, OS_dispatch_semaphore;

@interface ASTRemoteServerSession : ASTSession <ASTConnectionManagerDelegate>

@property (retain, nonatomic) NSString *sessionId;
@property (retain, nonatomic) id<ASTConnectionManager> connectionManager;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *clientStatusQueue;
@property (nonatomic) long long retryCounter;
@property (nonatomic) long long backoffCounter;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *backoffTimer;
@property (retain, nonatomic) NSMutableDictionary *runningTests;
@property (retain, nonatomic) NSMutableDictionary *pendingTestResults;
@property (retain, nonatomic) ASTProfileResult *pendingProfileResult;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *pendingProfileSemaphore;
@property (retain, nonatomic) ASTRequest *pendingPropertiesResult;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *pendingPropertiesSemaphore;
@property (retain, nonatomic) ASTAuthInfoResult *pendingAuthInfoResult;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *pendingAuthInfoSemaphore;
@property (nonatomic) long long phase;
@property (nonatomic) BOOL shouldContinueRequestLoop;
@property (nonatomic) BOOL shouldUnenroll;
@property (nonatomic) BOOL shouldAbort;
@property (copy, nonatomic) id /* block */ clientAbortCompletion;
@property (copy, nonatomic) id /* block */ sessionTeardownCompletion;
@property (retain, nonatomic) NSError *clientStatusLoopError;
@property (readonly, nonatomic) id /* block */ payloadSigner;
@property (readonly, nonatomic) id /* block */ fileSigner;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)auditToken:(struct { unsigned int x0[8]; } *)a0 hasEntitlement:(id)a1;
+ (BOOL)currentProcessHasEntitlement;
+ (void)downloadAsset:(id)a0 serverURL:(id)a1 endpoint:(id)a2 fileHandle:(id)a3 completionHandler:(id /* block */)a4;
+ (void)prepareDeviceWithIdentities:(id)a0 completionHandler:(id /* block */)a1;
+ (void)sessionStatusForIdentities:(id)a0 ticketNumber:(id)a1 timeout:(double)a2 requestQueuedSuiteInfo:(BOOL)a3 completionHandler:(id /* block */)a4;
+ (id)sessionWithContext:(id)a0;
+ (id)sessionWithIdentity:(id)a0;
+ (id)sessionWithSerialNumber:(id)a0;

- (id)initWithIdentity:(id)a0;
- (void)end;
- (id)initWithContext:(id)a0;
- (void)start;
- (void)_setup;
- (void)dealloc;
- (void)invalidate;
- (id)_idle;
- (void)archive;
- (void)_teardown;
- (void).cxx_destruct;
- (void)idle;
- (void)setSessionEndReason:(long long)a0;
- (id)_sendRequest:(id)a0;
- (void)_archive;
- (void)_updateProgress:(id)a0;
- (id)_abort;
- (id)_updateSessionSettingsWithData:(id)a0;
- (void)connectionManagerRequestPaused:(id)a0;
- (void)_abortRunningProcedures;
- (BOOL)_authInfoIfNecessary;
- (void)_backoff;
- (void)_cancelControlExecution;
- (void)_cancelRunningTests;
- (void)_cancelSendingTestResults;
- (id)_clientAbort;
- (id)_continueWithLastRequest:(id)a0;
- (void)_endAndUnenrollIfNecessary:(BOOL)a0;
- (BOOL)_profile;
- (void)_protocolError;
- (void)_rebootWithData:(id)a0;
- (id)_retryRequest;
- (id)_sendPropertiesWithData:(id)a0;
- (id)_sendTestResults:(id)a0;
- (BOOL)_shouldAllowCellularForSealedSealablePayload:(id)a0;
- (BOOL)_shouldAllowCellularForSealedTestResult:(id)a0;
- (id)_showInstructionalPromptWithData:(id)a0;
- (void)_shutdownWithData:(id)a0;
- (id)_signFile:(id)a0 error:(id *)a1;
- (id)_signPayload:(id)a0 error:(id *)a1;
- (void)_startClientStatusLoop;
- (id)_startNewTest:(id)a0 data:(id)a1;
- (id)_updateUIWithData:(id)a0;
- (BOOL)_validateCommand:(long long)a0 clientStatus:(long long)a1;
- (void)connectionManager:(id)a0 pausedSendingResultForTest:(id)a1 reason:(long long)a2;
- (void)connectionManager:(id)a0 resumedSendingResultForTest:(id)a1;
- (void)connectionManagerRequestResumed:(id)a0;
- (void)idleWithCompletion:(id /* block */)a0;
- (id)initWithSerialNumber:(id)a0;
- (void)requestSuiteStart:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestSuiteSummary:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestSuitesAvailableWithCompletionHandler:(id /* block */)a0;
- (BOOL)sendAuthInfoResult:(id)a0 error:(id *)a1;
- (BOOL)sendProfileResult:(id)a0 error:(id *)a1;
- (BOOL)sendTestResult:(id)a0 error:(id *)a1;
- (BOOL)shouldShowResults;
- (void)updateAction:(id)a0;

@end

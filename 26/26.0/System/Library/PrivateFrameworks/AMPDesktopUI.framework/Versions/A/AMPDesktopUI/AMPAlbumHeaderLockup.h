@class NSStackView, AMPDescriptionBlock, NSPopUpButton, NSButton, NSMenu, NSObject, AMPAvatarStackLockup, NSLevelIndicator, NSString, NSLayoutConstraint, _TtC12AMPDesktopUI16AMPArtworkLockup, BadgeStackLockup, NSArray, NSView, NSTextField, KeyColorButton;
@protocol AMPAlbumHeaderLockupModel;

@interface AMPAlbumHeaderLockup : NSTableCellView <AMPNewImagePickerDelegate, NSTextFieldDelegate, NSMenuDelegate> {
    BOOL _useWidescreenAspect;
    double _titleSpacing;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) _TtC12AMPDesktopUI16AMPArtworkLockup *artworkView;
@property (retain, nonatomic) NSStackView *titleStack;
@property (retain, nonatomic) NSTextField *title1Field;
@property (retain, nonatomic) NSTextField *title2Field;
@property (retain, nonatomic) NSButton *title2Button;
@property (retain, nonatomic) NSButton *tertitleButton;
@property (retain, nonatomic) NSTextField *calloutField;
@property (retain, nonatomic) AMPAvatarStackLockup *avatarStack;
@property (retain, nonatomic) NSButton *settingsButton;
@property (retain, nonatomic) NSPopUpButton *settingsOptionsButton;
@property (retain, nonatomic) BadgeStackLockup *badges;
@property (retain, nonatomic) NSStackView *calloutStack;
@property (retain, nonatomic) NSStackView *contentStack;
@property (retain, nonatomic) NSStackView *outerStack;
@property (retain, nonatomic) NSView *artworkCenterer;
@property (retain, nonatomic) NSView *metaContainer;
@property (retain, nonatomic) NSLayoutConstraint *artworkCenteringSpaceConstraint;
@property (retain, nonatomic) NSView *actionPlatter;
@property (retain, nonatomic) NSStackView *accessoryPlatter;
@property (retain, nonatomic) NSView *playShufflePlatter;
@property (retain, nonatomic) NSButton *playButton;
@property (retain, nonatomic) NSButton *shuffleButton;
@property (retain, nonatomic) KeyColorButton *downloadButton;
@property (retain, nonatomic) KeyColorButton *actionButton;
@property (retain, nonatomic) KeyColorButton *manageCollabButton;
@property (retain, nonatomic) NSButton *publishCheckbox;
@property (retain, nonatomic) NSLevelIndicator *starRatingControl;
@property (retain, nonatomic) AMPDescriptionBlock *descriptionArea;
@property (retain, nonatomic) NSButton *descriptionButton;
@property (retain, nonatomic) NSView *descriptionContainer;
@property (retain, nonatomic) NSView *descriptionMoreFill;
@property (retain, nonatomic) NSView *descriptionMoreFade;
@property (retain, nonatomic) NSButton *descriptionMoreBtn;
@property (nonatomic) BOOL descriptionIsClipped;
@property (retain, nonatomic) NSLayoutConstraint *artworkAspectConstraint;
@property (retain, nonatomic) NSLayoutConstraint *artworkWidthConstraint;
@property (retain, nonatomic) NSMenu *artworkMenu;
@property (retain, nonatomic) NSView *artworkDropHighlight;
@property (retain, nonatomic) NSObject *inlineEventMonitor;
@property (retain, nonatomic) NSStackView *titleLinesStack;
@property (retain, nonatomic) NSLayoutConstraint *descriptionWidthConstraint;
@property (retain, nonatomic) NSLayoutConstraint *playAreaTrailingConstraint;
@property (retain, nonatomic) NSLayoutConstraint *contentAreaLimitConstraint;
@property (retain, nonatomic) NSLayoutConstraint *playAreaLeadingConstraint;
@property (nonatomic) BOOL metadataShouldBeConstrained;
@property (nonatomic) BOOL orientationIsVertical;
@property (retain, nonatomic) NSArray *orientationConstraints;
@property (retain, nonatomic) id<AMPAlbumHeaderLockupModel> viewModel;
@property (readonly, nonatomic) double titleVisualOffset;
@property (nonatomic) double titleSpacing;
@property (nonatomic) BOOL showEditSettingsWithActionButtons;
@property (nonatomic) BOOL useBulletSeparator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)keyPathsForValuesInvalidatingLayout;
+ (id)lockup;
+ (id)keyPathsForValuesAffectingAvatarsShouldBeHidden;
+ (id)keyPathsForValuesAffectingBottomMetadataAreaIsVisible;
+ (id)keyPathsForValuesAffectingCalloutAreaShouldBeHidden;
+ (id)keyPathsForValuesAffectingDescriptionIsVisible;
+ (id)keyPathsForValuesAffectingDescriptionTextToShow;
+ (id)keyPathsForValuesAffectingDownloadProgress;
+ (id)keyPathsForValuesAffectingDownloadState;
+ (id)keyPathsForValuesAffectingPlayButtonTitle;
+ (id)keyPathsForValuesAffectingPlayButtonsShouldBeEnabled;
+ (id)keyPathsForValuesAffectingSelectedSettingsOption;
+ (id)keyPathsForValuesAffectingSettingsButtonShouldBeHidden;
+ (id)keyPathsForValuesAffectingSettingsCalloutButtonShouldBeHidden;
+ (id)keyPathsForValuesAffectingSettingsDropDownMenu;
+ (id)keyPathsForValuesAffectingShouldHideSettingsDropDown;
+ (id)keyPathsForValuesAffectingShowCollabActivationButton;
+ (id)keyPathsForValuesAffectingShowCollabAttention;
+ (id)keyPathsForValuesAffectingShowCollabManagementButton;
+ (id)keyPathsForValuesAffectingShowEditButton;
+ (id)keyPathsForValuesAffectingShuffleButtonShouldBeHidden;
+ (id)keyPathsForValuesAffectingStarRatingImage;
+ (id)keyPathsForValuesAffectingStarRatingShouldBeEditable;
+ (id)keyPathsForValuesAffectingStarRatingShouldBeHidden;
+ (id)keyPathsForValuesAffectingSubTitleShouldBeHidden;
+ (id)keyPathsForValuesAffectingSubTitleString;
+ (id)keyPathsForValuesAffectingTertitle;
+ (id)keyPathsForValuesAffectingTertitleIsActionable;
+ (id)keyPathsForValuesAffectingTertitleShouldBeHidden;
+ (id)keyPathsForValuesAffectingTitle1AdornedString;
+ (id)keyPathsForValuesAffectingViewModel;

- (void)controlTextDidChange:(id)a0;
- (void)controlTextDidEndEditing:(id)a0;
- (double)downloadProgress;
- (id)menu;
- (long long)downloadState;
- (BOOL)_layoutHeightDependsOnWidth;
- (void)viewWillMoveToWindow:(id)a0;
- (void)cancelOperation:(id)a0;
- (void)layout;
- (BOOL)isFlipped;
- (id)init;
- (void)viewDidMoveToWindow;
- (id)initWithCoder:(id)a0;
- (id)accessibilityRole;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)updateConstraints;
- (void).cxx_destruct;
- (BOOL)accessibilityIsIgnored;
- (void)awakeFromNib;
- (void)menuWillOpen:(id)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (id)subTitleString;
- (BOOL)showEditButton;
- (unsigned long long)currCollabState;
- (void)newImagePicked:(id)a0;
- (id)playButtonTitle;
- (id)starRatingImage;
- (id)_actualPlayButtonTitle;
- (BOOL)avatarsShouldBeHidden;
- (BOOL)bottomMetadataAreaIsVisible;
- (BOOL)calloutAreaShouldBeHidden;
- (unsigned long long)currentFavoritedState;
- (BOOL)descriptionCurrentlyClipping;
- (BOOL)descriptionIsVisible;
- (id)descriptionTextToShow;
- (void)doActionMenuButton:(id)a0;
- (void)doCollabManagementButton:(id)a0;
- (void)doDownloadButton:(id)a0;
- (void)doPlayButton:(id)a0;
- (void)doPublishOnProfileCheck:(id)a0;
- (void)doReflectEditButton:(id)a0;
- (void)doReflectEditSettingsAction:(id)a0;
- (void)doReflectSettingsButtonChange:(id)a0;
- (void)doRefreshAction:(id)a0;
- (void)doSelectArtworkFromFile:(id)a0;
- (void)doSelectArtworkFromPhotos:(id)a0;
- (void)doShowInspectorAction:(id)a0;
- (void)doShuffleButton:(id)a0;
- (void)doSubtitleLinkClicked:(id)a0;
- (id)ownBundle;
- (BOOL)playButtonsShouldBeEnabled;
- (long long)selectedSettingsOption;
- (void)setAccessoryButtonsHidden:(BOOL)a0;
- (void)setMetadataAreaConstrained:(BOOL)a0;
- (void)setTitle1AdornedString:(id)a0;
- (void)setUseArtwork16By9Ratio:(BOOL)a0;
- (BOOL)settingsButtonShouldBeHidden;
- (id)settingsButtonTitle;
- (BOOL)settingsCalloutButtonShouldBeHidden;
- (id)settingsDropDownMenu;
- (void)setupMoreMask;
- (BOOL)shouldHideSettingsDropDown;
- (BOOL)showCollabActivationButton;
- (BOOL)showCollabAttention;
- (BOOL)showCollabManagementButton;
- (void)showFullDescription:(id)a0;
- (BOOL)shuffleButtonShouldBeHidden;
- (BOOL)starRatingShouldBeEditable;
- (BOOL)starRatingShouldBeHidden;
- (BOOL)subTitleShouldBeHidden;
- (id)tertitle;
- (BOOL)tertitleIsActionable;
- (BOOL)tertitleShouldBeHidden;
- (id)title1AdornedString;
- (void)updateArtworkChangability;
- (void)updateDescriptionIsClipped;

@end

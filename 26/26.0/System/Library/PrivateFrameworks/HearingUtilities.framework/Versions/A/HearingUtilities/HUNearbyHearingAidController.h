@class AXRemoteHearingAidDevice, NSTimer, AXDispatchTimer, NSString, NSMutableDictionary, NSDictionary, NSMutableSet, NSObject, HUSessionManager;
@protocol OS_dispatch_queue, HUNearbyHearingAidControllerDelegate;

@interface HUNearbyHearingAidController : HUDeviceController <HUSessionManagerDelegate>

@property BOOL hasStarted;
@property (retain, nonatomic) AXRemoteHearingAidDevice *localDevice;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *mediaQueue;
@property (retain, nonatomic) AXDispatchTimer *sendConnectionToCompanionTimer;
@property (nonatomic) BOOL holdingMediaForConnection;
@property (nonatomic) BOOL holdingPhoneForConnection;
@property (nonatomic) unsigned long long idsMessagesCount;
@property (retain, nonatomic) NSTimer *idsMessagesTimer;
@property long long processingHandoff;
@property long long handoffReason;
@property (retain, nonatomic) AXDispatchTimer *handoffTimer;
@property (copy, nonatomic) id /* block */ relinquishCompleted;
@property (retain, nonatomic) AXDispatchTimer *peerTimer;
@property unsigned long long deviceMessagePriority;
@property (retain, nonatomic) NSMutableSet *processesHighMessagePriority;
@property (retain, nonatomic) HUSessionManager *sessionManager;
@property (retain, nonatomic) NSDictionary *lastSentPropertyUpdates;
@property (retain, nonatomic) AXDispatchTimer *sendPropertyUpdatesLowTimer;
@property (retain, nonatomic) NSMutableDictionary *collectedPropertyUpdates;
@property (retain, nonatomic) AXDispatchTimer *messagesPriorityTimer;
@property (readonly, nonatomic) long long state;
@property (weak, nonatomic) id<HUNearbyHearingAidControllerDelegate> delegate;
@property (readonly, nonatomic) BOOL shouldConnect;
@property (readonly, nonatomic) BOOL shouldDisconnect;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedInstance;

- (void)setState:(long long)a0;
- (void)updateState;
- (void)start;
- (id)availableDevices;
- (void)stop;
- (id)init;
- (id)descriptionForState:(long long)a0;
- (void).cxx_destruct;
- (id)timeStamp;
- (void)mediaServerDied;
- (void)callStatusDidChange:(id)a0;
- (void)clientRemoved:(id)a0;
- (void)sendMessage:(id)a0 toDevices:(id)a1;
- (void)checkConnectionRequestedForMediaAfterTimeout;
- (void)checkHandoffAfterTimeout;
- (void)checkPeerStateAfterTimout;
- (void)collectPropertyUpdatesFromPayload:(id)a0;
- (id)connectedPeer;
- (void)connectedPeerWithCompletion:(id /* block */)a0;
- (id)connectingPeer;
- (long long)connectionStateForDevice:(id)a0;
- (id)defaultDevicesFromDevices:(id)a0;
- (id)descriptionForCurrentMessagePriority;
- (id)descriptionForCurrentState;
- (id)descriptionForHandoffReason:(long long)a0;
- (id)descriptionForHandoffState;
- (id)device:(id)a0 didReceiveMessage:(id)a1;
- (id)devicesFromDevices:(id)a0 withMessagePriority:(unsigned long long)a1;
- (void)disconnectFromPairedDevice;
- (void)finishHandoff;
- (void)handleSessionMessage:(long long)a0 completion:(id /* block */)a1;
- (id)hearingAidForDeviceID:(id)a0;
- (id)hearingDevice;
- (BOOL)isPeerConnectedToHearingDevice;
- (void)logAvailableDevicesWithTitle:(id)a0;
- (void)logDevices:(id)a0 withTitle:(id)a1 fullInfo:(BOOL)a2;
- (void)mediaPlaybackDidChange:(id)a0;
- (unsigned long long)messagePriorityForDevice:(id)a0;
- (id)peerWithState:(long long)a0;
- (void)processHandoffMessageFromPeer:(id)a0 state:(id)a1;
- (void)processReadMessageFromPeerDevice:(id)a0 value:(id)a1;
- (void)processReadProperty:(id)a0 fromPeerDevice:(id)a1;
- (BOOL)processStateMessageFromPeer:(id)a0 state:(id)a1;
- (void)processWriteMessageWithValue:(id)a0;
- (void)registerMediaNotifications;
- (void)relinquishConnection;
- (BOOL)relinquishConnectionForReason:(long long)a0 toDevice:(id)a1;
- (void)relinquishConnectionWithCompletion:(id /* block */)a0;
- (BOOL)representsLocalDevices;
- (void)requestConnection;
- (void)requestConnectionForMedia;
- (void)requestConnectionForReason:(long long)a0;
- (BOOL)requestHandoff:(long long)a0 reason:(long long)a1;
- (void)resetHandoff;
- (void)resetHandoffOnDeviceQueue;
- (void)routesDidChange:(id)a0;
- (void)scIDSServiceDevice:(id)a0 didReceiveMessage:(id)a1;
- (void)scIDSServiceDidAddDevices:(id)a0;
- (void)scIDSServiceDidRemoveDevices:(id)a0;
- (void)sendConnectionToCompanionIfPossible;
- (void)sendConnectionToCompanionIfPossible:(BOOL)a0;
- (void)sendConnectionUpdateToPeers;
- (void)sendMessage:(id)a0 toDevices:(id)a1 messagePriority:(unsigned long long)a2;
- (void)sendMessageToAllDevices:(id)a0 messagePriority:(unsigned long long)a1;
- (void)sendMessagesPriority:(unsigned long long)a0;
- (void)sendMessagesPriorityDefaultForClient:(id)a0;
- (void)sendMessagesPriorityHighForClient:(id)a0;
- (void)sendStateMessage:(id)a0 toDevices:(id)a1 isUrgent:(BOOL)a2;
- (void)sendStateMessageToAllDevices:(id)a0 isUrgent:(BOOL)a1;
- (void)sendWrite:(id)a0 toDevices:(id)a1;
- (void)sendWriteToAllDevices:(id)a0;
- (void)setConnectionState:(long long)a0 forDevice:(id)a1;
- (void)setMessagePriority:(unsigned long long)a0 forDevice:(id)a1;
- (BOOL)shouldRelinquishConnectionForReason:(long long)a0;
- (void)shouldRequestAudioConnectionForCall:(BOOL)a0 withCompletion:(id /* block */)a1;
- (BOOL)shouldRoute:(BOOL)a0;
- (void)unregisterMediaNotifications;
- (void)updateProperty:(unsigned long long)a0 forDeviceID:(id)a1;
- (void)updateResponse:(id)a0 withState:(long long)a1;
- (BOOL)updateStateOnDeviceQueue;
- (id)urgentDevicesFromDevices:(id)a0;
- (void)validateResponse:(id)a0;
- (void)writeValue:(id)a0 forProperty:(unsigned long long)a1 andDeviceID:(id)a2;
- (void)writeValue:(id)a0 forProperty:(unsigned long long)a1 andDeviceID:(id)a2 toDevices:(id)a3;

@end

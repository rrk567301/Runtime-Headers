@class NSView, NSString, UINSSceneHostingView, NSTrackingArea, UINSEventTranslator, UINSGameEventTranslator, UINSSceneView, NSViewHost, UINSMouseEventTranslator, NSMutableSet, NSEvent;

@interface UINSInputView : NSView <NSTextInputClient, NSServicesMenuRequestor, UINSKeyboardEventHandler> {
    NSTrackingArea *_mouseTrackingArea;
    UINSEventTranslator *_eventTranslator;
    UINSMouseEventTranslator *_mouseEventTranslator;
    UINSGameEventTranslator *_gameEventTranslator;
    BOOL _trackingDragLocally;
    BOOL _gameControllerInputAlternativeActive;
    NSMutableSet *_currentlyHeldModifierKeyCodes;
    id _keyUpEventMonitor;
    id _keyFocusEventMonitor;
    NSEvent *_resentEvent;
    id _resignedKeyObserver;
    BOOL _performingKeyEquivalent;
    BOOL _waitingForMaybeDidBecomeFirstResponder;
    NSView *_fallbackKeyViewIfNotHandledByFocusSystem;
    NSEvent *_lastSeenEventInChooseNewKeyViewWithDirection;
}

@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } screenRect;
@property (weak, nonatomic) UINSSceneView *sceneView;
@property (weak, nonatomic, setter=_setHostedView:) NSViewHost *_hostedView;
@property (weak, nonatomic, setter=_setSceneHostingView:) UINSSceneHostingView *_sceneHostingView;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } unionRectInVisibleSelectedRange;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } documentVisibleRect;
@property (readonly) BOOL supportsAdaptiveImageGlyph;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (BOOL)validateMenuItem:(id)a0;
- (void)unmarkText;
- (void)uppercaseWord:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })markedRange;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectedRange;
- (void)mouseDown:(id)a0;
- (void)mouseUp:(id)a0;
- (BOOL)hasMarkedText;
- (BOOL)isOpaque;
- (void)lowercaseWord:(id)a0;
- (void)mouseDragged:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)keyDown:(id)a0;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)doCommandBySelector:(SEL)a0;
- (unsigned long long)characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)capitalizeWord:(id)a0;
- (void)viewDidMoveToWindow;
- (id)initWithCoder:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void).cxx_destruct;
- (void)deleteBackward:(id)a0;
- (void)moveUp:(id)a0;
- (void)rightMouseDown:(id)a0;
- (void)scrollPageDown:(id)a0;
- (void)showGuessPanel:(id)a0;
- (void)toggleAutomaticTextReplacement:(id)a0;
- (id)_hostedFirstResponder;
- (BOOL)_isNSTextInputContextiOSMacClient;
- (id)_responderDebugAdditionalItemsForAction:(SEL)a0 withSender:(id)a1;
- (double)_scaleFactor;
- (void)_searchWithGoogleFromMenu:(id)a0;
- (BOOL)_supportsWritingTools;
- (BOOL)acceptsFirstMouse:(id)a0;
- (BOOL)acceptsFirstResponder;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityFocusRingMaskBounds;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (void)addLinksInSelection:(id)a0;
- (id)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)changeAttributes:(id)a0;
- (void)changeColor:(id)a0;
- (void)changeFont:(id)a0;
- (void)checkSpelling:(id)a0;
- (void)clearWritingToolsAffordance;
- (void)convertToFullWidth:(id)a0;
- (void)convertToHalfWidth:(id)a0;
- (void)convertToSimplifiedChinese:(id)a0;
- (void)convertToTraditionalChinese:(id)a0;
- (id)designatedFocusRingView;
- (void)discardMarkedText;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)flagsChanged:(id)a0;
- (unsigned long long)focusRingType;
- (BOOL)hasCorrectionIndicatorUnderlines;
- (BOOL)hasCorrectionPanels;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)keyUp:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (void)mouseMoved:(id)a0;
- (void)moveDown:(id)a0;
- (void)moveLeft:(id)a0;
- (void)moveRight:(id)a0;
- (void)orderFrontSubstitutionsPanel:(id)a0;
- (void)performClick:(id)a0;
- (BOOL)performKeyEquivalent:(id)a0;
- (void)pressureChangeWithEvent:(id)a0;
- (void)quickLookWithEvent:(id)a0;
- (BOOL)readSelectionFromPasteboard:(id)a0;
- (void)replaceDashesInSelection:(id)a0;
- (void)replaceQuotesInSelection:(id)a0;
- (void)replaceTextInSelection:(id)a0;
- (void)rightMouseDragged:(id)a0;
- (void)rightMouseUp:(id)a0;
- (void)rotateWithEvent:(id)a0;
- (void)scrollPageUp:(id)a0;
- (void)scrollToBeginningOfDocument:(id)a0;
- (void)scrollToEndOfDocument:(id)a0;
- (void)scrollWheel:(id)a0;
- (void)selectNextKeyView:(id)a0;
- (void)selectPreviousKeyView:(id)a0;
- (void)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)showWritingTools:(id)a0;
- (void)startSpeaking:(id)a0;
- (void)stopSpeaking:(id)a0;
- (id)supplementalTargetForAction:(SEL)a0 sender:(id)a1;
- (void)tabletPoint:(id)a0;
- (void)toggleAutomaticDashSubstitution:(id)a0;
- (void)toggleAutomaticLinkDetection:(id)a0;
- (void)toggleAutomaticQuoteSubstitution:(id)a0;
- (void)toggleAutomaticSpellingCorrection:(id)a0;
- (void)toggleContinuousSpellChecking:(id)a0;
- (void)toggleGrammarChecking:(id)a0;
- (void)touchesBeganWithEvent:(id)a0;
- (void)touchesCancelledWithEvent:(id)a0;
- (void)touchesEndedWithEvent:(id)a0;
- (void)touchesMovedWithEvent:(id)a0;
- (void)translateWithEvent:(id)a0;
- (void)updateWritingToolsAffordance;
- (void)userDefaultsChanged;
- (id)validAttributesForMarkedText;
- (id)validRequestorForSendType:(id)a0 returnType:(id)a1;
- (BOOL)wantsRestingTouches;
- (long long)windowLevel;
- (BOOL)writeSelectionToPasteboard:(id)a0 types:(id)a1;
- (BOOL)_chooseNewKeyViewWithDirection:(unsigned long long)a0;
- (void)_consumeMouseEventsUntilMouseUp;
- (BOOL)_isResentEvent:(id)a0;
- (BOOL)performDefaultBehaviorForEvent:(id)a0;
- (id)uinsFontManager;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectFromUnitCoordinates:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)forwardPrepareForDragOperation:(id)a0;
- (BOOL)_areWeAppKitFirstResponder;
- (void)_cancelUnfinishedPhysicalKeyboardPresses;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectFromUIKitToAppKit:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_cropFirstLineRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_croppingFrameForWritingToolsInInputView;
- (void)_forwardKeyViewAction:(id)a0 direction:(unsigned long long)a1;
- (void)_forwardKeyboardAction:(id)a0 propagateUpHostResponderChain:(BOOL)a1;
- (BOOL)_handleEventByInputMethod:(id)a0;
- (void)_installMouseTracking;
- (BOOL)_isSpeaking;
- (BOOL)_isValidKeyView:(id)a0;
- (BOOL)_keyboardDelegateRequiresKeyEvents;
- (void)_maybeDidBecomeFirstResponder;
- (void)_maybeWillBecomeFirstResponder;
- (id)_prioritySupplementalTargetForAction:(SEL)a0 sender:(id)a1;
- (void)_reallyDidResignFirstResponder;
- (id)_responderProxyForAction:(SEL)a0 sender:(id)a1;
- (void)_scheduleShowWritingToolsAffordance;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectionRectForWritingTools:(id)a0;
- (BOOL)_sendKeyEvent:(id)a0 isDown:(BOOL)a1;
- (BOOL)_shouldExcludeEventFromInputContext:(id)a0;
- (BOOL)_validateMenuItemForWritingTools:(id)a0;
- (id)_writingToolsDelegateForResponder:(id)a0;
- (BOOL)acceptKeyViewHandoff:(BOOL)a0;
- (BOOL)cancelOutstandingUserInput;
- (struct CGPoint { double x0; double x1; })convertPointToUnitCoordinates:(struct CGPoint { double x0; double x1; })a0;
- (void)forwardDraggingEnded:(id)a0;
- (unsigned long long)forwardDraggingEntered:(id)a0;
- (void)forwardDraggingExited:(id)a0;
- (unsigned long long)forwardDraggingUpdated:(id)a0;
- (BOOL)forwardPerformDragOperation:(id)a0;
- (void)forwardUINSEventToAppKit:(id)a0;
- (BOOL)handleEventByInputContext:(id)a0;
- (BOOL)handleEventByInputMethod:(id)a0;
- (id)hostEnterExitEventWithType:(unsigned long long)a0 sceneLocation:(struct CGPoint { double x0; double x1; })a1;
- (id)hostEventsFromHIDEvent:(struct __IOHIDEvent { } *)a0;
- (void)refreshCorrectionIndicatorUnderlines;
- (void)refreshCorrectionPanels;
- (void)requestProofreadingSessionWithDelegate:(id)a0 sessionUUID:(id)a1 suggestionUUID:(id)a2 relativeToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 inView:(id)a4;
- (void)scheduleShowWritingToolsAffordance;
- (void)showTouchAlternativesOverlay:(id)a0;
- (void)updateWritingToolsPopoverTrackingIfNeeded;

@end

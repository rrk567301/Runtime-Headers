@class NSView, NSXPCInterface, NSString, NSUUID, CAContext, NSXPCConnection, NSRemoteViewMarshal, NSObject, NSMutableSet;
@protocol NSRemoteViewDelegate, BSInvalidatable;

@interface NSRemoteView : NSView <NSXPCListenerDelegate, NSVBXPCConnectionClient, HasAuxiliaryConnection, AuxiliaryCallsHost, _NSAlertSensitiveView> {
    NSRemoteViewMarshal *_rvm;
    unsigned int _trackingLoopDepth;
    struct NSEdgeInsets { double top; double left; double bottom; double right; } _mostRecentlySentSafeAreaInsets;
    unsigned int _observingChangesToSafeAreaInsets;
    unsigned int _fence;
    unsigned char _sheetCanceled : 1;
    unsigned char _didRetreatToConfigPhase : 1;
    struct { unsigned int val[8]; } _mostRecentViewServiceAuditToken;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _mostRecentViewServiceAuditTokenLock;
    id<BSInvalidatable> _deferralFromContainingWindowToRemoteView;
    id<BSInvalidatable> _deferralFromKeyTestWindowToRemoteView;
    id<BSInvalidatable> _deferralFromRemoteViewToService;
    id<BSInvalidatable> _deferralToParticularWindow;
    NSMutableSet *_restrictedEventDescriptors;
}

@property (readonly, nonatomic) NSRemoteView *spawnedBy;
@property (readonly) struct CGPoint { double x0; double x1; } requestedOrigin;
@property NSObject<NSRemoteViewDelegate> *delegate;
@property (retain) NSView *accessoryView;
@property (readonly) BOOL isValid;
@property (copy, nonatomic) NSString *serviceName;
@property (retain, nonatomic) NSUUID *serviceInstanceIdentifier;
@property (copy, nonatomic) NSString *serviceSubclassName;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) CAContext *fenceContext;
@property (readonly, nonatomic) NSXPCInterface *auxiliaryInterfaceOutgoing;
@property (readonly, nonatomic) NSXPCInterface *auxiliaryInterfaceIncoming;
@property (weak) NSXPCConnection *auxiliaryServiceConnection;
@property (readonly) BOOL wantsAlertStylePadding;

+ (void)initialize;
+ (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
+ (struct __CFString { } *)privateRunLoopMode;
+ (id)_findFirstKeyViewInDirection:(unsigned long long)a0 forKeyLoopGroupingView:(id)a1;
+ (void)_menuDidBeginTracking:(id)a0;
+ (void)_menuDidEndTracking:(id)a0;
+ (BOOL)automaticallyNotifiesObserversOfTouchBar;
+ (void)initAll;
+ (void)ensureAuxServiceAwareOfHostApp:(Class)a0;
+ (BOOL)_appModalSessionWouldBeSafe:(BOOL)a0;
+ (id)_remoteViewForIdentifier:(id)a0;
+ (BOOL)allowSetObjectForKey:(id)a0 bridge:(id)a1 bridgePhase:(unsigned char)a2 withReply:(id /* block */)a3;
+ (BOOL)anyRemoteViewAttachedToWindow:(id)a0;
+ (BOOL)classIsRendezvousWindow:(Class)a0;
+ (void)deferBlockOntoMainThread:(id /* block */)a0;
+ (id)deferKeyboardEventsFrom:(id)a0 to:(id)a1 inProcess:(int)a2 forReason:(id)a3;
+ (id)deferKeyboardEventsFrom:(id)a0 to:(id)a1 restrictedToEventDescriptors:(id)a2 inProcess:(int)a3 forReason:(id)a4;
+ (id)endAppModalSession:(id)a0;
+ (void)initializeOnAppKitThread;
+ (void)invalidateAndReleaseDeferral:(id *)a0 forReason:(id)a1;
+ (BOOL)isFakeEvent:(id)a0;
+ (id)keyWindowDeferralToken;
+ (void)observeMenuTracking;
+ (void)reconsiderRootDeferral:(id)a0;
+ (id)remoteViewsAttachedToWindow:(id)a0;
+ (void)rendezvousWindow:(const struct { BOOL x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; id x2; unsigned char x3; id x4; unsigned char x5; unsigned long long x6; id x7; } *)a0 completion:(id /* block */)a1;
+ (Class)rendezvousWindowClass:(Class)a0;
+ (BOOL)shouldEnsureAuxServiceAwareOfHostAppDueToInitialize;
+ (void)withDeliveryManagerTransactionReason:(id)a0 performActions:(id /* block */)a1;

- (void)_setDelegate:(id)a0;
- (id)touchBar;
- (void)cancel:(id)a0;
- (id)accessoryView;
- (void)mouseDown:(id)a0;
- (void)mouseUp:(id)a0;
- (struct CGImage { } *)snapshot;
- (void)viewWillMoveToWindow:(id)a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)addSubview:(id)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)connection:(id)a0 handleInvocation:(id)a1 isReply:(BOOL)a2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (id)bridge;
- (BOOL)valid;
- (BOOL)resignFirstResponder;
- (void)invalidate;
- (void)setExtensionIdentifier:(id)a0;
- (void)setAccessoryView:(id)a0;
- (void)_invalidate;
- (id)retain;
- (BOOL)becomeFirstResponder;
- (BOOL)invalid;
- (void)viewDidMoveToWindow;
- (id)initWithCoder:(id)a0;
- (oneway void)release;
- (void)viewDidMoveToSuperview;
- (void)viewDidChangeBackingProperties;
- (BOOL)hasBridge;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (id)extensionIdentifier;
- (void)viewDidChangeEffectiveAppearance;
- (void).cxx_destruct;
- (void)setHidden:(BOOL)a0;
- (id)NS_touchBars;
- (void)setFrameOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)_dragWindowRelativeToMouseDown:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_intelligenceCollectRemote;
- (void)_intelligenceCollectRemoteContentInVisibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 remoteContextWrapper:(id)a1;
- (void)_invalidateEffectiveVibrantBlendingStyle;
- (struct CGSRegionObject { } *)_regionForOpaqueDescendants:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forMove:(BOOL)a1 forUnderTitlebar:(BOOL)a2;
- (void)_setSuperview:(id)a0;
- (BOOL)_wantsKeyDownForEvent:(id)a0;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityChildren;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityChildrenInNavigationOrder;
- (id)accessibilityChildrenInNavigationOrderAttribute;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)accessibilityParentAttribute;
- (void)addSubview:(id)a0 positioned:(long long)a1 relativeTo:(id)a2;
- (BOOL)advanceToConfigPhaseIfNeeded:(id /* block */)a0;
- (BOOL)advanceToRunPhaseIfNeeded;
- (BOOL)advanceToRunPhaseIfNeeded:(id /* block */)a0;
- (void)cacheDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toBitmapImageRep:(id)a1;
- (void)cursorUpdate:(id)a0;
- (double)fauxSynchronousPatience;
- (void)mouseMoved:(id)a0;
- (BOOL)performKeyEquivalent:(id)a0;
- (void)renewGState;
- (void)replaceSubview:(id)a0 with:(id)a1;
- (id)serviceViewControllerProxy;
- (id)serviceViewControllerProxyWithErrorHandler:(id /* block */)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)setSubviews:(id)a0;
- (void)setTouchBar:(id)a0;
- (void)setTrustsServiceKeyEvents:(BOOL)a0;
- (id)supplementalTargetForAction:(SEL)a0 sender:(id)a1;
- (void)viewDidEndLiveResize;
- (void)viewDidHide;
- (void)viewDidUnhide;
- (void)viewWillStartLiveResize;
- (void)_adjustToServiceWindowStyleMask;
- (void)_forwardActionUpResponderChain:(id)a0;
- (BOOL)_shouldAdjustToServiceStyleMask;
- (id)serviceViewControllerIdentifier;
- (void)sheetCompleted:(id)a0;
- (void)__vbWithLockPerform:(id /* block */)a0;
- (id)_accessibilityChildren:(id)a0;
- (void)synchronizeAnimationsInActions:(id /* block */)a0;
- (id)_accessibilityParentToken:(id)a0;
- (id)_bridge;
- (unsigned long long)_filterStyleMask:(unsigned long long)a0 forWindowBase:(unsigned char)a1;
- (void)_remoteViewBecameFirstResponder;
- (id)auxiliaryClientListenerEndpoint;
- (struct CGSize { double x0; double x1; })serviceViewSize;
- (void)__vbSuperRelease;
- (void)_abortServiceTrackingLoop:(id)a0;
- (id)_accessibilityParentToken;
- (void)_addChildWindow:(id)a0 parameters:(const struct { long long x0; BOOL x1; BOOL x2; struct { unsigned long long x0; unsigned char x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; unsigned int x3; unsigned long long x4; } x3; } *)a1 listenerEndpoint:(id)a2 reply:(id /* block */)a3;
- (void)_addPotentialKeyFocusThief:(int)a0;
- (id)_adjustLoc:(struct CGPoint { double x0; double x1; } *)a0 forWindow:(id)a1 withAncestor:(id /* block */)a2;
- (void)_adjustToServiceWindowBecomingKey;
- (void)_adjustToServiceWindowKeyness;
- (void)_adjustToServiceWindowMinMaxSizes;
- (void)_adjustToServiceWindowResigningKey;
- (void)_adjustWindowBackgroundColor;
- (void)_adjustWindowBackgroundColor:(id)a0;
- (void)_advanceToConfigPhase:(id /* block */)a0;
- (void)_advanceToConfigPhaseLegacy;
- (void)_advanceToRunPhase:(id /* block */)a0;
- (BOOL)_advanceToRunPhaseLegacy;
- (void)_allowAuxiliaryAppNap:(id)a0;
- (void)_announceSubviewMutationDisallowed;
- (void)_assertObjectsOf:(id)a0 areKindOfClass:(Class)a1;
- (void)_associate;
- (id)_associateMouseAndMouseCursorPosition:(BOOL)a0;
- (BOOL)_associateWithHostWindow:(id)a0 withKeyness:(struct { BOOL x0; BOOL x1; })a1 isFirstResponder:(BOOL)a2 atLevel:(long long)a3 isFunctionRow:(BOOL)a4 withBlock:(id /* block */)a5;
- (void)_auxiliaryProxyWithSemaphore:(id)a0 attemptingTo:(const char *)a1 withCompletion:(id /* block */)a2;
- (void)_awaitInvalidation;
- (BOOL)_becameInvalidWhileFinishingAdvanceToConfigPhase:(const char *)a0;
- (void)_beginAppModalSession:(id)a0 parameters:(const struct { struct { unsigned long long x0; unsigned char x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; unsigned int x3; unsigned long long x4; } x0; } *)a1 listenerEndpoint:(id)a2 completion:(id /* block */)a3;
- (void)_beginDeferredSheets;
- (void)_beginDeferredSheetsWithoutCatch;
- (void)_beginSheet:(struct { BOOL x0; struct { unsigned long long x0; unsigned char x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; unsigned int x3; unsigned long long x4; } x1; })a0 childIdentifier:(id)a1 modalForWindow:(id)a2 listenerEndpoint:(id)a3 withReply:(id /* block */)a4;
- (void)_beginSheet:(id)a0 completion:(id /* block */)a1;
- (void)_beginTrackingLoop:(id)a0 reply:(id /* block */)a1;
- (void)_completeAdvanceToRunPhase:(id /* block */)a0 withError:(id)a1;
- (void)_completeFrameRequestWithError:(id)a0 transaction:(id)a1 andCompletion:(id /* block */)a2;
- (id)_concretizedAppAccentColor;
- (void)_configureAndRetainServiceMarshalConnection:(id)a0;
- (void)_configureTouchBar:(id)a0 perDescription:(id)a1;
- (void)_containingWindowOcclusionStateMayHaveChanged;
- (void)_copyViewServiceMarshalReply:(const struct { BOOL x0; BOOL x1; unsigned int x2; unsigned int x3; unsigned long long x4; long long x5; unsigned long long x6; struct CGSize { double x0; double x1; } x7; struct CGSize { double x0; double x1; } x8; struct CGSize { double x0; double x1; } x9; struct CGSize { double x0; double x1; } x10; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x11; unsigned int x12; id x13; } *)a0 withClientExportedObjectWithClientInterface:(id)a1 withClientExportedObjectWithAnimationSyncInterface:(id)a2;
- (BOOL)_decodeBoolean:(id)a0 inDescription:(id)a1;
- (void)_didSetOriginOrSize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_disassociate;
- (void)_disengageFromAllWindows;
- (id)_effectiveAppearanceAsData;
- (id)_elementsForTokens:(id)a0;
- (BOOL)_endAllSheets;
- (void)_endFence;
- (BOOL)_endSheet;
- (void)_endTrackingLoop:(id)a0 reply:(id /* block */)a1;
- (void)_ensureBridgeObserversForRendezvousWindow;
- (void)_ensureClientExportedInterface;
- (void)_ensureClientExportedObject;
- (void)_ensureViewServiceIsResponsive;
- (BOOL)_evaluateKeyness;
- (BOOL)_evaluateKeynessForWindow:(id)a0;
- (void)_expectWindowOrderingState:(int)a0 andAdvanceTo:(int)a1 caller:(const char *)a2;
- (void)_frameOfServiceWindowDidChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 windowBackgroundColor:(id)a1 reply:(id /* block */)a2;
- (BOOL)_hasFriendlyKeyFocusThief:(int)a0;
- (BOOL)_hasValidKeyViewInDirection:(unsigned long long)a0;
- (void)_hideTouchBarPopover:(id)a0;
- (void)_ifNecessaryReplaceTouchBar:(id)a0 escapeKeyReplacementItem:(id)a1;
- (void)_ifNecessaryReplaceTouchBars;
- (void)_informAuxServiceOfFrameInScreenCoords:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)_informAuxServiceOfMostRecentlyReportedFrameInScreenCoords:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_informAuxServiceOfSelf:(id /* block */)a0;
- (BOOL)_inhibitFirstResponder;
- (void)_invalidateChildWindows;
- (id)_invalidateDueToExceptionDuringIncomingIPC:(id)a0;
- (void)_invalidateTrackingLoop;
- (void)_invalidateWindowBridgeKeys;
- (void)_invalidateWithException:(id)a0;
- (BOOL)_isContentView;
- (BOOL)_isOrBecomingContentView;
- (void)_lastCallImpliedByAdvancingToPhase:(unsigned char)a0;
- (int)_maintainFirstResponder:(struct { unsigned long long x0; BOOL x1; BOOL x2; BOOL x3; })a0 inDirection:(unsigned long long)a1;
- (void)_maintainWindowNotifications:(BOOL)a0;
- (id)_mapPerProcessIdentifiers:(id)a0 of:(id)a1;
- (void)_notifyServiceOfChangeToHostOriginOrSize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (unsigned long long)_oldFirstResponderBeforeBecomingTextSelectionDirection;
- (id)_oldestAncestorWindow:(id)a0 adjustingLoc:(struct CGPoint { double x0; double x1; } *)a1;
- (void)_postSuperInit;
- (void)_preSuperInit;
- (void)_preventAuxiliaryAppNap:(id)a0;
- (void)_realizeChildQueueElement:(id)a0;
- (void)_realizeChildQueueElements;
- (void)_reconsiderAccessibilityParent;
- (void)_remoteViewBecameFirstResponder:(unsigned long long)a0 withIPC:(id /* block */)a1;
- (id)_remoteViewController;
- (void)_remoteViewDidMove;
- (void)_remoteViewMayHaveMoved;
- (void)_sendWindowFakeClick:(long long)a0 why:(const char *)a1;
- (BOOL)_serviceHasDebuggerAttached;
- (void)_serviceHasTouchBars:(id)a0;
- (id)_serviceProcessIdentifier;
- (void)_serviceRequestsFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 serviceWindowBackgroundColor:(id)a1 animate:(BOOL)a2 async:(BOOL)a3 transaction:(id)a4 completion:(id /* block */)a5;
- (void)_serviceRequestsResize:(struct CGSize { double x0; double x1; })a0 animate:(BOOL)a1 async:(BOOL)a2 completion:(id /* block */)a3;
- (void)_serviceRequestsResizeInProgress:(struct CGSize { double x0; double x1; })a0;
- (BOOL)_serviceValidatesAction:(id)a0 menuItem:(struct { BOOL x0; BOOL x1; } *)a1 userInterfaceItem:(struct { BOOL x0; BOOL x1; } *)a2 targetIdentifier:(id *)a3 sender:(id)a4;
- (void)_serviceViewReceivedLeftMouseDown:(long long)a0;
- (void)_serviceWindowHasDragRegion:(id)a0;
- (void)_serviceWindowKeynessChangeInProgress:(id /* block */)a0;
- (void)_serviceWindowReceivedScrollWheel:(id)a0 eventOwner:(unsigned int)a1;
- (void)_serviceWindowWouldActivate;
- (void)_setCursor:(id)a0;
- (void)_setServiceContextID:(unsigned int)a0;
- (void)_setServiceWindowEventMask:(unsigned long long)a0;
- (void)_setServiceWindowKeyness:(BOOL)a0;
- (void)_setServiceWindowStyleMask:(unsigned long long)a0;
- (void)_setTouchBar:(id)a0 description:(id)a1;
- (void)_setTouchBar:(id)a0 escapeKeyReplacementItem:(id)a1;
- (void)_setTouchBar:(id)a0 principalItemIdentifier:(id)a1;
- (void)_setTouchBarItem:(id)a0 itemPosition:(id)a1;
- (void)_setTouchBars:(id)a0;
- (void)_shakeContainingWindow;
- (BOOL)_shouldBecomeFirstResponder;
- (BOOL)_shouldImposeVibrancySupport:(id)a0;
- (BOOL)_shouldNotifyServiceOfChangeToHostOriginOrSize;
- (BOOL)_shouldSpelunkTouchBarsProactively;
- (void)_showTouchBarPopover:(id)a0 fromItem:(id)a1 withOverlayIdentifier:(id)a2 withCloseButton:(BOOL)a3 withControlStrip:(BOOL)a4 withOptions:(id)a5;
- (void)_signalAndClearLegacyAdvanceSemaphores;
- (struct CGImage { } *)_snapshot:(double *)a0;
- (void)_snapshotWithScale:(id /* block */)a0;
- (void)_startSpelunkingTouchBars;
- (void)_stopMonitoringEvents;
- (void)_synchronizeImplicitAnimationsInActions:(id /* block */)a0;
- (void)_terminateViewService;
- (id)_touchBars:(BOOL)a0;
- (id)_touchBarsDescription;
- (void)_updateAccessibilityConnection:(id)a0 force:(BOOL)a1 legend:(const char *)a2;
- (void)_updateAccessibilityConnection:(id)a0 legend:(const char *)a1 withReply:(id /* block */)a2;
- (void)_viewDidEndLiveResize;
- (id)_viewServiceMarshalProxy:(const char *)a0;
- (id)_viewServiceMarshalProxy:(const char *)a0 withErrorHandler:(id /* block */)a1;
- (BOOL)_viewServiceMaySetHostWindowLevel;
- (BOOL)_visibleToAccessibility;
- (BOOL)_waitOnSemaphore:(id)a0;
- (BOOL)_waitOnSemaphore:(id)a0 withPatience:(double)a1;
- (BOOL)_windowSupportsVibrancy:(id)a0;
- (id)_withoutCatchSupplementalTargetForAction:(SEL)a0 sender:(id)a1;
- (void)addChildWindow:(struct { long long x0; BOOL x1; BOOL x2; struct { unsigned long long x0; unsigned char x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; unsigned int x3; unsigned long long x4; } x3; })a0 identifier:(id)a1 listenerEndpoint:(id)a2 reply:(id /* block */)a3;
- (id)auxiliaryListenerEndpointForProtocol:(id)a0;
- (id)auxiliaryServiceListenerEndpoint;
- (void)beginAppModalSessionForWindow;
- (unsigned char)bridgePhase;
- (void)containingWindowDidChangeOcclusionState:(id)a0;
- (void)containingWindowDidMove:(id)a0;
- (void)containingWindowDidOrderOffScreen:(id)a0;
- (void)containingWindowDidOrderOnScreen:(id)a0;
- (void)containingWindowWillOrderOffScreen:(id)a0;
- (void)containingWindowWillOrderOnScreen:(id)a0;
- (void)didLoseKeyboardFocus;
- (void)didReleaseKeyboardFocus;
- (void)didStealKeyboardFocus;
- (void)enqueueChildWindow:(id)a0 parameters:(const struct { long long x0; BOOL x1; BOOL x2; struct { unsigned long long x0; unsigned char x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; unsigned int x3; unsigned long long x4; } x3; } *)a1 listenerEndpoint:(id)a2 reply:(id /* block */)a3;
- (void)ensureDeferredSheets;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameInScreenCoords;
- (void)frameOfServiceWindowDidChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 windowBackgroundColor:(id)a1 reply:(id /* block */)a2;
- (BOOL)hasAccessoryViewWhichCanBecomeKeyView;
- (void)hostWindowDidBecomeKey:(id)a0;
- (void)hostWindowDidResignKey:(id)a0;
- (void)invalidateTrackingArea;
- (id)keyTestWindow;
- (void)maintainAppWideNotifications:(BOOL)a0;
- (BOOL)maintainAssociation;
- (BOOL)maintainAssociationForcingDisassociation:(BOOL)a0;
- (void)maintainContainingWindowNotifications:(BOOL)a0;
- (void)maintainFirstResponderInProgress:(id /* block */)a0;
- (void)maintainKeyTestWindowNotifications:(BOOL)a0;
- (void)maintainProcessNotificationEventMonitor:(BOOL)a0;
- (void)maintainScrollViewSeparatorTrackingAdapterForWindow:(BOOL)a0;
- (void)maintainWindowEventMonitor:(unsigned int)a0;
- (void)potentialCommandEquivalentHitServiceApp:(id)a0 fullDispatch:(BOOL)a1 reply:(id /* block */)a2;
- (id)remoteViewControllerParametersForService;
- (void)remoteViewControllerProxy:(id /* block */)a0;
- (id)remoteViewIdentifier;
- (struct os_unfair_lock_s { unsigned int x0; } *)retainReleaseLock;
- (void)retreatToConfigPhase;
- (void)serviceAccessoryViewFrameChanged:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)serviceAccessoryViewIsFirstResponder:(BOOL)a0 inDirection:(unsigned long long)a1;
- (id)serviceListenerEndpoint;
- (id)serviceMarshalConnection;
- (id)serviceMarshalForRemoteViewWindow:(id)a0;
- (void)serviceRequestsFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 serviceWindowBackgroundColor:(id)a1 animate:(BOOL)a2 async:(BOOL)a3 transaction:(id)a4 completion:(id /* block */)a5;
- (id)serviceViewControllerProxy:(const char *)a0;
- (void)setRemoteAccessibilityChildrenTokens:(id)a0;
- (void)setRemoteViewControllerParametersForService:(id)a0;
- (void)setRendezvousWindowIdentifier:(id)a0;
- (void)setServiceListenerEndpoint:(id)a0;
- (void)setServiceObject:(id)a0 forKey:(id)a1;
- (void)setServiceViewControllerIdentifier:(id)a0;
- (void)setShouldMaskToBounds:(BOOL)a0;
- (void)setSynchronizesImplicitAnimations:(BOOL)a0;
- (void)setWantsAggressiveKeyboardFocusTheftCancellation:(BOOL)a0;
- (void)setWindow:(id)a0 styleMask:(unsigned long long)a1;
- (BOOL)shouldInformServiceOfKeynessChange:(id)a0;
- (BOOL)shouldMaskToBounds;
- (void)snapshot:(id /* block */)a0;
- (id)stolenKeyFocusEventFilter:(id)a0;
- (BOOL)synchronizesImplicitAnimations;
- (BOOL)trustsServiceKeyEvents;
- (void)updateAccessibilityChildren:(id)a0;
- (void)updateContentMinSize:(struct CGSize { double x0; double x1; })a0 contentMaxSize:(struct CGSize { double x0; double x1; })a1 frameMinSize:(struct CGSize { double x0; double x1; })a2 frameMaxSize:(struct CGSize { double x0; double x1; })a3;
- (struct { unsigned int x0[8]; })viewServiceAuditToken;
- (void)visualizeConstraints;
- (BOOL)wantsAggressiveKeyboardFocusTheftCancellation;
- (BOOL)wouldAssociate;
- (id)wrapProxyForAnimationFencing:(id)a0 withAnimationAttributesFor:(id)a1;

@end

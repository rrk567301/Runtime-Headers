@class NSVB_ViewServiceBehaviorProxy, NSObject, NSServiceViewController, NSMutableArray, NSResponder, NSLayoutConstraint, NSString, NSCFRunLoopObserver, NSViewBridge, NSWindow, NSArray, CAContext, NSXPCInterface, NSAccessibilityRemoteUIElement, NSXPCConnection;
@protocol OS_os_transaction, NSSecureCoding, NSObject;

@interface NSViewServiceMarshal : NSView <NSXPCListenerDelegate, AuxiliaryCallsService, BKSHIDEventDeliveryPolicyObserving, NSViewServiceMarshal, NSVBXPCConnectionClient> {
    NSString *_extensionIdentifier;
    struct CGSize { double width; double height; } _mostRecentlyReportedContentMinSize;
    struct CGSize { double width; double height; } _mostRecentlyReportedContentMaxSize;
    NSResponder *_suspendedFirstResponder;
    unsigned long long _clientRequestedStyleMask;
    unsigned long long _windowIsOrdering;
    struct CGSRegionObject { } *_windowResizingRegion;
    struct CGSRegionObject { } *_visibleRegion;
    NSXPCInterface *_clientExportedInterface;
    unsigned int _mostRecentlyReportedWindowContextID;
    NSVB_ViewServiceBehaviorProxy *_clientExportedObject;
    double _remoteViewBackingScaleFactor;
    NSLayoutConstraint *_layoutConstraintWidth;
    NSLayoutConstraint *_layoutConstraintHeight;
    id<NSObject> _activity;
    struct CGSize { double width; double height; } _sizeHint;
    NSViewBridge *_bridge;
    NSXPCConnection *_auxiliaryServiceConnection;
    NSXPCConnection *_remoteViewMarshalConnection;
    unsigned long long _advanceBeyondRunPhaseCount;
    unsigned long long _reportControllerWindow;
    unsigned long long _shortCircuitedWindowFrameAnimationsInProgress;
    unsigned long long _vbOrderingWindow;
    unsigned long long _setStyleMaskInProgress;
    unsigned long long _setWindowFrameInProgress;
    id /* block */ _hostWindowKeynessReactionPending;
    id /* block */ _remoteViewFirstResponderReactionPending;
    NSMutableArray *_resizeTransactionsInProgress;
    unsigned int _windowFrameAnimationsInProgress;
    unsigned char _windowKeyness;
    long long _windowOrderingMode;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _retainReleaseLock;
    const struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *_remoteViewGeometryChangeInProgress;
    unsigned int _eventMaskMostRecentlySentToHost;
    unsigned char _advancedBeyondConfigPhase : 1;
    unsigned char _deferResizeRequestsUntilAfterRunPhase : 1;
    unsigned char _didAwakeFromRemoteView : 1;
    unsigned char _didConfigForRemoteViewControllerInterface : 1;
    unsigned char _didSetView : 1;
    unsigned char _hasFauxSyncFrameRequestInProgress : 1;
    unsigned char _hadAccessibilityParent : 1;
    unsigned char _hasActivatedTSM : 1;
    unsigned char _hostInputMethodKitUsesXPC : 1;
    unsigned char _hostWindowFrameAnimationInProgress : 1;
    unsigned char _ultimateHostWindowIsKey : 1;
    unsigned char _hostWindowKeynessChangeInProgress : 1;
    unsigned char _invalid : 1;
    unsigned char _notificationsRegistered : 1;
    unsigned char _remoteFirstResponderChangeInProgress : 1;
    unsigned char _remoteViewIsContentView : 1;
    unsigned char _reportedLackOfAccessibilityParent : 1;
    unsigned char _resizeRequestCompletionInProgress : 1;
    unsigned char _settingFirstResponder : 1;
    unsigned char _shouldOrderWindowOut : 1;
    unsigned char _shouldReportConstraintsOfWindowMinMaxSize : 1;
    unsigned char _willReportConstraintsOfWindowMinMaxSize : 1;
    unsigned char _willUpdateAccessibilityChildren : 1;
    unsigned char _hostWindowIsFunctionRow : 1;
    NSCFRunLoopObserver *_touchBarsObserver;
    unsigned long long _scrollViewSeparatorTrackingAdapterIncumbent;
    NSWindow *_sheetOrderingFront;
    unsigned int _phasedKeyCount;
    unsigned char _ignoreMouseEventsUntilRunPhase : 1;
    int _eventDeliveryPolicy;
    NSResponder *_responderToPreserve;
    struct { unsigned int val[8]; } _mostRecentHostAppAuditToken;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _mostRecentHostAppAuditTokenLock;
}

@property (readonly) NSWindow *viewControllerWindow;
@property (readonly) BOOL isAssociatedWithHostWindow;
@property (nonatomic) unsigned char bridgePhase;
@property (retain) NSAccessibilityRemoteUIElement *hostAccessibilityParent;
@property (readonly) BOOL hostWindowKeynessChangeInProgress;
@property BOOL settingFirstResponder;
@property (retain) NSObject<OS_os_transaction> *keepAliveTransaction;
@property NSString *remoteViewSizeChangeTransaction;
@property (retain) NSMutableArray *scrollViewSeparatorTrackingAdapters;
@property (retain) NSArray *mostRecentlySentTouchBarsDescription;
@property (readonly) NSString *extensionIdentifier;
@property BOOL reportedLackOfAccessibilityParent;
@property BOOL hadAccessibilityParent;
@property BOOL ultimateHostWindowIsKey;
@property (readonly) BOOL remoteViewIsContentView;
@property (readonly) unsigned long long serviceFlags;
@property (readonly) NSServiceViewController *viewController;
@property (readonly) struct CGSize { double x0; double x1; } sizeHint;
@property (readonly) BOOL invalid;
@property (readonly) BOOL isValid;
@property (readonly) NSViewBridge *bridge;
@property (readonly) struct CGSize { double x0; double x1; } remoteViewSize;
@property struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } remoteViewFrameInScreenCoords;
@property (readonly) NSString *remoteViewIdentifier;
@property (readonly) unsigned int hostWindowID;
@property (retain) NSVB_ViewServiceBehaviorProxy *uiBehaviorProxy;
@property (readonly) struct NSEdgeInsets { double top; double left; double bottom; double right; } alignmentRectInsets;
@property (readonly) BOOL hostWindowFrameAnimationInProgress;
@property (readonly) BOOL remoteViewDidMoveInProgress;
@property (readonly) struct { unsigned int x0[8]; } hostAppAuditToken;
@property (readonly) NSObject<NSSecureCoding> *hostAppClientParameters;
@property (readonly) unsigned int declinedEventMask;
@property (readonly) BOOL hostWindowIsFunctionRow;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) CAContext *fenceContext;

+ (void)windowWillOrderOnScreen:(id)a0;
+ (id)_findFirstKeyViewInDirection:(unsigned long long)a0 forKeyLoopGroupingView:(id)a1;
+ (id)serviceMarshals;
+ (id)hostApp;
+ (id)serviceMarshalForServiceWindow:(id)a0;
+ (BOOL)allowSetObjectForKey:(id)a0 bridge:(id)a1 bridgePhase:(unsigned char)a2 withReply:(id /* block */)a3;
+ (BOOL)anyInstanceResumingSuspendedMessages;
+ (id)auxiliaryProxyFor:(const char *)a0 async:(BOOL)a1;
+ (BOOL)beginFreeWindowRendezvous:(id)a0;
+ (void)choseNotToRendezvous:(id)a0 because:(const char *)a1;
+ (BOOL)considerWindowForRendezvous:(id)a0;
+ (void)dequeuingEventInMode:(id)a0 untilDate:(id)a1 whileSendingEvent:(id)a2;
+ (void)doneSendingEvent:(id)a0;
+ (void)informHostsOfConnectionToService:(int)a0;
+ (void)logIfFirstRepsonderOf:(id)a0 isNot:(id)a1;
+ (struct { struct CGSize { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })minMaxContentSizeFromConstraintsOfWindow:(id)a0;
+ (void)patchNSCursor;
+ (void)patchNSMenu;
+ (void)patchNSView;
+ (void)patchNSWindow;
+ (short)requestUserInteractionWithPatience:(double)a0 options:(unsigned long long)a1 sender:(struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })a2;
+ (BOOL)responder:(id)a0 isFieldEditorFor:(id)a1;
+ (id)serviceMarshalForAppModalSession:(int)a0;
+ (id)serviceMarshalForHostWindow:(unsigned int)a0;
+ (id)serviceMarshalForRemoteViewIdentifier:(id)a0;
+ (id)serviceMarshalForTouchBarChanges;
+ (BOOL)serviceWindowWouldActivate:(id)a0;
+ (void)setEnhancedUserInterfaceAttribute:(id)a0;
+ (id)viewBridgeAuxiliaryProxyForConnection:(id)a0 withErrorHandler:(id /* block */)a1;
+ (BOOL)whenWindow:(id)a0 isAssociatedWithRemoteViewPerform:(id /* block */)a1;
+ (void)windowDidOrderOnScreenAndFinishAnimating:(id)a0;
+ (struct { BOOL x0; BOOL x1; })windowKeyness:(id)a0;

- (void)setCursor:(id)a0;
- (id)window;
- (void)connection:(id)a0 handleInvocation:(id)a1 isReply:(BOOL)a2;
- (void)dealloc;
- (id)initWithConnection:(id)a0;
- (void)invalidate;
- (id)retain;
- (oneway void)release;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (BOOL)_ignoreBadFirstResponders;
- (void)addChildWindow:(id)a0 ordered:(long long)a1;
- (BOOL)canBecomeKeyView;
- (void)removeChildWindow:(id)a0;
- (void)beginHostAppModalSession:(id)a0 parameters:(const struct { struct { unsigned long long x0; unsigned char x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; unsigned int x3; unsigned long long x4; } x0; } *)a1 title:(id)a2 style:(unsigned long long)a3 size:(struct CGSize { double x0; double x1; })a4 withReply:(id /* block */)a5;
- (BOOL)dragWindow:(id)a0 relativeToMouseDown:(struct CGPoint { double x0; double x1; })a1;
- (void)maintainNotificationsForWindow:(BOOL)a0;
- (unsigned char)setFirstResponderForRemoteView:(unsigned long long)a0;
- (void)__vbWithLockPerform:(id /* block */)a0;
- (void)wrap:(id)a0 sendEvent:(id)a1;
- (void)declineKeyboardEventsOtherThan:(id)a0;
- (void)resignFirstResponderIfNecessary;
- (void)__vbSuperRelease;
- (void)_addChildWindow:(id)a0 ordered:(long long)a1;
- (void)_bootstrap:(const struct { id x0; id x1; id x2; id x3; id x4; double x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; unsigned long long x7; unsigned int x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; id x13; BOOL x14; } *)a0 replyData:(id)a1 completion:(id /* block */)a2;
- (id)_invalidateDueToExceptionDuringIncomingIPC:(id)a0;
- (void)_orderWindow:(id)a0 mode:(long long)a1 relativeTo:(long long)a2;
- (void)_remoteViewDidChangeState:(unsigned char)a0 ofPopoverBar:(id)a1 forItem:(id)a2;
- (struct CGSize { double x0; double x1; })_remoteViewGeometryDidChange:(id)a0 oldRemoteViewFrameSize:(struct CGSize { double x0; double x1; })a1;
- (void)_runCommandEquivalentEventLoop;
- (void)_serviceWindowDidBecomeKey:(id)a0;
- (void)_serviceWindowDidResignKey:(id)a0;
- (void)_serviceWindowDidResize:(id)a0;
- (void)_willBecomeAssociatedWithHostWindow:(unsigned int)a0 atLevel:(long long)a1 isFunctionRow:(BOOL)a2;
- (void)abortTrackingLoop:(id)a0;
- (id)accessibilityTokenForFocusedUIElement;
- (void)accessibilityTokenForFocusedUIElement:(id /* block */)a0;
- (void)acquireKeyAppearanceBecause:(const char *)a0;
- (void)acquireKeyboardFocus:(const char *)a0;
- (BOOL)activateTSM:(const char *)a0;
- (void)actualFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 differsFromSpecifiedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 oldFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 ofWindow:(id)a3;
- (void)actualOrigin:(struct CGPoint { double x0; double x1; })a0 differsFromSpecifiedOrigin:(struct CGPoint { double x0; double x1; })a1 oldOrigin:(struct CGPoint { double x0; double x1; })a2 ofWindow:(id)a3;
- (void)actualSize:(struct CGSize { double x0; double x1; })a0 differsFromSpecifiedSize:(struct CGSize { double x0; double x1; })a1 oldSize:(struct CGSize { double x0; double x1; })a2 ofWindow:(id)a3;
- (void)adjustWindowContext;
- (BOOL)advanceToRunPhase;
- (void)advanceToRunPhase:(id /* block */)a0;
- (void)afterResignKey;
- (void)allowAppNap:(BOOL)a0;
- (void)allowKeyboardEvents:(BOOL)a0;
- (BOOL)animateWindow:(id)a0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)associateMouseAndMouseCursorPosition:(BOOL)a0 completion:(id /* block */)a1;
- (double)backingScaleFactor:(id)a0;
- (void)becomeKeyBecause:(const char *)a0;
- (void)becomeKeyWindow:(id)a0;
- (void)beginHostSheet:(id)a0 isCritical:(BOOL)a1 completion:(id /* block */)a2;
- (void)beginTrackingLoop:(id)a0;
- (void)bootstrap:(struct { id x0; id x1; id x2; id x3; id x4; double x5; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x6; unsigned long long x7; unsigned int x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; id x13; BOOL x14; })a0 withReply:(id /* block */)a1;
- (void)builtForPlatform:(unsigned int)a0 againstMinimumSDK:(unsigned int)a1 reply:(id /* block */)a2;
- (void)cacheHostAccessibilityParentUsingToken:(id)a0;
- (BOOL)cancelActionHitRemoteView;
- (void)cancelActionHitRemoteView:(id /* block */)a0;
- (BOOL)changeWindowFrameFromConstraintsIfNecessary;
- (void)checkResponsiveness:(unsigned int)a0 reply:(id /* block */)a1;
- (void)completeWithError:(id)a0 andRequestedFrameSize:(struct CGSize { double x0; double x1; })a1 withRemoteViewSize:(struct CGSize { double x0; double x1; })a2 andWindow:(id)a3;
- (id)concretizedWindowBackgroundColor;
- (id)connectToAuxiliaryServiceWithWindow:(unsigned int)a0;
- (void)considerChildWindowsOfWindow:(id)a0;
- (void)constrainContentViewSize:(struct CGSize { double x0; double x1; })a0 ofWindow:(id)a1;
- (BOOL)deactivateTSM:(const char *)a0;
- (void)defaultResizeBehavior;
- (void)deliveryPolicyObserver:(id)a0 policyDidChange:(id)a1;
- (void)didBecomeAssociatedWithHostWindow:(unsigned int)a0 withKeyness:(struct { BOOL x0; BOOL x1; })a1 isFirstResponder:(BOOL)a2 inActiveApp:(BOOL)a3;
- (void)didLoseKeyboardFocus;
- (void)didReleaseKeyboardFocus;
- (void)didSetView;
- (void)didStealKeyboardFocus;
- (void)disengageFromAllWindows;
- (void)electScrollViewSeparatorTrackingAdapterForWindow:(id)a0;
- (void)endHostAppModalSession:(id)a0;
- (void)endHostSheet;
- (void)endTrackingLoop:(id)a0;
- (BOOL)ensureClientExportedInterface;
- (BOOL)ensureClientExportedObject;
- (BOOL)ensureWindow:(id)a0 hasCorrectOrigin:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)ensureWindowHasCorrectOrigin:(id)a0;
- (void)evaluateKeynessOfRemoteViews;
- (BOOL)eventResizingRegionContainsPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)exchangeAccessibilityTokens:(id)a0 enhancedUserInterface:(id)a1;
- (void)exchangeAccessibilityTokens:(id)a0 enhancedUserInterface:(id)a1 withReply:(id /* block */)a2;
- (void)failedImplicitResize:(struct CGSize { double x0; double x1; })a0 ofWindow:(id)a1 withError:(id)a2;
- (id)fakeMenuItemForTarget:(id)a0 withAction:(SEL)a1;
- (struct { id x0; SEL x1; id x2; })findTargetAndAction:(id)a0;
- (void)forgetConstraints;
- (void)forgetViewController:(id)a0;
- (void)forwardActionUpHostResponderChain:(SEL)a0;
- (void)forwardPotentialCommandEquivalent:(id)a0 eventDeliveredByAppKit:(BOOL)a1 fullDispatch:(BOOL)a2 reply:(id /* block */)a3;
- (void)frameOfServiceWindowDidChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 reply:(id /* block */)a1;
- (id)giveWindowOpportunityToEstablishMeaningfulFirstResponder;
- (void)handlePotentialCommandEquivalent:(id)a0 reply:(id /* block */)a1;
- (void)hasTouchBars:(id)a0;
- (void)hideTouchBarPopover:(id)a0;
- (void)hierarchyDidChangeInView:(id)a0;
- (void)hostAppAccentColorDidChange:(id)a0;
- (int)hostAppProcessIdentifier;
- (void)hostBuiltForPlatform:(unsigned int)a0 againstMinimumSDK:(unsigned int)a1 reply:(id /* block */)a2;
- (void)hostWindowBecameKey:(struct { BOOL x0; BOOL x1; })a0 inActiveApp:(BOOL)a1 firstResponderState:(unsigned char)a2 isContentView:(BOOL)a3;
- (void)hostWindowChangedKeyness:(id /* block */)a0;
- (BOOL)hostWindowIsKey:(id)a0;
- (void)hostWindowLevelDidChange:(long long)a0;
- (int)hostWindowModalSessionStatus:(id)a0;
- (void)hostWindowReceivedEventType:(unsigned long long)a0;
- (void)hostWindowReceivedMouseEventType:(unsigned long long)a0;
- (void)hostWindowResignedKey:(BOOL)a0;
- (void)hostWindowResignedKey:(struct { BOOL x0; BOOL x1; })a0 focusOnly:(BOOL)a1 inActiveApp:(BOOL)a2 isContentView:(BOOL)a3;
- (void)implicitResize:(struct CGSize { double x0; double x1; })a0 ofWindow:(id)a1;
- (void)informHostOfConnectionToService:(int)a0;
- (void)informHostOfContentMinSize:(struct CGSize { double x0; double x1; })a0 contentMaxSize:(struct CGSize { double x0; double x1; })a1;
- (void)informHostOfFirstResponder:(id)a0 forWindow:(id)a1 inDirection:(unsigned long long)a2;
- (void)informRemoteViewOfScrollViewSeparatorTrackingAdapterWithScrolledContentsUnderTitlebar:(id)a0;
- (void)intelligenceCollectRemoteContext:(id)a0 visibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)invalidateOnMainThread:(id)a0;
- (void)invokeBlock:(id /* block */)a0;
- (void)invokeBlockViaFenceProxyIfAny:(id /* block */)a0;
- (BOOL)isRunningADocModalAttachedSheet:(id)a0;
- (BOOL)makeFirstResponder:(id)a0 ofWindow:(id)a1;
- (void)observeValueForContentMaxSize:(id)a0;
- (void)observeValueForContentMinSize:(id)a0;
- (void)observeValueForContentView:(id)a0;
- (void)observeValueForFirstResponder:(id)a0;
- (void)observeValueForHasScrolledContentsUnderTitlebar:(id)a0 ofScrollViewSeparatorTrackingAdapter:(id)a1;
- (void)observeValueForScrollViewFrame:(id)a0 ofScrollViewSeparatorTrackingAdapter:(id)a1;
- (void)observeValueForScrollViewSeparatorTrackingAdapter:(id)a0 ofAdapter:(id)a1 change:(id)a2 context:(void *)a3;
- (void)observeValueForWindow:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)obtainFirstResponderState:(id /* block */)a0;
- (void)orderWindow:(id)a0 options:(id)a1;
- (void)orderWindowOutIfNeeded:(id)a0;
- (id)orderedDrawerAndWindowKeyLoopGroupingViews:(id)a0;
- (void)performAction:(id)a0 forTarget:(id)a1;
- (void)prepareServiceAccessoryView:(unsigned int)a0;
- (void)prepareWindow:(id)a0;
- (void)refreshAccessibilityParentOfNestedViewService;
- (void)registerBridgeKey:(id)a0 defaultObject:(id)a1 owner:(unsigned char)a2;
- (void)registerScrollViewSeparatorTrackingAdapter:(id)a0 forWindow:(id)a1;
- (void)relinquishKeyboardFocus:(const char *)a0;
- (void)remoteViewBackingScaleFactorDidChange:(double)a0;
- (void)remoteViewBecameFirstResponder:(unsigned long long)a0 forWindowsWithKeyness:(struct { BOOL x0; BOOL x1; })a1 inActiveApp:(BOOL)a2 inVisibleWindow:(BOOL)a3 reply:(id /* block */)a4;
- (unsigned char)remoteViewBecameFirstResponder:(unsigned long long)a0 forWindowsWithKeyness:(struct { BOOL x0; BOOL x1; })a1 inVisibleWindow:(BOOL)a2 because:(id)a3;
- (void)remoteViewCaresAboutTouchBars:(BOOL)a0;
- (void)remoteViewChangedFirstResponder:(id /* block */)a0;
- (void)remoteViewContainingWindowOcclusionStateDidChange:(unsigned long long)a0;
- (void)remoteViewControllerProxy:(id /* block */)a0;
- (void)remoteViewDidChangeState:(unsigned char)a0 ofPopoverBar:(id)a1 forItem:(id)a2;
- (void)remoteViewDidEndLiveResize:(id /* block */)a0;
- (void)remoteViewGeometryDidChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 transaction:(id)a1 withReply:(id /* block */)a2;
- (struct CGSize { double x0; double x1; })remoteViewGeometryDidChangeDueToTransaction:(id)a0 oldRemoteViewFrameSize:(struct CGSize { double x0; double x1; })a1;
- (void)remoteViewHasHostAppAccentColor:(id)a0;
- (void)remoteViewIsContentView:(BOOL)a0;
- (id)remoteViewMarshal:(const char *)a0;
- (id)remoteViewMarshal:(const char *)a0 withErrorHandler:(id /* block */)a1;
- (void)remoteViewReceivedLeftMouseDown:(long long)a0;
- (void)remoteViewResignedFirstResponder;
- (void)remoteViewResignedFirstResponderInActiveApp:(BOOL)a0;
- (void)remoteViewSafeAreaInsetsDidChange:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (void)remoteViewWillStartLiveResize;
- (void)reportingControllerWindow:(id /* block */)a0;
- (void)requestFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 transaction:(id)a1 animate:(BOOL)a2 async:(BOOL)a3 completion:(id /* block */)a4;
- (void)resignKeyWindow:(id)a0;
- (struct os_unfair_lock_s { unsigned int x0; } *)retainReleaseLock;
- (void)retreatToConfigPhase;
- (void)runCommandEquivalentEventLoop;
- (BOOL)scrollViewSeparatorTrackingAdapter:(id)a0 qualifiesForWindow:(id)a1;
- (void)secondGuessingRequestedOrigin:(struct CGPoint { double x0; double x1; })a0 whichDeviatesFromCorrectOrigin:(struct CGPoint { double x0; double x1; })a1 ofWindow:(id)a2;
- (id)semaphoreForViewBridgePrivateMode;
- (BOOL)sendEvent:(id)a0 to:(id)a1;
- (void)sendMinMaxWindowSizesToHostIfNeeded:(id)a0;
- (void)sendMinMaxWindowSizesToHostIfNeeded:(id)a0 now:(BOOL)a1;
- (void)serviceWindowDidBecomeKey;
- (void)serviceWindowDidResignKey;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })serviceWindowFrameForRemoteViewFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })serviceWindowFrameForRemoteViewFrameWithOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)serviceWindowWouldActivate;
- (BOOL)setAppearanceOfWindow:(id)a0;
- (void)setEventMaskBasedOnWindow:(id)a0;
- (void)setHostObject:(id)a0 forKey:(id)a1;
- (void)setHostTouchBar:(id)a0 description:(id)a1;
- (void)setHostTouchBar:(id)a0 escapeKeyReplacementItem:(id)a1;
- (void)setHostTouchBar:(id)a0 principalItemIdentifier:(id)a1;
- (void)setHostTouchBarItem:(id)a0 itemPosition:(id)a1;
- (void)setRemoteViewEffectiveAppearance:(id)a0;
- (void)setServiceObject:(id)a0 forKey:(id)a1;
- (void)setValidatesSecurityOfSuperlayers:(BOOL)a0 onWindow:(id)a1;
- (void)setViewVibrantBlendingStyle:(unsigned long long)a0;
- (BOOL)setWindow:(id)a0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 display:(BOOL)a2 stashSize:(BOOL)a3;
- (void)setWindow:(id)a0 styleMask:(unsigned long long)a1;
- (void)shakeWindow:(id)a0;
- (BOOL)sharesFirstResponderWithAnyChild;
- (BOOL)shouldAllowAnimationForDefaultResizeBehavior;
- (BOOL)shouldDrawSubviewsIntoLayer;
- (void)showTouchBarPopover:(id)a0 fromItem:(id)a1 withOverlayIdentifier:(id)a2 withCloseButton:(BOOL)a3 withControlStrip:(BOOL)a4 withOptions:(id)a5;
- (void)snapshot:(id /* block */)a0;
- (BOOL)stopCommandEquivalentEventLoop;
- (void)subvertedWindowMovedEvent:(id)a0 forWindow:(id)a1;
- (void)unregisterScrollViewSeparatorTrackingAdapter:(id)a0 forWindow:(id)a1;
- (void)updateAccessoryViewAccessibility:(id)a0 enhancedUserInterface:(id)a1 withReply:(id /* block */)a2;
- (void)updateWindow:(id)a0 frameAnimationStatusAfterActions:(id /* block */)a1;
- (void)validateAction:(id)a0 withReply:(id /* block */)a1;
- (BOOL)validateTargetAndAction:(struct { id x0; SEL x1; id x2; } *)a0 validateMenuItem:(struct { BOOL x0; BOOL x1; } *)a1 validateUserInterfaceItem:(struct { BOOL x0; BOOL x1; } *)a2;
- (id)viewBridgeAuxiliaryProxyWithErrorHandler:(id /* block */)a0;
- (void)viewDidChangeEffectiveAppearance:(id)a0;
- (void)visualizeConstraints;
- (void)whileContainedRemoteViewSetsCursorPerform:(id /* block */)a0;
- (void)whileFilteringResponderChain:(id /* block */)a0;
- (void)whileOrderingSheetFront:(id)a0 withParent:(id)a1 performActions:(id /* block */)a2;
- (void)whileOrderingWindow:(id)a0 perform:(id /* block */)a1;
- (void)willBecomeAssociatedWithHostWindow:(unsigned int)a0 atLevel:(long long)a1 isFunctionRow:(BOOL)a2;
- (void)willNotRequestResize:(struct CGSize { double x0; double x1; })a0 ofWindow:(id)a1 because:(const char *)a2;
- (void)window:(id)a0 hasRegionForOpaqueViews:(struct CGSRegionObject { } *)a1 blockingDraggableFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)windowForContextID:(unsigned int)a0 reply:(id /* block */)a1;
- (BOOL)windowIsOrderingIn;
- (void)windowReceivedLeftMouseDown:(id)a0;
- (void)windowReceivedScrollWheel:(id)a0;
- (void)withHostWindowFrameAnimationInProgress:(BOOL)a0 perform:(id /* block */)a1;
- (void)withResumingSuspendedMessagesInProgress:(id /* block */)a0;
- (void)wrap:(id)a0 swizzledSetFrameCommon:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 display:(BOOL)a2 stashSize:(BOOL)a3;

@end

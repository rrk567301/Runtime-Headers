@class NSEvent, NSMutableArray;

@interface NSViewServiceApplication : NSApplication <NSServiceViewControllerActionResponder> {
    NSMutableArray *_exceptionQueue;
    NSEvent *_eventWhichHasHitAppButNotWindow;
    NSEvent *_sendingEvent;
}

+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (id)bundleForClass;
+ (void)cacheFakeEvent:(id)a0;
+ (id)commonBootstrap;
+ (void)addHostPID:(int)a0;
+ (BOOL)appModalSessionInProgressForAnyHostOtherThan:(struct { unsigned int x0[8]; })a0;
+ (BOOL)appModalSessionsOutlawed;
+ (struct _NSModalSession { } *)beginServiceAppModalSessionForWindow:(id)a0;
+ (BOOL)bootstrapForExtensionKitWithDelegate:(id)a0 error:(id *)a1;
+ (int)bootstrapKind;
+ (id)bootstrapSharedServiceListener;
+ (void)cacheMainBundleAsServiceBundle;
+ (BOOL)commonBootstrapForExtensionWithError:(id *)a0;
+ (BOOL)commonNamedFaults;
+ (void)doctorServiceBundleInfoDictionary:(id)a0;
+ (void)ensureNSApp;
+ (id)eventSending;
+ (int)firstHostPID;
+ (struct { unsigned int x0[8]; })fixedHostApp;
+ (BOOL)hasBootstrapKind:(int)a0;
+ (BOOL)isFakeEvent:(id)a0;
+ (void)learnHostPID;
+ (id)mungeStandardUserDefaults;
+ (void)obviateWindowAnimations;
+ (BOOL)requiresFixedHost;
+ (id)serviceConfiguration;
+ (void)setNewestFriendlyThief:(int)a0;
+ (void)validateXpcBundleInfoDictionary:(id)a0;
+ (void)whileWindow:(id)a0 beginsAppModalSessionPerform:(id /* block */)a1;
+ (BOOL)windowIsBeginningAppModalSession:(id)a0;

- (void)sendEvent:(id)a0;
- (void)dealloc;
- (void)finishLaunching;
- (void)_addWindow:(id)a0;
- (BOOL)_globalCanQuietAndSafeQuit;
- (BOOL)_handleHotKeyPressed:(id)a0;
- (BOOL)_handleHotKeyRelease:(id)a0;
- (BOOL)_handleKeyEquivalent:(id)a0;
- (BOOL)_handleSymbolicHotKey:(id)a0;
- (void)_modalSession:(struct _NSModalSession { } *)a0 sendEvent:(id)a1;
- (void)_registerRequiredAEHandlers;
- (int)_releaseKeyFocus;
- (BOOL)_shouldLoadMainNibNamed:(id)a0;
- (int)_stealKeyFocusWithOptions:(unsigned int)a0;
- (id)accessibilityAttributeValue:(id)a0;
- (struct _NSModalSession { } *)beginModalSessionForWindow:(id)a0;
- (struct _NSModalSession { } *)beginModalSessionForWindow:(id)a0 relativeToWindow:(id)a1;
- (void)beginSheet:(id)a0 modalForWindow:(id)a1 modalDelegate:(id)a2 didEndSelector:(SEL)a3 contextInfo:(void *)a4;
- (void)endModalSession:(struct _NSModalSession { } *)a0;
- (void)endSheet:(id)a0;
- (void)endSheet:(id)a0 returnCode:(long long)a1;
- (void)event:(id)a0 wouldActivateWindow:(id)a1;
- (id)mainWindow;
- (id)nextEventMatchingMask:(unsigned long long)a0 untilDate:(id)a1 inMode:(id)a2 dequeue:(BOOL)a3;
- (void)onFirstEvent;
- (BOOL)setActivationPolicy:(long long)a0;
- (void)_discardToxicEvents;
- (BOOL)_eventIsToxic:(id)a0;
- (void)_lookupHotKey:(id)a0;
- (BOOL)_modalSession:(struct _NSModalSession { } *)a0 wouldBeepGivenFakeEvent:(id)a1;
- (BOOL)_shouldFakeMainWindow;
- (id)_withToxicEventMonitorPerform:(id /* block */)a0;
- (BOOL)appModalSessionInProgressForAnyHostOtherThan:(struct { unsigned int x0[8]; })a0;
- (BOOL)beginHostAppModalSession:(id)a0 forWindow:(id)a1 withSize:(struct CGSize { double x0; double x1; })a2 withReply:(id /* block */)a3;
- (BOOL)beginHostAppModalSessionForWindow:(id)a0 withLocalSession:(struct _NSModalSession { } *)a1;
- (BOOL)beginHostAppModalSessionForWindow:(id)a0 withLocalSession:(struct _NSModalSession { } *)a1 relativeToWindow:(id)a2;
- (struct _NSModalSession { } *)beginServiceAppModalSessionForWindow:(id)a0 relativeToWindow:(id)a1;
- (void)endHostAppModalSession:(struct _NSModalSession { } *)a0 withWindow:(id)a1;
- (void)endServiceAppModalSession:(struct _NSModalSession { } *)a0 withWindow:(id)a1;
- (void)enqueueException:(id)a0;
- (void)eventHasHitWindow:(id)a0;
- (void)eventHasNotHitWindow:(id)a0 actions:(id /* block */)a1;
- (id)eventSending;
- (BOOL)hotKeyIsToxic:(long long)a0;
- (void)raiseIfDeferredException:(id)a0;
- (BOOL)respondsToAction:(SEL)a0 fromTask:(struct { unsigned int x0[8]; })a1;
- (void)sendEvent:(id)a0 withForwarding:(BOOL)a1;
- (void)sendEventWithoutCatch:(id)a0 withForwarding:(BOOL)a1;
- (id)vbNextEventMatchingMask:(unsigned long long)a0 untilDate:(id)a1 inMode:(id)a2 dequeue:(BOOL)a3;

@end

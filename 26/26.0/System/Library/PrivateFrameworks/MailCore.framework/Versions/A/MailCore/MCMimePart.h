@class NSMutableDictionary, MEDecodedMessageBanner, ECSignatureInfo, NSDate, MEMessageSecurityInformation, NSObject, MCFileTypeInfo, EFPathComponent, WebArchive, NSString, MCMessageBody, NSArray, NSData, NSError;
@protocol OS_os_log;

@interface MCMimePart : NSObject <EFLoggable> {
    MCMimePart *_nextPart;
    long long _typeCode;
    long long _subtypeCode;
    NSString *_type;
    NSString *_subtype;
    NSMutableDictionary *_bodyParameters;
    NSMutableDictionary *_otherIvars;
    id _partNumberLock;
    NSString *_partNumber;
    id _usedStringEncodingLock;
    unsigned long long _usedStringEncoding;
    id _encryptSignLock;
    NSArray *_messageSigners;
    MCMimePart *_cmsExtractedContent;
    NSError *_smimeError;
    BOOL _isEncrypted;
    BOOL _isSigned;
}

@property (class, readonly) NSObject<OS_os_log> *log;

@property (weak, nonatomic) MCMimePart *parentPart;
@property (nonatomic) BOOL fromMicrosoft;
@property (nonatomic) BOOL isMalformed;
@property (nonatomic) unsigned long long headerEncodingHint;
@property (readonly, copy, nonatomic) NSString *contentIDURLString;
@property (retain, nonatomic) MEMessageSecurityInformation *securityInformation;
@property (readonly, copy, nonatomic) NSString *fullMimeTypeEvenInsideAppleDouble;
@property (copy, nonatomic) NSString *sender;
@property (retain, nonatomic) NSDate *dateReceived;
@property (retain) ECSignatureInfo *signatureInfo;
@property (readonly, copy, nonatomic) NSData *headerData;
@property (readonly, copy, nonatomic) NSData *encodedBodyData;
@property (readonly, nonatomic) unsigned long long encodedBodyDataLength;
@property (readonly, nonatomic) NSData *decodingContext;
@property (readonly, nonatomic) MEDecodedMessageBanner *banner;
@property (readonly, nonatomic) BOOL hasDataAvailable;
@property (readonly, copy, nonatomic) NSData *decodedData;
@property (copy, nonatomic) NSString *type;
@property (copy, nonatomic) NSString *subtype;
@property (readonly, nonatomic) BOOL isDirectoryAttachment;
@property (copy, nonatomic) NSString *contentTransferEncoding;
@property (readonly, copy, nonatomic) NSArray *bodyParameterKeys;
@property (copy, nonatomic) NSString *disposition;
@property (readonly, copy, nonatomic) NSArray *dispositionParameterKeys;
@property (copy, nonatomic) NSString *contentDescription;
@property (copy, nonatomic) NSString *contentID;
@property (copy, nonatomic) NSString *contentLocation;
@property (nonatomic) unsigned long long contentLength;
@property (copy, nonatomic) NSArray *languages;
@property (copy, nonatomic) NSArray *subparts;
@property (readonly, nonatomic) unsigned long long approximateRawSize;
@property (readonly, nonatomic) unsigned long long approximateDecodedSize;
@property (readonly, copy, nonatomic) NSString *bodyString;
@property (readonly, nonatomic) unsigned long long formatFlowedOptions;
@property (readonly, copy, nonatomic) NSString *bodyConvertedFromFlowedText;
@property (readonly, copy, nonatomic) NSData *signedData;
@property (readonly, nonatomic) BOOL usesKnownSignatureProtocol;
@property (nonatomic) BOOL skipSignatureVerification;
@property (copy) NSString *partNumber;
@property (readonly, nonatomic) MCMimePart *firstChildPart;
@property (readonly, nonatomic) MCMimePart *nextSiblingPart;
@property (readonly, nonatomic) MCMimePart *bestAlternative;
@property (readonly, nonatomic) unsigned int macTypeCode;
@property (readonly, nonatomic) unsigned int macCreatorCode;
@property (readonly, nonatomic) unsigned int numberOfAttachments;
@property (readonly, copy, nonatomic) NSArray *attachments;
@property (readonly, copy, nonatomic) EFPathComponent *attachmentFilename;
@property (readonly, copy, nonatomic) NSArray *attachmentMetadata;
@property (readonly, nonatomic) MCFileTypeInfo *typeInfo;
@property (readonly, copy, nonatomic) WebArchive *webArchive;
@property (readonly, nonatomic) BOOL isRich;
@property (readonly, nonatomic) BOOL isReadableText;
@property (readonly, nonatomic) BOOL isAttachment;
@property (readonly, nonatomic) BOOL isCalendar;
@property BOOL hideCalendarMimePart;
@property (readonly, nonatomic) BOOL isMessageExternalBodyWithURL;
@property (readonly, nonatomic) BOOL isAutoArchivePart;
@property (readonly, nonatomic) BOOL isCMSPart;
@property (readonly, nonatomic) MCMimePart *cmsExtractedContent;
@property (readonly, nonatomic) MCMessageBody *messageBody;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)signingErrorForTrustEvaluation:(id)a0;
+ (int)_addDataConvertingLineEndingsFromUnixToNetwork:(id)a0 toCMSEncoder:(struct _CMSEncoder { } *)a1;
+ (id)_encryptedDataForContentData:(id)a0 senderCertificate:(struct __SecCertificate { } *)a1 senderCapabilities:(id)a2 recipients:(id)a3 isAuthenticated:(BOOL *)a4 error:(id *)a5;
+ (id)_encryptedDataUsingSecCMS:(id)a0 certificates:(id)a1 error:(id *)a2;
+ (BOOL)mimeParameterIsHumanReadable:(id)a0;
+ (id)newEncryptedPartWithData:(id)a0 senderCertificate:(struct __SecCertificate { } *)a1 senderCapabilities:(id)a2 recipients:(id)a3 encryptedData:(id *)a4;

- (void)dealloc;
- (id)init;
- (BOOL)parse;
- (void).cxx_destruct;
- (id)initWithEncodedData:(id)a0;
- (BOOL)hasEncryptedDescendantPart;
- (BOOL)isType:(id)a0 subtype:(id)a1;
- (id)cmsExtractedChildPartWithNumber:(id)a0;
- (id)decodeApplicationPkcs7WithOutSubject:(id *)a0 outSignatureInfo:(id *)a1;
- (id)decodeMultipartSignedWithOutSignatureInfo:(id *)a0;
- (id)decodedFromMimeData:(id)a0;
- (void)enumerateSubPartsWithOptions:(unsigned long long)a0 usingBlock:(id /* block */)a1;
- (id)bodyParameterForKey:(id)a0;
- (id)childPartWithNumber:(id)a0;
- (void)getNumberOfAttachments:(unsigned int *)a0 metadata:(id)a1 numberOfTNEFAttachments:(unsigned int *)a2 isSigned:(BOOL *)a3 isEncrypted:(BOOL *)a4;
- (BOOL)parseIMAPPropertyList:(id)a0;
- (id)_decodeTextHtml;
- (BOOL)_isIWorkArchive;
- (unsigned long long)_stringEncoding;
- (void)verifySignature;
- (id)_decode;
- (id)_decodedContent;
- (id)initWithEncodedData:(id)a0 securityInformation:(id)a1 decodingContext:(id)a2 banner:(id)a3;
- (void)setDispositionParameter:(id)a0 forKey:(id)a1;
- (void)_appendToDescription:(id)a0 withIndent:(unsigned long long)a1;
- (id)_archiveForData:(id)a0 URL:(id)a1 MIMEType:(id)a2 textEncodingName:(id)a3 frameName:(id)a4;
- (id)_archiveForData:(id)a0 URL:(id)a1 MIMEType:(id)a2 textEncodingName:(id)a3 frameName:(id)a4 subresources:(id)a5 subframeArchives:(id)a6;
- (id)_archiveForFileWrapper:(id)a0 URL:(id)a1;
- (id)_archiveForMultipartRelated;
- (id)_archiveForString:(id)a0 URL:(id)a1 needsPlainTextBodyClass:(BOOL)a2;
- (id)_attachmentFilenameWithHiddenExtension:(BOOL *)a0;
- (id)_attachmentForSecureSubpart;
- (void)_buildSecurityInformationIfNeeded;
- (id)_chosenAlternativePartOrParts:(id *)a0;
- (id)_cmsExtractedContentIsEncrypted:(BOOL *)a0 isSigned:(BOOL *)a1 error:(id *)a2;
- (void)_configureFileWrapper:(id)a0;
- (id)_copyMessageSigners:(id *)a0;
- (id)_createArchiveWithConvertedPlainTextBodyClassFromArchive:(id)a0;
- (id)_createFileWrapper;
- (id)_decodeApplicationApplefile;
- (id)_decodeApplicationMacBinHex;
- (id)_decodeApplicationOctetStream;
- (id)_decodeApplicationPkcs7WithSecCMS;
- (id)_decodeApplicationSmil;
- (id)_decodeApplicationZip;
- (id)_decodeEncodedData:(id)a0 detachedContentData:(id)a1 isEncrypted:(BOOL *)a2 isSigned:(BOOL *)a3 encryptionError:(id *)a4 signingError:(id *)a5;
- (id)_decodeMessageDeliveryStatus;
- (id)_decodeMessageExternalBody;
- (id)_decodeMessagePartial;
- (id)_decodeMessageRfc822;
- (id)_decodeMultipart;
- (id)_decodeMultipartAlternative;
- (id)_decodeMultipartAppledouble;
- (id)_decodeMultipartFolder;
- (id)_decodeMultipartRelated;
- (id)_decodeMultipartSignedWithOutSubject:(id *)a0 outSignatureInfo:(id *)a1;
- (id)_decodeMultipartSignedWithSecCMS;
- (id)_decodeText;
- (id)_decodeTextCalendar;
- (id)_decodeTextEnriched;
- (id)_decodeTextRichtext;
- (id)_decodeTextRtf;
- (struct __SecIdentity { } *)_encryptionIdentityForPolicy:(struct __SecPolicy { } *)a0 itemList:(struct __CFArray { } *)a1;
- (id)_errorForEncryption:(BOOL)a0 underlyingError:(id)a1;
- (id)_extractCMSContentIfNecessaryIsEncrypted:(BOOL *)a0 isSigned:(BOOL *)a1;
- (void)_extractCMSContentWithSecCMS;
- (id)_fileWrapper;
- (void)_fillInMessageBody:(id)a0 fromAttachment:(id)a1;
- (void)_fixupBodyParametersRFC2231Values;
- (void)_fixupDispositionParametersRFC2231Values;
- (id)_getAttachment;
- (void)_getAttachmentsAndAddToCount:(unsigned int *)a0 isSigned:(BOOL *)a1 isEncrypted:(BOOL *)a2 attachments:(id)a3 metadata:(id)a4 numberOfTNEFAttachments:(unsigned int *)a5;
- (unsigned long long)_getHFSAttachmentEncodingHint;
- (id)_getSomeCharsetFromPartTree;
- (BOOL)_hasEncryptedDescendantPart;
- (void)_htmlString:(id *)a0 createWebResource:(id *)a1 forFileWrapper:(id)a2 partNumber:(id)a3;
- (BOOL)_inferIsEncrypted;
- (BOOL)_isMessageRFC822;
- (BOOL)_isMultipartSigned;
- (BOOL)_isTypeCode:(long long)a0 subtypeCode:(long long)a1;
- (void)_mergeWithSecurityInformation:(id)a0;
- (id)_messageBodyForContentPart:(id)a0 expectEncryptedSubject:(BOOL)a1 outSubject:(id *)a2 outError:(id *)a3;
- (id)_messageBodyFromDecodedContents:(id)a0;
- (BOOL)_needsSignatureVerification:(id *)a0;
- (struct _CMSDecoder { } *)_newCMSDecoderWithMimePart:(id)a0 error:(id *)a1;
- (id)_nonMultipartPart;
- (BOOL)_parseHeadersWithEncodingHint:(unsigned long long)a0 hasVisualEncoding:(BOOL *)a1;
- (BOOL)_parseHeadersWithEncodingHint:(unsigned long long)a0 hasVisualEncoding:(BOOL *)a1 depth:(unsigned long long)a2;
- (BOOL)_parseSubpartsWithEncodingHint:(unsigned long long)a0 hasVisualEncoding:(BOOL *)a1 depth:(unsigned long long)a2;
- (id)_parseUUEncodedPartsWithEncodingHint:(unsigned long long)a0;
- (id)_partThatIsAttachment;
- (id)_remoteAttachmentsByURL;
- (void)_setCMSExtractedContent:(id)a0 isEncrypted:(BOOL)a1 isSigned:(BOOL)a2 error:(id)a3;
- (void)_setMessageSigners:(id)a0 andSigningError:(id)a1;
- (void)_setupDictionary:(id *)a0 fromArray:(id)a1;
- (id)_signatureDataForContentData:(id)a0 forRawSender:(id)a1 identity:(struct __SecIdentity { } *)a2 outError:(id *)a3;
- (id)_signatureDataUsingMessageSecurity:(id)a0 forRawSender:(id)a1 identity:(struct __SecIdentity { } *)a2 outError:(id *)a3;
- (id)_signatureDataUsingSecCMSWithData:(id)a0 forRawSender:(id)a1 identity:(struct __SecIdentity { } *)a2 outError:(id *)a3;
- (id)_signedChildPartIfExists;
- (id)_signersForCertificates:(id)a0;
- (id)_startPart;
- (id)_subpartAtIndex:(long long)a0;
- (long long)_subtypeCode;
- (id)_textHtmlPart;
- (id)_textPart;
- (long long)_typeCode;
- (unsigned long long)_usedStringEncoding;
- (id)_verifySignatureWithCMSDecoder:(struct _CMSDecoder { } *)a0 againstSender:(id)a1 signingError:(id *)a2;
- (id)_verifySignatureWithDecoder:(id)a0 signedData:(id *)a1 error:(id *)a2;
- (void)_verifySignatureWithSecCMS;
- (void)addSubpart:(id)a0;
- (id)decodeApplicationPkcs7;
- (id)decodeMultipartSigned;
- (id)dispositionParameterForKey:(id)a0;
- (void)extractCMSContent;
- (id)htmlStringForMimePart:(id)a0 attachment:(id)a1;
- (id)initWithEncodedHeaderData:(id)a0 encodedBodyData:(id)a1;
- (id)initWithEncodedHeaderData:(id)a0 encodedBodyData:(id)a1 securityInformation:(id)a2 decodingContext:(id)a3 banner:(id)a4;
- (BOOL)needToIncludeEncryptionCertificteToSignedMessageForRawSender:(id)a0 identity:(struct __SecIdentity { } *)a1;
- (id)newSignedPartWithData:(id)a0 sender:(id)a1 identity:(struct __SecIdentity { } *)a2 signatureData:(id *)a3;
- (void)setBodyParameter:(id)a0 forKey:(id)a1;
- (BOOL)shouldConsiderInlineOverridingExchangeServer;

@end

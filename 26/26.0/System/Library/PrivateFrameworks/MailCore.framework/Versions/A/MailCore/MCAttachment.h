@class NSURL, NSDate, NSObject, EFPathComponent, MCFileWrapper, NSImage, NSString, ECAngleBracketIDHash, NSNumber, NSData, NSError, NSProgress;
@protocol OS_os_log, MCAttachmentDataSource;

@interface MCAttachment : NSObject <EFPubliclyDescribable> {
    id _cachedFetchedDataLock;
    NSData *_cachedFetchedData;
    id _cachedFetchedFileWrapperLock;
    MCFileWrapper *_cachedFetchedFileWrapper;
    NSURL *_fileURL;
    NSImage *_iconImage;
    id _archiveFileWrapperLock;
    NSURL *_remoteURL;
    struct CGSize { double width; double height; } _resizedImageSize;
    EFPathComponent *_filename;
    EFPathComponent *_originalFilename;
}

@property (class, readonly, nonatomic) NSObject<OS_os_log> *log;

@property (nonatomic) unsigned short finderFlags;
@property (nonatomic) BOOL hasResourceForkData;
@property (retain, nonatomic) NSImage *iconImage;
@property (retain, nonatomic) NSData *cachedFetchedData;
@property (retain, nonatomic) MCFileWrapper *cachedFetchedFileWrapper;
@property (copy, nonatomic) NSString *originalMimeType;
@property (retain, nonatomic) id<MCAttachmentDataSource> dataSource;
@property (nonatomic) BOOL isAutoArchiveAttachment;
@property (readonly, nonatomic) BOOL isRemotelyAccessed;
@property (readonly, nonatomic) BOOL hasPendingBackgroundRead;
@property (readonly, nonatomic) BOOL isDataDownloaded;
@property (readonly, nonatomic) BOOL isDirectory;
@property (retain, nonatomic) NSProgress *downloadProgress;
@property (retain, nonatomic) NSDate *downloadURLExpiration;
@property (retain, nonatomic) NSError *downloadError;
@property (copy, nonatomic) NSString *cloudKitRecordName;
@property (nonatomic) BOOL shouldPreserveFidelity;
@property (nonatomic) BOOL isMailDropImageArchive;
@property (nonatomic) BOOL isMailDropImageThumbnail;
@property (nonatomic) BOOL isMailDropIndividualImage;
@property (retain, nonatomic) NSURL *remoteURL;
@property (retain, nonatomic) NSURL *downloadURL;
@property (copy, nonatomic) NSString *filename;
@property (copy, nonatomic) EFPathComponent *filenamePathComponent;
@property (readonly, copy, nonatomic) NSString *filenameWithoutHiddenExtension;
@property (retain, nonatomic) NSNumber *filePermissions;
@property (retain, nonatomic) NSNumber *fileSize;
@property (readonly, nonatomic) BOOL isMessageExternalBodyWithURL;
@property (readonly, copy, nonatomic) NSString *mimePartNumber;
@property (copy, nonatomic) NSString *contentID;
@property (readonly, copy, nonatomic) ECAngleBracketIDHash *contentIDHash;
@property (nonatomic) BOOL isUnreferencedAttachment;
@property (readonly, nonatomic) NSNumber *mimeEncodedContentLength;
@property (copy, nonatomic) NSString *mimeType;
@property (nonatomic) unsigned int type;
@property (nonatomic) unsigned int creator;
@property (copy, nonatomic) NSString *extension;
@property (nonatomic) BOOL shouldHideExtension;
@property (readonly, nonatomic) BOOL couldConfuseWindowsClients;
@property (readonly, nonatomic) BOOL isVideo;
@property (readonly, nonatomic) BOOL isAudio;
@property (readonly, nonatomic) BOOL isPDF;
@property (nonatomic) BOOL isCalendarInvitation;
@property (readonly, nonatomic) BOOL isImage;
@property (readonly, copy, nonatomic) NSData *resizedData;
@property (readonly, nonatomic) BOOL isFullSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } resizedImageSize;
@property (readonly, copy, nonatomic) NSString *originalFilename;
@property (readonly, nonatomic) MCAttachment *uneditableAttachment;
@property (readonly, nonatomic) NSURL *fileURL;
@property (readonly, copy, nonatomic) NSString *ef_publicDescription;
@property (readonly, copy, nonatomic) NSString *ef_shortPublicDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)keyPathsForValuesAffectingIsDataDownloaded;

- (id)initWithData:(id)a0;
- (void)dealloc;
- (void)resetCache;
- (id)init;
- (id)initWithFileURL:(id)a0;
- (void).cxx_destruct;
- (id)initWithFileWrapper:(id)a0;
- (void)setOriginalFilename:(id)a0;
- (id)_privateImageMetadataDescriptors;
- (unsigned long long)approximateSizeForAccessLevel:(long long)a0;
- (id)dataForAccessLevel:(long long)a0;
- (void)dataForAccessLevel:(long long)a0 completionBlock:(id /* block */)a1;
- (void)fileWrapperForAccessLevel:(long long)a0 completionBlock:(id /* block */)a1;
- (id)fileWrapperForAccessLevel:(long long)a0 error:(id *)a1;
- (void)getTypeIdentifier:(id *)a0 andPedigree:(id *)a1;
- (id)initWithMimePart:(id)a0;
- (id)_cleanImageMetadataFromData:(id)a0;
- (id)_freshFileWrapper;
- (BOOL)_hasPrivateImageMetadata:(id)a0;
- (void)_mcAttachmentCommonInit;
- (id)_preferredFilenameForFileWrapper:(id)a0;
- (void)_setupFileWrapper:(id)a0;
- (void)configureWithFileWrapper:(id)a0;
- (id)createTemporaryFile;
- (void)discardIconImage;
- (BOOL)getCompressedData:(id *)a0 compressedFileURL:(id *)a1 archiveType:(long long *)a2 error:(id *)a3;
- (id)initWithMailInternalData:(id)a0;
- (BOOL)isAnimatedImageForAccessLevel:(long long)a0;
- (void)isImage:(BOOL *)a0 isPDF:(BOOL *)a1 bestMimeType:(id *)a2;
- (id)originalFilenamePathComponent;
- (void)revertToOriginalData;
- (id)sanitizedContentID;
- (void)saveResizedMetadataAsOriginal;
- (void)setFileNameForResizedImage:(id)a0;
- (void)setMimeTypeForResizedImage:(id)a0;
- (void)setOriginalFilenamePathComponent:(id)a0;
- (void)setResizedData:(id)a0 imageSize:(struct CGSize { double x0; double x1; })a1;

@end

@class MCMimePart, NSColor, ECSubject, NSDate, NSDictionary, ECMessageFlags, NSString, EMFollowUp, ECAngleBracketIDHash, MCDisplayNameInfo, NSSet, NSMutableSet, NSArray, NSData, EMReadLater, NSUUID;
@protocol MCMessageDataSource, MCMailAccount, MCMailbox, ECMimeBody, ECMessageHeaders;

@interface MCMessage : NSObject <MCMessageSortingInterface, ECMessage, EDBaseMessage> {
    ECSubject *_subject;
    NSArray *_toRecipients;
    NSArray *_ccRecipients;
    NSArray *_bccRecipients;
    NSString *_sender;
    ECAngleBracketIDHash *_messageIDHeaderHash;
    NSUUID *_documentID;
    struct { unsigned char red; unsigned char green; unsigned char blue; } _messageColor;
    char _type;
    double _dateSentInterval;
    double _dateReceivedInterval;
    double _dateLastViewedInterval;
    ECAngleBracketIDHash *_listIDHash;
    id<MCMessageDataSource> _dataSource;
    _Atomic long long _messageFlags;
    unsigned long long _conversationFlags;
    NSMutableSet *_gmailLabels;
}

@property (retain) ECAngleBracketIDHash *messageIDHeaderHash;
@property (copy) NSArray *cc;
@property (copy) NSArray *bcc;
@property (nonatomic) long long globalMessageID;
@property (readonly, weak, nonatomic) id<MCMessageDataSource> primitiveDataSource;
@property char primitiveMessageType;
@property double primitiveDateSentInterval;
@property double primitiveDateReceivedInterval;
@property double primitiveDateLastViewedInterval;
@property (readonly, nonatomic) long long primitiveMessageFlags;
@property (retain, nonatomic) ECAngleBracketIDHash *listIDHash;
@property (readonly, copy, nonatomic) NSString *path;
@property (readonly, nonatomic) id<MCMailAccount> account;
@property (readonly, nonatomic) BOOL dataSourceShouldBeSet;
@property char type;
@property (readonly, nonatomic) MCMimePart *topLevelMimePart;
@property (readonly, nonatomic) BOOL shouldDeferBodyDownload;
@property (readonly, nonatomic) BOOL isMessageContentLocallyAvailable;
@property (readonly, nonatomic) BOOL isPartialMessageBodyAvailable;
@property (readonly, nonatomic) BOOL hasCalculatedNumberOfAttachments;
@property (readonly, nonatomic) BOOL hasAttachments;
@property (readonly, copy, nonatomic) NSString *remoteMailboxURLString;
@property (readonly, copy, nonatomic) NSString *persistentID;
@property (readonly, copy) NSString *remoteID;
@property (readonly, copy, nonatomic) NSString *messageID;
@property (readonly, nonatomic) unsigned int uid;
@property (copy) NSUUID *documentID;
@property (readonly, copy, nonatomic) NSString *URLString;
@property (readonly, copy, nonatomic) NSString *URLStringIfAvailable;
@property (readonly, nonatomic) BOOL isEditable;
@property (readonly, nonatomic) BOOL isMessageMeeting;
@property (copy) NSColor *color;
@property BOOL colorHasBeenEvaluated;
@property (readonly, nonatomic) int colorIntValue;
@property (readonly, nonatomic) long long junkMailLevel;
@property (readonly, nonatomic) long long priority;
@property (readonly) struct { unsigned char x0; unsigned char x1; unsigned char x2; } messageColor;
@property (readonly) unsigned long long conversationFlags;
@property (readonly, nonatomic) BOOL isReply;
@property (readonly, copy) NSArray *referencesHashes;
@property double dateReceivedAsTimeIntervalSince1970;
@property (readonly) NSDate *dateReceived;
@property double dateSentAsTimeIntervalSince1970;
@property (readonly) NSDate *dateSent;
@property double dateLastViewedAsTimeIntervalSince1970;
@property (readonly) NSDate *dateLastViewed;
@property (readonly) NSDate *displayDate;
@property (readonly) EMReadLater *readLater;
@property (readonly) NSDate *sendLaterDate;
@property (readonly, nonatomic) EMFollowUp *followUp;
@property (readonly, nonatomic) NSData *brandIndicator;
@property (copy) ECSubject *subject;
@property (readonly, copy) ECSubject *subjectIfAvailable;
@property (copy) NSString *sender;
@property (readonly, nonatomic) MCDisplayNameInfo *senderDisplayNameInfo;
@property (readonly, copy) NSString *senderIfAvailable;
@property (copy) NSArray *to;
@property (retain) NSSet *gmailLabels;
@property char recipientType;
@property (readonly) NSData *headerData;
@property (readonly) NSData *headerDataIfAvailable;
@property (readonly, nonatomic) NSString *notificationID;
@property (readonly, nonatomic) int colorForSort;
@property (readonly, nonatomic) long long messageFlags;
@property (readonly, nonatomic) unsigned char flagColorSet;
@property (readonly, copy, nonatomic) NSString *senderDisplayName;
@property (readonly, copy) NSArray *senders;
@property (readonly, nonatomic) unsigned long long messageSize;
@property (readonly, nonatomic) unsigned long long numberOfAttachments;
@property (readonly) double displayDateAsTimeIntervalSince1970;
@property (readonly) double readLaterDateAsTimeIntervalSince1970;
@property (readonly) double sendLaterDateAsTimeIntervalSince1970;
@property (readonly) double followUpDateAsTimeIntervalSince1970;
@property (readonly, nonatomic) id<MCMailbox> mailbox;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSArray *from;
@property (readonly, copy) NSArray *listUnsubscribe;
@property (readonly) long long conversationID;
@property (readonly, nonatomic) BOOL isServerSearchResult;
@property (readonly, nonatomic) ECMessageFlags *flags;
@property (readonly, nonatomic, getter=isPartOfExistingThread) BOOL partOfExistingThread;
@property (readonly, nonatomic) id<ECMimeBody> mimeBody;
@property (readonly, copy, nonatomic) NSDictionary *headersDictionary;
@property (readonly, copy, nonatomic) NSString *messageIDHeader;
@property (readonly) NSSet *labels;
@property (readonly, nonatomic) id<ECMessageHeaders> headers;
@property (readonly, nonatomic) id<ECMessageHeaders> headersIfAvailable;
@property (readonly, copy, nonatomic) NSArray *references;
@property (readonly, nonatomic) unsigned long long fileSize;
@property (readonly, copy) NSArray *bccIfAvailable;
@property (readonly) unsigned long long attachmentCount;
@property (readonly) BOOL messageColorIsHighlight;
@property (readonly) BOOL wasActedOnByExtension;

+ (long long)displayablePriorityForPriority:(long long)a0;
+ (id)forwardedMessagePrefixWithSpacer:(BOOL)a0;
+ (BOOL)isMessageURLString:(id)a0;
+ (BOOL)messageColorIsValid:(struct { unsigned char x0; unsigned char x1; unsigned char x2; })a0;
+ (id)messageWithRFC822Data:(id)a0 sanitizeData:(BOOL)a1;
+ (long long)validatePriority:(long long)a0;
+ (char)_messageTypeForMessageTypeKey:(id)a0;
+ (id)messageTypeKeyForMessageType:(char)a0;
+ (id)messageWithRFC822Data:(id)a0 sanitizeData:(BOOL)a1 decoder:(id)a2;
+ (id)replyPrefixWithSpacer:(BOOL)a0;
+ (id)unreadMessagesFromMessages:(id)a0;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)dataSource;
- (id)init;
- (void)setDataSource:(id)a0;
- (void).cxx_destruct;
- (BOOL)read;
- (BOOL)junk;
- (BOOL)answered;
- (BOOL)flagged;
- (id)bestAlternativePart:(BOOL *)a0;
- (id)bestAlternativePartAsData:(BOOL *)a0 usingEncoding:(unsigned long long)a1;
- (id)bodyFetchIfNotAvailable:(BOOL)a0 updateFlags:(BOOL)a1 allowPartial:(BOOL)a2 decodeContext:(id)a3;
- (void)addGmailLabels:(id)a0;
- (id)_searchableItemWithHTML:(id)a0 messageBody:(id)a1 updatableAttributesOnly:(BOOL)a2 outOrderedAttachments:(id *)a3;
- (void)_setDateReceivedFromHeaders:(id)a0;
- (id)bodyDataFetchIfNotAvailable:(BOOL)a0 allowPartial:(BOOL)a1;
- (id)bodyFetchIfNotAvailable:(BOOL)a0 updateFlags:(BOOL)a1 allowPartial:(BOOL)a2;
- (id)bodyFetchIfNotAvailable:(BOOL)a0 updateFlags:(BOOL)a1 allowPartial:(BOOL)a2 skipSignatureVerification:(BOOL)a3;
- (id)bodyFetchIfNotAvailable:(BOOL)a0 updateFlags:(BOOL)a1 allowPartial:(BOOL)a2 skipSignatureVerification:(BOOL)a3 decodeContext:(id)a4;
- (BOOL)calculateAttachmentInfoFromTopLevelMimePart:(id)a0 numberOfAttachments:(unsigned int *)a1 isSigned:(BOOL *)a2 isEncrypted:(BOOL *)a3;
- (id)headerDataFetchIfNotAvailable:(BOOL)a0 allowPartial:(BOOL)a1;
- (id)headersFetchIfNotAvailable:(BOOL)a0;
- (void)loadCachedHeaderValuesFromHeaders:(id)a0 type:(char)a1;
- (id)messageDataFetchIfNotAvailable:(BOOL)a0 newDocumentID:(id)a1;
- (id)rawSourceFromHeaders:(id)a0 body:(id)a1;
- (void)removeGmailLabels:(id)a0;
- (id)searchableItemWithHTML:(id)a0 messageBody:(id)a1 updatableAttributesOnly:(BOOL)a2;
- (void)setAttachmentInfoFromTopLevelMimePart:(id)a0;
- (void)setAttachmentMetadata:(id)a0;
- (void)setColor:(id)a0 hasBeenEvaluated:(BOOL)a1 flags:(long long)a2 mask:(long long)a3;
- (void)setConversationFlags:(unsigned long long)a0;
- (void)setMessageFlags:(long long)a0 mask:(long long)a1;
- (void)setPrimitiveColor:(id)a0;
- (void)setPrimitiveColor:(id)a0 hasBeenEvaluated:(BOOL)a1 flags:(long long)a2 mask:(long long)a3;
- (void)setPrimitiveColorHasBeenEvaluated:(BOOL)a0;
- (void)setPrimitiveColorIntValue:(int)a0;
- (void)setPrimitiveConversationFlags:(unsigned long long)a0;
- (void)setPrimitiveMessageFlags:(long long)a0 mask:(long long)a1;
- (void)setSubject:(id)a0 to:(id)a1 cc:(id)a2 sender:(id)a3 messageIDHeaderHash:(id)a4;
- (void)setSubject:(id)a0 to:(id)a1 cc:(id)a2 sender:(id)a3 type:(char)a4 dateReceivedTimeIntervalSince1970:(double)a5 dateSentTimeIntervalSince1970:(double)a6 messageIDHeaderHash:(id)a7 dateLastViewedTimeIntervalSince1970:(double)a8;
- (id)imageArchiveURL;
- (id)URLStringWithHeaders:(id)a0;
- (id)_URLStringWithHeaders:(id)a0 fetchIfNotAvailable:(BOOL)a1;
- (id)_bccFetchIfNotAvailable:(BOOL)a0;
- (BOOL)_calculateAttachmentInfoFromTopLevelMimePart:(id)a0 numberOfAttachments:(unsigned int *)a1 isSigned:(BOOL *)a2 isEncrypted:(BOOL *)a3 force:(BOOL)a4;
- (void)_setDateSentFromHeaders:(id)a0;
- (void)_setSubject:(id)a0 to:(id)a1 cc:(id)a2 sender:(id)a3 messageIDHeaderHash:(id)a4 additionalPropertiesBlock:(id /* block */)a5;
- (id)_uniqueIdentifierForSearchableItemUsingIdentifier:(id)a0 useHeadersIfNecessary:(BOOL)a1;
- (void)_updateAttributeSet:(id)a0 includingHTML:(BOOL)a1 withMessageBody:(id)a2 orderedAttachments:(id *)a3;
- (id)bodyDataAndHeaderDataIfReadilyAvailable:(id *)a0 fetchIfNotAvailable:(BOOL)a1 allowPartial:(BOOL)a2;
- (unsigned long long)primitiveConversationFlags;
- (void)setNumberOfAttachments:(unsigned int)a0 isSigned:(BOOL)a1 isEncrypted:(BOOL)a2;
- (void)setPriorityFromHeaders:(id)a0;

@end

@class NSMutableDictionary, NSMutableData, NSObject, AFInstanceContext, NSString, NSSet, AFCallSiteInfo, AFAnalyticsTurnBasedInstrumentationContext, NSArray, AFAnalyticsEvent, NSXPCConnection, AFAudioPowerUpdater, AFSpeechRequestOptions;
@protocol OS_dispatch_group, AFDictationDelegate, OS_dispatch_source, OS_dispatch_queue;

@interface AFDictationConnection : NSObject <AFNetworkAvailabilityObserver> {
    NSXPCConnection *_connection;
    NSString *_lastUsedLanguage;
    NSSet *_knownOfflineInstalledLanguages;
    AFCallSiteInfo *_initiationCallSiteInfo;
    AFAudioPowerUpdater *_inputAudioPowerUpdater;
    BOOL _isCapturingSpeech;
    BOOL _hasActiveRequest;
    BOOL _isWaitingForAudioFile;
    BOOL _recognizingIncrementally;
    BOOL _shouldClassifyIntent;
    BOOL _shouldRecognizeCommands;
    NSObject<OS_dispatch_group> *_speechCallbackGroup;
    NSObject<OS_dispatch_queue> *_internalQueue;
    NSObject<OS_dispatch_source> *_timeoutTimer;
    NSObject<OS_dispatch_source> *_bufferTimer;
    BOOL _forceOfflineRecognition;
    AFSpeechRequestOptions *_stopOptions;
    NSMutableData *_buffer;
    double _audioStartTime;
    double _amountDataSent;
    BOOL _narrowband;
    NSString *_requestIdString;
    NSArray *_previouslyRecognizedPhrases;
    NSString *_onDeviceDictationUIInteractionIdentifier;
    AFInstanceContext *_instanceContext;
    AFAnalyticsEvent *_preheatEvent;
    AFAnalyticsTurnBasedInstrumentationContext *_intstrumentationContext;
    BOOL _isDetectingUtterances;
    NSMutableDictionary *_languagesLoggingInfo;
}

@property (weak, nonatomic) id<AFDictationDelegate> delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)fetchSupportedLanguageCodes:(id /* block */)a0;
+ (BOOL)dictationIsSupportedForLanguageCode:(id)a0 error:(id *)a1;
+ (void)getForcedOfflineDictationSupportedLanguagesWithCompletion:(id /* block */)a0;
+ (BOOL)dictationIsEnabled;
+ (BOOL)languageDetectorIsEnabled;

- (void)_clearConnection;
- (id)_connection;
- (void)preheat;
- (void)_tellSpeechDelegateRecordingDidEnd;
- (void)_stopInputAudioPowerUpdates;
- (void)_tellSpeechDelegateRecordingDidBeginWithOptions:(id)a0;
- (void)startDictationWithSpeechFileAtURL:(id)a0 options:(id)a1 forLanguage:(id)a2;
- (void)resumeRecognitionWithPrefixText:(id)a0 postfixText:(id)a1 selectedText:(id)a2;
- (void)_tellSpeechDelegateDidRecognizePartialSpeechPackage:(id)a0 nluResult:(id)a1 languageModel:(id)a2;
- (void)_cancelBufferFlushTimer;
- (void)startRecordedAudioDictationWithOptions:(id)a0 forLanguage:(id)a1 narrowband:(BOOL)a2;
- (void)_tellSpeechDelegateDidProcessAudioDuration:(double)a0;
- (void)_tellSpeechDelegateDidPauseRecognition;
- (void)sendSpeechCorrection:(id)a0 forIdentifier:(id)a1;
- (void)_invokeRequestTimeout;
- (void)updateSpeechOptions:(id)a0;
- (void)requestOfflineDictationSupportForLanguage:(id)a0 completion:(id /* block */)a1;
- (void)_cancelRequestTimeout;
- (void)_addPreheatAnalyticsEvent;
- (id)initWithInstanceContext:(id)a0;
- (void)dealloc;
- (void)stopSpeechWithOptions:(id)a0;
- (void)_sendDataIfNeeded;
- (float)peakPower;
- (id)_dictationService;
- (void)updateVoiceCommandContextWithPrefixText:(id)a0 postfixText:(id)a1 selectedText:(id)a2 disambiguationActive:(id)a3 cursorInVisibleText:(id)a4 favorCommandSuppression:(id)a5 abortCommandSuppression:(id)a6 undoEvent:(id)a7;
- (void)sendUserSelectedAlternativeDictationLanguageCode:(id)a0;
- (void)_connectionClearedForInterruption:(BOOL)a0;
- (BOOL)forcedOfflineDictationIsAvailableForLanguage:(id)a0;
- (void)reportIssueForError:(id)a0 eventType:(long long)a1 context:(id)a2;
- (void)startDictationWithLanguageCode:(id)a0 options:(id)a1;
- (id /* block */)startRecordingForPendingDictationWithLanguageCode:(id)a0 options:(id)a1 speechOptions:(id)a2;
- (void)_setActivationTimeOnOptionsIfNecessary:(id)a0;
- (void)cancelSpeech;
- (void)_tellSpeechDelegateRecordingWillBegin;
- (void)sendVisualContextAndCorrectionsInfo:(id)a0 interactionIdentifier:(id)a1;
- (void)getEuclidPhonetic:(id)a0 maxResultsCount:(int)a1 completion:(id /* block */)a2;
- (void)_sendPendingAnalyticsEvents;
- (void)reportIssueForError:(id)a0 eventType:(long long)a1 subtype:(id)a2 context:(id)a3;
- (void)_registerInvalidationHandlerForXPCConnection:(id)a0;
- (void)_tellSpeechDelegateDidRecognizeSpeechTokens:(id)a0 nluResult:(id)a1 languageModel:(id)a2;
- (void)_tellSpeechDelegateDidRecognizeSpeechPhrases:(id)a0 rawPhrases:(id)a1 utterances:(id)a2 rawUtterances:(id)a3 nluResult:(id)a4 languageModel:(id)a5 correctionIdentifier:(id)a6 audioAnalytics:(id)a7;
- (id)init;
- (void)_tellSpeechDelegateAvailabilityChanged;
- (void)_tellSpeechDelegateDidRecognizeTranscriptionObjects:(id)a0 languageModel:(id)a1;
- (void)_tellSpeechDelegateSpeechRecognitionDidSucceed;
- (void)suppressLowStorageNotificationForLanguage:(id)a0 suppress:(BOOL)a1;
- (void)preheatForLanguageCode:(id)a0;
- (void)_dispatchAsync:(id /* block */)a0;
- (void)_tellSpeechDelegateDidRecognizePackage:(id)a0;
- (void)_extendRequestTimeout;
- (BOOL)dictationIsAvailableForLanguage:(id)a0 synchronous:(BOOL)a1;
- (void)_availabilityChanged;
- (void)preheatWithRecordDeviceIdentifier:(id)a0;
- (void)_tellSpeechDelegateDidBeginLocalRecognitionWithModelInfo:(id)a0;
- (void)startRecordedAudioDictationWithOptions:(id)a0 forLanguage:(id)a1 narrowband:(BOOL)a2 forceSampling:(BOOL)a3;
- (void)requestOfflineAssistantSupportForLanguage:(id)a0 completion:(id /* block */)a1;
- (void)_scheduleRequestTimeout;
- (void)preheatTestWithLanguage:(id)a0 options:(id)a1;
- (void)startDictationWithLanguageCode:(id)a0 options:(id)a1 speechOptions:(id)a2;
- (BOOL)forcedOfflineDictationIsAvailableForLanguage:(id)a0 synchronous:(BOOL)a1;
- (void)stopSpeech;
- (void)networkAvailability:(id)a0 isAvailable:(BOOL)a1;
- (void)_tellSpeechDelegateDidRecognizeFinalResultCandidatePackage:(id)a0;
- (void)updateVoiceCommandContextWithPrefixText:(id)a0 postfixText:(id)a1 selectedText:(id)a2 disambiguationActive:(id)a3 cursorInVisibleText:(id)a4 favorCommandSuppression:(id)a5 abortCommandSuppression:(id)a6;
- (void)_tellSpeechDelegateRecognitionDidFail:(id)a0;
- (void)_tellSpeechDelegateLanguageDetected:(id)a0 confidenceScores:(id)a1 isConfident:(BOOL)a2;
- (id)_dictationServiceWithErrorHandler:(id /* block */)a0;
- (void)_logRequestCompetionStatusWithEventType:(long long)a0 error:(id)a1;
- (void)_delegateDidRecognizeSpeechTokens:(id)a0 nluResult:(id)a1 languageModel:(id)a2 delegate:(id)a3;
- (void)_tellSpeechDelegateRecordingDidCancel;
- (float)averagePower;
- (void)_delayedStopSpeechWithOptions:(id)a0;
- (void)_willFailDictationWithError:(id)a0;
- (void)_tellSpeechDelegateSearchResultsReceived:(id)a0 recognitionText:(id)a1 stable:(BOOL)a2 final:(BOOL)a3;
- (void)addRecordedSpeechSampleData:(id)a0;
- (void)_updateBufferFlushTimerWithDelay:(double)a0;
- (void)_checkAndSetIsCapturingSpeech:(BOOL)a0;
- (void)_startInputAudioPowerUpdatesWithXPCWrapper:(id)a0;
- (void)pauseRecognition;
- (void)_tellSpeechDelegateAudioFileFinished:(id)a0 error:(id)a1;
- (void)_dispatchCallbackGroupBlock:(id /* block */)a0;
- (void)_willCompleteDictation;
- (void)_tellSpeechDelegateLanguageDetectorDidFail:(id)a0;
- (void)preheatEuclidModelWithLanguage:(id)a0 clientID:(id)a1;
- (void)sendEngagementFeedback:(long long)a0 voiceQueryIdentifier:(id)a1;
- (void)_willStartDictationWithLanguageCode:(id)a0 options:(id)a1 speechOptions:(id)a2 machAbsoluteTime:(unsigned long long)a3;
- (void)_LogUEIRequestCategorization:(int)a0;
- (void)_tellSpeechDelegateRecordingDidFail:(id)a0;
- (void)_tellSpeechDelegateDidRecognizePartialResult:(id)a0;
- (void)endSession;
- (void)beginAvailabilityMonitoring;
- (void)_cancelTimerClearBuffer;
- (void)_willCancelDictation;
- (void)startRecordedAudioDictationWithOptions:(id)a0 forLanguage:(id)a1;
- (id)_dequeueAudioWithLength:(unsigned long long)a0;
- (void)_tellSpeechDelegateDidRecognizeVoiceCommandCandidatePackage:(id)a0 nluResult:(id)a1;
- (BOOL)dictationIsAvailableForLanguage:(id)a0;
- (void)startDictationWithSpeechFileAtURL:(id)a0 isNarrowBand:(BOOL)a1 options:(id)a2 forLanguage:(id)a3;
- (void)sendSpeechCorrection:(id)a0 interactionIdentifier:(id)a1;
- (void)_tellSpeechDelegateMultilingualSpeechRecognized:(id)a0;
- (void).cxx_destruct;
- (void)cancelAvailabilityMonitoring;
- (void)_delegateDidRecognizePartialSpeechPackage:(id)a0 nluResult:(id)a1 languageModel:(id)a2 delegate:(id)a3;

@end

@class NSRecursiveLock, NSArray, NSSet, NSMutableSet, NSTimer, NSObject, LUIUser;
@protocol OS_dispatch_queue;

@interface LUIUserController : NSObject <LUINetworkStatusProtocol>

@property BOOL inFVUnlock;
@property BOOL running;
@property (retain) NSObject<OS_dispatch_queue> *userControllerSerialQueue;
@property (retain) NSMutableSet *clients;
@property (retain) NSRecursiveLock *clientsLock;
@property BOOL userListLoaded;
@property (retain) NSMutableSet *usersInternal;
@property (retain) NSRecursiveLock *usersInternalLock;
@property (retain) NSMutableSet *localUsersSet;
@property (retain) NSRecursiveLock *localUsersSetLock;
@property (retain) NSMutableSet *tempUsers;
@property (retain) NSRecursiveLock *tempUsersLock;
@property (retain) NSArray *allowedAvatarUsers;
@property (retain) NSMutableSet *recoveryUsers;
@property (retain) NSSet *allowedGroupGUIDs;
@property (retain) NSSet *allowedUsers;
@property (retain) NSSet *deniedGroupGUIDs;
@property (retain) NSSet *deniedUsers;
@property BOOL addAndMarkLoggedInUsersInternal;
@property BOOL addNetworkUsersWhenPossibleInternal;
@property BOOL addOtherUserWhenPossibleInternal;
@property BOOL activeUserRecordTrackingInternal;
@property BOOL allowNetworkUsersToLogin;
@property struct __ODTrigger { } *odAddedTrigger;
@property struct __ODTrigger { } *odDeletedTrigger;
@property struct __ODTrigger { } *odModifiedTrigger;
@property (retain) NSTimer *odTriggerDebounceTimer;
@property (retain) NSMutableSet *odTriggers;
@property int sessionChangeToken;
@property (readonly) BOOL isContinuityUnlockEnabled;
@property (readonly) unsigned long long numSuspendedUsers;
@property BOOL addAndMarkLoggedInUsers;
@property BOOL addNetworkUsersWhenPossible;
@property BOOL addOtherUserWhenPossible;
@property BOOL addSwitchUser;
@property (readonly) LUIUser *personalRecoveryUser;
@property BOOL activeUserRecordTracking;
@property (readonly) BOOL networkUsersCanLogin;
@property (readonly) BOOL hasSuppressedAvatars;

+ (unsigned long long)authFailureFromODError:(unsigned long long)a0;
+ (BOOL)authFailureRequiresPasswordChange:(unsigned long long)a0;
+ (long long)compareUser:(id)a0 toUser:(id)a1;
+ (id)sharedUserController;
+ (id)sortedUsersFromList:(id)a0;

- (void)addClient:(id)a0;
- (void)removeClient:(id)a0;
- (void)start;
- (void)dealloc;
- (void)stop;
- (void)_notifyClients;
- (id)init;
- (id)users;
- (void).cxx_destruct;
- (id)localUsers;
- (id)_allowedAvatarUsersFromUserSet:(id)a0;
- (void)_updateAllowNetworkUsersToLogin;
- (id)_ODAttributesFromAttributes:(id)a0;
- (void)_addAdminRecoveryUserInfoFromURL:(id)a0 toUserInfo:(id)a1;
- (void)_addAllUsersInfoFromURL:(id)a0 toUserInfo:(id)a1;
- (void)_addCryptoUserInfoFromURL:(id)a0 toUserInfo:(id)a1;
- (void)_addDiskManagementUserInfoForVolume:(id)a0 toUserInfo:(id)a1;
- (void)_addRecoveryUserUUID:(id)a0 toUserInfo:(id)a1 ofType:(unsigned char)a2;
- (void)_addUserWithName:(id)a0;
- (BOOL)_allowUser:(id)a0;
- (id)_allowedGroupGUIDs;
- (id)_allowedUserGUIDs;
- (BOOL)_booleanFromKey:(struct __CFString { } *)a0 inDictionary:(struct __CFDictionary { } *)a1;
- (id)_copyUsers;
- (long long)_currentSessionID;
- (void)_deleteUserWithName:(id)a0;
- (id)_deniedGroupGUIDs;
- (id)_deniedUserGUIDs;
- (id)_groupGUIDFromPrimaryGroupID:(unsigned int)a0;
- (id)_groupGUIDsFromGUIDs:(id)a0;
- (long long)_integerFromKey:(struct __CFString { } *)a0 inDictionary:(struct __CFDictionary { } *)a1;
- (id)_localUsers;
- (id)_localizedNameForUserType:(unsigned char)a0;
- (id)_loggedInUsers;
- (void)_modifyUserWithName:(id)a0;
- (id)_nameForUserType:(unsigned char)a0;
- (id)_networkUsers;
- (id)_networkUsersOnNode:(id)a0 limitedToMaxUsers:(unsigned long long)a1;
- (id)_processGroup:(id)a0 notInSet:(id)a1;
- (id)_queryForUserWithGUID:(id)a0;
- (id)_queryForUserWithName:(id)a0;
- (id)_queryForUserWithUID:(unsigned int)a0;
- (id)_recoveryUsersForSystemVolume;
- (id)_sortedUsers;
- (id)_stringFromKey:(struct __CFString { } *)a0 inDictionary:(struct __CFDictionary { } *)a1;
- (id)_updateODAttributesInUserInfo:(id)a0 forItem:(id)a1 ofType:(id)a2 andAttributes:(id)a3 options:(unsigned long long)a4;
- (void)_updateUsersSetIncludingNetworkUsers:(BOOL)a0;
- (id)_userGUIDsFromGUIDs:(id)a0;
- (id)_userInfoForSystemVolume:(id)a0;
- (id)_usersForSystemVolume;
- (id)_usersFromODRecords:(id)a0;
- (id)_usersWithGUIDs:(id)a0;
- (id)_usersWithPrimaryGroupGUID:(id)a0;
- (id)_visibleLocalUsers;
- (id)_visibleNetworkUsers;
- (id)addSmartCardUserWithName:(id)a0 contextData:(id)a1;
- (id)adminUsers;
- (BOOL)canUserLogIn:(id)a0;
- (id)existingUserWithName:(id)a0;
- (void)handleMCXNotification:(id)a0;
- (void)handleODTrigger:(id)a0;
- (BOOL)isUserAvatarAllowed:(id)a0;
- (BOOL)mcxAllowsLoginForUser:(id)a0;
- (void)networkStatusChanged;
- (id)networkUsers:(long long)a0;
- (unsigned long long)numODTriggers;
- (void)odChangedThreadTimerFired;
- (id)removeSmartCardUserWithName:(id)a0;
- (BOOL)removeUserWithName:(id)a0;
- (void)startListeningForUserRecordChanges;
- (void)startODChangedThreadTimer;
- (void)stopListeningForUserRecordChanges;
- (void)stopODTriggerTimer;
- (void)updateLoggedInStatusForUser:(id)a0;
- (BOOL)userIsLoggingOut:(id)a0;
- (id)userWithAttributes:(id)a0;
- (id)userWithGUID:(id)a0;
- (id)userWithName:(id)a0;
- (id)userWithUID:(unsigned int)a0;

@end

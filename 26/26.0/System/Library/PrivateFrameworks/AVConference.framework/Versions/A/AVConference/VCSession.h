@class NSDictionary, VCExperimentManager, NSMutableArray, NSString, VCSessionParticipantLocal, NSMutableSet, NSError, AVCRateController, VCRateControlMLEnrollment, NSArray, NSMutableDictionary, VCNetworkFeedbackController, VCTransportSession, VCSwitchManager, VCSessionSwitches, VCMediaRecorder, NSObject, VCSessionParticipantRemote, VCControlChannelMultiWay, VCSessionConfiguration, VCAudioMachineLearningCoordinator, VCSessionStatsController, VCRateControlMediaController, VCConnectionTimeBooster, VCSessionMessaging, VCSessionDownlinkBandwidthAllocator, NSUUID, VCSessionPresentationInfo, VCSessionBitrateArbiter, VCSecurityKeyManager, NSDate;
@protocol OS_nw_activity, VCConnectionProtocol, OS_dispatch_semaphore, OS_dispatch_queue, VCSessionDelegate;

@interface VCSession : VCObject <VCSessionParticipantStreamDelegate, AVCRateControllerDelegate, VCRateControlMediaControllerDelegate, VCPowerManagerThermalDelegate, RTCPReportProvider, VCSecurityEventHandler, VCSessionParticipantDelegate, VCNetworkFeedbackControllerDelegate, VCSessionStatsControllerDelegate, VCConnectionChangedHandler, VCMediaRecorderTransportDelegate> {
    unsigned int _state;
    NSObject<OS_dispatch_queue> *_sessionQueue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    id<VCSessionDelegate> _delegate;
    VCControlChannelMultiWay *_controlChannel;
    VCSessionConfiguration *_configuration;
    NSMutableDictionary *_remoteParticipantsMapByUUID;
    int _reportUpdateInterval;
    int _reportReportFrequency;
    VCNetworkFeedbackController *_feedbackController;
    NSMutableArray *_startingParticipants;
    NSMutableSet *_stoppingParticipants;
    NSMutableArray *_initializingParticipants;
    VCSecurityKeyManager *_securityKeyManager;
    BOOL _localSourceNeedsReset;
    struct _VCSessionOneToOneSettings { AVCRateController *rateController; VCRateControlMediaController *mediaController; struct tagHANDLE *mediaQueue; struct tagVCMediaQueue *vcMediaQueue; BOOL receivedFirstConnection; BOOL startedOneToOne; } _oneToOneSettings;
    BOOL _switchFromGFTToOneToOneEnabled;
    double _remoteMediaStallReconnectTimeout;
    double _oneToOneSwitchStartTime;
    BOOL _isOneToOneInitiator;
    BOOL _isReconnectPending;
    unsigned short _maxConnectionMTU;
    BOOL _useReducedSizeRTCP;
    AVCRateController *_uplinkRateController;
    unsigned int _uplinkTargetBitrate;
    unsigned int _downlinkTargetBitrate;
    VCRateControlMediaController *_uplinkMediaController;
    unsigned int _basebandFlushTransactionID;
    VCSessionDownlinkBandwidthAllocator *_downlinkBandwidthAllocator;
    double _sessionStartTime;
    struct { unsigned int numberOfInternalQueues; double maxWaitTimeToSchedulePackets; double queueSizeThreshold; double queueSizeThresholdForScreen; double queueSizeQuantizationStep; double queueSizeCallbackInterval; double instantPeakBitrateFactor; double packetSendPacingInterval; unsigned int packetBurstSize; unsigned int minBitrateWithoutThrottling; int schedulePolicy; int bundlePolicy; BOOL useExternalDataBuffer; char *dumpID; BOOL isDumpFileEnabled; struct opaqueRTCReporting *reportingAgent; BOOL isRTXEnabled; BOOL enableDynamicPeakBitrate; BOOL shouldHistoryUseVCRCTimestamp; } _mediaQueueConfiguration;
    unsigned int _mediaQueueMinBitrateWithoutThrottlingDefault;
    unsigned int _mediaQueueMinBitrateWithoutThrottling3DCamera;
    BOOL _forceDisableMediaPriority;
    NSError *_stopError;
    void *_spatialMetadata;
    BOOL _isGKVoiceChat;
    double _remoteMediaStallDisconnectTimeout;
    BOOL _shouldCreateSecondAggregator;
    VCAudioMachineLearningCoordinator *_audioMachineLearningCoordinatorDownlink;
    BOOL _isECNCapable;
    BOOL _isECNEnabled;
    BOOL _isECNForcedByNetwork;
    unsigned char _ecnLinkType;
    BOOL _forceHighDataRateFaceTime;
    BOOL _isBytesInFlightAdaptationEnabled;
    BOOL _noPacketsSymptomReported;
    int _lastThermalLevel;
    BOOL _isDNUCollectionEnabled;
    VCRateControlMLEnrollment *_vcrcMLEnrollment;
    NSObject<OS_nw_activity> *_nwActivityActiveSession;
    VCSessionPresentationInfo *_presentationInfo;
    VCSessionBitrateArbiter *_bitrateArbiter;
    NSString *_conversationID;
    NSDate *_conversationTimeBase;
    NSDate *_conversationTimeBaseTruncated;
    BOOL _forceFixedEncryptionLabel;
    VCSwitchManager *_switchManager;
    int _currentConnectionType;
    BOOL _isCurrentConnectionConstrained;
    struct __CFDictionary { } *_mediaTypeToSpatialMetadataEntryMap;
    unsigned long long _siriSpatialAudioSourceID;
    NSObject<OS_dispatch_semaphore> *_stopCompletedSemaphore;
    BOOL _didServerDie;
    BOOL _isServerPacketRetransmissionForVideoEnabled;
    BOOL _isUplinkRetransmissionForVideoEnabled;
    BOOL _isSSRCCollisionDetectionEnabled;
    BOOL _detectInactiveAudioFramesAACELD;
    VCSessionSwitches *_abSwitches;
    VCMediaRecorder *_mediaRecorder;
    BOOL _isSpatialAudioSupported;
    BOOL _isAlwaysHDCaptureEnabled;
    NSUUID *_playbackSynchronizationGroupUUID;
    double _playbackSynchronizationGroupStartTime;
    unsigned int _maxPlaybackSynchronizationGroupMemberCount;
    VCConnectionTimeBooster *_connectionTimeBooster;
}

@property (retain) NSMutableDictionary *optInDictionary;
@property (nonatomic) BOOL isOneToOneRemoteMediaStalling;
@property (nonatomic) struct tagVCMediaQueue { } *mediaQueue;
@property (nonatomic, setter=setParentNWActivity:) NSObject<OS_nw_activity> *parentNWActivity;
@property (retain, nonatomic) NSObject<OS_nw_activity> *nwActivity;
@property (readonly, nonatomic) NSDictionary *capabilities;
@property (readonly, nonatomic) NSDictionary *transportMetadata;
@property (readonly, nonatomic) VCSessionParticipantLocal *localParticipant;
@property (readonly, nonatomic) NSArray *remoteParticipants;
@property (readonly, nonatomic) VCSessionParticipantRemote *oneToOneRemoteParticipant;
@property (readonly, nonatomic) id<VCSessionDelegate> delegate;
@property (readonly, nonatomic) NSString *idsDestination;
@property (readonly, nonatomic) NSString *uuid;
@property (readonly, nonatomic) unsigned int transportSessionID;
@property (retain, nonatomic) id<VCConnectionProtocol> currentActiveConnection;
@property (readonly, nonatomic) VCTransportSession *transportSession;
@property (readonly, nonatomic) VCSessionStatsController *sessionStatsController;
@property (readonly, nonatomic) AVCRateController *downlinkRateController;
@property (retain, nonatomic) NSMutableDictionary *remoteParticipantsMapByServerID;
@property (retain, nonatomic) VCSessionMessaging *sessionMessaging;
@property (nonatomic) BOOL oneToOneModeEnabled;
@property (nonatomic) BOOL sharingEnabled;
@property (nonatomic) BOOL screenAndCameraMixingEnabled;
@property (readonly, nonatomic) int reportingClientType;
@property (readonly, nonatomic) int reportingModuleID;
@property (nonatomic) BOOL lowPowerModeEnabled;
@property (retain, nonatomic) VCExperimentManager *experimentManager;
@property (retain, nonatomic) NSUUID *playbackSynchronizationGroupUUID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)sensitiveContentAnalysisEnabled;
+ (void)initVideoFeatureStatusSettings:(struct tagVCReportingClientSettingsPersist { char x0; char x1; char x2; char x3; char x4; char x5; char x6; unsigned long long x7; struct tagVCReportingClientExperimentSettings { BOOL x0; BOOL x1; BOOL x2; } x8; } *)a0;
+ (void)addUUIDToMutableData:(id)a0 fromUUIDString:(id)a1;
+ (void)cleanupControlChannelParticipantConfig:(struct { int x0; struct tagVCSecurityKeyHolder *x1; struct tagVCSecurityKeyHolder *x2; struct __CFData *x3; struct __CFData *x4; BOOL x5; } *)a0;
+ (int)deviceRoleForSessionMode:(long long)a0;
+ (BOOL)isServerPacketRetransmissionEnabledForVideo;
+ (BOOL)isUplinkRetransmissionEnabledForVideo;
+ (unsigned int)mediaStateForMediaStateMessageValue:(id)a0;
+ (id)mediaStateMessageKeyForMediaType:(unsigned int)a0;
+ (id)mediaStateMessageStreamGroupKeysForMediaType:(unsigned int)a0;
+ (id)mediaStateMessageValueForMediaState:(unsigned int)a0;
+ (unsigned int)mediaTypeForMediaStateMessageKey:(id)a0;
+ (void)terminateProcess:(id)a0 terminateSource:(id)a1 agent:(struct opaqueRTCReporting { } *)a2;

- (void)setState:(unsigned int)a0;
- (void)tearDown;
- (void)start;
- (void)dealloc;
- (void)updateConfiguration:(id)a0;
- (void)removeParticipant:(id)a0;
- (void)stopWithError:(id)a0;
- (int)learntBitrateForSegment:(id)a0 defaultValue:(int)a1;
- (void)rateController:(id)a0 isECNEnabled:(BOOL)a1 isECNCapable:(BOOL)a2;
- (void)rateController:(id)a0 targetBitrateDidChange:(unsigned int)a1 rateChangeCounter:(unsigned int)a2;
- (void)setIsUplinkRetransmissionEnabled:(BOOL)a0;
- (void)dispatchedStart;
- (void)handlePrimaryConnectionChanged:(id)a0;
- (void)initAudioFeatureStatusSettings:(struct tagVCReportingClientSettingsPersist { char x0; char x1; char x2; char x3; char x4; char x5; char x6; unsigned long long x7; struct tagVCReportingClientExperimentSettings { BOOL x0; BOOL x1; BOOL x2; } x8; } *)a0;
- (void)initWithRelevantStorebagEntries;
- (BOOL)isJBLatencySensitiveModeEnabled;
- (BOOL)isTLEEnabledOnPrimaryConnection;
- (void)multiwayToOneToOneSwitchSuspend;
- (void)oneToOneToMultiwaySwitchSuspend;
- (void)setTransportSessionEventHandler;
- (void)setupKeyFrameGenerationMessages;
- (void)cleanupOneToOne;
- (void)enableVCOverlay;
- (id)vcrcServerBagWithOperatingMode:(int)a0;
- (BOOL)actionDidFinishForContext:(const struct tagVCAsynchronousActionContext { unsigned char x0; void *x1; } *)a0 withError:(id *)a1;
- (BOOL)actionWillBeginForContext:(const struct tagVCAsynchronousActionContext { unsigned char x0; void *x1; } *)a0 withError:(id *)a1;
- (void)addNegotiatedCipherSuitesForParticipant:(id)a0 toReportingDictionary:(id)a1;
- (BOOL)addOneToOneParticipant:(id)a0;
- (void)addParticipantConfigurations:(id)a0;
- (void)additionalFlushCountToOneToOneRateController:(unsigned int)a0;
- (void)appendMediaTypeMixingListToMessageDictionary:(id)a0;
- (void)applyLinkConstrains:(id)a0;
- (void)applyNegotiatedOneToOneFaceTimeSettings;
- (void)applyRemoteLinkConstrains:(id)a0;
- (void)applySpatialMetadata;
- (void)applyVideoCaptureServerMitigationsForLowPowerMode;
- (void)broadcastInitialMediaState;
- (void)broadcastMediaStateUpdateMessage;
- (void)broadcastMessage:(id)a0 withTopic:(id)a1;
- (void)broadcastMessageDictionary:(id)a0 withTopic:(id)a1;
- (void)broadcastSingleStateMessage:(id)a0 withTopic:(id)a1;
- (unsigned int)calculateExpectedTotalNetworkBitrateDownlink;
- (unsigned int)calculateExpectedTotalNetworkBitrateUplink;
- (void)cleanUpMediaRecorder;
- (void)cleanUpOneToOneVideoStreamDelegate;
- (void)cleanupNwActivity;
- (void)cleanupOneToOneDelegates;
- (void)cleanupOneToOneMediaQueue;
- (void)cleanupOneToOneVideoReceiverDelegate;
- (void)cleanupRateControllerOneToOne;
- (void)cleanupSpatialAudio;
- (void)cleanupVCRC;
- (void)collectSessionEventKeyFieldsAndSubtype:(struct __CFDictionary { } *)a0 eventType:(unsigned short)a1 withParticipant:(id)a2 keyChangeReason:(id)a3 newMKI:(id)a4 withStreamGroupID:(unsigned int)a5 withStreamID:(unsigned short)a6 collectSubtype:(unsigned short *)a7;
- (BOOL)completeTransitionToOneToOneEnabled:(BOOL)a0;
- (void)completionHandlerOneToOneEnabled:(BOOL)a0 didSucceed:(BOOL)a1 configurationDict:(id)a2;
- (BOOL)composeControlChannelParticipantConfig:(struct { int x0; struct tagVCSecurityKeyHolder *x1; struct tagVCSecurityKeyHolder *x2; struct __CFData *x3; struct __CFData *x4; BOOL x5; } *)a0 withRemoteParticipant:(id)a1;
- (id)computeConversationTimeBaseTruncated;
- (struct __CFString { } *)configurationSpecificReportingClientName;
- (struct __CFString { } *)configurationSpecificReportingServiceName;
- (id)configurationSpecificReportingServiceNameOneToOne;
- (BOOL)configureLocalParticipantWithOneToOneRemoteParticipant:(id)a0 isInitialConfiguration:(BOOL)a1;
- (void)configureOneToOneRateController:(id)a0;
- (void)configureOneToOneRateController:(id)a0 isUsingCamera:(BOOL)a1 isUsingScreen:(BOOL)a2;
- (void)configureOneToOneReportingOnVideoEnabled;
- (BOOL)configureRemoteParticipant:(id)a0 withConfig:(id)a1;
- (BOOL)configureRemoteParticipantForOneToOne:(id)a0;
- (void)configureSessionForLowPowerMode:(BOOL)a0;
- (void)createMediaQueue;
- (void)createSessionMessaging;
- (void)deregisterForThermalFeatureNotifications;
- (void)destroySessionMessaging;
- (unsigned int)detailedErrorCodeForNoRemotePacketsError;
- (BOOL)detectSSRCCollision:(id)a0 resetNeeded:(BOOL *)a1;
- (BOOL)detectSSRCCollisionWithRemoteMediaStream:(id)a0 remoteBlobCreationTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })a1 resetNeeded:(BOOL *)a2;
- (void)didChangeThermalLevel:(int)a0;
- (void)didEnableLowPowerMode:(BOOL)a0;
- (void)didEncryptionKeyRollTimeout;
- (void)didLocalNetworkConditionChange:(BOOL)a0 isLocalNetworkQualityDegraded:(BOOL)a1 isRemoteNetworkQualityDegraded:(BOOL)a2;
- (void)didReceiveMomentsRequest:(id)a0;
- (void)didReceivedSessionStatsAtTime:(double)a0;
- (void)didRemoveSpatialMetadataEntry;
- (void)dispatchedAddParticipantConfigurations:(id)a0;
- (void)dispatchedAddParticipantWithConfig:(id)a0;
- (void)dispatchedConfigureSessionForLowPowerMode:(BOOL)a0;
- (void)dispatchedParticipant:(id)a0 didStart:(BOOL)a1 error:(id)a2;
- (void)dispatchedParticipant:(id)a0 didStopWithError:(id)a1;
- (void)dispatchedRemoteCellTechStateUpdate:(id)a0 maxRemoteBitrate:(id)a1;
- (void)dispatchedRemoveParticipant:(id)a0;
- (void)dispatchedSetOneToOneModeEnabled:(BOOL)a0 isLocal:(BOOL)a1 configurationDict:(id)a2;
- (void)dispatchedSetPlaybackSyncGroupUUID:(id)a0;
- (void)dispatchedSetRemoteScreenControlEnabled:(BOOL)a0 isLocal:(BOOL)a1;
- (void)dispatchedSetScreenAndCameraMixingEnabled:(BOOL)a0;
- (void)dispatchedSetSharingEnabled:(BOOL)a0;
- (void)dispatchedStopWithError:(id)a0;
- (void)dispatchedStopWithError:(id)a0 didRemoteCancel:(BOOL)a1;
- (void)dispatchedTransportStop;
- (void)dispatchedUpdateConfiguration:(id)a0;
- (void)distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:(BOOL)a0;
- (void)dumpVCSessionMetadataToDataStore;
- (void)enableDataCollectionInReportingConfig:(struct { unsigned int x0; struct __CFString *x1; struct __CFDate *x2; int x3; BOOL x4; void *x5; id x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; struct __CFString *x10; struct __CFDictionary *x11; id /* block */ x12; id x13; BOOL x14; struct tagABCSymptomsReportingTelemetryThresholdValues { int x0; int x1; int x2; int x3; int x4; } x15; struct tagVCPersistentDataStoreConfiguration { BOOL x0; BOOL x1; struct __CFString *x2; } x16; } *)a0;
- (int)flushBasebandWithPayloads:(id)a0;
- (void)generateKeyFrameWithReceivedMessage:(id)a0 forParticipant:(id)a1;
- (BOOL)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned char x8; } *)a0 reportCount:(char *)a1;
- (void)generateReportDictionary:(struct __CFDictionary { } *)a0;
- (struct __CFDictionary { } *)getClientSpecificUserInfo;
- (long long)getCurrentMicMode;
- (int)getStorebagValueForIntegerKey:(id)a0 defaultValue:(id)a1;
- (void)handleActiveConnectionChange:(id)a0;
- (void)handleActiveConnectionChangeForMultiway:(id)a0;
- (void)handleActiveConnectionChangeForOneToOne:(id)a0;
- (void)handleCellTechChange:(int)a0 connection:(id)a1;
- (void)handleCellularMTUChanged:(unsigned short)a0 connection:(id)a1;
- (void)handleDeviceStateMessage:(id)a0 forParticipantId:(id)a1;
- (BOOL)handleEncryptionInfoChange:(id)a0;
- (void)handleEncryptionInfoEvent:(id)a0;
- (void)handleMediaQueueSizeExceedThresholdWithQueueSize:(double)a0 mediaQueueStreamId:(unsigned int)a1 type:(int)a2;
- (void)handleMembershipChangeInfoEvent:(id)a0;
- (void)handleMicModeNotification:(id)a0;
- (void)handleNetworkCapabilityMessage:(id)a0 forParticipantId:(id)a1;
- (void)handlePreferredInterfaceForDuplicationUpdate:(unsigned char)a0 notifyPeer:(BOOL)a1 enableDuplication:(BOOL)a2 isMediaUnrecoverableSignal:(BOOL)a3;
- (id)initWithIDSDestination:(id)a0 configurationDict:(id)a1 negotiationData:(id)a2 delegate:(id)a3 processId:(int)a4 isGKVoiceChat:(BOOL)a5;
- (BOOL)isAVCForcingECNDefaultSet;
- (BOOL)isECNCapableWithRemoteParticipant:(id)a0;
- (BOOL)isECNPermittedFromNetworkingLayer;
- (BOOL)isEnhancedJBAdaptationsEnabled;
- (BOOL)isLateKeyFrameDetectionEnabled;
- (BOOL)isNetworkForcingECNDefaultSet;
- (BOOL)isOneToOneRemoteParticipantUsingScreen;
- (BOOL)isOneToOneUsingScreen;
- (BOOL)isOneToOneUsingVideo;
- (BOOL)isPersonaCameraSupported;
- (BOOL)isUsingPersonaCamera;
- (int)maxOneToOneCameraFrameRate;
- (int)maxRemoteParticipants30fps;
- (void)mediaController:(void *)a0 mediaSuggestionDidChange:(struct VCRateControlMediaSuggestion { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; })a1;
- (void)mediaQualityDegraded:(BOOL)a0;
- (void)mediaRecorder:(id)a0 shouldProcessRequest:(id)a1 recipientID:(id)a2;
- (void)mediaStateChangedForParticipant:(id)a0;
- (void)messageExistingParticipantsPostOneToOneModeSwitch;
- (void)messageMediaInitialStateToParticipant:(id)a0;
- (BOOL)multiwayToOneToOneSwitchConfigure;
- (void)multiwayToOneToOneSwitchResume;
- (BOOL)negotiateOneToOneWithRemoteParticipant:(id)a0;
- (id)newEncryptionLabelWithLocalUUID:(id)a0 remoteUUID:(id)a1;
- (id)newNegotiatorForOneToOneWithRemoteParticipant:(id)a0;
- (id)newNetworkBitrateString:(const struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)a0;
- (id)newParticipantOneToOneConfigWithIDSParticipantID:(unsigned long long)a0 isLocal:(BOOL)a1 mediaControlInfoVersion:(unsigned char)a2 videoEnabled:(BOOL)a3 screenEnabled:(BOOL)a4 remoteParticipant:(id)a5;
- (void)notifyDelegateActiveConnectionDidChange;
- (void)notifyRemoteOfCellTechChange:(id)a0 remoteParticipant:(id)a1;
- (void)oneToOneToMultiwaySwitchConfigure;
- (void)oneToOneToMultiwaySwitchResume;
- (void)optInStreamWithIDSStreamIDs:(id)a0;
- (void)optOutStreamWithIDSStreamIDs:(id)a0;
- (id)participantForID:(id)a0;
- (id)participantsToString;
- (void)preWarmStateChanged:(BOOL)a0;
- (void)processDidStop;
- (void)processMediaStateMessage:(id)a0 remoteParticipantID:(id)a1;
- (void)processMediaTypeMixingList:(id)a0 forRemoteParticipant:(id)a1;
- (void)processMediaTypeStatesWithMessage:(id)a0 mediaTypeStates:(id)a1;
- (void)processStreamGroupStateMessageKey:(id)a0 value:(id)a1 mediaTypeStates:(id)a2;
- (void)processSymptomFromMessage:(id)a0 participantID:(id)a1 isLocalInitiated:(BOOL)a2 isLocalSideOnly:(BOOL)a3;
- (void)readAndSetABCSymptomsReportingThresholdsFromStorebags:(struct { unsigned int x0; struct __CFString *x1; struct __CFDate *x2; int x3; BOOL x4; void *x5; id x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; struct __CFString *x10; struct __CFDictionary *x11; id /* block */ x12; id x13; BOOL x14; struct tagABCSymptomsReportingTelemetryThresholdValues { int x0; int x1; int x2; int x3; int x4; } x15; struct tagVCPersistentDataStoreConfiguration { BOOL x0; BOOL x1; struct __CFString *x2; } x16; } *)a0;
- (void)recommendedSettingsChanged:(id)a0;
- (void)registerForThermalFeatureNotifications;
- (void)registerQoSReporting;
- (BOOL)registerRemoteParticipantToSession:(id)a0;
- (void)registerReportingTask;
- (void)remoteCellTechStateUpdate:(int)a0 maxRemoteBitrate:(unsigned int)a1;
- (void)removeDelegatesForRemoteParticipant:(id)a0;
- (void)renewOneToOneMediaQueue;
- (void)reportActiveConnectionOneToOne;
- (void)reportClientPersistentSettings;
- (void)reportCompletedSwitchingToOneToOne:(BOOL)a0;
- (void)reportExistingParticipantsAnew;
- (void)reportKeysForDeviceStateMessage:(unsigned short)a0 stateMessage:(id)a1 InPayload:(id)a2 ForParitcipant:(id)a3;
- (void)reportLocalRateControlExperimentConfiguration;
- (void)reportNearbyStart;
- (void)reportNearbyStop;
- (void)reportStartedSwitchingToOneToOne:(BOOL)a0;
- (void)reportSwitchingError:(BOOL)a0 errorEvent:(unsigned int)a1;
- (void)reportingIntervalChanged:(double)a0;
- (void)reportingMomentsToGreenTeaWithRequest:(id)a0;
- (void)reportingSessionDownlinkOptInEvent:(id)a0 selectedMediaEntriesForParticipants:(id)a1;
- (void)reportingSessionParticipantEvent:(unsigned short)a0 keyChangeReason:(id)a1 newMKI:(id)a2;
- (void)reportingSessionParticipantEvent:(unsigned short)a0 withParticipant:(id)a1;
- (void)reportingSessionParticipantEvent:(unsigned short)a0 withParticipant:(id)a1 keyChangeReason:(id)a2 newMKI:(id)a3;
- (void)reportingSessionParticipantEvent:(unsigned short)a0 withParticipant:(id)a1 keyChangeReason:(id)a2 newMKI:(id)a3 withStreamGroupID:(unsigned int)a4 withStreamID:(unsigned short)a5;
- (void)reportingSessionParticipantEvent:(unsigned short)a0 withParticipant:(id)a1 streamGroupID:(unsigned int)a2 streamID:(unsigned short)a3;
- (void)reportingSessionRemoteParticipantEvent:(unsigned short)a0 withParticipant:(id)a1 value:(id)a2;
- (void)reportingSessionStopEventWithError:(id)a0;
- (void)reportingSetUserInfo;
- (int)reserveAudioChannelForMediaType:(unsigned int)a0;
- (void)resetDecryptionTimeout;
- (void)revertMultiwayToOneToOneModeSwitchConfigure;
- (int)selectDataPath;
- (void)sendDeviceStateMessageToParticipant:(id)a0 withStatus:(id)a1 checkDNUStatus:(BOOL)a2;
- (void)sendInitialDeviceOrientationToRemote;
- (void)sendMediaStateUpdateMessageToRemoteParticipant:(id)a0;
- (void)sendNetworkCapabilitiesMessageToParticipant:(id)a0;
- (void)sendStreamGroupStateToParticipant:(id)a0;
- (void)sendSymptomsToRemoteParticipants:(id)a0 symptom:(id)a1 groupID:(id)a2;
- (void)sendThermalAndSliceMessageToPariticipant:(id)a0;
- (void)sendVCRCMLReportingEnrollmentEvent;
- (void)serverDidDie;
- (char *)sessionStateToString:(unsigned int)a0;
- (void)setBytesInFlightFlagWithParticipant:(id)a0;
- (void)setDelegatesForRemoteParticipant:(id)a0;
- (void)setIsOneToOneRemoteMediaStalling:(BOOL)a0;
- (void)setIsSpatialAudioSupported:(BOOL)a0;
- (void)setLinkTypeForFeedbackController:(id)a0 withActiveConnection:(id)a1;
- (void)setMediaQueuePeakBitrateWithTargetBitrate:(unsigned int)a0;
- (BOOL)setOneToOneConfigOnRemoteParticipant:(id)a0;
- (void)setOneToOneModeEnabled:(BOOL)a0 configurationDict:(id)a1;
- (void)setOneToOneVideoStreamBandwidthProbing:(BOOL)a0;
- (void)setRemoteScreenControlEnabled:(BOOL)a0;
- (void)setReportingConfig:(struct { unsigned int x0; struct __CFString *x1; struct __CFDate *x2; int x3; BOOL x4; void *x5; id x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; struct __CFString *x10; struct __CFDictionary *x11; id /* block */ x12; id x13; BOOL x14; struct tagABCSymptomsReportingTelemetryThresholdValues { int x0; int x1; int x2; int x3; int x4; } x15; struct tagVCPersistentDataStoreConfiguration { BOOL x0; BOOL x1; struct __CFString *x2; } x16; } *)a0;
- (void)setSessionInfoSynchronizerCallbacks;
- (void)setSessionInfoSynchronizerErrorResponseCallback;
- (void)setSessionInfoSynchronizerPeerSubscribedStreamsCallback;
- (void)setTransportConnectionSelectionVersionWithLocalFrameWorkVersion:(id)a0 remoteFrameworkVersion:(id)a1;
- (void)setUpDeviceOrientationMessage;
- (void)setUpSensitiveContentAnalyzerForLocalParticipant;
- (void)setupAudioEnabledMessages;
- (void)setupAudioPausedMessages;
- (void)setupCellTechChangeMessages;
- (void)setupDeviceStateMessage;
- (void)setupDisconnectMessage;
- (void)setupLinkConstrainsChangedMessages;
- (void)setupMediaQualityDegradedMessage;
- (void)setupMediaStateUpdateMessage;
- (void)setupMomentsMessages;
- (void)setupMultiwayABTesting;
- (void)setupNetworkCapabilityMessage;
- (void)setupNetworkQualityDegradedMessage;
- (int)setupOneToOne;
- (void)setupOneToOneABTesting;
- (void)setupOneToOneAdaptiveLearning;
- (void)setupOneToOneEnabledMessages;
- (int)setupOneToOneMediaControlInfoGeneratorsWithVersion:(unsigned char)a0 oneToOneConfig:(id)a1 videoEnabled:(BOOL)a2;
- (int)setupOneToOneMediaQueue;
- (void)setupOneToOneVideoReceiverDelegate;
- (void)setupOneToOneVideoStreamDelegate;
- (void)setupPiPStateChangeMessage;
- (void)setupPreferredInterfaceMessage;
- (int)setupRateControllerOneToOne;
- (void)setupRateControllersMultiway;
- (void)setupReactionMessages;
- (int)setupSpatialAudio;
- (void)setupStreamGroupStateFetchMessage;
- (void)setupSymptomEnabledMessages;
- (void)setupTransportSessionWithDestination:(id)a0;
- (void)setupUplinkBitrateCaps;
- (void)setupVideoEnabledMessages;
- (void)setupVideoPausedMessages;
- (void)setupVideoRedundancyMessages;
- (void)setupWRMAlertUpdateMessage;
- (BOOL)shouldSendControlChannelMessages;
- (void)startDeallocTimer;
- (void)startOneToOne;
- (void)startRateControllerOneToOne;
- (void)startRateControllersMultiwayFromOneToOne:(BOOL)a0;
- (void)startReportingForOneToOneEnabled:(BOOL)a0 withPayload:(id)a1;
- (void)startSessionMessaging;
- (id)stateMessageWithSupportsNestedDictionary:(BOOL)a0;
- (void)stopAllParticipants;
- (void)stopMediaQueueOneToOne;
- (void)stopRateControllerOneToOne;
- (void)stopSessionMessaging;
- (void)stopTimeoutTimer;
- (void)stopWithError:(id)a0 didRemoteCancel:(BOOL)a1;
- (BOOL)switchFromMultiwayToOneToOne;
- (BOOL)switchFromOneToOneToMultiway;
- (void)unregisterQoSReporting;
- (void)unregisterRemoteParticipantFromSession:(id)a0;
- (void)unregisterReportingTask;
- (void)updateAlwaysHDCaptureScreenEnabledWithNewParticipant:(id)a0;
- (void)updateIsPlaybackSynchronizationGroupMemberWithUpdateConfig:(id)a0 forParticipant:(id)a1;
- (void)updateLocalCameraCaptureStatus;
- (void)updateLocalStreamConfiguration;
- (void)updateLocalVideoCaptureFrameRate;
- (void)updateMediaRecorderCapabillities:(unsigned int)a0 imageType:(int)a1 videoCodec:(int)a2;
- (void)updateMicrophoneMuted:(BOOL)a0 withUpdateConfig:(id)a1 forParticipant:(id)a2;
- (void)updateMultiwayRateControllerWithActiveConnection:(id)a0 isScreenEnabled:(BOOL)a1 isLocal:(BOOL)a2;
- (void)updateMultiwayRateControllersWithActiveConnection:(id)a0;
- (void)updateNetworkFeedbackControllerReport:(struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)a0;
- (void)updateOneToOneRateControllerForVideoEnabled:(BOOL)a0;
- (void)updateOneToOneRateControllerForVideoEnabled:(BOOL)a0 screenEnabled:(BOOL)a1;
- (void)updateOneToOneVideoReceiverDelegate:(BOOL)a0;
- (void)updateParticipantConfigurations:(id)a0 sessionPresentationInfo:(id)a1;
- (void)updateParticipantUUID:(id)a0 withUpdateConfig:(id)a1 redistributeBitrate:(BOOL *)a2;
- (void)updateParticipantWindowState;
- (void)updatePlaybackSynchronizationGroupMemberCount;
- (void)updatePlaybackSynchronizationGroupMembership:(BOOL)a0 forParticipant:(id)a1;
- (void)updatePlaybackSynchronizationGroupUUIDWithUpdateConfig:(id)a0;
- (void)updatePositionalInfoWithUpdateConfig:(id)a0 forParticipant:(id)a1;
- (void)updatePresentationInfo:(id)a0;
- (void)updateProminenceIndexWithUpdateConfig:(id)a0 forParticipant:(id)a1 redistributeBitrate:(BOOL *)a2;
- (void)updateStateMessage:(id)a0 stateState:(unsigned int)a1 streamGroupKey:(id)a2;
- (void)updateVCMediaQueueForMediaType:(unsigned int)a0 mediaState:(unsigned int)a1;
- (void)updateVideoQualityWithUpdateConfig:(id)a0 forParticipant:(id)a1 redistributeBitrate:(BOOL *)a2;
- (void)updateVisibilityIndexWithUpdateConfig:(id)a0 forParticipant:(id)a1 redistributeBitrate:(BOOL *)a2;
- (BOOL)validateStreamGroup:(id)a0 state:(id)a1;
- (void)validateVCRCMLEnrollment;
- (void)vcSessionParticipant:(id)a0 audioEnabled:(BOOL)a1 didSucceed:(BOOL)a2 error:(id)a3;
- (void)vcSessionParticipant:(id)a0 audioPaused:(BOOL)a1 didSucceed:(BOOL)a2 error:(id)a3;
- (void)vcSessionParticipant:(id)a0 didChangeActualNetworkBitrateForStreamGroupID:(unsigned int)a1;
- (void)vcSessionParticipant:(id)a0 didChangeDeviceOrientation:(int)a1;
- (void)vcSessionParticipant:(id)a0 didChangeMediaPriority:(unsigned char)a1 description:(id)a2;
- (void)vcSessionParticipant:(id)a0 didDetectError:(id)a1;
- (void)vcSessionParticipant:(id)a0 didRequestVideoRedundancy:(BOOL)a1;
- (void)vcSessionParticipant:(id)a0 didStart:(BOOL)a1 error:(id)a2;
- (void)vcSessionParticipant:(id)a0 didStopWithError:(id)a1;
- (void)vcSessionParticipant:(id)a0 didSwitchFromStreamID:(unsigned short)a1 toStreamID:(unsigned short)a2;
- (void)vcSessionParticipant:(id)a0 mediaMixingDidChangeForMediaType:(unsigned int)a1 mixingMediaType:(unsigned int)a2;
- (void)vcSessionParticipant:(id)a0 mediaStateDidChange:(unsigned int)a1 forMediaType:(unsigned int)a2 didSucceed:(BOOL)a3 error:(id)a4;
- (void)vcSessionParticipant:(id)a0 oneToOneModeDidChange:(BOOL)a1;
- (void)vcSessionParticipant:(id)a0 reactionDidStart:(id)a1;
- (void)vcSessionParticipant:(id)a0 remoteAudioEnabledDidChange:(BOOL)a1;
- (void)vcSessionParticipant:(id)a0 remoteAudioPausedDidChange:(BOOL)a1;
- (void)vcSessionParticipant:(id)a0 remoteMediaStateDidChange:(unsigned int)a1 forMediaType:(unsigned int)a2;
- (void)vcSessionParticipant:(id)a0 remoteScreenEnabledDidChange:(BOOL)a1;
- (void)vcSessionParticipant:(id)a0 remoteVideoEnabledDidChange:(BOOL)a1;
- (void)vcSessionParticipant:(id)a0 remoteVideoPausedDidChange:(BOOL)a1;
- (void)vcSessionParticipant:(id)a0 requestKeyFrameGenerationWithStreamID:(unsigned short)a1 streamGroupID:(unsigned int)a2 firType:(int)a3;
- (void)vcSessionParticipant:(id)a0 screenEnabled:(BOOL)a1 didSucceed:(BOOL)a2 error:(id)a3;
- (void)vcSessionParticipant:(id)a0 videoEnabled:(BOOL)a1 didSucceed:(BOOL)a2 error:(id)a3;
- (void)vcSessionParticipant:(id)a0 videoPaused:(BOOL)a1 didSucceed:(BOOL)a2 error:(id)a3;
- (void)vcSessionParticipantDidChangeReceivingStreams:(id)a0;
- (void)vcSessionParticipantDidChangeSendingStreams:(id)a0;
- (void)vcSessionParticipantDidDetectMKICollision:(id)a0;
- (void)vcSessionParticipantDidMediaDecryptionTimeOut:(id)a0;
- (void)vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:(id)a0;
- (void)vcSessionParticipantDidMediaReceiveFlushRequestWithPayloads:(id)a0;
- (void)vcSessionParticipantDidRemoteMediaStallTimeout:(id)a0 duration:(double)a1;
- (void)vcSessionParticipantDidStopReacting:(id)a0;
- (void)vcSessionParticipantFetchStreamGroupState:(id)a0;
- (unsigned int)vcrcServerBagProfileNumber;

@end

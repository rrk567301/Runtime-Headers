@class NSString, NSMutableDictionary, NSMutableSet, NSSet, NSMutableOrderedSet, VCMediaNegotiatorMediaEncryptionSettings;

@interface VCMediaNegotiatorLocalConfiguration : NSObject <NSCopying> {
    int accessNetworkType;
}

@property (retain, nonatomic) NSMutableDictionary *u1StreamConfigurations;
@property (nonatomic) int preferredAudioCodec;
@property (nonatomic) int deviceRole;
@property (nonatomic) BOOL allowRTCPFB;
@property (nonatomic) BOOL isCaller;
@property (retain, nonatomic) NSString *basebandCodec;
@property (nonatomic) unsigned int basebandCodecSampleRate;
@property (retain, nonatomic) NSMutableSet *bandwidthConfigurations;
@property (retain, nonatomic) NSSet *captionsSenderLanguages;
@property (retain, nonatomic) NSSet *captionsReceiverLanguages;
@property (nonatomic) void *callLogFile;
@property (nonatomic) union tagNTP { unsigned long long wide; struct { unsigned int frac; unsigned int sec; } time; } creationTime;
@property (nonatomic) unsigned char mediaControlInfoVersion;
@property (retain, nonatomic) NSMutableOrderedSet *multiwayAudioStreams;
@property (retain, nonatomic) NSMutableOrderedSet *multiwayVideoStreams;
@property (retain, nonatomic) NSSet *mediaRecorderVideoCodecs;
@property (retain, nonatomic) NSSet *mediaRecorderImageTypes;
@property (nonatomic) BOOL SIPDisabled;
@property (nonatomic) BOOL secureMessagingRequired;
@property (nonatomic) unsigned int faceTimeSwitches;
@property (nonatomic) unsigned int customVideoWidth;
@property (nonatomic) unsigned int customVideoHeight;
@property (nonatomic) BOOL alwaysOnAudRedEnabled;
@property (nonatomic) BOOL alwaysOnAudioRedundancyEnabled;
@property (nonatomic) BOOL highFecEnabled;
@property (nonatomic) BOOL lowFpsVideoEnabled;
@property (nonatomic) BOOL vplrFecEnabled;
@property (nonatomic) BOOL rampDownBWDropEnabled;
@property (nonatomic) BOOL fastMediaDuplicationEnabled;
@property (nonatomic) BOOL iRATRtpEnabled;
@property (nonatomic) BOOL preWarmCellEnabled;
@property (nonatomic) BOOL duplicateImportantPktsEnabled;
@property (nonatomic) unsigned int tilesPerVideoFrame;
@property (nonatomic) BOOL oneToOneModeSupported;
@property (nonatomic) BOOL ltrpEnabled;
@property (retain, nonatomic) NSSet *pixelFormats;
@property (nonatomic) unsigned char mediaControlInfoFECFeedbackVersion;
@property (nonatomic) unsigned char linkProbingCapabilityVersion;
@property (readonly, nonatomic) NSMutableSet *streamGroupConfigs;
@property (readonly, nonatomic) struct CGSize { double width; double height; } screenSize;
@property (readonly, nonatomic) struct CGSize { double width; double height; } aspectRatioLandscape;
@property (readonly, nonatomic) struct CGSize { double width; double height; } aspectRatioPortrait;
@property (readonly, nonatomic) struct CGSize { double width; double height; } orientationMismatchAspectRatioLandscape;
@property (retain, nonatomic) NSSet *hdrModesSupported;
@property (nonatomic) int accessNetworkType;
@property (nonatomic) BOOL fecEnabled;
@property (nonatomic) BOOL rtxEnabled;
@property (nonatomic, getter=isOneToOneAuthTagEnabled) BOOL oneToOneAuthTagEnabled;
@property (nonatomic) BOOL blackFrameOnClearScreenEnabledDefault;
@property (nonatomic) BOOL blackFrameOnClearScreenEnabled;
@property (nonatomic) BOOL foveationIsSupported;
@property (retain, nonatomic) VCMediaNegotiatorMediaEncryptionSettings *mediaEncryptionSettings;
@property (nonatomic) struct CGSize { double width; double height; } orientationMismatchFullScreenAspectRatioLandscape;
@property (nonatomic) int videoFrameMetadataSupportedVersion;
@property (nonatomic) BOOL frontCameraFullScreenSupported;
@property (nonatomic) BOOL backCameraFullScreenSupported;
@property (nonatomic) int deviceInitialOrientation;
@property (nonatomic) unsigned char fecHeaderVersion;
@property (nonatomic) unsigned char rtxVersion;
@property (nonatomic) BOOL enableInterleavedEncoding;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)init;
- (BOOL)isEqual:(id)a0;
- (BOOL)isEqualBandwidthConfigurations:(id)a0;
- (id)mediaConfigurationForMediaType:(unsigned char)a0;
- (BOOL)isEqualMediaRecorderImageTypes:(id)a0;
- (void)addBandwidthConfiguration:(id)a0;
- (void)addMultiwayAudioStream:(id)a0;
- (void)addMultiwayVideoStream:(id)a0;
- (void)addStreamGroupConfig:(id)a0;
- (id)initWithBitrateArbiter:(id)a0;
- (BOOL)isEqualFaceTimeSettings:(id)a0;
- (BOOL)isEqualMediaRecorderVideoCodecs:(id)a0;
- (BOOL)isEqualMultiwayAudioStreamSet:(id)a0;
- (BOOL)isEqualMultiwayVideoStreamSet:(id)a0;
- (BOOL)isEqualStreamGroupConfigs:(id)a0;
- (void)resetStreamGroups;
- (void)setMediaConfiguration:(id)a0 forMediaType:(unsigned char)a1;
- (BOOL)setupBandwidthConfigurationsWithArbiter:(id)a0;
- (BOOL)setupBandwidthExtensionConfiguration:(id)a0;

@end

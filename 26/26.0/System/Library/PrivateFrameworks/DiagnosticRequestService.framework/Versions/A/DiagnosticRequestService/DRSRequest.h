@class NSUUID, PBRequest, NSString, NSArray, NSDate, NSData, NSDictionary, NSNumber;
@protocol DRSDecisionServerBatchRequest;

@interface DRSRequest : NSObject <DRSDSRequestObject>

@property (readonly, nonatomic) NSUUID *uniqueID;
@property (readonly, nonatomic) PBRequest *pbRequest;
@property (readonly, nonatomic) id<DRSDecisionServerBatchRequest> pbBatchInstance;
@property (readonly, nonatomic) Class pbBatchResponseClass;
@property (readonly, nonatomic) NSString *functionName;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) unsigned long long expectedType;
@property (retain, nonatomic) NSString *logType;
@property (readonly, nonatomic) unsigned long long uploadID;
@property (retain, nonatomic) NSArray *logs;
@property (nonatomic) unsigned long long requestState;
@property (nonatomic) unsigned char decisionServerDecision;
@property (nonatomic) unsigned short uploadAttemptCount;
@property (nonatomic) BOOL hasBeenCountedByTelemetry;
@property (readonly, nonatomic) BOOL isNonPurgeableInFlightUntilUploadAttempt;
@property (readonly, nonatomic) NSArray *submittedLogInfos;
@property (readonly, nonatomic) NSUUID *requestID;
@property (readonly, nonatomic) NSDate *requestDate;
@property (readonly, nonatomic) NSString *build;
@property (readonly, nonatomic) NSString *teamID;
@property (readonly, nonatomic) NSString *issueCategory;
@property (readonly, nonatomic) NSString *issueDescription;
@property (readonly, nonatomic) NSData *contextDictionaryData;
@property (readonly, nonatomic) NSDictionary *contextDictionary;
@property (readonly, nonatomic) NSDictionary *metadataDictionary;
@property (readonly, nonatomic) NSString *hwModel;
@property (readonly, nonatomic) NSNumber *isLikeCarryDevice;
@property (readonly, nonatomic) NSString *automatedDeviceGroup;
@property (readonly, nonatomic) unsigned long long requestMCT;
@property (readonly, nonatomic) NSString *requestType;
@property (readonly, nonatomic) unsigned long long totalLogSizeBytes;
@property (readonly, nonatomic) BOOL hasUploadableContent;
@property (readonly, nonatomic) NSString *requestStateString;
@property (readonly, nonatomic) unsigned char requestOutcome;
@property (readonly, nonatomic) NSString *requestOutcomeString;
@property (readonly, nonatomic) NSString *errorDescription;
@property (readonly, nonatomic) NSString *decisionServerDecisionString;
@property (readonly, nonatomic) NSString *ckRecordID;
@property (readonly, nonatomic) unsigned long long logSizeLimitBytes;
@property (readonly, nonatomic) BOOL isExpedited;

+ (id)requiredSystemResourceName;
+ (unsigned char)maxUploadAttemptCount;
+ (id)requestsForFilterPredicate:(id)a0 context:(id)a1 sortDescriptors:(id)a2 fetchLimit:(unsigned long long)a3 errorOut:(id *)a4;
+ (BOOL)cleanRequestRecordsFromPersistentContainer:(id)a0 removeFiles:(BOOL)a1 removeRecord:(BOOL)a2 matchingPredicate:(id)a3 errorOut:(id *)a4;
+ (id)entityName;
+ (id)migrateRequestDataStoreAtPath:(id)a0 errorOut:(id *)a1;
+ (BOOL)unblockStrandedUploadingRecordsFromPersistentContainer:(id)a0 errorOut:(id *)a1;
+ (Class)_moClass;
+ (BOOL)isExpeditedTeamID:(id)a0 issueCategory:(id)a1;
+ (id)requestForMessage:(id)a0;
+ (BOOL)_requestMOHasRequiredFields_ON_MOC_QUEUE:(id)a0;
+ (id)leastRecentDateFirstSortDescriptor;
+ (id)unreportedTerminalRequestsFromContext:(id)a0 sortDescriptors:(id)a1 fetchLimit:(unsigned long long)a2 errorOut:(id *)a3;
+ (id)mostRecentDateFirstSortDescriptor;
+ (id)_requestWithRequestMO_ON_MOC_QUEUE:(id)a0;
+ (BOOL)cullOldRequestRecordsFromPersistentContainer:(id)a0 currentDate:(id)a1 errorOut:(id *)a2;
+ (unsigned long long)requestCountForFilterPredicate:(id)a0 context:(id)a1 fetchLimit:(unsigned long long)a2 errorOut:(id *)a3;
+ (id)uploadedBytesSinceDate:(id)a0 context:(id)a1 errorOut:(id *)a2;

- (BOOL)_deleteLogs;
- (id)protoFileDescriptions;
- (id)newRequestMOInContext_ON_MOC_QUEUE:(id)a0;
- (id)_logsDescription;
- (id)fileAssets;
- (void)makeTerminalDueToMissingLog;
- (id)filePaths;
- (void)uploadAbortedDueToLogSize;
- (id)initWithXPCDict:(id)a0;
- (id)fileNames;
- (id)recordRepresentation;
- (void)updateContextWithRequest_ON_MOC_QUEUE:(id)a0;
- (void)_configureRequestMO:(id)a0;
- (id)_processSubmittedLogInfo:(id)a0 workingDirectory:(id)a1;
- (BOOL)uploadStarted;
- (id)logPath;
- (void)uploadCompleteWithError:(id)a0 ckOperationID:(id)a1 ckRecordID:(id)a2;
- (id)fileURLs;
- (id)jsonCompatibleDictionaryRepresentationVerbose:(BOOL)a0;
- (BOOL)addContextMetadataKey:(id)a0 numberValue:(id)a1 errorOut:(id *)a2;
- (id)_initWithRequestMO_ON_MOC_QUEUE:(id)a0;
- (id)replyForMessage:(id)a0;
- (BOOL)isEqualToRequest:(id)a0;
- (BOOL)_performPostClientLogWork:(id)a0 dampeningOutcome:(unsigned long long)a1 isLogUploadEnabled:(BOOL)a2;
- (BOOL)_updateLogFileStateForTransitionFromPreviousState:(unsigned long long)a0;
- (BOOL)addContextMetadataKey:(id)a0 stringValue:(id)a1 errorOut:(id *)a2;
- (BOOL)updateToState:(unsigned long long)a0 errorDescription:(id)a1 errorOut:(id *)a2;
- (void)uploadFailedDueToReason:(id)a0 ckOperationID:(id)a1;
- (id)uploadRequest;
- (void)uploadDeniedByDecisionServerWithReason:(id)a0;
- (void)addHWModelContextMetadata;
- (BOOL)performOnReceiptWork:(id)a0 dampeningOutcome:(unsigned long long)a1;
- (BOOL)_updateLogStateToExpectedState:(unsigned char)a0;
- (BOOL)_populateLogsArray_ON_MOC_QUEUE:(id)a0;
- (void)addAutomatedDeviceGroupContext;
- (BOOL)_markLogsAsPurgeableWithUrgencyWithDeleteFallback:(unsigned long long)a0;
- (void)addIsLikelyCarryContextMetadata;
- (BOOL)_addContextMetadataKey:(id)a0 value:(id)a1 expectedClass:(Class)a2 errorOut:(id *)a3;
- (void)_addLogMOs:(id)a0;
- (id)targetContainerName;
- (BOOL)isEqual:(id)a0;
- (id)protoRequestDescription;
- (void).cxx_destruct;

@end

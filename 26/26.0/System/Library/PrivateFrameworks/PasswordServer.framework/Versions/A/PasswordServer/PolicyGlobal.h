@interface PolicyGlobal : PolicyBase <PolicyAbstract> {
    struct PWGlobalAccessFeatures { unsigned char hcHighBit : 1; unsigned char passwordCannotBeName : 1; unsigned char passwordIsHash : 1; unsigned char requiresNumeric : 1; unsigned char requiresAlpha : 1; unsigned char usingHardExpirationDate : 1; unsigned char usingExpirationDate : 1; unsigned char usingHistory : 1; unsigned char unused : 1; unsigned char requiresSymbol : 1; unsigned char noModifyPasswordforSelf : 1; unsigned char newPasswordRequired : 1; unsigned char requiresMixedCase : 1; unsigned char hcLowBits : 3; struct BSDTimeStructCopy { int tm_sec; int tm_min; int tm_hour; int tm_mday; int tm_mon; int tm_year; int tm_wday; int tm_yday; int tm_isdst; int tm_gmtoff; unsigned int tm_zone; } expirationDateGMT; struct BSDTimeStructCopy { int tm_sec; int tm_min; int tm_hour; int tm_mday; int tm_mon; int tm_year; int tm_wday; int tm_yday; int tm_isdst; int tm_gmtoff; unsigned int tm_zone; } hardExpireDateGMT; unsigned int maxMinutesUntilChangePassword; unsigned int maxMinutesUntilDisabled; unsigned int maxMinutesOfNonUse; unsigned short maxFailedLoginAttempts; unsigned short minChars; unsigned short maxChars; } mGlobalPolicy;
    struct PWGlobalMoreAccessFeatures { unsigned int minutesUntilFailedLoginReset; unsigned int notGuessablePattern; } mExtraGlobalPolicy;
}

- (void)setPolicy:(const struct PWGlobalAccessFeatures { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 3; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x14; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned short x19; unsigned short x20; unsigned short x21; } *)a0;
- (void)convertDictToStruct:(struct __CFDictionary { } *)a0;
- (struct __CFDictionary { } *)convertStructToDict;
- (struct __CFDictionary { } *)convertStructToDictWithState;
- (void)getPolicy:(struct PWGlobalAccessFeatures { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 3; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x14; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned short x19; unsigned short x20; unsigned short x21; } *)a0 extraPolicy:(struct PWGlobalMoreAccessFeatures { unsigned int x0; unsigned int x1; } *)a1;
- (void)setPolicy:(const struct PWGlobalAccessFeatures { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 3; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x14; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned short x19; unsigned short x20; unsigned short x21; } *)a0 extraPolicy:(const struct PWGlobalMoreAccessFeatures { unsigned int x0; unsigned int x1; } *)a1;

@end

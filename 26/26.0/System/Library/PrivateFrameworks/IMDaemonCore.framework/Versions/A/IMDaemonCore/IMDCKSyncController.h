@class NSString, NSTimer, IMStateCaptureAssistant, NSDate, IMSyncResumer;

@interface IMDCKSyncController : IMDCKAbstractSyncController <IMDMessageSyncCoordinatorDelegate, IMDXPCEventStreamHandlerDelegate, IMUnlockMonitorListener, IMDCKAbstractSyncControllerDelegate, IMStateLoggable>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSDate *syncStartDate;
@property (retain, nonatomic) NSTimer *longRunningSyncTimer;
@property (nonatomic) long long initialSyncAttempts;
@property BOOL shouldReloadConversations;
@property (retain) NSTimer *reloadTimer;
@property (retain, nonatomic) IMSyncResumer *syncResumer;
@property (retain, nonatomic) IMStateCaptureAssistant *stateCaptureAssistant;
@property (nonatomic) BOOL isFetchingExitForEnablement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedInstance;
+ (BOOL)initialSyncAllowed;

- (BOOL)_hasTriedToEnableMiCByDefault;
- (void)beginInitialSyncWithActivity:(id)a0;
- (void)_autoBugCaptureWithSubType:(id)a0 debugDescription:(id)a1;
- (void)clearAnalyticDefaultsAndLocalSyncState;
- (void)_beginExitStateCleanupIfNeededWithActivity:(id)a0;
- (BOOL)_serverAllowsUIRefreshTimerWhileSyncing;
- (void)syncCoordinatorFinishedFetchingRecordsOfType:(long long)a0 name:(id)a1 identifier:(id)a2 count:(long long)a3 error:(id)a4;
- (BOOL)_accountHasMultipleDevices;
- (void)_ifCloudKitAbleToSyncWithActivity:(id)a0 callBlock:(id /* block */)a1;
- (void)dealloc;
- (void)resumeSyncOnLaunchIfNeeded;
- (void)_reloadChatRegistryOnMainThread;
- (BOOL)_syncNotCompletedRecently;
- (BOOL)_serverDeniesDailySyncStateAnalytics;
- (void)syncAttachmentMetadataFirstSyncWithActivity:(id)a0 deviceConditionsToCheck:(unsigned long long)a1 completionBlock:(id /* block */)a2;
- (void)_iCloudAccountDidChange:(id)a0;
- (void)_didPassAccountAndIdentityUpdateNeeds;
- (void)_postMetricsToCloudKitOnAutomaticHistoryDeletionAgentLaunch;
- (long long)_periodicSyncAttemptCount;
- (double)reloadTimeInterval;
- (BOOL)_handleSyncFailureType:(long long)a0 step:(long long)a1 activity:(id)a2 attemptCount:(unsigned long long)a3 startTime:(id)a4 error:(id)a5 retry:(id /* block */)a6;
- (void)_noteMeticsForSyncEndedWithSuccces:(BOOL)a0;
- (void)syncDeletesToCloudKitWithActivity:(id)a0 completion:(id /* block */)a1;
- (id)messageSyncController;
- (BOOL)_serverDoesNotAllowComingBackOnlineChatSync;
- (id)_keychainErrorWithCause:(id)a0;
- (BOOL)_completedPeriodicSyncSinceFirstFullSyncForLastSyncDate:(id)a0 firstFullSyncCompletedDate:(id)a1;
- (BOOL)_serverDoesNotSingleDeviceLimitation;
- (void)beginPeriodicSyncWithActivity:(id)a0;
- (void)_attemptToMigrateACAccountEnablementOnce;
- (void)_needsSyncOnIdentityUpdate;
- (id)_stringForObject:(id)a0;
- (id)_dailySyncStateDictionary;
- (BOOL)verifyAccountsMatchForMoc;
- (void)registerCloudSyncDependencies;
- (void)_submitCloudKitAnalyticWithOperationGroupName:(id)a0 analyticDictionary:(id)a1;
- (BOOL)_chatSyncedRecently;
- (id)syncStateDebuggingInfo:(id)a0;
- (void)_setHasTriedToEnableMiCByDefault;
- (void)_noteMetricsForSyncStartFrom:(id)a0 fullSync:(BOOL)a1;
- (void)syncCoordinatorStartedSyncWithName:(id)a0 identifier:(id)a1;
- (void)_attemptToEnableMiCByDefaultOnceAttempt:(int)a0;
- (BOOL)_shouldEnableMiCByDefaultUponReinstallation;
- (id)init;
- (void)_addDatesDefaultsIfNeededToDictionary:(id)a0;
- (double)_IMAHDAgentFallbackIntervalInSeconds;
- (double)_retryIntervalToEnableMicByDefaultForAttempt:(int)a0;
- (void)_nukeCKData;
- (double)_minimumChatComingOnlineSyncInterval;
- (id)initialAttachmentSyncController;
- (BOOL)_didUpgradeOrRestoreFromBackup;
- (void)updateSecurityLevelDowngradedIfNeeded:(id /* block */)a0;
- (void)scheduleAttachmentAssetDownload;
- (void)_refreshUIWhileSyncing;
- (void)recordMetricIsCloudKitEnabled;
- (long long)syncControllerRecordType;
- (void)_clearTombstonesWithActivity:(id)a0;
- (void)eventStreamHandler:(id)a0 didReceiveEventWithName:(id)a1 userInfo:(id)a2;
- (id)stateDictionaryForDiagnosticsRequest;
- (id)initialMessageSyncController;
- (void)clearCKRelatedDefaults;
- (void)_resetSyncStateAndAttemptCounts;
- (id)exitManager;
- (long long)_manualSyncAttemptCount;
- (id)attachmentSyncController;
- (void)_callSyncWithCompletion:(id /* block */)a0 activity:(id)a1;
- (void)_writeDownSyncDate;
- (void)syncController:(id)a0 syncBatchCompleted:(unsigned long long)a1;
- (id)_sharedDatabaseManager;
- (void)_addDatesDefaultsIfNeededToDictionary:(id)a0 keys:(id)a1;
- (void)clearLocalCloudKitSyncState;
- (void)beginUserInitiatedSync;
- (void)kickOffEagerSyncIfApplicable;
- (id)_keychainError;
- (BOOL)_serverDeniesPeriodicSyncAnalytics;
- (id)_periodicSyncStateDictionary;
- (void)systemDidLeaveFirstDataProtectionLock;
- (BOOL)shouldMarkAllIncompatibleMessagesForDeletion;
- (unsigned long long)_maxTimeToDeferInSeconds;
- (void)_attemptToEnableMiCByDefaultOnce;
- (void)performOneTimeAccountUpgradeCheckIfNeeded;
- (id)_retryError;
- (void)registerForAccountNotifications;
- (void)syncCoordinatorFinishedSyncWithName:(id)a0 identifier:(id)a1 error:(id)a2;
- (void)idsAccountsDidChange;
- (BOOL)_errorIndicatesDeviceNotGoodForSync:(id)a0;
- (void)handleAKUserInfoChangedNotification:(id)a0;
- (id)chatSyncController;
- (void)beginPeriodicSyncWithChecks:(unsigned long long)a0 priority:(const char *)a1 reason:(id)a2;
- (id)recoverableMessageSyncController;
- (void)_noteSyncStarted:(BOOL)a0;
- (id)_stringForDate:(id)a0 withFormatter:(id)a1;
- (void)refreshUIIfApplicableWithBatchCount:(unsigned long long)a0;
- (id)_dateForNext24LogDumpAtHour:(long long)a0 timeNow:(id)a1 dumpNow:(BOOL *)a2;
- (void)systemDidUnlock;
- (void)syncCoordinatorWaitingForImportToFinishWithName:(id)a0 identifier:(id)a1;
- (id)updateSyncController;
- (void).cxx_destruct;
- (void)_needsSyncOnAccountUpdate;
- (int)_maxRetryAttemptsToEnableMiCByDefault;
- (BOOL)logCloudKitAnalytics;
- (BOOL)_serverAllowsUIRefreshWhileSyncing;
- (id)_recordManager;

@end

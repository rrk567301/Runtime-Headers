@class MTLFunctionConstantValues;
@protocol MTLLibrary, MTLFunction, MTLDepthStencilState;

@interface MTLDebugDevice : MTLToolsDevice {
    struct MTLSamplerDescriptorHashMap { struct unordered_map<std::array<unsigned long long, 3>, unsigned int, MTLSamplerDescriptorHashMap::hash_t, MTLSamplerDescriptorHashMap::equal_t, std::allocator<std::pair<const std::array<unsigned long long, 3>, unsigned int>>> { struct __hash_table<std::__hash_value_type<std::array<unsigned long long, 3>, unsigned int>, std::__unordered_map_hasher<std::array<unsigned long long, 3>, std::__hash_value_type<std::array<unsigned long long, 3>, unsigned int>, MTLSamplerDescriptorHashMap::hash_t, MTLSamplerDescriptorHashMap::equal_t>, std::__unordered_map_equal<std::array<unsigned long long, 3>, std::__hash_value_type<std::array<unsigned long long, 3>, unsigned int>, MTLSamplerDescriptorHashMap::equal_t, MTLSamplerDescriptorHashMap::hash_t>, std::allocator<std::__hash_value_type<std::array<unsigned long long, 3>, unsigned int>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::array<unsigned long long, 3>, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::array<unsigned long long, 3>, unsigned int>, void *> *> *>>> { void **__ptr_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::array<unsigned long long, 3>, unsigned int>, void *> *> *>> { unsigned long long __size_; } __deleter_; } __bucket_list_; struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::array<unsigned long long, 3>, unsigned int>, void *> *> { void *__next_; } __first_node_; unsigned long long __size_; float __max_load_factor_; } __table_; } _map; unsigned int _limit; } _argumentBufferSamplers;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _referenceTrackingCommandBufferLock;
    struct unordered_set<MTLDebugCommandBuffer *, std::hash<MTLDebugCommandBuffer *>, std::equal_to<MTLDebugCommandBuffer *>, std::allocator<MTLDebugCommandBuffer *>> { struct __hash_table<MTLDebugCommandBuffer *, std::hash<MTLDebugCommandBuffer *>, std::equal_to<MTLDebugCommandBuffer *>, std::allocator<MTLDebugCommandBuffer *>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<MTLDebugCommandBuffer *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<MTLDebugCommandBuffer *, void *> *> *>>> { void **__ptr_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<MTLDebugCommandBuffer *, void *> *> *>> { unsigned long long __size_; } __deleter_; } __bucket_list_; struct __hash_node_base<std::__hash_node<MTLDebugCommandBuffer *, void *> *> { void *__next_; } __first_node_; unsigned long long __size_; float __max_load_factor_; } __table_; } _referenceTrackingCommandBuffers;
    struct CheckerboardRenderTargetPipelineCache { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _cacheLock; id<MTLLibrary> _library; id<MTLFunction> _vertexFunction; id<MTLDepthStencilState> _depthStencilState[2]; MTLFunctionConstantValues *_fConstants; struct unordered_map<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>, MTLDebugCheckerboardFillHashKey::Hash, std::equal_to<MTLDebugCheckerboardFillHashKey>, std::allocator<std::pair<const MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>>> { struct __hash_table<std::__hash_value_type<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>, std::__unordered_map_hasher<MTLDebugCheckerboardFillHashKey, std::__hash_value_type<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>, MTLDebugCheckerboardFillHashKey::Hash, std::equal_to<MTLDebugCheckerboardFillHashKey>>, std::__unordered_map_equal<MTLDebugCheckerboardFillHashKey, std::__hash_value_type<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>, std::equal_to<MTLDebugCheckerboardFillHashKey>, MTLDebugCheckerboardFillHashKey::Hash>, std::allocator<std::__hash_value_type<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>, void *> *> *>>> { void **__ptr_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>, void *> *> *>> { unsigned long long __size_; } __deleter_; } __bucket_list_; struct __hash_node_base<std::__hash_node<std::__hash_value_type<MTLDebugCheckerboardFillHashKey, id<MTLRenderPipelineState>>, void *> *> { void *__next_; } __first_node_; unsigned long long __size_; float __max_load_factor_; } __table_; } _cache; } _checkerboardRTPipelineCache;
}

@property (readonly) BOOL loadValidationEnabled;
@property (readonly) BOOL storeValidationEnabled;
@property (readonly) BOOL relaxedTextureArrayBindingsEnabled;

+ (BOOL)complainAboutSloppyTextureUsage;

- (id)newAccelerationStructureWithSize:(unsigned long long)a0 withDescriptor:(id)a1;
- (id)newMTL4CommandQueueWithDescriptor:(id)a0 error:(id *)a1;
- (id)newTextureWithSurface:(unsigned long long)a0 buffer:(unsigned long long)a1;
- (id)newDagStringWithGraphs:(id)a0;
- (id)newComputePipelineStateWithFunction:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (id)newLibraryWithDescriptor:(id)a0 error:(id *)a1;
- (id)newCompilerWithDescriptor:(id)a0 error:(id *)a1;
- (void)newRenderPipelineStateWithMeshDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newRasterizationRateMapWithDescriptor:(id)a0;
- (id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)a0;
- (void)newComputePipelineStateWithDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newCommandAllocator;
- (id)newSharedTextureWithHandle:(id)a0 withResourceIndex:(unsigned long long)a1;
- (void)deserializePrimitiveAccelerationStructure:(id)a0 fromBytes:(const void *)a1 withDescriptor:(id)a2;
- (const struct MTLTargetDeviceArch { unsigned long long x0; unsigned int x1; char *x2; } *)targetDeviceInfo;
- (id)newLibraryWithStitchedDescriptor:(id)a0 error:(id *)a1;
- (id)newDynamicLibraryWithURL:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (id)newSharedEventWithHandle:(id)a0;
- (id)newCommandBuffer;
- (id)newComputePipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (id)newFence;
- (id)newTextureViewPoolWithDescriptor:(id)a0 error:(id *)a1;
- (id)functionHandleWithFunction:(id)a0 resourceIndex:(unsigned long long)a1;
- (id)newBinaryArchiveWithDescriptor:(id)a0 error:(id *)a1;
- (void)setWritableHeapsEnabled:(BOOL)a0;
- (id)newIOCommandQueueWithDescriptor:(id)a0 error:(id *)a1;
- (id)newTensorWithDescriptor:(id)a0 error:(id *)a1;
- (id)newProfileWithExecutionSize:(unsigned long long)a0;
- (id)newComputePipelineStateWithFunction:(id)a0 error:(id *)a1;
- (id)newRenderPipelineStateWithMeshDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (id)newUncachedIOFileHandleWithURL:(id)a0 error:(id *)a1;
- (id)newIOHandleWithURL:(id)a0 compressionMethod:(long long)a1 error:(id *)a2;
- (void)newComputePipelineStateWithFunction:(id)a0 completionHandler:(id /* block */)a1;
- (id)newUncachedIOHandleWithURL:(id)a0 error:(id *)a1;
- (id)newMTL4CommandQueue;
- (id)newRenderPipelineStateWithTileDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (id)newRenderPipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (BOOL)areWritableHeapsEnabled;
- (id)newSharedEventWithMachPort:(unsigned int)a0;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })accelerationStructureSizesWithDescriptor:(id)a0;
- (id)functionHandleWithBinaryFunction:(id)a0;
- (unsigned long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)a0;
- (struct { unsigned long long x0; unsigned long long x1; })heapAccelerationStructureSizeAndAlignWithSize:(unsigned long long)a0;
- (void)newLibraryWithSource:(id)a0 options:(id)a1 completionHandler:(id /* block */)a2;
- (void)newComputePipelineStateWithFunction:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)newPipelineLibraryWithFilePath:(id)a0 error:(id *)a1;
- (void)newRenderPipelineStateWithMeshDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)writeMeshShaderEmulatorDataStructureHeader:(struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; unsigned int x25; unsigned int x26; unsigned int x27; unsigned int x28[4]; } *)a0 meshShaderPSO:(id)a1 scalingFactor:(unsigned long long)a2;
- (id)newIOHandleWithURL:(id)a0 compressionType:(long long)a1 error:(id *)a2;
- (id)newRenderPipelineStateWithMeshDescriptor:(id)a0 error:(id *)a1;
- (id)newResidencySetWithDescriptor:(id)a0 error:(id *)a1;
- (id)newLibraryWithData:(id)a0 error:(id *)a1;
- (id)newIOHandleWithURL:(id)a0 error:(id *)a1;
- (id)newLateEvalEvent;
- (unsigned long long)sizeOfCounterHeapEntry:(long long)a0;
- (id)newArgumentEncoderWithLayout:(id)a0;
- (id)newLibraryWithImageFilterFunctionsSPI:(id)a0 imageFilterFunctionInfo:(const struct { BOOL x0; unsigned long long x1; struct *x2; } *)a1 error:(id *)a2;
- (id)deserializePrimitiveAccelerationStructureFromBytes:(void *)a0 withDescriptor:(id)a1;
- (id)newRenderPipelineStateWithDescriptor:(id)a0 error:(id *)a1;
- (id)newCommandAllocatorWithDescriptor:(id)a0 error:(id *)a1;
- (id)newSharedTextureWithHandle:(id)a0;
- (id)newIOFileHandleWithURL:(id)a0 error:(id *)a1;
- (id)newCommandQueueWithDescriptor:(id)a0;
- (id)newLibraryWithSource:(id)a0 options:(id)a1 error:(id *)a2;
- (void)newRenderPipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)newLibraryWithURL:(id)a0 error:(id *)a1;
- (id)newDefaultLibraryWithBundle:(id)a0 error:(id *)a1;
- (id)newAccelerationStructureWithBuffer:(id)a0 offset:(unsigned long long)a1 resourceIndex:(unsigned long long)a2;
- (id)newCommandQueue;
- (id)deserializeInstanceAccelerationStructureFromBytes:(void *)a0 primitiveAccelerationStructures:(id)a1 withDescriptor:(id)a2;
- (void)deserializeInstanceAccelerationStructure:(id)a0 fromBytes:(const void *)a1 primitiveAccelerationStructures:(id)a2 withDescriptor:(id)a3;
- (id)newBinaryLibraryWithOptions:(unsigned long long)a0 url:(id)a1 error:(id *)a2;
- (id)newUncachedIOFileHandleWithURL:(id)a0 compressionMethod:(long long)a1 error:(id *)a2;
- (id)newArgumentEncoderWithArguments:(id)a0;
- (id)newLibraryWithStitchedDescriptorSPI:(id)a0 error:(id *)a1;
- (id)newDefaultLibrary;
- (id)newArgumentTableWithDescriptor:(id)a0 error:(id *)a1;
- (id)newArgumentEncoderWithBufferBinding:(id)a0;
- (id)newLibraryWithDescriptorSPI:(id)a0 error:(id *)a1;
- (id)loadDynamicLibrariesForComputeDescriptor:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (id)newIOFileHandleWithURL:(id)a0 compressionMethod:(long long)a1 error:(id *)a2;
- (id)newSharedEvent;
- (struct { unsigned long long x0; unsigned long long x1; })heapAccelerationStructureSizeAndAlignWithDescriptor:(id)a0;
- (BOOL)validateDynamicLibrary:(id)a0 state:(BOOL)a1 error:(id *)a2;
- (BOOL)validateDynamicLibraryURL:(id)a0 error:(id *)a1;
- (id)loadDynamicLibrariesForFunction:(id)a0 insertLibraries:(id)a1 options:(unsigned long long)a2 error:(id *)a3;
- (void)newRenderPipelineStateWithTileDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)a0;
- (id)newBufferWithLength:(unsigned long long)a0 options:(unsigned long long)a1 placementSparsePageSize:(long long)a2;
- (id)newComputePipelineStateWithImageFilterFunctionsSPI:(id)a0 imageFilterFunctionInfo:(const struct { BOOL x0; unsigned long long x1; struct *x2; } *)a1 error:(id *)a2;
- (id)newLibraryWithDAG:(id)a0 functions:(id)a1 error:(id *)a2;
- (id)newArchiveWithURL:(id)a0 error:(id *)a1;
- (id)newComputePipelineStateWithDescriptor:(id)a0 error:(id *)a1;
- (id)newTextureWithDescriptor:(id)a0 iosurface:(struct __IOSurface { } *)a1 plane:(unsigned long long)a2 slice:(unsigned long long)a3;
- (id)newSharedTextureWithDescriptor:(id)a0;
- (id)newDynamicLibrary:(id)a0 computeDescriptor:(id)a1 error:(id *)a2;
- (id)newUncachedIOHandleWithURL:(id)a0 compressionType:(long long)a1 error:(id *)a2;
- (void)newRenderPipelineStateWithDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newDynamicLibrary:(id)a0 error:(id *)a1;
- (id)functionHandleWithFunction:(id)a0;
- (id)newAccelerationStructureWithBuffer:(id)a0 offset:(unsigned long long)a1;
- (void)newLibraryWithStitchedDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newIndirectCommandBufferWithDescriptor:(id)a0 maxCommandCount:(unsigned long long)a1 options:(unsigned long long)a2;
- (id)newTiledTextureWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 deallocator:(id /* block */)a2 descriptor:(id)a3 offset:(unsigned long long)a4 bytesPerRow:(unsigned long long)a5;
- (id)newCounterSampleBufferWithDescriptor:(id)a0 error:(id *)a1;
- (void)newComputePipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)newDynamicLibraryWithURL:(id)a0 error:(id *)a1;
- (id)newEvent;
- (id)newAccelerationStructureWithSize:(unsigned long long)a0;
- (id)newDynamicLibraryFromURL:(id)a0 error:(id *)a1;
- (id)newBufferWithDescriptor:(id)a0;
- (id)newLibraryWithFile:(id)a0 error:(id *)a1;
- (id)newCounterHeapWithDescriptor:(id)a0 error:(id *)a1;
- (id)newAccelerationStructureWithSize:(unsigned long long)a0 resourceIndex:(unsigned long long)a1;
- (id).cxx_construct;
- (id)newAccelerationStructureWithDescriptor:(id)a0;
- (id)newTiledTextureWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 descriptor:(id)a2 offset:(unsigned long long)a3 bytesPerRow:(unsigned long long)a4;
- (void)newLibraryWithDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (void).cxx_destruct;
- (id)newIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)getDynamicLibraryForBaseObject:(id)a0;
- (void)_newComputePipelineStateWithFunction:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)_newRenderPipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (void)_newComputePipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)_newComputePipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (id)_newComputePipelineStateWithFunction:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (void)_newRenderPipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)_newRenderPipelineStateWithMeshDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)_newRenderPipelineStateWithMeshDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (void)_newRenderPipelineStateWithTileDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)_newRenderPipelineStateWithTileDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (void)addReferenceTrackingCommandBuffer:(id)a0;
- (void)clearRenderEncoder:(id)a0 writeMask:(unsigned long long)a1 withCheckerboard:(float *)a2;
- (id)getDepthStencilStateForBaseObject:(id)a0 descriptor:(id)a1;
- (id)getFunctionForBaseObject:(id)a0 library:(id)a1;
- (id)getSamplerStateForBaseObject:(id)a0 descriptor:(id)a1;
- (struct { unsigned long long x0; unsigned long long x1; })heapBufferSizeAndAlignWithLength:(unsigned long long)a0 options:(unsigned long long)a1;
- (struct { unsigned long long x0; unsigned long long x1; })heapTextureSizeAndAlignWithDescriptor:(id)a0;
- (id)initWithBaseObject:(id)a0 parent:(id)a1;
- (id)newBufferWithBytes:(const void *)a0 length:(unsigned long long)a1 options:(unsigned long long)a2;
- (id)newBufferWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 options:(unsigned long long)a2 deallocator:(id /* block */)a3;
- (id)newBufferWithIOSurface:(struct __IOSurface { } *)a0;
- (id)newBufferWithLength:(unsigned long long)a0 options:(unsigned long long)a1;
- (id)newDepthStencilStateWithDescriptor:(id)a0;
- (id)newHeapWithDescriptor:(id)a0;
- (id)newMotionEstimationPipelineWithDescriptor:(id)a0;
- (id)newRemoteBufferView:(id)a0 parentBuffer:(id)a1;
- (id)newRemoteTextureView:(id)a0 parentTexture:(id)a1;
- (void)newRenderPipelineStateWithTileDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newRenderPipelineStateWithTileDescriptor:(id)a0 error:(id *)a1;
- (id)newSamplerStateWithDescriptor:(id)a0;
- (id)newTextureLayoutWithDescriptor:(id)a0 isHeapOrBufferBacked:(BOOL)a1;
- (id)newTextureWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 descriptor:(id)a2 deallocator:(id /* block */)a3;
- (id)newTextureWithDescriptor:(id)a0;
- (id)newTextureWithDescriptor:(id)a0 iosurface:(struct __IOSurface { } *)a1 plane:(unsigned long long)a2;
- (id)newVisibleFunctionTableWithDescriptor:(id)a0;
- (void)notifyExternalReferencesNonZeroOnDealloc:(id)a0;
- (void)notifySamplerStateDeallocated:(id)a0;
- (void)removeReferenceTrackingCommandBuffer:(id)a0;
- (void)validateAddressRanges:(id)a0 expectedTotalSize:(unsigned long long)a1 context:(struct _MTLMessageContext { long long x0; char *x1; unsigned int x2; id x3; long long x4; id x5; char *x6; } *)a2;
- (void)validateImageblockTypes:(id)a0 reflection:(id)a1 context:(struct _MTLMessageContext { long long x0; char *x1; unsigned int x2; id x3; long long x4; id x5; char *x6; } *)a2;
- (void)validateLinkedFunctions:(id)a0 context:(struct _MTLMessageContext { long long x0; char *x1; unsigned int x2; id x3; long long x4; id x5; char *x6; } *)a1;
- (void)validateMemorylessResource:(id)a0 context:(struct _MTLMessageContext { long long x0; char *x1; unsigned int x2; id x3; long long x4; id x5; char *x6; } *)a1;
- (void)validateNewBufferArgs:(unsigned long long)a0 options:(unsigned long long)a1 context:(struct _MTLMessageContext { long long x0; char *x1; unsigned int x2; id x3; long long x4; id x5; char *x6; } *)a2;
- (void)validateRaytracing;
- (void)validateResourceOptions:(unsigned long long)a0 isTexture:(BOOL)a1 isIOSurface:(BOOL)a2 context:(struct _MTLMessageContext { long long x0; char *x1; unsigned int x2; id x3; long long x4; id x5; char *x6; } *)a3;

@end

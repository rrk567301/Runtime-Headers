@class NSString, MTLGPUDebugComputePipelineState;
@protocol MTL4ArgumentTable, MTLLibrary, MTLResource;

@interface MTL4GPUDebugComputeCommandEncoder : MTL4ToolsComputeCommandEncoder <MTLGPUDebugCommandEncoder> {
    unsigned int useResourceIteration;
    BOOL _enableUseResourceValidation;
    unsigned int _commandBufferJumpNestingLevel;
    struct Options { unsigned int x0; int x1; int x2; int x3; unsigned int x4; struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 1; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 1; unsigned char x35 : 1; unsigned char x36 : 1; unsigned char x37 : 1; } x5; } *_options;
    struct MTLGPUDebugThreadgroupLengths { unsigned int threadgroupSizes[31]; struct GPUDebugThreadgroupTableEntry { unsigned int offset; unsigned int length; } entries[32]; BOOL needsFlush; } _threadgroup;
    struct GPUDebugEventUUIDPacket { unsigned long long pipelineStateID; unsigned long long entryPointImageID; unsigned int encoderID; unsigned int eventID; } _dispatchID;
    MTLGPUDebugComputePipelineState *_currentPipeline;
    struct GPUDebugEncoderBoundBufAddress { unsigned long long gpuAddress; unsigned long long stride; } _computeEncoderBoundBufAddressTable[31];
    struct GPUDebugEncoderBoundBuffers { id<MTLResource> resource; unsigned long long offset; unsigned long long stride; unsigned long long type; } _computeEncoderBoundBuffers[31];
    unsigned long long _internalBindingTable[40];
    id<MTL4ArgumentTable> currentArgumentTable;
    id<MTLLibrary> _accelerationStructureSupportLibrary;
}

@property (readonly) unsigned int encoderID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void)useResidencySets:(const id *)a0 count:(unsigned long long)a1;
- (void)copyIndirectCommandBuffer:(id)a0 sourceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 destination:(id)a2 destinationIndex:(unsigned long long)a3;
- (void)dispatchThreadgroups:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0 threadsPerThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a1;
- (unsigned int)eventID;
- (void)optimizeIndirectCommandBuffer:(id)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setComputePipelineState:(id)a0;
- (id).cxx_construct;
- (void)executeCommandsInBuffer:(id)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)resetCommandsInBuffer:(id)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)dispatchThreads:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0 threadsPerThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a1;
- (void)useResidencySet:(id)a0;
- (void)setComputePipelineStateBuffers:(id)a0;
- (void)beginVirtualSubstream;
- (void)bindInternalBuffer:(id)a0 index:(unsigned long long)a1;
- (void)bindInternalBufferWithOffset:(id)a0 offset:(unsigned long long)a1 index:(unsigned long long)a2;
- (void)bindInternalValue:(long long)a0 index:(unsigned long long)a1;
- (void)blitAccelerationStructureType:(unsigned long long)a0 toAccelerationStructure:(id)a1;
- (void)blitChildrenWrappersBufferAddress:(id)a0 toAccelerationStructure:(id)a1;
- (void)blitChildrenWrappersBufferFromAcceleratrionStructure:(id)a0 toAccelerationStructure:(id)a1;
- (void)blitInstanceTypetoAccelerationStructure:(id)a0;
- (void)blitPrimitiveTypetoAccelerationStructure:(id)a0;
- (void)blitTypeFromAccelerationStructure:(id)a0 toAccelerationStructure:(id)a1;
- (void)blitTypeFromAccelerationStructureDescriptor:(id)a0 toAccelerationStructure:(id)a1;
- (void)buildAccelerationStructure:(id)a0 descriptor:(id)a1 scratchBuffer:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)copyAccelerationStructure:(id)a0 toAccelerationStructure:(id)a1;
- (void)copyAndCompactAccelerationStructure:(id)a0 toAccelerationStructure:(id)a1;
- (void)copyFromInternalBuffer:(id)a0 sourceOffset:(unsigned long long)a1 toInternalBuffer:(id)a2 destinationOffset:(unsigned long long)a3 size:(unsigned long long)a4;
- (id)createChildrenWrappersBufferWithASDescriptor:(id)a0;
- (id)createChildrenWrappersBufferWithIASDescriptor:(id)a0;
- (id)createChildrenWrappersBufferWithIndirectIASDescriptor:(id)a0;
- (id)createChildrenWrappersBufferWithInstanceDescriptorBufferRange:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a0 maxInstanceCount:(unsigned long long)a1 instanceCountBufferRange:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a2 instanceDescriptorStride:(unsigned long long)a3 instanceDescriptorType:(unsigned long long)a4;
- (void)deserializeInstanceAccelerationStructure:(id)a0 referencedAccelerationStructures:(id)a1 fromBuffer:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)deserializePrimitiveAccelerationStructure:(id)a0 fromBuffer:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)dispatchThreadgroupsWithIndirectBuffer:(unsigned long long)a0 threadsPerThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a1;
- (void)dispatchThreadsWithIndirectBuffer:(unsigned long long)a0;
- (void)encodeCopyAndUnwrapChildrenWithInstanceDescriptorBufferRange:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a0 dstInstanceDescriptorBufferRange:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a1 instanceDescriptorStride:(unsigned long long)a2 instanceIDOffset:(unsigned long long)a3 maxInstanceCount:(unsigned long long)a4;
- (BOOL)encodeEndDoWhile:(id)a0 offset:(unsigned long long)a1 comparison:(unsigned long long)a2 referenceValue:(unsigned int)a3;
- (BOOL)encodeEndIf;
- (BOOL)encodeEndWhile;
- (void)encodeStartDoWhile;
- (void)encodeStartIf:(id)a0 offset:(unsigned long long)a1 comparison:(unsigned long long)a2 referenceValue:(unsigned int)a3;
- (void)encodeStartWhile:(id)a0 offset:(unsigned long long)a1 comparison:(unsigned long long)a2 referenceValue:(unsigned int)a3;
- (id)encodeUnwrapAccelerationStructureDescriptor:(id)a0;
- (id)encodeUnwrapWithIASDescriptor:(id)a0;
- (id)encodeUnwrapWithIndirectIASDescriptor:(id)a0;
- (void)endEncoding;
- (void)endVirtualSubstream;
- (void)executeCommandsInBuffer:(id)a0 indirectBuffer:(unsigned long long)a1;
- (void)flushBindings;
- (id)initWithComputeCommandEncoder:(id)a0 commandBuffer:(id)a1 encoderID:(unsigned int)a2;
- (unsigned long long)internalValueAtIndex:(unsigned long long)a0;
- (id)newComputePipelineStateWithFunctionName:(id)a0;
- (unsigned long long)nextVirtualSubstream;
- (void)refitAccelerationStructure:(id)a0 descriptor:(id)a1 destination:(id)a2 scratchBuffer:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a3;
- (void)refitAccelerationStructure:(id)a0 descriptor:(id)a1 destination:(id)a2 scratchBuffer:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a3 options:(unsigned long long)a4;
- (id)retrieveBufferFromBufferRange:(struct MTL4BufferRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)setArgumentTable:(id)a0;
- (void)setBufferUsageTable:(id)a0 textureUsageTable:(id)a1;
- (void)setInternalBytes:(const void *)a0 length:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setThreadgroupMemoryLength:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (id)temporaryBufferWithBytes:(const void *)a0 length:(unsigned long long)a1;
- (id)temporaryBufferWithLength:(unsigned long long)a0;
- (void)waitForVirtualSubstream:(unsigned long long)a0;

@end

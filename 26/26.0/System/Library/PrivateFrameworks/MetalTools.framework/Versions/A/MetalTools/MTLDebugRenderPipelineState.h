@class MTLDebugComputePipelineState, MTLRenderPipelineReflection, MTLTileRenderPipelineDescriptor, MTLMeshRenderPipelineDescriptor, MTL4RenderPipelineDescriptor, MTLRenderPipelineDescriptor, MTL4MeshRenderPipelineDescriptor, MTL4TileRenderPipelineDescriptor;

@interface MTLDebugRenderPipelineState : MTLToolsRenderPipelineState {
    unsigned long long _maxVertexCount;
    unsigned long long _maxInstanceCount;
    unsigned long long _maxPatchCount;
    unsigned long long _rasterSampleCount;
    unsigned long long _colorPixelFormat[8];
    unsigned long long _depthPixelFormat;
    unsigned long long _stencilPixelFormat;
    unsigned long long _vertexDescriptorLayoutCount;
    struct { unsigned long long bufferIndex; unsigned long long bufferStride; } _vertexDescriptorLayouts[31];
    BOOL _threadgroupSizeMatchesTileSize;
    MTLDebugComputePipelineState *_debugEmulationObjectShaderPSO;
    MTLDebugComputePipelineState *_debugEmulationObjectPrefixSumPSO;
    MTLDebugComputePipelineState *_debugEmulationNoObjectPrefixSumPSO;
    MTLDebugComputePipelineState *_debugEmulationMeshShaderPSO;
    MTLDebugComputePipelineState *_debugEmulationMeshPrefixSum1PSO;
    MTLDebugComputePipelineState *_debugEmulationMeshPrefixSum2PSO;
    MTLDebugComputePipelineState *_debugEmulationMeshPrefixSum3PSO;
}

@property (readonly, nonatomic) BOOL rasterizationEnabled;
@property (readonly, nonatomic) MTLRenderPipelineDescriptor *descriptor;
@property (readonly, nonatomic) MTLRenderPipelineReflection *validationReflection;
@property (readonly, nonatomic) unsigned long long attachmentWriteMask;
@property (readonly, nonatomic) MTLTileRenderPipelineDescriptor *tileDescriptor;
@property (readonly, getter=isMeshShaderPipeline) BOOL meshShaderPipeline;
@property (readonly, nonatomic) MTLMeshRenderPipelineDescriptor *meshDescriptor;
@property (readonly, nonatomic) long long shaderValidation;
@property (readonly, nonatomic) long long shaderValidationState;
@property (readonly, nonatomic) MTL4RenderPipelineDescriptor *mtl4Descriptor;
@property (readonly, nonatomic) MTL4TileRenderPipelineDescriptor *mtl4TileDescriptor;
@property (readonly, nonatomic) MTL4MeshRenderPipelineDescriptor *mtl4MeshDescriptor;

- (id)newObjectIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)emulationObjectPrefixSumPSO;
- (id)emulationMeshPrefixSum2PSO;
- (id)newTileRenderPipelineStateWithAdditionalBinaryFunctions:(id)a0 error:(id *)a1;
- (id)newVisibleFunctionTableWithDescriptor:(id)a0 stage:(unsigned long long)a1;
- (id)newVisibleFunctionTableFromMeshStageWithDescriptor:(id)a0;
- (id)vertexFunctionHandleWithFunction:(id)a0;
- (id)newVisibleFunctionTableFromFragmentStageWithDescriptor:(id)a0;
- (void)dealloc;
- (id)formattedDescription:(unsigned long long)a0;
- (void)setEmulationObjectShaderPSO:(id)a0;
- (id)objectFunctionHandleWithFunction:(id)a0;
- (id)newIntersectionFunctionTableWithDescriptor:(id)a0 stage:(unsigned long long)a1;
- (id)newRenderPipelineStateWithAdditionalBinaryFunctions:(id)a0 fragmentAdditionalBinaryFunctions:(id)a1 error:(id *)a2;
- (id)newVisibleFunctionTableFromTileStageWithDescriptor:(id)a0;
- (id)newRenderPipelineStateWithBinaryFunctions:(id)a0 error:(id *)a1;
- (id)functionHandleWithName:(id)a0 stage:(unsigned long long)a1;
- (id)newVertexIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)emulationObjectShaderPSO;
- (void)setEmulationMeshShaderPSO:(id)a0;
- (id)emulationNoObjectPrefixSumPSO;
- (id)description;
- (id)newMeshIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)newRenderPipelineStateWithAdditionalBinaryFunctions:(id)a0 error:(id *)a1;
- (id)emulationMeshPrefixSum1PSO;
- (id)newTileIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)newFragmentIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)newVisibleFunctionTableFromObjectStageWithDescriptor:(id)a0;
- (id)meshFunctionHandleWithFunction:(id)a0;
- (id)emulationMeshPrefixSum3PSO;
- (id)tileFunctionHandleWithFunction:(id)a0;
- (id)functionHandleWithBinaryFunction:(id)a0 stage:(unsigned long long)a1;
- (id)functionHandleWithFunction:(id)a0 stage:(unsigned long long)a1;
- (id)newRenderPipelineDescriptorForSpecialization;
- (id)fragmentFunctionHandleWithFunction:(id)a0;
- (id)newVisibleFunctionTableFromVertexStageWithDescriptor:(id)a0;
- (id)emulationMeshShaderPSO;
- (id)_findMasterStruct:(id)a0 includeImageBlockData:(BOOL)a1;
- (void)_updateCachedMTL4MeshPipelineState;
- (void)_updateCachedMTL4PipelineState;
- (void)_updateCachedMTL4TilePipelineState;
- (void)_updateCachedMeshPipelineState;
- (void)_updateCachedPipelineState;
- (void)_updateCachedTilePipelineState;
- (void)_validateThreadgroupSize:(const struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } *)a0 stage:(unsigned long long)a1 context:(struct _MTLMessageContext { long long x0; char *x1; unsigned int x2; id x3; long long x4; id x5; char *x6; } *)a2;
- (id)functionHandleToDebugFunctionHandle:(id)a0 binaryFunction:(id)a1 stage:(unsigned long long)a2;
- (id)functionHandleToDebugFunctionHandle:(id)a0 parentFunction:(id)a1 stage:(unsigned long long)a2;
- (id)functionHandleToDebugFunctionHandle:(id)a0 stage:(unsigned long long)a1;
- (id)functionHandleWithFunction:(id)a0 stage:(unsigned long long)a1 selector:(SEL)a2;
- (BOOL)hasMetal4Descriptor;
- (id)initWithPipelineState:(id)a0 reflection:(id)a1 parent:(id)a2 descriptor:(id)a3;
- (id)initWithPipelineState:(id)a0 reflection:(id)a1 parent:(id)a2 meshDescriptor:(id)a3;
- (id)initWithPipelineState:(id)a0 reflection:(id)a1 parent:(id)a2 tileDescriptor:(id)a3;
- (id)initWithRenderPipelineState:(id)a0 parent:(id)a1 mtl4Descriptor:(id)a2;
- (id)initWithRenderPipelineState:(id)a0 reflection:(id)a1 parent:(id)a2 mtl4Descriptor:(id)a3;
- (BOOL)isAncestorOf:(id)a0;
- (BOOL)isImageBlockLayoutInputCompatibleWithOutputOf:(id)a0;
- (id)newIntersectionFunctionTableWithDescriptor:(id)a0 withStage:(unsigned long long)a1 selector:(SEL)a2;
- (id)newVisibleFunctionTableWithDescriptor:(id)a0 stage:(unsigned long long)a1 selector:(SEL)a2;
- (id)outputImageBlockData;
- (id)validateBinaryFunctions:(id)a0 stage:(unsigned long long)a1;
- (void)validateHandleForSetFunction:(id)a0;

@end

@class NSString;

@interface MTLToolsIndirectRenderCommand : MTLToolsObject <MTLIndirectRenderCommandSPI>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)reset;
- (void)setViewport:(struct { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (id)getScissorRects;
- (void)setObjectBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setScissorRect:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a0;
- (void)setVertexBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)clearBarrier;
- (id)drawArguments;
- (id)drawIndexedArguments;
- (void)drawIndexedPatches:(unsigned long long)a0 patchStart:(unsigned long long)a1 patchCount:(unsigned long long)a2 patchIndexBuffer:(id)a3 patchIndexBufferOffset:(unsigned long long)a4 controlPointIndexBuffer:(id)a5 controlPointIndexBufferOffset:(unsigned long long)a6 instanceCount:(unsigned long long)a7 baseInstance:(unsigned long long)a8 tessellationFactorBuffer:(id)a9 tessellationFactorBufferOffset:(unsigned long long)a10 tessellationFactorBufferInstanceStride:(unsigned long long)a11;
- (id)drawIndexedPatchesArguments;
- (void)drawIndexedPrimitives:(unsigned long long)a0 indexCount:(unsigned long long)a1 indexType:(unsigned long long)a2 indexBuffer:(id)a3 indexBufferOffset:(unsigned long long)a4 instanceCount:(unsigned long long)a5 baseVertex:(long long)a6 baseInstance:(unsigned long long)a7;
- (void)drawMeshThreadgroups:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0 threadsPerObjectThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a1 threadsPerMeshThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a2;
- (id)drawMeshThreadgroupsArguments;
- (void)drawMeshThreads:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0 threadsPerObjectThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a1 threadsPerMeshThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a2;
- (id)drawMeshThreadsArguments;
- (void)drawPatches:(unsigned long long)a0 patchStart:(unsigned long long)a1 patchCount:(unsigned long long)a2 patchIndexBuffer:(id)a3 patchIndexBufferOffset:(unsigned long long)a4 instanceCount:(unsigned long long)a5 baseInstance:(unsigned long long)a6 tessellationFactorBuffer:(id)a7 tessellationFactorBufferOffset:(unsigned long long)a8 tessellationFactorBufferInstanceStride:(unsigned long long)a9;
- (id)drawPatchesArguments;
- (void)drawPrimitives:(unsigned long long)a0 vertexStart:(unsigned long long)a1 vertexCount:(unsigned long long)a2 instanceCount:(unsigned long long)a3 baseInstance:(unsigned long long)a4;
- (id)getBlendColor;
- (unsigned long long)getCommandType;
- (unsigned long long)getCullMode;
- (id)getDepthBiasInfo;
- (unsigned long long)getDepthClipMode;
- (id)getDepthStencilState;
- (unsigned long long)getDepthStencilStateUniqueIdentifier;
- (id)getDepthTestBounds;
- (unsigned long long)getFragmentBufferAddressAtIndex:(unsigned long long)a0;
- (void *)getFragmentBufferAtIndex:(unsigned long long)a0;
- (unsigned long long)getFrontFacingWinding;
- (unsigned long long)getMeshBufferAddressAtIndex:(unsigned long long)a0;
- (unsigned long long)getObjectBufferAddressAtIndex:(unsigned long long)a0;
- (unsigned long long)getObjectThreadgroupMemoryLengthAtIndex:(unsigned long long)a0;
- (unsigned long long)getOptimizedStatus;
- (unsigned long long)getPipelineStateUniqueIdentifier;
- (id)getStencilReferenceValues;
- (id)getTessellationFactorArguments;
- (unsigned long long)getTriangleFillMode;
- (unsigned long long)getVertexAttributeStrideAtIndex:(unsigned long long)a0;
- (unsigned long long)getVertexBufferAddressAtIndex:(unsigned long long)a0;
- (void *)getVertexBufferAtIndex:(unsigned long long)a0;
- (id)getViewports;
- (BOOL)hasBarrier;
- (void)setBarrier;
- (void)setBlendColorRed:(float)a0 green:(float)a1 blue:(float)a2 alpha:(float)a3;
- (void)setCullMode:(unsigned long long)a0;
- (void)setDepthBias:(float)a0 slopeScale:(float)a1 clamp:(float)a2;
- (void)setDepthClipMode:(unsigned long long)a0;
- (void)setDepthStencilState:(id)a0;
- (void)setDepthTestMinBound:(float)a0 maxBound:(float)a1;
- (void)setFragmentBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setFrontFacingWinding:(unsigned long long)a0;
- (void)setMeshBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setObjectThreadgroupMemoryLength:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setRenderPipelineState:(id)a0;
- (void)setScissorRects:(const struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a0 count:(unsigned long long)a1;
- (void)setStencilFrontReferenceValue:(unsigned int)a0 backReferenceValue:(unsigned int)a1;
- (void)setStencilReferenceValue:(unsigned int)a0;
- (void)setTriangleFillMode:(unsigned long long)a0;
- (void)setVertexBuffer:(id)a0 offset:(unsigned long long)a1 attributeStride:(unsigned long long)a2 atIndex:(unsigned long long)a3;
- (void)setViewports:(const struct { double x0; double x1; double x2; double x3; double x4; double x5; } *)a0 count:(unsigned long long)a1;

@end

@class NSUUID, QLPreviewProgressiveCallbacks, NSString, NSURL, NSFileCoordinator, NSData, NSDictionary, VCPSearchContext, NSMutableSet, QLDaemonProxy, NSMutableArray, NSOperationQueue;

@interface QLPreview : QLClient <NSSecureCoding, QLDataGenerationHandler> {
    struct __QLServer { } *_server;
    unsigned long long _permission;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (retain) NSDictionary *properties;
@property (nonatomic) struct __QLGenerator { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __CFURL *x1; struct __CFBundle *x2; struct __CFString *x3; char *x4; struct __CFString *x5; struct __CFString *x6; struct __CFArray *x7; void *x8; unsigned char x9; id x10; double x11; id x12; void /* function */ *x13; void /* function */ *x14; void /* function */ *x15; void /* function */ *x16; unsigned char x17; unsigned char x18; unsigned char x19; unsigned char x20; double x21; struct CGSize { double x0; double x1; } x22; unsigned char x23; void *x24; void *x25; int x26; unsigned char x27; unsigned char x28; unsigned char x29; unsigned char x30; unsigned char x31; unsigned char x32; } *generator;
@property (retain) NSMutableArray *waitForDataCompletionBlocks;
@property (retain) NSDictionary *waitForDataOptions;
@property BOOL progressive;
@property unsigned int replyPort;
@property BOOL requestDone;
@property BOOL requestDispatched;
@property BOOL displayBundleIDFetched;
@property BOOL noSenderRequested;
@property unsigned int mps_seqno;
@property int pendingCreationCase;
@property (readonly) QLDaemonProxy *daemonProxy;
@property (readonly) NSUUID *uuid;
@property (retain) QLPreviewProgressiveCallbacks *progressiveCallbacks;
@property (nonatomic) struct __QLServer { } *server;
@property BOOL forcedContentType;
@property (retain, nonatomic) NSString *displayBundleID;
@property (copy) NSString *previewContentType;
@property (retain) NSMutableSet *contentTypeList;
@property struct CGSize { double width; double height; } sizeHint;
@property BOOL prefersDarkLoading;
@property (copy) NSString *searchableItemUniqueIdentifier;
@property (copy) NSString *applicationBundleIdentifier;
@property (copy) NSString *extensionPath;
@property (copy) NSURL *previewURL;
@property (retain) NSFileCoordinator *fileCoordinator;
@property (retain) NSData *unprocessedPreviewData;
@property (retain) NSData *previewData;
@property int imageWidth;
@property int imageHeight;
@property int bits_per_component;
@property int bits_per_pixel;
@property int bytes_per_row;
@property unsigned int bitmap_info;
@property struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } pdfMediaBox;
@property BOOL keepAlive;
@property BOOL secondaryRequest;
@property BOOL distantURLProtection;
@property (copy) NSString *appearanceName;
@property BOOL darkAppearanceFallback;
@property BOOL areProfessionalVideoWorkflowFormatReadersEnabled;
@property (readonly) unsigned long long extensionGenerationType;
@property (retain) NSString *queryString;
@property (retain) VCPSearchContext *videoSearchContext;
@property (retain) NSOperationQueue *fileCoordinationQueue;
@property BOOL shouldDownloadFault;
@property (readonly) BOOL isCoordinating;

+ (void)_removePreviewFromClientMappingWithReplyPort:(unsigned int)a0;
+ (id)inlinePreviewSupportedContentTypes;
+ (id)newLockQueue;
+ (id)previewFromMachPort:(unsigned int)a0;
+ (BOOL)supportsContentType:(id)a0;
+ (BOOL)supportsFileAtURL:(id)a0 outContentType:(id *)a1;

- (id)initWithData:(id)a0 options:(id)a1;
- (id)initWithURL:(id)a0 options:(id)a1;
- (id)debugDescription;
- (void)dealloc;
- (unsigned long long)permission;
- (void)cancel;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)getProperties;
- (void)_handleError:(BOOL *)a0;
- (void)close;
- (void).cxx_destruct;
- (BOOL)isGenericFolder;
- (void)_setupForStaticTypesIfNecessary;
- (int)_waitForPreviewTypeIfNecessary:(id)a0;
- (void)_addToClientMappingWithReplyPort:(unsigned int)a0;
- (void)_cleanUpForRetry;
- (void)_createDaemonProxyIfNeeded;
- (struct CGImage { } *)_createImageFromData:(id)a0;
- (BOOL)_extensionExistsUsingExactTypeMatch:(BOOL)a0;
- (int)_extensionType;
- (void)_finishSetupTypesForViewBasedExtension;
- (void)_handlePreviewFailure:(int)a0;
- (id)_localData;
- (void)_processAttachment:(id)a0 withContentID:(id)a1;
- (struct __QLGenerator { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __CFURL *x1; struct __CFBundle *x2; struct __CFString *x3; char *x4; struct __CFString *x5; struct __CFString *x6; struct __CFArray *x7; void *x8; unsigned char x9; id x10; double x11; id x12; void /* function */ *x13; void /* function */ *x14; void /* function */ *x15; void /* function */ *x16; unsigned char x17; unsigned char x18; unsigned char x19; unsigned char x20; double x21; struct CGSize { double x0; double x1; } x22; unsigned char x23; void *x24; void *x25; int x26; unsigned char x27; unsigned char x28; unsigned char x29; unsigned char x30; unsigned char x31; unsigned char x32; } *)_retrieveGenerator;
- (int)_sendRequestToServerIfNecessary:(id)a0;
- (void)_setupMockGeneratorForTesting;
- (void)_setupTypesForDataProviderPreview;
- (void)_setupTypesForSchemeHandlingForAdvancedUsage:(BOOL)a0;
- (void)_setupTypesForViewBasedExtension:(unsigned long long)a0;
- (BOOL)_shouldDownloadFault:(id)a0;
- (void)_startSetupTypesForExtension:(unsigned long long)a0;
- (void)cleanUpIfNecessary;
- (void)copyBitmapImage:(id /* block */)a0;
- (void)discardAllPendingActions;
- (void)generateWithExtension:(id /* block */)a0;
- (void)getData:(id /* block */)a0;
- (void)getNextData:(id /* block */)a0;
- (id)initWithSearchableItemID:(id)a0 appBundleID:(id)a1 extensionPath:(id)a2 options:(id)a3;
- (id)initWithURL:(id)a0 options:(id)a1 searchableItemID:(id)a2 appBundleID:(id)a3 extensionPath:(id)a4 previewData:(id)a5;
- (BOOL)isRawImage;
- (BOOL)isWithinContentTypeLimit:(id)a0;
- (id)loadingPlaceHolder_outShouldDarken:(BOOL *)a0;
- (void)processProgressiveRendering:(id)a0 completionHandler:(id /* block */)a1;
- (void)receivedDataFromServer:(id)a0 attachmentURL:(id)a1 hasMoreData:(BOOL)a2;
- (void)releasePort;
- (void)retrieveDataForProgressiveRendering:(id /* block */)a0;
- (void)retrieveDisplayBundleIDForAdvancedUsage:(BOOL)a0 completionHander:(id /* block */)a1;
- (id)retrievePreviewURL;
- (void)setForcedContentTypeWithType:(id)a0;
- (void)startAttachment:(id)a0 withMimeType:(id)a1 encoding:(id)a2;
- (id)synchronousGetData;
- (void)updateWithExtensionReply:(id)a0;
- (void)updateWithPreview:(id)a0;
- (void)waitForPreviewDataIfNecessary:(id)a0 completion:(id /* block */)a1;

@end

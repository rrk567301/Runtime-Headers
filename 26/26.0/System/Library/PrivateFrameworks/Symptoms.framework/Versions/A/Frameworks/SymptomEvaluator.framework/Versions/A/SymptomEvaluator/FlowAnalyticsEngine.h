@class NSMutableDictionary, FlowScrutinizer, NetworkStateRelay, NSDate, NSObject, BitmapRetriever, NWStatsManager, NSString, AppAnalytics, ProcessAnalytics, NSMutableSet, FlowRefreshScheduler, CellularStateRelay, UsageAnalytics, ObjectAnalytics, CoreTelephonyShim;
@protocol OS_dispatch_source;

@interface FlowAnalyticsEngine : AnalyticsEngineCore <NWStatsManagerDelegate, FlowImmediateRefreshDelegate> {
    UsageAnalytics *uspace;
    ProcessAnalytics *pspace;
    AppAnalytics *aspace;
    NSMutableDictionary *processViaBundleNameCache;
    NSMutableDictionary *processViaExtensionNameCache;
    NSMutableDictionary *processViaProcNameCache;
    NSMutableDictionary *appState;
    NSMutableDictionary *appCompactState;
    NSMutableDictionary *pluginToBundleCache;
    NSMutableDictionary *audioBundleCache;
    NSMutableDictionary *webBrowserBundleCache;
    NSMutableDictionary *allAppEndpoints;
    NSMutableDictionary *resolvedAppEndpoints;
    NSMutableDictionary *determinedTrackersFromAPICount;
    NWStatsManager *nstatManager;
    BOOL nstatManagerConfigured;
    NSDate *lastCellularThresholdRefreshTime;
    NSString *networkUsageTraceFileRootName;
    int nstatTraceFileFD;
    unsigned long long logStateHandle;
    NSObject<OS_dispatch_source> *siginfo;
    unsigned int _pdpLastUsedInterfaceIndex;
    NSMutableSet *_pdpKnownInterfaces;
    NSMutableSet *_pdpMonitoredInterfaces;
    id /* block */ dataUsageRefreshCompletionBlock;
    int dataUsageRefreshCompletionNumWaiting;
    NSDate *lastFullRefreshTime;
    FlowScrutinizer *flowScrutinizer;
    BitmapRetriever *bitmapRetriever;
    NSObject<OS_dispatch_source> *flushInactiveLedgerTimer;
    FlowRefreshScheduler *refreshScheduler;
    NSMutableDictionary *flowCache;
    NSMutableDictionary *flowInstant;
    id flowObserver;
    id relayReadyObserver;
    ObjectAnalytics *fspace;
    ObjectAnalytics *lfpspace;
    ObjectAnalytics *domspace;
    ObjectAnalytics *expspace;
    ObjectAnalytics *epspace;
    NSObject<OS_dispatch_source> *flushOldFlowRecordsTimer;
    BOOL isScreenDark;
    NSDate *screenDarkTimestamp;
    BOOL isScreenLocked;
    id userSwitchObserver;
    unsigned long long usageCoalescingSpanSecs;
    unsigned long long usageWindowUnitsCount;
    unsigned long long outcomeArrayLogEntryCount;
    BOOL flowCountExceededThreshold;
    BOOL thunderingHerdFlowCountExceededThreshold;
    BOOL _verboseBitmapLogging;
    unsigned long long trackedFlowCountSincePrimaryInterfaceChanged;
    CoreTelephonyShim *ctShim;
}

@property (retain) CellularStateRelay *cellRelay;
@property (retain) NetworkStateRelay *wifiRelay;
@property (retain) NetworkStateRelay *mostRecentPrimaryRelay;
@property BOOL haveCalendar;
@property BOOL haveTypicalUsage;
@property (readonly, nonatomic) NSMutableDictionary *flowWatchers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedInstance;
+ (void)workspaceSaveWithCallback:(id /* block */)a0;
+ (void)checkForegroundStateForProcessWithUUID:(id)a0 replyQueue:(id)a1 reply:(id /* block */)a2;
+ (id)appBundleIdentifierFromBundleIdentifier:(id)a0;
+ (void)performAppExperiencePeriodicActivityWithReply:(id /* block */)a0;
+ (void)appsWithFlowsPassingTest:(id /* block */)a0 replyQueue:(id)a1 reply:(id /* block */)a2;
+ (void)endRNFPeriod;
+ (void)recentUsageForApps:(id)a0 replyQueue:(id)a1 reply:(id /* block */)a2;
+ (id)queue;
+ (id)appBundleIdentifierFromAuditToken:(struct { unsigned int x0[8]; })a0;
+ (void)identifierForUUID:(id)a0 replyQueue:(id)a1 reply:(id /* block */)a2;
+ (BOOL)appBundleIdentifierIsWebBrowser:(id)a0;
+ (void)performAppPeriodicActivityWithReply:(id /* block */)a0;

- (void)_handleSIGUSR1;
- (void)performThresholdingOn:(id)a0 forKey:(id)a1 andValue:(id)a2 connection:(id)a3 createdBlock:(id /* block */ *)a4 hitBlock:(id /* block */)a5 errorBlock:(id /* block */)a6;
- (void)_dumpState;
- (void)_checkForegroundStateForProcessWithUUID:(id)a0 replyQueue:(id)a1 reply:(id /* block */)a2;
- (void)workspaceSaveWithCallback:(id /* block */)a0;
- (void)statsManager:(id)a0 didReceiveNWSnapshot:(id)a1;
- (void)createSnapshotFor:(id)a0 pred:(id)a1 actions:(id)a2 reply:(id /* block */)a3;
- (id)_has1stPartyImpliedBundleNameBehavior:(id)a0;
- (void)performAppExperiencePeriodicTasksComplete:(id)a0 error:(id)a1;
- (void)identifierForUUID:(id)a0 reply:(id /* block */)a1;
- (void)_endRNFPeriod;
- (void)resetDataFor:(id)a0 nameKind:(id)a1;
- (BOOL)_handlesFlowEntity:(id)a0;
- (void)performAppPeriodicTasksComplete:(id)a0 error:(id)a1;
- (void)_applyCountsTo:(id)a0 fromLiveUsage:(id)a1 mustReset:(BOOL)a2;
- (BOOL)_bundleBackgroundAudioCapable:(id)a0;
- (void)dealloc;
- (BOOL)_setupObjectAnalyticsWorkspaces:(id)a0;
- (id)_flowFetchForName:(id)a0;
- (void)_didReceiveSnapshot:(id)a0;
- (int)performQueryOnEntityFromCache:(id)a0 pred:(id)a1 altpred:(id *)a2 actions:(id)a3 found:(id *)a4;
- (void)_newFlowData:(id)a0;
- (void)_recentUsageForApps:(id)a0 replyQueue:(id)a1 reply:(id /* block */)a2;
- (void)_logBitmapOutcome:(id)a0;
- (void)_pruneFlowHistory;
- (void)_performAppExperiencePeriodicTasksWithReply:(id /* block */)a0;
- (void)_setupNotificationCenterAndRelayObservers;
- (void)_appsWithFlowsPassingTest:(id /* block */)a0 replyQueue:(id)a1 reply:(id /* block */)a2;
- (BOOL)_appBundleIdentifierIsWebBrowser:(id)a0;
- (void)_updateLiveUsage:(id)a0 wifiIn:(long long)a1 wifiOut:(long long)a2 cellIn:(long long)a3 cellOut:(long long)a4 wiredIn:(long long)a5 wiredOut:(long long)a6 btIn:(long long)a7 btOut:(long long)a8 xIn:(long long)a9 xOut:(long long)a10 isJumboFlow:(BOOL)a11 isExpensive:(BOOL)a12 closing:(BOOL)a13;
- (unsigned long long)_clearUninstalledAppEntries;
- (void)_setupDailyMaintenanceActivity;
- (void)_refreshFullDataUsage;
- (id)createFlushInactiveLedgerTimer:(id)a0;
- (void)_removeInfoFromWorkspaceForProcess:(id)a0;
- (id)_appExperienceForApp:(id)a0 forTime:(id)a1;
- (id)_processFetchForName:(id)a0 bundle:(id)a1 shouldFillMiss:(BOOL)a2;
- (double)_usageFingerprintForBundleName:(id)a0;
- (BOOL)_isLiveUsageInRollingWindow:(id)a0 forTime:(id)a1;
- (id)_liveUsageFetchForProcess:(id)a0;
- (unsigned long long)_pruneAppExperienceRecords;
- (void)identifierForUUID:(id)a0 queue:(id)a1 reply:(id /* block */)a2;
- (BOOL)_setupLocalCache;
- (int)_performQueryOnEntityFromProcCache:(id)a0 target:(id)a1 pred:(id)a2 found:(id *)a3;
- (id)_processFetchForName:(id)a0 bundle:(id)a1 extension:(id)a2 shouldFillMiss:(BOOL)a3;
- (void)logOutcomeArray:(id)a0;
- (void)_handleSnapshotForDomains:(id)a0;
- (void)_refreshFullDataUsageWithCallback:(id /* block */)a0;
- (int)_performQueryOnEntityFromInstantFlowCache:(id)a0 target:(id)a1 pred:(id)a2 found:(id *)a3;
- (void)_removeFromProcCache:(id)a0 ofType:(unsigned int)a1;
- (void)_removeAllInfoForProcess:(id)a0;
- (BOOL)_shouldProcessDomainInfoForBundleID:(id)a0 implicit:(id *)a1 knownToLaunchServices:(BOOL *)a2 ignoredInLaunchServices:(BOOL *)a3 isWebBrowser:(BOOL *)a4;
- (BOOL)_isLiveFlowPerfinScope:(id)a0 forTime:(id)a1 andTag:(id)a2;
- (void)_handleApplicationNotificationCompactForBundleName:(id)a0 edgeMode:(BOOL)a1;
- (id)getOption:(id)a0;
- (void)_archiveRecord:(id)a0;
- (BOOL)handlesEntity:(id)a0;
- (void)_checkCellExcessUsageActions:(unsigned long long)a0 previous:(unsigned long long)a1 snapshot:(id)a2;
- (void)processSnapshotForConnectionEstablishment:(id)a0;
- (void)_saveAndUnloadSelectState;
- (void)_handleSnapshot:(id)a0;
- (void)_reportThresholdedFlowCount:(unsigned long long)a0 threshold:(unsigned long long)a1;
- (BOOL)_requiresUserValidationPredicateForEntity:(id)a0;
- (id)_parseEvent:(id)a0 withGeneration:(id *)a1;
- (id)_fetchFromFlowCacheWithName:(id)a0;
- (void)_performAppPeriodicTasksWithReply:(id /* block */)a0;
- (void)_sendStatisticsReport:(id)a0;
- (void)_removeOldFlowRecords;
- (void)_liveUsagePackForProcess:(id)a0 subscriberTag:(id)a1;
- (void)_setupPrefsStoreObserving;
- (void)getNetworkBitmapsWithNames:(id)a0 startTime:(unsigned long long)a1 endTime:(unsigned long long)a2 options:(id)a3 reply:(id /* block */)a4;
- (void)_insertProcCache:(id)a0 ofType:(unsigned int)a1 underName:(id)a2;
- (BOOL)_snapshotUsesCompanion:(id)a0;
- (void)performQueryOnEntity:(id)a0 fetchRequestProperties:(id)a1 pred:(id)a2 sort:(id)a3 actions:(id)a4 service:(id)a5 connection:(id)a6 reply:(id /* block */)a7;
- (void)_startFlowMonitoring;
- (void)statsManager:(id)a0 thresholdReachedOn:(unsigned int)a1;
- (id)_fetchFromProcCacheWithName:(id)a0 ofType:(unsigned int)a1;
- (BOOL)_isLiveUsageinScope:(id)a0 forTime:(id)a1;
- (id)_attemptConvertingPluginNameToContainingAppName:(id)a0;
- (void)performQueryPostProcessing:(id)a0 actions:(id)a1 processOutcome:(id)a2;
- (BOOL)_setupSignalHandling;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_logExcessCellUsage:(long long)a0 snapshot:(id)a1;
- (void)_startMonitoringNetworkInterface:(int)a0 usingThreshold:(unsigned long long)a1;
- (void)_generateFlowAnomalySymptom:(unsigned int)a0 currentUsage:(unsigned long long)a1 snapshot:(id)a2;
- (void)_initializeInternals;
- (void)_refreshFullDataUsageComplete;
- (void)_dumpSubFlowCounts;
- (void)pollFlows;
- (BOOL)_processNameIsValid:(id)a0;
- (BOOL)_shouldSendStatisticsReport:(id)a0;
- (unsigned long long)_liveUsageCountForProcess:(id)a0 subscriberTag:(id)a1;
- (id)initWithWorkspace:(id)a0 params:(id)a1 queue:(id)a2;
- (BOOL)_handlesProcEntity:(id)a0;
- (void).cxx_destruct;
- (id)setOption:(id)a0;

@end

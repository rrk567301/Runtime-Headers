@class NSObject, FI_TImageView, FI_TTouchBar, FIAirDropView, FI_TNotificationCenterObserverGlue, FIAirDropListViewController, NSString, FI_TButton, NSImage, NSTimer, FI_TTextField, NSIndexSet, NSArray, FI_TUpdateLayerView, FI_TAirDropDiscoveryController, FI_TKeyValueObserverGlue, FI_TCustomTouchBarItem;
@protocol FIAirDropViewDelegate, FI_TAirDropNotAvailableDelegateProtocol, TAirDropTransfer;

@interface FIAirDropViewGutsController : FI_TViewController <NSTouchBarDelegate, TAirDropTransferEventDelegate, TMarkTornDown> {
    struct TNSWeakPtr<NSObject<FIAirDropViewDelegate>> { NSObject<FIAirDropViewDelegate> *fWeakObject; } _weakDelegate;
    int _delegateRespondsToMask;
    NSArray *_urlsToSend;
    NSImage *_largeThumbnail;
    NSImage *_mediumThumbnail;
    NSImage *_smallThumbnail;
    NSString *_clientBundleID;
    FIAirDropListViewController *_listViewController;
    FI_TImageView *_airDropLogoImageView;
    FI_TTextField *_explanationTextFld;
    FI_TButton *_turnOnWiFiBluetoothButton;
    FI_TButton *_doneButton;
    FI_TUpdateLayerView *_fileImagePlaceholderView;
    NSObject<FI_TAirDropNotAvailableDelegateProtocol> *_airDropNotAvailableDelegate;
    FI_TAirDropDiscoveryController *_discoveryController;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { union type { unsigned char __data[24]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _viewDidMoveToWindowObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { union type { unsigned char __data[24]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _windowDidChangeOcclusionStateObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { union type { unsigned char __data[24]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _willSleepObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { union type { unsigned char __data[24]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _didWakeObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { union type { unsigned char __data[24]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _screensDidSleepObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { union type { unsigned char __data[24]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _screensDidWakeObserver;
    BOOL _isObservingAirDropNode;
    NSTimer *_windowOccludedTeardownTimer;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { union type { unsigned char __data[24]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _availableStateChangedObserver;
    struct TKeyValueObserver { FI_TKeyValueObserverGlue *fObserver; NSObject *fObjectToObserve; NSArray *fArrayOfObjectsToObserve; NSIndexSet *fIndexesOfObjectsToObserve; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fKeyPathToObserve; } _isLegacyMachineObserver;
    struct TKeyValueObserver { FI_TKeyValueObserverGlue *fObserver; NSObject *fObjectToObserve; NSArray *fArrayOfObjectsToObserve; NSIndexSet *fIndexesOfObjectsToObserve; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fKeyPathToObserve; } _isLegacyModeEnabledObserver;
    struct TKeyValueObserver { FI_TKeyValueObserverGlue *fObserver; NSObject *fObjectToObserve; NSArray *fArrayOfObjectsToObserve; NSIndexSet *fIndexesOfObjectsToObserve; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fKeyPathToObserve; } _arrangedObjectsCountObserver;
    struct TKeyValueObserver { FI_TKeyValueObserverGlue *fObserver; NSObject *fObjectToObserve; NSArray *fArrayOfObjectsToObserve; NSIndexSet *fIndexesOfObjectsToObserve; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fKeyPathToObserve; } _touchBarTransferStartedObserver;
    struct recursive_mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _senderOpControllersLock;
    struct vector<std::shared_ptr<TAirDropSenderOperationController>, std::allocator<std::shared_ptr<TAirDropSenderOperationController>>> { void *__begin_; void *__end_; void *__cap_; } _senderOpControllers;
    struct TNSWeakPtr<FI_TTouchBar> { FI_TTouchBar *fWeakObject; } _participantsTouchBar;
    struct TNSWeakPtr<FI_TCustomTouchBarItem> { FI_TCustomTouchBarItem *fWeakObject; } _participantsTouchBarItem;
    FI_TCustomTouchBarItem *_escapeKeyTouchBarItem;
    struct TNSWeakPtr<FI_TTouchBar> { FI_TTouchBar *fWeakObject; } _airDropNotAvailableTouchBar;
    struct TNSWeakPtr<FI_TCustomTouchBarItem> { FI_TCustomTouchBarItem *fWeakObject; } _turnOnWiFiBluetoothTouchBarItem;
}

@property (retain, nonatomic) NSObject<TAirDropTransfer> *transfer;
@property (weak, nonatomic) NSObject<FIAirDropViewDelegate> *delegate;
@property (copy, nonatomic) NSArray *urlsToSend;
@property (copy, nonatomic) NSImage *largeThumbnail;
@property (copy, nonatomic) NSImage *mediumThumbnail;
@property (copy, nonatomic) NSImage *smallThumbnail;
@property (copy, nonatomic) NSString *clientBundleID;
@property (readonly, retain, nonatomic) FIAirDropView *airDropView;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } fileImageFrame;
@property (readonly, nonatomic) BOOL hideExplanationTextFld;
@property (readonly, nonatomic) BOOL isTransferInProgress;
@property (readonly, nonatomic) BOOL atLeastOneTransferStarted;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (getter=isTornDown) BOOL tornDown;

- (void)windowDidChangeOcclusionState:(id)a0;
- (void)cancelOperation:(void *)a0;
- (void)cancelOperations;
- (void)dealloc;
- (void)keyDown:(id)a0;
- (void)cancel;
- (void)viewDidMoveToWindow;
- (id).cxx_construct;
- (void)initCommon;
- (void).cxx_destruct;
- (id)nibName;
- (id)touchBar:(id)a0 makeItemForIdentifier:(id)a1;
- (void)cancelButtonPressed:(id)a0;
- (id)makeTouchBar;
- (void)aboutToTearDown;
- (void)configureView;
- (void)doneButtonPressed:(id)a0;
- (void)configureForAirDropAvailability;
- (void)tellDelegateCancelButtonPressed;
- (void)airDropAvailabilityChanged;
- (void)cancelNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (BOOL)isAirDropAvailable;
- (void)personClicked:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)resumeAirDropDiscovery;
- (void)resumeOperation:(void *)a0;
- (void)sendToNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)sfOperationEventAskUser:(id)a0 opController:(void *)a1;
- (void)sfOperationEventBlocked:(id)a0 opController:(void *)a1;
- (void)sfOperationEventCanceled:(id)a0 opController:(void *)a1;
- (void)sfOperationEventConflict:(id)a0 opController:(void *)a1;
- (void)sfOperationEventConnecting:(id)a0 opController:(void *)a1;
- (void)sfOperationEventConverting:(id)a0 opController:(void *)a1;
- (void)sfOperationEventErrorOccurred:(id)a0 opController:(void *)a1;
- (void)sfOperationEventFinished:(id)a0 opController:(void *)a1;
- (void)sfOperationEventPostprocess:(id)a0 opController:(void *)a1;
- (void)sfOperationEventPreprocess:(id)a0 opController:(void *)a1;
- (void)sfOperationEventProgress:(id)a0 opController:(void *)a1;
- (void)sfOperationEventStarted:(id)a0 opController:(void *)a1;
- (void)sfOperationEventWaitForAnswer:(id)a0 opController:(void *)a1;
- (void)suspendAirDropDiscovery;
- (void)tellDelegateDoneButtonPressed;
- (void)updateDataSource:(id)a0 senderOpController:(void *)a1;
- (void)updateExplanationText;
- (void)windowOccludedTeardownTimerDidFire;

@end

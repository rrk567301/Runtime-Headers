@class CCSimpleRenderPass, NSMutableDictionary, MTLRenderPassDescriptor, CCWarpAlgorithmForward, CCPipelineStateLibrary, CCContextDeviceGroup, CCWarpServiceDescriptor, NSString, CCLane, CCTAAAlgorithmRasterizedBackward, CCSimpleInlinePass, CCBuffer, CCTAAAlgorithm;

@interface CCWarpService : CCService <CCResourceDelegate> {
    CCContextDeviceGroup *_deviceGroup;
    unsigned long long _numberOfTargets;
    unsigned long long _maxDownsamplingLevelSupported;
    BOOL _supportsDenoising;
    BOOL _deviceSupportsVRR;
    struct CGSize { double width; double height; } _targetTextureSize;
    long long _vfrwDownsamplingFactor;
    long long _orfPassMode;
    unsigned long long _fixedPointIterationCount;
    unsigned long long _resolveWarpIterationCount;
    unsigned long long _posWarpSRWIterationCount;
    float _adaptiveDownSamplingRate;
    long long _seedingPointStyle;
    BOOL _preDisplayCompositeEnabled;
    BOOL _enableTemporalAntiAliasing;
    BOOL _enableHybridWarp;
    BOOL _enableEmptySpaceSkipping;
    CCBuffer *_warpServiceBuffer;
    CCTAAAlgorithm *_taaAlgorithm;
    CCTAAAlgorithmRasterizedBackward *_taaAlgorithmRasterizedBackward;
    int _warpAlgorithmInternal;
    CCWarpAlgorithmForward *_warpAlgorithmForward;
    CCSimpleRenderPass *_warpPass;
    CCSimpleInlinePass *_ORFPass;
    void /* unknown type, empty encoding */ _planeDescriptors[2];
    BOOL _isCIF10OutputEnabled;
    MTLRenderPassDescriptor *_renderPassDescriptor;
    NSMutableDictionary *_passes;
    CCLane *resourceWarpAlgorithmORF;
    CCLane *resourceIntermediateDataOutputORF;
    CCLane *resourceXRInputORF;
    CCLane *resourceTAAAlgorithmORF;
    CCLane *resourceAdaptiveRegistrationORF;
    CCLane *resourceWarpAlgorithmPDC;
    CCLane *resourceDisplayCamerasPDC;
    CCLane *resourceFrameUIDPDC;
    CCLane *resourceIntermediateDataInputPDC;
    CCLane *resourceHomogenousWarpComponentPDC;
    CCLane *resourceXRInputPDC;
    CCLane *resourceDisplayTextureODC;
    CCLane *resourceOutputDepthTextureODC;
    CCLane *resourceOutputConfidenceTextureODC;
    CCLane *resourceOutputAlpha8TextureODC;
    CCLane *resourceColorInformationODC;
    CCLane *resourceDefaultOutputColorODC;
    CCLane *resourceVisualizationFlagsODC;
    CCLane *resourceAlgorithmSelectorOutputODC;
    CCLane *resourceDisplayCamerasODC;
    CCLane *resourceFrameUIDODC;
    CCLane *resourceIntermediateDataInputODC;
    CCLane *resourceHomogenousWarpComponentODC;
    CCLane *resourceXRInputODC;
    CCLane *resourceInputAccessibilityColorFilterDataODC;
    CCLane *resourceZoomLensMeshODC;
    CCLane *resourceDefaultOutputColorData;
    CCLane *resourceWarpAlgorithmODC;
    CCLane *resourceWarpStencilODC;
    CCLane *resourceGazeBasedDimming;
    CCLane *resourceTrackableAnchor;
    CCLane *resourceDisplayDistortionODC;
    CCLane *resourceDisplayInputCameraODC;
    CCLane *resourceDisplayOutputMeshODC;
    CCLane *resourceDisplayDepthODC;
    CCLane *resourceAdaptiveRegistrationODC;
    CCLane *resourcesDisplayReprojectedDepthODC[2];
}

@property (retain, nonatomic) CCPipelineStateLibrary *renderPipelineLibrary;
@property (retain, nonatomic) CCPipelineStateLibrary *tiledRenderPipelineLibrary;
@property (retain, nonatomic) CCWarpServiceDescriptor *warpDescriptor;
@property (nonatomic) long long warpAlgorithm;
@property (nonatomic) BOOL seperateRotationComponent;
@property (nonatomic) BOOL textFriendly;
@property (nonatomic) BOOL performDenoising;
@property (nonatomic) BOOL warpDepth;
@property (nonatomic) BOOL highQualityDepth;
@property (nonatomic) BOOL perciseDepth;
@property (nonatomic) BOOL generateWarpedDepth;
@property (nonatomic) BOOL generateWarpedConfidence;
@property (nonatomic) BOOL robustChecking;
@property (nonatomic) BOOL robustResolve;
@property (nonatomic) BOOL enableBlending;
@property (nonatomic) BOOL outputDownsampledDepth;
@property (nonatomic) long long dataSyncMode;
@property (nonatomic) BOOL enableMultiViewBlend;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)new;

- (BOOL)setDescriptor:(id)a0;
- (id)formattedDescription:(unsigned long long)a0;
- (id)init;
- (void).cxx_destruct;
- (void)releaseBuffers;
- (void)addAllocations:(id)a0;
- (BOOL)preBuildService;
- (BOOL)buildWithDeviceGroup:(id)a0;
- (id)provideDataForResource:(id)a0 mtlDevice:(id)a1 protectionOptions:(unsigned long long)a2;
- (BOOL)reallocateBuffersWithDeviceGroup:(id)a0;
- (void)removeAllocations:(id)a0;
- (BOOL)updateLanes:(id)a0;

@end

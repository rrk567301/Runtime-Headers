@class NSUUID, NSString, NSArray, NSDictionary, NSLocale, CRNormalizedQuad, CRImage, NSNumber, CRNormalizedPolyline;
@protocol CRScriptCategory;

@interface CRTextFeature : NSObject <CRLineWrappable, CRDirectionalRegion, NSCoding, NSCopying> {
    BOOL _contextSet;
}

@property unsigned long long type;
@property struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } bounds;
@property struct CGPoint { double x; double y; } topLeft;
@property struct CGPoint { double x; double y; } topRight;
@property struct CGPoint { double x; double y; } bottomLeft;
@property struct CGPoint { double x; double y; } bottomRight;
@property (retain) NSArray *subFeatures;
@property (retain) NSArray *stringValueCandidates;
@property (retain) NSArray *candidateProbs;
@property (retain) NSArray *candidateActivationProbs;
@property (retain) NSArray *subFeatureCandidates;
@property long long bestCandidateIndex;
@property BOOL shouldExpandToFullWidth;
@property (retain, nonatomic) NSString *stringValue;
@property (retain, nonatomic) NSString *gtStringValue;
@property (retain) CRImage *imageCut;
@property (retain) NSNumber *confidence;
@property (readonly) struct CGPoint { double x; double y; } toplineOrigin;
@property (readonly) struct CGPoint { double x; double y; } baselineOrigin;
@property float baselineAngle;
@property unsigned char sizeHint;
@property float textlineHeight;
@property int featureMapID;
@property (retain) NSArray *scriptCategoryResults;
@property (retain) id<CRScriptCategory> selectedScriptCategory;
@property (retain) NSDictionary *scriptCounts;
@property (retain) NSString *selectedLocale;
@property (retain) NSString *sequenceScriptOutputResult;
@property BOOL shouldRotate180;
@property BOOL shouldRotate180DetectorOrientationFallBack;
@property BOOL isCurved;
@property BOOL isVerticalLayout;
@property (readonly) unsigned long long subFeatureType;
@property (retain) NSUUID *uuid;
@property int featureID;
@property (retain) CRNormalizedPolyline *polygon;
@property BOOL useSequenceScriptLocale;
@property BOOL useSequenceOrientation;
@property BOOL appliedOrientationCorrection;
@property BOOL whitespaceInjected;
@property unsigned long long lineWrappingType;
@property struct CGSize { double width; double height; } originalImageSize;
@property unsigned long long nmsOutputScale;
@property unsigned long long textType;
@property (readonly) NSLocale *locale;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSString *text;
@property (readonly) unsigned long long textRegionType;
@property (readonly) unsigned long long layoutDirection;
@property (readonly) CRNormalizedQuad *boundingQuad;

+ (id)lineFeatures:(id)a0 imageWidth:(unsigned long long)a1 imageHeight:(unsigned long long)a2;
+ (id)overlayFeatures:(id)a0 onImage:(id)a1 showSubFeatures:(BOOL)a2;
+ (id)overlayFeaturesPolygonVertices:(id)a0 onImage:(id)a1 showSubFeatures:(BOOL)a2;
+ (id)overlayFeaturesQuadVertices:(id)a0 onImage:(id)a1 showSubFeatures:(BOOL)a2;
+ (id)sortedTextFeaturesByAspectRatio:(id)a0 imageSize:(struct CGSize { double x0; double x1; })a1;

- (id)initWithSubfeatures:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)encodeWithCoder:(id)a0;
- (id)init;
- (id)initWithCoder:(id)a0;
- (void).cxx_destruct;
- (id)initWithTopLeft:(struct CGPoint { double x0; double x1; })a0 topRight:(struct CGPoint { double x0; double x1; })a1 bottomLeft:(struct CGPoint { double x0; double x1; })a2 bottomRight:(struct CGPoint { double x0; double x1; })a3;
- (double)confidenceScore;
- (BOOL)isDown;
- (void)addKohlsDigitProjection;
- (id)initWithFeatureRect:(id)a0 subFeatureRects:(id)a1;
- (void)mergeWithLine:(id)a0;
- (void)flipHorizontally;
- (id)textFeatureSplitForStringValue:(id)a0;
- (void)updateSizeHints;
- (void)adjustBoundsBasedOnSubfeaturesForImageSize:(struct CGSize { double x0; double x1; })a0;
- (void)appendTextFeature:(id)a0 imageSize:(struct CGSize { double x0; double x1; })a1;
- (float)aspectRatioWithImageSize:(struct CGSize { double x0; double x1; })a0;
- (float)calculateTextBoxHeightForImageWidth:(unsigned long long)a0 imageHeight:(unsigned long long)a1;
- (float)caseInsensitiveProbabilityCandidateIndex:(int)a0;
- (id)createCharacterSubFeaturesForCandidateAtIndex:(long long)a0;
- (id)createCharacterSubFeaturesForCandidateAtIndex:(long long)a0 topWhiteSpacePoints:(id)a1 bottomWhiteSpacePoints:(id)a2 falsePositiveFiltering:(BOOL)a3;
- (id)createSubFeaturesFromStringsForCandidateAtIndex:(long long)a0 topWhiteSpacePoints:(id)a1 bottomWhiteSpacePoints:(id)a2 hasBoundarySpacePoints:(BOOL)a3 hasCharacterAndWordBoundaries:(BOOL)a4;
- (id)initWithCCFeatureRect:(id)a0 subFeatureRects:(id)a1 rotatePortrait:(BOOL)a2;
- (id)initWithFeatureRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inImage:(id)a1;
- (id)initWithFeatureRect:(id)a0 subFeatureRects:(id)a1 inImage:(id)a2;
- (id)initWithSubfeatures:(id)a0 stringValue:(id)a1;
- (BOOL)isUp;
- (void)scale:(struct CGPoint { double x0; double x1; })a0 offset:(struct CGPoint { double x0; double x1; })a1;
- (void)setBaselineOrigin:(struct CGPoint { double x0; double x1; })a0 toplineOrigin:(struct CGPoint { double x0; double x1; })a1 slope:(float)a2;
- (void)setSelectedLocale:(id)a0 includeSubfeatures:(BOOL)a1;
- (void)setSelectedScriptCategory:(id)a0 includeSubfeatures:(BOOL)a1;
- (void)setStringValueByReplacingCharactersInSet:(id)a0 withString:(id)a1;
- (struct CGSize { double x0; double x1; })sizeForImageSize:(struct CGSize { double x0; double x1; })a0;
- (id)textFeatureScaledToImage:(id)a0;
- (id)textFeatureScaledToImageWidth:(float)a0 height:(float)a1;
- (id)textFeaturebyPaddingToWidth:(float)a0 height:(float)a1;
- (id)wordFeatures;

@end

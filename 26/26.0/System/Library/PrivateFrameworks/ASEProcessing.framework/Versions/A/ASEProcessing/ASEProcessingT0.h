@class NSObject;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface ASEProcessingT0 : NSObject {
    unsigned long long _numberOfRequestedFrames;
    unsigned long long _numberOfScheduledFrames;
    unsigned long long _numberOfProcessedFrames;
    unsigned int _asePlatform;
    int _aseProcessingVersion;
    unsigned int _aseProcessingType;
    unsigned int _inputWidth;
    unsigned int _inputHeight;
    NSObject<OS_dispatch_queue> *_scheduleQueue;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_semaphore> *_scheduleSemaphone;
    unsigned int _noiseMeterStepSize;
    unsigned int _FD_state;
    unsigned int _FG_count;
    unsigned int _NFG_count;
    unsigned int _prev_H1_7;
    unsigned int _prev_V1_7;
    unsigned int _prev_ratio_2D_1D;
    unsigned int _productType;
    float _enhancementStrength;
    unsigned int _destinationWidth;
    unsigned int _destinationHeight;
    BOOL _inputType;
    struct aseConfigurationUnitsV2_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { unsigned int x0; } x4; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x5; struct { struct { float x0; float x1; float x2; float x3; float x4; } x0; } x6; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x7; struct { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x0; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x1; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x2; } x8; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x9; struct { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x2; } x10; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x11; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x12; } *_aseControlUnit;
}

- (void)dealloc;
- (void).cxx_destruct;
- (long long)processFrameWithInput:(struct __IOSurface { } *)a0 Measurement:(struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a1 outputData:(id *)a2;
- (void)setDestinationHeight:(unsigned int)a0;
- (void)setDestinationWidth:(unsigned int)a0;
- (void)setInputType:(BOOL)a0;
- (void)DumpOutputHcus:(id)a0;
- (void)configControlHeader_V1:(struct aseConfigurationUnitsV1_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x4; } *)a0;
- (void)configControlHeader_V2:(struct aseConfigurationUnitsV2_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { unsigned int x0; } x4; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x5; struct { struct { float x0; float x1; float x2; float x3; float x4; } x0; } x6; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x7; struct { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x0; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x1; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x2; } x8; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x9; struct { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x2; } x10; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x11; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x12; } *)a0;
- (void)digitalZoomSelectControl_V1:(struct aseConfigurationUnitsV1_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x4; } *)a0;
- (void)digitalZoomSelectControl_V2:(struct aseConfigurationUnitsV2_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { unsigned int x0; } x4; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x5; struct { struct { float x0; float x1; float x2; float x3; float x4; } x0; } x6; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x7; struct { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x0; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x1; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x2; } x8; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x9; struct { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x2; } x10; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x11; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x12; } *)a0;
- (unsigned int)getDestinationHeight;
- (unsigned int)getDestinationWidth;
- (float)getEnhancementStrength;
- (id)initWithConfig:(const struct { int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)a0 aseProcessing:(id)a1 productType:(unsigned int)a2;
- (void)printAseMeasurementOutput:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a0;
- (long long)processFrameWithInput:(struct __IOSurface { } *)a0 Measurement:(struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a1 Output:(struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } *)a2;
- (long long)processFrameWithInput:(struct __IOSurface { } *)a0 Measurement:(struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a1 callback:(id /* block */)a2;
- (void)processPixelWithInput:(struct __IOSurface { } *)a0 Measurement:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a1 controlUnit:(struct aseConfigurationUnitsV2_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { unsigned int x0; } x4; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x5; struct { struct { float x0; float x1; float x2; float x3; float x4; } x0; } x6; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x7; struct { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x0; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x1; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x2; } x8; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x9; struct { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x2; } x10; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x11; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x12; } *)a2;
- (void)processPixelWithInput_V1:(struct __IOSurface { } *)a0 Measurement:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a1 Output:(struct aseConfigurationUnitsV1_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x4; } *)a2;
- (void)processPixelWithInput_V2:(struct __IOSurface { } *)a0 Measurement:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a1 Output:(struct aseConfigurationUnitsV2_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { unsigned int x0; } x4; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x5; struct { struct { float x0; float x1; float x2; float x3; float x4; } x0; } x6; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x7; struct { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x0; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x1; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x2; } x8; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x9; struct { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x2; } x10; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x11; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x12; } *)a2;
- (void)processPixelWithMeasurement_V1:(struct __IOSurface { } *)a0 Measurement:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a1 pixelControl:(struct aseConfigurationUnitsV1_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x4; } *)a2;
- (void)processPixelWithMeasurement_V2:(struct __IOSurface { } *)a0 Measurement:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15[8]; unsigned int x16[8]; unsigned int x17[8]; unsigned int x18[8]; unsigned int x19[16]; unsigned int x20[16]; unsigned int x21[16]; } *)a1 Output:(struct aseConfigurationUnitsV2_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { unsigned int x0; } x4; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x5; struct { struct { float x0; float x1; float x2; float x3; float x4; } x0; } x6; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x7; struct { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x0; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x1; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x2; } x8; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x9; struct { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x2; } x10; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x11; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x12; } *)a2;
- (void)processPixelWithPixelControl_V1:(struct __IOSurface { } *)a0 Output:(struct aseConfigurationUnitsV1_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x4; } *)a1;
- (void)processPixelWithPixelControl_V2:(struct __IOSurface { } *)a0 Output:(struct aseConfigurationUnitsV2_t { struct MSRHcuHeader_t { unsigned int x0; unsigned int x1; } x0; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x1; struct { struct { union { struct { int x0; unsigned int x1; BOOL x2; union { struct { BOOL x0; unsigned int x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x2; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x3; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x5; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x6; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x7; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x9; struct { struct { unsigned int x0; unsigned int x1; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x1; } x10; } x0; } x3; } x0; } x0; } x0; } x2; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x3; struct { unsigned int x0; } x4; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x5; struct { struct { float x0; float x1; float x2; float x3; float x4; } x0; } x6; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x7; struct { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x0; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x1; struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; struct { float x0; float x1; float x2; } x4; struct { float x0; float x1; float x2; } x5; struct { float x0; float x1; float x2; } x6; struct { float x0; float x1; float x2; } x7; } x2; } x8; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x9; struct { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } x2; } x10; struct MSRHcuEntryHeader_t { unsigned int x0; unsigned int x1; } x11; struct { struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x0[4]; struct { unsigned short x0 : 12; unsigned short x1 : 12; unsigned char x2 : 8; } x1[4]; struct { unsigned short x0 : 11; unsigned short x1 : 11; unsigned short x2 : 10; } x2[4]; } x12; } *)a1;
- (void)setEnhancementStrength:(float)a0;

@end

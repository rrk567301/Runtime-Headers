@class SiriSharedUICompactUserUtteranceView, SRUIFLocalization, NSDictionary, SiriSharedUIViewStackConstraints, SiriSharedUIStandardScrollView, SiriSharedUIAnimationContext, SiriSharedUISAEUserUtteranceViewModel, _TtC12SiriSharedUI32SiriSharedUISmartDialogContainer, NSMutableArray, SFCard, NSString, SAUIPluginSnippet, SiriSharedUILatencyViewModel, NSArray, NSView, SRUIFSpeechRecognitionHypothesis, SiriSharedUILatencyView;
@protocol SiriSharedUIInteractionDelegate, SiriSharedUIDropletContentDelegate, SiriSharedUICompactConversationViewDelegate, SiriSharedUIStackableContentDelegate;

@interface SiriSharedUISmartDialogView : SiriSharedUIStandardView <SiriSharedUICompactUserUtteranceViewDelegate, SiriSharedUICompactServerUtteranceViewDelegate, NSScrollViewDelegate, SiriSharedUI.SiriSharedUISmartDialogDelegate, SiriSharedUILatencyViewDelegate, SiriSharedUICompactConversationViewHosting> {
    SiriSharedUILatencyView *_latencyView;
    SiriSharedUICompactUserUtteranceView *_userUtteranceView;
    NSView *_containerView;
    NSDictionary *_conversationSnippetVibrancyViews;
    NSView *_hintVibrancyView;
    NSView *_hintSnippetView;
    NSView *_attributionView;
    double _attributionHeight;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cappedFrame;
    BOOL _attributionUpdated;
    BOOL _automaticallyCollapseWhenResultIsScrolled;
    BOOL _hasHintConversationSnippets;
    BOOL _didSetConversationSnippets;
    double _currentExpandedGestureHeight;
    BOOL _isDrilledIn;
    BOOL _waitingForFinalSpeechHypothesis;
    BOOL _requestedAppearanceAnimation;
    BOOL _runningAnimatedFadeOut;
    BOOL _runningPrepareForUpdates;
    NSMutableArray *_prepareForUpdatesPendingCompletionBlocks;
    SFCard *_smartDialogCard;
    SAUIPluginSnippet *_smartDialogPlugin;
    SRUIFSpeechRecognitionHypothesis *_speechRecognitionHypothesisForSuggestion;
    id<SiriSharedUIInteractionDelegate> _interactionDelegate;
    BOOL _isResizingRequired;
    unsigned long long _layoutCount;
    BOOL _showingAlternativesUI;
}

@property (nonatomic) long long state;
@property (retain, nonatomic) SiriSharedUIStandardScrollView *scrollView;
@property (nonatomic) BOOL showingCollapsedUI;
@property (nonatomic) long long currentExpandablePlatterStyle;
@property (retain, nonatomic) NSView *snippetContainerView;
@property (retain, nonatomic, getter=_smartDialogContainer, setter=_setSmartDialogContainer:) _TtC12SiriSharedUI32SiriSharedUISmartDialogContainer *smartDialogContainer;
@property (retain, nonatomic, getter=_smartDialogView, setter=_setSmartDialogView:) NSView *smartDialogView;
@property (nonatomic) BOOL isInAmbient;
@property (nonatomic) BOOL isInAmbientInteractivity;
@property (nonatomic) BOOL allowAutomaticConversationSnippetViewScaling;
@property (retain, nonatomic) SRUIFLocalization *localization;
@property (retain, nonatomic) NSArray *activeTranscriptItems;
@property (nonatomic) BOOL isActive;
@property (nonatomic) BOOL revealRecognizedSpeech;
@property (retain, nonatomic) NSView *snippetBackgroundView;
@property (copy, nonatomic, setter=setUserUtteranceViewModel:) SiriSharedUISAEUserUtteranceViewModel *userUtteranceViewModel;
@property (setter=_setWantsPageAlignedHorizontalAxis:) BOOL _wantsPageAlignedHorizontalAxis;
@property (setter=_setWantsPageAlignedVerticalAxis:) BOOL _wantsPageAlignedVerticalAxis;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SiriSharedUICompactConversationViewDelegate> delegate;
@property (weak, nonatomic) id<SiriSharedUIDropletContentDelegate> dropletContainerDelegate;
@property (copy, nonatomic) NSString *userUtterance;
@property (copy, nonatomic) SRUIFSpeechRecognitionHypothesis *speechRecognitionHypothesis;
@property (copy, nonatomic) SiriSharedUILatencyViewModel *latencyViewModel;
@property (copy, nonatomic) NSArray *serverUtterances;
@property (copy, nonatomic) NSArray *conversationSnippetViews;
@property (readonly, nonatomic, getter=isCurrentlyTrackingGesture) BOOL currentlyTrackingGesture;
@property (readonly, nonatomic, getter=willAutomaticallyCollapseWhenResultIsScrolled) BOOL automaticallyCollapseWhenResultIsScrolled;
@property (weak, nonatomic) id<SiriSharedUIStackableContentDelegate> stackContainerDelegate;
@property (nonatomic) long long attachmentType;
@property (nonatomic) double attachmentYOffset;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } portraitContentSize;
@property (retain, nonatomic) SiriSharedUIViewStackConstraints *stackConstraints;
@property (nonatomic) BOOL useLowerPriorityHeightConstraint;
@property (retain, nonatomic) NSArray *customAttachmentConstraints;
@property (retain, nonatomic) SiriSharedUIAnimationContext *animationContextForFrameAndLayoutUpdate;

- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)layout;
- (BOOL)hasResult;
- (void)setInteractionDelegate:(id)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void).cxx_destruct;
- (id)hostingView;
- (void)scrollViewBeganMomentum:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (void)setPopoverViewController:(id)a0;
- (void)_setupSubviews;
- (void)triggerAnimation;
- (id)contentContainerView;
- (void)animateAppearanceIfNeeded;
- (BOOL)containsSmartDialogSnippetWithViewId:(id)a0;
- (id)initWithResultView:(id)a0;
- (id)initWithStreamingTextView:(id)a0 emojiMaskStreamingTextView:(id)a1;
- (id)preferredAccessibilityElementToFocus;
- (void)reloadView;
- (void)setOffersDismissal:(BOOL)a0 actionHandler:(id)a1;
- (void)snippetContentDidUpdate;
- (BOOL)transitionToExpandablePlatterStyle:(long long)a0;
- (void)transitionToResult;
- (void)triggerSmartDialogAnimationWithDelay:(double)a0;
- (void)updateContentSizeIfNecessary;
- (void)updateSmartDialogSnippetWithData:(id)a0;
- (int)updateUserUtteranceVisibilityIfNeeded;
- (void)userDidReportConcernForCardSection:(id)a0;
- (void)userDidReportConcernForCardSection:(id)a0 additionalDomainProvidedFeedback:(id)a1;
- (id)_conversationDisappearAnimation;
- (BOOL)_isConversationSnippetHintType:(id)a0;
- (struct CGSize { double x0; double x1; })_sizeOfSnippet:(id)a0;
- (BOOL)layerHasOpacity;
- (void)setCappedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })sizeOfSmartDialogHostedSnippet:(id)a0;
- (id)_keyForSnippet:(id)a0;
- (double)maxSnippetWidth;
- (void)updateContentSizeWithAnimation:(BOOL)a0;
- (void)_adjustCornerRadiusForSnippetView:(id)a0 vibrancyView:(id)a1;
- (void)_adjustHintCornerRadiusForSnippetView:(id)a0 vibrancyView:(id)a1;
- (long long)_animatedPresentationType;
- (id)_conversationAppearAnimation;
- (void)_enableScrolling:(BOOL)a0;
- (id)_filterTranscriptItems:(id)a0;
- (struct CGSize { double x0; double x1; })_fittingSize;
- (BOOL)_hasNoDialog;
- (void)_prepareHintForAnimation;
- (void)_reloadConversationSnippetViewsIfHint;
- (void)_resetAttributionView:(id)a0;
- (void)_resetExpansionStateForNewContent;
- (void)_setBackgroundViewsVisible:(BOOL)a0;
- (BOOL)_shouldAddVibrancyForSnippet:(id)a0;
- (BOOL)_showSpeech;
- (struct CGSize { double x0; double x1; })_sizeThatFits:(struct CGSize { double x0; double x1; })a0 forSnippet:(id)a1;
- (struct CGSize { double x0; double x1; })_sizeThatFitsAllSnippets:(struct CGSize { double x0; double x1; })a0;
- (void)_smartDialogSizeNeedsUpdatingWithAnimation:(BOOL)a0;
- (void)_updateAmbientSnippetScaling;
- (void)_updateSubviewContentInsets;
- (void)animateFadeOutWithCompletion:(id /* block */)a0;
- (void)animateForDrillIn;
- (id)animatingLayer;
- (BOOL)contentSupportsCollapsingForHeight:(double)a0;
- (void)didCompleteAnimatedFadeOut;
- (void)didReceiveAttributionView:(id)a0 height:(double)a1;
- (id)enclosedContainerView;
- (BOOL)hasSnippet;
- (void)latencyViewClosed:(id)a0;
- (BOOL)ongoingASR;
- (BOOL)onlyContainsSnippet;
- (id)parserSpeakableObjectProviderForServerUtterance:(id)a0;
- (void)prepareForDrillInAnimation;
- (void)prepareForPopAnimationOfType:(long long)a0;
- (id)prepareForUpdatesPendingCompletionBlocks;
- (void)relayout;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })serverUtteranceContentInsets;
- (void)serverUtteranceView:(id)a0 utteranceViewDidAppear:(id)a1;
- (void)serverUtteranceView:(id)a0 utteranceViewDidDisappear:(id)a1;
- (void)setShowCollapsedUI:(BOOL)a0;
- (void)setSmartDialogCard:(id)a0;
- (void)setSmartDialogPlugin:(id)a0 attribution:(id)a1;
- (void)setSpeechRecognitionHypothesisForSuggestion:(id)a0;
- (void)smartDialogSizeDidChangeWithSize:(struct CGSize { double x0; double x1; })a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })snippetContentInsets;
- (void)updateAttributionView;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })userUtteranceContentInsets;
- (void)userUtteranceView:(id)a0 didFinishEditingWithText:(id)a1 selectionResults:(id)a2 shouldStartNewRequest:(BOOL)a3;
- (void)userUtteranceView:(id)a0 speechRecognitionHypothesisDidAppear:(id)a1;
- (void)userUtteranceView:(id)a0 speechRecognitionHypothesisDidDisappear:(id)a1;
- (void)userUtteranceViewContentHeightDidUpdate:(id)a0;
- (void)userUtteranceViewTapped:(id)a0;

@end

@class NLTagger, TCTextCompositionSmartRepliesCache, TCTextCompositionSmartRepliesRateLimiter, _TtC12TextComposer25TCUserProvidedPreferences, NSDictionary, _TtC12TextComposer40TCTextCompositionCalendarEventGeneration;

@interface TCTextCompositionAssistant : NSObject {
    NLTagger *_tagger;
    TCTextCompositionSmartRepliesCache *_repliesCache;
    struct _LXLexicon { } *_activeLexicon;
    _TtC12TextComposer40TCTextCompositionCalendarEventGeneration *_calendarEventGeneration;
    TCTextCompositionSmartRepliesRateLimiter *_smartRepliesRateLimitier;
    _TtC12TextComposer25TCUserProvidedPreferences *_userProvidedPreferences;
    BOOL smartActionsFeatureFlagOverrideForTesting;
    NSDictionary *_mockDictionary;
}

+ (id)dominantLanguageForString:(id)a0;
+ (id)languageObjectWithIdentifier:(id)a0;
+ (BOOL)isCJKLanguage:(id)a0;
+ (id)sharedAssistant;
+ (BOOL)string:(id)a0 matchesLanguage:(id)a1 options:(id)a2;
+ (BOOL)useSmartActions;
+ (BOOL)_canHandleAttributedString:(id)a0 proposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 accumulateTokenCount:(unsigned long long)a2 lookBack:(BOOL)a3 tagger:(id)a4 options:(id)a5 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a6 contextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a7 resolvedPreferredLanguage:(id *)a8 error:(id *)a9;
+ (unsigned long long)_estimatedTokenCountForString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 tagger:(id)a2;
+ (id)_loadDetailedIssueTypes;
+ (unsigned long long)_maximumTokenCountForRewritingType:(id)a0;
+ (BOOL)_resolvedLanguageIsSupportedForSmartResponses:(id)a0 regionPolicy:(unsigned long long)a1 supportedLanguages:(id)a2 options:(id)a3;
+ (id)calendarEventFromModelOutput:(id)a0 input:(id)a1;
+ (int)checkString:(id)a0 forLanguagesInSet:(id)a1 numTopLanguagesToCheck:(long long)a2;
+ (unsigned long long)composedCharacterCount:(id)a0;
+ (id)detailedIssueTypes;
+ (BOOL)disableRecognizer;
+ (BOOL)dominantLanguageForStringIsSupported:(id)a0 regionPolicy:(unsigned long long)a1;
+ (unsigned long long)editDistanceBetweenStrings:(id)a0 string2:(id)a1;
+ (id)expectedCharacterContent:(id)a0;
+ (id)expectedCharacterContent:(id)a0 preferredLanguage:(id)a1;
+ (id)extendedModelIdentifier;
+ (struct _NSRange { unsigned long long x0; unsigned long long x1; })findMisspelledWordInString:(id)a0 preferredLanguage:(id)a1;
+ (BOOL)isAvailableWithUseCaseIdentifier:(id)a0;
+ (BOOL)isCJLanguage:(id)a0;
+ (BOOL)isChinese:(id)a0;
+ (BOOL)isEnglish:(id)a0;
+ (BOOL)isFrench:(id)a0;
+ (BOOL)isFrenchWithCanadaLocale:(id)a0;
+ (BOOL)isInputOutputExactMatch:(id)a0 output:(id)a1 threshold:(float)a2 stopWords:(id)a3 exemptionRegexStringList:(id)a4 alwaysAllowOneMistake:(BOOL)a5;
+ (BOOL)isInputOutputFuzzyMatch:(id)a0 output:(id)a1 threshold:(float)a2 stopWords:(id)a3 exemptionRegexStringList:(id)a4 alwaysAllowOneMistake:(BOOL)a5;
+ (BOOL)isLanguageSupported:(id)a0 regionPolicy:(unsigned long long)a1;
+ (BOOL)isStringEligibleForLID:(id)a0;
+ (BOOL)isStringInSupportedLanguage:(id)a0 contextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 numTopLanguagesToCheck:(long long)a2 preferredLanguage:(id)a3 regionPolicy:(unsigned long long)a4 allowAllCaps:(BOOL)a5 tagger:(id)a6;
+ (BOOL)isStringInSupportedLanguage:(id)a0 numTopLanguagesToCheck:(long long)a1 preferredLanguage:(id)a2 regionPolicy:(unsigned long long)a3 allowAllCaps:(BOOL)a4;
+ (BOOL)language:(id)a0 matchesPreferredLanguages:(id)a1;
+ (void)lookupTokens:(id)a0 preferredLanguage:(id)a1 options:(unsigned long long)a2 entryEnumerator:(id /* block */)a3;
+ (id)modelRunner;
+ (id)normalizedOnlyLettersComponentsForString:(id)a0;
+ (unsigned long long)regionPolicyForOptions:(id)a0;
+ (id)replaceSpecialCharacters:(id)a0;
+ (BOOL)resolvedLanguageForStringIsSupportedForSmartResponses:(id)a0 regionPolicy:(unsigned long long)a1 options:(id)a2;
+ (BOOL)resolvedLanguageIsSupportedForSmartResponses:(id)a0 options:(id)a1;
+ (id)resolvedPreferredLanguageForString:(id)a0 options:(id)a1 allowFallback:(BOOL)a2;
+ (id)resolvedPreferredLanguageForString:(id)a0 options:(id)a1 allowFallback:(BOOL)a2 supportedLanguages:(id)a3 useCachedValue:(BOOL)a4;
+ (id)resolvedPreferredLanguageForString:(id)a0 regionPolicy:(unsigned long long)a1 allowFallback:(BOOL)a2;
+ (id)resolvedPreferredLanguageForStringWithCacheOverride:(id)a0 options:(id)a1 allowFallback:(BOOL)a2;
+ (BOOL)rewritingTypeUsesSingleChunk:(id)a0;
+ (id)richSmartReplyGen;
+ (id)sharedChecker;
+ (id)sharedCheckerIfAlreadyExists;
+ (id)smartQuotesAndDashesVersionOfAttributedString:(id)a0 smartQuotes:(BOOL)a1 smartDashes:(BOOL)a2 quotesArray:(id)a3;
+ (id)supportedLanguagesWithLocalesForRegionPolicy:(unsigned long long)a0;
+ (id)supportedLanguagesWithScriptsForRegionPolicy:(unsigned long long)a0;
+ (id)tokenByNormalizingString:(id)a0;
+ (id)tokenByRemovingLeadingPunctuation:(id)a0 acceptableLeadingPunctuationMarks:(id)a1;
+ (id)tokenByRemovingTrailingPunctuation:(id)a0 acceptableTrailingPunctuationMarks:(id)a1;
+ (id)transformChineseResultString:(id)a0 originalLanguage:(id)a1 regionPolicy:(unsigned long long)a2 options:(id)a3;
+ (id)transformChineseSmartReplyAnswerOptions:(id)a0 originalLanguage:(id)a1 regionPolicy:(unsigned long long)a2;
+ (id)transformSmartReplyUserQuestionnaireEntries:(id)a0 originalString:(id)a1 regionPolicy:(unsigned long long)a2;
+ (id)transformString:(id)a0 originalString:(id)a1 regionPolicy:(unsigned long long)a2;
+ (id)transformString:(id)a0 originalString:(id)a1 regionPolicy:(unsigned long long)a2 options:(id)a3;
+ (id)userPreferredLanguageWithOptions:(id)a0;
+ (id)userPreferredLanguageWithOptions:(id)a0 supportedLanguages:(id)a1;
+ (id)userPreferredLanguagesWithOptions:(id)a0;
+ (id)userProvidedPreferences;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (unsigned long long)nextToken;
- (id)tagger;
- (void)requestCancellationForToken:(unsigned long long)a0;
- (void)requestReviewOfAttributedString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 options:(id)a2 completionHandler:(id /* block */)a3;
- (void)requestRewritingOfAttributedString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 rewritingType:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestShortFormRepliesWithContextHistory:(id)a0 documentType:(id)a1 options:(id)a2 completionHandler:(id /* block */)a3;
- (void)requestLongFormRepliesWithContextHistory:(id)a0 documentType:(id)a1 replyType:(id)a2 baseResponse:(id)a3 userFilledQuestionnaire:(id)a4 options:(id)a5 completionHandler:(id /* block */)a6;
- (void)requestBasicLongFormRepliesAndQuestionnaireWithContextHistory:(id)a0 documentType:(id)a1 replyType:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestCalendarEventFromOCRInput:(id)a0 inputOptions:(id)a1 completionHandler:(id /* block */)a2;
- (void)requestCalendarEventFromOCRInputDictionary:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestCancellationForToken:(unsigned long long)a0 cancelModelInvocations:(BOOL)a1;
- (void)requestEmojiRepliesForMessage:(id)a0 messageText:(id)a1 options:(id)a2 completionHandler:(id /* block */)a3;
- (void)requestEmojiRepliesWithContextHistory:(id)a0 documentType:(id)a1 tapbackMessageGUIDs:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestFollowUpForSmartAction:(id)a0 inputContextHistory:(id)a1 replyToMessageID:(id)a2 documentType:(id)a3 contextBeforeCursor:(id)a4 options:(id)a5 completionHandler:(id /* block */)a6;
- (void)requestLongFormRepliesWithContextHistory:(id)a0 documentType:(id)a1 replyType:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestLongFormRepliesWithContextHistory:(id)a0 documentType:(id)a1 replyType:(id)a2 userFilledQuestionnaire:(id)a3 options:(id)a4 completionHandler:(id /* block */)a5;
- (void)requestPrewarmingForFeature:(id)a0 options:(id)a1;
- (void)requestPrewarmingForInput:(id)a0 rewritingTypes:(id)a1;
- (void)requestPrewarmingForRewritingTypes:(id)a0;
- (void)requestPrewarmingForSmartReplies:(id)a0;
- (void)requestPrewarmingForSmartReplies:(id)a0 options:(id)a1;
- (void)requestReviewOutputForInput:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestRewritingOfInput:(id)a0 rewritingType:(id)a1 completionHandler:(id /* block */)a2;
- (void)requestShortFormSmartResponsesWithContextHistory:(id)a0 replyToMessageID:(id)a1 documentType:(id)a2 responseTypes:(id)a3 contextBeforeCursor:(id)a4 options:(id)a5 completionHandler:(id /* block */)a6;
- (void)requestUserQuestionnaireWithContextHistory:(id)a0 documentType:(id)a1 replyType:(id)a2 baseResponse:(id)a3 options:(id)a4 completionHandler:(id /* block */)a5;
- (void)requestUserQuestionnaireWithContextHistory:(id)a0 documentType:(id)a1 replyType:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)releaseMemory;
- (id)cancellationErrorForToken:(unsigned long long)a0;
- (BOOL)cancellationRequestedForToken:(unsigned long long)a0;
- (id)inputArrayForAttributedString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 options:(id)a2 error:(id *)a3;
- (id)stringFromString:(id)a0 byApplyingSmartQuotes:(BOOL)a1 smartDashes:(BOOL)a2 quotesArray:(id)a3;
- (id)disallowedStrings:(id)a0 outputString:(id)a1;
- (BOOL)foundBlockedAttributionInString:(id)a0 preferredLanguage:(id)a1 regionPolicy:(unsigned long long)a2;
- (BOOL)onComposeState:(id)a0;
- (id)removeUnnecessaryLeadingLetter:(id)a0;
- (id)cleanedStringForString:(id)a0 results:(id)a1;
- (BOOL)foundAllowedAttributionInString:(id)a0 preferredLanguage:(id)a1 regionPolicy:(unsigned long long)a2;
- (BOOL)_additionalPunctuationChangeDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_additionalPunctuationDeletionDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_additionalPunctuationInsertionDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_apostropheDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (id)_cancellationQueue;
- (struct __CFSet { } *)_cancellationSet;
- (BOOL)_capitalizationDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (void)_defaultDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_eligibleForSmartRepliesWith:(id)a0 inputContextHistory:(id)a1 documentType:(id)a2 regionPolicy:(unsigned long long)a3 options:(id)a4 outError:(id *)a5;
- (id)_fullPromptForShortFormRepliesMessages:(id)a0 inputContextHistory:(id)a1 outNormalizedNamesToNames:(id)a2 options:(id)a3 outError:(id *)a4;
- (id)_fullPromptForSmartAction:(id)a0 inputContextHistory:(id)a1 contextBeforeCursor:(id)a2 onComposeState:(BOOL)a3 outNormalizedNamesToNames:(id)a4 options:(id)a5 outError:(id *)a6;
- (BOOL)_furtherWordInsertionDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_homophoneDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_hyphenationDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_lexicalClassDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_matchForRetainList:(id)a0 inputText:(id)a1 outputText:(id)a2 tagger:(id)a3 preferredLanguage:(id)a4;
- (BOOL)_partialReplacementDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_phraseDeletionDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_phraseInsertionDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (id)_previousContextHistoryFor:(id)a0 replyToMessageID:(id)a1;
- (id)_sentenceRangesForString:(id)a0 preferredLanguage:(id)a1 tagger:(id)a2;
- (void)_setNeedsToReleaseMemory;
- (id)_shortFormRepliesForMailFrom:(id)a0 inputPreferences:(id)a1 options:(id)a2;
- (id)_shortFormRepliesForMessagesFrom:(id)a0 normalizedNamesToNames:(id)a1 inputContextHistory:(id)a2 preferredLanguage:(id)a3 inputPreferences:(id)a4 options:(id)a5;
- (id)_smartActionFollowUpFromModelOutput:(id)a0 smartAction:(id)a1 inputContextHistory:(id)a2 normalizedNamesToNames:(id)a3 inputPreferences:(id)a4 options:(id)a5 outError:(id *)a6;
- (BOOL)_spellingDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (id)_stringFromString:(id)a0 byApplyingResults:(id)a1;
- (id)_stripEmailSignaturesAndPlaceholders:(id)a0;
- (BOOL)_trailingPunctuationChangeDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_transpositionDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (id)_userPromptForSmartActionFollowUp:(id)a0 documentType:(id)a1 inputContextHistory:(id)a2 contextBeforeCursor:(id)a3 outNormalizedNamesToNames:(id)a4 options:(id)a5 outError:(id *)a6;
- (id)_userPromptForSmartActionIntent:(id)a0 inputContextHistory:(id)a1 contextBeforeCursor:(id)a2 options:(id)a3 outError:(id *)a4;
- (BOOL)_wordDeletionDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (BOOL)_wordInsertionDescribeDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 tagger:(id)a2 preferredLanguage:(id)a3 detail:(id)a4;
- (id)actionsCache;
- (void)addDetail:(id)a0 sentenceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 toDictionary:(id)a2;
- (BOOL)addGrammarCheckingDetailsForRewrittenString:(id)a0 originalString:(id)a1 originalAttributedString:(id)a2 originalSentenceRanges:(id)a3 tagger:(id)a4 preferredLanguage:(id)a5 writingOptions:(id)a6 retainList:(id)a7 toDictionary:(id)a8;
- (BOOL)addGrammarCheckingDetailsForRewrittenString:(id)a0 sentenceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 originalString:(id)a2 originalAttributedString:(id)a3 sentenceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a4 tagger:(id)a5 preferredLanguage:(id)a6 writingOptions:(id)a7 retainList:(id)a8 toDictionary:(id)a9;
- (id)addOrRemovePeriod:(id)a0 endRepliesInPeriod:(BOOL)a1;
- (id)addRegionPolicyFor:(id)a0 inputOptions:(id)a1;
- (BOOL)allowNonGroupChats:(id)a0;
- (BOOL)areGroupMessagesAllowed:(id)a0;
- (void)buildNormalizationDictionary:(id)a0 outNormalizedNamesToNames:(id)a1 outNamesToNormalizedNames:(id)a2 outSenderIDtoNormalizedNames:(id)a3;
- (BOOL)canHandleAttributedString:(id)a0 proposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2 contextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a3 error:(id *)a4;
- (BOOL)canHandleAttributedString:(id)a0 proposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2 error:(id *)a3;
- (BOOL)canHandleAttributedString:(id)a0 proposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 rewritingType:(id)a2 options:(id)a3 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a4 contextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a5 error:(id *)a6;
- (BOOL)canHandleAttributedString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (BOOL)canHandleAttributedString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 error:(id *)a2;
- (id)cancellationErrorIfCancellationRequestedForToken:(unsigned long long)a0;
- (id)capitalizeFirstLetter:(id)a0 locale:(id)a1;
- (id)capitalizeIncorrectlyLowercasedIForms:(id)a0;
- (int)categorizeClassificationResult:(id)a0 attributions:(id *)a1;
- (BOOL)checkLexiconForString:(id)a0 locale:(id)a1;
- (id)classificationPromptForRewritingType:(id)a0 instructions:(id)a1 input:(id)a2 output:(id)a3 options:(id)a4 needsAdditionalLanguageIdentification:(BOOL)a5 error:(id *)a6;
- (id)cleanedInput:(id)a0;
- (id)cleanedInputForInput:(id)a0;
- (id)cleanedOutputForOutput:(id)a0;
- (id)createWordSetFromText:(id)a0;
- (id)detailDictionaryForTokenDifferenceManager:(id)a0 difference:(id)a1 originalAttributedString:(id)a2 sentenceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 tagger:(id)a4 preferredLanguage:(id)a5 writingOptions:(id)a6 retainList:(id)a7;
- (BOOL)disableMailSRFiltering;
- (id)disallowedStringsWithUserPayload:(id)a0 outputString:(id)a1 preferredLanguage:(id)a2;
- (BOOL)enableAllGroupMessageReplies;
- (BOOL)endRepliesInPeriod:(id)a0 sortedMessageEntries:(id)a1;
- (id)extendedPromptForRewritingType:(id)a0 string:(id)a1 instructions:(id)a2 options:(id)a3 error:(id *)a4;
- (BOOL)fastCanLikelyHandleAttributedString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)filterSmartActionsResponseByEligibility:(id)a0 eligibility:(id)a1;
- (id)filterSmartActionsResponseWithEligibilityData:(id)a0 smartActionsResponse:(id)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })findMisspelledWordInString:(id)a0 preferredLanguage:(id)a1;
- (void)flagSmartActionEligibility:(id)a0 inputContextHistory:(id)a1 replyToMessageID:(id)a2 documentType:(id)a3 contextBeforeCursor:(id)a4 isPrecomputationRequest:(BOOL)a5 options:(id)a6 outError:(id *)a7;
- (BOOL)foundAllowedAttributionInString:(id)a0 preferredLanguage:(id)a1;
- (BOOL)foundAttributionInString:(id)a0 usingGazetteer:(id)a1 preferredLanguage:(id)a2;
- (BOOL)foundAttributionInString:(id)a0 usingGazetteer:(id)a1 preferredLanguage:(id)a2 regionPolicy:(unsigned long long)a3;
- (BOOL)foundBlockedAttributionInString:(id)a0 preferredLanguage:(id)a1;
- (BOOL)foundTag:(id)a0 inString:(id)a1 preferredLanguage:(id)a2 regionPolicy:(unsigned long long)a3 withTagger:(id)a4 usingOptions:(unsigned long long)a5;
- (id)fullPromptForExplanationOfReplacingString:(id)a0 withString:(id)a1 forDocument:(id)a2 options:(id)a3;
- (id)fullPromptForGeneratingUserQuestionnaire:(id)a0 forDocument:(id)a1 replyType:(id)a2 options:(id)a3 outError:(id *)a4;
- (id)fullPromptForLongFormReplies:(id)a0 forDocument:(id)a1 replyType:(id)a2 baseResponse:(id)a3 userFilledQuestionnaire:(id)a4 options:(id)a5 outError:(id *)a6;
- (id)fullPromptForLongFormReplies:(id)a0 forDocument:(id)a1 replyType:(id)a2 options:(id)a3 outError:(id *)a4;
- (id)fullPromptForLongFormReplies:(id)a0 forDocument:(id)a1 replyType:(id)a2 userFilledQuestionnaire:(id)a3 options:(id)a4 outError:(id *)a5;
- (id)fullPromptForReviewOfDocument:(id)a0 options:(id)a1;
- (id)fullPromptForRewritingType:(id)a0 options:(id)a1 forDocument:(id)a2 leadingContext:(id)a3 outError:(id *)a4;
- (id)fullPromptForRewritingType:(id)a0 options:(id)a1 forDocument:(id)a2 withInstructions:(id)a3 withGeneratedOutput:(id)a4 leadingContext:(id)a5 needsAdditionalLanguageIdentification:(BOOL)a6 outError:(id *)a7;
- (id)fullPromptForShortFormReplies:(id)a0 forDocument:(id)a1 replyToMessageID:(id)a2 outNormalizedNamesToNames:(id)a3 options:(id)a4 outError:(id *)a5;
- (id)fullPromptForSmartActionFollowUp:(id)a0 documentType:(id)a1 inputContextHistory:(id)a2 contextBeforeCursor:(id)a3 onComposeState:(BOOL)a4 outNormalizedNamesToNames:(id)a5 options:(id)a6 outError:(id *)a7;
- (id)fullPromptForSmartActionIntent:(id)a0 inputContextHistory:(id)a1 contextBeforeCursor:(id)a2 onComposeState:(BOOL)a3 options:(id)a4 outError:(id *)a5;
- (void)generateActionIntentWithPrompt:(id)a0 inputContextHistory:(id)a1 replyToMessageID:(id)a2 documentType:(id)a3 contextBeforeCursor:(id)a4 eligibility:(id)a5 mutableOptions:(id)a6 completionHandler:(id /* block */)a7;
- (BOOL)generateCandBarEmojis;
- (void)generateFollowUpForSmartAction:(id)a0 prompt:(id)a1 outNormalizedNamesToNames:(id)a2 inputContextHistory:(id)a3 replyToMessageID:(id)a4 documentType:(id)a5 contextBeforeCursor:(id)a6 mutableOptions:(id)a7 completionHandler:(id /* block */)a8;
- (id)getSmartActionFollowUpEligibility:(id)a0 inputContextHistory:(id)a1 replyToMessageID:(id)a2 documentType:(id)a3 contextBeforeCursor:(id)a4 isPrecomputationRequest:(BOOL)a5 options:(id)a6 outError:(id *)a7;
- (id)getSmartActionIntentEligibility:(id)a0 replyToMessageID:(id)a1 documentType:(id)a2 contextBeforeCursor:(id)a3 isPrecomputationRequest:(BOOL)a4 options:(id)a5 outError:(id *)a6;
- (BOOL)hasExclamationUsageInRecentContextHistory:(id)a0;
- (BOOL)hasOutOfVocabularyWordsFrom:(id)a0 forLocale:(id)a1 inReply:(id)a2;
- (BOOL)includeUsernameMailPrompt;
- (id)inputArrayForAttributedString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 rewritingType:(id)a2 options:(id)a3 error:(id *)a4;
- (id)inputByNormalizingParagraphBoundariesForInput:(id)a0;
- (id)inputByNormalizingParagraphBoundariesForInput:(id)a0 collapseRepeatedLineBreaks:(BOOL)a1;
- (id)inputByReplacingEmojiForInput:(id)a0;
- (id)inputNormalizedForPromptIngestionForInput:(id)a0;
- (id)inputNormalizedForPromptIngestionForInput:(id)a0 collapseRepeatedLineBreaks:(BOOL)a1;
- (BOOL)isEligibleForSmartActionsFollowUp:(id)a0 inputContextHistory:(id)a1 replyToMessageID:(id)a2 documentType:(id)a3 contextBeforeCursor:(id)a4 isPrecomputationRequest:(BOOL)a5 options:(id)a6 outError:(id *)a7;
- (BOOL)isEligibleForSmartActionsIntent:(id)a0 replyToMessageID:(id)a1 documentType:(id)a2 contextBeforeCursor:(id)a3 isPrecomputationRequest:(BOOL)a4 options:(id)a5 outError:(id *)a6;
- (BOOL)isEligibleForSmartRepliesQuestionnaire:(id)a0;
- (BOOL)isEligibleForSmartRepliesWith:(id)a0 replyToMessageID:(id)a1 documentType:(id)a2 isPrecomputationRequest:(BOOL)a3 regionPolicy:(unsigned long long)a4 options:(id)a5 outError:(id *)a6;
- (BOOL)isEligibleForUserPollsWith:(id)a0 replyToMessageID:(id)a1 documentType:(id)a2 contextBeforeCursor:(id)a3 isPrecomputationRequest:(BOOL)a4 options:(id)a5 outError:(id *)a6;
- (BOOL)isEligibleMessageSRs:(id)a0 regionPolicy:(unsigned long long)a1 inputContextHistory:(id)a2 locale:(id)a3;
- (BOOL)isFirstWordAlphabetical:(id)a0 tagger:(id)a1 inputPreferences:(id)a2;
- (BOOL)isFirstWordTitleCase:(id)a0 tagger:(id)a1 inputPreferences:(id)a2;
- (BOOL)isGroupChat:(id)a0;
- (BOOL)isInlineReplyToPreviousMessage:(id)a0 lastMessage:(id)a1;
- (BOOL)isMessageFromUser:(id)a0 inputContextHistory:(id)a1;
- (BOOL)isUserARecipient:(id)a0 lastMessage:(id)a1;
- (BOOL)isWordTitleCase:(id)a0;
- (id)longFormRepliesFromModelOutput:(id)a0 documentType:(id)a1 inputPreferences:(id)a2 options:(id)a3;
- (id)mailSnippetFromCleanedString:(id)a0 regionPolicy:(unsigned long long)a1;
- (id)matchExclamationUsage:(id)a0 hasRecentExclamationUsage:(BOOL)a1;
- (id)matchStartingCapitalization:(id)a0 userTitleCasesTexts:(BOOL)a1 inputPreferences:(id)a2;
- (id)messageEntriesAsStringArray:(id)a0;
- (id)mutableOptionsForOptions:(id)a0;
- (id)mutableOptionsForOptions:(id)a0 useCaseIdentifier:(id)a1;
- (id)mutableOptionsForOptions:(id)a0 withString:(id)a1;
- (id)nWordsInString:(id)a0 regionPolicy:(unsigned long long)a1;
- (id)normalizedMessage:(id)a0 namesToNormalizedNames:(id)a1 preferredLanguage:(id)a2;
- (id)parseReflectionOutput:(id)a0;
- (id)parseUserPollFollowUpFromJSONDict:(id)a0 normalizedNamesToNames:(id)a1;
- (void)prewarmLanguageRecognizerForOptions:(id)a0 waitUntilLoaded:(BOOL)a1;
- (id)proactiveGenerationQueue;
- (id)recentMessages:(id)a0 documentType:(id)a1;
- (id)reflectionPromptForRewritingType:(id)a0 instructions:(id)a1 input:(id)a2 output:(id)a3 options:(id)a4 needsAdditionalLanguageIdentification:(BOOL)a5 error:(id *)a6;
- (id)regionalPunctuationSpacingVersionOfString:(id)a0 preferredLanguage:(id)a1;
- (id)regionalVersionOfString:(id)a0 tagger:(id)a1 preferredLanguage:(id)a2 userPreferredLanguages:(id)a3;
- (void)releaseCheckerMemory;
- (id)replaceNormalizedNames:(id)a0 normalizedNamesToNames:(id)a1;
- (id)replacedVersionOfString:(id)a0 replacementDictionary:(id)a1;
- (id)replyTypesFromOutputString:(id)a0;
- (void)requestAdditionalDescriptionForGrammarDetail:(id)a0 fromResult:(id)a1 inAttributedString:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestEmojiRepliesWithContextHistory:(id)a0 documentType:(id)a1 replyToMessageID:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestFollowUpForSmartAction:(id)a0 inputContextHistory:(id)a1 documentType:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestModelInvocationForSmartActionFollowUpWithPrompt:(id)a0 forString:(id)a1 forAction:(id)a2 normalizedNamesToNames:(id)a3 inputContextHistory:(id)a4 token:(unsigned long long)a5 isPrecomputeRequest:(BOOL)a6 pid:(unsigned long long)a7 requestIdentifier:(id)a8 regionPolicy:(unsigned long long)a9 inputPreferences:(id)a10 completionHandler:(id /* block */)a11;
- (void)requestModelInvocationToGenerateUserQuestionnaire:(id)a0 forString:(id)a1 documentType:(id)a2 replyType:(id)a3 token:(unsigned long long)a4 pid:(unsigned long long)a5 requestIdentifier:(id)a6 regionPolicy:(unsigned long long)a7 completionHandler:(id /* block */)a8;
- (void)requestModelInvocationToGenerateUserQuestionnaireStubbed:(id)a0 documentType:(id)a1 replyType:(id)a2 completionHandler:(id /* block */)a3;
- (void)requestModelInvocationWithPrompt:(id)a0 forString:(id)a1 documentType:(id)a2 normalizedNamesToNames:(id)a3 inputContextHistory:(id)a4 token:(unsigned long long)a5 isPrecomputeRequest:(BOOL)a6 isExternalAPICall:(BOOL)a7 pid:(unsigned long long)a8 requestIdentifier:(id)a9 regionPolicy:(unsigned long long)a10 inputPreferences:(id)a11 completionHandler:(id /* block */)a12;
- (void)requestModelInvocationWithPrompt:(id)a0 forString:(id)a1 documentType:(id)a2 replyType:(id)a3 token:(unsigned long long)a4 pid:(unsigned long long)a5 requestIdentifier:(id)a6 regionPolicy:(unsigned long long)a7 inputPreferences:(id)a8 completionHandler:(id /* block */)a9;
- (void)requestModelInvocationWithPrompt:(id)a0 forString:(id)a1 documentType:(id)a2 replyType:(id)a3 userFilledQuestionnaire:(id)a4 token:(unsigned long long)a5 pid:(unsigned long long)a6 requestIdentifier:(id)a7 regionPolicy:(unsigned long long)a8 inputPreferences:(id)a9 completionHandler:(id /* block */)a10;
- (void)requestModelInvocationWithPrompt:(id)a0 forString:(id)a1 inputContextHistory:(id)a2 token:(unsigned long long)a3 isPrecomputeRequest:(BOOL)a4 pid:(unsigned long long)a5 requestIdentifier:(id)a6 regionPolicy:(unsigned long long)a7 inputPreferences:(id)a8 completionHandler:(id /* block */)a9;
- (void)requestModelInvocationWithPrompt:(id)a0 forString:(id)a1 rewritingType:(id)a2 instructions:(id)a3 userDescription:(id)a4 token:(unsigned long long)a5 seed:(unsigned long long)a6 draftSteps:(unsigned long long)a7 pid:(unsigned long long)a8 appPid:(unsigned long long)a9 requestIdentifier:(id)a10 regionPolicy:(unsigned long long)a11 completionHandler:(id /* block */)a12;
- (void)requestModelInvocationWithPrompt:(id)a0 input:(id)a1 token:(unsigned long long)a2 pid:(unsigned long long)a3 requestIdentifier:(id)a4 regionPolicy:(unsigned long long)a5 completionHandler:(id /* block */)a6;
- (void)requestModelInvocationWithPromptStubbed:(id)a0 documentType:(id)a1 completionHandler:(id /* block */)a2;
- (void)requestModelInvocationWithPromptStubbed:(id)a0 documentType:(id)a1 replyType:(id)a2 completionHandler:(id /* block */)a3;
- (void)requestModelInvocationWithPromptStubbed:(id)a0 documentType:(id)a1 replyType:(id)a2 userFilledQuestionnaire:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestOpenEndedReflectionOfInput:(id)a0 instructions:(id)a1 options:(id)a2 result:(id)a3 inputString:(id)a4 completionHandler:(id /* block */)a5;
- (void)requestOpenEndedRewritingOfInput:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestPrewarmingForSmartResponses:(id)a0 responseTypes:(id)a1;
- (void)requestPrewarmingForSmartResponsess:(id)a0 responseTypes:(id)a1 options:(id)a2;
- (void)requestProcessingOfInstructionsForInput:(id)a0 isPost:(BOOL)a1 instructions:(id)a2 options:(id)a3 result:(id)a4 inputString:(id)a5 completionHandler:(id /* block */)a6;
- (void)requestProofreadingRewritingOfInput:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestReviewOfInput:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestShortFormRepliesWithContextHistory:(id)a0 replyToMessageID:(id)a1 documentType:(id)a2 options:(id)a3 completionHandler:(id /* block */)a4;
- (void)requestSmartActionIntentWithContextHistory:(id)a0 replyToMessageID:(id)a1 documentType:(id)a2 contextBeforeCursor:(id)a3 mutableOptions:(id)a4 completionHandler:(id /* block */)a5;
- (void)requestSmartActionIntentWithContextHistory:(id)a0 withSmartReplies:(BOOL)a1 replyToMessageID:(id)a2 documentType:(id)a3 contextBeforeCursor:(id)a4 options:(id)a5 completionHandler:(id /* block */)a6;
- (id)resultOptionsForAdditionalResultOptions:(id)a0 originalResultOptions:(id)a1;
- (id)resultOptionsForReflection:(id)a0 originalResultOptions:(id)a1 reflectionCounter:(long long)a2;
- (id)resultOptionsForRewritingType:(id)a0 string:(id)a1 result:(id)a2 userFeedbackInputString:(id)a3 preferredLanguage:(id)a4 originalResultOptions:(id)a5;
- (id)retainListForOptions:(id)a0 resultOptions:(id)a1;
- (void)retrieveFollowUpForSmartAction:(id)a0 inputContextHistory:(id)a1 replyToMessageID:(id)a2 documentType:(id)a3 contextBeforeCursor:(id)a4 mutableOptions:(id)a5 completionHandler:(id /* block */)a6;
- (id)sanitizationForLongForm:(id)a0;
- (id)sanitizationListForRewritingType:(id)a0 string:(id)a1;
- (id)sanitizationListForShortFormSmartActions:(id)a0;
- (id)sanitizationListForShortFormSmartReplies:(id)a0;
- (void)setMockDictionary:(id)a0;
- (void)setSmartActionsFeatureFlagForTesting:(BOOL)a0;
- (id)shortFormRepliesFromModelOutput:(id)a0 documentType:(id)a1 normalizedNamesToNames:(id)a2 inputContextHistory:(id)a3 preferredLanguage:(id)a4 inputPreferences:(id)a5 options:(id)a6;
- (BOOL)shouldAcceptDetailForTokenDifferenceManager:(id)a0 difference:(id)a1 originalAttributedString:(id)a2 tagger:(id)a3 preferredLanguage:(id)a4 writingOptions:(id)a5 retainList:(id)a6;
- (BOOL)shouldProcessInstructionClassificationResults:(id)a0 preferredLanguage:(id)a1 regionPolicy:(unsigned long long)a2 error:(id *)a3;
- (BOOL)shouldProcessInstructions:(id)a0 rewritingType:(id)a1 options:(id)a2 error:(id *)a3;
- (BOOL)shouldProcessMessageEntryForSmartActionIntent:(id)a0;
- (BOOL)shouldProcessMessageEntryForSmartReplies:(id)a0;
- (BOOL)shouldSkipForTokenDifferenceManager:(id)a0 difference:(id)a1 preferredLanguage:(id)a2 writingOptions:(id)a3;
- (BOOL)shouldSuppressValidationWithOptions:(id)a0;
- (id)smartActionFollowUpFromModelOutput:(id)a0 smartAction:(id)a1 inputContextHistory:(id)a2 normalizedNamesToNames:(id)a3 inputPreferences:(id)a4 options:(id)a5 outError:(id *)a6;
- (id)smartActionIntentsFromModelOutput:(id)a0 inputContextHistory:(id)a1 inputPreferences:(id)a2 options:(id)a3;
- (BOOL)smartActions;
- (id)smartActionsGenerationQueue;
- (id)smartQuotesAndDashesVersionOfString:(id)a0 smartQuotes:(BOOL)a1 smartDashes:(BOOL)a2 quotesArray:(id)a3;
- (id)smartRepliesGenerationQueue;
- (id)smartResponseCallbackQueue;
- (id)spaceDeletionCorrectionDetailDictionaryForTokenDifferenceManager:(id)a0 tokenEdit:(id)a1 originalAttributedString:(id)a2 sentenceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 tagger:(id)a4 preferredLanguage:(id)a5 writingOptions:(id)a6;
- (id)spaceDoubleToSingleCorrectionDetailDictionaryForTokenDifferenceManager:(id)a0 tokenEdit:(id)a1 originalAttributedString:(id)a2 sentenceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 tagger:(id)a4 preferredLanguage:(id)a5 writingOptions:(id)a6;
- (id)spaceInsertionCorrectionDetailDictionaryForTokenDifferenceManager:(id)a0 tokenEdit:(id)a1 originalAttributedString:(id)a2 sentenceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 tagger:(id)a4 preferredLanguage:(id)a5 writingOptions:(id)a6;
- (BOOL)stringAppearsToContainURLOrPhoneNumber:(id)a0;
- (BOOL)stringHasValidLengthWords:(id)a0;
- (BOOL)stringLooksLikeJunk:(id)a0 tagger:(id)a1 preferredLanguage:(id)a2;
- (BOOL)supportedActionForFollowUpPromptGeneration:(id)a0;
- (id)textCheckingResultsForRewrittenString:(id)a0 originalString:(id)a1 originalAttributedString:(id)a2 offset:(unsigned long long)a3 preferredLanguage:(id)a4 writingOptions:(id)a5 retainList:(id)a6 error:(id *)a7;
- (id)textualRepliesFrom:(id)a0 options:(id)a1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })trimmedRangeInString:(id)a0;
- (id)trimmedReplyType:(id)a0;
- (id)updatePunctuationSpacingForFrench:(id)a0 preferredLanguage:(id)a1;
- (BOOL)useFollowUpForWritingTools;
- (BOOL)useLeadingContext;
- (BOOL)useOpenEndedPostClassifier;
- (BOOL)useOpenEndedReflection;
- (BOOL)useServerModelForConciseTone;
- (BOOL)useServerModelForFriendlyTone;
- (BOOL)useServerModelForMagicRewrite;
- (BOOL)useServerModelForProfessionalTone;
- (BOOL)useServerModelForProofreadingReview;
- (id)userFeedbackInputStringForRewritingType:(id)a0 options:(id)a1 forDocument:(id)a2 leadingContext:(id)a3;
- (BOOL)userIsPrimaryRecipientfor:(id)a0 lastMessage:(id)a1;
- (id)userNameFrom:(id)a0 lastMessage:(id)a1;
- (BOOL)userTitleCasesTexts:(id)a0 sortedMessageEntries:(id)a1 inputPreferences:(id)a2;
- (id)validMessages:(id)a0;
- (BOOL)validUserPollFollowUpJSONDict:(id)a0;
- (BOOL)validateUserFilledQuestionnaire:(id)a0;
- (id)wordsToBlockInString:(id)a0 tagger:(id)a1 preferredLanguage:(id)a2 offensiveOnly:(BOOL)a3;
- (id)wordsToPreserveInString:(id)a0 tagger:(id)a1 preferredLanguage:(id)a2;

@end

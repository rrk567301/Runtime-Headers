@class AKAppleIDServerResourceLoadDelegate, NSHTTPURLResponse, JSValue, AKAppleIDAuthenticationInAppContext, AKICAWebKitViewController, AKServerRequestConfiguration, AKAppleIDServerUIContextController, NSProgressIndicator, NSLayoutConstraint, NSString, NSImage, NSURLRequest, NSTimer, ADMChangePasswordController, NSWindow, NSView, AKWebViewButtonBar, NSTextField;
@protocol AKMBWebKitViewControllerDelegate, AKMBUIDelegate, AuthWebViewDelegate;

@interface AKAuthWebTabView : NSObject <AKICAUIDelegate, AKICAWebKitViewControllerDelegate, AuthWebViewDelegate, AKWebViewButtonBarDelegate, AKMBICAUIDelegate, AKInAssistantNavigationHandler> {
    AKICAWebKitViewController *webViewVC;
    NSURLRequest *_urlRequest;
    AKAuthWebTabView *nestedWebView;
    BOOL _isShowingNestedSheet;
    AKWebViewButtonBar *buttonBar;
    BOOL _isAddMemberCompleted;
    AKAppleIDServerResourceLoadDelegate *_resourceLoadDelegate;
    ADMChangePasswordController *mChangePasswordController;
    struct { unsigned char delegateSetWindowTitle : 1; unsigned char delegateSetWindowMessage : 1; unsigned char delegateSetPageImageIsHidden : 1; unsigned char delegateSetPageSymbol : 1; unsigned char delegateSetLeftButtonTitle : 1; unsigned char delegateSetLeftButtonEnabled : 1; unsigned char delegateSetRightButtonTitle : 1; unsigned char delegateSetRightButtonEnabled : 1; unsigned char delegateSetAlternateButtonTitle : 1; unsigned char delegateSetAlternateButtonEnabled : 1; unsigned char delegateSaveFile : 1; unsigned char delegateSaveFileWithName : 1; unsigned char delegateShowTerms : 1; unsigned char delegateAppleIDOptOut : 1; unsigned char delegateDidCancel : 1; unsigned char delegateDidDismiss : 1; unsigned char delegateDidSucceed : 1; unsigned char delegateDidFinishLoading : 1; unsigned char delegateDidFail : 1; unsigned char delegateSkipSignIn : 1; unsigned char delegateModifyURLRequest : 1; unsigned char padding : 1; } _flags;
}

@property (retain, nonatomic) NSWindow *parentWindow;
@property (retain, nonatomic) NSTimer *waitTimer;
@property (retain, nonatomic) JSValue *leftButtonCallback;
@property (retain, nonatomic) JSValue *rightButtonCallback;
@property (retain, nonatomic) JSValue *alternateButtonCallback;
@property (retain, nonatomic) NSHTTPURLResponse *latestReadResponse;
@property (retain, nonatomic) AKAppleIDServerUIContextController *serverUIContext;
@property (retain, nonatomic) AKServerRequestConfiguration *serverRequestConfiguration;
@property (copy, nonatomic) NSString *viewName;
@property (copy, nonatomic) NSString *url;
@property (copy, nonatomic) NSString *parentURL;
@property (copy, nonatomic) NSString *content;
@property (retain, nonatomic) JSValue *callback;
@property (weak, nonatomic) id<AuthWebViewDelegate> delegate;
@property (weak, nonatomic) id<AKMBUIDelegate> mbUIDelegate;
@property (weak, nonatomic) id<AKMBWebKitViewControllerDelegate> mbWebKitViewControllerDelegate;
@property (copy, nonatomic) NSString *accountID;
@property (nonatomic) unsigned long long webViewType;
@property (retain, nonatomic) NSView *webViewContainer;
@property (retain, nonatomic) NSView *containerView;
@property (retain, nonatomic) NSView *webView;
@property (retain, nonatomic) NSView *loadingView;
@property (retain, nonatomic) NSView *loadingViewCancelButton;
@property (retain, nonatomic) NSView *unavailibleView;
@property (retain, nonatomic) NSView *unavailibleViewCancelButton;
@property (retain, nonatomic) NSTextField *unavailableTextField;
@property (retain, nonatomic) NSView *addiCloudMemberViewContainer;
@property (retain, nonatomic) NSView *addiCloudMemberView;
@property (retain, nonatomic) NSProgressIndicator *loadingSpinner;
@property (retain, nonatomic) NSView *sheetContent;
@property (retain, nonatomic) NSView *buttonBarView;
@property (retain, nonatomic) NSLayoutConstraint *buttonBarHeight;
@property (retain, nonatomic) NSLayoutConstraint *buttonBarWidth;
@property (retain, nonatomic) NSWindow *sheet;
@property (nonatomic) struct CGSize { double width; double height; } contentSize;
@property (nonatomic) BOOL isButtonBarShown;
@property (nonatomic) BOOL isResizeAvailible;
@property (nonatomic) BOOL isWebClientIsReadyCalled;
@property (nonatomic) BOOL isWebClientHasLoadedCalled;
@property (copy, nonatomic) id /* block */ defaultAction;
@property (retain, nonatomic) NSImage *displayImage;
@property (nonatomic) BOOL loadContentImmediately;
@property (nonatomic) BOOL contentLoaded;
@property (retain, nonatomic) AKAppleIDAuthenticationInAppContext *context;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)touchBar;
- (void)cleanUp;
- (void)dealloc;
- (void)refreshNotification:(id)a0;
- (id)clientInfo;
- (id)init;
- (void).cxx_destruct;
- (void)endSheet:(id)a0;
- (unsigned long long)presentationType;
- (void)cancelPressed:(id)a0;
- (void)_fireWaitTimer:(id)a0;
- (void)beginModalSheet;
- (void)closeModalSheet;
- (void)OKPressed:(id)a0;
- (void)setAlternateNavButton:(id)a0 callback:(id)a1;
- (void)_createWaitTimer;
- (void)_createWaitTimerWithTimeInternval:(double)a0;
- (void)_destroyWaitTimer;
- (void)_displayAuthRightWithCallback:(id)a0;
- (BOOL)_loadRequestAgain;
- (void)_refreshPage;
- (void)alternateNavigationButtonClicked:(id)a0;
- (void)beginModalSheetWithInitialWidth:(unsigned long long)a0 initialHeight:(unsigned long long)a1 callback:(id)a2 optionalContext:(id)a3;
- (void)beginModalSheetWithInviteDict:(id)a0;
- (void)beginSheetWithContent:(id)a0 initialWidth:(unsigned long long)a1 initialHeight:(unsigned long long)a2 callback:(id)a3 optionalContext:(id)a4;
- (void)beginSheetWithURL:(id)a0 initialWidth:(unsigned long long)a1 initialHeight:(unsigned long long)a2 callback:(id)a3 optionalContext:(id)a4;
- (void)didChangetoLocation:(id)a0 toSection:(id)a1 withContext:(id)a2;
- (void)dismiss:(id)a0;
- (void)endWebView:(id)a0;
- (void)exitWebView:(id)a0;
- (void)getAuthKitDataWithResponse:(id)a0 error:(id)a1 completion:(id /* block */)a2;
- (BOOL)hasModalSheet;
- (void)icaSetButtonBar:(id)a0;
- (void)icaWebKitViewControllerDidCancel:(id)a0;
- (void)icaWebKitViewControllerDidFail:(id)a0 error:(id)a1;
- (void)icaWebKitViewControllerDidFinishLoading:(id)a0;
- (void)icaWebKitViewControllerDidReceiveResponse:(id)a0;
- (void)icaWebKitViewControllerDidSucceed:(id)a0;
- (void)icaWebKitViewControllerSheetDidEnd:(id)a0 withData:(id)a1;
- (void)icaWebKitViewControllerSignRequest:(id)a0;
- (void)icaWebKitViewHasLoaded;
- (void)icaWebKitViewIsAvailable;
- (id)initWithContent:(id)a0 andAccountID:(id)a1 parentWindow:(id)a2;
- (id)initWithName:(id)a0 andAccountID:(id)a1 parentWindow:(id)a2;
- (id)initWithServerConfiguration:(id)a0 parentWindow:(id)a1;
- (id)initWithURL:(id)a0 andAccountID:(id)a1 parentWindow:(id)a2;
- (void)leftNavigationButtonClicked:(id)a0;
- (void)loadContent;
- (void)loadFailed:(id)a0 withError:(id)a1;
- (void)obtainAuthRight:(id)a0;
- (void)refreshWithConfiguration:(id)a0;
- (void)resetCompleted:(id)a0 password:(id)a1;
- (void)resizeModalSheet:(struct CGSize { double x0; double x1; })a0;
- (void)resizeToWidth:(unsigned long long)a0 heigth:(unsigned long long)a1 callback:(id)a2;
- (void)rightNavigationButtonClicked:(id)a0;
- (void)runAppleIDOptOut:(id)a0;
- (void)saveTOS:(id)a0 content:(id)a1;
- (void)saveTOS:(id)a0 localizedName:(id)a1 content:(id)a2;
- (void)setLeftNavButton:(id)a0 callback:(id)a1;
- (void)setNavTitle:(id)a0;
- (void)setPageImageIsHidden:(BOOL)a0;
- (void)setPageSubTitle:(id)a0;
- (void)setPageSymbol:(id)a0;
- (void)setRightNavButton:(id)a0 callback:(id)a1;
- (BOOL)shouldSelectToLocation:(id)a0 toSection:(id)a1;
- (BOOL)shouldShowButtonBar:(id)a0;
- (void)showTermsAndConditions:(id)a0 callback:(id)a1;
- (void)showUnavailable:(id)a0;
- (void)sizeChangedFrom:(struct CGSize { double x0; double x1; })a0 toSize:(struct CGSize { double x0; double x1; })a1 webViewName:(id)a2 callback:(id)a3;
- (void)skipAndContinueSignIn;
- (void)skipSignIn;
- (void)triggerAKAction:(id)a0;
- (void)updateContinueButton:(BOOL)a0;
- (id)urlRequestFromInfo:(id)a0;
- (void)validateLocalPassword:(id)a0;
- (void)wasNotifiedOfDataChange:(id)a0;
- (id)webViewWindow;
- (id)webViewWithInviteDict:(id)a0;
- (id)webViewWithWorkflowDict:(id)a0;
- (void)webviewFailedWithError:(id)a0;
- (BOOL)willChangetoLocation:(id)a0 toSection:(id)a1 withContext:(id)a2;

@end

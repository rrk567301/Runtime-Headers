@class UXNavigationController, NSMapTable, NSOperationQueue, UXTransitionController, NSSearchToolbarItem, NSSplitViewItemAccessoryViewController, NSResponder, NSString, _UXInspectorViewController, _UXDetailViewController, NSViewController, UXViewController, NSArray, _UXViewControllerOneToOneTransitionContext, NSWindow, NSSplitViewItem;
@protocol UXNavigationControllerDelegate, UXSourceList, UXLayoutSupport, UXViewControllerTransitionCoordinator, UXNavigationDestination;

@interface UXSourceController : NSSplitViewController <UXNavigationControllerDelegate, _UXSplitViewItemAccessoryBarContainer, UXViewController> {
    BOOL _needsToSetInitialSourceListWidth;
    BOOL _wantsSourceListCollapsed;
    BOOL _isTogglingSidebar;
    BOOL _hasAddedInspector;
    BOOL _isTransitioning;
    _UXViewControllerOneToOneTransitionContext *_transitionCtx;
    UXTransitionController *_transitionController;
    NSMapTable *_navigationControllerByRootViewController;
    NSMapTable *_transitionControllerClassByToViewControllerClass;
    NSOperationQueue *_viewControllerOperations;
    BOOL _navigatingToDestination;
    id<UXNavigationControllerDelegate> _currentNavigationDelegate;
    id<UXLayoutSupport> _topLayoutGuide;
    id<UXLayoutSupport> _bottomLayoutGuide;
}

@property (weak, nonatomic) NSWindow *observedWindow;
@property (retain, nonatomic) UXNavigationController *observedNavigationController;
@property (retain, nonatomic) UXViewController *selectedViewController;
@property (retain, nonatomic) UXViewController *selectedNavigationTopViewController;
@property (retain, nonatomic) NSArray *selectedNavigationViewConstraints;
@property (readonly, nonatomic) _UXDetailViewController *detailViewController;
@property (readonly, nonatomic) _UXInspectorViewController *inspectorViewController;
@property (readonly, nonatomic) NSSplitViewItem *sidebarSplitViewItem;
@property (readonly, nonatomic) NSSplitViewItem *detailSplitViewItem;
@property (readonly, nonatomic) NSSplitViewItem *inspectorSplitViewItem;
@property (readonly, nonatomic) NSSplitViewItemAccessoryViewController *detailSplitViewItemTopAccessoryViewController;
@property (readonly, nonatomic) double sourceListWidth;
@property (readonly, nonatomic, getter=isSourceListAutoCollapsed) BOOL sourceListAutoCollapsed;
@property (readonly, nonatomic) NSSearchToolbarItem *searchToolbarItem;
@property (nonatomic) BOOL wantsDetachedNavigationBars;
@property (nonatomic) BOOL wantsDetachedToolbars;
@property (readonly, nonatomic) BOOL wantsSourceListHidden;
@property (readonly, nonatomic) BOOL wantsSourceListCollapsed;
@property (readonly, nonatomic, getter=isSourceListCollapsed) BOOL sourceListCollapsed;
@property (retain, nonatomic) UXViewController<UXSourceList> *sourceListViewController;
@property (copy, nonatomic) NSString *sourceListAutosaveName;
@property (readonly, nonatomic) BOOL wantsInspectorCollapsed;
@property (readonly, nonatomic) NSArray *rootViewControllers;
@property (readonly, nonatomic) UXNavigationController *selectedNavigationController;
@property (readonly, nonatomic) id<UXNavigationDestination> currentNavigationDestination;
@property (readonly, nonatomic) BOOL isNavigating;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSResponder *preferredFirstResponder;
@property (readonly, nonatomic) id<UXLayoutSupport> topLayoutGuide;
@property (readonly, nonatomic) id<UXLayoutSupport> bottomLayoutGuide;
@property (readonly, nonatomic, getter=isWindowInFullScreen) BOOL windowInFullScreen;
@property (readonly, nonatomic, getter=isWindowConsideredInFullScreen) BOOL windowConsideredInFullScreen;
@property (readonly, nonatomic) NSViewController *contentRepresentingViewController;
@property (readonly, nonatomic) id<UXViewControllerTransitionCoordinator> transitionCoordinator;

+ (Class)_defaultTransitionControllerClass;

- (BOOL)validateUserInterfaceItem:(id)a0;
- (void)viewWillDisappear;
- (void)viewDidLoad;
- (void)didMoveToParentViewController:(id)a0;
- (id)navigationController:(id)a0 animationControllerForOperation:(long long)a1 fromViewController:(id)a2 toViewController:(id)a3;
- (void)dealloc;
- (id)navigationController:(id)a0 interactionControllerForAnimationController:(id)a1;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)viewDidAppear;
- (id)navigationController;
- (void)presentViewController:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)willMoveToParentViewController:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void).cxx_destruct;
- (void)_didChangeCollapsed;
- (BOOL)acceptsFirstResponder;
- (void)toggleSidebar:(id)a0;
- (void)viewWillAppear;
- (void)dismissViewControllerAnimated:(BOOL)a0 completion:(id /* block */)a1;
- (void)windowDidRecalculateKeyViewLoop;
- (void)didChangeSelectedViewController;
- (void)invalidateIntrinsicLayoutInsets;
- (void)_addRootViewController:(id)a0;
- (void)_beginTransitionWithContext:(id)a0 operation:(long long)a1;
- (void)_configureManagedNavigationController:(id)a0;
- (id)_contextForTransitionOperation:(long long)a0 fromViewController:(id)a1 toViewController:(id)a2 transition:(unsigned long long)a3;
- (void)_detailViewWidthDidChange;
- (void)_didChangeSelectedViewControllerFromSender:(id)a0;
- (void)_didChangeToolbarVisibilityForNavigationController:(id)a0;
- (double)_leadingContentInsetForWantsCollapsed:(BOOL)a0;
- (void)_navigateToDestination:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (double)_preferredSourceListWidth;
- (void)_prepareViewController:(id)a0 forAnimationInContext:(id)a1 completion:(id /* block */)a2;
- (void)_removeDestination:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)_removeRootViewController:(id)a0;
- (id)_rootViewControllerForNavigationDestination:(id)a0;
- (void)_setLeadingContentInset:(double)a0;
- (void)_setSelectedViewController:(id)a0 animated:(BOOL)a1 sender:(id)a2;
- (void)_setWantsInspectorCollapsed:(BOOL)a0;
- (void)_setWantsSourceListCollapsed:(BOOL)a0;
- (void)_setWantsSourceListCollapsed:(BOOL)a0 wantsInspectorCollapsed:(BOOL)a1 animated:(BOOL)a2 completion:(id /* block */)a3;
- (void)_setupDelegateForNavigationController:(id)a0 operation:(long long)a1 fromViewController:(id)a2 toViewController:(id)a3;
- (void)_updateDetailSplitViewItemAccessories;
- (void)_updateInspectorViewController;
- (void)_updateSplitViewAutosaveName;
- (BOOL)_wantsInspectorCollapsedForViewController:(id)a0;
- (BOOL)_wantsSourceListCollapsedForViewController:(id)a0;
- (void)contentRepresentingViewControllerDidChange;
- (struct CGSize { double x0; double x1; })contentSizeForWantsSourceListCollapsed:(BOOL)a0;
- (void)didChangeTopViewControllerForNavigationController:(id)a0;
- (void)didUpdateLayoutGuides;
- (id)fallbackNavigationDestination;
- (id)makeRootViewControllerForDestination:(id)a0;
- (void)navigateToDestination:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)navigateToDestination:(id)a0 animated:(BOOL)a1 useFallbackDestinationIfNeeded:(BOOL)a2 completion:(id /* block */)a3;
- (void)navigationController:(id)a0 didShowViewController:(id)a1;
- (BOOL)navigationController:(id)a0 shouldBeginInteractivePopFromViewController:(id)a1 toViewController:(id)a2;
- (void)navigationController:(id)a0 willShowViewController:(id)a1;
- (void)registerTranistionControllerClass:(Class)a0 forViewControllerClass:(Class)a1;
- (void)registerTransitionControllerClass:(Class)a0 forViewControllerClass:(Class)a1;
- (void)removeDestination:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)setSelectedViewController:(id)a0 animated:(BOOL)a1;
- (void)unregisterTransitionControllerForTransitionToViewControllerClass:(Class)a0;
- (void)viewController:(id)a0 changedSourceListCollapsed:(BOOL)a1;
- (void)willAddNavigationController:(id)a0;
- (void)willChangeTopViewController:(id)a0;
- (void)willSelectViewController:(id)a0;
- (void)willUpdateToolbarForNavigationController:(id)a0;
- (void)windowDidUpdateFirstResponder;
- (void)windowWillEnterFullScreen;
- (void)windowWillExitFullScreen;
- (void)windowWillRecalculateKeyViewLoop;

@end

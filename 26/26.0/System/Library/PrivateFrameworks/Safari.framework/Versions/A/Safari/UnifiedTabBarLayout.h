@class UnifiedTabBarItem, UnifiedTabBarLayoutConfiguration, NSOrderedSet, NSSet;

@interface UnifiedTabBarLayout : NSObject {
    NSOrderedSet *_visiblePinnedTabBarItems;
    UnifiedTabBarItem *_scrollHintTabBarItem;
    unsigned long long _activeTabBarItemIndex;
    unsigned long long _numberOfScrollingPinnedTabs;
    unsigned long long _firstAdjustedUnpinnedTabIndex;
    unsigned long long _lastAdjustedUnpinnedTabIndex;
    unsigned long long _unpinnedTabIndexWithHighestZPosition;
    unsigned long long _unpinnedTabContainerIndexWithHighestZPosition;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _tabBarLayoutBounds;
    struct NSEdgeInsets { double top; double left; double bottom; double right; } _tabBarContentPadding;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _referenceTitlebarFrameForCentering;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _scrollViewFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedTabScrollingBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedActiveTabScrollingBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedInactiveTabScrollingBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedInactiveTabAdjustingBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _adjustedActiveTabFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _scrollHintTabButtonFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _draggedButtonFrame;
    struct CGPoint { double x; double y; } _mouseDragLocation;
    struct CGPoint { double x; double y; } _buttonDragAnchorPoint;
    double _slowingDistance;
    double _minimumActiveTabButtonWidth;
    double _interTabBarButtonSpacing;
    double _scrollHintVisibleWidth;
    double _unpinnedInactiveTabAdjustingDistance;
    double _minimumSmallTabBarButtonWidth;
    double _pinnedTabBarButtonWidth;
    double _pinnedTabRegionWidth;
    double _pinningDragRegionWidth;
    double _pinnedTabSeparatorLeadingOrigin;
    double _overflowPinnedTabPopUpButtonLeadingOrigin;
    double _unpinnedTabContentWidth;
    double _unpinnedTabContentOffset;
    double _extraInterTabBarButtonSpacingForActiveTab;
    double _tabBarButtonHeight;
    unsigned long long _numberOfTabsWithExtraWidth;
    long long _activeTabBehavior;
    BOOL _activeTabIsDragged;
    BOOL _activeTabTakesSpace;
    BOOL _activeTabIsVisible;
    BOOL _activeTabIsPinnedInOverflow;
    BOOL _needsOverflowButton;
    BOOL _isRTLLayout;
    BOOL _usesNarrowTabs;
    BOOL _allowsScrollingPinnedTabs;
    BOOL _draggedTabIsDetached;
    BOOL _isLayoutReady;
}

@property (readonly, copy, nonatomic) UnifiedTabBarLayoutConfiguration *configuration;
@property (readonly, nonatomic) unsigned long long numberOfTabs;
@property (readonly, nonatomic) unsigned long long numberOfPinnedTabs;
@property (readonly, nonatomic) unsigned long long numberOfUnpinnedTabs;
@property (readonly, copy, nonatomic) NSOrderedSet *arrangedTabBarItems;
@property (readonly, nonatomic) unsigned long long numberOfPinnedTabsForAccessibility;
@property (readonly, nonatomic) unsigned long long numberOfUnpinnedTabsForAccessibility;
@property (readonly, nonatomic) BOOL shouldUpdateScrollViewClipViewBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewClipViewBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewDocumentViewFrame;
@property (readonly, nonatomic) BOOL scrolls;
@property (readonly, nonatomic) double pinnedTabButtonWidth;
@property (readonly, nonatomic) BOOL shouldShowPinnedTabSeparator;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } pinnedTabSeparatorFrameInTabContainer;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } pinnedTabRegionBackdropLayerFrameInTabContainer;
@property (readonly, nonatomic) double pinnedTabSeparatorAlpha;
@property (readonly, nonatomic) double pinnedTabSeparatorZPosition;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } overflowPinnedTabPopUpButtonFrameInTabContainer;
@property (readonly, nonatomic) double overflowPinnedTabPopUpButtonZPosition;
@property (readonly, nonatomic) BOOL shouldShowOverflowPinnedTabPopUpButton;
@property (readonly, copy, nonatomic) NSOrderedSet *overflowPinnedTabBarItems;
@property (readonly, nonatomic) double activeTabBarButtonWidth;
@property (readonly, nonatomic) unsigned long long scrollHintTabIndex;
@property (readonly, nonatomic) double tabBarButtonWidth;
@property (readonly, nonatomic) long long buttonState;
@property (readonly, copy, nonatomic) NSSet *visibleTabBarItems;
@property (readonly, nonatomic) NSOrderedSet *arrangedContainerIdentifiers;
@property (readonly, nonatomic) NSSet *visibleContainerIdentifiers;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } unpinnedTabScrollingBoundsInTabContainer;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } unpinnedActiveTabScrollingBoundsInTabContainer;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } unpinnedInactiveTabScrollingBoundsInTabContainer;

+ (id)preparedLayoutWithStyle:(long long)a0 configuration:(id)a1;

- (void)prepareLayout;
- (id)initWithConfiguration:(id)a0;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedFrameForButtonAtIndex:(unsigned long long)a0;
- (double)_computePinnedTabBarButtonWidth;
- (long long)_activeButtonStateWhenPinned;
- (long long)_activeButtonStateWhenUnpinned;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedFrameForButtonWithTabBarItem:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedFrameForButtonWithTabBarItem:(id)a0 atIndex:(unsigned long long)a1;
- (void)_calculateAdjustedActiveTabMetrics;
- (void)_calculateDraggedButtonFrame;
- (void)_calculateMainTabMetrics;
- (void)_calculateOptimalTabLayout;
- (void)_calculatePinnedTabMetrics;
- (void)_calculateScrollingPinnedTabMetrics;
- (void)_calculateUnpinnedTabMetrics;
- (void)_calculateUpdatedLayoutBoundsOrigin;
- (double)_computeInterTabBarButtonSpacing;
- (double)_computeMinimumActiveTabButtonWidth;
- (double)_computeMinimumSmallTabBarButtonWidth;
- (double)_computeMinimumWidthNeededToDisplayNumberOfUnpinnedTabs:(unsigned long long)a0;
- (unsigned long long)_computeOptimalNumberOfVisiblePinnedTabs;
- (double)_computePinnedTabRegionWidthForNumberOfPinnedTabs:(unsigned long long)a0;
- (double)_computeRequiredWidthForMinimumNumberOfVisibleUnpinnedTabs;
- (double)_computeScrollableTabRegionWidth;
- (void)_computeSlowingDistance;
- (double)_computeTotalPinnedTabRegionWidthForNumberOfVisiblePinnedTabs:(unsigned long long)a0 needsOverflowButton:(BOOL)a1;
- (void)_computeVisibleContainerIdentifiers;
- (void)_computeVisibleTabBarItems;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toTabContainerFromScrollView:(BOOL)a1;
- (void)_didFailToAllocateEnoughSpaceForUnpinnedTabScrolling;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_inBoundsAdjustedFrameForButtonAtIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_inBoundsAdjustedFrameForButtonWithTabBarItem:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_scrollLayoutBoundsForButtonAtIndex:(unsigned long long)a0;
- (struct _ScrollSlowingInfo { struct _EdgeSlowingInfo { long long x0; double x1; } x0; struct _EdgeSlowingInfo { long long x0; double x1; } x1; })_scrollSlowingInfoForButtonWithTabBarItem:(id)a0 atIndex:(unsigned long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_slowedDownAdjustedFrameForButtonWithTabBarItem:(id)a0 atIndex:(unsigned long long)a1;
- (double)_titlebarCenterXInTabContainer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_unadjustedFrameForButtonAtIndex:(unsigned long long)a0;
- (BOOL)_useNextButtonFrameForTrailingButtonSeparatorAtIndex:(unsigned long long)a0;
- (BOOL)canHighlightButtonForTabBarItem:(id)a0;
- (id)containerIdentifierForTabBarItem:(id)a0;
- (unsigned long long)dragResultForDraggingLocation:(struct CGPoint { double x0; double x1; })a0 isDragToPinAllowed:(BOOL)a1 getDropIndex:(unsigned long long *)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForButtonInTabContainerForTabBarItem:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForButtonInsertedInTabContainerAtIndex:(unsigned long long)a0 isPinned:(BOOL)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForContainerWithIdentifier:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForTrailingButtonSeparatorInTabContainerForTabBarItem:(id)a0;
- (BOOL)isButtonHiddenForTabBarItem:(id)a0;
- (BOOL)isTrailingButtonSeparatorHiddenForTabBarItem:(id)a0;
- (BOOL)shouldScrollToRevealButtonForTabBarItem:(id)a0;
- (long long)stateForButtonForTabBarItem:(id)a0;
- (id)tabBarItemOfTrailingSeparatorToHideForHighlightedItemForTabBarItem:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })unadjustedFrameForButtonInTabContainerForTabBarItem:(id)a0;
- (double)unpinnedTabButtonWidth;
- (double)zPositionForButtonForTabBarItem:(id)a0;
- (double)zPositionForContainerWithIdentifier:(id)a0;
- (double)zPositionForTrailingButtonSeparatorForTabBarItem:(id)a0;

@end

@class NSStackView, UnifiedTabBarItem, LayerView, NSButton, NSImageView, NSGlassEffectView, NSImage, NSString, BackdropView, NSLayoutConstraint, UnifiedTabBarVisualEffectView, NSArray, NSView, NSTextField;
@protocol UnifiedTabBarButtonDelegate, UnifiedTabBarAccessibilityElementDelegate;

@interface UnifiedTabBarButton : NSView <NSAccessibilityRadioButton, RolloverTrackingButtonDelegate> {
    NSView *_unifiedField;
    NSView *_unifiedFieldContainerView;
    BackdropView *_backdropView;
    NSView *_filterView;
    LayerView *_backgroundView;
    NSView *_contentView;
    NSView *_iconContainerView;
    NSStackView *_stackView;
    NSImageView *_iconImageView;
    NSArray *_iconLayoutConstraints;
    NSTextField *_titleTextField;
    NSGlassEffectView *_contentGlassView;
    NSLayoutConstraint *_closeButtonLeadingConstraint;
    NSButton *_closeButton;
    UnifiedTabBarVisualEffectView *_visualEffectBackground;
    NSImageView *_visualEffectBackgroundHighlight;
    BOOL _dragging;
}

@property (weak, nonatomic) id<UnifiedTabBarButtonDelegate, UnifiedTabBarAccessibilityElementDelegate> delegate;
@property (readonly, nonatomic) long long tabBarStyle;
@property (retain, nonatomic) UnifiedTabBarItem *tabBarItem;
@property (nonatomic, getter=isActive) BOOL active;
@property (nonatomic) long long state;
@property (retain, nonatomic) NSImage *icon;
@property (retain, nonatomic) NSImage *placeholderIcon;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *activeTitle;
@property (copy, nonatomic) NSString *placeholderTitle;
@property (copy, nonatomic) NSArray *accessoryViews;
@property (copy, nonatomic) NSString *backdropGroupName;
@property (nonatomic) BOOL canShowCloseButton;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isPinned) BOOL pinned;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)titleFont;
+ (double)titleWidthForButtonWidth:(double)a0;

- (void)mouseDown:(id)a0;
- (id)accessibilityLabel;
- (void)layout;
- (id)accessibilityIdentifier;
- (id)accessibilityValue;
- (id)accessibilityTitle;
- (void)viewDidMoveToWindow;
- (id)menuForEvent:(id)a0;
- (id)_backgroundColor;
- (void)viewDidChangeEffectiveAppearance;
- (BOOL)isAccessibilityElement;
- (void).cxx_destruct;
- (BOOL)_canShowCloseButton;
- (void)_closeButtonClicked:(id)a0;
- (BOOL)_shouldShowCloseButton;
- (BOOL)acceptsFirstMouse:(id)a0;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)a0;
- (id)accessibilityChildren;
- (id)accessibilityHelp;
- (void)accessibilityPerformAction:(id)a0;
- (BOOL)accessibilityPerformPress;
- (BOOL)accessibilityPerformShowMenu;
- (id)accessibilitySubrole;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)mouseDownCanMoveWindow;
- (id)pinnedTabDragImageOfSize:(struct CGSize { double x0; double x1; })a0;
- (id)tabDragImageOfSize:(struct CGSize { double x0; double x1; })a0;
- (void)endDragging;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_backgroundFrameForButtonFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_activeTabGlassBackgroundForButtonFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (double)_backdropBorderWidth;
- (BOOL)_enabledGlassViewWidthAnimationWorkaround;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameByAdjustingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toCompensateForLackOfWidthAnimationForView:(id)a1;
- (void)_insertUnifiedFieldIfNeeded;
- (BOOL)_isDraggableButton;
- (BOOL)_keyWindowOrEditing;
- (BOOL)_pointInside:(struct CGPoint { double x0; double x1; })a0 margins:(struct CGSize { double x0; double x1; })a1;
- (void)_removeUnifiedFieldIfNeeded;
- (void)_setUpCloseButtonForState;
- (BOOL)_shouldIncludeAccessoryView:(id)a0;
- (void)_updateAccessoryViewVisibility;
- (void)_updateTitleAndIcon;
- (void)_updateViewsForState;
- (BOOL)_usesOverlappingCloseButtonForCurrentState;
- (id)_visibleAccessoryViews;
- (void)addAnimationsForChangesFromState:(long long)a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)initWithTabBarStyle:(long long)a0;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)pointInsideWithMargins:(struct CGPoint { double x0; double x1; })a0;
- (void)startDragging;
- (void)updateBackgroundAppearance;
- (void)updateCloseButtonVisibility;
- (void)updateIconAppearance;

@end

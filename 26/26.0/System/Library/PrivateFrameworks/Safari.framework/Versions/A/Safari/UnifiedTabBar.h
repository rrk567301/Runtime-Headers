@class NSMutableDictionary, UnifiedTabBarItem, NSMapTable, NSPopUpButton, TabPreviewController, UnifiedTabBarDebugView, NSScrollView, UnifiedTabBarButton, NSMutableArray, UnifiedTabBarItemList, NSString, BackdropView, NSSet, UnifiedTabBarClipView, UnifiedTabBarLayout, NSMutableSet, NSArray, NSTrackingArea, NSView, WBSDispatchSourceTimer;
@protocol UnifiedTabBarDelegate;

@interface UnifiedTabBar : NSView <MorphingDragImageControllerDragSource, TabPreviewControllerDelegate, UnifiedTabBarAccessibilityElementDelegate, UnifiedTabBarButtonDelegate, NSSpringLoadingDestination, TabDraggingDestination> {
    NSSet *_visibleTabBarItems;
    NSMapTable *_tabBarItemsToTabBarButtons;
    NSMutableSet *_visibleTabBarButtons;
    NSMutableArray *_reusableTabBarButtons;
    NSMapTable *_tabBarItemsToTabBarButtonSeparators;
    NSMutableArray *_reusableTabBarButtonSeparators;
    NSMutableDictionary *_identifiersToVisibleContainerViews;
    NSMutableArray *_reusableContainerViews;
    NSMutableSet *_removedTabBarItems;
    UnifiedTabBarLayout *_currentLayout;
    UnifiedTabBarLayout *_previousLayout;
    NSTrackingArea *_trackingArea;
    UnifiedTabBarButton *_highlightedTabBarButton;
    UnifiedTabBarItem *_fallbackActivatedTabBarItem;
    UnifiedTabBarItem *_highlightedTabBarViewItem;
    UnifiedTabBarItem *_draggedTabBarViewItem;
    UnifiedTabBarItem *_tabBarItemScrollTarget;
    UnifiedTabBarDebugView *_debugView;
    BackdropView *_backdropView;
    BackdropView *_pinnedTabRegionBackdropView;
    NSView *_tabContainer;
    NSView *_pinnedTabSeparator;
    NSPopUpButton *_pinnedTabOverflowPopUpButton;
    NSScrollView *_scrollView;
    UnifiedTabBarClipView *_clipView;
    NSView *_scrollViewDocumentView;
    TabPreviewController *_tabPreviewController;
    UnifiedTabBarButton *_draggedTabButton;
    struct CGPoint { double x; double y; } _mouseLocationForDraggedTab;
    struct CGPoint { double x; double y; } _buttonDragAnchorPoint;
    WBSDispatchSourceTimer *_accessibilityInteractionCleanUpTimer;
    UnifiedTabBarItem *_centerTabBarViewItemToPrefetch;
    NSMapTable *_prefetchedTabPreviewDataSources;
    long long _numberOfRunningAnimations;
    long long _totalAccessoryViewsInTabs;
    unsigned long long _dropIndex;
    unsigned long long _selectedVoiceOverTab;
    unsigned long long _pinningDragState;
    UnifiedTabBarItem *_dropLocationPlaceholder;
    NSSet *_draggedTabBarItems;
    NSMutableSet *_selectedTabBarItems;
    BOOL _didLayOutAfterMovingToWindow;
    BOOL _didScheduleAnimatedLayout;
    BOOL _detachTabOnInitialDrag;
    BOOL _draggedTabIsDetached;
    BOOL _hideWindowAfterDetachingAllTabs;
    BOOL _batchTabManipulationEnabled;
    BOOL _cachedOverflowIsValid;
    NSArray *_accessibilityChildren;
    NSArray *_accessibilityVisibleChildren;
    BOOL _isUpdatingAccessibilityChildren;
    unsigned long long _controlSize;
    BOOL _keepMultiSelectionForPotentialDrag;
}

@property (readonly, nonatomic) long long style;
@property (weak) id<UnifiedTabBarDelegate> delegate;
@property (copy, nonatomic) UnifiedTabBarItemList *tabBarItemList;
@property (readonly, nonatomic) UnifiedTabBarItem *activeTabBarItem;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } unpinnedTabCenteringFrame;
@property (readonly, nonatomic) BOOL isInteractivelyClosingTabs;
@property (readonly, nonatomic) BOOL inDragDropOperation;
@property (readonly, nonatomic) double widthForActiveTab;
@property (readonly, nonatomic) double tabBarButtonWidth;
@property (nonatomic) BOOL disableAnimations;
@property (nonatomic) BOOL reduceMotion;
@property (nonatomic) BOOL allowsScrollingPinnedTabs;
@property (readonly, nonatomic) BOOL isCurrentlyScrollable;
@property (readonly, nonatomic) BOOL tabsShowOnlyIcons;
@property (readonly, nonatomic) UnifiedTabBarItem *lastVisibleTabBarItem;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)endBatchTabManipulation;
- (void)beginBatchTabManipulation;
- (id)initWithStyle:(long long)a0;
- (void)viewWillMoveToWindow:(id)a0;
- (unsigned long long)controlSize;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)layout;
- (void)setControlSize:(unsigned long long)a0;
- (id)accessibilityIdentifier;
- (void)viewDidMoveToWindow;
- (void)viewDidMoveToSuperview;
- (id)accessibilityRole;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (BOOL)isAccessibilityElement;
- (void).cxx_destruct;
- (BOOL)wantsPeriodicTabDraggingUpdates;
- (BOOL)_canDetachTab;
- (void)_clipViewBoundsChanged:(id)a0;
- (unsigned long long)_dragOperationForDraggingInfo:(id)a0;
- (struct CGPoint { double x0; double x1; })_mouseLocationInDragImageForTabButton:(id)a0;
- (id)_pinnedTabDragImageForTabButton:(id)a0;
- (void)_scheduleButtonLayOutAnimated:(BOOL)a0;
- (BOOL)_shouldDetachTabForMouseEvent:(id)a0;
- (BOOL)_shouldLayOutButtonsNow;
- (id)_tabDragImageForTabButton:(id)a0;
- (void)_updateAccessibilityChildren;
- (void)_updateButtonsAndLayOutAnimated:(BOOL)a0;
- (void)_updateDropIndexWithDraggingLocation:(struct CGPoint { double x0; double x1; })a0;
- (unsigned long long)_updateDropIndexWithTabDraggingInfo:(id)a0;
- (id)accessibilityChildren;
- (id)accessibilityChildrenInNavigationOrder;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)accessibilityRoleDescription;
- (id)accessibilitySubrole;
- (id)accessibilityVisibleChildren;
- (id)dragDestinationWindowForMorphingDragImage:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (unsigned long long)draggingUpdated:(id)a0;
- (void)flagsChanged:(id)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (void)mouseMoved:(id)a0;
- (void)otherMouseUp:(id)a0;
- (BOOL)performDragOperation:(id)a0;
- (BOOL)performTabDragOperation:(id)a0;
- (void)scrollWheel:(id)a0;
- (void)springLoadingActivated:(BOOL)a0 draggingInfo:(id)a1;
- (unsigned long long)springLoadingEntered:(id)a0;
- (void)springLoadingHighlightChanged:(id)a0;
- (unsigned long long)tabDraggingEntered:(id)a0;
- (void)tabDraggingExited:(id)a0;
- (unsigned long long)tabDraggingUpdated:(id)a0;
- (BOOL)wantsPeriodicDraggingUpdates;
- (BOOL)willPinTabForTabDragOperation:(id)a0;
- (void)_narrowTabsPreferenceDidChange:(id)a0;
- (void)_didFinishReorderingTabBarItems;
- (void)_userDidScroll:(id)a0;
- (BOOL)_canMultiSelectTabButton:(id)a0;
- (void)_cleanUpAfterViewLayoutAnimated:(BOOL)a0;
- (void)_clearHighlightedTabBarButton;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_computeTitlebarMainContentLayoutFrameForCentering;
- (id)_createPinnedTabOverflowPopUpButton;
- (id)_createSeparatorView;
- (void)_detachTabAndPositionUnderCursor:(id)a0 tabButton:(id)a1 tabButtonDragImage:(id)a2 withEvent:(id)a3;
- (void)_detachTabAndPositionUnderCursor:(id)a0 withEvent:(id)a1;
- (long long)_dragResultForEventTrackingWithStartEvent:(id)a0;
- (unsigned long long)_dropIndexInFlattenedList;
- (void)_layoutButtonsAnimated:(BOOL)a0;
- (void)_miniWindowDragImageForTabButton:(id)a0 completion:(id /* block */)a1;
- (void)_overflowButtonWillPopUp:(id)a0;
- (void)_overflowMenuItemClicked:(id)a0;
- (void)_prefetchTabPreviewDataSourcesAroundTabBarViewItem:(id)a0;
- (void)_removeButtonForTabBarItem:(id)a0;
- (void)_removeTabBarButtonsForTabBarItems:(id)a0 addRemovedButtonsToSet:(id)a1 addRemovedButtonSeparatorsToSet:(id)a2 removeFromSuperview:(BOOL)a3;
- (void)_resetUnifiedFieldFirstResponderIfNeeded;
- (void)_scrollTabBarForDragResult:(unsigned long long)a0;
- (void)_scrollToShowUnifiedTabBarItem:(id)a0 evenIfAlreadyVisible:(BOOL)a1;
- (id)_selectedTabBarItems;
- (void)_setUpCurrentLayout;
- (void)_setUpPreviousLayoutForAnimationFromLayout:(id)a0 toLayout:(id)a1;
- (void)_setUpViewAnimationForLayout:(BOOL)a0;
- (BOOL)_shouldDetachTabForInitialDragWithStartEvent:(id)a0;
- (BOOL)_shouldDetachTabForMouseLocationOnScreen:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)_shouldShowCloseButtonForTabBarItem:(id)a0;
- (id)_tabBarButtonAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_tabBarItemsUpdated;
- (void)_tabBarItemsUpdatedWithAnimation:(BOOL)a0;
- (id)_tabButtonWithDraggingInfo:(id)a0;
- (id)_tabPreviewDataSourceForTabBarViewItem:(id)a0;
- (long long)_tabSelectionKindForEvent:(id)a0;
- (void)_updateAccessoryViewCountAndObserverForInsertedTabBarItem:(id)a0;
- (void)_updateAccessoryViewCountAndObserverForRemovedTabBarItem:(id)a0;
- (void)_updateButtonStates;
- (void)_updateButtonsAndLayOutAnimated:(BOOL)a0 withPreviousLayout:(id)a1;
- (void)_updateHighlightedTabBarButton;
- (void)_updateLayoutDebugViewsVisibility:(id)a0;
- (void)_updateScrollViewFrames;
- (void)_updateSeparatorVisibilityForTabBarItem:(id)a0 isHighlighted:(BOOL)a1;
- (void)_updateTabSeparators:(BOOL)a0;
- (void)_userWillStartScrolling:(id)a0;
- (void)_windowDidUpdateAppearance;
- (void)activateTabBarItem:(id)a0;
- (void)applyBackingToUnifiedFieldForUnifiedTabBarButton:(id)a0 color:(id)a1 insets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a2;
- (id)backgroundAppearanceForUnifiedTabBarButton:(id)a0;
- (id)backgroundColorForDraggingUnifiedTabBarItem:(id)a0;
- (id)backgroundColorForHighlightedUnifiedTabBarButton:(id)a0;
- (id)backgroundColorForUnifiedTabBarButton:(id)a0 vibrant:(BOOL)a1 activeTab:(BOOL)a2;
- (BOOL)browserTabIconIsMonogramForUnifiedTabBarButton:(id)a0;
- (void)clearPrefetchedDataSourcesForTabPreviewController:(id)a0;
- (id)contextMenu:(id)a0 event:(id)a1;
- (void)deselectAllMultiSelectedTabs;
- (void)deselectTabBarItemsAtIndexes:(id)a0;
- (void)dismissTabPreviewWindow;
- (id)hoveredTabPreviewDataSourceForTabPreviewController:(id)a0;
- (id)hoveredViewForTabPreviewController:(id)a0;
- (BOOL)isDraggingSessionActiveForTabPreviewController:(id)a0;
- (BOOL)isDraggingTabBarItem:(id)a0;
- (BOOL)isMouseEventOverTabBarButton:(id)a0;
- (BOOL)isPreviewAllowedForTabPreviewController:(id)a0;
- (BOOL)isTabHoveredForTabPreviewController:(id)a0;
- (void)morphingDragImage:(id)a0 didFinishTransitionAnimationForWindow:(id)a1;
- (BOOL)morphingDragImage:(id)a0 shouldDetachTabFromSourceWithPointOnScreen:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)morphingDragImageCanDetachTabFromSource:(id)a0;
- (void)morphingDragImageDidDetachTabFromSource:(id)a0;
- (void)prefetchDataSourcesForTabPreviewController:(id)a0;
- (BOOL)safari_shouldDisableAutomaticFocusRing;
- (void)scrollToUnifiedTabBarAccessibilityElement:(id)a0;
- (void)selectTabBarItems:(id)a0;
- (void)selectTabBarItemsAtIndexes:(id)a0 byExtendingSelection:(BOOL)a1;
- (void)startDraggingToReorder:(id)a0 withEvent:(id)a1;
- (void)startDraggingWindowWithEvent:(id)a0;
- (BOOL)tabPreviewController:(id)a0 isTabPreviewDataSourceForHoveredTab:(id)a1;
- (id)toolbarTitlebarColor:(id)a0;
- (void)unifiedFieldCloseTabItem:(id)a0;
- (id)unifiedFieldForUnifiedTabBarButton:(id)a0;
- (id)unifiedFieldIconForUnifiedTabBarButton:(id)a0;
- (id)unifiedTabBarAccessibilityElement:(id)a0 nextContentSibling:(BOOL)a1;
- (void)unifiedTabBarButtonActivated:(id)a0;
- (void)unifiedTabBarButtonClicked:(id)a0 withEvent:(id)a1 mouseTrackingResult:(long long)a2;
- (void)unifiedTabBarButtonClose:(id)a0;
- (BOOL)unifiedTabBarButtonIsInFrontmostWindow:(id)a0;
- (void)unifiedTabBarButtonStartDraggingWindow:(id)a0 withEvent:(id)a1;
- (void)unifiedTabBarButtonStartReordering:(id)a0 withEvent:(id)a1;
- (void)updateAccessibilityLabel;
- (void)updateFaviconInsetsAndBackingForActiveTab;
- (BOOL)useMaterialForUnifiedTabBarButton:(id)a0;
- (id)visibleTabBarItemAtIndex:(unsigned long long)a0;
- (BOOL)willChangeActiveTabForEvent:(id)a0;

@end

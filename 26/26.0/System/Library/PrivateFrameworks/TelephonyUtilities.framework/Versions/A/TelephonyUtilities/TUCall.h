@class NSDictionary, TUPodcastRecordingSession, TUCallProvider, TUCallTranslationSession, TUVideoCallAttributes, NSNotificationCenter, TUConfigurationProvider, NSString, TUSmartHoldingSession, TUCallScreenShareAttributes, NSError, TUCallRecordingSession, TUProxyCall, NSArray, TUMediaTokens, TUCallNotificationManager, NSObject, TUCallDisplayContext, NSSet, TUCallRecordingSessionBase, NSData, TUCallServicesInterface, TUHandle, TUReceptionistSession, TUCallCenter, TUCallModel, NSUUID, TUDialRequest, TUSenderIdentity, NSURL, NSDate, TUParticipant, NSNumber;
@protocol OS_dispatch_queue, TUFeatureFlags;

@interface TUCall : NSObject <NSSecureCoding>

@property (class, readonly) BOOL supportsSecureCoding;

@property (copy, nonatomic) NSString *uniqueProxyIdentifier;
@property (readonly, nonatomic) TUCallNotificationManager *callNotificationManager;
@property (readonly, nonatomic, getter=notificationCenter) NSNotificationCenter *notificationCenter;
@property (readonly, nonatomic) BOOL lockdownModeEnabled;
@property (retain, nonatomic) TUProxyCall *comparativeCall;
@property (nonatomic) int filteredOutReason;
@property (copy, nonatomic) NSString *blockedByExtension;
@property (nonatomic) BOOL supportsRecents;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (weak, nonatomic) TUCallServicesInterface *callServicesInterface;
@property (readonly, nonatomic) BOOL prefersExclusiveAccessToCellularNetwork;
@property (retain, nonatomic) TUVideoCallAttributes *videoCallAttributes;
@property (retain, nonatomic) NSDate *dateAnsweredOrDialed;
@property (retain, nonatomic) NSDate *dateSentInvitation;
@property (retain, nonatomic) NSDate *dateStartedConnecting;
@property (retain, nonatomic) NSDate *dateConnected;
@property (retain, nonatomic) NSDate *dateScreeningEnded;
@property (retain, nonatomic) NSDate *dateEnded;
@property (nonatomic) long long verificationStatus;
@property (nonatomic) long long priority;
@property (retain, nonatomic) id<TUFeatureFlags> featureFlags;
@property (copy, nonatomic) id /* block */ contactsDataSourceCreationBlock;
@property (copy, nonatomic) id /* block */ lowPowerModeEnabledBlock;
@property (retain, nonatomic) NSURL *channelImageURL;
@property (readonly, nonatomic) NSString *applicationBundleIdentifier;
@property (readonly, copy, nonatomic) NSUUID *uniqueProxyIdentifierUUID;
@property (readonly, copy, nonatomic) TUParticipant *activeRemoteParticipant;
@property (readonly, nonatomic) TUCallProvider *backingProvider;
@property (readonly, nonatomic) TUCallProvider *displayProvider;
@property (nonatomic) long long provisionalHoldStatus;
@property (copy, nonatomic) NSString *callDirectoryIdentityExtension;
@property (nonatomic) int disconnectedReason;
@property (copy, nonatomic) NSString *sourceIdentifier;
@property (readonly, nonatomic) NSURL *imageURL;
@property (copy, nonatomic) NSString *isoCountryCode;
@property (readonly, copy, nonatomic) NSString *callHistoryIdentifier;
@property (readonly, nonatomic) int callStatus;
@property (readonly, nonatomic) int resolvedCallStatus;
@property (readonly, nonatomic) long long serviceStatus;
@property (readonly, nonatomic) long long transmissionMode;
@property (readonly, nonatomic) BOOL accessoryButtonEventsEnabled;
@property (readonly, nonatomic, getter=isReceivingTransmission) BOOL receivingTransmission;
@property (readonly, nonatomic, getter=isSendingTransmission) BOOL sendingTransmission;
@property (nonatomic) int transitionStatus;
@property (nonatomic) int faceTimeIDStatus;
@property (nonatomic) BOOL hasUpdatedAudio;
@property (nonatomic) long long soundRegion;
@property (readonly, nonatomic) BOOL shouldDisplayLocationIfAvailable;
@property (readonly, nonatomic) NSString *reminderString;
@property (nonatomic, getter=isVideo) BOOL video;
@property (nonatomic) BOOL wantsHoldMusic;
@property (nonatomic, getter=isEndpointOnCurrentDevice) BOOL endpointOnCurrentDevice;
@property (nonatomic, getter=isScreening) BOOL screening;
@property (nonatomic) int receptionistState;
@property (copy, nonatomic) NSString *lastReceptionistMessage;
@property (readonly, nonatomic) TUReceptionistSession *receptionistSession;
@property (readonly, nonatomic) BOOL isReceptionistCapable;
@property (nonatomic, getter=isScreeningDueToUserInteraction) BOOL screeningDueToUserInteraction;
@property (nonatomic) BOOL wasScreened;
@property (nonatomic) BOOL screeningAnnouncementHasFinished;
@property (readonly, nonatomic, getter=isPTT) BOOL ptt;
@property (readonly, nonatomic, getter=isSOS) BOOL sos;
@property (readonly, nonatomic, getter=isRemoteUplinkMuted) BOOL remoteUplinkMuted;
@property (readonly, nonatomic) float remoteMeterLevel;
@property (readonly, nonatomic) float localMeterLevel;
@property (readonly, copy, nonatomic) NSUUID *localSenderIdentityAccountUUID;
@property (readonly, copy, nonatomic) NSUUID *localSenderIdentityUUID;
@property (readonly, copy, nonatomic) TUSenderIdentity *localSenderIdentity;
@property (nonatomic) BOOL hasEverUnsuppressedRingtone;
@property (nonatomic) BOOL shouldSuppressRingtone;
@property (nonatomic) BOOL ringtoneSuppressedRemotely;
@property (readonly, nonatomic, getter=isWiFiCall) BOOL wiFiCall;
@property (readonly, nonatomic, getter=isVoIPCall) BOOL voipCall;
@property (readonly, nonatomic) NSDictionary *providerContext;
@property (readonly, nonatomic) long long faceTimeTransportType;
@property (readonly, nonatomic) NSString *localizedHandoffRecipientDeviceCategory;
@property (readonly, nonatomic) NSNumber *handoffRecipientParticipant;
@property (readonly, nonatomic) long long providerErrorCode;
@property (readonly, nonatomic) long long providerEndedReason;
@property (readonly, nonatomic) NSDictionary *callStats;
@property (readonly, nonatomic) NSString *endedErrorString;
@property (readonly, nonatomic) NSString *endedReasonString;
@property (readonly, nonatomic, getter=isMediaStalled) BOOL mediaStalled;
@property (readonly, nonatomic, getter=isVideoDegraded) BOOL videoDegraded;
@property (readonly, nonatomic, getter=isVideoPaused) BOOL videoPaused;
@property (readonly, nonatomic, getter=isVideoMirrored) BOOL videoMirrored;
@property (readonly, nonatomic) long long videoStreamToken;
@property (nonatomic) long long answeringMachineStreamToken;
@property (readonly, nonatomic) long long inputAudioPowerSpectrumToken;
@property (readonly, nonatomic) long long outputAudioPowerSpectrumToken;
@property (readonly, copy, nonatomic) TUMediaTokens *tokens;
@property (readonly, copy, nonatomic) NSString *localMemberHandleValue;
@property (nonatomic) BOOL requiresRemoteVideo;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } remoteAspectRatio;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } remoteVideoContentRect;
@property (readonly, nonatomic) long long cameraType;
@property (readonly, nonatomic) long long remoteCameraOrientation;
@property (readonly, nonatomic) long long remoteScreenOrientation;
@property (readonly, nonatomic) struct CGSize { double width; double height; } remoteScreenAspectRatio;
@property (readonly, nonatomic) BOOL needsConversationOrVideoRelaySupport;
@property (readonly, nonatomic) BOOL needsConversationRelaySupport;
@property (readonly, nonatomic) int callRelaySupport;
@property (readonly, copy, nonatomic) NSUUID *upgradedFromCallUUID;
@property (readonly, nonatomic) BOOL isSendingAudio;
@property (nonatomic) BOOL isSendingVideo;
@property (readonly, nonatomic) BOOL isActive;
@property (nonatomic, getter=isSharingScreen) BOOL sharingScreen;
@property (nonatomic) BOOL mixesVoiceWithMedia;
@property (nonatomic) BOOL mediaPlaybackOnExternalDevice;
@property (nonatomic) BOOL prefersToPlayDuringWombat;
@property (readonly, nonatomic, getter=isThirdPartyVideo) BOOL thirdPartyVideo;
@property (readonly, copy, nonatomic) NSDictionary *endedReasonUserInfo;
@property (nonatomic) double hostCreationTime;
@property (nonatomic) double hostMessageSendTime;
@property (nonatomic) double clientMessageReceiveTime;
@property (nonatomic) BOOL wasPulledToCurrentDevice;
@property (nonatomic) int hardPauseDigitsState;
@property (copy, nonatomic) NSString *hardPauseDigits;
@property (readonly, nonatomic) NSString *hardPauseDigitsDisplayString;
@property (copy, nonatomic) TUCallModel *model;
@property (readonly, copy, nonatomic) TUCallDisplayContext *displayContext;
@property (readonly, nonatomic) BOOL shouldSuppressInCallUI;
@property (nonatomic) BOOL launchInBackground;
@property (readonly, nonatomic, getter=isMutuallyExclusiveCall) BOOL mutuallyExclusiveCall;
@property (readonly, copy, nonatomic) TUHandle *initiator;
@property (readonly, nonatomic, getter=isConversation) BOOL conversation;
@property (readonly, nonatomic) NSUUID *conversationID;
@property (readonly, copy, nonatomic) NSSet *remoteParticipantHandles;
@property (readonly, nonatomic) BOOL wantsStagingArea;
@property (nonatomic) int ttyType;
@property (readonly, nonatomic) int originatingUIType;
@property (nonatomic) long long liveVoicemailUnavailableReason;
@property (readonly, nonatomic) long long junkConfidence;
@property (readonly, nonatomic) long long identificationCategory;
@property (readonly, nonatomic, getter=isJunk) BOOL junk;
@property (readonly, nonatomic, getter=isFromSiri) BOOL fromSiri;
@property (readonly, nonatomic) BOOL isKnownCaller;
@property (readonly, nonatomic, getter=isLocalUserInHomeCountry) BOOL localUserInHomeCountry;
@property (readonly, nonatomic, getter=isAnsweringMachineAvailable) BOOL answeringMachineAvailable;
@property (readonly, nonatomic, getter=hasNondisclosedGreeting) BOOL nondisclosedGreeting;
@property (readonly, nonatomic, getter=hasIdentifiedSpamInCallerName) BOOL identifiedSpamInCallerName;
@property (nonatomic) BOOL joinedFromLink;
@property (nonatomic) long long bluetoothAudioFormat;
@property (readonly, nonatomic) TUCallScreenShareAttributes *screenShareAttributes;
@property (readonly, nonatomic) long long screenSharingIntention;
@property (readonly, nonatomic) BOOL hasBeenRedirected;
@property (readonly, nonatomic) BOOL isReRing;
@property (nonatomic) BOOL hasEmergencyVideoStream;
@property (copy, nonatomic) NSSet *emergencyMediaItems;
@property (readonly, nonatomic, getter=isNearby) BOOL nearby;
@property (readonly, nonatomic) long long nearbyMode;
@property (readonly, nonatomic, getter=isWindowedModeEnabled) BOOL windowedMode;
@property (nonatomic, getter=isFailureExpected) BOOL failureExpected;
@property (readonly, nonatomic, getter=isInternational) BOOL international;
@property (readonly, nonatomic, getter=isDomestic) BOOL domestic;
@property (nonatomic) BOOL supportsEmergencyFallback;
@property (nonatomic) BOOL supportsDTMFUpdates;
@property (readonly, nonatomic) BOOL supportsSimultaneousVoiceAndData;
@property (readonly, nonatomic) BOOL supportsScreening;
@property (readonly, nonatomic, getter=isRecordingAllowed) BOOL recordingAllowed;
@property (readonly, nonatomic) int recordingAvailability;
@property (readonly, nonatomic) TUCallRecordingSession *recordingSession;
@property (readonly, nonatomic) TUPodcastRecordingSession *podcastRecordingSession;
@property (readonly, nonatomic) TUCallRecordingSessionBase *currentRecordingSession;
@property (readonly, nonatomic, getter=isPodcastRecordingAllowed) BOOL podcastRecordingAllowed;
@property (readonly, nonatomic) TUCallTranslationSession *translationSession;
@property (readonly, nonatomic) int translationAvailability;
@property (readonly, nonatomic) TUSmartHoldingSession *smartHoldingSession;
@property (readonly) int smartHoldingAvailability;
@property (readonly) int smartHoldingHoldDetectionAvailability;
@property (readonly, nonatomic) unsigned long long smartHoldingActiveSessionCount;
@property (readonly, nonatomic, getter=wasSmartHoldingTipPresented) BOOL smartHoldingTipPresented;
@property (readonly, nonatomic) NSError *smartHoldingError;
@property (readonly, nonatomic) TUConfigurationProvider *configurationProvider;
@property (readonly, nonatomic) int commTrustScore;
@property (nonatomic) BOOL specialUnknown;
@property (retain, nonatomic) NSUUID *reminderUUID;
@property (readonly, weak, nonatomic) TUCallCenter *callCenter;
@property (readonly, copy, nonatomic) NSString *suggestedDisplayName;
@property (readonly, nonatomic) BOOL wasDeclined;
@property (readonly, nonatomic) TUCallProvider *provider;
@property (readonly, nonatomic) int service;
@property (readonly, nonatomic) int status;
@property (readonly, nonatomic) BOOL statusIsProvisional;
@property (readonly, nonatomic, getter=isHostedOnCurrentDevice) BOOL hostedOnCurrentDevice;
@property (readonly, nonatomic, getter=isEligibleForManualScreening) BOOL isEligibleForManualScreening;
@property (readonly, nonatomic, getter=isEligibleForScreening) BOOL eligibleForScreening;
@property (readonly, nonatomic) BOOL shouldPlayDTMFTone;
@property (readonly, nonatomic, getter=isRTT) BOOL rtt;
@property (readonly, nonatomic, getter=isTTY) BOOL tty;
@property (readonly, nonatomic) BOOL supportsTTYWithVoice;
@property (readonly, copy, nonatomic) NSString *audioCategory;
@property (readonly, copy, nonatomic) NSString *audioMode;
@property (readonly, nonatomic) BOOL needsManualInCallSounds;
@property (readonly, nonatomic, getter=isVoicemail) BOOL voicemail;
@property (readonly, nonatomic) BOOL isOnHold;
@property (readonly, nonatomic) NSDate *dateCreated;
@property (readonly, nonatomic) BOOL hasSentInvitation;
@property (readonly, nonatomic, getter=isConnecting) BOOL connecting;
@property (readonly, nonatomic, getter=isConnected) BOOL connected;
@property (readonly, nonatomic, getter=isOutgoing) BOOL outgoing;
@property (readonly, nonatomic, getter=isIncoming) BOOL incoming;
@property (readonly, nonatomic, getter=isBlocked) BOOL blocked;
@property (readonly, nonatomic) double startTime;
@property (readonly, copy, nonatomic) NSUUID *callGroupUUID;
@property (readonly, nonatomic, getter=isConferenced) BOOL conferenced;
@property (nonatomic, getter=isUplinkMuted) BOOL uplinkMuted;
@property (nonatomic, getter=isDownlinkMuted) BOOL downlinkMuted;
@property (nonatomic) unsigned long long screenSharingType;
@property (readonly, copy, nonatomic) NSString *destinationID;
@property (readonly, copy, nonatomic) NSString *contactIdentifier;
@property (readonly, copy, nonatomic) NSArray *contactIdentifiers;
@property (readonly, nonatomic) TUHandle *handle;
@property (readonly, nonatomic) int abUID;
@property (readonly, copy, nonatomic) NSString *callUUID;
@property (readonly, copy, nonatomic) NSString *displayName;
@property (readonly, copy, nonatomic) NSString *displayFirstName;
@property (readonly, copy, nonatomic) NSString *callDirectoryName;
@property (readonly, nonatomic) long long callDirectoryIdentityType;
@property (readonly, copy, nonatomic) NSString *companyName;
@property (readonly, copy, nonatomic) NSString *companyDepartment;
@property (readonly, copy, nonatomic) NSString *callerNameFromNetwork;
@property (readonly, copy, nonatomic) NSString *localizedLabel;
@property (readonly, nonatomic) double callDuration;
@property (readonly, copy, nonatomic) NSString *callDurationString;
@property (nonatomic) BOOL wasDialAssisted;
@property (readonly, nonatomic, getter=isEmergencyCall) BOOL emergencyCall;
@property (readonly, nonatomic, getter=isEmergency) BOOL emergency;
@property (readonly, nonatomic, getter=isUsingBaseband) BOOL usingBaseband;
@property (readonly, nonatomic) NSData *localFrequency;
@property (readonly, nonatomic) NSData *remoteFrequency;
@property (readonly, copy, nonatomic) TUDialRequest *dialRequestForRedial;
@property (readonly, nonatomic) BOOL supportsDTMFTones;
@property (nonatomic) int callSubType;
@property (readonly, nonatomic) BOOL isRecording;
@property (readonly, nonatomic) BOOL isRecordingPodcast;
@property (copy, nonatomic) id /* block */ isAppleIntelligenceEnabled;
@property (readonly, nonatomic) BOOL isSharePlayCapable;
@property (readonly, nonatomic) BOOL anyRemoteSupportsRequestToScreenShare;
@property (readonly, copy, nonatomic) NSUUID *conversationGroupUUID;

+ (id)supplementalDialTelephonyCallStringForDestination:(id)a0 isPhoneNumber:(BOOL)a1;
+ (long long)acceptableJunkConfidence;
+ (BOOL)isJunkConfidenceLevelJunk:(long long)a0;
+ (id)faceTimeSupplementalDialTelephonyCallStringIncludingFTA:(BOOL)a0;
+ (id)stringForReceptionistState:(int)a0;
+ (long long)maxJunkConfidence;
+ (id)_supplementalDialTelephonyCallStringForLocString:(id)a0 destination:(id)a1 isPhoneNumber:(BOOL)a2 includeFaceTimeAudio:(BOOL)a3;
+ (id)supplementalDialTelephonyCallString;

- (void)dealloc;
- (void)answerWithRequest:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (id)init;
- (BOOL)setMuted:(BOOL)a0;
- (id)description;
- (id)initWithNotificationCenter:(id)a0;
- (BOOL)isMuted;
- (void)hold;
- (id)initWithCoder:(id)a0;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)a0;
- (void).cxx_destruct;
- (void)disconnectWithReason:(int)a0;
- (void)ungroup;
- (void)updateWithCall:(id)a0;
- (id)errorAlertTitle;
- (struct CGSize { double x0; double x1; })localAspectRatioForOrientation:(long long)a0;
- (void)setRemoteVideoPresentationSize:(struct CGSize { double x0; double x1; })a0;
- (void)_handleStatusChange;
- (BOOL)_isEligibleForManualScreening:(BOOL)a0 languageIdentifier:(id)a1;
- (id)errorAlertMessage;
- (void)groupWithOtherCall:(id)a0;
- (BOOL)hasRelaySupport:(int)a0;
- (id)initWithCall:(id)a0;
- (id)initWithUniqueProxyIdentifier:(id)a0;
- (id)initWithUniqueProxyIdentifier:(id)a0 endpointOnCurrentDevice:(BOOL)a1;
- (id)initWithUniqueProxyIdentifier:(id)a0 endpointOnCurrentDevice:(BOOL)a1 notificationCenter:(id)a2;
- (BOOL)isCaptioningAvailable;
- (BOOL)isDialRequestVideoUpgrade:(id)a0;
- (BOOL)isEligibleForManualScreening:(id)a0;
- (BOOL)isEligibleForScreening:(id)a0;
- (BOOL)isEqualToCall:(id)a0;
- (BOOL)isSmartHoldingGASRAvailable;
- (BOOL)isVideoUpgradeFromCall:(id)a0;
- (void)playDTMFToneForKey:(unsigned char)a0;
- (void)resetProvisionalState;
- (void)resetWantsHoldMusic;
- (void)sendHardPauseDigits;
- (id)serviceDisplayString;
- (void)setIsOnHold:(BOOL)a0;
- (void)setLocalVideoLayer:(id)a0 forMode:(long long)a1;
- (void)setRemoteVideoLayer:(id)a0 forMode:(long long)a1;
- (void)setRemoteVideoPresentationState:(int)a0;
- (void)setScreenShareAttributes:(id)a0;
- (void)setSharingScreen:(BOOL)a0 attributes:(id)a1;
- (id)supplementalInCallString;
- (void)suppressRingtone;
- (void)suppressRingtoneDueToRemoteSuppression;
- (void)unhold;
- (void)updateComparativeCall;

@end

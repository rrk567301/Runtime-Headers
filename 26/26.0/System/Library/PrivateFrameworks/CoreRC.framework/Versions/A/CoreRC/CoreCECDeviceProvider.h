@class CoreCECDevice, NSObject;
@protocol OS_dispatch_queue;

@interface CoreCECDeviceProvider : CoreCECDevice {
    struct { unsigned char destination; struct CECUserControl { unsigned char command; union CECUICommandOperand { struct CECChannelIdentifier { unsigned char channelNumberFormat : 6; unsigned short majorChannelNumber : 10; unsigned short minorChannelNumber : 16; } channelIdentifier; unsigned char playMode; unsigned char broadcastType; unsigned char mediaNumber; unsigned char avInput; unsigned char audioInput; unsigned char soundPresentationControl; } operand; } control; BOOL isValid; } _userControlInitiatorState;
    struct { CoreCECDevice *sender; struct CECUserControl { unsigned char command; union CECUICommandOperand { struct CECChannelIdentifier { unsigned char channelNumberFormat : 6; unsigned short majorChannelNumber : 10; unsigned short minorChannelNumber : 16; } channelIdentifier; unsigned char playMode; unsigned char broadcastType; unsigned char mediaNumber; unsigned char avInput; unsigned char audioInput; unsigned char soundPresentationControl; } operand; } control; BOOL isValid; } _userControlFollowerState;
    struct { unsigned long long nextTransmitTimestamp; unsigned long long audioUserControlPressed; unsigned long long audioUserControlReleased; BOOL reportAudioStatusNeeded; } _userControlAudioState;
    unsigned int _userControlInitiatorRepetitionTimeoutGeneration;
    unsigned int _userControlInitiatorTrackAudioStatusTimeoutGeneration;
    unsigned int _userControlFollowerSafetyTimeoutGeneration;
}

@property (readonly, nonatomic) unsigned short deckStatusRequestMask;
@property (nonatomic) BOOL isValid;
@property (nonatomic) int systemAudioModeState;
@property (nonatomic) BOOL systemAudioModeRequestedByTV;
@property (nonatomic) BOOL systemAudioModeRequestedByOtherDevice;
@property (nonatomic) int audioReturnChannelState;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue;
@property (nonatomic) BOOL trackAudioStatusEnabled;
@property (nonatomic) long long trackAudioStatusPressTimeout;
@property (nonatomic) long long trackAudioStatusPollInterval;
@property (nonatomic) unsigned char sendFromAddress;
@property (readonly, nonatomic) BOOL activeARCAudioSystem;

+ (BOOL)supportsSecureCoding;

- (void)dealloc;
- (id)initWithDevice:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (Class)classForCoder;
- (id)serialQueue;
- (BOOL)sendMessage:(id)a0 error:(id *)a1;
- (id)initWithCoder:(id)a0;
- (BOOL)deckControlSetDeckStatus:(unsigned long long)a0 error:(id *)a1;
- (BOOL)reportFeatures:(id *)a0;
- (BOOL)setSupportedAudioFormats:(id)a0 error:(id *)a1;
- (BOOL)abortTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)activeARCAudioSystem;
- (BOOL)activeSource:(id *)a0;
- (void)arcInformDelegateOfSuccessTransitioningTo:(unsigned long long)a0;
- (void)arcInformDelegateTransitionTo:(unsigned long long)a0 failedWithError:(id)a1;
- (void)arcStarting;
- (void)arcStarting_handleFeatureAbortReceivedWithOpcode:(unsigned char)a0 reason:(unsigned char)a1;
- (void)arcStarting_handleReportARCInitiatedReceived;
- (void)arcStopping;
- (void)arcStopping_handleFeatureAbortReceivedWithOpcode:(unsigned char)a0 reason:(unsigned char)a1;
- (void)arcStopping_handleReportARCTerminatedReceived;
- (BOOL)audioReturnChannelTransitionInProgress;
- (void)audioStatusChanged;
- (void)audioStatusHandleUserControl:(struct CECUserControl { unsigned char x0; union CECUICommandOperand { struct CECChannelIdentifier { unsigned char x0 : 6; unsigned short x1 : 10; unsigned short x2 : 16; } x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; } x1; })a0 pressed:(BOOL)a1;
- (void)audioStatusHandleUserControlPressed;
- (void)audioStatusHandleUserControlReleased;
- (BOOL)audioSystemRequestSystemAudioModeStatusChangeTo:(unsigned long long)a0 error:(id *)a1;
- (void)broadcastPresence;
- (id)busProvider;
- (BOOL)cecVersion:(unsigned char)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)deckControlCommandWithMode:(unsigned long long)a0 target:(id)a1 error:(id *)a2;
- (BOOL)deckControlPlayWithMode:(unsigned long long)a0 target:(id)a1 error:(id *)a2;
- (BOOL)deckControlRefreshStatus:(id)a0 requestType:(unsigned long long)a1 error:(id *)a2;
- (BOOL)deckControlWithMode:(unsigned long long)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)deckStatusWithInfo:(unsigned long long)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)deviceRequestSystemAudioModeStatusChangeTo:(unsigned long long)a0 error:(id *)a1;
- (BOOL)deviceVendorID:(unsigned int)a0 error:(id *)a1;
- (void)didAddToBus:(id)a0;
- (void)didChangePowerStatus:(unsigned long long)a0;
- (void)didNotHandleMessage:(id)a0 unsupportedOperand:(BOOL)a1;
- (void)didReceiveMessage:(id)a0 fromDevice:(id)a1;
- (void)didRemoveFromBus:(id)a0;
- (void)dispatchAsyncLowPriority:(id /* block */)a0;
- (void)dispatchSelector:(SEL)a0;
- (void)dispatchSelector:(SEL)a0 afterDelay:(double)a1;
- (void)dispatchSelector:(SEL)a0 withObject:(id)a1;
- (void)dispatchSelector:(SEL)a0 withObject:(id)a1 afterDelay:(double)a2;
- (void)dsamStarting:(id)a0;
- (void)dsamStartingWithPhysicalAddress:(unsigned short)a0;
- (void)dsamStarting_handleBroadcastSSAMOnResponseReceived;
- (void)dsamStarting_handleBroadcastSSAMOnResponseTimeout;
- (void)dsamStopping;
- (void)dsamStopping_handleBroadcastSSAMOffResponseReceived;
- (void)dsamStopping_handleBroadcastSSAMOffResponseTimeout;
- (void)error:(id)a0 handlingMessage:(id)a1 fromDevice:(id)a2;
- (id)extendedPropertyForKey:(id)a0 error:(id *)a1;
- (BOOL)featureAbort:(unsigned char)a0 reason:(unsigned char)a1 to:(unsigned char)a2 error:(id *)a3;
- (id)filterActiveSourceMessage:(id)a0;
- (id)filterCECVersionMessage:(id)a0 toDevice:(id)a1;
- (id)filterDeckStatusMessage:(id)a0 toDevice:(id)a1;
- (id)filterDeviceVendorIDMessage:(id)a0;
- (id)filterInactiveSourceMessage:(id)a0 toDevice:(id)a1;
- (id)filterMessage:(id)a0 fromDevice:(id)a1;
- (id)filterMessage:(id)a0 toDevice:(id)a1;
- (id)filterReportFeaturesMessage:(id)a0 toDevice:(id)a1;
- (id)filterReportPhysicalAddressMessage:(id)a0;
- (id)filterReportPowerStatusMessage:(id)a0 toDevice:(id)a1;
- (id)filterRoutingChangeMessage:(id)a0;
- (id)filterRoutingInformationMessage:(id)a0;
- (id)filterSetMenuLanguageMessage:(id)a0;
- (id)filterSetOSDNameMessage:(id)a0 toDevice:(id)a1;
- (id)filterSetStreamPathMessage:(id)a0;
- (id)filterSetSystemAudioModeMessage:(id)a0 toDevice:(id)a1;
- (id)filterSystemAudioModeStatusMessage:(id)a0 toDevice:(id)a1;
- (BOOL)getCECVersionTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)getMenuLanguageTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)getRemoteControlDestination:(id *)a0 logicalAddress:(unsigned char *)a1 forTargetDevice:(id)a2 command:(unsigned char)a3 error:(id *)a4;
- (BOOL)giveAudioStatusTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)giveDeckStatusWithRequest:(unsigned char)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)giveDevicePowerStatusTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)giveDeviceVendorIDTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)giveOSDNameTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)givePhysicalAddressTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)giveSystemAudioModeStatusTo:(unsigned char)a0 error:(id *)a1;
- (void)handleActiveSourceMessage:(id)a0 fromDevice:(id)a1;
- (void)handleDeckControlMessage:(id)a0 fromDevice:(id)a1;
- (void)handleDeckControlPlayMessage:(id)a0 fromDevice:(id)a1;
- (void)handleDeviceSelected;
- (void)handleFeatureAbortMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGetCECVersionMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGetMenuLanguageMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGiveAudioStatusMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGiveDeckStatusMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGiveDevicePowerStatusMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGiveDeviceVendorIDMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGiveFeaturesMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGiveOSDNameMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGivePhysicalAddressMessage:(id)a0 fromDevice:(id)a1;
- (void)handleGiveSystemAudioModeStatusMessage:(id)a0 fromDevice:(id)a1;
- (void)handleMenuRequest:(id)a0 fromDevice:(id)a1;
- (void)handleMessage:(id)a0 fromDevice:(id)a1 broadcast:(BOOL)a2;
- (void)handleReportARCInitiatedMessage:(id)a0 fromDevice:(id)a1;
- (void)handleReportARCTerminatedMessage:(id)a0 fromDevice:(id)a1;
- (void)handleReportAudioStatusMessage:(id)a0 fromDevice:(id)a1;
- (void)handleRequestARCInitiationMessage:(id)a0 fromDevice:(id)a1;
- (void)handleRequestARCTerminationMessage:(id)a0 fromDevice:(id)a1;
- (void)handleRequestActiveSourceMessage:(id)a0 fromDevice:(id)a1;
- (void)handleRequestShortAudioDescriptorMessage:(id)a0 fromDevice:(id)a1;
- (void)handleSetAudioVolumeLevelMessage:(id)a0 fromDevice:(id)a1;
- (void)handleSetStreamPathMessage:(id)a0;
- (void)handleSetSystemAudioModeMessage:(id)a0 fromDevice:(id)a1;
- (void)handleSystemAudioModeRequestMessage:(id)a0 fromDevice:(id)a1;
- (BOOL)handleUserControl:(struct CECUserControl { unsigned char x0; union CECUICommandOperand { struct CECChannelIdentifier { unsigned char x0 : 6; unsigned short x1 : 10; unsigned short x2 : 16; } x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; } x1; })a0 pressed:(BOOL)a1 fromDevice:(id)a2 abortReason:(unsigned char *)a3;
- (void)handleUserControlPressedMessage:(id)a0 fromDevice:(id)a1;
- (void)handleUserControlReleasedMessage:(id)a0 fromDevice:(id)a1;
- (BOOL)handlingRequiredForAudioReturnChannelMessage:(id)a0;
- (BOOL)handlingRequiredForSystemAudioModeMessage:(id)a0;
- (void)hibernationChanged:(BOOL)a0;
- (BOOL)imageViewOnTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)inactiveSourceTo:(unsigned char)a0 error:(id *)a1;
- (id)initWithBus:(id)a0 local:(BOOL)a1;
- (BOOL)initiateARC:(unsigned char)a0 error:(id *)a1;
- (BOOL)initiatorAddressErrorDetectedForMessage:(id)a0;
- (BOOL)makeActiveSourceWithTVMenus:(BOOL)a0 error:(id *)a1;
- (BOOL)menuStatus:(unsigned char)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)oneTouchPlayWithMenu:(BOOL)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)performStandbyWithTargetDevice:(id)a0 error:(id *)a1;
- (BOOL)playWithMode:(unsigned long long)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)pollTo:(unsigned char)a0 error:(id *)a1;
- (void)probeAbsoluteVolumeControl_handleFeatureAbortReceivedFromDevice:(id)a0 withOpcode:(unsigned char)a1 reason:(unsigned char)a2;
- (void)receivedSetAudioVolumeLevel:(unsigned char)a0 fromDevice:(id)a1;
- (void)refreshActiveSource;
- (BOOL)refreshProperties:(id)a0 ofDevice:(id)a1 error:(id *)a2;
- (void)refreshSystemAudioModeStatus;
- (BOOL)reportAudioStatusTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)reportPhysicalAddress:(id *)a0;
- (BOOL)reportPowerStatus:(unsigned char)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)reportShortAudioDescriptorTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)requestActiveSource:(id *)a0;
- (BOOL)requestAudioReturnChannelStatusChangeTo:(unsigned long long)a0 error:(id *)a1;
- (BOOL)requestAudioStatus:(id *)a0;
- (BOOL)requestShortAudioDescriptor:(unsigned char)a0 error:(id *)a1;
- (BOOL)requestSystemAudioModeStatusChangeTo:(unsigned long long)a0 error:(id *)a1;
- (void)resetAudioStatusState;
- (BOOL)resignActiveSource:(id *)a0;
- (BOOL)routingChangeOriginalAddress:(unsigned short)a0 newAddress:(unsigned short)a1 error:(id *)a2;
- (BOOL)routingInformationPhysicalAddress:(unsigned short)a0 error:(id *)a1;
- (void)samInformDelegateOfSuccessTransitioningTo:(unsigned long long)a0;
- (void)samInformDelegateTransitionTo:(unsigned long long)a0 failedWithError:(id)a1;
- (void)samResetStateToOff;
- (void)samStarting;
- (void)samStarting_broadcast_Req_Act_Src;
- (void)samStarting_broadcast_SSAM_ON;
- (void)samStarting_handleActiveSourceReceived;
- (void)samStarting_handleActiveSourceResponseTimeout;
- (void)samStarting_handleFeatureAbortReceived;
- (void)samStarting_handleFeatureAbortResponseTimeout;
- (void)samStarting_send_SSAM_ON_to_TV;
- (void)samStopping;
- (void)scheduleReportAudioStatus;
- (BOOL)sendActiveSourceStatus:(BOOL)a0 error:(id *)a1;
- (void)sendDeckStatusToDevice:(id)a0;
- (void)sendFeatureAbort:(unsigned char)a0 forMessage:(id)a1;
- (BOOL)sendHIDEvent:(id)a0 target:(id)a1 error:(id *)a2;
- (BOOL)sendMessage:(id)a0 withRetryCount:(unsigned char)a1 error:(id *)a2;
- (void)sendReportAudioStatus;
- (BOOL)setAudioMuteStatus:(BOOL)a0 error:(id *)a1;
- (BOOL)setAudioReturnChannelControlEnabled:(BOOL)a0 error:(id *)a1;
- (BOOL)setAudioVolumeStatus:(unsigned long long)a0 error:(id *)a1;
- (BOOL)setExtendedProperty:(id)a0 forKey:(id)a1 error:(id *)a2;
- (BOOL)setMenuLanguage:(struct CECLanguage { unsigned char x0[3]; })a0 error:(id *)a1;
- (BOOL)setOSDName:(struct CECOSDName { unsigned char x0; unsigned char x1[14]; })a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)setStreamPathPhysicalAddress:(unsigned short)a0 error:(id *)a1;
- (BOOL)setSystemAudioControlEnabled:(BOOL)a0 error:(id *)a1;
- (BOOL)setSystemAudioMode:(unsigned long long)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)setTrackAudioStatusEnabled:(BOOL)a0 pressTimeout:(long long)a1 pollInterval:(long long)a2 error:(id *)a3;
- (BOOL)standbyTo:(unsigned char)a0 error:(id *)a1;
- (BOOL)systemAudioModeRequest:(unsigned long long)a0 error:(id *)a1;
- (BOOL)systemAudioModeRequestWithPhysicalAddress:(unsigned short)a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)systemAudioModeStatus:(unsigned char)a0 error:(id *)a1;
- (BOOL)systemAudioModeTransitionInProgress;
- (BOOL)terminateARC:(unsigned char)a0 error:(id *)a1;
- (BOOL)textViewOnTo:(unsigned char)a0 error:(id *)a1;
- (void)trackMessage:(id)a0 fromDevice:(id)a1;
- (void)trackMessage:(id)a0 toDevice:(id)a1;
- (void)userControlCancelFollowerSafetyTimeout;
- (void)userControlCancelInitiatorRepetitionTimeout;
- (void)userControlCancelInitiatorTrackAudioStatusTimeout;
- (void)userControlFollowerSafetyTimeoutExpired;
- (void)userControlFollowerSynthesizeRelease;
- (void)userControlInitiatorRepetitionTimeoutExpired;
- (void)userControlInitiatorTrackAudioStatusTimeoutExpired;
- (BOOL)userControlPressed:(struct CECUserControl { unsigned char x0; union CECUICommandOperand { struct CECChannelIdentifier { unsigned char x0 : 6; unsigned short x1 : 10; unsigned short x2 : 16; } x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; } x1; })a0 to:(unsigned char)a1 error:(id *)a2;
- (BOOL)userControlReleasedTo:(unsigned char)a0 error:(id *)a1;
- (void)userControlScheduleFollowerSafetyTimeout;
- (void)userControlScheduleInitiatorRepetitionTimeout;
- (void)userControlScheduleInitiatorTrackAudioStatusTimeout;
- (void)willRemoveFromBus:(id)a0;

@end

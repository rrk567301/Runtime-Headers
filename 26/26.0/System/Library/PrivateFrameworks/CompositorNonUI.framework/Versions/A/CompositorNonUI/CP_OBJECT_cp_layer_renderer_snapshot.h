@interface CP_OBJECT_cp_layer_renderer_snapshot : NSObject {
    struct { long long enable_adaptive_registration; long long warp_algorithm; struct RTMCAMS8UMetadata { unsigned int stride; unsigned int offset; } mcam_s8u_metadata; struct WBDisplayTapRenderedProperties { struct RTSize { unsigned int width; unsigned int height; } resolution; struct RTFovInDegrees { float h_min; float h_max; float v_min; float v_max; } field_of_view; float extra_rendered_fov_degree; } display_tap_properties; BOOL has_separate_composite_pass; struct WBHMDChannelLastVsyncData { struct RTVSync { unsigned long long id; unsigned long long system_id; struct abs_time_t { unsigned long long mabs; } suspending_time; struct continuous_time_t { unsigned long long mct; } continuous_time; struct mach_duration_t { long long value; } duration; } known_vsync; unsigned long long frame_repeat_count; BOOL should_render; BOOL enable_frame_phase_alignment; BOOL allows_capture_protected_content; double target_vsync_to_presentation_time_offset_in_seconds; double target_vsync_to_mcam_time_offset_in_seconds; struct WBHMDContentModeTransition { unsigned char mode; struct abs_time_t { unsigned long long mabs; } completion_time; } content_mode; struct WBHMDPassthroughClampingPlanes { struct { void /* unknown type, empty encoding */ origin; void /* unknown type, empty encoding */ normal; } eye[2]; } clamping_planes; long long adaptive_registration_mode; } last_vsync_data; double display_compositor_overhead; struct mach_duration_t { long long value; } display_compositor_overhead_mach; struct WBDCalibrationData { void /* unknown type, empty encoding */ tangents[2]; struct { void /* unknown type, empty encoding */ columns[4]; } render_to_device_transform[2]; struct { void /* unknown type, empty encoding */ columns[4]; } device_to_render_transform[2]; struct { void /* unknown type, empty encoding */ columns[4]; } adaptive_registration_render_to_device_rub_transform[2]; struct { void /* unknown type, empty encoding */ columns[4]; } adaptive_registration_homography[2]; struct { void /* unknown type, empty encoding */ columns[4]; } device_to_disp_transform[2]; struct { void /* unknown type, empty encoding */ columns[4]; } disp_to_device_transform[2]; struct { void /* unknown type, empty encoding */ tangents[2]; struct { void /* unknown type, empty encoding */ columns[4]; } render_to_device_rub_transform[2]; int composited_eye_index; BOOL is_stereo; } recorder; } calibration; struct cp_time { unsigned long long cp_mach_abs_time; } generation_time; struct cp_duration { long long duration_mach_abs_time; } last_client_to_server_latency; struct cp_domain_time { unsigned long long domain_time; } last_vsync_suspending_time; } _data;
}

- (id)initPrivate;

@end

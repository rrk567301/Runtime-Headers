@class TMIOKitDisk, NSArray, NSString, TMOtherIODisk, NSURL, NSNumber;
@protocol TMAttrListDisk;

@interface TMDisk : NSObject

@property (readonly) TMDisk *liveDisk;
@property (readonly) NSArray *mountedDisksInVolumeGroup;
@property (readonly, copy) NSString *deviceNode;
@property (readonly) id<TMAttrListDisk> attrInfo;
@property (readonly) TMIOKitDisk *ioInfo;
@property (readonly) TMOtherIODisk *otherIOInfo;
@property (readonly) unsigned long long traits;
@property (readonly) NSURL *mountPointURL;
@property (readonly) NSString *mountPoint;
@property (readonly) NSString *devicePath;
@property (readonly) struct fsid { int x0[2]; } fsid;
@property (readonly) int device;
@property (readonly) NSString *filesystemTypeName;
@property (readonly) NSNumber *capacity;
@property (readonly) NSString *volumeUUID;
@property (readonly) NSString *volumeName;
@property (readonly) NSString *userVisibleVolumeName;
@property (readonly) unsigned long long mediumType;
@property (readonly) NSNumber *bytesUsed;
@property (readonly) NSNumber *bytesFree;
@property (readonly) NSNumber *quota;
@property (readonly) NSNumber *maximumVolumeSize;
@property (readonly) NSString *apfsVolumeGroupUUID;
@property (readonly) NSNumber *apfsVolumeRole;
@property (readonly) NSString *apfsSnapshotName;
@property (readonly) unsigned long long apfsSnapshotXID;
@property (readonly) NSString *liveDiskDevice;
@property (readonly) BOOL eligibleForBackup;
@property (readonly) BOOL includedByDefault;
@property (readonly) BOOL backedByDiskImage;
@property (readonly) BOOL isAppleBootPartition;
@property (readonly) BOOL supportsBackupStores;
@property (readonly) BOOL supportsBackupDiskImages;
@property (readonly) BOOL hasRecoveryRole;
@property (readonly) BOOL isCaseSensitive;
@property (readonly) BOOL mountedTargetDiskMode;
@property (readonly) BOOL supportsProtectedFiles;
@property (readonly) BOOL isROSPSystemVolume;
@property (readonly) BOOL isROSPDataVolume;
@property (readonly) BOOL hasBackupVolumeRole;
@property (readonly) BOOL isInternalDevice;
@property (readonly) BOOL isFullDiskEncrypted;
@property (readonly) BOOL isStartupDisk;
@property (readonly) BOOL isInStartupVolumeGroup;
@property (readonly) BOOL mountedLocally;
@property (readonly) BOOL mountedVisibly;
@property (readonly) BOOL userVisibleVolume;
@property (readonly) BOOL mountedReadOnly;
@property (readonly) BOOL isJournaled;
@property (readonly) BOOL ignoringOwnership;
@property (readonly) BOOL isBackupVolume;
@property (readonly) BOOL isAPFS;
@property (readonly) BOOL isHFSExtended;
@property (readonly) BOOL isHFS;
@property (readonly) BOOL isXSAN;
@property (readonly) BOOL isEXFAT;
@property (readonly) BOOL isFAT;
@property (readonly) BOOL isNTFS;
@property (readonly) BOOL isSMB;
@property (readonly) BOOL isAFP;
@property (readonly) BOOL isWindows;
@property (readonly) BOOL isAPFSSnapshot;

+ (id)diskForMountPoint:(id)a0 error:(id *)a1;
+ (BOOL)shouldPresentSetupOfferForDisk:(id)a0;
+ (void)_logTraitsPreventingSetupOffer:(unsigned long long)a0 mountPoint:(id)a1;
+ (id)bootedROSPDataVolume;
+ (id)bootedROSPSystemVolume;
+ (id)dataDiskForVolumeGroupUUID:(id)a0;
+ (id)diskForMountPoint:(id)a0;
+ (id)diskForVolumeUUID:(id)a0;
+ (id)diskForVolumeUUID:(id)a0 error:(id *)a1;
+ (id)disksWithAPFSSnapshots;
+ (void)enumerateMountedDisksUsingBlock:(id /* block */)a0;
+ (id)systemDiskForVolumeGroupUUID:(id)a0;

- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)a0;
- (void).cxx_destruct;
- (id)quotaGB;
- (BOOL)makeDatalessAPFSSnapshot:(id)a0 error:(id *)a1;
- (id)calculateBytesUsedByAllSnapshots:(id *)a0;
- (id)calculateLiveVolumeBytesUsed;
- (id)calculateVolumeBytesUsedIncludingSnapshots;
- (BOOL)configureNetworkVolumeOptionsAndDisablePrimaryReconnect:(BOOL)a0;
- (BOOL)configureReconnectTimeoutsDisablePrimaryReconnect:(BOOL)a0 disableNetworkQoS:(BOOL)a1;
- (BOOL)createAPFSSnapshot:(id)a0 error:(id *)a1;
- (BOOL)deleteAPFSSnapshot:(id)a0 error:(id *)a1;
- (id)initWithAttrInfo:(id)a0 error:(id *)a1;
- (id)initWithAttrInfo:(id)a0 ioInfo:(id)a1 otherIOInfo:(id)a2;
- (id)initWithMountPoint:(id)a0 error:(id *)a1;
- (id)initWithMountPointPath:(id)a0 error:(id *)a1;
- (BOOL)mountAPFSSnapshot:(id)a0 atMountPoint:(id)a1 error:(id *)a2;
- (BOOL)renameAPFSSnapshot:(id)a0 to:(id)a1 error:(id *)a2;
- (id)settingIgnoreOwnership:(BOOL)a0;
- (id)settingQuota:(id)a0 error:(id *)a1;
- (id)settingQuotaGB:(id)a0 error:(id *)a1;
- (BOOL)waitForSnapshotDeletionUntil:(id)a0 error:(id *)a1;

@end

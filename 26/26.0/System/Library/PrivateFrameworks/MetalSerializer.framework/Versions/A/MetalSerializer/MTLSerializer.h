@class NSObject;
@protocol OS_dispatch_queue, MTLDevice, MTLSerializerObjectRefAllocator;

@interface MTLSerializer : NSObject {
    id<MTLDevice> _device;
    NSObject<OS_dispatch_queue> *_serialQueue;
    id<MTLSerializerObjectRefAllocator> _objectIndex;
    void *_commandBufferIndex;
    void *_eventNotifications;
    struct MTLSerializerFeatures { BOOL supportsGenerateResourceRefs; BOOL supportsReflectionSerializationVersion; BOOL supportsSharedTextures; BOOL supportsScripts; BOOL supportsOpenGL; BOOL supportsIOSurfaceTextureWithRotation; BOOL supportsCorrectBaseVertex; BOOL supportsCorrectSwizzleChannels; } _features;
}

@property (readonly, nonatomic) BOOL deserializerGeneratesResourceRefs;
@property unsigned long long reflectionSerializationVersion;
@property (readonly) BOOL supportsOpenGL;
@property (readonly) BOOL supportsCorrectBaseVertex;

- (unsigned int)newSharedTextureWithHandle:(id)a0;
- (void)dealloc;
- (id)initWithDevice:(id)a0;
- (id)newDepthStencilStateWithDescriptor:(id)a0;
- (id)newSamplerStateWithDescriptor:(id)a0;
- (id)newTextureWithDescriptor:(id)a0;
- (id)didModifyRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 buffer:(id)a1;
- (void)releaseComputePipelineStateRef:(unsigned int)a0;
- (void)argumentEncoderSetSamplerStates:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 encoderRef:(unsigned int)a2 allocator:(id)a3;
- (void)releaseArgumentBufferLayoutRef:(unsigned int)a0;
- (void)releaseHeapRef:(unsigned int)a0;
- (void)argumentBufferLayoutConstantAtIndex:(unsigned long long)a0 layoutRef:(unsigned int)a1 allocator:(id)a2;
- (void)argumentEncoderConstantAtIndex:(unsigned long long)a0 encoderRef:(unsigned int)a1 bufferRef:(unsigned int)a2 allocator:(id)a3;
- (void)argumentEncoderSetArgumentBuffer:(id)a0 offset:(unsigned long long)a1 encoderRef:(unsigned int)a2 allocator:(id)a3;
- (void)argumentEncoderSetBuffers:(const id *)a0 offsets:(const unsigned long long *)a1 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 encoderRef:(unsigned int)a3 allocator:(id)a4;
- (void)argumentEncoderSetTextures:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 encoderRef:(unsigned int)a2 allocator:(id)a3;
- (void)bufferGPUAddress:(id)a0 allocator:(id)a1;
- (unsigned int)computePipelineWithReplyData:(const void *)a0 replyDataSize:(unsigned long long)a1 pipelineInfo:(struct { unsigned short x0; unsigned int x1; unsigned long long x2; } *)a2 errorMessage:(id *)a3;
- (void)copyImageBytesFromSource:(char *)a0 toDestination:(char *)a1 dataSize:(unsigned long long)a2 region:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a3 bytesPerRow:(unsigned long long)a4 bytesPerImage:(unsigned long long)a5 mipmapLevel:(unsigned long long)a6 slice:(unsigned long long)a7 texture:(id)a8;
- (unsigned long long)dataSizeForRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a0 pixelFormat:(unsigned long long)a1 bytesPerRow:(unsigned long long)a2 bytesPerImage:(unsigned long long)a3;
- (void)deleteArgumentBufferLayoutRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteArgumentEncoderRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteBufferRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteCommandQueueRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteComputePipelineStateRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteDepthStencilStateRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteEventRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteFenceRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteFunctionRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteHeapRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteRenderPipelineStateRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteSamplerStateRef:(unsigned int)a0 allocator:(id)a1;
- (void)deleteTextureRef:(unsigned int)a0 allocator:(id)a1;
- (void)doesAliasResources:(const id *)a0 count:(unsigned long long)a1 all:(BOOL)a2 resource:(id)a3 allocator:(id)a4;
- (id)getBytesFromRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a0 bytesPerRow:(unsigned long long)a1 bytesPerImage:(unsigned long long)a2 mipmapLevel:(unsigned long long)a3 slice:(unsigned long long)a4 texture:(id)a5 outDataSize:(unsigned long long *)a6;
- (void)getComputeInfoWithAllocator:(id)a0;
- (unsigned int)handleNewObjectReplyData:(const void *)a0 replyDataSize:(unsigned long long)a1;
- (unsigned int)handleNewObjectReplyData:(const void *)a0 replyDataSize:(unsigned long long)a1 errorMessage:(id *)a2;
- (void)heapBufferSizeAndAlignWithLength:(unsigned long long)a0 options:(unsigned long long)a1 allocator:(id)a2;
- (void)heapTextureSizeAndAlignWithDescriptor:(id)a0 allocator:(id)a1;
- (id)initWithDevice:(id)a0 deserializerGeneratesResourceRefs:(BOOL)a1 deserializerVersion:(unsigned int)a2;
- (void)makeAliasableResource:(id)a0 allocator:(id)a1;
- (void)maxAvailableSizeWithAlignment:(unsigned long long)a0 heap:(id)a1 allocator:(id)a2;
- (void)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)a0 allocator:(id)a1;
- (void)minimumTextureBufferAlignmentForPixelFormat:(unsigned long long)a0 allocator:(id)a1;
- (unsigned int)newArgumentBufferLayoutWithStructType:(id)a0 allocator:(id)a1;
- (unsigned int)newArgumentEncoderWithLayout:(unsigned int)a0 allocator:(id)a1;
- (unsigned int)newBufferRef;
- (unsigned int)newBufferWithLength:(unsigned long long)a0 options:(unsigned long long)a1 heap:(id)a2 offset:(unsigned long long)a3 useOffset:(BOOL)a4 allocator:(id)a5;
- (unsigned int)newCommandBufferRef;
- (unsigned int)newCommandQueueRef;
- (unsigned int)newComputePipelineStateWithSerializedDescriptor:(id)a0 allocator:(id)a1;
- (unsigned int)newFenceWithAllocator:(id)a0;
- (unsigned int)newFunctionWithIR:(id)a0;
- (unsigned int)newHeapWithDescriptor:(id)a0 allocator:(id)a1;
- (unsigned int)newIOSurfaceTextureWithDescriptor:(id)a0 plane:(unsigned long long)a1 allocator:(id)a2;
- (unsigned int)newRenderPipelineStateWithSerializedDescriptor:(id)a0 allocator:(id)a1;
- (unsigned int)newSharedEventWithAllocator:(id)a0;
- (unsigned int)newSharedEventWithHandle:(id)a0 allocator:(id)a1;
- (unsigned int)newSharedEventWithMachPort:(unsigned int)a0 allocator:(id)a1;
- (unsigned int)newSharedEventWithOptions:(long long)a0 allocator:(id)a1;
- (unsigned int)newSharedTextureWithDescriptor:(id)a0 allocator:(id)a1;
- (unsigned int)newTextureViewWithPixelFormat:(unsigned long long)a0 baseTexture:(id)a1 allocator:(id)a2;
- (unsigned int)newTextureViewWithPixelFormat:(unsigned long long)a0 textureType:(unsigned long long)a1 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 baseTexture:(id)a4 allocator:(id)a5;
- (unsigned int)newTextureViewWithPixelFormat:(unsigned long long)a0 textureType:(unsigned long long)a1 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 swizzle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; })a4 baseTexture:(id)a5 allocator:(id)a6;
- (unsigned int)newTextureWithBuffer:(id)a0 descriptor:(id)a1 offset:(unsigned long long)a2 bytesPerRow:(unsigned long long)a3 allocator:(id)a4;
- (unsigned int)newTextureWithDescriptor:(id)a0 heap:(id)a1 offset:(unsigned long long)a2 useOffset:(BOOL)a3 allocator:(id)a4;
- (unsigned int)notifyListenerForEventRef:(unsigned int)a0 atValue:(unsigned long long)a1 allocator:(id)a2;
- (const char *)payloadFromReplyData:(const char *)a0 replyDataSize:(unsigned long long)a1;
- (void)releaseArgumentEncoderRef:(unsigned int)a0;
- (void)releaseBufferRef:(unsigned int)a0;
- (void)releaseCommandBufferRef:(unsigned int)a0;
- (void)releaseCommandQueueRef:(unsigned int)a0;
- (void)releaseEventRef:(unsigned int)a0;
- (void)releaseFenceRef:(unsigned int)a0;
- (void)releaseRenderPipelineStateRef:(unsigned int)a0;
- (void)releaseTextureRef:(unsigned int)a0;
- (void *)replaceRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a0 mipmapLevel:(unsigned long long)a1 slice:(unsigned long long)a2 dataSize:(unsigned long long)a3 bytesPerRow:(unsigned long long)a4 bytesPerImage:(unsigned long long)a5 texture:(id)a6 allocator:(id)a7;
- (void)sharedEventSetSignaledValue:(unsigned long long)a0 eventRef:(unsigned int)a1 allocator:(id)a2;
- (void)sharedEventSignaledValueForEventRef:(unsigned int)a0 allocator:(id)a1;
- (void)sharedEventWaitSignaledValue:(unsigned long long)a0 timeoutMS:(unsigned long long)a1 eventRef:(unsigned int)a2 allocator:(id)a3;
- (void)sizeInfoForHeap:(id)a0 allocator:(id)a1;
- (void)uniqueIdentifierForComputePipelineState:(id)a0 allocator:(id)a1;
- (void)uniqueIdentifierForRenderPipelineState:(id)a0 allocator:(id)a1;
- (void)uniqueIdentifierForSamplerState:(id)a0 allocator:(id)a1;
- (void)uniqueIdentifierForTexture:(id)a0 allocator:(id)a1;
- (id)initWithDevice:(id)a0 deserializerGeneratesResourceRefs:(BOOL)a1;
- (id)initWithDevice:(id)a0 objectRefAllocator:(id)a1 deserializerGeneratesResourceRefs:(BOOL)a2;
- (id)initWithDevice:(id)a0 objectRefAllocator:(id)a1 deserializerGeneratesResourceRefs:(BOOL)a2 deserializerVersion:(unsigned int)a3;
- (unsigned int)newArgumentBufferLayoutRef;
- (unsigned int)newArgumentEncoderRef;
- (unsigned int)newComputePipelineStateRef;
- (unsigned int)newDepthStencilStateRef;
- (unsigned int)newDepthStencilStateWithDescriptor:(id)a0 allocator:(id)a1;
- (unsigned int)newEventRef;
- (unsigned int)newFenceRef;
- (unsigned int)newFunctionRef;
- (unsigned int)newHeapRef;
- (unsigned int)newNotificationRef;
- (unsigned int)newRenderPipelineStateRef;
- (unsigned int)newSamplerStateRef;
- (unsigned int)newSamplerStateWithDescriptor:(id)a0 allocator:(id)a1;
- (unsigned int)newTextureRef;
- (unsigned int)newTextureWithDescriptor:(id)a0 allocator:(id)a1;
- (unsigned int)newTiledTextureWithBuffer:(id)a0 descriptor:(id)a1 offset:(unsigned long long)a2 bytesPerRow:(unsigned long long)a3 allocator:(id)a4;
- (void)releaseDepthStencilStateRef:(unsigned int)a0;
- (void)releaseFunctionRef:(unsigned int)a0;
- (void)releaseNotificationRef:(unsigned int)a0;
- (void)releaseSamplerStateRef:(unsigned int)a0;

@end

@interface ResourceUsageAndRenderStage : NSObject

@property (nonatomic) unsigned long long usage;
@property (nonatomic) unsigned long long renderStages;
@property (nonatomic) struct OptionSet<WebGPU::BindGroupEntryUsage> { unsigned int m_storage; } entryUsage;
@property (nonatomic) unsigned int binding;
@property (nonatomic) struct variant<WTF::RefPtr<WebGPU::Buffer>, WTF::RefPtr<const WebGPU::TextureView>, WTF::RefPtr<const WebGPU::ExternalTexture>> { struct impl<WTF::RefPtr<WebGPU::Buffer>, WTF::RefPtr<const WebGPU::TextureView>, WTF::RefPtr<const WebGPU::ExternalTexture>> { union recursive_union<mpark::detail::Trait::Available, 0UL, WTF::RefPtr<WebGPU::Buffer>, WTF::RefPtr<const WebGPU::TextureView>, WTF::RefPtr<const WebGPU::ExternalTexture>> { char dummy_; struct alt<0UL, WTF::RefPtr<WebGPU::Buffer>> { struct RefPtr<WebGPU::Buffer, WTF::RawPtrTraits<WebGPU::Buffer>, WTF::DefaultRefDerefTraits<WebGPU::Buffer>> { struct Buffer *m_ptr; } value; } head_; union recursive_union<mpark::detail::Trait::Available, 1UL, WTF::RefPtr<const WebGPU::TextureView>, WTF::RefPtr<const WebGPU::ExternalTexture>> { char dummy_; struct alt<1UL, WTF::RefPtr<const WebGPU::TextureView>> { struct RefPtr<const WebGPU::TextureView, WTF::RawPtrTraits<const WebGPU::TextureView>, WTF::DefaultRefDerefTraits<const WebGPU::TextureView>> { struct TextureView *m_ptr; } value; } head_; union recursive_union<mpark::detail::Trait::Available, 2UL, WTF::RefPtr<const WebGPU::ExternalTexture>> { char dummy_; struct alt<2UL, WTF::RefPtr<const WebGPU::ExternalTexture>> { struct RefPtr<const WebGPU::ExternalTexture, WTF::RawPtrTraits<const WebGPU::ExternalTexture>, WTF::DefaultRefDerefTraits<const WebGPU::ExternalTexture>> { struct ExternalTexture *m_ptr; } value; } head_; union recursive_union<mpark::detail::Trait::Available, 3UL> { } tail_; } tail_; } tail_; } data_; unsigned char index_; } impl_; } resource;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithUsage:(unsigned long long)a0 renderStages:(unsigned long long)a1 entryUsage:(struct OptionSet<WebGPU::BindGroupEntryUsage> { unsigned int x0; })a2 binding:(unsigned int)a3 resource:(struct variant<WTF::RefPtr<WebGPU::Buffer>, WTF::RefPtr<const WebGPU::TextureView>, WTF::RefPtr<const WebGPU::ExternalTexture>> { struct impl<WTF::RefPtr<WebGPU::Buffer>, WTF::RefPtr<const WebGPU::TextureView>, WTF::RefPtr<const WebGPU::ExternalTexture>> { union recursive_union<mpark::detail::Trait::Available, 0UL, WTF::RefPtr<WebGPU::Buffer>, WTF::RefPtr<const WebGPU::TextureView>, WTF::RefPtr<const WebGPU::ExternalTexture>> { char x0; struct alt<0UL, WTF::RefPtr<WebGPU::Buffer>> { struct RefPtr<WebGPU::Buffer, WTF::RawPtrTraits<WebGPU::Buffer>, WTF::DefaultRefDerefTraits<WebGPU::Buffer>> { struct Buffer *x0; } x0; } x1; union recursive_union<mpark::detail::Trait::Available, 1UL, WTF::RefPtr<const WebGPU::TextureView>, WTF::RefPtr<const WebGPU::ExternalTexture>> { char x0; struct alt<1UL, WTF::RefPtr<const WebGPU::TextureView>> { struct RefPtr<const WebGPU::TextureView, WTF::RawPtrTraits<const WebGPU::TextureView>, WTF::DefaultRefDerefTraits<const WebGPU::TextureView>> { struct TextureView *x0; } x0; } x1; union recursive_union<mpark::detail::Trait::Available, 2UL, WTF::RefPtr<const WebGPU::ExternalTexture>> { char x0; struct alt<2UL, WTF::RefPtr<const WebGPU::ExternalTexture>> { struct RefPtr<const WebGPU::ExternalTexture, WTF::RawPtrTraits<const WebGPU::ExternalTexture>, WTF::DefaultRefDerefTraits<const WebGPU::ExternalTexture>> { struct ExternalTexture *x0; } x0; } x1; union recursive_union<mpark::detail::Trait::Available, 3UL> { } x2; } x2; } x2; } x0; unsigned char x1; } x0; })a4;

@end

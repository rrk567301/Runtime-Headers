@class NSString, SYDCoreDataStore, CKContainer, CKSyncEngine, SYDTestConfiguration, NSMutableArray, NSMutableSet, NSObject;
@protocol OS_dispatch_queue, SYDSyncManagerDelegate;

@interface SYDSyncManager : NSObject <CKSyncEngineDelegate, CKSyncEngineDelegatePrivate>

@property (retain, nonatomic) SYDCoreDataStore *coreDataStore;
@property (nonatomic) long long storeType;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;
@property (retain, nonatomic) CKContainer *container;
@property (retain, nonatomic) NSMutableSet *storeIdentifiersWithChangedValuesDuringFetchChanges;
@property (retain, nonatomic) NSMutableArray *pendingFetchedRecords;
@property (retain, nonatomic) NSMutableArray *pendingDeletedRecordIDs;
@property (copy, nonatomic) NSString *personaUniqueString;
@property (nonatomic) BOOL alwaysSaveRecordZones;
@property (nonatomic) unsigned long long maxPendingFetchedRecords;
@property (nonatomic, getter=isAutomaticSyncingEnabled) BOOL automaticSyncingEnabled;
@property (weak, nonatomic) id<SYDSyncManagerDelegate> delegate;
@property (retain, nonatomic) CKSyncEngine *engine;
@property (readonly, nonatomic) BOOL useSyncAnchor;
@property (nonatomic) BOOL disableAutomaticRetries;
@property (readonly, nonatomic) SYDTestConfiguration *testConfiguration;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)isDataSeparated;
+ (BOOL)shouldIgnoreFetchError:(id)a0;

- (BOOL)validateKey:(id)a0 error:(id *)a1;
- (void)dealloc;
- (void)deleteDataFromDisk;
- (void).cxx_destruct;
- (void)syncEngine:(id)a0 accountChangedFromUserRecordID:(id)a1 toUserRecordID:(id)a2;
- (void)syncEngine:(id)a0 handleEvent:(id)a1;
- (id)syncEngine:(id)a0 nextFetchChangesOptionsForContext:(id)a1;
- (id)syncEngine:(id)a0 nextRecordZoneChangeBatchForContext:(id)a1;
- (id)syncEngine:(id)a0 relatedApplicationBundleIdentifiersForZoneIDs:(id)a1 recordIDs:(id)a2;
- (void)resetSyncEngine;
- (void)unsetSyncEngine;
- (void)didFetchRecord:(id)a0;
- (void)_markZoneForDeletionOnManateeFailureForRecordZoneID:(id)a0;
- (void)_queue_resetSyncEngine;
- (void)addKeyValueRecordIDsToSave:(id)a0 recordIDsToDelete:(id)a1 storeIdentifier:(id)a2;
- (void)addPendingDatabaseChanges:(id)a0 storeIdentifier:(id)a1;
- (void)addSyncAnchorRecordIDToSaveIfNecessaryForStoreIdentifier:(id)a0;
- (void)deduplicateRecordForKeyValue:(id)a0 withNewlyFetchedRecord:(id)a1;
- (void)deleteDataFromCloudWithCompletionHandler:(id /* block */)a0;
- (void)didDeleteRecordWithID:(id)a0;
- (void)didDeleteRecordZoneWithID:(id)a0;
- (void)didEndFetchingChanges;
- (void)didFailToDeleteRecordWithID:(id)a0 error:(id)a1;
- (void)didFailToFetchChangesForRecordZoneID:(id)a0 error:(id)a1;
- (void)didFailToSaveRecord:(id)a0 error:(id)a1;
- (void)didFetchRecordDeletion:(id)a0 recordType:(id)a1;
- (void)didSaveKeyValueRecord:(id)a0;
- (void)didSaveRecord:(id)a0;
- (id)engineWithError:(id *)a0;
- (void)failedToSaveKeyValueRecord:(id)a0 error:(id)a1;
- (void)fetchChangesFromCloudForAllStoresWithCompletionHandler:(id /* block */)a0;
- (void)fetchChangesFromCloudForStoreIdentifiers:(id)a0 group:(id)a1 completionHandler:(id /* block */)a2;
- (BOOL)getSyncEngineStateSerialization:(id *)a0 error:(id *)a1;
- (void)handleSyncEngineStateUpdate:(id)a0;
- (BOOL)hasPendingChangesToUpload;
- (BOOL)hasSyncEngine;
- (id)initWithContainer:(id)a0 coreDataStore:(id)a1 storeType:(long long)a2 testConfiguration:(id)a3;
- (BOOL)initializeSyncEngineWithError:(id *)a0;
- (BOOL)isIdentityLostError:(id)a0;
- (void)markAllKeyValuesAsNeedingToBeUploaded;
- (void)markAllKeyValuesAsNeedingToBeUploadedForStoreWithIdentifier:(id)a0;
- (id)newRecordNameForKey:(id)a0;
- (id)objectForKey:(id)a0 inStoreWithIdentifier:(id)a1 error:(id *)a2;
- (void)performOneTimeDataSeparatedLocalDataResetIfNecessary;
- (void)processFetchedRecords:(id)a0 deletedRecordIDs:(id)a1;
- (void)processPendingFetchedRecordsWithReason:(id)a0;
- (id)recordIDForKey:(id)a0 inStoreWithIdentifier:(id)a1;
- (id)recordToSaveForRecordID:(id)a0 error:(id *)a1;
- (BOOL)removeObjectForKey:(id)a0 inStoreWithIdentifier:(id)a1 error:(id *)a2;
- (BOOL)removeObjectForKey:(id)a0 inStoreWithIdentifier:(id)a1 excludeFromChangeTracking:(BOOL)a2 didRemoveValue:(BOOL *)a3 error:(id *)a4;
- (BOOL)removeObjectForKey:(id)a0 inStoreWithIdentifier:(id)a1 excludeFromChangeTracking:(BOOL)a2 error:(id *)a3;
- (void)resetSyncEngineWithContainer:(id)a0;
- (void)savePendingChangesToCloudForAllStoresWithCompletionHandler:(id /* block */)a0;
- (void)savePendingChangesToCloudForStoreIdentifiers:(id)a0 group:(id)a1 completionHandler:(id /* block */)a2;
- (void)saveSyncAnchorSystemFieldsRecord:(id)a0;
- (BOOL)setObject:(id)a0 forKey:(id)a1 inStoreWithIdentifier:(id)a2 error:(id *)a3;
- (BOOL)setObject:(id)a0 forKey:(id)a1 inStoreWithIdentifier:(id)a2 excludeFromChangeTracking:(BOOL)a3 enforceQuota:(BOOL)a4 didChangeValue:(BOOL *)a5 error:(id *)a6;
- (BOOL)setObject:(id)a0 forKey:(id)a1 inStoreWithIdentifier:(id)a2 excludeFromChangeTracking:(BOOL)a3 enforceQuota:(BOOL)a4 error:(id *)a5;
- (BOOL)shouldRetryAfterModifyError:(id)a0;
- (BOOL)shouldSyncStoreWithIdentifier:(id)a0;
- (void)synchronizeAllStoresWithCompletionHandler:(id /* block */)a0;
- (void)synchronizeStoreWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)synchronizeStoresWithIdentifiers:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)useUUIDRecordNames;
- (void)willBeginFetchingChanges;
- (void)zoneWithIDWasPurged:(id)a0;

@end

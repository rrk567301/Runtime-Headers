@class NSDictionary, BRCSyncOperationBackoffRatio, BRCItemID, CKOperationGroup, BRCSyncDownOperation, BRCSyncBudgetThrottle, BRCAccountSession, NSString, BRCThrottleBase, NSError, NSMutableArray, BRCFetchRecentAndFavoriteDocumentsOperation, NSMutableIndexSet, NSArray, brc_task_tracker, NSMutableDictionary, BRCPQLConnection, NSObject, NSSet, BRCZoneRowID, BRCDeadlineSource, BRCReadWriteClientDatabaseFacade, BRCServerZone, BRCThrottle, BRCSyncOperationThrottle, BRMangledID, NSDate, BRCSyncUpOperation, BRTimer;
@protocol OS_dispatch_source, NSObject, BRCClientZoneDelegate;

@interface BRCClientZone : NSObject <BRCReachabilityDelegate, BRCZone> {
    NSString *_ownerName;
    BOOL _isInitialCreation;
    BRCThrottleBase *_readerThrottle;
    long long _syncUpRetryAfter;
    _Atomic unsigned int _syncState;
    BRCSyncUpOperation *_syncUpOperation;
    NSError *_lastSyncUpError;
    BOOL _lastSyncUpErrorWasOnChainedItem;
    BRCSyncDownOperation *_syncDownOperation;
    id _syncDeadlineSourceResumer;
    NSError *_lastSyncDownError;
    BRCSyncOperationThrottle *_syncUpThrottle;
    BRCSyncBudgetThrottle *_syncUpBudget;
    BRCSyncOperationBackoffRatio *_syncUpBackoffRatio;
    BRCSyncOperationThrottle *_syncDownThrottle;
    NSMutableArray *_blockedOperationsOnInitialSync;
    NSMutableDictionary *_runningListOperations;
    NSMutableDictionary *_recursiveListOperations;
    NSMutableDictionary *_fetchParentOperations;
    NSMutableDictionary *_locateRecordOperations;
    BRCFetchRecentAndFavoriteDocumentsOperation *_fetchRecentsOperation;
    BOOL _invokeFetchRecentsOperation;
    BRCThrottle *_serverStitchingOperationThrottle;
    BRCThrottle *_locateRecordsOperationThrottle;
    NSMutableIndexSet *_appliedTombstoneRanks;
    NSDate *_lastSyncDownDate;
    NSDate *_appUninstalledDate;
    NSObject<OS_dispatch_source> *_resetTimer;
    NSMutableDictionary *_syncDownBlockToPerformForBookmarkData;
    BOOL _shouldShowiCloudDriveAppInstallationNotification;
    NSMutableArray *_faultsLiveBarriers;
    NSMutableDictionary *_onDiskBlockToPerformForItemID;
    NSMutableDictionary *_downloadedBlockToPerformForItemID;
    NSMutableDictionary *_syncDownBlockToPerformForItemID;
    NSMutableDictionary *_locateBlocksToPerformForRecordID;
    NSMutableArray *_nextSyncDownBarriers;
    NSMutableArray *_currentSyncDownBarriers;
    id<NSObject> _hasWorkDidUpdateObserver;
    NSMutableArray *_nextIdleHandlers;
    NSMutableArray *_directoriesCreatedLastSyncUp;
    CKOperationGroup *_syncDownGroup;
    NSMutableArray *_syncDownDependencies;
    NSMutableArray *_allItemsDidUploadTrackers;
    NSMutableArray *_outOfBandSyncOperations;
    float _syncUpBatchSizeMultiplier;
    BRTimer *_resetAfterAppUninstallTimer;
}

@property (retain, nonatomic) BRCServerZone *serverZone;
@property (retain, nonatomic) NSDate *lastAttemptedSyncDownDate;
@property (readonly, nonatomic) NSString *zoneName;
@property (retain, nonatomic) id<BRCClientZoneDelegate> delegate;
@property (retain, nonatomic) BRCAccountSession *session;
@property (readonly, nonatomic) unsigned int state;
@property (readonly, nonatomic) BRCItemID *rootItemID;
@property (readonly, nonatomic) BRMangledID *mangledID;
@property (readonly, nonatomic) BRCPQLConnection *db;
@property (readonly, nonatomic) BRCReadWriteClientDatabaseFacade *dbFacade;
@property (readonly, nonatomic) brc_task_tracker *taskTracker;
@property (readonly, nonatomic) BOOL isCloudDocsZone;
@property (readonly, nonatomic) BOOL enhancedDrivePrivacyEnabled;
@property (readonly, nonatomic) NSString *osNameRequiredToSync;
@property (readonly, nonatomic) BOOL isForeground;
@property (readonly, nonatomic) BOOL activated;
@property (readonly, nonatomic) unsigned long long currentRequestID;
@property (readonly) unsigned int syncState;
@property (readonly, nonatomic) NSArray *syncThrottles;
@property (readonly, nonatomic) BRCDeadlineSource *syncDeadlineSource;
@property (readonly, nonatomic) BOOL hasHighPriorityWatchers;
@property (readonly, nonatomic) long long lastInsertedRank;
@property (readonly, nonatomic) unsigned int syncUpBatchSize;
@property (readonly, nonatomic) NSSet *itemIDsBlockedFromSyncForCZMProcessing;
@property (readonly, nonatomic) NSDictionary *parentsOfCZMFaults;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL needsSave;
@property (retain, nonatomic) BRCZoneRowID *dbRowID;
@property (readonly, nonatomic) BOOL isSharedZone;
@property (readonly, nonatomic) BOOL isPrivateZone;
@property (readonly, nonatomic) NSMutableDictionary *plist;

- (void)associateWithServerZone:(id)a0 offline:(BOOL)a1;
- (id)contentBoundaryKeyForItemID:(id)a0 withDB:(id)a1;
- (void)_bumpNotificationRankOnTopLevelFolderSharesInZone;
- (BOOL)existsByItemID:(id)a0 dbFacade:(id)a1;
- (BOOL)removeItemOnDiskBlock:(id)a0;
- (id)itemsParentedToThisZoneButLivingInAnOtherZone;
- (void)_increaseSyncUpBatchSizeAfterSuccess;
- (void)_blockLowPriorityStitchingOperationsForOperation:(id)a0;
- (void)_learnCKInfosFromSavedRecords:(id)a0 isOutOfBandModifyRecords:(BOOL)a1 basedOnOriginalVersion:(BOOL)a2;
- (unsigned int)saltingStateForItemID:(id)a0;
- (void)scheduleSyncDown;
- (float)syncUpBackoffDelay;
- (void)_finishedReset:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (id)serverQuotaUsageWithParentID:(id)a0 dbFacade:(id)a1;
- (void)clearStateBits:(unsigned int)a0;
- (long long)serverRankByItemID:(id)a0;
- (void)scheduleSyncDownFirst;
- (BOOL)containsNonRejectedChildWithParentID:(id)a0 dbFacade:(id)a1;
- (void)_handleSoftResetOfLocalItem:(id)a0 wantsUnlink:(BOOL)a1;
- (BOOL)existsByItemID:(id)a0;
- (void)scheduleSyncDownWithGroup:(id)a0;
- (void)clearSyncStateBits:(unsigned int)a0;
- (BOOL)_hasAllItemsDidUploadHandlers;
- (id)itemByFileID:(unsigned long long)a0;
- (void)_allItemsDidUploadWithError:(id)a0;
- (BOOL)_crossZoneMoveDocumentsToZone:(id)a0;
- (long long)throttleHashWithItemID:(id)a0;
- (unsigned long long)allocateSyncUpRequestID;
- (void)_performSoftResetOnItems:(id)a0 wantsUnlink:(BOOL)a1;
- (id)cancelFetchParentChainOperationAndReschedule:(id)a0;
- (BOOL)_checkIfEnumeratorContainsNonDiscretionaryOp:(id)a0;
- (id)_getRelevantClientTruthItemEnumerator;
- (id)itemByItemID:(id)a0 dbFacade:(id)a1;
- (void)cancelReset;
- (id)itemsEnumeratorWithParentID:(id)a0 andLogicalName:(id)a1;
- (BOOL)removeItemIsDownloadedBlock:(id)a0;
- (id)itemByRowID:(unsigned long long)a0;
- (void)syncDownOperation:(id)a0 didFinishWithError:(id)a1 status:(long long)a2;
- (BOOL)handleZoneLevelErrorIfNeeded:(id)a0 forItemCreation:(BOOL)a1;
- (void)_prepareForForegroundSyncDown;
- (void)_performResetAndWantsUnlink:(BOOL)a0 clientTruthBlock:(id /* block */)a1 completionBlock:(id /* block */)a2;
- (void)_markLatestSyncRequestFailed;
- (void)_performAfterResetServerAndClientSharedTruthsAndUnlinkData:(id /* block */)a0;
- (BOOL)hasCompletedInitialSyncDownOnce;
- (void)learnCKInfoAfterCollaborationUploadFromRecord:(id)a0 basedOnOriginalVersion:(BOOL)a1;
- (id)itemsWithInFlightDiffsEnumerator;
- (void)_resetChildBasehashSaltsIfNeeded;
- (void)_performAfterResetServerAndClientTruthsAndUnlinkData:(id /* block */)a0;
- (void)_recreateSyncBudgetsAndThrottlesIfNeeded;
- (id)serverItemByParentID:(id)a0 andLogicalName:(id)a1;
- (id)itemByParentID:(id)a0 andLogicalName:(id)a1;
- (id)initWithMangledID:(id)a0 dbRowID:(id)a1 plist:(id)a2 session:(id)a3 initialCreation:(BOOL)a4;
- (void)_performAfterResetServerAndClientPrivateTruthsAndUnlinkData:(id /* block */)a0;
- (id)ownerName;
- (void)_flushIdleBlocksIfNeeded;
- (void)dealloc;
- (BOOL)dumpStatusToContext:(id)a0 error:(id *)a1;
- (void)recomputeAllItemsDidUploadState;
- (BOOL)_hasNonDiscretionaryServerStitchingOperation;
- (void)scheduleReset:(unsigned long long)a0;
- (BOOL)_isSideSyncOperationBlockedWithName:(id)a0;
- (id)syncDownImmediately;
- (void)_syncUpOfRecords:(id)a0 createdAppLibraryNames:(id)a1 didFinishWithError:(id)a2 errorWasOnPCSChainedItem:(BOOL)a3 throttledItemInBatch:(BOOL)a4;
- (void)_registerLocateRecordOperation:(id)a0;
- (void)learnCKInfosFromSavedRecords:(id)a0 isOutOfBandModifyRecords:(BOOL)a1;
- (void)updateWithPlist:(id)a0;
- (void)_registerFetchParentChainOperation:(id)a0;
- (void)itemMovedIntoShareInThisZone:(id)a0 associatedItemID:(id)a1;
- (BOOL)validateItemsLoggingToFile:(struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)a0 db:(id)a1;
- (BOOL)isSyncBlocked;
- (id)itemCountPendingUploadOrSyncUpAndReturnError:(id *)a0;
- (id)directUnsaltedNonAliasItemsInServerTruthEnumeratorParentedTo:(id)a0;
- (void)clearAndRefetchRecentAndFavoriteDocuments;
- (BOOL)handleSaltingErrorIfNeeded:(id)a0 record:(id)a1;
- (id)allItemsSortedByDepthDescending:(BOOL)a0;
- (void)notifyClient:(id)a0 whenFaultingIsDone:(id /* block */)a1;
- (BOOL)isEqualToClientZone:(id)a0;
- (void)performBlock:(id /* block */)a0 whenLocatingCompletesForItemWithRecordID:(id)a1;
- (BOOL)_shouldFailSyncDownWaitImmediately;
- (void)fetchRecentAndFavoriteDocuments:(BOOL)a0;
- (id)itemByFileID:(unsigned long long)a0 dbFacade:(id)a1;
- (void)_fixupMissingCrossMovedItems;
- (void)resetSyncUpBackoffRatio;
- (BOOL)_dumpItemsToContext:(id)a0 includeAllItems:(BOOL)a1 error:(id *)a2;
- (void)_startSync;
- (void)scheduleSyncUp;
- (id /* block */)popDownloadedBlockForItemID:(id)a0;
- (void)_registerOperation:(id)a0 throttler:(id)a1;
- (id)cancelLocateRecordOperationAndReschedule:(id)a0;
- (void)addSyncDownDependency:(id)a0;
- (id)sizeOfItemsNeedingSyncUpOrUploadAndReturnError:(id *)a0;
- (BOOL)validateStructureLoggingToFile:(struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)a0 db:(id)a1;
- (BOOL)existsByParentID:(id)a0 andLogicalName:(id)a1;
- (void)_enumerateAndClearLocateBlocksForRecordID:(id)a0 exists:(BOOL)a1;
- (id)itemByParentID:(id)a0 andLogicalName:(id)a1 excludingItemID:(id)a2;
- (void)_markRequestIDAcked;
- (void)performBlock:(id /* block */)a0 whenSyncDownCompletesLookingForItemID:(id)a1;
- (void)notifyClient:(id)a0 whenIdle:(id /* block */)a1;
- (void)_cancelOutOfBandOperations;
- (id)serverHiddenChildCountWithParentID:(id)a0 dbFacade:(id)a1;
- (BOOL)_deleteRelevantPackageItemsWithDB:(id)a0 error:(id *)a1;
- (void)signalFaultingWatchersWithError:(id)a0;
- (BOOL)isBusy;
- (void)_reset:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (BOOL)_resetItemsTable;
- (void)_appendToString:(id)a0 descriptionOfFieldNamed:(id)a1 inResultSet:(id)a2 pos:(int *)a3 containsSize:(BOOL)a4 context:(id)a5;
- (id)itemByDocumentID:(unsigned int)a0;
- (void)_bumpNotificationRankOnTopLevelFolderSharesParentedToZone;
- (id)asPrivateClientZone;
- (id)deadItemByParentID:(id)a0 andUnbouncedLogicalName:(id)a1;
- (BOOL)isSyncBlockedBecauseAppNotInstalled;
- (id)locateRecordIfNecessaryForRecordID:(id)a0 isUserWaiting:(BOOL)a1;
- (id)serverChildCountWithParentID:(id)a0 dbFacade:(id)a1;
- (void)_fixupEnhancedDrivePrivacyState;
- (id)itemsEnumeratorWithDB:(id)a0;
- (id)syncDownAnalyticsError;
- (id)serverItemByItemID:(id)a0;
- (BOOL)dumpTablesToContext:(id)a0 includeAllItems:(BOOL)a1 error:(id *)a2;
- (void)prepareDirectoryForSyncUp:(id)a0;
- (void)disconnectNSMDQListenerAsync;
- (id)fetchRecursiveDirectoryContentsIfNecessary:(id)a0 isUserWaiting:(BOOL)a1 rescheduleApply:(BOOL)a2;
- (void)_deleteJobsMatchingServerZone;
- (void)_removeOnDiskBlockToPerformForItemID:(id)a0;
- (id)fetchDirectoryContentsIfNecessary:(id)a0 isUserWaiting:(BOOL)a1 rescheduleApplyScheduler:(BOOL)a2;
- (id)fetchParentChainIfNecessaryWithParentItemID:(id)a0 isUserWaiting:(BOOL)a1;
- (id)clientChildCountWithParentID:(id)a0 dbFacade:(id)a1;
- (BOOL)dumpActivityToContext:(id)a0 includeExpensiveActivity:(BOOL)a1 error:(id *)a2;
- (void)_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:(id /* block */)a0;
- (void)_scheduleZoneResetForUninstalledAppIfNecessary;
- (void)didApplyTombstoneForRank:(long long)a0;
- (void)_blockSyncDownOnStitchingOperations;
- (id)insertParentChainForItem:(id)a0;
- (id)descriptionWithContext:(id)a0;
- (void)clearSyncUpError;
- (id)itemByItemID:(id)a0;
- (void)addOutOfBandOperation:(id)a0;
- (id)directoryItemIDsCreatedLastSyncUp;
- (void)unregisterAllItemsDidUploadTracker:(id)a0;
- (id)cancelListOperationAndReschedule:(id)a0;
- (void)_recreateAppLibraryForDocsOrDesktopID:(id)a0;
- (id)serverItemByRank:(long long)a0;
- (void)didSyncDownRequestID:(unsigned long long)a0 maxApplyRank:(long long)a1 caughtUpWithServer:(BOOL)a2 syncDownDate:(id)a3;
- (void)_dumpRecursivePropertiesOfItemByRowID:(unsigned long long)a0 context:(id)a1 depth:(int)a2;
- (BOOL)isSyncBlockedBecauseOSNeedsUpgrade;
- (void)_removeDownloadedBlockToPerformForItemID:(id)a0;
- (id)documentsNotIdleEnumeratorWithStartingRowID:(unsigned long long)a0 batchSize:(unsigned long long)a1;
- (BOOL)hasItemsWithInFlightDiffs;
- (BOOL)_postHardResetHandlingWithDB:(id)a0 completionBlock:(id /* block */)a1 error:(id *)a2;
- (void)scheduleApplyWithLocalItem:(id)a0 serverItem:(id)a1;
- (id)_cancelAllOperationsForReset;
- (void)registerAllItemsDidUploadTracker:(id)a0;
- (id)serverItemByItemID:(id)a0 dbFacade:(id)a1;
- (void)scheduleSyncDownForOOBModifyRecordsAckForItemID:(id)a0;
- (void)_registerServerStitchingOperation:(id)a0;
- (BOOL)setStateBits:(unsigned int)a0;
- (id)liveItemByParentID:(id)a0 andLogicalName:(id)a1 excludingItemGlobalID:(id)a2;
- (BOOL)supportsKeepingClientItemsDuringReset;
- (BOOL)_performHardResetOnClientItemsAndWantsUnlink:(BOOL)a0 db:(id)a1 error:(id *)a2;
- (id)childBaseSaltForItemID:(id)a0;
- (BOOL)_isIdle;
- (char)itemTypeByItemID:(id)a0 dbFacade:(id)a1;
- (id)asSharedClientZone;
- (unsigned int)_activateState:(unsigned int)a0 origState:(unsigned int)a1;
- (void)_forDBUpgrade_setStateBits:(unsigned int)a0 clearStateBits:(unsigned int)a1;
- (void)resume;
- (id)fetchRecordSubResourcesWithParentOperation:(id)a0 pendingChangesStream:(id)a1 contentRecordsFetchedInline:(BOOL)a2 sessionContext:(id)a3;
- (id)init;
- (void)_decreaseSyncUpBatchSizeAfterError;
- (void)performBlock:(id /* block */)a0 whenItemWithIDIsDownloaded:(id)a1;
- (void)scheduleResetServerAndClientTruthsForReason:(id)a0 completionHandler:(id /* block */)a1;
- (void)_registerListOperation:(id)a0 shareAcceptOperation:(id)a1;
- (id)syncUpAnalyticsError;
- (void)scheduleResetServerAndClientTruthsForReason:(id)a0;
- (void)removeOutOfBandOperation:(id)a0;
- (char)serverItemTypeByItemID:(id)a0 dbFacade:(id)a1;
- (void)didGCTombstoneRanks:(id)a0;
- (float)syncUpBackoffRatio;
- (BOOL)removeSyncDownForItemIDBlock:(id)a0;
- (void)resetSyncBudgetAndThrottle;
- (void)setSyncStateBits:(unsigned int)a0;
- (void)fetchRecentAndFavoriteDocuments;
- (void)networkReachabilityChanged:(BOOL)a0;
- (void)handleRootRecordDeletion;
- (void)notifyClient:(id)a0 afterNextSyncDown:(id /* block */)a1;
- (id)locateContentRecordIfNecessaryForItem:(id)a0 isUserWaiting:(BOOL)a1 maxOperationBackoff:(double)a2;
- (void)associateWithServerZone:(id)a0;
- (id /* block */)popOnDiskBlockForItemID:(id)a0;
- (BOOL)existsByParentID:(id)a0 andLogicalName:(id)a1 excludingItemGlobalID:(id)a2;
- (id)liveItemByParentID:(id)a0 andCaseInsensitiveLogicalName:(id)a1 excludingItemGlobalID:(id)a2;
- (void)didClearOutOfQuota;
- (void)removeSyncDownDependency:(id)a0;
- (BOOL)shouldSyncMangledID:(id)a0;
- (void)listedUpToRank:(long long)a0;
- (void)flushAppliedTombstones;
- (void)scheduleReset:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (unsigned int)_appLibrariesState;
- (id)_locateRecordIfNecessaryForRecordID:(id)a0 isUserWaiting:(BOOL)a1 maxOperationBackoff:(double)a2;
- (void)_removeAllShareAcceptanceBlocks;
- (void)performBlock:(id /* block */)a0 whenItemWithRecordIDIsOnDisk:(id)a1;
- (void)fixStoredRequestIDWithServerRequestID:(unsigned long long)a0 maxApplyRank:(long long)a1 caughtUpWithServer:(BOOL)a2 syncDownDate:(id)a3;
- (BOOL)_isSideSyncOperationBlockedWithName:(id)a0 isWaitingOnShareAccept:(BOOL)a1;
- (void)_didSyncDownRequestID:(unsigned long long)a0 maxApplyRank:(long long)a1 caughtUpWithServer:(BOOL)a2 syncDownDate:(id)a3 isFixingState:(BOOL)a4;
- (void)_resetAndDeleteServerTruthData;
- (BOOL)_blockExistingOperationIfNecessary:(id)a0 onNewOperation:(id)a1 considerPriority:(BOOL)a2;
- (BOOL)isEqual:(id)a0;
- (void)close;
- (void).cxx_destruct;

@end

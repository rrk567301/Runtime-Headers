@class AXFUIElement, SCRCTargetSelectorTimer, NSMutableSet, SCRElement;

@interface SCRBrowser : SCRElement {
    struct SCRBrowserInfo { unsigned long long totalColumns; unsigned long long currColumn; unsigned long long totalRows; unsigned long long currRow; } _browserInfo;
    SCRElement *_currentColumnScrollArea;
    SCRElement *_readContentsElement;
    AXFUIElement *_readContentsColumnUIElement;
    unsigned long long _readContentsColumnIndex;
    SCRElement *_keyboardFocusedList;
    struct { unsigned char isRepeatEvent : 1; unsigned char isKeyboardEvent : 1; unsigned char registeredSelectedRowsChangedNotification : 1; } _srbFlags;
}

@property (retain, nonatomic) SCRCTargetSelectorTimer *_keyboardSyncTimer;
@property (retain, nonatomic) NSMutableSet *_keyboardSyncElements;

- (BOOL)isInteractive;
- (BOOL)isSelected;
- (void)dealloc;
- (void).cxx_destruct;
- (id)children:(BOOL)a0;
- (unsigned long long)indexOfUIElement:(id)a0;
- (void)handleSelectionChange:(id)a0;
- (id)childrenUIElementsForUIElement:(id)a0;
- (BOOL)interactRightWithEvent:(id)a0 request:(id)a1;
- (BOOL)syncKBFocusToVOCursorWithOutputRequest:(id)a0 playSound:(BOOL)a1 withSelection:(BOOL)a2;
- (id)_uiSelectedChildrenOfUIElement:(id)a0;
- (BOOL)canHandleSelectedChildrenChange;
- (struct SCRBrowserInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })_browserInfo;
- (struct SCRBrowserInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })_browserInfoForUIElement:(id)a0;
- (id)_columnUIElements;
- (id)_currentColumnScrollArea;
- (id)_firstLevelChildrenForColumnUIElement:(id)a0;
- (BOOL)_handleNavigationEvent:(id)a0 request:(id)a1 commandKey:(id)a2 selector:(SEL)a3 canScroll:(BOOL)a4 canWrap:(BOOL)a5;
- (void)_handleSelectionChangeWithUIElement:(id)a0;
- (id)_listChildUIElementOfColumnScrollAreaUIElement:(id)a0;
- (id)_moveDownWithEvent:(id)a0 request:(id)a1 allowFullWrapping:(BOOL)a2;
- (id)_moveFirstWithEvent:(id)a0 request:(id)a1 visibleOnly:(BOOL)a2;
- (id)_moveLastWithEvent:(id)a0 request:(id)a1 visibleOnly:(BOOL)a2;
- (id)_moveLeftWithEvent:(id)a0 request:(id)a1 allowFullWrapping:(BOOL)a2;
- (id)_moveRightWithEvent:(id)a0 request:(id)a1 allowFullWrapping:(BOOL)a2;
- (BOOL)_moveToColumn:(long long)a0;
- (id)_moveUpWithEvent:(id)a0 request:(id)a1 allowFullWrapping:(BOOL)a2;
- (unsigned long long)_numberOfRowsForColumnScrollAreaUIElement:(id)a0;
- (unsigned long long)_numberOfVisibleRowsForColumnScrollAreaUIElement:(id)a0;
- (id)_rowUIElementForColumnScrollAreaUIElement:(id)a0 atIndex:(unsigned long long)a1;
- (id)_rowUIElementsForColumnScrollAreaUIElement:(id)a0 visibleOnly:(BOOL)a1;
- (id)_selectedRowUIElementsForColumnScrollAreaUIElement:(id)a0;
- (void)_setBrowserInfo:(struct SCRBrowserInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a0;
- (id)_setCurrentColumnScrollArea:(id)a0;
- (void)_setCurrentColumnScrollAreaToKeyboardFocusedListUIElement:(id)a0;
- (void)_setFocusedItemWithUIElement:(id)a0 browserInfo:(struct SCRBrowserInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a1;
- (void)_setFocusedItemWithUIElement:(id)a0 browserInfo:(struct SCRBrowserInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a1 withScrolling:(BOOL)a2 withSelection:(BOOL)a3;
- (void)_setIsKeyboardSyncInProgressToNo;
- (void)_setReadContentsColumnUIElement:(id)a0;
- (void)_setReadContentsElement:(id)a0;
- (void)_setUISelectedChildrenWithUIElementArray:(id)a0;
- (void)addColumnNameToRequest:(id)a0;
- (void)addDescendantsToArray:(id)a0 additionalToRetain:(id)a1 additionalToSkip:(id)a2;
- (void)addElementEnclosureSummaryToRequest:(id)a0;
- (void)addItemDescriptionForCommand:(id)a0 toRequest:(id)a1 event:(id)a2;
- (void)addItemDescriptionToRequest:(id)a0;
- (BOOL)addKeyboardSelectionSummaryToRequest:(id)a0;
- (void)addOverviewWithInfo:(struct SCRBrowserInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a0 toRequest:(id)a1;
- (BOOL)addSelectionDescriptionToRequest:(id)a0;
- (BOOL)addTitleAlphabeticSpellingToRequest:(id)a0;
- (BOOL)addTitlePhoneticSpellingToRequest:(id)a0;
- (BOOL)addTitleToRequest:(id)a0;
- (BOOL)allowBuildChildren;
- (BOOL)canSetSelectionOnChildren;
- (id)childAfterElement:(id)a0;
- (id)childBeforeElement:(id)a0;
- (id)childUIElementForUIElement:(id)a0 atIndex:(unsigned long long)a1;
- (id)childrenInReadContentsOrder;
- (BOOL)childrenShouldAddIndexToDescription;
- (unsigned long long)directInteractionArrowCaptureMask;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })droppableBoundsForElement:(id)a0;
- (BOOL)focusInto:(id)a0 event:(id)a1;
- (id)focusOntoUIElement:(id)a0 withScrolling:(BOOL)a1 withSelection:(BOOL)a2;
- (void)forgetReadContentsElement;
- (long long)groupBehavior;
- (BOOL)handleScrollByPageWithEvent:(id)a0 request:(id)a1;
- (void)handleSelectedRowsChanged:(id)a0;
- (BOOL)hasMultipleSelection;
- (BOOL)hasSelectedChildren;
- (BOOL)hasSelectionOnElement:(id)a0;
- (unsigned long long)indexOfElement:(id)a0 visibleOnly:(BOOL)a1;
- (id)initWithUIElement:(id)a0 parent:(id)a1;
- (BOOL)interactDownShiftWithEvent:(id)a0 request:(id)a1;
- (BOOL)interactDownWithEvent:(id)a0 request:(id)a1;
- (BOOL)interactLeftWithEvent:(id)a0 request:(id)a1;
- (BOOL)interactUpShiftWithEvent:(id)a0 request:(id)a1;
- (BOOL)interactUpWithEvent:(id)a0 request:(id)a1;
- (BOOL)isContainerElement;
- (BOOL)isListOrGroupRole:(id)a0;
- (BOOL)isListOrGroupUIElement:(id)a0;
- (BOOL)isListRole:(id)a0;
- (BOOL)isListUIElement:(id)a0;
- (BOOL)isSectionView;
- (id)keyboardFocusedList;
- (BOOL)moveToFirstElementWithEvent:(id)a0 request:(id)a1;
- (BOOL)moveToFirstVisibleElementWithEvent:(id)a0 request:(id)a1;
- (BOOL)moveToLastElementWithEvent:(id)a0 request:(id)a1;
- (BOOL)moveToLastVisibleElementWithEvent:(id)a0 request:(id)a1;
- (BOOL)moveVirtualFocusToSelectedItem:(id)a0 includeDescription:(BOOL)a1;
- (unsigned long long)numberOfChildren:(BOOL)a0;
- (void)prepareGestureTrackingChildren;
- (void)prepareReadContentsElementVisibleOnly:(BOOL)a0;
- (id)readContentsElement;
- (unsigned long long)readContentsElementCount;
- (void)setFocusedChild:(id)a0;
- (void)setIsEventHandler:(BOOL)a0 isKeyboardHandler:(BOOL)a1;
- (void)setIsKeyboardSyncInProgress:(BOOL)a0;
- (void)setKeyboardFocusedList:(id)a0;
- (void)setPercentage:(double)a0 forUIScrollBar:(id)a1;
- (BOOL)shouldAllowAutoFocusInto;
- (BOOL)shouldPromoteForMovingUIElement:(id)a0;
- (BOOL)showRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)startReadContentsVisibleOnly:(BOOL)a0;
- (BOOL)synchKeyboardToVOCursor:(id)a0;
- (BOOL)synchVOCursorToKeyboard:(id)a0;
- (BOOL)trackElementWithGestureEvent:(id)a0 request:(id)a1;
- (id)uiElementForArray:(id)a0 atIndex:(unsigned long long)a1;
- (id)uiElementToObserveSelectionChange;
- (id)uiElementWithContextualMenu;
- (id)visibleChildrenUIElementsForUIElement:(id)a0;

@end

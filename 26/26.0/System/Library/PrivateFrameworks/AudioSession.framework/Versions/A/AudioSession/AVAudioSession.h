@class NSString, NSArray, AVAudioSessionRouteDescription, NSDictionary, AVAudioSessionPortDescription, AVAudioSessionDataSourceDescription, CAReporter, NSNumber;
@protocol AVAudioSessionDelegate;

@interface AVAudioSession : NSObject <AVAudioHardwareControlling> {
    void *_impl;
    BOOL mCategoryEverSet;
    BOOL mSessionEverActivated;
}

@property (readonly) BOOL isPrimary;
@property (readonly, nonatomic) unsigned int hardwareControlToken;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, getter=isOtherAudioPlaying) BOOL otherAudioPlaying;
@property (readonly) BOOL secondaryAudioShouldBeSilencedHint;
@property (readonly) float outputVolume;
@property (readonly) unsigned long long promptStyle;
@property (readonly) NSArray *availableInputs;
@property (readonly) AVAudioSessionRouteDescription *currentRoute;
@property (readonly) BOOL supportsMultichannelContent;
@property (readonly) BOOL prefersInterruptionOnRouteDisconnect;
@property (readonly) unsigned long long preferredRouteSharingPolicy;
@property BOOL canBeNowPlayingApp;
@property (readonly) double preferredSampleRate;
@property (readonly) double preferredIOBufferDuration;
@property (readonly) long long preferredInputNumberOfChannels;
@property (readonly) long long preferredOutputNumberOfChannels;
@property (readonly) long long preferredInputOrientation;
@property (readonly) long long inputOrientation;
@property (readonly) long long maximumInputNumberOfChannels;
@property (readonly) long long maximumOutputNumberOfChannels;
@property (readonly) float inputGain;
@property (readonly, getter=isInputGainSettable) BOOL inputGainSettable;
@property (readonly, getter=isInputAvailable) BOOL inputAvailable;
@property (readonly) NSArray *inputDataSources;
@property (readonly) AVAudioSessionDataSourceDescription *inputDataSource;
@property (readonly) NSArray *outputDataSources;
@property (readonly) AVAudioSessionDataSourceDescription *outputDataSource;
@property (readonly) double sampleRate;
@property (readonly) long long inputNumberOfChannels;
@property (readonly) long long outputNumberOfChannels;
@property (readonly) double inputLatency;
@property (readonly) double outputLatency;
@property (readonly) double IOBufferDuration;
@property (readonly) NSArray *supportedOutputChannelLayouts;
@property (readonly) BOOL isActive;
@property (readonly) NSArray *audioFormats;
@property (readonly) long long audioFormat;
@property (readonly) long long preferredAudioFormat;
@property (readonly) NSArray *consolidatedSourceContentInfo;
@property (readonly) BOOL isDolbyDigitalEncoderAvailable;
@property (readonly) BOOL isDolbyAtmosAvailable;
@property (readonly) BOOL isEarpieceActiveNoiseCancelationEnabled;
@property (readonly) BOOL isPiPAvailable;
@property (readonly) BOOL forceSoundCheck;
@property (readonly) BOOL usingLongFormAudio;
@property (readonly) BOOL requiresNoAudioResources;
@property (readonly) BOOL allowMixableAudioWhileRecording;
@property (readonly) BOOL participatesInNowPlayingAppPolicy;
@property (readonly) BOOL eligibleForBTSmartRoutingConsideration;
@property (readonly) NSNumber *preferredOutputAudioScoreForSmartRouting;
@property (readonly) BOOL eligibleForBTTriangleConsideration;
@property (readonly) BOOL prefersToAcquireHWControlFromOtherSessions;
@property (readonly) BOOL prefersNoMicrophoneUsageIndicator;
@property (readonly) BOOL inhibitSpeechDetection;
@property (readonly) unsigned long long speechDetectionStyle;
@property (readonly) BOOL participatesInMutePriority;
@property (readonly) BOOL participatesInInterruptions;
@property (readonly) BOOL recordingFromRemoteInput;
@property (readonly) BOOL iAmTheAssistant;
@property BOOL allowAllBuiltInDataSources;
@property (readonly, getter=isHardwareFormatFixedToMultiChannel) BOOL hardwareFormatFixedToMultiChannel;
@property (readonly, nonatomic) BOOL prefersNoInterruptionsByRingtonesAndAlerts;
@property (readonly) BOOL prefersNoDucking;
@property (readonly) BOOL needsHighPowerBudgeting;
@property (readonly) BOOL participatesInVolumePolicy;
@property (readonly) BOOL prefersToVibeWhenVibrationsAreDisabled;
@property (readonly) float defaultCalibratedOutputSPL;
@property (readonly) BOOL allowsSpeakerPlayback;
@property (readonly) NSString *defaultChatMode;
@property (readonly) NSArray *activeSessionDisplayIDs;
@property (readonly) double inputSafetyOffset;
@property (readonly) double outputSafetyOffset;
@property (readonly) unsigned long long preferredIOBufferFrameSize;
@property (readonly) unsigned long long IOBufferFrameSize;
@property (readonly) BOOL isSessionInputMuted;
@property (readonly, getter=isInputMuted) BOOL inputMuted;
@property (readonly) unsigned int opaqueSessionID;
@property (readonly) unsigned long long sessionType;
@property (readonly) BOOL isAllowedToActivate;
@property (readonly) double speechDetectionDeviceSampleRate;
@property (readonly) double siriSpeechDetectionDeviceSampleRate;
@property (readonly) long long interruptionPriority;
@property (readonly) BOOL lastActivationStoppedNowPlayingApp;
@property (readonly) BOOL isExpanseMediaSession;
@property (readonly) long long reporterID;
@property (readonly) NSArray *auditTokensForProcessAssertion;
@property (readonly) NSDictionary *powerProfile;
@property (readonly) NSDictionary *powerBudget;
@property (readonly) NSString *routingContextUID;
@property (readonly) NSArray *hostProcessAttribution;
@property (readonly) NSDictionary *pickedRoute;
@property (readonly, getter=isVoiceProcessingRoutingEnabled) BOOL voiceProcessingRoutingEnabled;
@property (readonly, getter=prefersMultichannelAudio) BOOL prefersMultichannelAudio;
@property (readonly, copy, nonatomic) NSString *activeAudioRoute;
@property (readonly) BOOL prefersAggressiveCaching;
@property (readonly) BOOL prefersConcurrentAirPlayAudio;
@property (readonly) BOOL isMicrophoneInjectionServiceEnabledByUser;
@property id<AVAudioSessionDelegate> delegate;
@property (readonly) BOOL inputIsAvailable;
@property (readonly) double currentHardwareSampleRate;
@property (readonly) long long currentHardwareInputNumberOfChannels;
@property (readonly) long long currentHardwareOutputNumberOfChannels;
@property (readonly) double preferredHardwareSampleRate;
@property (retain, nonatomic) CAReporter *reporter;
@property (readonly, nonatomic) NSArray *availableCategories;
@property (readonly) NSString *category;
@property (readonly) unsigned long long categoryOptions;
@property (readonly) unsigned long long routeSharingPolicy;
@property (readonly) NSArray *availableModes;
@property (readonly) NSString *mode;
@property (readonly) BOOL allowHapticsAndSystemSoundsDuringRecording;
@property (readonly) unsigned long long recordPermission;
@property (readonly) AVAudioSessionPortDescription *preferredInput;
@property (readonly, nonatomic) BOOL prefersNoInterruptionsFromSystemAlerts;
@property (readonly) long long renderingMode;
@property (readonly, nonatomic) BOOL prefersEchoCancelledInput;
@property (readonly, nonatomic) BOOL isEchoCancelledInputEnabled;
@property (readonly, nonatomic) BOOL isEchoCancelledInputAvailable;
@property (readonly, getter=isOutputMuted) BOOL outputMuted;

+ (id)sharedInstance;
+ (id)lookUpSession:(unsigned int)a0;
+ (long long)optInBehavior;
+ (id)primarySession;
+ (BOOL)CARPEnabled;
+ (id)auxiliarySession;
+ (id)auxiliarySessionWithName:(id)a0;
+ (BOOL)categoryEnablesInput:(id)a0;

- (id)autorelease;
- (void)dealloc;
- (id)initWithSpecification:(id)a0;
- (id)retain;
- (id)init;
- (unsigned long long)retainCount;
- (oneway void)release;
- (void).cxx_destruct;
- (BOOL)setPlayState:(id)a0 error:(id *)a1;
- (BOOL)setMXProperties:(id)a0 propertyErrors:(id *)a1;
- (id)getMXProperties:(id)a0 propertyErrors:(id *)a1;
- (id)addObserverForType:(unsigned long long)a0 name:(id)a1 block:(id /* block */)a2;
- (id)getMXSessionProperty:(id)a0 error:(id *)a1;
- (void)removeObserverForType:(unsigned long long)a0 observer:(id)a1 name:(id)a2;
- (BOOL)setActive:(BOOL)a0 error:(id *)a1;
- (BOOL)setActive:(BOOL)a0 withOptions:(unsigned long long)a1 error:(id *)a2;
- (BOOL)setMXSessionProperty:(id)a0 value:(id)a1 error:(id *)a2;
- (id)IOController;
- (BOOL)checkPrimarySessionImplicitActivation:(BOOL)a0;
- (long long)createIOStateChangeBlock:(id /* block */)a0;
- (void)destroyIOStateChangeBlock:(long long)a0;
- (double)inputSampleRate;
- (BOOL)setCategory:(id)a0 mode:(id)a1 options:(unsigned long long)a2 error:(id *)a3;
- (id)initProxySession:(unsigned int)a0 autoReconnect:(BOOL)a1;
- (BOOL)setIsExpanseMediaSession:(BOOL)a0 error:(id *)a1;
- (int)setProperty:(id)a0 value:(id)a1 isMXProperty:(BOOL)a2;
- (void)activateWithOptions:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (int)addReporterIDToAggregate;
- (id)buildRouteJSON;
- (BOOL)canActivate:(id *)a0;
- (BOOL)clearInputPreferences:(id *)a0;
- (unsigned short)determineServiceType;
- (id)getATDefaultDeviceAggregate;
- (id)getAllSessionInformation;
- (void)handleAppStatePauseFinal:(id)a0;
- (void)handleAppStateResumeFinal:(id)a0;
- (void)handleDefaultInputChange:(BOOL)a0;
- (void)handleServiceRestart;
- (BOOL)hasPhoneCallBehaviour;
- (id)initAuxiliarySession;
- (id)initAuxiliarySessionWithName:(id)a0;
- (id)initForMacOS;
- (id)initWithName:(id)a0 manager:(id)a1 proxying:(unsigned int)a2 sessionType:(unsigned long long)a3;
- (BOOL)isMicrophoneInjectionAvailable;
- (BOOL)isOutputAvailable;
- (BOOL)muteSessionInput:(BOOL)a0 error:(id *)a1;
- (BOOL)overrideOutputAudioPort:(unsigned long long)a0 error:(id *)a1;
- (long long)preferredMicrophoneInjectionMode;
- (unsigned long long)privateCreateRemoteNotificationCenter;
- (BOOL)privateDestroyRemoteNotificationCenter:(unsigned long long)a0;
- (BOOL)privateStartOrStopObserving:(BOOL)a0 remoteNotifications:(id)a1 forDelegate:(unsigned long long)a2;
- (BOOL)recreateSessionInServerIfNecessary:(unsigned int)a0 sessionType:(unsigned long long)a1;
- (void)registerForFakeInterruptionNotifications;
- (int)removeReporterIDFromAggregate;
- (void)requestRecordPermission:(id /* block */)a0;
- (BOOL)selectIndependentRoutingContext:(id *)a0;
- (void)sendActiveDeviceMessage:(BOOL)a0;
- (BOOL)sendNotification:(unsigned int)a0 notificationName:(id)a1 userInfo:(id)a2 error:(id *)a3;
- (void *)sessionCore;
- (void *)sessionCoreLegacy;
- (void *)sessionCoreNew;
- (BOOL)setActivationContext:(id)a0 error:(id *)a1;
- (void)setActivationState:(BOOL)a0;
- (BOOL)setActive:(BOOL)a0 withFlags:(long long)a1 error:(id *)a2;
- (id)setActiveSecureSession:(BOOL)a0 withOptions:(unsigned long long)a1;
- (id)setActiveXPCAsyncAndWait:(BOOL)a0 withOptions:(unsigned long long)a1;
- (BOOL)setAggregatedIOPreference:(unsigned long long)a0 error:(id *)a1;
- (BOOL)setAllowHapticsAndSystemSoundsDuringRecording:(BOOL)a0 error:(id *)a1;
- (BOOL)setAudioIOProperties:(id)a0 propertyErrors:(id *)a1;
- (int)setBatchProperties:(id)a0 areMXProperties:(BOOL)a1;
- (BOOL)setCategory:(id)a0 error:(id *)a1;
- (BOOL)setCategory:(id)a0 mode:(id)a1 routeSharingPolicy:(unsigned long long)a2 options:(unsigned long long)a3 error:(id *)a4;
- (BOOL)setCategory:(id)a0 withOptions:(unsigned long long)a1 error:(id *)a2;
- (BOOL)setDefaultChatMode:(id)a0 error:(id *)a1;
- (BOOL)setEligibleForBTSmartRoutingConsideration:(BOOL)a0 error:(id *)a1;
- (BOOL)setForceSoundCheck:(BOOL)a0 error:(id *)a1;
- (BOOL)setIAmTheAssistant:(BOOL)a0 error:(id *)a1;
- (BOOL)setInputDataSource:(id)a0 error:(id *)a1;
- (BOOL)setInputGain:(float)a0 error:(id *)a1;
- (BOOL)setInputMuted:(BOOL)a0 error:(id *)a1;
- (BOOL)setInterruptionPriority:(long long)a0 error:(id *)a1;
- (BOOL)setMode:(id)a0 error:(id *)a1;
- (BOOL)setOutputDataSource:(id)a0 error:(id *)a1;
- (BOOL)setOutputMuted:(BOOL)a0 error:(id *)a1;
- (BOOL)setParticipatesInInterruptions:(BOOL)a0 error:(id *)a1;
- (BOOL)setPreferredHardwareSampleRate:(double)a0 error:(id *)a1;
- (BOOL)setPreferredIOBufferDuration:(double)a0 error:(id *)a1;
- (BOOL)setPreferredIOBufferFrameSize:(unsigned long long)a0 error:(id *)a1;
- (BOOL)setPreferredInput:(id)a0 error:(id *)a1;
- (BOOL)setPreferredInputNumberOfChannels:(long long)a0 error:(id *)a1;
- (BOOL)setPreferredInputOrientation:(long long)a0 error:(id *)a1;
- (BOOL)setPreferredMicrophoneInjectionMode:(long long)a0 error:(id *)a1;
- (BOOL)setPreferredOutputAudioScoreForSmartRouting:(id)a0 error:(id *)a1;
- (BOOL)setPreferredOutputNumberOfChannels:(long long)a0 error:(id *)a1;
- (BOOL)setPreferredSampleRate:(double)a0 error:(id *)a1;
- (BOOL)setPrefersInterruptionOnRouteDisconnect:(BOOL)a0 error:(id *)a1;
- (BOOL)setPrefersNoInterruptionsFromSystemAlerts:(BOOL)a0 error:(id *)a1;
- (BOOL)setRecordingFromRemoteInput:(BOOL)a0 error:(id *)a1;
- (BOOL)setReporterID:(long long)a0 error:(id *)a1;
- (BOOL)setRouteSharingPolicy:(unsigned long long)a0 error:(id *)a1;
- (BOOL)setRoutingContextUID:(id)a0 error:(id *)a1;
- (BOOL)setSupportsMultichannelContent:(BOOL)a0 error:(id *)a1;
- (BOOL)setVoiceProcessingRoutingEnabled:(BOOL)a0 error:(id *)a1;
- (BOOL)silenceOutput:(unsigned long long)a0 error:(id *)a1;
- (BOOL)toggleNotification:(unsigned int)a0 notificationName:(id)a1 enabled:(BOOL)a2 error:(id *)a3;

@end

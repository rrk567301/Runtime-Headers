@class NSData, NSString, NSURL, DAStatusReport, DAAccount, NSDictionary, CoreDAVDiscoveryTaskGroup, DALocalDBHelper, DACoreDAVLogger, MobileCalDAVAccount, DATrustHandler, DACoreDAVTaskManager;
@protocol CalDAVPrincipal, MobileCalDAVAccountInfo;

@interface MobileCalDAVDAAccount : DAAccount <DACalDAVAccount, CoreDAVLogDelegate, CoreDAVDiscoveryTaskGroupDelegate, MobileCalDAVDABackingAccount, CoreDAVAccountInfoProvider> {
    NSString *_usernameForDiscovery;
    NSString *_hostForDiscovery;
}

@property (retain, nonatomic) CoreDAVDiscoveryTaskGroup *checkValidityTaskGroup;
@property (retain, nonatomic) DACoreDAVLogger *coreDAVLogger;
@property (readonly, nonatomic) id<CalDAVPrincipal> mainPrincipal;
@property (retain, nonatomic) NSDictionary *subscribedCalendars;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) MobileCalDAVAccount *mobileCalDAVAccount;
@property (readonly, nonatomic) DAAccount *daAccount;
@property (readonly, nonatomic) DALocalDBHelper *dbHelper;
@property (readonly, nonatomic) id<MobileCalDAVAccountInfo> accountInfo;
@property (readonly, nonatomic) DATrustHandler *trustHandler;
@property (readonly, nonatomic) NSString *accountIdentifier;
@property (readonly, nonatomic) NSString *changeTrackingID;
@property (readonly, nonatomic) NSString *parentAccountIdentifier;
@property (readonly, nonatomic) NSString *topLevelAccountTypeIdentifier;
@property (readonly, nonatomic) NSString *persistentUUID;
@property (retain, nonatomic) NSString *accountDescription;
@property (readonly, nonatomic) NSString *publicDescription;
@property (retain, nonatomic) NSString *username;
@property (retain, nonatomic) NSString *user;
@property (retain, nonatomic) NSString *host;
@property (readonly, nonatomic) NSString *hostWithoutPath;
@property (nonatomic) long long port;
@property (retain, nonatomic) NSString *password;
@property (readonly, nonatomic) NSString *scheme;
@property (nonatomic) BOOL useSSL;
@property (nonatomic) BOOL shouldDoInitialAutodiscovery;
@property (nonatomic) BOOL isValidating;
@property (nonatomic) BOOL wasUserInitiated;
@property (readonly, copy, nonatomic) NSString *clientToken;
@property (readonly, nonatomic) DAStatusReport *statusReport;
@property (readonly, copy, nonatomic) NSData *identityPersist;
@property (nonatomic) BOOL shouldUseOpportunisticSockets;
@property (retain, nonatomic) NSURL *principalURL;
@property (readonly, nonatomic) BOOL shouldFailAllTasks;
@property (nonatomic) double refreshInterval;
@property (nonatomic) BOOL pushDisabled;
@property (readonly, nonatomic) BOOL isICloudAccount;
@property (nonatomic) BOOL backingAccountShouldDoInitialAutodiscovery;
@property (readonly, nonatomic) DACoreDAVTaskManager *taskManager;
@property (readonly, nonatomic) BOOL needsToVerifyTerms;
@property (readonly, nonatomic) NSDictionary *contextDictionary;

+ (Class)mobileCalDAVAccountClass;

- (id)emailAddresses;
- (id)logHandle;
- (void)removeAccount:(id)a0;
- (void)dealloc;
- (BOOL)isEqualToAccount:(id)a0;
- (void).cxx_destruct;
- (id)additionalHeaderValues;
- (id)childAccountsWithAccountTypeIdentifier:(id)a0;
- (id)principalPath;
- (void)setPrincipalPath:(id)a0;
- (id)preferredAddress;
- (BOOL)isCalDAVAccount;
- (id)localizedInvalidPasswordMessage;
- (void)_reallyCancelAllSearchQueries;
- (void)_reallyCancelSearchQuery:(id)a0;
- (void)_reallyPerformSearchQuery:(id)a0;
- (BOOL)_reallySearchQueriesRunning;
- (void)addToCoreDAVLoggingDelegates;
- (void)coreDAVLogTransmittedDataPartial:(id)a0;
- (void)coreDAVTransmittedDataFinished;
- (id)customConnectionProperties;
- (void)discoverInitialPropertiesWithConsumer:(id)a0;
- (void)discoveryTask:(id)a0 gotAccountInfo:(id)a1 error:(id)a2;
- (void)dropAssertionsAndRenewCredentialsInQueue:(id)a0 withHandler:(id /* block */)a1;
- (BOOL)handleTrustChallenge:(id)a0 completionHandler:(id /* block */)a1;
- (void)ingestBackingAccountInfoProperties;
- (id)initWithBackingAccountInfo:(id)a0;
- (id)localizedIdenticalAccountFailureMessage;
- (void)noteHomeSetOnDifferentHost:(id)a0;
- (id)oauth2Token;
- (id)onBehalfOfBundleIdentifier;
- (void)performDiscoveryWithHostname:(id)a0 username:(id)a1 consumer:(id)a2;
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id /* block */)a0;
- (void)removeFromCoreDAVLoggingDelegates;
- (BOOL)retryDiscoveryTask:(id)a0;
- (BOOL)saveModifiedPropertiesOnBackingAccount;
- (BOOL)shouldLogTransmittedData;
- (id)spinnerIdentifiers;
- (BOOL)upgradeAccount;
- (void)webLoginRequestedAtURL:(id)a0 reasonString:(id)a1 inQueue:(id)a2 completionBlock:(id /* block */)a3;
- (id)wellKnownPaths;
- (void)_reallyCancelPendingSearchQuery:(id)a0;
- (id)beginDownloadingAttachmentWithUUID:(id)a0 consumer:(id)a1;
- (void)setUseKerberos:(BOOL)a0;
- (void)_discoverInitialPropertiesWithConsumer:(id)a0;
- (BOOL)accountHasSignificantPropertyChangesWithChangeInfo:(id)a0;
- (void)calendarsDataclassModified;
- (id)childAccountWithIdentifier:(id)a0;
- (id)createChildAccountWithAccountTypeIdentifier:(id)a0;
- (id)httpPorts;
- (id)httpsPorts;
- (BOOL)isDelegateAccount;
- (id)portListByInsertingUserEnteredPort:(id)a0;
- (BOOL)useKerberos;

@end

@class NSData, NSString, NSFileHandle, NSArray, NSSet, SMNNetworkStream, NSNumber, NSObject, SMNNetworkSession, IASThreadSafeEvent, SMNNetworkStreamMuxer;
@protocol OS_dispatch_semaphore, OS_dispatch_source, OS_dispatch_queue, SMNNetworkSecurityProvider;

@interface SMNConnection : NSObject <SMNStreamMuxerDelegate>

@property (weak) SMNNetworkSession *session;
@property unsigned long long protocolVersion;
@property (getter=isServer) BOOL server;
@property (retain) SMNNetworkStreamMuxer *muxer;
@property (retain) NSString *connectionName;
@property BOOL secretPasswordValidated;
@property (retain) NSFileHandle *controlSocketFileHandle;
@property (retain) NSObject<SMNNetworkSecurityProvider> *controlSecurityProvider;
@property (retain) SMNNetworkStream *controlStream;
@property (retain) NSObject<OS_dispatch_queue> *controlQueue;
@property (retain) NSObject<OS_dispatch_queue> *controlWatchdogQueue;
@property (retain) NSObject<OS_dispatch_queue> *controlMonitorQueue;
@property BOOL hasDisconnected;
@property (retain) NSObject<OS_dispatch_source> *pingTimer;
@property struct timeval { long long tv_sec; int tv_usec; } lastSignOfLife;
@property (getter=isSampling) BOOL sampling;
@property (retain) IASThreadSafeEvent *samplingComplete;
@property double sample;
@property (retain) NSFileHandle *payloadSocketFileHandle;
@property (retain) NSFileHandle *payloadConnectSocketFileHandle;
@property (retain) NSObject<SMNNetworkSecurityProvider> *payloadSecurityProvider;
@property (retain) NSString *payloadConnectionValidation;
@property (retain) NSObject<OS_dispatch_semaphore> *payloadChannelRequestSemaphore;
@property unsigned long long remoteSystemType;
@property int localInterfaceType;
@property (retain) NSString *localInterfaceName;
@property int remoteInterfaceType;
@property (retain) NSString *remoteMACAddress;
@property (retain) NSSet *supportedControlCommands;
@property (retain) NSSet *supportedActionCommands;
@property (retain) NSData *remoteAddressData;
@property (retain) NSArray *remoteAddresses;
@property (retain) NSNumber *connectionTimeout;
@property (retain) NSNumber *samplingTimeout;
@property (retain) NSString *remoteInterfaceName;
@property (readonly) BOOL isEndToEndWireless;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void)destroy;
- (void)registerActivity;
- (void)closeStream:(id)a0;
- (BOOL)isEqual:(id)a0;
- (void)close;
- (void).cxx_destruct;
- (void)startSampling;
- (BOOL)startWithTimeout:(BOOL)a0;
- (BOOL)readCommandFromControl:(unsigned int *)a0 payload:(id *)a1;
- (id)_determineLocalInterface:(int)a0;
- (BOOL)becomeActiveConnection;
- (void)connectPayloadChannelOnPort:(unsigned short)a0 withValidationKey:(id)a1;
- (BOOL)doLegacyControlHandshake:(BOOL)a0;
- (void)doLegacySample;
- (void)externalRegisterActivity;
- (BOOL)handshakeControl;
- (id)initWithSocketFileHandle:(id)a0 forSession:(id)a1 asServer:(BOOL)a2 connectionName:(id)a3 forRemoteSystemType:(unsigned long long)a4;
- (void)initializeControlStream;
- (int)interfaceTypeForInterfaceName:(id)a0;
- (void)muxer:(id)a0 newIncomingStream:(id)a1;
- (void)muxer:(id)a0 streamClosing:(id)a1;
- (void)muxer:(id)a0 wroteDataToStream:(id)a1;
- (void)muxerInterrupted:(id)a0;
- (id)newStreamWithName:(id)a0;
- (void)openPayloadChannel;
- (void)resignActiveConnection;
- (unsigned long long)sampleSizeInMB;
- (BOOL)samplingAfterWaitingForCompletionUpTo:(double)a0;
- (long long)secondsSinceLastActivity;
- (void)startControlMonitor;
- (void)startControlWatchdog;
- (id)validateCommandList:(id)a0;
- (id)validateFeatureList:(id)a0;
- (BOOL)writeCommandToControl:(unsigned int)a0 payload:(id)a1;

@end

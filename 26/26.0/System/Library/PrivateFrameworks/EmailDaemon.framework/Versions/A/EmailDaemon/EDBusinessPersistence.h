@class NSString, EDPersistenceHookRegistry, EDPersistenceDatabase, NSObject;
@protocol OS_dispatch_queue, EDBusinessMetadataProvider;

@interface EDBusinessPersistence : NSObject <EDProtectedDataReconciliationHookResponder, EDPersistenceDatabaseProtectedSchemaProvider> {
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_businessConnectResponseQueue;
    _Atomic BOOL _didTearDown;
}

@property (class, readonly, copy, nonatomic) NSString *businessesTableName;
@property (class, readonly, copy, nonatomic) NSString *businessesDisplayNameColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessesDomainColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessesBrandIDColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessesLocalizedBrandNameColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessAddressesTableName;
@property (class, readonly, copy, nonatomic) NSString *businessAddressesAddressColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessAddressesBusinessColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessAddressesCategoryColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessAddressesLastModifiedColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessAddressesLastBCSSyncColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessCategoriesTableName;
@property (class, readonly, copy, nonatomic) NSString *businessCategoriesBusinessColumnName;
@property (class, readonly, copy, nonatomic) NSString *businessCategoriesCategoryColumnName;

@property (retain, nonatomic) id<EDBusinessMetadataProvider> businessServiceProvider;
@property (retain, nonatomic) EDPersistenceDatabase *database;
@property (readonly, nonatomic) EDPersistenceHookRegistry *hookRegistry;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)log;
+ (id)protectedTablesAndForeignKeysToResolve:(id *)a0;
+ (id)tablesAndForeignKeysToResolve:(id *)a0 associationsToResolve:(id *)a1;
+ (BOOL)_shouldUseSimpleAddressForHighLevelDomain:(id)a0 displayName:(id)a1 grouping:(long long)a2;
+ (id)_brandIDFromInteger:(long long)a0;
+ (id)_commonDomains;
+ (BOOL)_hasCommonDomain:(id)a0;
+ (BOOL)_shouldUseGroupingSimpleAddressForEmailAddress:(id)a0 grouping:(long long)a1;
+ (id)brandIDForResultRow:(id)a0;
+ (id)businessAddressesTableSchema;
+ (id)businessCategoriesTableSchema;
+ (id)businessesTableSchema;

- (id)initWithDatabase:(id)a0 hookRegistry:(id)a1;
- (void)test_tearDown;
- (void).cxx_destruct;
- (id)_localizedStringFromJSONString:(id)a0;
- (long long)_persistedBrandIDForExternalID:(id)a0;
- (id)_addressesNeedingUpdateStatementOnlyCounts:(BOOL)a0;
- (id)_bcsEmailIdentiferForAddress:(id)a0;
- (id)_brandIDForBusinessID:(long long)a0;
- (id)_businessAddressMapWithCategoryOverrideWithConnection:(id)a0;
- (id)_businessExternalIDForAddressID:(long long)a0 expectedGrouping:(long long)a1 connection:(id)a2 error:(id *)a3;
- (id)_businessExternalIDForEmailAddress:(id)a0 addressID:(long long)a1 brandID:(id)a2 grouping:(long long)a3 shouldForceUpdate:(BOOL)a4 businessIDsToCombine:(id *)a5;
- (long long)_businessIDForDomain:(id)a0 displayName:(id)a1 connection:(id)a2;
- (id)_businessIDsForHighLevelDomain:(id)a0 connection:(id)a1;
- (id)_categoryOverridesForBusinessIDs:(id)a0 connection:(id)a1;
- (BOOL)_combineBusinesses:(id)a0 connection:(id)a1 newBusinessID:(long long *)a2;
- (BOOL)_completedBCSSyncforAddressID:(id)a0 connection:(id)a1;
- (BOOL)_deleteBusinessAddressEntryForAddressID:(id)a0 connection:(id)a1;
- (BOOL)_deleteBusinessEntryForBusinessID:(id)a0 connection:(id)a1;
- (id)_existingExternalIDForAddressID:(long long)a0 error:(id *)a1;
- (id)_externalIDForDomain:(id)a0 displayName:(id)a1 brandID:(id)a2 simpleAddress:(id)a3 grouping:(long long)a4;
- (id)_externalIDForPersistedDomain:(id)a0 displayName:(id)a1 brandID:(id)a2 grouping:(long long)a3;
- (id)_externalIDWithCommonPrefixForHighLevelDomain:(id)a0 displayName:(id)a1 businessIDsToCombine:(id *)a2;
- (id)_findExistingBrandIDForBusinessID:(long long)a0 connection:(id)a1;
- (long long)_findExistingBusinessForAddressID:(long long)a0 connection:(id)a1;
- (long long)_findOrCreateBusinessIDForAddress:(id)a0 addressID:(long long)a1 businessMetadata:(id)a2 shouldForceUpdate:(BOOL)a3 connection:(id)a4;
- (id)_groupingTrieForHighLevelDomain:(id)a0;
- (BOOL)_hasCompletedRecentBCSSyncForAddressID:(long long)a0 connection:(id)a1;
- (id)_highLevelDomainsForBusinessIDs:(id)a0;
- (long long)_insertBusinessWithBrandID:(long long)a0 localizedBrandNames:(id)a1 connection:(id)a2;
- (long long)_insertBusinessWithDomain:(id)a0 displayName:(id)a1 connection:(id)a2;
- (BOOL)_insertOrUpdateBusiness:(long long)a0 forAddress:(long long)a1 connection:(id)a2;
- (BOOL)_insertOrUpdateBusinessCategoriesCategoryColumnForBusinessID:(long long)a0 category:(unsigned long long)a1 connection:(id)a2;
- (id)_lastBCSSyncForAddressID:(long long)a0 connection:(id)a1;
- (long long)_persistedBrandIDForString:(id)a0;
- (id)_persistedBrandNamesForDictionary:(id)a0;
- (id)_persistedDisplayNameForExternalID:(id)a0;
- (id)_persistedDomainForExternalID:(id)a0;
- (BOOL)_removeOldBusinessIDs:(id)a0 connection:(id)a1;
- (BOOL)_removeUserOverrideForAddressIDs:(id)a0 timestamp:(id)a1 originator:(unsigned long long)a2 userInitiated:(BOOL)a3 connection:(id)a4;
- (BOOL)_removeUserOverrideForBusinessID:(long long)a0 timestamp:(id)a1 originator:(unsigned long long)a2 userInitiated:(BOOL)a3 connection:(id)a4;
- (void)_reportIncorrectBusinessForAddressID:(long long)a0 businessID:(long long)a1 isBusinessConnectGrouping:(BOOL)a2 fromClassName:(id)a3;
- (BOOL)_setUserOverrideForBusinessID:(long long)a0 category:(unsigned long long)a1 userInitiated:(BOOL)a2 connection:(id)a3 timestamp:(id)a4;
- (BOOL)_updateBrandNamesForBusinessID:(long long)a0 brandNames:(id)a1 connection:(id)a2;
- (BOOL)_updateBusinessAddressesCategoryColumnForAddressIDs:(id)a0 category:(unsigned long long)a1 connection:(id)a2 timestamp:(id)a3;
- (BOOL)_updateBusinessAddressesTableforBusinessID:(id)a0 newBusinessID:(id)a1 connection:(id)a2;
- (BOOL)_updateBusinessIDForAddress:(id)a0 addressID:(long long)a1 businessMetadata:(id)a2 connection:(id)a3;
- (BOOL)_updateDisplayNameForBusinessID:(long long)a0 displayName:(id)a1 connection:(id)a2;
- (void)_verifyBusiness:(long long)a0 connection:(id)a1;
- (id)addressIDsForBusinessID:(long long)a0 connection:(id)a1;
- (void)addressIDsWereDeleted:(id)a0 connection:(id)a1;
- (id)addressesForBusinessID:(long long)a0;
- (id)businessAddressMapWithCategoryOverride;
- (id)businessDisplayNameForBusinessID:(long long)a0;
- (id)businessExternalIDForBusinessID:(long long)a0;
- (id)businessExternalIDForEmailAddress:(id)a0 grouping:(long long)a1;
- (long long)businessIDForAddressID:(long long)a0;
- (long long)businessIDForBusinessExternalID:(id)a0;
- (id)categoryTypeForAddressID:(long long)a0;
- (id)categoryTypeForBusinessID:(long long)a0;
- (unsigned long long)countOfAddressesNeedingUpdate;
- (void)countOfUserOverridesWithCompletionHandler:(id /* block */)a0;
- (void)fetchBusinessMetadataForAddresses:(id)a0 completionHandler:(id /* block */)a1;
- (long long)findOrCreateBusinessIDForAddress:(id)a0 addressID:(long long)a1 connection:(id)a2 businessMetadataNeedsRefreshing:(BOOL *)a3;
- (id)initWithDatabase:(id)a0 hookRegistry:(id)a1 businessServiceProvider:(id)a2;
- (void)insertOrUpdateUserOverrideForAddressIDs:(id)a0 category:(unsigned long long)a1 timestamp:(id)a2 originator:(unsigned long long)a3;
- (void)insertOrUpdateUserOverrideForBusinessIDs:(id)a0 category:(unsigned long long)a1 userInitiated:(BOOL)a2 timestamp:(id)a3;
- (void)iterateAddressesNeedingUpdateWithCancelationToken:(id)a0 handler:(id /* block */)a1;
- (id)lastModifiedDateForAddressID:(long long)a0;
- (void)persistenceDidReconcileProtectedData;
- (void)persistenceWillAddProtectedDatabaseIDsFromJournal:(id)a0 andReplaceJournalDatabaseIDsWithProtectedDatabaseIDs:(id)a1 forTable:(id)a2;
- (void)removeAllUserOverrides;
- (void)removeUserOverrideForAddressIDs:(id)a0 timestamp:(id)a1 originator:(unsigned long long)a2 userInitiated:(BOOL)a3;
- (void)removeUserOverridesForBusinessIDs:(id)a0 timestamp:(id)a1 originator:(unsigned long long)a2 userInitiated:(BOOL)a3;
- (void)repopulateBusinessesTables;
- (void)reportIncorrectBusinessForAddress:(id)a0 isBusinessConnectGrouping:(BOOL)a1 fromClassName:(id)a2;
- (id)updatedCategoryForAddressID:(long long)a0 fromCategorizationResult:(id)a1;

@end

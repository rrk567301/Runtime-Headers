@class ResourceHint, NSLock, NSDate, NSDictionary, NSObject, PowerUIMLTwoStageModelPredictor, PowerUIDesktopModePredictor, NSDistributedNotificationCenter, PowerUISleepWakeMonitor, NSString, PowerUITrialManager, _CDContextualKeyPath, NSXPCListener, PowerUIBatteryMitigationManager, NSNumber, NSArray, PowerUIBDCDataManager, PowerUIChargingController, PowerUIAnalyticsManager;
@protocol OS_os_log, OS_xpc_object, OS_dispatch_source, OS_dispatch_queue, _CDLocalContext;

@interface PowerUISmartChargeManager : NSObject <NSXPCListenerDelegate, PowerUISignalMonitorDelegate, PowerUISmartChargeManagingPrivate, PowerUISmartChargeManaging, PowerUINotificationManagerClient>

@property (retain, nonatomic) id<_CDLocalContext> context;
@property (retain, nonatomic) NSString *defaultsDomain;
@property (copy, nonatomic) id /* block */ beforeBatteryCallback;
@property (copy, nonatomic) id /* block */ afterBatteryCallback;
@property (retain, nonatomic) _CDContextualKeyPath *checkpointKP;
@property (retain, nonatomic) NSDistributedNotificationCenter *notificationCenter;
@property (retain, nonatomic) NSObject<OS_os_log> *log;
@property (retain, nonatomic) NSObject<OS_os_log> *verboseLog;
@property (retain, nonatomic) NSObject<OS_os_log> *mcmLog;
@property (nonatomic) unsigned long long checkpoint;
@property (retain, nonatomic) ResourceHint *resourceHint;
@property (nonatomic) unsigned int service;
@property (nonatomic) unsigned int assertionID;
@property (nonatomic) unsigned long long currentState;
@property (nonatomic) BOOL enabled;
@property (retain) NSDate *disabledUntilDate;
@property (nonatomic) BOOL temporarilyDisabled;
@property (retain, nonatomic) NSDate *_fullChargeDeadline;
@property (retain, nonatomic) NSDate *uiDeadline;
@property (retain, nonatomic) NSDictionary *signalDeadline;
@property (retain, nonatomic) NSDate *lastComputedSignalDeadline;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *xpcCallbackQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *timer;
@property (nonatomic) int powerlogToken;
@property (retain, nonatomic) NSObject<OS_xpc_object> *bdcConnection;
@property (nonatomic) BOOL _hasLegitimateUsage;
@property (nonatomic) int lastBatteryLevel;
@property (nonatomic) int lastPluginStatus;
@property (nonatomic) int lastFullyCharged;
@property (nonatomic) BOOL lastChargerWasWireless;
@property (retain, nonatomic) NSDate *lastInterruptedTime;
@property (retain, nonatomic) NSDate *potentialUnplugDate;
@property (retain, nonatomic) NSNumber *engagementsLastMonthBucket;
@property (retain, nonatomic) NSNumber *lastReportedNumberOfPluginEvents;
@property (retain, nonatomic) NSNumber *medianPluginLength;
@property (nonatomic) double empiricalTimeToFullChargeDurationMinutes;
@property (nonatomic) long long deadlineSignalID;
@property (nonatomic) BOOL signalsIgnored;
@property (nonatomic) double debounceOverride;
@property (nonatomic) unsigned long long predictorType;
@property (nonatomic) long long previousDecisionMakerID;
@property (retain, nonatomic) NSNumber *lastNonEngagementSignalID;
@property (retain, nonatomic) NSDate *previousDecisionMakerDate;
@property (retain, nonatomic) PowerUIMLTwoStageModelPredictor *modelTwoStagePredictor;
@property (retain, nonatomic) PowerUIDesktopModePredictor *modelDesktopModePredictor;
@property (retain, nonatomic) PowerUISleepWakeMonitor *sleepWakeMonitor;
@property (retain, nonatomic) NSArray *monitors;
@property (retain) NSDictionary *powerLogStatus;
@property (retain) NSDictionary *previousPowerLogStatus;
@property (retain) NSDate *engagementTimeOverride;
@property (retain) NSDate *fullChargeDeadlineOverride;
@property (retain) NSDate *repeatEngagementOverrideEndDate;
@property (nonatomic) BOOL overrideAllSignals;
@property (nonatomic) BOOL encounteredTLCDuringTopOff;
@property (nonatomic) BOOL isDesktopDevice;
@property (retain, nonatomic) NSDate *lastDesktopModeChangeDate;
@property (retain, nonatomic) PowerUIBatteryMitigationManager *batteryMitigationManager;
@property (retain, nonatomic) PowerUIBDCDataManager *bdcDataManager;
@property (retain, nonatomic) NSXPCListener *listener;
@property (retain, nonatomic) PowerUITrialManager *trialManager;
@property BOOL remoteOBCEngaged;
@property (retain, nonatomic) PowerUIChargingController *chargingController;
@property (retain, nonatomic) PowerUIAnalyticsManager *analyticsManager;
@property (nonatomic) BOOL OBCReengagementEvaluated;
@property (nonatomic) unsigned long long deocFeatureState;
@property (retain, nonatomic) NSLock *deocCurrentStatusLock;
@property (nonatomic) unsigned long long manualChargeLimitStatus;
@property (nonatomic) BOOL manualChargeLimitWasEverEnabled;
@property struct __CFString { } *chargeLimitToken;
@property unsigned char mclTargetSoC;
@property unsigned long long recommendedLimit;
@property (retain) NSDate *mclDisabledUntilDate;
@property (nonatomic) BOOL becameOBCEligible;
@property (nonatomic) BOOL reachedTargetSoC;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)manager;

- (void)enableMCL;
- (void)resetState;
- (void)addPowerLogEventForCheckpoint:(unsigned long long)a0 decisionSignalID:(id)a1 decisionDate:(id)a2;
- (id)lastAcquiredLocation;
- (void)updateTimeLineForCurrentBatteryLevel:(int)a0 withIsExternalConnected:(BOOL)a1 forDate:(id)a2;
- (BOOL)isDeviceWithLegitimateUsage;
- (BOOL)listener:(id)a0 shouldAcceptNewConnection:(id)a1;
- (void)registerBDCXPC;
- (void)engageFrom:(id)a0 until:(id)a1 repeatUntil:(id)a2 overrideAllSignals:(BOOL)a3 withHandler:(id /* block */)a4;
- (id)checkpointNameFromCheckpoint:(unsigned long long)a0;
- (void)handleAlarmEvent:(id)a0;
- (id)desktopModeOverride;
- (BOOL)shouldOBCRoutineReengage;
- (void)handleXPCActivityOnBoot;
- (void)monitor:(id)a0 maySuggestNewFullChargeDeadline:(id)a1;
- (void)requestPeriodicCheck;
- (void)handleUnplugAtDate:(id)a0 withBatteryLevel:(int)a1;
- (void)reportMonthlyData;
- (void)setMCLLimit:(unsigned char)a0;
- (void)handleInternalCarryPromptEvent;
- (void)disableDEoC;
- (void)powerLogStatusWithHandler:(id /* block */)a0;
- (double)totalTopOffDurationWithTopOffStartCheckpoints:(id)a0 withFullyChargedCheckpoints:(id)a1 withTopOffStart:(id)a2 withFullyChargedDate:(id)a3 withPluginEnd:(id)a4;
- (void)setDate:(id)a0 forPreferenceKey:(id)a1;
- (void)updateCurrentDEoCStatusAsGaugingMitigated;
- (BOOL)deviceWasRecentlyConnectedToCharger;
- (id)stringFromInterval:(id)a0;
- (id)constructAnalyticsStatus;
- (void)disableMCL;
- (void)recordAnalytics;
- (void)updateSleepWakeNotificationsState;
- (void)listMonitorSignals;
- (void)updateNotificationSettings:(BOOL)a0;
- (void)isDEoCSupportedWithHandler:(id /* block */)a0;
- (id)shouldDisableChargingAsOfDate:(id)a0 atBatteryLevel:(unsigned long long)a1 overrideAllSignals:(BOOL)a2 withPredictor:(id)a3 bypassSaved:(BOOL)a4;
- (BOOL)deviceHasEnoughPluggedInTime;
- (void)clearPluginTimeline;
- (void)isDEoCCurrentlyEnabledWithHandler:(id /* block */)a0;
- (void)clearAllNotificationState;
- (void)client:(id)a0 setMCLLimit:(unsigned char)a1 withHandler:(id /* block */)a2;
- (void)evaluateIfDEoCDevice;
- (void)enableCharging;
- (id)readStringForPreferenceKey:(id)a0;
- (void)stopAllMonitoring;
- (double)durationToFullChargeFromBatteryLevel:(unsigned long long)a0 includeTLCDelay:(BOOL)a1;
- (unsigned long long)currentDecisionMaker;
- (void)updateDecisionMakerID:(long long)a0 withCheckpoint:(unsigned long long)a1;
- (BOOL)isExternalConnected;
- (void)legacy_isOBCEngagedWithHandler:(id /* block */)a0;
- (BOOL)isDEoCSupported;
- (id)ttrURLforBatteryLevel:(int)a0 withDate:(id)a1;
- (void)addEngagementFromDate:(id)a0 withDuration:(double)a1;
- (BOOL)isMCLSupported;
- (void)cleanupOverrides;
- (id)eligibleEngagementIntervalFromTimelineEvents:(id)a0;
- (id)chargePrediction:(unsigned long long)a0 fullyCharged:(BOOL)a1 previousCheckpoint:(unsigned long long)a2 predictor:(unsigned long long)a3;
- (void)enableDEoC;
- (id)recentEngagements;
- (void)handleTopOffSupervisorEvent;
- (void)recomputeEmpiricalTimeToFullCharge;
- (void)evaluateChargeLimitRecommendationForced:(BOOL)a0;
- (unsigned long long)currentModeOfOperation;
- (void)recordDEoCAnalytics:(id)a0;
- (id)dailyStatsFromLastReported:(id)a0;
- (void)tmpDisableMCLViaClient:(id)a0 withHandler:(id /* block */)a1;
- (void)isMCLSupportedWithHandler:(id /* block */)a0;
- (id)readNumberForPreferenceKey:(id)a0;
- (id)defaultDateToDisableUntilGivenDate:(id)a0;
- (void)client:(id)a0 setState:(unsigned long long)a1 withHandler:(id /* block */)a2;
- (double)idleDurationWithEngagedCheckpoints:(id)a0 withTopOffStartCheckpoints:(id)a1 withDisabledCheckpoints:(id)a2 withTopOffStart:(id)a3 withIdleStart:(id)a4 withTemporarilyDisabledStart:(id)a5 withPluginEnd:(id)a6;
- (void)checkWhetherMCLTempDisablementCanBeClearedOnPlugin:(BOOL)a0;
- (void)createPowerAssertion;
- (void)isOBCEngagedOrChargeLimitedWithHandler:(id /* block */)a0;
- (id)computeSignalDeadline;
- (void)powerStateChangedCallback;
- (void)handleNewBatteryLevelForMCL:(int)a0 whileExternalConnected:(BOOL)a1;
- (void)resetDeviceHasLegitimateUsage;
- (void)_submitEngagementEventWithBatteryLevel:(id)a0 eventType:(int)a1;
- (void)clearManualChargeLimit;
- (void)sendDEoCAnalyticsToCA:(id)a0;
- (void)client:(id)a0 setDEoCState:(unsigned long long)a1 withHandler:(id /* block */)a2;
- (void)evaluateIfDesktopDeviceForced:(BOOL)a0;
- (unsigned char)getUISoCChargeLimit;
- (void)isOBCSupportedWithHandler:(id /* block */)a0;
- (void)promptBDCToQueryCurrentState;
- (void)evaluateIfDesktopDevice;
- (id)getCurrentSystemChargeLimit;
- (id)readDateForPreferenceKey:(id)a0;
- (BOOL)shouldDisableChargingOverrideModel:(unsigned long long)a0;
- (void)setDesktopMode:(id)a0 withHandler:(id /* block */)a1;
- (void)forceDEoCReevaluation;
- (id)readAndRemoveRecentEngagements;
- (void)currentRecommendedChargeLimitWithHandler:(id /* block */)a0;
- (void)smartChargingUIStateWithHandler:(id /* block */)a0;
- (void)handleNewPluginWithBatteryLevel:(int)a0 pluginDate:(id)a1;
- (void)incomingBDCRequest:(id)a0;
- (void)currentChargeLimitWithHandler:(id /* block */)a0;
- (void)fullChargeDeadlineWithHandler:(id /* block */)a0;
- (unsigned long long)mostRecentOBCModeOfoperationFromTimeline;
- (void)recallPeriodicCheck;
- (void)requestPeriodicCheckWithDuration:(double)a0 withAlarmKey:(const char *)a1;
- (void)reportBatteryHealthMetrics;
- (void)disableCharging;
- (id)genericOBCFailureNotification:(id)a0;
- (void)reportAggDKeys:(id)a0;
- (id)constructAnalyticsStatusFromEvents:(id)a0;
- (void)resetEngagementOverrideWithHandler:(id /* block */)a0;
- (void)isMCLCurrentlyEnabledWithHandler:(id /* block */)a0;
- (void)setNumber:(id)a0 forPreferenceKey:(id)a1;
- (void)handleTopOffSupervisorEventInternal;
- (void)pluginTimelineAddEvent:(id)a0 atDate:(id)a1 withBatteryLevel:(unsigned long long)a2;
- (unsigned long long)projectedBatteryLevelForDuration:(unsigned long long)a0 withInitialBatteryLevel:(unsigned long long)a1;
- (id)updateAnalyticsWithPluginMetrics:(id)a0 withBatteryLevel:(int)a1;
- (void)handleNotificationResponse:(id)a0;
- (void)resetDevelopmentMode;
- (void)startAllMonitoring;
- (void)isSmartChargingCurrentlyEnabledWithHandler:(id /* block */)a0;
- (void)updateResourceHint;
- (void)handleCallback:(BOOL)a0;
- (void)simulateCurrentOutputAsOfDate:(id)a0 overrideAllSignals:(BOOL)a1 withHandler:(id /* block */)a2;
- (void)statusWithHandler:(id /* block */)a0;
- (void)setTemporarilyDisabled:(BOOL)a0 until:(id)a1;
- (void)getDEoCPredictionsWithHandler:(id /* block */)a0;
- (void)currentLeewayWithHandler:(id /* block */)a0;
- (void)setString:(id)a0 forPreferenceKey:(id)a1;
- (id)shouldDisableChargingAtBatteryLevel:(unsigned long long)a0 withPredictor:(id)a1;
- (double)durationToFullChargeFromBatteryLevel:(unsigned long long)a0;
- (void)sendChargeLimitRecommendationAnalytics;
- (void)postOBCNotificationWithTopOff:(BOOL)a0;
- (id)timeStringFromDate:(id)a0;
- (BOOL)deviceHasOverriddenLegitimateUsageDetection;
- (void)sendBDCData:(id)a0 withMessage:(id)a1;
- (void)dispatchAlarmAfter:(long long)a0 withName:(id)a1;
- (id)setFullChargeDeadline:(id)a0;
- (void)tempDisableMCL;
- (id)stringFromState:(unsigned long long)a0;
- (id)stringFromDecisionMaker:(long long)a0 decisionDate:(id)a1;
- (id)constructDailyStats:(id)a0;
- (void)updateChargingTimeSaved;
- (void)handleDebounceTimerEvent;
- (void)client:(id)a0 getMCLLimitWithHandler:(id /* block */)a1;
- (id)uiDeadlineFromFullChargeDeadline:(id)a0 atDate:(id)a1;
- (void)setCheckpoint:(unsigned long long)a0 withSelector:(SEL)a1;
- (id)initWithDefaultsDomain:(id)a0 contextStore:(id)a1 beforeHandlingBatteryChangeCallback:(id /* block */)a2 afterHandlingBatteryChangeCallback:(id /* block */)a3;
- (void)cacheCurrentDEoCBehaviorForced:(BOOL)a0;
- (void)engageManualChargeLimit;
- (void)resetDesktopModeWithHandler:(id /* block */)a0;
- (id)smartTopOffFailureNotificationAtBatteryLevel:(int)a0 withDate:(id)a1;
- (BOOL)watchIsInternalAndCarrySwitchDisabled;
- (void)sendLegacyData;
- (void)handleCallback;
- (id)fullChargeDeadline;
- (void)handleNewBatteryLevel:(int)a0 whileExternalConnected:(BOOL)a1 fullyCharged:(BOOL)a2;
- (void)monitorMayInvalidateDEoCCache:(id)a0;
- (void)setCheckpoint:(unsigned long long)a0 withSelector:(SEL)a1 forceWrite:(BOOL)a2;
- (id)adjustedFullChargeDeadlineWithSignals:(id)a0 withDesktopMode:(BOOL)a1 withFullChargeDeadline:(id)a2 withResult:(id)a3;
- (void)enterDevelopmentMode;
- (double)periodicCheckDuration;
- (void)sendHistoricalDEoCEngagementEventToCA:(id)a0;
- (unsigned long long)currentChargeLimit;
- (void).cxx_destruct;
- (void)loadDefaults;
- (void)releasePowerAssertion;
- (double)totalTemporarilyDisabledHours:(id)a0 withEngagements:(id)a1 withPluginEnd:(id)a2;
- (id)ttrURLforGenericFailure:(id)a0;
- (void)loadCheckpoint;
- (unsigned long long)currentRecommendedChargeLimit;

@end

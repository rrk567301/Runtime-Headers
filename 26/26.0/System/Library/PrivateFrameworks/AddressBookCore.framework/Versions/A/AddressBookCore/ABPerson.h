@class NSString;

@interface ABPerson : ABRecord

@property (copy) NSString *linkId;
@property (copy) NSString *phonemeData;
@property (copy) NSString *downtimeWhitelist;
@property BOOL isPreferredForName;
@property BOOL isPreferredForPhoto;

+ (id)vCardPrivateFields;
+ (BOOL)includeNotesInVCards;
+ (BOOL)includePhotosInVCards;
+ (id)os_log;
+ (id)_netInfoImageData;
+ (id)_pathForImageTaggedByEmails:(id)a0;
+ (void)addCustomPropertiesAndTypesFromAddressBook:(id)a0 toAddressBook:(id)a1;
+ (long long)addPropertiesAndTypes:(id)a0;
+ (long long)addPropertiesAndTypes:(id)a0 withAddressBook:(id)a1;
+ (long long)addPropertiesAndTypes:(id)a0 withAddressBook:(id)a1 acquireLock:(BOOL)a2;
+ (long long)addPropertiesAndTypes:(id)a0 withAddressBook:(id)a1 acquireLock:(BOOL)a2 save:(BOOL)a3;
+ (id)builtInLabels;
+ (id)builtInLabelsForProperty:(id)a0;
+ (id)builtInProperties;
+ (void)cancelLoadingImageDataForTag:(long long)a0;
+ (void)clearPrivateFields;
+ (void)eachPrivateField:(id /* block */)a0;
+ (void)extractProperty:(id *)a0 identifier:(id *)a1 fromField:(id)a2;
+ (id)initialFieldsForProperty:(id)a0;
+ (id)instantMessageProperties;
+ (id)instantMessageServiceKeyToPropertyMapping;
+ (id)instantMessageServiceKeys;
+ (id)makeBuiltInProperties;
+ (id)makeLinkIdentifier;
+ (id)peopleFromVCardData:(id)a0;
+ (id)personFromDictionary:(id)a0;
+ (id)personFromDictionary:(id)a0 addressBook:(id)a1 skipUnknownProperties:(BOOL)a2 generateMultiValueIDs:(BOOL)a3;
+ (id)personWithVCardData:(id)a0 orFetchedFromAddressBook:(id)a1;
+ (id)predicateForLinkId:(id)a0;
+ (BOOL)privateVCardEnabled;
+ (id)recordIdentifierFromVCard:(id)a0;
+ (long long)removeProperties:(id)a0;
+ (id)searchElementForProperty:(id)a0 label:(id)a1 key:(id)a2 value:(id)a3 comparison:(long long)a4;
+ (void)setIncludeNotesInVCards:(BOOL)a0;
+ (void)setIncludePhotosInVCards:(BOOL)a0;
+ (void)setPrivateVCardEnabled:(BOOL)a0;
+ (void)setVCardField:(id)a0 isPrivate:(BOOL)a1;
+ (BOOL)vcardFieldisPrivate:(id)a0;

- (BOOL)isTransient;
- (id)_image;
- (BOOL)isPersisted;
- (id)displayName;
- (id)imageData;
- (BOOL)setImageData:(id)a0;
- (id)compositeName;
- (BOOL)hasCustomImage;
- (long long)loadImageDataWithCompletionHandler:(id /* block */)a0;
- (id)imageDirectory;
- (id)memojiMetadata;
- (id)parentGroups;
- (id)ringtone;
- (BOOL)setImageData:(id)a0 forReference:(id)a1 clipRects:(id)a2;
- (void)setMemojiMetadata:(id)a0;
- (void)setRingtone:(id)a0;
- (void)setTexttone:(id)a0;
- (id)stringForIndexing;
- (id)texttone;
- (id)firstPropertyWithNonEmptyValue:(id)a0;
- (void)linkWithPerson:(id)a0;
- (id)_21vCardRepresentationAsData;
- (BOOL)_propertyIsIdentical:(id)a0 forPerson:(id)a1;
- (long long)beginLoadingImageDataForClient:(id)a0;
- (id)imageReferences;
- (id)largeImageClippingRectIDOfType:(id)a0;
- (id)nts_phonemeData;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })primitiveLargeImageClippingRect;
- (void)updateLargeClippingRectIfNeeded;
- (long long)_beginLoadingImageDataForClient:(id)a0;
- (id)_compositeNameIncludingAuxiliaryElements:(BOOL)a0;
- (id)_customImageData;
- (id)_fullName;
- (id)_fullNameIncludingAuxiliaryElements:(BOOL)a0;
- (id)_fullPhoneticName;
- (id)_imageOfKind:(id)a0;
- (BOOL)_isCompany;
- (BOOL)_isIgnoredPropertyForMerging:(id)a0;
- (BOOL)_isLastNameFirst;
- (BOOL)_isMe;
- (id)_mapURLForAddressWithId:(id)a0;
- (BOOL)_matchAndMerge_MergePerson:(id)a0;
- (BOOL)_mergeProperty:(id)a0 forPerson:(id)a1;
- (BOOL)_propertyHasChanged:(id)a0;
- (id)_realCompositeName;
- (id)_realCompositeNameIncludingAuxiliaryElements:(BOOL)a0;
- (BOOL)_requiresSeparateBirthdayCalendar;
- (BOOL)_shouldAssignNewDatabaseImplToAccount;
- (BOOL)_takeGroupMembershipsFromPeople:(id)a0;
- (BOOL)_takeGroupMembershipsFromPerson:(id)a0;
- (id)_vCardRepresentationAsString;
- (id)_vCardRepresentationAsStringIncludeNotes:(BOOL)a0 includePhotos:(BOOL)a1;
- (id)_vCardRepresentationAsStringUsingPreferencesForOptions;
- (id)_vCardRepresentationAsStringWithOptions:(id)a0;
- (id)alternateName;
- (id)archivableDataFromCropRects:(id)a0;
- (id)availableLabelsForProperty:(id)a0;
- (BOOL)canEditInCardView;
- (BOOL)canSetProperty:(id)a0 error:(id *)a1;
- (BOOL)clearAllClippingRects;
- (id)clipRectInfoForLargeImageClippingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)clippingRectParametersForAllTypes;
- (id)clippingRectParametersForType:(id)a0;
- (id)createAlternateName;
- (id)createFirstLastSorting:(BOOL)a0 part1:(BOOL)a1;
- (id)cropRectsFromArchivableData:(id)a0;
- (id)encodedDataForValue:(id)a0 charsetName:(id *)a1;
- (BOOL)hasCustomImageOfKind:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageClippingRectOfType:(id)a0 imageKind:(id)a1;
- (id)imageClippingRectTypesOfKind:(id)a0;
- (id)imageClippingRectsOfKind:(id)a0;
- (id)imageDataFromLargeImageByApplyingClippingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)imageDataFromLargeImageByApplyingClippingRectOfType:(id)a0;
- (id)imageDataOfKind:(id)a0;
- (id)imageMemento;
- (id)imageReference;
- (void)importPerson:(id)a0;
- (id)initWithVCardRepresentation:(id)a0;
- (id)initWithVCardRepresentation:(id)a0 addressBook:(id)a1;
- (BOOL)isDataCachedForImageReference:(id)a0;
- (BOOL)isEmptyPerson;
- (BOOL)isEmptyPersonIgnoringProperties:(id)a0;
- (BOOL)isGuardianWhitelisted;
- (BOOL)isValidCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forImage:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })largeImageClippingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fittingImageData:(id)a1;
- (id)largeImageClippingRectID;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })largeImageClippingRectOfType:(id)a0;
- (id)largeImageClippingRectTypes;
- (id)largeImageData;
- (id)largeImageHash;
- (id)largeImageHashOfType:(id)a0;
- (id)linkedPeople;
- (id)linkedPeopleSortedForPhotos;
- (id)linkedPeopleWithSortDescriptors:(id)a0;
- (BOOL)mergeImageTypeFromPerson:(id)a0;
- (BOOL)mergeLargeImageDataAndClipRectFromPerson:(id)a0;
- (BOOL)mergeLargerImageFromPerson:(id)a0;
- (BOOL)mergeMemojiMetadataFromPerson:(id)a0;
- (void)mergePerson:(id)a0;
- (BOOL)mergeThumbnailImageDataFromPerson:(id)a0;
- (id)nts_AlternateName;
- (void)nts_CascadeRemove;
- (id)nts_CustomImageData;
- (BOOL)nts_SetImageData:(id)a0 kind:(id)a1;
- (id)nts_StringForIndexing;
- (id)nts_ValueForProperty:(id)a0;
- (id)nts__RealCompositeName;
- (id)nts__fullName;
- (id)nts__fullNameIncludingAuxiliaryElements:(BOOL)a0;
- (id)nts__fullPhoneticName;
- (BOOL)nts__isCompany;
- (BOOL)nts__isLastNameFirst;
- (void)nts_addPropertyValueToArchive:(id)a0 forPropertyKey:(id)a1;
- (BOOL)nts_canRemove;
- (BOOL)nts_computeIsReadOnly;
- (id)nts_coreDataFullNameIncludingAuxiliaryElements:(BOOL)a0;
- (id)nts_downtimeWhitelist;
- (void)nts_importSingleValue:(id)a0 fromArchive:(id)a1 forPropertyKey:(id)a2;
- (id)nts_libraryImageData;
- (id)nts_note;
- (id)nts_ringtone;
- (void)nts_setDowntimeWhitelist:(id)a0;
- (void)nts_setPhonemeData:(id)a0;
- (void)nts_setRingtone:(id)a0;
- (void)nts_setTexttone:(id)a0;
- (id)nts_texttone;
- (id)photoHelper;
- (void)populateWithDictionary:(id)a0 skipUnknownProperties:(BOOL)a1 generateMultiValueIDs:(BOOL)a2 recordIsNew:(BOOL)a3;
- (BOOL)removeExtendedAttributesWithKeys:(id)a0 fromFile:(id)a1;
- (void)removeImageReference:(id)a0;
- (void)resetWithDictionary:(id)a0 skipUnknownProperties:(BOOL)a1 generateMultiValueIDs:(BOOL)a2;
- (BOOL)setClippingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forKey:(id)a1 onFile:(id)a2;
- (BOOL)setHashOfData:(id)a0 forKey:(id)a1 onFile:(id)a2;
- (BOOL)setIdentifier:(id)a0 forKey:(id)a1 onFile:(id)a2;
- (BOOL)setImageData:(id)a0 forReference:(id)a1;
- (BOOL)setImageData:(id)a0 kind:(id)a1;
- (void)setImageFromMemento:(id)a0;
- (BOOL)setLargeImageClippingRect:(id)a0;
- (void)setLargeImageClippingRectID:(id)a0;
- (BOOL)setLargeImageData:(id)a0;
- (void)setLargeImageHash:(id)a0;
- (void)setPrimitiveLargeImageClippingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)similarNameForHashing;
- (id)stringForXcode;
- (id)unifiedPerson;
- (id)unifiedValueForProperty:(id)a0;
- (void)unlink;
- (id)vCardRepresentation;
- (id)valueSanitizer;

@end

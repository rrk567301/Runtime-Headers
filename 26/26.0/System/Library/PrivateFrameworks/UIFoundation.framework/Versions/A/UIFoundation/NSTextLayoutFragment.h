@class NSTextStorage, NSTextElement, NSMutableDictionary, _NSTextAttachmentLayoutContext, NSDictionary, NSTextContainer, _NSTextAttributeStorage, NSMapTable, NSTextRange, NSLayoutManager, NSString, NSSet, NSTextLayoutManager, NSTextAnimationContext, NSOperationQueue, NSArray, NSTextParagraph;
@protocol NSTextLocation, NSTextAnimationKeyframe;

@interface NSTextLayoutFragment : NSObject <NSCoreTypesetterDelegateInternal, __NSTextRunStorageDataSource, NSSecureCoding> {
    NSTextLayoutManager *_textLayoutManager;
    NSTextElement *_textElement;
    NSTextRange *_rangeInElement;
    NSTextRange *_contentRange;
    _NSTextAttributeStorage *_renderingAttributesTable;
    long long _offsetFromElementLocation;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _layoutFragmentFrame;
    NSMutableDictionary *_truncationTokenTable;
    BOOL _isTextParagraph;
    struct { NSTextAnimationContext *_effectiveAnimationContext; unsigned long long _components; unsigned long long _exclusiveComponents; union { struct _NSRange { unsigned long long location; unsigned long long length; } _inline[5]; struct _NSRange *_rangesPointer; } _ranges; BOOL _inlineAnimationRanges; } _textAnimationContextState;
    NSTextContainer *_textContainerForAnchoredAttachmentViewProviderCache;
    NSMapTable *_anchoredAttachmentViewProviders;
    struct _NSRange { unsigned long long location; unsigned long long length; } _characterRange;
    unsigned long long _sourceVerticalDelta;
    unsigned long long _sourceRangeDelta;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _sourceBoundingRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _destinationBoundingRect;
    unsigned long long _animationType;
    NSLayoutManager *_destinationLayoutManager;
    NSTextStorage *_destinationTextStorage;
    double _destinationVerticalDelta;
    struct _NSRange { unsigned long long location; unsigned long long length; } _destinationGlyphRange;
    NSLayoutManager *_layoutManager;
}

@property (class, readonly) NSSet *_validCoreTextRenderingAttributes;
@property (class, readonly) BOOL supportsSecureCoding;

@property NSLayoutManager *destinationLayoutManager;
@property (retain) NSTextStorage *destinationTextStorage;
@property double destinationVerticalDelta;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } destinationGlyphRange;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } destinationBoundingRect;
@property (copy) NSArray *textLineFragments;
@property (retain) NSArray *textLineFragmentsExcludingExtra;
@property unsigned long long state;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } layoutFragmentFrame;
@property (getter=_isRenderingAttributesValidated) BOOL _renderingAttributesValidated;
@property BOOL rendersTextCorrectionMarkers;
@property (readonly) NSTextParagraph *textParagraph;
@property (retain) _NSTextAttachmentLayoutContext *textAttachmentLayoutContext;
@property BOOL hasPartialLayout;
@property (copy) NSDictionary *extraLineFragmentAttributes;
@property (readonly) NSArray *truncatedRanges;
@property (retain) id<NSTextAnimationKeyframe> keyframe;
@property (copy) NSArray *forcedLineBreaks;
@property struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _boundingRectForAnchoredAttachments;
@property (readonly, weak) NSTextLayoutManager *textLayoutManager;
@property (readonly, weak) NSTextElement *textElement;
@property (readonly) NSTextRange *rangeInElement;
@property (retain) NSOperationQueue *layoutQueue;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } renderingSurfaceBounds;
@property (readonly) double leadingPadding;
@property (readonly) double trailingPadding;
@property (readonly) double topMargin;
@property (readonly) double bottomMargin;
@property (readonly, copy) NSArray *textAttachmentViewProviders;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, getter=isCountableDataSource) BOOL countableDataSource;
@property (readonly) id<NSTextLocation> baseLocation;

+ (BOOL)coordinateSystemCompatibilityFor2022AndEarlierSDKEnabled;
+ (id)layoutFragmentQueue;

- (id)layoutManager;
- (void)_layout;
- (long long)_baseWritingDirection;
- (void)setLayoutPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })layoutSize;
- (void)invalidateRenderingAttributesForTextRange:(id)a0;
- (unsigned long long)animationType;
- (long long)offsetFromLocation:(id)a0 toLocation:(id)a1;
- (void)invalidateLayout;
- (id)_textAttributesAffectingLayout;
- (id)textLineFragmentForVerticalOffset:(double)a0 requiresExactMatch:(BOOL)a1;
- (void)setTextLayoutManager:(id)a0;
- (void)_setup;
- (void)dealloc;
- (id)textLayoutManager;
- (BOOL)_isEnumerationGap;
- (void)_configureForTextAnimationContext:(id)a0;
- (void)enumerateViewportElementsFromLocation:(id)a0 options:(long long)a1 usingBlock:(id /* block */)a2;
- (void)layout;
- (id)locationFromLocation:(id)a0 withOffset:(long long)a1;
- (id)attributedStringForTruncatedRange:(id)a0 attributes:(id)a1;
- (id)textAttachmentViewProviderForTextParagraphAnchoredAttachment:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })destinationBoundingRect;
- (id)representedRange;
- (struct CGPoint { double x0; double x1; })layoutFragmentFrameOrigin;
- (void)setLayoutFragmentFrameOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)encodeWithCoder:(id)a0;
- (void)enumerateRenderingAttributesFromLocation:(id)a0 reverse:(BOOL)a1 usingBlock:(id /* block */)a2;
- (void)_setupResolvedTextAttachmentFrames;
- (void)estimateSize;
- (void)_notifyTextLayoutManagerAboutTextAttachmentInvalidation;
- (const char *)_bidiLevelsAndResolvedBaseWritingDirectionPointer:(out long long *)a0;
- (struct CGPoint { double x0; double x1; })layoutPoint;
- (BOOL)supportsSubelements;
- (id)_coreTextAttributes;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sourceBoundingRect;
- (id)_createTruncatedTextRangesFromRanges:(id)a0 characterIndexDelta:(long long)a1;
- (id)init;
- (id)anchoredTextAttachments;
- (id)coreTypesetter:(id)a0 attributedStringForTruncatedCharacterRange:(inout struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1 attributes:(id)a2 originalLineRef:(struct __CTLine { } *)a3;
- (void)drawAtPoint:(struct CGPoint { double x0; double x1; })a0 contentType:(unsigned long long)a1;
- (void)removeRenderingAttribute:(id)a0 forTextRange:(id)a1;
- (id)_layoutInfoForTextAttachmentAtLocation:(id)a0;
- (void)drawAtPoint:(struct CGPoint { double x0; double x1; })a0 inContext:(struct CGContext { } *)a1;
- (void)setRenderingAttributes:(id)a0 forTextRange:(id)a1;
- (void)_resetLayoutFragmentFrame;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })characterRange;
- (void)setTextElement:(id)a0;
- (id)textAttachmentViewProviderForLocation:(id)a0;
- (id)textLineFragmentForTextLocation:(id)a0 isUpstreamAffinity:(BOOL)a1;
- (void)drawAtPoint:(struct CGPoint { double x0; double x1; })a0 context:(struct CGContext { } *)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForTextAttachmentAtLocation:(id)a0;
- (void)layoutManagerDidSetTemporaryAttributes:(id)a0 forTextRange:(id)a1;
- (id)lineBreaks;
- (void)invalidateExtraLineFragment;
- (void)_initializeTextAttachmentLayoutContext;
- (id)rangeInElement;
- (void)addRenderingAttribute:(id)a0 value:(id)a1 forTextRange:(id)a2;
- (void)setTextAttachmentProvider:(id)a0 forLocation:(id)a1;
- (id)initWithTextElement:(id)a0 range:(id)a1;
- (id)initWithCoder:(id)a0;
- (id)_textContainerAtStringIndex:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForTextParagraphAnchoredAttachment:(id)a0;
- (id)layoutFragmentWithKeyframe:(id)a0;
- (long long)resolvedBaseWritingDirection;
- (void)_setRangeInElement:(id)a0;
- (void)drawTextParagraphAnchoredAttachment:(id)a0 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 context:(struct CGContext { } *)a2;
- (long long)coreTypesetter:(id)a0 baseWritingDirectionForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 bidiLevelsPointer:(out const char **)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })coreTypesetter:(id)a0 lineFragmentRectForProposedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 atIndex:(long long)a2 writingDirection:(long long)a3 remainingRect:(out struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a4;
- (id)representedRangeAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_renderingAttributesForTextAnimationContextComponent:(unsigned long long)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 attributes:(id)a2 effectiveRange:(out struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a3;
- (BOOL)coreTypesetter:(id)a0 isSimpleRectangularTextContainerForStartingCharacterAtIndex:(long long)a1;
- (id)textElement;
- (void)setRenderingAttribute:(id)a0 value:(id)a1 forTextRange:(id)a2;
- (BOOL)_updateRangeInElement;
- (id)textLineFragmentForVerticalOffset:(double)a0 allowsSucceeding:(BOOL)a1;
- (void)setDestinationBoundingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (double)verticalOffsetOfTextLocation:(id)a0 withAffinity:(long long)a1;
- (id)_resolvedRenderingAttributesForCharacterIndex:(long long)a0 effectiveRange:(out struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void).cxx_destruct;
- (id)textParagraph;
- (id)initWithLayoutManager:(id)a0 characterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 animationType:(unsigned long long)a2 boundingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3;

@end

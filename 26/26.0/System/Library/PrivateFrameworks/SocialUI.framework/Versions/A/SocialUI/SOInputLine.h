@class NSURL, NSDate, NSMenuItem, SOTimerCenter, IMPluginPayload, NSFont, SOInputLineAutoSender, NSString, NSSet, SOTimer, NSUserDefaults, NSOperationQueue, NSNumber, NSView, NSColor;
@protocol SOInputLineDelegate;

@interface SOInputLine : NSTextView <NSFilePresenter> {
    NSDate *_firstKey;
    NSDate *_lastKey;
    SOTimer *_timer;
    SOTimerCenter *_timerCenter;
    NSColor *_textColor;
    unsigned char _nonEmpty : 1;
    unsigned char _significantChange : 1;
    unsigned char _sTermToggled : 1;
    BOOL _delegateRespondsToInputLineDidChangeSignificantly;
    BOOL _delegateRespondsToInputLineRequestedPriorOutgoingMessage;
    BOOL _delegateRespondsToInputLineRequestedNextOutgoingMessage;
    BOOL _delegateRespondsToInputLineShouldInsertNewLine;
    BOOL _canDisplayInlineFileTransfers;
    BOOL _placeholderAttributedStringNeedsUpdate;
    NSOperationQueue *_filePromiseReceivingQueue;
}

@property (retain, nonatomic) NSFont *lastUsedSubstitutedFont;
@property (retain, nonatomic) SOInputLineAutoSender *autoSender;
@property (retain, nonatomic) IMPluginPayload *balloonPluginPayloadToInsert;
@property (nonatomic) BOOL useBigEmoji;
@property (retain, nonatomic) NSUserDefaults *inputLineDefaults;
@property (retain) NSURL *dropDirectoryURL;
@property (nonatomic) BOOL dirty;
@property (retain, nonatomic) NSFont *defaultFont;
@property (retain, nonatomic) NSString *placeholderText;
@property (retain, nonatomic) NSNumber *forcedMinimumHeight;
@property (readonly, nonatomic) NSColor *transferTextColor;
@property (readonly, nonatomic) NSColor *transferBackgroundColor;
@property id<SOInputLineDelegate> delegate;
@property (retain) NSView *keyForwardingView;
@property (retain, nonatomic) NSMenuItem *substituteEmojiMenuItem;
@property (nonatomic, getter=isAutomaticEmojiSubstitutionEnabled) BOOL automaticEmojiSubstitutionEnabled;
@property (nonatomic) double lastChangedTime;
@property (readonly, copy) NSURL *presentedItemURL;
@property (readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property (readonly, copy) NSURL *primaryPresentedItemURL;
@property (readonly) NSSet *observedPresentedItemUbiquityAttributes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)minimumFontSize;
+ (id)_updateCharacterSet;
+ (BOOL)isFileTransferObject:(id)a0;

- (BOOL)validateMenuItem:(id)a0;
- (void)_timerFired;
- (void)makeTextSmaller:(id)a0;
- (void)setTypingAttributes:(id)a0;
- (BOOL)validateUserInterfaceItem:(id)a0;
- (void)clear;
- (void)pasteAndMatchStyle:(id)a0;
- (void)dealloc;
- (void)setDelegate:(id)a0;
- (void)keyDown:(id)a0;
- (void)setGrammarCheckingEnabled:(BOOL)a0;
- (BOOL)resignFirstResponder;
- (void)setContinuousSpellCheckingEnabled:(BOOL)a0;
- (void)paste:(id)a0;
- (void)setMinSize:(struct CGSize { double x0; double x1; })a0;
- (BOOL)becomeFirstResponder;
- (id)textColor;
- (void)endPreviewPanelControl:(id)a0;
- (void)cut:(id)a0;
- (void)doCommandBySelector:(SEL)a0;
- (void)beginPreviewPanelControl:(id)a0;
- (void)setTextColor:(id)a0;
- (void)insertNewline:(id)a0;
- (void)_postNotification:(id)a0;
- (void)setSmartInsertDeleteEnabled:(BOOL)a0;
- (void)addLink:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)delegate;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (BOOL)acceptsPreviewPanelControl:(id)a0;
- (void).cxx_destruct;
- (void)deleteBackward:(id)a0;
- (id)RTFDFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)RTFFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (BOOL)_readSelectionFromPasteboard:(id)a0 types:(id)a1;
- (id)acceptableDragTypes;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)a0;
- (void)awakeFromNib;
- (unsigned long long)characterIndexForInsertionAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)concludeDragOperation:(id)a0;
- (void)deleteForward:(id)a0;
- (void)didChangeText;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (BOOL)performDragOperation:(id)a0;
- (BOOL)readSelectionFromPasteboard:(id)a0 type:(id)a1;
- (id)readablePasteboardTypes;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)a0;
- (void)setAutomaticDataDetectionEnabled:(BOOL)a0;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)a0;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)a0;
- (void)setAutomaticSpellingCorrectionEnabled:(BOOL)a0;
- (void)setAutomaticTextReplacementEnabled:(BOOL)a0;
- (BOOL)shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 replacementString:(id)a1;
- (id)smartInsertAfterStringForString:(id)a0 replacingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)smartInsertBeforeStringForString:(id)a0 replacingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)updateDraggingItemsForDrag:(id)a0;
- (unsigned long long)validModesForFontPanel:(id)a0;
- (id)writablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)a0 type:(id)a1;
- (void)makeTextLarger:(id)a0;
- (void)makeTextStandardSize:(id)a0;
- (id)currentFont;
- (void)stopTimers;
- (BOOL)insertFileURLs:(id)a0;
- (BOOL)insertLinkAtSelection:(id)a0 withText:(id)a1;
- (id)_attachedFileURLs;
- (void)_autoSend:(int)a0;
- (id)_chatForGuid:(id)a0;
- (void)_clearParagraphStyle;
- (void)_commonSOInputLineInit;
- (void)_createAndSetPluginPayloadObject:(id)a0;
- (void)_endTextDidChangeWithFont:(id)a0;
- (void)_fetchNextSentMessage;
- (void)_fetchPriorSentMessage;
- (void)_fixAttrsOnSelectionChange:(id)a0;
- (void)_getIMHandleURL:(id *)a0 andText:(id *)a1 fromPasteboard:(id)a2;
- (void)_initializeInputLineSettings;
- (void)_placeholderAttributedStringNeedsUpdate;
- (void)_readPluginPayloadFromPasteboard:(id)a0;
- (void)_setTypingAttributesForSelection:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)_settingsDidChange;
- (void)_showErrorSheetWithTitle:(id)a0 message:(id)a1 helpAnchor:(id)a2;
- (void)_stripMutableAttributedString:(id)a0;
- (void)_textFontDidChange:(id)a0;
- (void)_textSizeDidChange:(id)a0;
- (void)_updateMaps:(id)a0;
- (void)_updatePlaceholderAttributedString;
- (void)_updateValue:(id)a0 forSettingsKey:(id)a1;
- (void)_verifyAndInsertBalloonPluginPayloadToAttachmentString:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)applyLinkToSelection:(id)a0 withText:(id)a1;
- (BOOL)canAttachFile;
- (BOOL)canBeReceivedInline:(id)a0;
- (BOOL)canRenderInline:(id)a0;
- (BOOL)containsAudioMessage;
- (void)copySelectionToFindPboard:(id)a0;
- (void)ensureTextNotInsertedAdjacentToFileTransfer;
- (BOOL)insertAttributedString:(id)a0;
- (BOOL)insertAttributedString:(id)a0 intoRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (BOOL)insertAttributedStringWithAttachments:(id)a0;
- (BOOL)insertFileURL:(id)a0 previewImage:(id)a1;
- (BOOL)pasteAttributedStringFromPasteboard:(id)a0;
- (BOOL)pasteRtfFromPasteboard:(id)a0;
- (BOOL)pasteRtfdFromPasteboard:(id)a0;
- (BOOL)pasteStringFromPasteboard:(id)a0 withAttributes:(id)a1;
- (BOOL)performDragOperation:(id)a0 isDragWithinApp:(BOOL)a1;
- (void)protectFileTransferObjectsFromSelectionInCopyOrPaste;
- (id)rawAttributedStringValue;
- (void)setCanDisplayInlineFileTransfers:(BOOL)a0;
- (void)setToDefaultAppearance;
- (BOOL)textIsNonEmpty;
- (void)toggleAutomaticEmojiSubstitution:(id)a0;
- (void)updateAutomaticEmojiSubstitutionState;
- (void)updateUseBigEmoji;
- (BOOL)writeAttributedStringSelectionToPasteboard:(id)a0 forType:(id)a1;
- (BOOL)writeSelectedURLsToPasteboard:(id)a0;

@end

@class MitigationANE, ImageProcessor, GGMMetalToolBox, VDGDetectionUtilsV2, NSMutableArray, NSObject, NSMutableData, MaskToRoi, VEOpticalFlow;
@protocol OS_dispatch_group, MTLDevice, OS_dispatch_queue, MTLTexture, MTLCommandQueue, MTLBuffer;

@interface VideoDeghostingDetectionV2 : NSObject {
    id<MTLDevice> _device;
    id<MTLCommandQueue> _commandQueue;
    VDGDetectionUtilsV2 *_detectionUtils;
    GGMMetalToolBox *_metalToolBox;
    MaskToRoi *_maskToRoi;
    MitigationANE *_mitigationANE;
    struct __CVBuffer { } *_frameT;
    struct __CVBuffer { } *_frameTMinus1;
    struct __CVBuffer { } *_frameTMinus2;
    struct __CVBuffer { } *_frameTPlus2Buf;
    struct __CVBuffer { } *_frameTPlus1Buf;
    NSMutableArray *_stashedFutureGhostRois0;
    NSMutableArray *_stashedFutureGhostRois1;
    id<MTLTexture> _inputTexture;
    id<MTLTexture> _frameTMinus1Texture;
    id<MTLTexture> _frameTMinus2Texture;
    id<MTLTexture> _frameTPlus1Texture;
    struct { int width; int height; } _imageDimensions;
    id<MTLBuffer> _metaBufferArray[3];
    NSMutableData *_metaArray[3];
    struct __CVBuffer *_probMap4RepairQueue[3];
    id<MTLTexture> _probMap4RepairTexQueue[3];
    struct __CVBuffer *_probMap4SpatialRepairQueue[3];
    id<MTLTexture> _probMap4SpatialRepairTexQueue[3];
    NSObject<OS_dispatch_group> *_dispatchGroup;
    NSObject<OS_dispatch_queue> *_concurrentQueue;
    struct __CVBuffer { } *_warpedHwLsMask4Track;
    id<MTLTexture> _warpedHwLsMask4TrackTexture;
    struct __CVBuffer { } *_lrHwLsMask0;
    id<MTLTexture> _lrHwLsMask0Texture;
    struct __CVBuffer { } *_lrHwLsMask1;
    id<MTLTexture> _lrHwLsMask1Texture;
    struct __CVBuffer { } *_reflHwLsMask0;
    id<MTLTexture> _reflHwLsMask0Texture;
    struct __CVBuffer { } *_reflHwLsMask1;
    id<MTLTexture> _reflHwLsMask1Texture;
    unsigned long long _processedFrameCnt;
    struct __CVBuffer { } *_warpedReflTrackingRef;
    id<MTLTexture> _warpedReflTrackingRefTexture;
    struct __CVBuffer { } *_mvf4Future;
    id<MTLTexture> _mvf4FutureTexture;
    struct __CVBuffer { } *_mvf4Repair0;
    id<MTLTexture> _mvf4Repair0Texture;
    struct __CVBuffer { } *_mvf4Repair1;
    id<MTLTexture> _mvf4Repair1Texture;
    struct __CVBuffer { } *_warpedRefProbMap;
    id<MTLTexture> _warpedRefProbMapTexture;
    struct __CVBuffer { } *_rawWarpedRefProbMap;
    id<MTLTexture> _rawWarpedRefProbMapTexture;
    struct __CVBuffer { } *_rawWarpedRefSpaProbMap;
    id<MTLTexture> _rawWarpedRefSpaProbMapTexture;
    struct __CVBuffer { } *_refinedReflLs4trackingRefWarped;
    id<MTLTexture> _refinedReflLs4trackingRefWarpedTexture;
    struct __CVBuffer { } *_motionMap;
    id<MTLTexture> _motionMapTexture;
    struct __CVBuffer { } *_saliencyMap;
    id<MTLTexture> _saliencyMapTexture;
    struct __CVBuffer { } *_blobSaliencyMap;
    id<MTLTexture> _blobSaliencyMapTexture;
    struct __CVBuffer { } *_rawProbMap;
    id<MTLTexture> _rawProbMapTexture;
    struct __CVBuffer { } *_fullResRawRefinedProbMap;
    id<MTLTexture> _fullResRawRefinedProbMapTexture;
    struct __CVBuffer { } *_fullResStashedProbMap4FutureTracking;
    id<MTLTexture> _fullResStashedProbMap4FutureTrackingTexture;
    struct __CVBuffer { } *_dilatedLsMap;
    id<MTLTexture> _dilatedLsMapTexture;
    struct __CVBuffer *_probMapQueue[3];
    id<MTLTexture> _probMapTexQueue[3];
    struct __CVBuffer *_spaProbMapQueue[3];
    id<MTLTexture> _spaProbMapTexQueue[3];
    struct __CVBuffer *_lsMapQueue[3];
    id<MTLTexture> _lsMapTexQueue[3];
    struct __CVBuffer { } *_temporalMitigated;
    id<MTLTexture> _temporalMitigatedTexture;
    struct __CVBuffer { } *_inputCopy;
    id<MTLTexture> _inputCopyTexture;
    struct __CVBuffer { } *_spatialMitigated;
    id<MTLTexture> _spatialMitigatedTexture;
    struct __CVBuffer { } *_dlSpatialMitigated;
    id<MTLTexture> _dlSpatialMitigatedTexture;
    struct __CVBuffer { } *_tradSpatialMitigated;
    id<MTLTexture> _tradSpatialMitigatedTexture;
    struct __CVBuffer { } *_dlSpaInput;
    id<MTLTexture> _dlSpaInputTexture;
    struct __CVBuffer { } *_dlSpaRepairMask;
    id<MTLTexture> _dlSpaRepairMaskTexture;
    struct __CVBuffer { } *_dlSpaBlendMask;
    id<MTLTexture> _dlSpaBlendMaskTexture;
    struct __CVBuffer { } *_hmgrphyRef0;
    id<MTLTexture> _hmgrphyRef0Texture;
    struct __CVBuffer { } *_hmgrphyRef1;
    id<MTLTexture> _hmgrphyRef1Texture;
    struct __CVBuffer { } *_lrBmRef0;
    id<MTLTexture> _lrBmRef0Texture;
    struct __CVBuffer { } *_lrBmRef1;
    id<MTLTexture> _lrBmRef1Texture;
    struct __CVBuffer { } *_flowTarget;
    id<MTLTexture> _flowTargetTexture;
    struct __CVBuffer { } *_flowRef;
    id<MTLTexture> _flowRefTexture;
    struct __CVBuffer { } *_flowMvf0;
    id<MTLTexture> _flowMvf0Texture;
    struct __CVBuffer { } *_flowMvf1;
    id<MTLTexture> _flowMvf1Texture;
    struct __CVBuffer { } *_warpedFlowMvf;
    id<MTLTexture> _warpedFlowMvfTexture;
    struct __CVBuffer { } *_backwarpFlowMvf0;
    id<MTLTexture> _backwarpFlowMvf0Texture;
    struct __CVBuffer { } *_backwarpFlowMvf1;
    id<MTLTexture> _backwarpFlowMvf1Texture;
    struct __CVBuffer { } *_bmRef0;
    id<MTLTexture> _bmRef0Texture;
    struct __CVBuffer { } *_bmRef1;
    id<MTLTexture> _bmRef1Texture;
    struct __CVBuffer { } *_avgAlignedRef0;
    id<MTLTexture> _avgAlignedRef0Texture;
    struct __CVBuffer { } *_avgAlignedRef1;
    id<MTLTexture> _avgAlignedRef1Texture;
    struct __CVBuffer { } *_flowRef0Map;
    id<MTLTexture> _flowRef0MapTexture;
    struct __CVBuffer { } *_flowRef1Map;
    id<MTLTexture> _flowRef1MapTexture;
    struct __CVBuffer { } *_dilatedFlowRef0Map;
    id<MTLTexture> _dilatedFlowRef0MapTexture;
    struct __CVBuffer { } *_dilatedFlowRef1Map;
    id<MTLTexture> _dilatedFlowRef1MapTexture;
    struct __CVBuffer { } *_blendedRef0;
    id<MTLTexture> _blendedRef0Texture;
    struct __CVBuffer { } *_blendedRef1;
    id<MTLTexture> _blendedRef1Texture;
    struct __CVBuffer { } *_input4MotionCue;
    id<MTLTexture> _input4MotionCueTexture;
    struct __CVBuffer { } *_ref4MotionCue;
    id<MTLTexture> _ref4MotionCueTexture;
    id<MTLBuffer> _currMetaTmp;
    id<MTLBuffer> _futureMetaTmp;
    id<MTLBuffer> _futureMeta4LsCheck;
    id<MTLBuffer> _futureMeta4RedoTracking;
    struct __CVBuffer { } *_errRescaleProbMap0;
    id<MTLTexture> _errRescaleProbMap0Texture;
    struct __CVBuffer { } *_errRescaleProbMap1;
    id<MTLTexture> _errRescaleProbMap1Texture;
    struct __CVBuffer { } *_probMap4RoiGen;
    id<MTLTexture> _probMap4RoiGenTexture;
    struct __CVBuffer { } *_lsMap4RoiGen;
    id<MTLTexture> _lsMap4RoiGenTexture;
    id<MTLBuffer> _forwarpOutputBuffer0;
    id<MTLBuffer> _forwarpOutputBuffer1;
    unsigned long long _currSegmentProcessedFrameCnt;
    float _filteredOpticalCenterShift;
    VEOpticalFlow *_flowNet;
    ImageProcessor *_flowPreprocessor;
}

@property (nonatomic) struct { struct { int clipThreshold; int patchSize; int antiFlareSize; unsigned char simpleRefList; unsigned char firstFrameReprocess; unsigned char cpuDetection; unsigned char baselineMitigation; unsigned char enableColorMask; unsigned char verbose; unsigned char cpuMitigation; struct __CFArray *initGGarray; } internalCfg; struct { int lightMode; int homographyType; int detectionType; int tempPatchMode; int frameDelay; unsigned char drawBoundingBox; unsigned char noMetaData; unsigned char backGroundDetection; unsigned char LSGatingEnabled; unsigned char luxLevelGating; unsigned char clippedPixelGatingEnabled; } externalCfg; } configuration;
@property BOOL prevShouldRunGGDetectionLSBased;
@property BOOL prevShouldRunGGDetectionLuxLevelBased;
@property BOOL prevShouldRunGGDetectionClippedPixelBased;
@property struct { int lightSourceGatingThresholdON; int lightSourceGatingThresholdOFF; int lightSourceSelectionCntLimitNew; int lightSourceSelectionCntLimitAll; int luxLevelGatingThresholdON; int luxLevelGatingThresholdOFF; float lightSourceBoxSizeThreshold; float searchRangeBase; float searchRangeBaseForPreprocessing; int maxAllowedSizeBBox; int maxAllowedOpticalCenterOffset; float costRescaleWhenOpticalCenterIsAvailable; int b4MergeGhostCntSoftGatingTh; int b4MergeGhostCntHardGatingTh; int kpCntSoftGatingTh; int kpCntHardGatingTh; struct { float hueLowerRange; float hueUpperRange; float hueThreshold; float saturationLowerThreshold; float saturationUpperThreshold; float valueLowerThreshold; float valueUpperThreshold; float greenDilationNormalizedRadius; } colorScore; struct { int minVote; int lightSourceMinVote; float searchRadiusMin; float searchRadiusSlope; float lumaDiffThreshold; float motionDiffThreshold; float colorContrastDiffThreshold; float pixFeaMatchThreshold; float kpIsGhostColorThreshold; float kpIsGhostLumaThreshold; float kpIsGhostContrastThreshold; float kpIsGhostBlobContrastThreshold; float kpIsGhostMotionThreshold; float kpIsGhostColorThresholdHigh; float kpIsGhostLumaThresholdHigh; float kpIsGhostMotionThresholdHigh; } tempDetect; struct { float repairTargetArea; float repairTargetGhostCntLo; float repairTargetGhostCntHi; } repairParams; } params;
@property int trackID;
@property int LSTrackID;

- (void)reset;
- (void)dealloc;
- (void).cxx_destruct;
- (long long)_getProbMapInput:(id)a0 reflLs:(id)a1 trackingRef:(id)a2 trackingRefProb:(id)a3 trackingRefSpaProb:(id)a4 trackingRefErrRescaleProb:(id)a5 trackingRefLs:(id)a6 inputBuf:(struct __CVBuffer { } *)a7 reflLsBuf:(struct __CVBuffer { } *)a8 trackingRefBuf:(struct __CVBuffer { } *)a9 trackingRefProbBuf:(struct __CVBuffer { } *)a10 trackingRefSpaProbBuf:(struct __CVBuffer { } *)a11 trackingRefErrRescaleProbBuf:(struct __CVBuffer { } *)a12 trackingRefLsBuf:(struct __CVBuffer { } *)a13 trackingMvf:(id)a14 metaBuf:(id)a15 metaBufArray:(struct { id x0[256]; short x1; } *)a16 trackingRefMetaBuf:(id)a17 probMap:(id)a18 errRescaleProbMap:(id)a19 rawRefinedProbMap:(id)a20 refinedProbMap:(id)a21 refinedReflLs:(id)a22 probMapStash4FutureTracking:(id)a23 probMapBuf:(struct __CVBuffer { } *)a24 errRescaleProbMapBuf:(struct __CVBuffer { } *)a25 rawRefinedProbMapBuf:(struct __CVBuffer { } *)a26 refinedProbMapBuf:(struct __CVBuffer { } *)a27 refinedReflLsBuf:(struct __CVBuffer { } *)a28 probMapStash4FutureTrackingBuf:(struct __CVBuffer { } *)a29 doTracking:(BOOL)a30 waitForComplete:(BOOL)a31;
- (long long)_getProbMapsLiteTarget:(id)a0 refProbMap:(id)a1 refLsMap:(id)a2 refRefinedLsMap:(id)a3 refProbMapStash4FutureTracking:(id)a4 refErrRescaleProbMap:(id)a5 refRawRefinedProbMap:(id)a6 refRefinedProbMap:(id)a7 mvf:(id)a8 probMap:(id)a9 lsMap:(id)a10 refinedLsMap:(id)a11 probMapStash4FutureTracking:(id)a12 errRescaleProbMap:(id)a13 rawRefinedProbMap:(id)a14 refinedProbMap:(id)a15 metaBufArray:(struct { id x0[256]; short x1; } *)a16 waitForComplete:(BOOL)a17;
- (long long)_initDetection:(struct __CVBuffer { } *)a0 futureFrames:(struct { struct *x0; int x1; int x2; } *)a1 outputImgBufTMinus1:(struct __CVBuffer { } *)a2 outputImgBufTMinus2:(struct __CVBuffer { } *)a3;
- (void)_initParamsWithLowLight:(BOOL)a0;
- (void)_resetDetectionResults;
- (void)_resetIntermediateVariables;
- (long long)dlSpatialRepairYUV:(struct __CVBuffer { } *)a0 output:(struct __CVBuffer { } *)a1 repairMask:(struct __CVBuffer { } *)a2 blendMask:(struct __CVBuffer { } *)a3 inputTex:(id)a4 repairMaskTex:(id)a5 blendMaskTex:(id)a6 wRepairedY:(float)a7 wRepairedUV:(float)a8 metaBuf:(id)a9;
- (long long)doTrackingToNextFrameCurrMetaWithDetectionResults:(id)a0 currMetaWithMvToFuture:(SEL)a1 futureMeta:(id)a2 opticalCenter:(id)a3 futureOpticalCenter:(id)a4 futureFrameCnt:(int)a5 doLite:(BOOL)a6 waitForComplete:(BOOL)a7;
- (long long)getFlowTarget:(id)a0 ref:(id)a1 targetBuf:(struct __CVBuffer { } *)a2 refBuf:(struct __CVBuffer { } *)a3 mvf:(struct __CVBuffer { } *)a4 backwardMvf:(struct __CVBuffer { } *)a5 metaBuf:(id)a6 skipRescaling:(BOOL)a7;
- (long long)getMvfToNextFrameForTrackingCurrMeta:(id)a0 lsMap:(SEL)a1 futureLsMap:(id)a2 lsMapBuf:(id)a3 futureLsMapBuf:(id)a4 opticalCenter:(struct __CVBuffer { } *)a5 futureOpticalCenter:(struct __CVBuffer { } *)a6 waitForComplete:(BOOL)a7;
- (long long)getProbMapsTarget:(id)a0 ref:(SEL)a1 rawProbMap:(id)a2 probMap:(id)a3 errRescaleProbMap:(id)a4 rawRefinedProbMap:(id)a5 refinedProbMap:(id)a6 reflLsMap:(id)a7 refinedReflLsMap:(id)a8 reflLsMap4TrackingRef:(id)a9 metaBuf:(id)a10 metaBufArray:(id)a11 trackingMvf:(id)a12 useRefProbMap:(struct { id x0[256]; short x1; } *)a13 opticalCenter:(id)a14 trackingRefOpticalCenter:(BOOL)a15 waitForComplete:(BOOL)a16;
- (id)initWithMetalToolBox:(id)a0 config:(struct { struct { int x0; int x1; int x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; struct __CFArray *x10; } x0; struct { int x0; int x1; int x2; int x3; int x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; } x1; } *)a1 imageDimensions:(struct { int x0; int x1; })a2;
- (BOOL)process:(id)a0 futureFrames:(SEL)a1 opticalCenter:(struct __CVBuffer { } *)a2 futureOpticalCenter:(struct { struct *x0; int x1; int x2; } *)a3 opticalCenterMvShift:(float)a4 outputImgBufTMinus1:(struct __CVBuffer { } *)a5 outputImgBufTMinus2:(struct __CVBuffer { } *)a6;
- (long long)processHwLsMaskAndGetRoisOpticalCenter:(SEL)a0 inputFrame:(id)a1 prevMetaContainer:(struct { short x0; short x1; short x2; float x3; float x4; float x5; float x6; unsigned int x7; unsigned int x8; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x9[256]; BOOL x10; int x11[256]; short x12[256]; int x13[256]; float x14[256]; void /* unknown type, empty encoding */ x15[256]; void /* unknown type, empty encoding */ x16[256]; void /* unknown type, empty encoding */ x17[256]; unsigned int x18[256]; unsigned int x19[256]; unsigned int x20[256]; unsigned int x21[256]; unsigned int x22[256]; unsigned int x23[256]; unsigned int x24[256]; unsigned int x25[256]; unsigned int x26[256]; unsigned int x27[256]; int x28[256]; int x29[256]; unsigned int x30[256]; void /* unknown type, empty encoding */ x31[256]; void /* unknown type, empty encoding */ x32[256]; unsigned int x33[256]; unsigned int x34[256]; int x35[256]; int x36[256]; int x37[256]; unsigned int x38[256]; unsigned int x39[256]; int x40[256]; float x41[256]; unsigned int x42[256]; unsigned int x43[256]; unsigned int x44[256]; unsigned int x45[256]; float x46[256]; float x47[256]; int x48[256]; int x49[256]; int x50[256]; int x51[256]; unsigned int x52[256]; void /* unknown type, empty encoding */ x53[256]; void /* unknown type, empty encoding */ x54[256]; int x55[256]; int x56[256]; unsigned int x57[256]; void /* unknown type, empty encoding */ x58[256]; float x59; } *)a2 considerDist2PrevGhostWhenSort:(BOOL)a3 outputMask:(struct __CVBuffer { } *)a4 outputMaskTexture:(id)a5 isLowLight:(BOOL)a6 outputArray:(id *)a7;
- (long long)processHwLsMaskNormalizedCenter:(SEL)a0 input:(id)a1 output:(id)a2 waitForComplete:(BOOL)a3;
- (long long)repairTarget:(id)a0 opticalCenter:(SEL)a1 frRef0:(id)a2 frRef1:(id)a3 nextFrame:(id)a4 nextFrameMvf:(id)a5 nextFrameMvfBuf:(id)a6 nextOpticalCenter:(struct __CVBuffer { } *)a7 probMap:(id)a8 errRescaleProbMap:(id)a9 prevProbMap:(id)a10 refinedProbMap:(id)a11 probMap4TrRefW:(id)a12 metaBuf:(id)a13 metaBufArray:(struct { id x0[256]; short x1; } *)a14 forceToSpatial:(BOOL)a15 waitForComplete:(BOOL)a16;
- (id)sortLsList:(id)a0;
- (long long)unpackIspLsMaskAndRoisForNextFrameLiteWithFrameData:(SEL)a0 futureOpticalCenter:(struct { struct __CVBuffer *x0; id x1; id x2; id x3; id x4; id x5; struct __CVBuffer *x6; })a1 outputFutureFrameCnt:(int *)a2 outputFutureMetaBuf:(id *)a3;
- (long long)unpackIspLsMaskAndRoisForNextFrameWithFrameData:(SEL)a0 futureOpticalCenter:(struct { struct __CVBuffer *x0; id x1; id x2; id x3; id x4; id x5; struct __CVBuffer *x6; })a1 currFrameMetaContainer:(struct { short x0; short x1; short x2; float x3; float x4; float x5; float x6; unsigned int x7; unsigned int x8; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x9[256]; BOOL x10; int x11[256]; short x12[256]; int x13[256]; float x14[256]; void /* unknown type, empty encoding */ x15[256]; void /* unknown type, empty encoding */ x16[256]; void /* unknown type, empty encoding */ x17[256]; unsigned int x18[256]; unsigned int x19[256]; unsigned int x20[256]; unsigned int x21[256]; unsigned int x22[256]; unsigned int x23[256]; unsigned int x24[256]; unsigned int x25[256]; unsigned int x26[256]; unsigned int x27[256]; int x28[256]; int x29[256]; unsigned int x30[256]; void /* unknown type, empty encoding */ x31[256]; void /* unknown type, empty encoding */ x32[256]; unsigned int x33[256]; unsigned int x34[256]; int x35[256]; int x36[256]; int x37[256]; unsigned int x38[256]; unsigned int x39[256]; int x40[256]; float x41[256]; unsigned int x42[256]; unsigned int x43[256]; unsigned int x44[256]; unsigned int x45[256]; float x46[256]; float x47[256]; int x48[256]; int x49[256]; int x50[256]; int x51[256]; unsigned int x52[256]; void /* unknown type, empty encoding */ x53[256]; void /* unknown type, empty encoding */ x54[256]; int x55[256]; int x56[256]; unsigned int x57[256]; void /* unknown type, empty encoding */ x58[256]; float x59; } *)a2 outputFutureFrameCnt:(int *)a3 outputMTLBuffer:(id *)a4;
- (long long)updateRepairedRefYUVInput:(id)a0 opticalCenter:(SEL)a1 prob:(id)a2 errRescaleProb:(id)a3 prevProb:(id)a4 refinedProb:(id)a5 probMap4TrRefW:(id)a6 frRef0:(id)a7 frRef1:(id)a8 nextFrame:(id)a9 nextFrameMvf:(id)a10 nextFrameMvfBuf:(id)a11 nextOpticalCenter:(struct __CVBuffer { } *)a12 inputBuf:(struct __CVBuffer { } *)a13 probBuf:(struct __CVBuffer { } *)a14 errRescaleProbBuf:(struct __CVBuffer { } *)a15 prevProbBuf:(struct __CVBuffer { } *)a16 refinedProbBuf:(struct __CVBuffer { } *)a17 probMap4TrRefWBuf:(struct __CVBuffer { } *)a18 frRef0Buf:(struct __CVBuffer { } *)a19 frRef1Buf:(struct __CVBuffer { } *)a20 nextFrameBuf:(struct __CVBuffer { } *)a21 metaBuf:(id)a22 metaBufArray:(struct { id x0[256]; short x1; } *)a23 forceToSpatial:(BOOL)a24 waitForComplete:(BOOL)a25;
- (long long)warpTrackingRefProbMap:(id)a0 refSpaProbMap:(id)a1 refReflLs:(id)a2 mvf:(id)a3 metaBuf:(id)a4 metaBufArray:(struct { id x0[256]; short x1; } *)a5 waitForComplete:(BOOL)a6;

@end

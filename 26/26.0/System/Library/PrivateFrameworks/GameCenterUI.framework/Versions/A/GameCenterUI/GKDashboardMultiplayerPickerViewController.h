@class NSTextField, NSView, CNContactPicker, GKPickerSearchTextField, NSString, NSStackView, NSMutableDictionary, NSVisualEffectView, NSLayoutConstraint, NSButton, GKComposeRecipientView, GKDashboardMultiplayerPickerDataSource;
@protocol GKDashboardNearbyBrowserDelegate, GKDashboardMultiplayerPickerDelegate;

@interface GKDashboardMultiplayerPickerViewController : GKDashboardCollectionViewController <NSTextFieldDelegate, GKDashboardMultiplayerPickerDatasourceDelegate, CNContactPickerDelegate, GKPickerSearchTextFieldDelegate, GKMultiplayerCustomInviteMessageViewControllerDelegate, GKComposeRecipientViewDelegate>

@property (nonatomic) BOOL shouldIgnoreClearSelection;
@property (nonatomic) long long pickerOrigin;
@property (nonatomic) BOOL usePreferredFocusCell;
@property (weak, nonatomic) NSTextField *descriptionLabel;
@property (weak, nonatomic) NSButton *sendButton;
@property (weak, nonatomic) NSButton *customizeMessageButton;
@property (weak, nonatomic) NSTextField *messageField;
@property (weak, nonatomic) NSVisualEffectView *backgroundEffectView;
@property (weak, nonatomic) NSVisualEffectView *navigationVisualEffectBackground;
@property (weak, nonatomic) NSLayoutConstraint *navigationHeaderHeightConstraint;
@property (weak, nonatomic) NSTextField *headerTitle;
@property (weak, nonatomic) NSTextField *headerSubtitle;
@property (weak, nonatomic) NSStackView *headerContentView;
@property (weak, nonatomic) NSView *collapsedTitleContainer;
@property (weak, nonatomic) NSTextField *collapsedTitle;
@property (weak, nonatomic) NSTextField *collapsedSubtitle;
@property (retain, nonatomic) NSMutableDictionary *recipientPlayerMap;
@property (retain, nonatomic) NSMutableDictionary *removedRecipientPlayerMap;
@property (retain, nonatomic) NSMutableDictionary *recipientMap;
@property (nonatomic) BOOL recipientRemovedImplicitly;
@property (nonatomic) BOOL skipAddressTokenization;
@property (nonatomic) BOOL isAnimatingComposeTextViewSizeChange;
@property (retain, nonatomic) NSLayoutConstraint *customizeMessageBottomConstraint;
@property (nonatomic) double initialCustomizeMessageBottomConstraintConstant;
@property (readonly, nonatomic) GKDashboardMultiplayerPickerDataSource *pickerDataSource;
@property (retain, nonatomic) CNContactPicker *contactPicker;
@property (nonatomic) BOOL excludesContacts;
@property (weak, nonatomic) NSButton *cancelButton;
@property (weak) NSView *composeRecipientContainer;
@property (retain, nonatomic) GKComposeRecipientView *composeTextView;
@property (retain, nonatomic) NSLayoutConstraint *composeTextViewHeightConstraint;
@property (retain, nonatomic) GKPickerSearchTextField *searchTextField;
@property (retain, nonatomic) NSButton *showContactPickerButton;
@property (copy, nonatomic) NSString *message;
@property (copy, nonatomic) id /* block */ completionHandler;
@property (nonatomic) BOOL supportsNearby;
@property (readonly, nonatomic) BOOL nearbyOnly;
@property (nonatomic) id<GKDashboardNearbyBrowserDelegate> nearbyDelegate;
@property (weak, nonatomic) id<GKDashboardMultiplayerPickerDelegate> multiplayerPickerDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)controlTextDidChange:(id)a0;
- (void)controlTextDidEndEditing:(id)a0;
- (BOOL)control:(id)a0 textView:(id)a1 doCommandBySelector:(SEL)a2;
- (void)viewWillAppear:(BOOL)a0;
- (void)cancel:(id)a0;
- (void)viewDidAppear:(BOOL)a0;
- (void)viewDidLoad;
- (void)clearSelection;
- (void)collectionView:(id)a0 didDeselectItemAtIndexPath:(id)a1;
- (void)send:(id)a0;
- (void)viewWillDisappear:(BOOL)a0;
- (void)viewDidDisappear:(BOOL)a0;
- (void)collectionView:(id)a0 willDisplayCell:(id)a1 forItemAtIndexPath:(id)a2;
- (BOOL)hasData;
- (id)preferredFocusEnvironments;
- (void)viewDidLayout;
- (void)collectionView:(id)a0 didSelectItemAtIndexPath:(id)a1;
- (void)setSearchText:(id)a0;
- (void)addMessage:(id)a0;
- (void).cxx_destruct;
- (void)rightMouseDown:(id)a0;
- (void)contactPicker:(id)a0 didSelectContact:(id)a1;
- (void)contactPickerWillClose:(id)a0;
- (BOOL)textFieldShouldReturn:(id)a0;
- (void)composeRecipientView:(id)a0 didChangeSize:(struct CGSize { double x0; double x1; })a1;
- (void)composeRecipientView:(id)a0 didFinishEnteringAddress:(id)a1;
- (void)composeRecipientView:(id)a0 didRemoveRecipient:(id)a1;
- (void)composeRecipientView:(id)a0 textDidChange:(id)a1;
- (void)composeRecipientViewReturnPressed:(id)a0;
- (void)collectionViewDidEndDecelerating:(id)a0;
- (void)collectionViewDidScroll:(id)a0;
- (void)updateNavHeaderHeightAndOpacity;
- (void)_updateButtonEnableState;
- (void)_updateCollectionView;
- (void)addRecipientForPlayers:(id)a0 withName:(id)a1;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })collectionSectionInset;
- (void)composeRecipientViewDidRequestToAddRecipient:(id)a0;
- (id)composedNameForSuggestedMessageGroup:(id)a0;
- (void)configureComposeTextView;
- (void)customInviteViewController:(id)a0 didFinishWithMessage:(id)a1;
- (void)dataUpdated:(BOOL)a0 withError:(id)a1;
- (void)didBeginSearchTextEditing;
- (void)didEndSearchTextEditing;
- (void)didPressShowContactPickerButton:(id)a0;
- (void)dockHeaderViewIfNeeded;
- (id)existingMessageForInviteViewController:(id)a0;
- (void)handleSearchTextFieldReturn:(id)a0;
- (void)highlightAlreadySelectedPlayers:(id)a0 inGroup:(id)a1;
- (void)highlightRecipients:(id)a0;
- (id)initWithMaxSelectable:(long long)a0 hiddenPlayers:(id)a1 nearbyOnly:(BOOL)a2 pickerOrigin:(long long)a3;
- (id)pickerCollectionView;
- (void)pickerDatasource:(id)a0 didChooseFriendFilter:(id)a1;
- (void)pickerDatasource:(id)a0 didDeselectPlayers:(id)a1 inGroup:(id)a2;
- (void)pickerDatasource:(id)a0 didPickPlayers:(id)a1;
- (void)pickerDatasource:(id)a0 didSelectPlayers:(id)a1 inGroup:(id)a2;
- (void)pickerDatasourceDidSelectAddFriend:(id)a0;
- (void)playerGroupDidExpandInPlace;
- (void)removeRecipientWithName:(id)a0;
- (id)searchFieldPlaceHolderText;
- (void)searchTextFieldDidBecomeFirstResponder:(id)a0;
- (void)searchTextFieldDidResignFirstResponder:(id)a0;
- (void)setSupportsNearby:(BOOL)a0;
- (void)setupNoContentView:(id)a0 withError:(id)a1;
- (void)sortFriendsAlphabetically:(id)a0;
- (void)sortFriendsByRecents:(id)a0;
- (BOOL)supportsNearby;
- (void)updateAddMessageButtonVisibility;
- (void)updateCollectionViewContentInsets;

@end

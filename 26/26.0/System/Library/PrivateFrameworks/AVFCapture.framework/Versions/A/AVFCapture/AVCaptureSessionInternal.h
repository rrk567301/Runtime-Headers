@class AVCaptureSystemStylePicker, NSObject, AVCaptureSmartStyle, NSThread, AVCaptureSystemStyleSlider, NSMutableArray, NSString, FigCaptureSessionConfiguration, NSPointerArray, AVCaptureSessionConfiguration, AVWeakReferencingDelegateStorage, AVWeakReference, NSError, AVRunLoopCondition;
@protocol OS_dispatch_queue, AVUIDevice, OS_tcc_identity;

@interface AVCaptureSessionInternal : NSObject {
    AVWeakReference *weakReference;
    NSString *sessionPreset;
    NSObject<OS_tcc_identity> *tccIdentity;
    int beginConfigRefCount;
    int graphRebuildFromCommitConfigRefCount;
    FigCaptureSessionConfiguration *sessionConfig;
    struct OpaqueFigCaptureSession { } *figCaptureSession;
    BOOL figCaptureSessionRunning;
    BOOL figCaptureSessionStarted;
    NSMutableArray *inputs;
    NSMutableArray *outputs;
    NSMutableArray *controls;
    AVWeakReference *weakReferenceControlsDelegate;
    NSObject<OS_dispatch_queue> *clientControlsQueue;
    NSPointerArray *videoPreviewLayers;
    NSMutableArray *connections;
    NSMutableArray *committedAVCaptureSessionConfigurations;
    AVCaptureSessionConfiguration *liveAVCaptureSessionConfiguration;
    NSError *stopError;
    BOOL running;
    BOOL interrupted;
    BOOL usesApplicationAudioSession;
    BOOL automaticallyConfiguresApplicationAudioSession;
    BOOL configuresApplicationAudioSessionToMixWithOthers;
    BOOL configuresApplicationAudioSessionForBluetoothHighQualityRecording;
    BOOL automaticallyConfiguresCaptureDeviceForWideColor;
    AVRunLoopCondition *runLoopCondition;
    BOOL waitingForFigCaptureSessionToStart;
    BOOL waitingForFigCaptureSessionToStop;
    BOOL waitingForFigCaptureSessionConfigurationToBecomeLive;
    long long graphRebuildSignalCount;
    float hardwareCost;
    struct OpaqueCMClock { } *synchronizationClock;
    BOOL notifiesOnMainThread;
    NSMutableArray *devicesToResetVideoZoomFactorAndMinMaxFrameDurations;
    BOOL authorizedToUseCameraInMultipleForegroundAppLayout;
    BOOL xctestAuthorizedToStealDevice;
    BOOL continuityCameraIsWired;
    int continuityCameraClientDeviceClass;
    BOOL clientIsVOIP;
    BOOL suppressVideoEffects;
    id<AVUIDevice> uiDevice;
    id orientationObserver;
    long long deviceOrientation;
    NSObject<OS_dispatch_queue> *deviceOrientationChangeQueue;
    struct OpaqueFigReentrantMutex { } *deviceOrientationChangeMutex;
    struct OpaqueFigReentrantMutex { } *figCaptureSourceConfigChangeCacheMutex;
    NSThread *threadWhichBeganConfiguration;
    NSMutableArray *_devicesObservingVideoZoomFactor;
    BOOL checkIfFileAlreadyExistForMFO;
    NSMutableArray *recordingMovieFileOutputs;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } recordingMovieFileOutputsLock;
    BOOL smartStyleRenderingSupported;
    BOOL smartStyleRenderingEnabled;
    id systemSmartStyleObserver;
    AVCaptureSmartStyle *smartStyleSetByClient;
    BOOL smartStyleRenderingOptedOut;
    BOOL smartStyleRenderingOptedOutDefault;
    NSString *smartStyleAlertBundleName;
    NSString *smartStyleAlertOptOutDescription;
    long long smartStyleControlMode;
    AVCaptureSystemStylePicker *automaticallyAddedSystemStylePicker;
    AVCaptureSystemStyleSlider *automaticallyAddedSystemParameterSlider;
    BOOL automaticallyRunsDeferredStart;
    AVWeakReferencingDelegateStorage *deferredStartDelegateStorage;
}

@end

@class MKMapView, FMFMapViewDelegateInternal, FMFTitleViewMac, NSSet, NSString, FMFNoLocationView, NSColor, FMFSession;
@protocol FMFMapViewControllerDelegate;

@interface FMFMapViewController : NSViewController <FMFSessionDelegateInternal, FMFMapViewDelegateInternalDelegate, FMFNoLocationViewDelegate, FMFMapOptionsViewControllerDelegate, FMFAppearanceDelegate>

@property (retain, nonatomic) MKMapView *mapView;
@property (retain, nonatomic) FMFSession *fmfSession;
@property (retain, nonatomic) FMFMapViewDelegateInternal *mapViewDelegate;
@property (retain, nonatomic) NSSet *_preloadedHandles;
@property (nonatomic) BOOL isSimpleMap;
@property (retain, nonatomic) FMFNoLocationView *noLocationView;
@property (retain, nonatomic) NSSet *_internalHandlesShowingLocations;
@property (nonatomic) BOOL _refreshingIsPaused;
@property (nonatomic) BOOL _blockDidReceiveAnimation;
@property (nonatomic) BOOL _isRenderingInitialMap;
@property (nonatomic) BOOL viewWillAppearCalled;
@property (nonatomic) BOOL alwaysShowAccuracy;
@property (nonatomic) BOOL wasToolbarPreviouslyHidden;
@property (retain, nonatomic) NSString *debugContext;
@property (retain, nonatomic) FMFTitleViewMac *titleView;
@property (weak) id<FMFMapViewControllerDelegate> delegate;
@property BOOL shouldZoomToFitNewLocations;
@property BOOL shouldZoomToFitMeAndLocations;
@property BOOL showFloatingMapLocationButton;
@property (nonatomic) BOOL isMapCenteringDisabled;
@property struct NSEdgeInsets { double top; double left; double bottom; double right; } edgeInsets;
@property (copy) NSSet *handlesShowingLocations;
@property (copy) NSColor *annotationTintColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGSize { double x0; double x1; })annotationImageSize;

- (void)viewWillDisappear;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (void)viewDidAppear;
- (void)didStopAbilityToGetLocationForHandle:(id)a0;
- (id)init;
- (void).cxx_destruct;
- (void)applicationDidBecomeActive:(id)a0;
- (void)viewDidDisappear;
- (void)viewWillAppear;
- (void)didReceiveLocation:(id)a0;
- (void)deselectAllAnnotations;
- (void)loadDelegate;
- (void)removeAllFriendLocationsFromMap;
- (void)_dismiss:(id)a0;
- (void)zoomToFit;
- (BOOL)canSelectAnnotation:(id)a0;
- (id)initWithDelegate:(id)a0 handles:(id)a1;
- (id)titleViewForSelectedHandle;
- (void)resumeRefreshingLocations;
- (void)stopRefreshingLocations;
- (void)zoomAndSelectHandle:(id)a0;
- (void)zoomToFit:(BOOL)a0;
- (void)mapTypeChanged:(unsigned long long)a0;
- (void)selectAnnotationIfSingleFriend:(id)a0;
- (void)stopShowingLocationsForHandles:(id)a0;
- (void)_authorizeMonitoringLocation;
- (void)_enablePreloadedHandles:(id)a0;
- (id)_generateDebugContext;
- (id)_internalAnnotationTintColor;
- (id)_selectedHandleAnnotation;
- (void)_updateTitleViewLocation:(id)a0;
- (void)addHandlesToSession;
- (id)annotationImageForAnnotation:(id)a0 andHandle:(id)a1 large:(BOOL)a2;
- (BOOL)canShowNoLocation;
- (void)destroySession;
- (void)didDeselectLocation:(id)a0;
- (void)didReceiveLocationForDelegateCallback:(id)a0;
- (void)didSelectLocation:(id)a0;
- (void)didUpdateUserLocation:(id)a0;
- (void)enablePreloadedHandles;
- (void)fmfAppearanceChanged:(id)a0;
- (id)initSimpleMapWithDelegate:(id)a0 handles:(id)a1;
- (void)initializeDefaults;
- (BOOL)isLocationAlreadyOnMap:(id)a0;
- (double)liveAnimationDuration;
- (void)loadCachedLocationsForHandles;
- (id)locationOnMapForHandle:(id)a0 enforceServerId:(BOOL)a1;
- (BOOL)mapHasUserLocations;
- (void)mapViewDidFinishRenderingMap;
- (double)nonLiveAnimationDuration;
- (void)openInMapsButtonTapped:(id)a0;
- (void)reZoomToFit;
- (void)recenterMap;
- (void)regionDidChangeAnimated:(BOOL)a0;
- (void)regionWillChangeAnimated:(BOOL)a0;
- (void)removeAnnotationsFromMapForHandle:(id)a0;
- (void)removeHandlesFromSession;
- (void)selectAnnotationIfSingleForMac;
- (BOOL)sessionContainsHandle:(id)a0;
- (void)setupRecenterMapTimer;
- (BOOL)singleAnnotationOnMap;
- (void)startShowingLocationsForHandles:(id)a0;
- (void)updateAllAnnotationsDueToAddressBookUpdate;
- (void)updateMapWithNewLocation:(id)a0 animated:(BOOL)a1;
- (void)updateNoLocationView:(BOOL)a0;
- (void)viewWillAppearWillMoveToWindowSetup;

@end

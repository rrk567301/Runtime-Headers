@class NSLock, NSString, NSArray, NSRecursiveLock, PIEPhotoGroupAnalyzer, NSMutableDictionary, KHThemeDatabase, KHAppSelectionContext, KHTheme;
@protocol KHPhotoLibraryProtocol, KHPhotoAppDelegateProtocol, MapServicesProtocol;

@interface KHController : NSObject {
    KHTheme *_currentTheme;
    BOOL _projectChanged;
    NSArray *_photoSelection;
    KHAppSelectionContext *_appSelectionContext;
    NSMutableDictionary *_imageCache;
    NSRecursiveLock *_imageCacheLock;
    NSMutableDictionary *_imageFulfillmentOperations;
    NSLock *_imageFulfillmentLock;
    PIEPhotoGroupAnalyzer *_photoSelectionAnalyzer;
    BOOL _paginationChanged;
    BOOL _fetchingAssortmentData;
    BOOL _reachabilityStatus;
    BOOL _modal;
    BOOL _isPopulating;
    BOOL _isGeneratingThemeDB;
    BOOL _themeDBWritable;
    BOOL _blockHUDs;
    BOOL _renderingComparisonLayouts;
    NSString *_assetCachePath;
    NSString *_currentThemeCategory;
    struct { unsigned char delegateEditProjectPhoto : 1; unsigned char delegateStartPerformanceMonitoringTimerWithKey : 1; unsigned char delegateStopPerformanceMonitoringTimerWithKeyComment : 1; } _controllerFlags;
}

@property (copy) NSString *currentThemeBundlePath;
@property (retain) KHThemeDatabase *themeDatabase;
@property (weak, nonatomic) id<KHPhotoAppDelegateProtocol> delegate;
@property (weak, nonatomic) id<MapServicesProtocol> mapServices;
@property (weak, nonatomic) id<KHPhotoLibraryProtocol> library;

+ (id)sharedInstance;
+ (id)themeDB;
+ (BOOL)canEditPhotos;
+ (struct CGImage { } *)createDropZoneImageForFrame:(id)a0;
+ (struct CGImage { } *)createDropZoneImageForFrame:(id)a0 renderingIntent:(unsigned long long)a1 preferred:(id)a2;
+ (id)dropZoneImageNames;
+ (id)serialUserInitiatedQueue;
+ (id)themeAssetPathForAsset:(id)a0 inLocalCache:(BOOL)a1;
+ (id)themeAssetPathForPath:(id)a0 inLocalCache:(BOOL)a1;
+ (id)userInitiatedQueue;
+ (id)userInteractiveQueue;

- (id)cachesDirectory;
- (void)dealloc;
- (id)temporaryDirectory;
- (id)currentTheme;
- (BOOL)reachabilityStatus;
- (id)currentConfiguration;
- (id)init;
- (void).cxx_destruct;
- (void)_appWillTerminate:(id)a0;
- (void)clearImageCache;
- (BOOL)isModal;
- (id)imageFilterNames;
- (void)setReachabilityStatus:(BOOL)a0;
- (void)setModal:(BOOL)a0;
- (id)themeDB;
- (id)_cachedImageWithKey:(id)a0 suitableForSize:(struct CGSize { double x0; double x1; })a1;
- (id)appSelectionContext;
- (id)assetCachePath;
- (void)attemptDBLoadAsReadOnly:(BOOL)a0;
- (void)attemptThemeDBOpenAsReadOnly:(BOOL)a0;
- (void)cacheImage:(id)a0 forKey:(id)a1 size:(struct CGSize { double x0; double x1; })a2;
- (id)cachedImageWithKey:(id)a0 suitableForSize:(struct CGSize { double x0; double x1; })a1 fulfillmentBlock:(id /* block */)a2;
- (BOOL)canEditPhotos;
- (void)changePhotoUUIDFrom:(id)a0 to:(id)a1;
- (BOOL)checkThemes;
- (void)closeThemeDB;
- (id)currentThemeCategory;
- (BOOL)disableDirectTextEdit;
- (void)editProjectPhoto:(id)a0;
- (id)imageFilterWithName:(id)a0;
- (BOOL)isThemeDBWritable;
- (id)letterpressVideoURL;
- (void)lockImageCache;
- (id)pdfCreatorString;
- (id)photoSelection;
- (id)photoSelectionAnalyzer;
- (BOOL)photoSelectionPrefersPortraitOrientation;
- (void)printProject:(id)a0;
- (BOOL)renderingComparisonLayouts;
- (void)requestAddPhotosToProjectEditor:(id)a0;
- (void)setAppSelectionContext:(id)a0;
- (void)setCurrentTheme:(id)a0;
- (void)setCurrentThemeCategory:(id)a0;
- (void)setPhotoSelection:(id)a0;
- (void)setPhotoSelection:(id)a0 withContext:(id)a1;
- (void)setRenderingComparisonLayouts:(BOOL)a0;
- (void)setThemeDBWritable:(BOOL)a0;
- (id)sharedThemeBundlePath;
- (BOOL)showPageNumberDebug;
- (void)startPerformanceMonitoringTimerWithKey:(id)a0;
- (void)stopPerformanceMonitoringTimerWithKey:(id)a0 comment:(id)a1;
- (void)switchToDefaultDB;
- (void)switchToThemeDBAtPath:(id)a0;
- (void)switchToUpgradeDB;
- (id)themeAssetRoot;
- (id)themeAssetRootForDatabase:(id)a0;
- (unsigned long long)themeCount;
- (long long)themeDBVersion;
- (id)themesDatabasePath;
- (id)themesUpgradeDatabasePath;
- (void)toggleTreatmentsEnabled;
- (void)unlockImageCache;
- (BOOL)useNSBundleCacheForStrings;

@end

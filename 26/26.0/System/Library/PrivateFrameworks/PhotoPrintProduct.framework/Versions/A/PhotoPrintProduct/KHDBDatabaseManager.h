@class KHDBUsage, NSString, NSMutableDictionary, KHDBResultSet, NSMutableSet, NSObject, KHDBPreparedSql;
@protocol OS_dispatch_queue;

@interface KHDBDatabaseManager : NSObject {
    struct sqlite3 { } *_db;
    NSString *_databasePath;
    BOOL _readOnly;
    BOOL _inMemory;
    long long _busyRetryTimeout;
    NSMutableDictionary *_tblXref;
    NSMutableDictionary *_colXref;
    KHDBResultSet *_activeResultSet;
    NSMutableSet *_preparedStatements;
    unsigned int _sqlErrorCount;
    unsigned long long _missedCommits;
    NSObject<OS_dispatch_queue> *_executionQueue;
    NSObject<OS_dispatch_queue> *_executionQueue_mt;
    unsigned long long _qResumeCount;
    KHDBResultSet *_postponableResultSet;
    int _postponableSpinlock;
    KHDBPreparedSql *_commitSql;
    KHDBPreparedSql *_beginTransactionSql;
    unsigned long long _queryCount;
    KHDBUsage *_usageStats[22];
    id /* block */ _commitDelegate;
}

@property (nonatomic) unsigned long long uncommittedUpdates;
@property (readonly, nonatomic) BOOL inTransaction;
@property BOOL isCorrupt;
@property (nonatomic) BOOL logsErrors;
@property (nonatomic) BOOL crashOnErrors;
@property (nonatomic) BOOL throwExceptionOnError;
@property (nonatomic) BOOL traceExecution;
@property (nonatomic) BOOL profileTraceExecution;

+ (void)setLogErrorsEnabled:(BOOL)a0;
+ (id)sqliteLibVersion;

- (id)initWithPath:(id)a0;
- (BOOL)isOpen;
- (BOOL)commit;
- (void)vacuum;
- (id)executionQueue;
- (BOOL)isClosed;
- (id)databasePath;
- (BOOL)readOnly;
- (id)lastErrorMessage;
- (void)dealloc;
- (BOOL)passesIntegrityCheck;
- (long long)filesize;
- (unsigned long long)lastInsertRowId;
- (BOOL)beginTransaction;
- (struct sqlite3 { } *)db;
- (long long)lastErrorCode;
- (void)update:(id)a0;
- (void)analyze;
- (void)close;
- (BOOL)logErrors;
- (BOOL)inMemory;
- (BOOL)boolForQuery:(id)a0;
- (id)query:(id)a0;
- (BOOL)hadError;
- (void)dispatch_async:(id /* block */)a0;
- (void)ensureBackgroundCommitNextCycle;
- (BOOL)openAsReadOnly:(BOOL)a0;
- (id)activeResultSet;
- (double)doubleForQuery:(id)a0;
- (id)listOfNumbersForQuery:(id)a0 withArgs:(id)a1;
- (id)numberForQuery:(id)a0;
- (id)pathForQueryLog;
- (id)query:(id)a0 withArgs:(id)a1;
- (id)stringForQuery:(id)a0;
- (void)_dispatch_async_suspend:(BOOL)a0 withBlock:(id /* block */)a1;
- (void)_dispatch_sync_if_needed_suspend:(BOOL)a0 withBlock:(id /* block */)a1;
- (void)addPostponableResultSet:(id)a0;
- (void)addUsage:(double)a0 ofType:(int)a1;
- (id)arrayOfStringsForQuery:(id)a0;
- (id)arrayOfStringsForQuery:(id)a0 withArgs:(id)a1;
- (void)backgroundCommit:(id)a0;
- (void)backgroundCommitAndBeginNewTransaction:(id)a0;
- (id)beginTransactionSql;
- (void)bindObject:(id)a0 toColumn:(int)a1 inStatement:(struct sqlite3_stmt { } *)a2;
- (long long)busyRetryTimeout;
- (id)columnsForTable:(id)a0;
- (BOOL)commitAndBeginNewTransaction;
- (id /* block */)commitNoticeBlock;
- (id)commitSql;
- (BOOL)createIndexOnTable:(id)a0 columnName:(id)a1;
- (BOOL)createIndexOnTable:(id)a0 columnNames:(id)a1 named:(id)a2;
- (id)dataForQuery:(id)a0;
- (id)dateForQuery:(id)a0;
- (id)dictionaryOfDatesForQuery:(id)a0;
- (id)dictionaryOfDatesForQuery:(id)a0 withArgs:(id)a1;
- (id)dictionaryOfStringsForQuery:(id)a0;
- (id)dictionaryOfStringsForQuery:(id)a0 withArgs:(id)a1;
- (id)dictionaryWithKeySelector:(SEL)a0 valueSelector:(SEL)a1 forQuery:(id)a2 withArgs:(id)a3;
- (void)dispatch_sync_if_needed:(id /* block */)a0;
- (void)dropPostponableResultSet:(id)a0;
- (id)executionQueue_mt;
- (void)finalizePreparedStatements;
- (void)finalizePreparedStatementsLocked;
- (BOOL)goodConnection;
- (void)increaseDatabaseSize:(long long)a0;
- (void)incrementSqlErrorCount;
- (long long)intForQuery:(id)a0;
- (void)lockDatabase;
- (long long)longForQuery:(id)a0;
- (long long)longLongForQuery:(id)a0;
- (BOOL)onDbQueue;
- (BOOL)openAsReadOnly:(BOOL)a0 attemptJournalCleanup:(BOOL)a1;
- (void)postponeActiveResultSet;
- (void)registerPreparedStatement:(id)a0;
- (void)reserveDatabaseSize:(long long)a0;
- (void)setActiveResultSet:(id)a0;
- (void)setBackgroundWritingEnabled:(BOOL)a0;
- (void)setBusyRetryTimeout:(long long)a0;
- (void)setCommitNoticeBlock:(id /* block */)a0;
- (void)setLockingModeToExclusive:(BOOL)a0;
- (id)setOfDatesForQuery:(id)a0 withArgs:(id)a1;
- (id)setOfNumbersForQuery:(id)a0;
- (id)setOfNumbersForQuery:(id)a0 withArgs:(id)a1;
- (id)setOfStringsForQuery:(id)a0;
- (id)setOfStringsForQuery:(id)a0 withArgs:(id)a1;
- (void)setSynchronicity:(long long)a0;
- (unsigned int)sqlErrorCount;
- (long long)synchronicity;
- (void)unlockDatabase;
- (void)unregisterPreparedStatement:(id)a0;
- (void)update:(id)a0 withArgs:(id)a1;
- (BOOL)updateSync:(id)a0 withArgs:(id)a1;
- (id)usageOfType:(int)a0;
- (void)waitForOutstandingWrites;

@end

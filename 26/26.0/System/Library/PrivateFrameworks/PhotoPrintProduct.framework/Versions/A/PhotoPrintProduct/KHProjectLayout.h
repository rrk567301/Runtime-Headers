@class NSDate, NSString, NSRecursiveLock, KHImage, NSMutableDictionary, KHProjectFrame, KHTreatment, KHLayout;
@protocol KHPhotoInfoProtocol;

@interface KHProjectLayout : KHLayout <KHEditorLayoutProtocol, KHSortingProtocol> {
    long long _projectId;
    long long _masterId;
    long long _representativeLayoutId;
    long long _themeId;
    long long _sequence;
    NSString *_compositePath;
    NSString *_masterIdentifier;
    NSString *_treatmentIdentifier;
    NSString *_themeIdentifier;
    double _wildcardScale;
    struct CGPoint { double x; double y; } _wildcardOffset;
    long long _bindingMarginApplied;
    KHProjectFrame *_backgroundPhotoFrame;
    KHLayout *_masterLayout;
    long long _originalTreatmentId;
    NSDate *_calendarDate;
    NSRecursiveLock *_calendarDateLock;
    BOOL _isPlaceholder;
    BOOL _autonomous;
    NSMutableDictionary *_textCache;
}

@property (readonly, nonatomic) NSString *editorLayoutUUID;
@property (readonly, nonatomic) NSString *editorLayoutPasteboardType;
@property (readonly, nonatomic) KHImage *editorLayoutImage;
@property (readonly, nonatomic) double editorLayoutAspectRatio;
@property (readonly, nonatomic) BOOL editorLayoutIsSpread;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned long long printOrderQuantity;
@property (retain, nonatomic) KHTreatment *printFrameTreatment;
@property (readonly, nonatomic) unsigned long long printTrimWidth;
@property (readonly, nonatomic) KHProjectFrame *printPhotoFrame;
@property (readonly, nonatomic) id<KHPhotoInfoProtocol> printPhotoInfo;
@property (readonly, nonatomic) double printPhotoResolution;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)automaticallyNotifiesObserversForKey:(id)a0;
+ (void)addFreshLayoutForTheme:(id)a0 product:(id)a1 layoutInfo:(id)a2 sequenceNumber:(unsigned long long)a3 withPhotoUIDs:(id)a4 toProject:(id)a5;
+ (void)addLayoutForTheme:(id)a0 product:(id)a1 layoutInfo:(id)a2 forceCustomLayout:(BOOL)a3 sequenceNumber:(unsigned long long)a4 withPhotoUIDs:(id)a5 toProject:(id)a6;
+ (id)allLayouts;
+ (id)allLayoutsSortedBy:(unsigned long long)a0;
+ (Class)frameClass;
+ (long long)holeCountForPageData:(id)a0;
+ (id)layoutForKey:(long long)a0;
+ (id)layoutForKey:(long long)a0 fromDatabase:(id)a1;
+ (unsigned long long)layoutUsageTypeForPageData:(id)a0;
+ (id)photoInfosForPageData:(id)a0;
+ (id)removeColorTagFromDesignTag:(id)a0;
+ (long long)textCountForPageData:(id)a0;

- (BOOL)isPlaceholder;
- (id)treatment;
- (unsigned long long)placement;
- (id)theme;
- (void)commonInit;
- (void)unload;
- (void)dealloc;
- (unsigned long long)usageType;
- (id)debugInfo;
- (id)calendarDate;
- (long long)sequence;
- (double)width;
- (void)remove;
- (void)setProjectId:(long long)a0;
- (id)name;
- (void)setSequence:(long long)a0;
- (long long)projectId;
- (double)height;
- (void)setIsPlaceholder:(BOOL)a0;
- (void)setValuesForKeysWithDictionary:(id)a0;
- (long long)pageNumber;
- (void)encodeWithDictionary:(id)a0;
- (id)product;
- (long long)masterId;
- (void)setMasterIdentifier:(id)a0;
- (id)pageName;
- (id)masterIdentifier;
- (void)reflow;
- (id)masterLayout;
- (void)setCalendarDate:(id)a0;
- (id)project;
- (id)treatmentIdentifier;
- (void)cacheProjectId:(long long)a0;
- (long long)showsPageNumber;
- (long long)sortBySequence:(id)a0;
- (BOOL)applyMaster:(id)a0 mirror:(BOOL)a1 allowResize:(BOOL)a2;
- (BOOL)ensureMirroring;
- (double)heightWithBleed;
- (long long)themeId;
- (BOOL)_applyMaster:(id)a0 mirror:(BOOL)a1 allowResize:(BOOL)a2 undoable:(BOOL)a3;
- (id)_applyMasterForFrames:(id)a0 fromFrames:(id)a1;
- (id)_projectTreatmentFromTreatment:(id)a0 inDatabase:(id)a1;
- (void)_undoRedoApplyMaster:(id)a0 adjacentLayout:(id)a1 adjacentPlacement:(long long)a2;
- (void)_undoRedoPlacePhoto:(id)a0 userHasPannedZoomedPhoto:(BOOL)a1 sourceFrameAspectRatio:(id)a2 inLayout:(id)a3 atIndex:(unsigned long long)a4;
- (void)_undoRedoPlacePhoto:(id)a0 userHasPannedZoomedPhoto:(BOOL)a1 zoom:(double)a2 pan:(struct { double x0; double x1; BOOL x2; BOOL x3; })a3 sourceFrameAspectRatio:(id)a4 inLayout:(id)a5 atIndex:(unsigned long long)a6;
- (void)_undoRedoUnplacePhotoFromFrame:(id)a0 frameIndex:(unsigned long long)a1 inLayout:(id)a2;
- (id)addAttributeValue:(id)a0 forKey:(id)a1 type:(id)a2 momentary:(BOOL)a3;
- (void)addCalendarImageCaptionsFromElement:(id)a0 toProject:(id)a1;
- (id)addDefaultFrameOfType:(id)a0;
- (id)applicableThemeLayouts;
- (BOOL)applyMaster:(id)a0 mirror:(BOOL)a1;
- (void)applyRepresentativeLayout:(id)a0;
- (void)applyThemeLayout:(id)a0;
- (unsigned long long)backgroundConfigurationTreatmentType;
- (id)backgroundPhotoFrame;
- (long long)bindingMarginApplied;
- (void)cacheAutonomous:(BOOL)a0;
- (void)cacheBindingMarginApplied:(long long)a0;
- (void)cacheCompositePath:(id)a0;
- (void)cacheHeight:(double)a0;
- (void)cacheIsPlaceholder:(BOOL)a0;
- (void)cacheMasterId:(long long)a0;
- (void)cacheMasterIdentifier:(id)a0;
- (void)cacheRepresentativeLayoutId:(long long)a0;
- (void)cacheSequence:(long long)a0;
- (void)cacheThemeId:(long long)a0;
- (void)cacheTreatmentIdentifier:(id)a0;
- (void)cacheWidth:(double)a0;
- (void)cacheWildcardOffset:(struct CGPoint { double x0; double x1; })a0;
- (void)cacheWildcardOffsetFromString:(id)a0;
- (void)cacheWildcardScale:(double)a0;
- (BOOL)cachedAutonomous;
- (BOOL)canApplyThemeLayoutWithSpreadPlacement;
- (void)captureCalendarEntryFromElement:(id)a0 toProject:(id)a1 referenceDate:(id)a2;
- (id)cloneForNewProjectId:(long long)a0;
- (id)cloneInDatabase:(id)a0 forNewProjectId:(long long)a1;
- (id)compositePath;
- (void)createBackgroundPhotoFrame;
- (void)createTreatmentFrame;
- (id)currentLayoutTypeInfo;
- (void)destroyBackgroundPhotoFrame;
- (double)editorLayoutAspectScaleForEnclosingSize:(struct CGSize { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })editorLayoutAspectSizeAtScale:(double)a0;
- (void)ensureBackgroundFromTheme:(id)a0;
- (void)ensureBackgroundPhotoFrame;
- (void)fillFramesMatchingAspectRatioPhotos:(id)a0 onlyEmpty:(BOOL)a1 shouldAutoZoomAndCrop:(BOOL)a2 useROI:(BOOL)a3 allowPhotoReorder:(BOOL)a4 notify:(BOOL)a5;
- (void)fillFramesMatchingAspectRatioPhotos:(id)a0 shouldAutoZoomAndCrop:(BOOL)a1 notify:(BOOL)a2;
- (void)fillFramesWithPhotos:(id)a0;
- (void)fillFramesWithPhotos:(id)a0 onlyEmpty:(BOOL)a1 notify:(BOOL)a2;
- (void)fillFramesWithPhotos:(id)a0 onlyEmpty:(BOOL)a1 shouldAutoZoomAndCrop:(BOOL)a2 notify:(BOOL)a3;
- (void)fillTextFramesWithTextFrameInformation:(id)a0;
- (void)fillTextFramesWithTextFromLayout:(id)a0;
- (BOOL)isAutonomous;
- (BOOL)isInside;
- (BOOL)isPageType:(unsigned long long)a0 forTheme:(id)a1;
- (BOOL)isProjectModel;
- (id)layoutTypeInfosForType:(unsigned long long)a0;
- (void)loadAttributes;
- (id)masterLayoutsForTypeInfo:(id)a0;
- (void)minimizeLayoutHeight;
- (void)mirrorFrames;
- (id)otherLayoutTypeInfos;
- (id)photoLayoutTypeInfos;
- (id)placedPhotoInfos;
- (void)populateLayoutWithPageDataFromDictionary:(id)a0 toProject:(id)a1 fillTextUsingHeightSort:(BOOL)a2;
- (id)representativeLayout;
- (long long)representativeLayoutId;
- (void)restoreBackgroundTreatment;
- (void)setAutonomous:(BOOL)a0;
- (void)setBackgroundTreatment:(id)a0 momentary:(BOOL)a1;
- (void)setBindingMarginApplied:(long long)a0;
- (void)setCompositePath:(id)a0;
- (void)setMasterId:(long long)a0;
- (void)setRepresentativeLayoutId:(long long)a0;
- (void)setThemeId:(long long)a0;
- (void)setTreatmentIdentifier:(id)a0;
- (void)setWildcardOffset:(struct CGPoint { double x0; double x1; })a0;
- (void)setWildcardScale:(double)a0;
- (id)textFrameInformation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trimmedRectForScale:(double)a0;
- (BOOL)undoRedoApplyMaster:(id)a0 mirror:(BOOL)a1 allowResize:(BOOL)a2;
- (void)undoRedoSetBackgroundTreatment:(id)a0 linked:(BOOL)a1;
- (double)widthWithBleed;
- (struct CGPoint { double x0; double x1; })wildcardOffset;
- (double)wildcardScale;
- (BOOL)wildcardsEnabled;

@end

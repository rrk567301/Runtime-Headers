@class MKMapSnapshot, NSRecursiveLock, NSArray, NSSet, KHTreatment, KHConfiguration, NSNumber, KHEnvironment;
@protocol MapRendererProtocol;

@interface KHMapFrameRenderer : KHFrameRenderer {
    id<MapRendererProtocol> _mapRenderer;
    NSArray *_mapMarkerAdapters;
    NSArray *_mapMarkerConnectors;
    KHTreatment *_mapMarkerTreatment;
    KHTreatment *_mapMarkerSelectedTreatment;
    KHTreatment *_mapCompassTreatment;
    KHTreatment *_mapTitleTreatment;
    double _lastRenderScale;
    double _lastBackingScaleFactor;
    BOOL _refreshNeeded;
    BOOL _invalidateMapFrameDefaultMapMarkers;
    NSRecursiveLock *_renderingLock;
    NSSet *_lastUserHilitedRegionIds;
    unsigned long long _mapMotionState;
    BOOL _mapHUDElementLayoutNeeded;
    KHTreatment *_connectorTreatmentCurvedUp;
    KHTreatment *_connectorTreatmentCurvedDown;
    KHTreatment *_connectorTreatmentStraight;
    NSNumber *_lastMapStyleConfigurationId;
    KHConfiguration *_mapStyleConfiguration;
    struct CGLayer { } *_mapLayer;
    BOOL _mapLayerInvalidated;
    struct CGContext { } *_dummyContext;
    KHEnvironment *_dummyEnvironment;
    MKMapSnapshot *_mapSnapshot;
}

+ (struct CGImage { } *)_createPlaceholderMapImage;
+ (float)mapScaleForUnitZoom:(double)a0;
+ (double)mapUnitZoomForScale:(float)a0;
+ (id)newLabelTextFrameForMapFrame:(id)a0;

- (void)clearCache;
- (void)dealloc;
- (void)_refreshNeeded:(id)a0;
- (void)moveMapRegionLabelWithRegionId:(id)a0;
- (void)_centerAndZoomMapAroundMarkers:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundingBoxForVisibleMapMarkerLabelTextFrames;
- (id)_connectorTreatmentCurvedDown;
- (id)_connectorTreatmentCurvedUp;
- (id)_connectorTreatmentStraight;
- (id)_forceRefreshCurrentMapTitleFrame;
- (void)_invalidateMapLayer;
- (id)_mapRenderer;
- (void)_notifyPlacedPhotosChanged:(id)a0;
- (void)_refreshAtScale:(double)a0;
- (void)_refreshMapCompass;
- (void)_refreshMapMarkerConnectors;
- (void)_refreshMapMarkers:(id)a0;
- (void)_refreshMapRenderer:(id)a0;
- (void)_refreshMapStyleConfiguration;
- (void)_refreshMapTitle;
- (void)_renderMapIntoContext:(struct CGContext { } *)a0 environment:(id)a1 scale:(double)a2;
- (void)_renderMapMarkersIntoContext:(struct CGContext { } *)a0 environment:(id)a1 usingMapSnapshot:(id)a2 scale:(double)a3;
- (BOOL)_updateMapMarkerConnectors:(id)a0 scale:(double)a1;
- (void)_updateMapMarkers:(id)a0 scale:(double)a1;
- (id)_visibleMapMarkerAdapters;
- (void)centerAndZoomMapAroundAllMarkers;
- (void)centerAndZoomMapAroundVisibleMarkers;
- (struct CGPoint { double x0; double x1; })centerLatLongWithPan:(struct { double x0; double x1; BOOL x2; BOOL x3; })a0;
- (id)currentMapTitleFrame;
- (void)fillContext:(struct CGContext { } *)a0 environment:(id)a1 scale:(double)a2;
- (id)initForFrame:(id)a0;
- (struct CGPoint { double x0; double x1; })latLongLocationForPoint:(struct CGPoint { double x0; double x1; })a0 scale:(double)a1;
- (void)layoutMapHUDElementsAtScale:(double)a0;
- (void)loadAttributes;
- (id)mapCenterLatLongForRegionWithId:(id)a0;
- (id)mapMarkerAtPoint:(struct CGPoint { double x0; double x1; })a0 scale:(double)a1;
- (unsigned long long)mapMotionState;
- (id)mapRegionIdAtLocation:(struct CGPoint { double x0; double x1; })a0;
- (id)mapRegionIdAtPoint:(struct CGPoint { double x0; double x1; })a0 scale:(double)a1;
- (BOOL)mapTitleCanBeVisible;
- (void)refreshMap;
- (void)refreshMapAndHUD;
- (BOOL)refreshMapFrameDefaultMarkers;
- (void)refreshMapHUD;
- (void)setMapMotionState:(unsigned long long)a0;
- (void)updateMapHUDElementsAtScale:(double)a0;

@end

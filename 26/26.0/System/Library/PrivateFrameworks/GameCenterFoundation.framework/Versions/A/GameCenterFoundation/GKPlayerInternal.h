@class NSDate, GKGameInternal, NSString, NSArray, GKMessageInboxEntryInternal, NSDictionary, GKScopedIDs, CNContact, GKPlayerInternalOnboarding, NSNumber, GKAvatarArtwork;

@interface GKPlayerInternal : GKInternalRepresentation {
    GKAvatarArtwork *avatarArtwork;
    unsigned long long _lastWelcomeWhatsNewCopyVersionDisplayed;
    unsigned long long _lastPrivacyNoticeVersionDisplayed;
    NSString *_lastPersonalizationVersionDisplayed;
    NSString *_lastProfilePrivacyVersionDisplayed;
    NSString *_lastContactsIntegrationConsentVersionDisplayed;
    NSString *_lastFriendSuggestionsVersionDisplayed;
    union { struct { unsigned char _unused : 8; unsigned char _purpleBuddyAccount : 1; unsigned char _underage : 1; unsigned char _photoPending : 1; unsigned char _findable : 1; unsigned char _defaultNickname : 1; unsigned char _defaultPrivacyVisibility : 1; unsigned char _defaultContactsIntegrationConsent : 1; unsigned int _reserved : 18; } ; unsigned int _value; } _flags;
}

@property (nonatomic) unsigned int flags;
@property (copy, nonatomic) id /* block */ sanitizeBeforeEncoding;
@property (retain) NSString *playerID;
@property (retain) GKScopedIDs *scopedIDs;
@property (retain, nonatomic) NSString *alias;
@property (retain, nonatomic) GKAvatarArtwork *avatarArtwork;
@property (retain, nonatomic) NSNumber *avatarType;
@property (retain, nonatomic) NSDictionary *photos;
@property (readonly, nonatomic) BOOL isFriend;
@property (readonly, nonatomic) BOOL isLocalPlayer;
@property (readonly, nonatomic) BOOL isAnonymousPlayer;
@property (readonly, nonatomic) BOOL isUnknownPlayer;
@property (readonly, nonatomic) BOOL isAutomatchPlayer;
@property (readonly, nonatomic) BOOL isLoaded;
@property (readonly, nonatomic) BOOL isGuestPlayer;
@property (nonatomic) BOOL isInContacts;
@property (readonly, nonatomic, getter=isFriendInvitationInContacts) BOOL friendInvitationInContacts;
@property (nonatomic) unsigned short numberOfFriendsInCommon;
@property (nonatomic) unsigned short numberOfGamesInCommon;
@property (nonatomic) BOOL isChallengeable;
@property (nonatomic) BOOL supportsMultiplayerActivities;
@property (nonatomic) BOOL allowReceivingFriendInvites;
@property (retain, nonatomic) NSString *firstName;
@property (retain, nonatomic) NSString *lastName;
@property (retain, nonatomic) NSNumber *friendLevel;
@property (retain, nonatomic) NSNumber *friendBiDirectional;
@property (retain, nonatomic) NSNumber *friendPlayedWith;
@property (retain, nonatomic) NSNumber *friendPlayedNearby;
@property (retain, nonatomic) NSNumber *acceptedGameInviteFromThisFriend;
@property (retain, nonatomic) NSNumber *initiatedGameInviteToThisFriend;
@property (retain, nonatomic) NSNumber *automatchedTogether;
@property (retain, nonatomic) NSString *compositeName;
@property (retain, nonatomic) NSString *status;
@property (retain, nonatomic) NSDate *lastPlayedDate;
@property (retain, nonatomic) GKGameInternal *lastPlayedGame;
@property (nonatomic) BOOL challengedTogether;
@property (retain, nonatomic) GKGameInternal *lastChallengedGame;
@property (retain, nonatomic) NSDate *lastChallengedDate;
@property (retain, nonatomic) NSString *guestIdentifier;
@property (retain, nonatomic) NSString *messagesID;
@property (nonatomic) unsigned short numberOfFriends;
@property (nonatomic) unsigned short numberOfGames;
@property (nonatomic) unsigned int numberOfAchievements;
@property (nonatomic) unsigned int numberOfAchievementPoints;
@property (retain, nonatomic) NSString *accountName;
@property (retain, nonatomic) NSArray *friends;
@property (nonatomic, getter=isPurpleBuddyAccount) BOOL purpleBuddyAccount;
@property (nonatomic, getter=isUnderage) BOOL underage;
@property (readonly, nonatomic) int ageCategory;
@property (nonatomic, getter=isFindable) BOOL findable;
@property (nonatomic, getter=isDefaultNickname) BOOL defaultNickname;
@property (nonatomic, getter=isDefaultPrivacyVisibility) BOOL defaultPrivacyVisibility;
@property (nonatomic, getter=isDefaultContactsIntegrationConsent) BOOL defaultContactsIntegrationConsent;
@property (nonatomic, getter=isPhotoPending) BOOL photoPending;
@property (nonatomic) unsigned short numberOfRequests;
@property (nonatomic) unsigned short numberOfTurns;
@property (nonatomic) unsigned short numberOfChallenges;
@property (retain) GKPlayerInternalOnboarding *onboarding;
@property (nonatomic) int achievementsVisibility;
@property (nonatomic) int friendsVisibility;
@property (nonatomic) int gamesPlayedVisibility;
@property (nonatomic) BOOL allowChallengeFriendInvites;
@property (nonatomic) BOOL allowMultiplayerFriendInvites;
@property (nonatomic) int contactsIntegrationConsent;
@property (retain, nonatomic) NSString *contactsAssociationID;
@property (retain, nonatomic) CNContact *contact;
@property (retain, nonatomic) NSDate *serviceLastUpdatedTimestamp;
@property (nonatomic) int globalFriendListAccess;
@property (nonatomic) BOOL isArcadeSubscriber;
@property (retain, nonatomic) GKMessageInboxEntryInternal *inboxEntry;

+ (BOOL)supportsSecureCoding;
+ (id)secureCodedPropertyKeys;
+ (Class)classForFamiliarity:(int)a0;
+ (id)compositeNameForFirstName:(id)a0 lastName:(id)a1;
+ (id)displayNameWithOptions:(unsigned char)a0 alias:(id)a1 composite:(id)a2;

- (int)ageCategory;
- (id)cacheKey;
- (void)setLastName:(id)a0;
- (void)setFirstName:(id)a0;
- (void)setFlags:(unsigned int)a0;
- (id)firstName;
- (id)lastName;
- (id)debugDescription;
- (void)encodeWithCoder:(id)a0;
- (id)friends;
- (void)setStatus:(id)a0;
- (unsigned int)flags;
- (id)status;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)a0;
- (id)accountName;
- (void).cxx_destruct;
- (id)compositeName;
- (id)conciseDescription;
- (void)setAccountName:(id)a0;
- (id)lastPlayedDate;
- (void)setFriends:(id)a0;
- (void)setLastPlayedDate:(id)a0;
- (void)sanitize;
- (unsigned short)numberOfRequests;
- (void)setNumberOfRequests:(unsigned short)a0;
- (void)setCompositeName:(id)a0;
- (id)lastPlayedGame;
- (id)guestIdentifier;
- (void)setAllowChallengeFriendInvites:(BOOL)a0;
- (id)minimalInternal;
- (void)setAllowReceivingFriendInvites:(BOOL)a0;
- (BOOL)allowChallengeFriendInvites;
- (BOOL)allowMultiplayerFriendInvites;
- (BOOL)allowNearbyMultiplayer;
- (BOOL)allowReceivingFriendInvites;
- (BOOL)challengedTogether;
- (int)defaultFamiliarity;
- (id)displayNameWithOptions:(unsigned char)a0;
- (int)globalFriendListSharingStatus;
- (id)initWithSanitizeBeforeEncodingBlock:(id /* block */)a0;
- (id)lastChallengedDate;
- (id)lastChallengedGame;
- (unsigned short)numberOfChallenges;
- (unsigned short)numberOfTurns;
- (id)serverRepresentation;
- (void)setAllowMultiplayerFriendInvites:(BOOL)a0;
- (void)setAllowNearbyMultiplayer:(BOOL)a0;
- (void)setChallengedTogether:(BOOL)a0;
- (void)setDefaultContactsIntegrationConsent:(BOOL)a0;
- (void)setDefaultNickname:(BOOL)a0;
- (void)setDefaultPrivacyVisibility:(BOOL)a0;
- (void)setFindable:(BOOL)a0;
- (void)setLastChallengedDate:(id)a0;
- (void)setLastChallengedGame:(id)a0;
- (void)setLastPlayedGame:(id)a0;
- (void)setNumberOfChallenges:(unsigned short)a0;
- (void)setNumberOfTurns:(unsigned short)a0;
- (void)setPhotoPending:(BOOL)a0;
- (void)setPurpleBuddyAccount:(BOOL)a0;
- (void)setUnderage:(BOOL)a0;

@end

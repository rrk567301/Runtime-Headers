@class NSMutableDictionary, NSDictionary, NSObject, NSMutableArray, GKTransportMonitor, GKTransportContext, NSString, GKMultiplayerActivityReporter, NSMutableSet, GKThreadsafeDictionary, GKMatchmaker, NSArray, _TtC20GameCenterFoundation22ExponentialBackoffTask;
@protocol GKMatchDelegatePrivate, GKMatchDelegate, OS_dispatch_queue, GKTransportProtocol;

@interface GKMatch : NSObject <GameCenterFoundation.ExponentialBackoffTaskDelegate, GKTransportMonitorDelegate, GKTransportClientDelegate, GKTransportMatchDataDelegate>

@property (retain, nonatomic) NSMutableDictionary *playerEventQueues;
@property (retain, nonatomic) NSMutableSet *connectedPlayerIDs;
@property (retain, nonatomic) GKThreadsafeDictionary *playersByIdentifier;
@property (retain, nonatomic) NSMutableArray *reinvitedPlayers;
@property (nonatomic) unsigned char version;
@property (weak, nonatomic) id<GKMatchDelegatePrivate> inviteDelegate;
@property (nonatomic) unsigned int packetSequenceNumber;
@property (retain, nonatomic) NSMutableDictionary *playerPushTokens;
@property (retain, nonatomic) NSMutableArray *opponentIDs;
@property (retain, nonatomic) NSString *rematchID;
@property (nonatomic) long long rematchCount;
@property (retain, nonatomic) NSDictionary *networkStatistics;
@property (retain, nonatomic) NSMutableDictionary *hostScores;
@property (nonatomic) BOOL needHostScore;
@property (nonatomic) BOOL hostScoreForQuery;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *stateChangeQueue;
@property (copy, nonatomic) id /* block */ chooseHostCompletion;
@property (nonatomic) BOOL fastStartStateActive;
@property (nonatomic) BOOL initiallyStarted;
@property (nonatomic) BOOL canPromptTapToRadar;
@property (retain, nonatomic) NSString *groupIdentifier;
@property (retain, nonatomic) GKThreadsafeDictionary *playersByJoinType;
@property (retain, nonatomic) id<GKTransportProtocol> transport;
@property (retain, nonatomic) GKTransportContext *transportContext;
@property (retain, nonatomic) GKThreadsafeDictionary *propertiesByPlayerID;
@property (retain, nonatomic) GKMultiplayerActivityReporter *multiplayerActivityReporter;
@property (retain, nonatomic) _TtC20GameCenterFoundation22ExponentialBackoffTask *pendingConnectionChecker;
@property (weak, nonatomic) GKMatchmaker *matchmaker;
@property (retain, nonatomic) GKTransportMonitor *healthMonitor;
@property (nonatomic) BOOL recentlyBecameActive;
@property (readonly, nonatomic) NSArray *players;
@property (weak, nonatomic) id<GKMatchDelegate> delegate;
@property (readonly, nonatomic) unsigned long long expectedPlayerCount;
@property (readonly, nonatomic) NSDictionary *properties;
@property (readonly, nonatomic) NSDictionary *playerProperties;
@property (readonly, nonatomic) unsigned long long currentPlayerCount;
@property (readonly, nonatomic) unsigned long long currentPlayerCountIncludingLocalPlayer;
@property (readonly, nonatomic) NSArray *guestPlayers;

- (void)disconnect;
- (void)dealloc;
- (id)description;
- (void)applicationDidEnterBackground:(id)a0;
- (void)applicationWillEnterForeground:(id)a0;
- (void).cxx_destruct;
- (id)dataFromBase64String:(id)a0;
- (void)applicationWillTerminateNotification:(id)a0;
- (id)nearbyConnectionData;
- (void)sendInviteData:(id)a0;
- (void)updateRematchID;
- (id)stringForGKPeerConnectionState:(int)a0;
- (void)_delegate:(id)a0 didReceiveData:(id)a1 forRecipient:(id)a2 fromPlayer:(id)a3;
- (void)acceptRelayResponse:(id)a0 player:(id)a1;
- (void)addPlayerToGroup:(id)a0;
- (void)addPlayers:(id)a0;
- (id)allIDs;
- (void)cancelPendingConnectionCheckWithReason:(id)a0;
- (void)chooseBestHostPlayerWithCompletionHandler:(id /* block */)a0;
- (void)chooseBestHostingPlayerWithCompletionHandler:(id /* block */)a0;
- (void)cleanupForTerminationWithReason:(long long)a0;
- (void)clearSessionWithReason:(long long)a0;
- (void)conditionallyReinvitePlayer:(id)a0 sessionToken:(id)a1;
- (void)conditionallyRelaunchPlayer:(id)a0;
- (void)connectToGuestPlayer:(id)a0 withHostPlayer:(id)a1;
- (void)connectToNearbyPlayer:(id)a0 withConnectionData:(id)a1;
- (void)connectToPlayers:(id)a0 version:(unsigned char)a1 invitedByLocalPlayer:(BOOL)a2 completionHandler:(id /* block */)a3;
- (id)connectedPlayers;
- (void)connectionDidChangeWithState:(int)a0 playerID:(id)a1;
- (void)connectionDidFailWithError:(id)a0;
- (void)deferStateCallbackForPlayer:(id)a0 state:(long long)a1;
- (void)deliverData:(id)a0 forRecipient:(id)a1 fromPlayer:(id)a2;
- (id)getConnectionContextForPlayerID:(id)a0;
- (void)getLocalConnectionDataWithCompletionHandler:(id /* block */)a0;
- (void)handleRelayPushData:(id)a0 onlyIfPreemptive:(BOOL)a1;
- (id)initWithMatchmaker:(id)a0;
- (id)initWithTransport:(id)a0 context:(id)a1 reporter:(id)a2 matchmaker:(id)a3;
- (void)localPlayerDidChange:(id)a0;
- (id)makeInviteMessageDoneData;
- (id)matchPacketWithPacketType:(unsigned char)a0 sequence:(long long)a1;
- (void)monitorStatsUpdated:(id)a0;
- (id)packet:(unsigned char)a0 data:(id)a1;
- (id)pendingInviteesOfLocalPlayer;
- (id)playerFromID:(id)a0;
- (id)playerFromID:(id)a0 includingLocal:(BOOL)a1;
- (id)playerIDs;
- (void)preLoadInviter:(id)a0 sessionToken:(id)a1;
- (void)preemptRelay:(id)a0;
- (void)promptRadarAndRequestRemoteLogsWithDescriptionAddition:(id)a0;
- (void)putMultiplayerGroup;
- (void)queueData:(id)a0 withEventQueueForPlayer:(id)a1 forRecipient:(id)a2;
- (void)receivedPlayerSyncData:(id)a0;
- (void)refreshPendingConnectionCheckIfNeeded;
- (void)reinviteeAcceptedNotification:(id)a0;
- (void)reinviteeDeclinedNotification:(id)a0;
- (void)relayDidReceivePushData:(id)a0 completionHandler:(id /* block */)a1;
- (void)rematchWithCompletionHandler:(id /* block */)a0;
- (void)reportInviteSentWithApproach:(unsigned long long)a0 isHosted:(BOOL)a1 recipients:(id)a2;
- (void)retryLimitHit;
- (void)sendConnectingStateCallbackToDelegate:(id)a0 forPlayers:(id)a1;
- (BOOL)sendData:(id)a0 toPlayers:(id)a1 dataMode:(long long)a2 error:(id *)a3;
- (BOOL)sendData:(id)a0 toPlayers:(id)a1 withDataMode:(long long)a2 error:(id *)a3;
- (BOOL)sendDataToAllPlayers:(id)a0 withDataMode:(long long)a1 error:(id *)a2;
- (void)sendInviteData:(id)a0 withScope:(long long)a1;
- (void)sendMeasurementData:(id)a0 packetType:(unsigned char)a1 toPlayerID:(id)a2;
- (BOOL)sendPacketDataToAll:(id)a0 packetType:(unsigned char)a1 dataMode:(long long)a2 error:(id *)a3;
- (void)sendPingTo:(id)a0 sequence:(long long)a1;
- (void)sendPongTo:(id)a0 sequence:(long long)a1;
- (void)sendQueuedPacketsForPlayer:(id)a0;
- (void)sendQueuedStatesAndPackets;
- (void)sendStateCallbackForPlayer:(id)a0 state:(long long)a1;
- (void)sendStateCallbackToDelegate:(id)a0 forPlayer:(id)a1 state:(long long)a2;
- (void)sendVersionData:(unsigned char)a0;
- (void)sendVersionData:(unsigned char)a0 toPlayer:(id)a1;
- (long long)sequenceFromPacket:(id)a0;
- (void)setAutomatchPlayerCount:(long long)a0;
- (void)setupWithTransport:(id)a0 context:(id)a1 reporter:(id)a2 matchmaker:(id)a3;
- (id)stringForGKPlayerConnectionState:(long long)a0;
- (void)syncPlayers:(id)a0 forJoinType:(int)a1 toInvitees:(id)a2;
- (void)transportDidFailWithError:(id)a0;
- (void)transportDidReceivePacket:(id)a0 fromPlayerID:(id)a1 remoteRecipientID:(id)a2;
- (void)transportDidUpdateWithInfo:(id)a0;
- (id)updateConnectionInfo:(id)a0 forPlayerID:(id)a1;
- (void)updateEventQueueForInviter:(id)a0;
- (void)updateJoinedPlayer:(id)a0 joinType:(int)a1;
- (void)updateProperties:(id)a0 playerID:(id)a1;
- (void)updateStateForPlayer:(id)a0 state:(long long)a1;
- (id)voiceChatWithName:(id)a0;
- (void)withEventQueueForPlayer:(id)a0 create:(id /* block */)a1 perform:(id /* block */)a2;
- (void)withEventQueueForPlayer:(id)a0 createIfNeeded:(BOOL)a1 perform:(id /* block */)a2;
- (void)withEventQueueForPlayer:(id)a0 perform:(id /* block */)a1;

@end

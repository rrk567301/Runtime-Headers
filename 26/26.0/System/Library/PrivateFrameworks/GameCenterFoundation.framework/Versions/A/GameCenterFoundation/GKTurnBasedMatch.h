@class GKGame, NSString, NSDate, GKTurnBasedMatchInternal, GKTurnBasedParticipant, NSArray, NSData, GKPlayer;

@interface GKTurnBasedMatch : NSObject <GKSessionDelegate>

@property (copy) NSDate *lastTurnDate;
@property (readonly) long long turnNumber;
@property (readonly) NSDate *dateSortKey;
@property (retain) GKTurnBasedParticipant *currentParticipant;
@property (readonly) GKTurnBasedParticipant *previousParticipant;
@property (readonly) GKTurnBasedParticipant *previousParticipantOrFirstKnownPlayer;
@property (readonly) GKTurnBasedParticipant *playingWithParticipantOrFirstKnownPlayer;
@property (readonly) GKTurnBasedParticipant *localPlayerParticipant;
@property (readonly, nonatomic) GKPlayer *showcasePlayer;
@property (readonly) GKTurnBasedParticipant *firstWinnerOrTiedOrLastLoser;
@property unsigned long long matchDataMaximumSize;
@property (readonly) GKPlayer *currentPlayer;
@property (retain) NSString *bundleID;
@property (retain) NSString *bundleVersion;
@property (retain) NSString *shortBundleVersion;
@property (readonly) long long platform;
@property (nonatomic) unsigned int state;
@property (readonly, nonatomic) BOOL isMyTurn;
@property (readonly, nonatomic) BOOL localPlayerHasRecentTurn;
@property (readonly, nonatomic) GKGame *game;
@property (retain) GKTurnBasedMatchInternal *internal;
@property (copy) NSDate *lastTurnDate;
@property (readonly) long long turnNumber;
@property (readonly) NSDate *dateSortKey;
@property (retain) GKTurnBasedParticipant *currentParticipant;
@property (readonly) GKTurnBasedParticipant *previousParticipant;
@property (readonly) GKTurnBasedParticipant *previousParticipantOrFirstKnownPlayer;
@property (readonly) GKTurnBasedParticipant *playingWithParticipantOrFirstKnownPlayer;
@property (readonly) GKTurnBasedParticipant *localPlayerParticipant;
@property (readonly, nonatomic) GKPlayer *showcasePlayer;
@property (readonly) GKTurnBasedParticipant *firstWinnerOrTiedOrLastLoser;
@property unsigned long long matchDataMaximumSize;
@property (readonly) GKPlayer *currentPlayer;
@property (retain) NSString *bundleID;
@property (retain) NSString *bundleVersion;
@property (retain) NSString *shortBundleVersion;
@property (readonly) long long platform;
@property (nonatomic) unsigned int state;
@property (readonly, nonatomic) BOOL isMyTurn;
@property (readonly, nonatomic) BOOL localPlayerHasRecentTurn;
@property (readonly, nonatomic) GKGame *game;
@property (retain) GKTurnBasedMatchInternal *internal;
@property (readonly) NSString *matchID;
@property (readonly) NSDate *creationDate;
@property (readonly) NSArray *participants;
@property (readonly) long long status;
@property (readonly) NSData *matchData;
@property (copy) NSString *message;
@property (readonly) NSArray *exchanges;
@property (readonly) NSArray *activeExchanges;
@property (readonly) NSArray *completedExchanges;
@property (readonly) unsigned long long exchangeDataMaximumSize;
@property (readonly) unsigned long long exchangeMaxInitiatedExchangesPerPlayer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)instancesRespondToSelector:(SEL)a0;
+ (id)keyPathsForValuesAffectingStatus;
+ (id)instanceMethodSignatureForSelector:(SEL)a0;
+ (void)findMatchForRequest:(id)a0 withCompletionHandler:(id /* block */)a1;
+ (id)_localizableMessageWithKey:(id)a0 arguments:(id)a1 defaultMessage:(id)a2;
+ (void)getTurnBasedBadgeCountWithHandler:(id /* block */)a0;
+ (void)loadMatchWithID:(id)a0 withCompletionHandler:(id /* block */)a1;
+ (void)loadMatchesIncludingCompatibleBundleID:(BOOL)a0 withCompletionHandler:(id /* block */)a1;
+ (void)loadMatchesWithCompletionHandler:(id /* block */)a0;
+ (void)loadTurnBasedMatchDetailsForMatchIDs:(id)a0 loadGameData:(BOOL)a1 withCompletionHandler:(id /* block */)a2;
+ (void)loadTurnBasedMatchSummaries:(id /* block */)a0;
+ (void)loadTurnBasedMatchSummariesIncludingCompatibleBundleID:(BOOL)a0 withCompletionHandler:(id /* block */)a1;
+ (void)loadTurnBasedMatchWithDetailsForMatchID:(id)a0 withCompletionHandler:(id /* block */)a1;
+ (id)matchesWithInternalRepresentations:(id)a0;

- (id)forwardingTargetForSelector:(SEL)a0;
- (long long)compare:(id)a0;
- (id)init;
- (id)valueForUndefinedKey:(id)a0;
- (long long)status;
- (void)setValue:(id)a0 forUndefinedKey:(id)a1;
- (BOOL)respondsToSelector:(SEL)a0;
- (id)methodSignatureForSelector:(SEL)a0;
- (id)daemonProxy;
- (BOOL)isEqual:(id)a0;
- (void).cxx_destruct;
- (id)initWithInternalRepresentation:(id)a0;
- (void)removeWithCompletionHandler:(id /* block */)a0;
- (void)acceptInviteWithCompletionHandler:(id /* block */)a0;
- (id)_exchangesForInternalRepresentation:(id)a0 participants:(id)a1;
- (id)_participantsForInternalRepresentation:(id)a0;
- (void)_updateWithInternal:(id)a0;
- (void)declineInviteWithCompletionHandler:(id /* block */)a0;
- (void)endMatchInTurnWithMatchData:(id)a0 completionHandler:(id /* block */)a1;
- (void)endMatchInTurnWithMatchData:(id)a0 leaderboardScores:(id)a1 achievements:(id)a2 completionHandler:(id /* block */)a3;
- (void)endMatchInTurnWithMatchData:(id)a0 scores:(id)a1 achievements:(id)a2 completionHandler:(id /* block */)a3;
- (void)endTurnWithNextParticipant:(id)a0 matchData:(id)a1 completionHandler:(id /* block */)a2;
- (void)endTurnWithNextParticipants:(id)a0 turnTimeout:(double)a1 matchData:(id)a2 completionHandler:(id /* block */)a3;
- (unsigned long long)exchangeDataMaximumSize;
- (id)exchangeForID:(id)a0;
- (unsigned long long)exchangeMaxInitiatedExchangesPerPlayer;
- (id)indexesForParticipants:(id)a0;
- (void)loadMatchDataWithCompletionHandler:(id /* block */)a0;
- (void)loadURLWithMatchRequest:(id)a0 completionHandler:(id /* block */)a1;
- (void)participantQuitInTurnWithOutcome:(long long)a0 nextParticipant:(id)a1 matchData:(id)a2 completionHandler:(id /* block */)a3;
- (void)participantQuitInTurnWithOutcome:(long long)a0 nextParticipants:(id)a1 turnTimeout:(double)a2 matchData:(id)a3 completionHandler:(id /* block */)a4;
- (void)participantQuitOutOfTurnWithOutcome:(long long)a0 withCompletionHandler:(id /* block */)a1;
- (void)rematchWithCompletionHandler:(id /* block */)a0;
- (void)reserveShareParticipantSlots:(long long)a0 minPlayerCount:(long long)a1 maxPlayerCount:(long long)a2 andInvitePlayers:(id)a3 withMessage:(id)a4 handler:(id /* block */)a5;
- (void)saveCurrentTurnWithMatchData:(id)a0 completionHandler:(id /* block */)a1;
- (void)saveMergedMatchData:(id)a0 withResolvedExchanges:(id)a1 completionHandler:(id /* block */)a2;
- (void)sendExchangeToParticipants:(id)a0 data:(id)a1 localizableMessageKey:(id)a2 arguments:(id)a3 timeout:(double)a4 completionHandler:(id /* block */)a5;
- (void)sendReminderToParticipants:(id)a0 localizableMessageKey:(id)a1 arguments:(id)a2 completionHandler:(id /* block */)a3;
- (void)setLocalizableMessageWithKey:(id)a0 arguments:(id)a1;

@end

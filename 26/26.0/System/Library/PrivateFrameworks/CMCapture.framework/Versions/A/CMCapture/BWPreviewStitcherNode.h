@class BWPreviewRegistration, NSURL, NSMutableDictionary, CIContext, NSDictionary, BWRamp, FigCaptureMachPortSendRight, BWPixelBufferPool, NSObject, BWFencedAnimationQueue, BWSpringSimulation, NSString, BWMemoryPoolFlushAssertion, NSArray;
@protocol OS_dispatch_group, OS_dispatch_semaphore, OS_dispatch_queue, BWPreviewStitcherDelegate;

@interface BWPreviewStitcherNode : BWNode {
    struct { int width; int height; } _outputDimensions;
    int _rotationDegrees;
    BOOL _flipHorizontal;
    BOOL _flipVertical;
    double _primaryCaptureRectYInset;
    int _primaryCaptureRectPixelInset;
    struct CGPoint { double x; double y; } _primaryCaptureRectCenter;
    int _primaryCaptureRectCenterXPixelOffset;
    int _primaryCaptureRectCenterYPixelOffset;
    int _primaryCaptureRectCenterXPixelOffsetFudge;
    int _primaryCaptureRectCenterYPixelOffsetFudge;
    BOOL _primaryCaptureRectCenterYPixelOffsetEnabled;
    BOOL _previewsWideBeforeSlaveStreamStarts;
    BOOL _generatesHistogram;
    int _maxLossyCompressionLevel;
    BOOL _superWideFallbackForMacroSceneEnabled;
    NSObject<OS_dispatch_semaphore> *_emitSampleBufferSemaphore;
    BOOL _lastFrameDroppedByBackpressure;
    BOOL _haveSuperWideCamera;
    BOOL _haveTeleCamera;
    float _superWideBaseZoomFactor;
    float _wideBaseZoomFactor;
    float _teleBaseZoomFactor;
    float _superWideCorrectedBaseZoomFactor;
    float _wideBaseZoomFactorOverride;
    BOOL _wideBaseZoomFactorDynamicOverrideEnabled;
    float _wideBaseZoomFactorDynamicOverride;
    float _wideBaseZoomFactorDynamicOverrideScaled;
    float _wideBaseZoomFactorOverrideMacro;
    float _widePinholeFocalLengthInfinity;
    float _widePinholeFocalLengthMacro;
    float _dynamicWideBaseZoomFactorSmoothingFactor;
    BOOL _inputBuffersHaveHorizontalOverscanOnly;
    float _dynamicCameraScaleMSRMarginPercentage;
    NSArray *_wideNondisruptiveSwitchingZoomFactors;
    float _wideNondisruptiveSwitchingScaleFactor;
    float _lastWideNondisruptiveSwitchingScaleFactor;
    NSArray *_superWideNondisruptiveSwitchingZoomFactors;
    float _superWideNondisruptiveSwitchingScaleFactor;
    BOOL _superWideNondisruptiveSwitchingWaitsForSuperWideFallback;
    NSArray *_teleNondisruptiveSwitchingZoomFactors;
    float _teleNondisruptiveSwitchingScaleFactor;
    float _lastTeleNondisruptiveSwitchingScaleFactor;
    BOOL _wideNondisruptiveSwitchingCroppedFrameEnabled;
    BOOL _teleNondisruptiveSwitchingCroppedFrameEnabled;
    BOOL _narrowerCameraNondisruptiveSwitchingCurrentFrameIsCropped;
    BOOL _narrowerCameraTransitioningQsubToQsum;
    BOOL _triggerRegistrationForNondisruptiveSwitching;
    float _teleBaseZoomFactorOverride;
    struct { int width; int height; } _sensorBinningFactor;
    float _shiftSmoothingFactor;
    BOOL _applyShift;
    struct CGPoint { double x; double y; } _superWideToWideBravoShift;
    struct CGPoint { double x; double y; } _wideToTeleBravoShift;
    struct OpaqueVTPixelRotationSession { } *_intermediateRotationSession;
    struct OpaqueVTPixelRotationSession { } *_outputRotationSession;
    struct opaqueCMFormatDescription { } *_outputFormatDescription;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _outputTransform;
    id<BWPreviewStitcherDelegate> _delegate;
    BOOL _stoppingForModeSwitch;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _configurationLock;
    BOOL _deviceIsStationary;
    BOOL _pendingRegistrationAfterDeviceBecomesStationary;
    BOOL _registrationEnabled;
    int _lastRegisteredFrameCaptureID;
    BOOL _lastRegistrationEnabled;
    int _registrationType;
    BOOL _excludeStaticComponentFromAlignmentShiftsEnabled;
    BWPreviewRegistration *_registration;
    BOOL _registrationResourcesAllocated;
    BOOL _firstRegistrationCompleted;
    BOOL _firstRegistrationIsSynchronous;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _shiftCorrectionsUpdateLock;
    struct BWPreviewStitcherShiftCorrection { struct CGPoint { double x; double y; } currentValue; struct CGPoint { double x; double y; } updatedValue; BOOL valueIsUpdated; BOOL lastRegistrationWasValid; int registeredFrameCaptureID; BWRamp *rampX; BWRamp *rampY; } _wideToTeleShiftCorrections[3];
    struct BWPreviewStitcherShiftCorrection { struct CGPoint { double x; double y; } currentValue; struct CGPoint { double x; double y; } updatedValue; BOOL valueIsUpdated; BOOL lastRegistrationWasValid; int registeredFrameCaptureID; BWRamp *rampX; BWRamp *rampY; } _superWideToWideShiftCorrections[3];
    int _registrationFrameSkipCount;
    int _registrationUpdateRampFrameCount;
    BOOL _registerFirstFrame;
    NSDictionary *_registrationTranslationOverride;
    double _primaryCameraAspectRatio;
    float _lastPrimaryCameraAspectRatio;
    FigCaptureMachPortSendRight *_fencePortSendRight;
    BOOL _displaysWidestCameraOnly;
    BOOL _displaysPrimaryCameraOnly;
    BOOL _drawWiderCameraOnly;
    BOOL _currentZoomRequiresWiderCamera;
    BOOL _lastZoomingOrSwitchingCameras;
    float _rampZoomFactorOfInterest;
    float _rampStartZoomFactor;
    NSString *_lastRecommendedMasterPortType;
    NSString *_lastPreferredMasterPortType;
    NSString *_lastNarrowerCameraPortType;
    BOOL _lastNarrowerCameraIsTele;
    BWRamp *_cameraTransitionRamp;
    BWPixelBufferPool *_cameraTransitionPool;
    BWMemoryPoolFlushAssertion *_cameraTransitionPoolReadyAssertion;
    struct { int width; int height; } _cameraTransitionPoolDimensions;
    CIContext *_cameraTransitionCIContext;
    NSURL *_coreImageMetalLibraryURL;
    BOOL _cameraTransitionRampForSuperMacroFallback;
    BWRamp *_narrowerCameraEdgeExpansionRamp;
    BOOL _narrowerCameraEdgeExpansionRampIsForTele;
    BWRamp *_qsubToQsumEdgeOpacityRamp;
    float _qsubToQsumEdgeOpacityRampFromProgress;
    int _screenScale;
    BOOL _frameRateBasedRampsEnabled;
    NSObject<OS_dispatch_queue> *_ciPreheatingQueue;
    NSObject<OS_dispatch_group> *_ciPreheatingGroup;
    BOOL _havePreheatedCI;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstFramePTS;
    BOOL _edgeFeatheringEnabled;
    BOOL _showFeatherGradient;
    float _edgeFeatheringAspectCompensation;
    float _zoomInFeatheringInnerRadiusStart;
    float _zoomInFeatheringInnerRadiusEnd;
    float _zoomInFeatheringOuterRadiusStart;
    float _zoomInFeatheringOuterRadiusEnd;
    float _zoomOutFeatheringInnerRadiusStart;
    float _zoomOutFeatheringInnerRadiusEnd;
    float _zoomOutFeatheringOuterRadiusStart;
    float _zoomOutFeatheringOuterRadiusEnd;
    float _zoomInFeatheringInnerRadiusInterim;
    float _zoomInFeatheringOuterRadiusInterim;
    float _zoomInFeatheringInnerRadiusExpanded;
    float _zoomInFeatheringOuterRadiusExpanded;
    BOOL _featherEdgesForCameraTransitionRamp;
    BOOL _superWideCompensateForMissingFOV;
    BOOL _cameraTransitionEnhancedEdgeFeatheringEnabled;
    int _cameraTransitionEdgeFeatheringZoomInStartSigma;
    int _cameraTransitionEdgeFeatheringZoomInEndSigma;
    int _cameraTransitionEdgeFeatheringZoomOutStartSigma;
    int _cameraTransitionEdgeFeatheringZoomOutEndSigma;
    int _cameraTransitionEdgeFeatheringBorderInsetFactor;
    float _cameraTransitionEdgeFeatheringZoomInTeleEdgeExpansionStartFrameFill;
    int _cameraTransitionEdgeFeatheringZoomInTeleEdgeExpansionFrameDuration;
    int _cameraTransitionEdgeFeatheringZoomOutQsubToQsumEdgeOpacityRampFrameDuration;
    BOOL _cameraTransitionBorderEdgeFeatheringEnabled;
    BOOL _cameraTransitionBrightnessCompensationEnabled;
    float _cameraTransitionBrightnessCompensationInsetPercentage;
    struct opaqueCMSampleBuffer { } *_lastSampleBuffer;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastInputPTS;
    BOOL _multiCameraStitchingEnabled;
    BOOL _aspectRatioChanging;
    long long _lastRenderTime;
    float _additionalZoomFactor;
    float _additionalZoomFactorSpringStartFactor;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _additionalZoomFactorSpringStartPTS;
    BWSpringSimulation *_additionalZoomFactorSpring;
    NSMutableDictionary *_blackFilledBorderRectsBySurfaceID;
    BOOL _forceBlackFillBorderEnabled;
    BOOL _overCaptureNotSupportedByDownstreamNodes;
    BOOL _rebuildingGraphForTrueVideoTransition;
    BOOL _trueVideoCaptureEnabled;
    BOOL _trueVideoCaptureFormatIs4K;
    double _trueVideoCaptureAdditionalZoomFactor;
    BOOL _waitsForFencedUpdateBeforeFirstEmit;
    BOOL _waitingForFencedUpdateBeforeFirstEmit;
    int _overCaptureStatus;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; BOOL resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _wideFocusDistanceFarEnoughForStitching;
    BOOL _hideSuperWideOverCaptureWhenTooClose;
    BOOL _superWideOccludedByWide;
    BOOL _superWideDrawingSuspendedUntilFocusImproves;
    BOOL _hideSuperWideStitchingWhenTooClose;
    BOOL _hidePartialOverCapture;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; BOOL resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _widerCameraFoVFillsOverCapture;
    float _uiZoomFactor;
    BOOL _deviceTooHotDimmingEnabled;
    int _wideFallbackMode;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; BOOL resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _wideFocusDistanceFarEnoughToUseTele;
    BOOL _wideFocusingOneShot;
    BOOL _teleFocusingOneShot;
    BWRamp *_wideFallbackShiftRamp;
    struct CGPoint { double x; double y; } _wideFallbackRecenteringShiftOffset;
    BOOL _wantWideFallbackDueToTeleAEAF;
    BOOL _wideFallbackShiftRampTargetValueIsWide;
    BOOL _wideFallbackUserInitiatedTuningEnabled;
    BOOL _lastWideCameraFallbackWasUserInitiated;
    int _lastRecommendedMasterSelectionReason;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; BOOL resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _wideFocusDistanceFarEnoughToUseWide;
    BWRamp *_superWideFallbackShiftRamp;
    BOOL _superWideFallbackShiftRampTargetValueIsSuperWide;
    struct CGPoint { double x; double y; } _superWideFallbackRecenteringShiftOffset;
    float _superWideFallbackRecenteringStrength;
    BOOL _wantSuperWideFallback;
    BOOL _superWideFallbackTransitioningWithStreamingPortTypesChanged;
    BOOL _superMacroUserInitiatedFallbackTuningEnabled;
    BOOL _lastSuperWideCameraFallbackWasUserInitiated;
    BOOL _inSuperMacroRange;
    BOOL _superMacroRangeRegistrationTuningEnabled;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; BOOL resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _superWideFocusDistanceFarEnoughForRegistration;
    BOOL _superMacroCameraTransitionRampOnFullPrimaryRectEnabled;
    BOOL _superMacroEdgeFeatheringBlurEnabled;
    float _superMacroEdgeFeatheringBlurInset;
    BOOL _superMacroEdgeFeatheringShowBlurMask;
    BOOL _waitsForRegistrationToComplete;
    BWFencedAnimationQueue *_fencedAnimationQueue;
    BOOL _momentMovieRecordingRecenteringEnabled;
    int _momentMovieRecordingRecenteringShiftRampFrameCount;
    BOOL _borderBlurEnabled;
    float _borderBlurStrength;
    BOOL _borderStretchEnabled;
    float _borderStretchScaleFactor;
    float _borderStretchNextNarrowerBaseZoomFactorMultiplier;
    BOOL _zoomPIPOverlayEnabled;
    BOOL _zoomPIPSingleStreamModeEnabled;
    BOOL _zoomPIPUseNarrowerCamera;
    float _zoomPIPMinimumUIZoomFactor;
    BOOL _previewTapRegistered;
    BOOL _fractionalSourceRectEnabled;
    BOOL _propagatePrimaryPreviewSource;
    BOOL _propagateDepth;
    BOOL _propagateStyles;
    BOOL _smartStyleRenderingEnabledInTrueVideoGraph;
    BOOL _didSetTimeToStartStyleEngineApplyWithLearnedCoefficientsAfterExitingTrueVideo;
    float _timeToStarStyleEngineApplyWithLearnedCoefficientsAfterExitingTrueVideo;
    BOOL _parallaxMitigationBasedOnZoomFactorEnabled;
    struct BWSmartCameraScene { BOOL enabled; BOOL confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; BOOL resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _narrowerCameraFoVFillsOverCapture;
    BOOL _superWideSensorCenterOffsetEnabled;
    BOOL _delayedEndOfDataEnabled;
    BOOL _haveDelayedEOD;
    BOOL _stoppingWithISPFastSwitchEnabled;
    BOOL _trueVideoTransitionInProgress;
    BOOL _trueVideoTransitionEnteringIncreasingAspectRatio;
    double _trueVideoTransitionEnteringAspectRatio;
    double _landscapeAspectRatioBeforeTrueVideoTransition;
    double _trueVideoTransitionPercentComplete;
    BOOL _allowEdgeInsetDuringTrueVideoTransitions;
    struct opaqueCMSampleBuffer { } *_transitionReferenceSampleBuffer;
    struct opaqueCMSampleBuffer { } *_transitionReferenceLearnedCoefficientsSampleBuffer;
    int _transitionReferenceLearnedCoefficientsSampleBufferApplyCount;
    BWRamp *_transitionReferenceOpacityRamp;
    BWRamp *_trueVideoHDRtoSDRBlendRamp;
    BWRamp *_trueVideo16x9ZoomRamp;
    BOOL _thermalPressureIsCritical;
    BOOL _inputIsHDR;
    long long _firstDroppedUnfencedFrameHostTime;
    NSObject<OS_dispatch_queue> *_metalCompletionQueue;
    NSObject<OS_dispatch_queue> *_metalSubmissionQueue;
    NSObject<OS_dispatch_queue> *_restitchingQueue;
    BOOL _smartFramingEnabled;
    BOOL _smartFramingTransitionInProgress;
    BOOL _smartFramingTransitionInterruptedByTrueVideoTransition;
    double _smartFramingTransitionPercentComplete;
    int _smartFramingTransitionTargetFieldOfView;
    int _smartFramingPreviousTransitionTargetFieldOfView;
    int _smartFramingConfiguredFieldOfView;
    NSDictionary *_smartFramingZoomFactorsByFieldOfView;
    NSDictionary *_sensorOrientationByPortType;
    BOOL _smartFramingFieldOfViewTransitionNotifyAppliedZoomFactors;
    BOOL _limitCropRectWithinImageCircle;
    BOOL _singleCameraOverCaptureEnabled;
    BOOL _singleCameraOverCaptureShouldStopOverCaptureRendering;
    int _singleCameraOverCaptureRemainingFramesUntilStopOverCaptureRendering;
    BOOL _previousAspectRatioIsLandscape;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastStitchedBufferPTS;
    BOOL _canSkipInferencesOnFramesWithSameTimestamp;
    unsigned int _maxNumberOfRestitchesInARowToReport;
    unsigned int _numberOfRestitchesInARow;
}

@property (nonatomic) id<BWPreviewStitcherDelegate> delegate;
@property (readonly) double trueVideoTransitionPercentComplete;
@property (readonly) struct opaqueCMSampleBuffer { } *trueVideoTransitionReferenceSampleBuffer;
@property BOOL displaysWidestCameraOnly;
@property (nonatomic) BOOL previewTapRegistered;

+ (void)initialize;
+ (void)prewarmCoreImageShaders;

- (int)maxLossyCompressionLevel;
- (void)setRotationDegrees:(int)a0;
- (void)didReachEndOfDataForConfigurationID:(id)a0 input:(id)a1;
- (void)setRebuildingGraphForTrueVideoTransition:(BOOL)a0;
- (id)nodeSubType;
- (id)emitSampleBufferSemaphore;
- (void)setMaxLossyCompressionLevel:(int)a0;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (BOOL)hasNonLiveConfigurationChanges;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 forInput:(id)a1;
- (id)nodeType;
- (void)handleDroppedSample:(id)a0 forInput:(id)a1;
- (void)configurationWithID:(long long)a0 updatedFormat:(id)a1 didBecomeLiveForInput:(id)a2;
- (int)rotationDegrees;
- (BOOL)generatesHistogram;
- (void)setFlipVertical:(BOOL)a0;
- (void)dealloc;
- (void)setOutputDimensions:(struct { int x0; int x1; })a0;
- (void)setTrueVideoCaptureEnabled:(BOOL)a0;
- (struct CGPoint { double x0; double x1; })primaryCaptureRectCenter;
- (id)previewRegistrationType;
- (BOOL)rebuildingGraphForTrueVideoTransition;
- (void)setEmitSampleBufferSemaphore:(id)a0;
- (BOOL)flipVertical;
- (BOOL)trueVideoCaptureEnabled;
- (BOOL)flipHorizontal;
- (void)setGeneratesHistogram:(BOOL)a0;
- (void)didSelectFormat:(id)a0 forInput:(id)a1;
- (void)setFlipHorizontal:(BOOL)a0;
- (void)setPrimaryCaptureRectCenter:(struct CGPoint { double x0; double x1; })a0;
- (struct { int x0; int x1; })outputDimensions;
- (void)setForceBlackFillBorderEnabled:(BOOL)a0;
- (BOOL)centerRegistrationValid;
- (id)focusingDescription;
- (BOOL)forceBlackFillBorderEnabled;
- (id)initWithCameraInfoByPortType:(id)a0 sensorBinningFactor:(struct { int x0; int x1; })a1 inputBuffersHaveHorizontalOverscanOnly:(BOOL)a2 registrationType:(int)a3 registrationMetalCommandQueue:(id)a4 excludeStaticComponentFromAlignmentShifts:(BOOL)a5 propagateDepth:(BOOL)a6 propagateStyles:(BOOL)a7 smartFramingZoomFactorsByFieldOfView:(id)a8 sensorOrientationByPortType:(id)a9 singleCameraOverCaptureEnabled:(BOOL)a10 parallaxMitigationBasedOnZoomFactorEnabled:(BOOL)a11 zoomPIPOverlayEnabled:(BOOL)a12 zoomPIPMinimumUIZoomFactor:(float)a13 zoomPIPSingleStreamModeEnabled:(BOOL)a14 preallocateOutputBufferPool:(BOOL)a15 primaryCaptureRectCenterYPixelOffsetEnabled:(BOOL)a16 propagatePrimaryPreviewSource:(BOOL)a17;
- (id)initWithStitchingDisabledAndZoomPIPOverlayEnabled:(BOOL)a0 zoomPIPMinimumUIZoomFactor:(float)a1 zoomPIPSingleStreamModeEnabled:(BOOL)a2 propagateDepth:(BOOL)a3 propagateStyles:(BOOL)a4 smartFramingZoomFactorsByFieldOfView:(id)a5 sensorOrientationByPortType:(id)a6 singleCameraOverCaptureEnabled:(BOOL)a7 parallaxMitigationBasedOnZoomFactorEnabled:(BOOL)a8 preallocateOutputBufferPool:(BOOL)a9 primaryCaptureRectCenterYPixelOffsetEnabled:(BOOL)a10 propagatePrimaryPreviewSource:(BOOL)a11;
- (void)markDelayedEndOfData;
- (BOOL)overCaptureNotSupportedByDownstreamNodes;
- (id)overCaptureStatusString;
- (BOOL)previewsWideBeforeSlaveStreamStarts;
- (double)primaryCameraAspectRatio;
- (id)primaryCameraShortDisplayName;
- (double)primaryCaptureRectYInset;
- (void)rampToAdditionalZoomFactor:(double)a0 momentMovieRecordingRecenteringEnabled:(BOOL)a1;
- (void)setOverCaptureNotSupportedByDownstreamNodes:(BOOL)a0;
- (void)setPreviewsWideBeforeSlaveStreamStarts:(BOOL)a0;
- (void)setPrimaryCameraAspectRatio:(double)a0;
- (void)setPrimaryCaptureRectAspectRatio:(double)a0 center:(struct CGPoint { double x0; double x1; })a1 trueVideoTransitionPercentComplete:(double)a2 trueVideoTransitionReferenceSampleBuffer:(struct opaqueCMSampleBuffer { } *)a3 smartFramingTransitionPercentComplete:(double)a4 smartFramingTransitionTargetFieldOfView:(int)a5 fencePortSendRight:(id)a6;
- (void)setPrimaryCaptureRectYInset:(double)a0;
- (void)setStoppingForModeSwitch:(BOOL)a0 delayedEndOfDataEnabled:(BOOL)a1 ispFastSwitchEnabled:(BOOL)a2 smartStyleRenderingEnabledInTrueVideoGraph:(BOOL)a3;
- (void)setSuperWideFallbackForMacroSceneEnabled:(BOOL)a0;
- (void)setThermalPressureIsCritical:(BOOL)a0;
- (void)setTrueVideoCaptureAdditionalZoomFactor:(double)a0;
- (void)setTrueVideoCaptureFormatIs4K:(BOOL)a0;
- (void)setWaitsForFencedUpdateBeforeFirstEmit:(BOOL)a0;
- (void)setWaitsForRegistrationToComplete:(BOOL)a0;
- (BOOL)superWideFallbackForMacroSceneEnabled;
- (float)superWideFocusDistance;
- (BOOL)thermalPressureIsCritical;
- (BOOL)tooCloseFor1xStitching;
- (BOOL)tooCloseForSuperWideRegistration;
- (double)trueVideoCaptureAdditionalZoomFactor;
- (BOOL)trueVideoCaptureFormatIs4K;
- (BOOL)waitsForFencedUpdateBeforeFirstEmit;
- (BOOL)waitsForRegistrationToComplete;
- (float)wideBaseZoomFactor;
- (id)wideFallbackDescription;
- (float)wideFocusDistance;

@end

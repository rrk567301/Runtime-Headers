@class BWDNGEncoderManager, NSString, BWCMPhotoEncoderManager, BWInferenceVideoFormat, NSMutableDictionary, NSDictionary, BWPhotoEncoderControllerConfiguration, NSObject, BWInferenceEngine, FigCapturePixelConverter;
@protocol OS_dispatch_group, CMISmartStyleProcessor, BWPhotoEncoderControllerDelegate, OS_dispatch_queue;

@interface BWPhotoEncoderController : BWStillImageProcessorController <BWPhotoEncoderControllerInputUpdatesDelegate, BWInferenceFormatProvider> {
    BWPhotoEncoderControllerConfiguration *_configuration;
    NSObject<OS_dispatch_queue> *_prewarmQueue;
    NSObject<OS_dispatch_queue> *_previewGenerationQueue;
    NSObject<OS_dispatch_group> *_previewGenerationGroup;
    FigCapturePixelConverter *_previewPixelConverter;
    FigCapturePixelConverter *_thumbnailPixelConverter;
    FigCapturePixelConverter *_clientThumbnailPixelConverter;
    FigCapturePixelConverter *_photoLibraryThumbnailPixelConverter;
    BWCMPhotoEncoderManager *_cmPhotoEncoderManager;
    BWDNGEncoderManager *_dngEncoderManager;
    unsigned long long _dngBitDepth;
    unsigned long long _maxThreads;
    FigCapturePixelConverter *_jpegPixelConverter;
    float _heifQualityOverride;
    BOOL _heifForceEmbedThumb;
    BOOL _heifUseTiling;
    int _heifTileWidth;
    int _heifTileHeight;
    BOOL _allowHEIFPrewarming;
    BWInferenceEngine *_inferenceEngine;
    BOOL _preparedInferenceEngine;
    _Atomic BOOL _opportunisticInferenceCompleted;
    NSObject<OS_dispatch_group> *_inferenceGroup;
    BWInferenceVideoFormat *_inferenceInputVideoFormat;
    struct opaqueCMFormatDescription { } *_inferenceInputFormatDescription;
    NSDictionary *_adaptiveQualityValueForHEIF;
    id<CMISmartStyleProcessor> _smartStyleProcessor;
    struct __CVBuffer { } *_smartStyleDeltaMapPixelBuffer;
    struct __CVBuffer { } *_smartStyleDecompressedStyledPixelBuffer;
    BOOL _addUnstyledImageToHEIF;
    NSMutableDictionary *_inputsByCaptureIdentifier;
    NSObject<OS_dispatch_queue> *_inputsByCaptureIdentifierQueue;
    NSObject<OS_dispatch_queue> *_encodingQueue;
    NSObject<OS_dispatch_group> *_encodingGroup;
}

@property (retain) NSDictionary *resolvedVideoFormatsByAttachedMediaKey;
@property (nonatomic) BOOL clientExpectsCameraMountedInLandscapeOrientation;
@property (weak) id<BWPhotoEncoderControllerDelegate> primaryOwnerDelegate;
@property (readonly, nonatomic) NSString *currentInputsCaptureRequestIdentifier;
@property (nonatomic) BOOL preferMainImageDownscalingFactorByAttachedMediaKeyFromSampleBuffer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)usesCustomProcessingFlow;

- (int)prepareForCurrentConfigurationToBecomeLive;
- (void)reset;
- (void)dealloc;
- (unsigned long long)type;
- (int)prepare;
- (int)process;
- (id)initWithConfiguration:(id)a0;
- (void).cxx_destruct;
- (id)inputFormatForAttachedMediaKey:(id)a0;
- (void)_flushInputsByCaptureIdentifier;
- (BOOL)_addAlternateImageForEncodingScheme:(int)a0 flexGTCColorSpace:(struct CGColorSpace { } *)a1 isP3primaries:(BOOL)a2 tonemapItemMetadata:(id)a3 parentImageHandle:(long long)a4 gainMapHandle:(long long)a5;
- (int)_addCompressedThumbnailForEncodingScheme:(int)a0 thumbnailSurface:(struct __IOSurface { } *)a1 thumbnailSurfaceSize:(unsigned long long)a2;
- (BOOL)_addConstantColorConfidenceMapForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (BOOL)_addDepthForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 primaryOutputAspectRatio:(double)a2 parentImageHandle:(long long)a3;
- (BOOL)_addGainMapForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 outputDimensions:(struct { int x0; int x1; })a2 primaryOutputAspectRatio:(double)a3 parentImageHandle:(long long)a4;
- (BOOL)_addGainMapMetadataForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 parentImageHandle:(long long)a2;
- (int)_addMetadataAttachmentsForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 requestedSettings:(id)a2 captureType:(int)a3 parentImageHandle:(long long)a4;
- (void)_addOrPrewarmAuxImagesIfNeededForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 metadata:(id)a2 stillImageSettings:(id)a3 processingFlags:(unsigned int)a4 parentImageHandle:(long long)a5;
- (int)_addOrPrewarmForAttachedMediaKey:(id)a0 encodingScheme:(int)a1 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a2 metadata:(id)a3 stillImageSettings:(id)a4 parentImageHandle:(long long)a5;
- (void)_addOrientationOptionsToDictionary:(id)a0 encodingScheme:(int)a1 metadata:(id)a2;
- (void)_addOrientationOptionsToDictionary:(id)a0 encodingScheme:(int)a1 orientation:(int)a2;
- (BOOL)_addPortraitEffectsMatteForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 primaryOutputAspectRatio:(double)a2 parentImageHandle:(long long)a3;
- (void)_addQualityOptionsToDictionary:(id)a0 codecType:(unsigned int)a1 pixelBuffer:(struct __CVBuffer { } *)a2 imageDimensions:(struct { int x0; int x1; })a3 metadata:(id)a4 requestedStillImageCaptureSettings:(id)a5 resolvedStillImageCaptureSettings:(id)a6 enableHEIFTiling:(BOOL)a7 enableHEIFOrientation:(BOOL)a8 auxImageType:(int)a9;
- (BOOL)_addSemanticMattesForEncodingScheme:(int)a0 attachedMediaKey:(id)a1 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a2 primaryOutputAspectRatio:(double)a3 settingsID:(long long)a4 orientation:(int)a5 parentImageHandle:(long long)a6;
- (BOOL)_addSmartStyleDeltaMapForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 stillImageSettings:(id)a2 primaryOutputAspectRatio:(double)a3;
- (BOOL)_addSmartStyleLinearThumbnailForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 primaryOutputAspectRatio:(double)a2;
- (int)_addSmartStyleMetadataForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 requestedStillImageCaptureSettings:(id)a2;
- (int)_addThumbnailForEncodingScheme:(int)a0 thumbnailPixelBuffer:(struct __CVBuffer { } *)a1 metadata:(id)a2 requestedStillImageCaptureSettings:(id)a3 resolvedStillImageCaptureSettings:(id)a4 processingFlags:(unsigned int)a5 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a6 codecType:(unsigned int)a7 maxPixelSize:(unsigned long long)a8 parentImageHandle:(long long)a9;
- (int)_addUnstyledImageForEncodingScheme:(int)a0 sbuf:(struct opaqueCMSampleBuffer { } *)a1 imageDimensions:(struct { int x0; int x1; })a2 processingFlags:(unsigned int)a3 metadata:(id)a4 requestedStillImageCaptureSettings:(id)a5 resolvedStillImageCaptureSettings:(id)a6 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a7 usePixelsOutsideCrop:(BOOL)a8;
- (int)_addValue:(id)a0 toAuxiliaryImageProperties:(struct CGImageMetadata { } *)a1 namespace:(struct __CFString { } *)a2 prefix:(struct __CFString { } *)a3 key:(struct __CFString { } *)a4;
- (double)_adjustAspectRatio:(double)a0 settings:(id)a1;
- (struct __IOSurface { } *)_closeContainerAndCopySurfaceForEncodingScheme:(int)a0;
- (void)_closeContainerForEncodingScheme:(int)a0;
- (int)_computeAndAddSmartStyleDeltaMapToClosedSurfaceContainer:(struct __IOSurface { } *)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 encodingScheme:(int)a2 stillImageSettings:(id)a3 processingFlags:(unsigned int)a4;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_cropRectForRequestedSettings:(id)a0 inputDimensions:(struct { int x0; int x1; })a1 outputDimensions:(struct { int x0; int x1; })a2 metadata:(id)a3 processingFlags:(unsigned int)a4;
- (int)_decompressSmartStylePhotoSurface:(struct __IOSurface { } *)a0;
- (BOOL)_depthEncodingNeededForSettings:(id)a0 deferredPhotoProxy:(BOOL)a1;
- (id)_depthEncodingOptionsFromDepthMetadata:(id)a0 pixelFormat:(unsigned int)a1;
- (int)_desiredOrientationForOrientation:(int)a0 encodingScheme:(int)a1;
- (int)_encodeDNGForEncodingScheme:(int)a0 rawSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 dngDictionary:(id)a2 requestedSettings:(id)a3 captureType:(int)a4 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a5 dngContainsDepthData:(BOOL)a6 dngContainsSemanticSegmentationMattes:(BOOL)a7 processingFlags:(unsigned int)a8;
- (int)_encodePhotoForEncodingScheme:(int)a0 pixelBuffer:(struct __CVBuffer { } *)a1 imageDimensions:(struct { int x0; int x1; })a2 processingFlags:(unsigned int)a3 metadata:(id)a4 thumbnailOptions:(id)a5 requestedStillImageCaptureSettings:(id)a6 resolvedStillImageCaptureSettings:(id)a7 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a8 usePixelsOutsideCrop:(BOOL)a9 mainImageHandleInOut:(long long *)a10;
- (int)_encodePrimarySbuf:(struct opaqueCMSampleBuffer { } *)a0 metadata:(id)a1 processingFlags:(unsigned int)a2 primaryImageHandleInOut:(long long *)a3;
- (id)_encoderManagerForEncodingScheme:(int)a0;
- (int)_ensureSetupForPostponedResources;
- (int)_exifExtraRotationDegreesForEncodingScheme:(int)a0;
- (BOOL)_finalImageExpectingSmartStyleReversibilityDataForDeferredPhotoProxy:(BOOL)a0 settings:(id)a1 adjustedPhoto:(BOOL)a2;
- (void)_flushCurrentRequest;
- (int)_generatePhotoSurfaceFromEncodedImageBuffer:(struct opaqueCMSampleBuffer { } *)a0 photoSurfaceOut:(struct __IOSurface **)a1 photoSurfaceSizeOut:(unsigned long long *)a2;
- (int)_generatePreviewForSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 requestedStillImageCaptureSettings:(id)a1 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 previewPixelBuffer:(struct __CVBuffer **)a3;
- (void)_getAssetsSizeForEncodingScheme:(int)a0 containerSizeOut:(unsigned long long *)a1 thumbnailSizeOut:(unsigned long long *)a2 auxiliaryImagesSizeOut:(unsigned long long *)a3;
- (int)_getColorSpacePropertiesForSourcePixelFormat:(unsigned int)a0 sourceWidth:(int)a1 sourceHeight:(int)a2 destinationPixelFormat:(unsigned int)a3;
- (void)_handlePrewarmForConstantColorConfidenceMapForEncodingScheme:(int)a0 requestedStillImageCaptureSettings:(id)a1 confidenceMapDimensions:(struct { int x0; int x1; })a2;
- (void)_handlePrewarmForDepthForEncodingScheme:(int)a0 requestedStillImageCaptureSettings:(id)a1 prewarmingMetadata:(id)a2;
- (void)_handlePrewarmForGainMapForEncodingScheme:(int)a0 requestedStillImageCaptureSettings:(id)a1 prewarmingMetadata:(id)a2;
- (void)_handlePrewarmForMainImageForEncodingScheme:(int)a0 prewarmingMetadata:(id)a1 stillImageSettings:(id)a2 reservedPrimaryImageHandleOut:(long long *)a3;
- (void)_handlePrewarmForPortraitEffectsMatteForEncodingScheme:(int)a0 requestedStillImageCaptureSettings:(id)a1;
- (int)_loadCreateAndSetupSmartStyleRenderingProcessor;
- (struct opaqueCMSampleBuffer { } *)_newAuxImageEncodingTriggerSbufForSettings:(id)a0 metadata:(id)a1;
- (struct CGImageMetadata { } *)_newAuxiliaryImagePropertiesFromPortraitEffectsMatteMetadata:(id)a0;
- (struct CGImageMetadata { } *)_newAuxiliaryImagePropertiesFromSemanticMatteSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (struct CGImageMetadata { } *)_newGainMapAuxiliaryImagePropertiesForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 denormalizedCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 requiresPhotosAdjustment:(BOOL)a3 encodingOptionsOut:(id *)a4 flexGTCColorSpaceOut:(struct CGColorSpace **)a5 tonemapItemMetadataOut:(id *)a6 isP3PrimariesOut:(BOOL *)a7;
- (id)_newMetadataAttachmentsForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 requestedSettings:(id)a2 captureType:(int)a3;
- (id)_newRawMetadataAttachmentsForEncodingScheme:(int)a0 sampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 dngDictionary:(id)a2 requestedSettings:(id)a3 captureType:(int)a4 dngContainsDepthData:(BOOL)a5 dngContainsSemanticSegmentationMattes:(BOOL)a6;
- (int)_optionsForEncodingScheme:(int)a0 pixelBuffer:(struct __CVBuffer { } *)a1 imageDimensions:(struct { int x0; int x1; })a2 processingFlags:(unsigned int)a3 metadata:(id)a4 thumbnailOptions:(id)a5 requestedStillImageCaptureSettings:(id)a6 resolvedStillImageCaptureSettings:(id)a7 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a8 usePixelsOutsideCrop:(BOOL)a9 containerOptionsOut:(id *)a10 encodingOptionsOut:(id *)a11;
- (struct { int x0; int x1; })_outputDimensionsForSbuf:(struct opaqueCMSampleBuffer { } *)a0 primaryImageMetadata:(id)a1 sourceDimensions:(struct { int x0; int x1; })a2 requestedStillImageCaptureSettings:(id)a3 isStereoPhotoCapture:(BOOL)a4 isPrimaryFrame:(BOOL)a5;
- (void)_performInferenceWithBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (BOOL)_personMaskEncodingNeededForSettings:(id)a0 encodingScheme:(int)a1 deferredPhotoProxy:(BOOL)a2 adjustedPhoto:(BOOL)a3 personMaskValidHint:(float)a4;
- (BOOL)_postponeSelectResourceAllocations;
- (void)_prewarmAndReserveMainImageHandleForEncodingScheme:(int)a0 prewarmingMetadata:(id)a1 stillImageSettings:(id)a2 reservedPrimaryImageHandleOut:(long long *)a3;
- (double)_primaryOutputAspectRatioForSettings:(id)a0;
- (int)_processSbuf;
- (void)_propagateSampleBufferGainMapMetadata:(struct opaqueCMSampleBuffer { } *)a0 toSampleBufferMetadata:(struct opaqueCMSampleBuffer { } *)a1;
- (void)_releaseResources;
- (void)_removeCurrentRequestFromInputsByCaptureIdentifier;
- (id)_semanticSegmentationMatteMediaKeysEncodingNeededForSettings:(id)a0 encodingScheme:(int)a1 deferredPhotoProxy:(BOOL)a2 adjustedPhoto:(BOOL)a3 personMaskValidHint:(float)a4;
- (BOOL)_smartStyleReversibilityDataNeededForSettings:(id)a0 adjustedPhoto:(BOOL)a1 deferredPhotoProxy:(BOOL)a2;
- (void)_tagStereoPairGroupForEncodingScheme:(int)a0 stereoPhotoImageHandles:(struct { long long x0; long long x1; long long x2; })a1 groupMetadata:(id)a2;
- (id)_thumbnailOptionsForImageWithMetadata:(id)a0 encodingScheme:(int)a1 requestedStillImageCaptureSettings:(id)a2 resolvedStillImageCaptureSettings:(id)a3 processingFlags:(unsigned int)a4 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a5 codecType:(unsigned int)a6 maxPixelSize:(unsigned long long)a7;
- (int)_updateSmartStyleDeltaMapForSampleBufferIfNeeded:(struct opaqueCMSampleBuffer { } *)a0 decompressedStyledPixelBuffer:(struct __CVBuffer { } *)a1 stillImageSettings:(id)a2 encodingScheme:(int)a3 processingFlags:(unsigned int)a4;
- (void)_updateStillImageProcessingFlagsWithDepthMetadataForSbuf:(struct opaqueCMSampleBuffer { } *)a0 stillImageSettings:(id)a1;
- (void)_waitForPiecemealEncodingGroupToComplete;
- (void)_waitForPiecemealEncodingQueueToComplete;
- (void)_waitForPreviewGenerationGroupToComplete;
- (void)_waitForPreviewGenerationQueueToComplete;
- (void)_waitForPrewarmingQueueToComplete;
- (BOOL)_waitUntilTimeoutForInferenceGroupToCompleteAndReturnSuccess;
- (void)cancelProcessing;
- (id)inputForStillImageSettings:(id)a0 portType:(id)a1 portraitAdjustedImage:(BOOL)a2 optionalSampleBuffer:(struct opaqueCMSampleBuffer { } *)a3 forEarlyEncoding:(BOOL)a4;
- (id)inputInferenceVideoFormatForAttachedMediaKey:(id)a0;
- (void)inputReceivedNewInputData:(id)a0;
- (void)inputReceivedSbufForPiecemealEncoding:(id)a0 sbuf:(struct opaqueCMSampleBuffer { } *)a1 attachedMediaKey:(id)a2 primaryImageMetadata:(id)a3 processingFlags:(unsigned int)a4;
- (id)inputVideoFormatForAttachedMediaKey:(id)a0;
- (BOOL)intermediateResourceTrackingAllowedForAttachedMediaKey:(id)a0;
- (float)mainImageDownscalingFactorForAttachedMediaKey:(id)a0 attachedMediaMetadata:(id)a1;
- (id)outputFormatForAttachedMediaKey:(id)a0;
- (id)outputVideoFormatForAttachedMediaKey:(id)a0;
- (id)requestForInput:(id)a0 delegate:(id)a1 errOut:(int *)a2;
- (void)waitForAllAsynchronousProcessingToComplete;

@end

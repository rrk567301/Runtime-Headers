@class NSMutableDictionary, NSString, NSArray, resourceIDToBuffer, VFXMTLShadableKey, MTKTextureLoader, VFXMTLLibraryManager, VFXMTLShaderBindingsGenerator, NSMutableArray, NSMapTable, VFXMTLBufferAllocator;
@protocol MTLDepthStencilState, CFXRemoteResourceProvider, MTLTexture, MTLCommandQueue;

@interface VFXMTLResourceManager : NSObject <CFXRemoteResourceProvider, VFXRemoteResourceConsumer> {
    struct __CFXGPUDevice { } *_gpuDevice;
    long long _usageCount;
    id<MTLCommandQueue> _commandQueue;
    struct __CFXEngineStats { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; double x56; unsigned int x57; double x58; unsigned int x59; double x60; double x61; double x62; double x63; double x64[60]; unsigned int x65; double x66; double x67; } *__engineStats;
    VFXMTLLibraryManager *_libraryManager;
    VFXMTLShaderBindingsGenerator *_bindingsGenerator;
    struct __CFDictionary { } *_availablePipelineStates;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _availablePipelineStatesLock;
    VFXMTLBufferAllocator *_commonProfileBuffersAllocator;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableIrradianceTextures;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableRadianceTextures;
    struct { struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } safeResourcesRegistry; id hazardousResourcesTracker; } _availableImages;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableImageProxy;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableSamplers;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableIESTextures;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableBuffers;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableMeshes;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableMeshSources;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableMeshElements;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableRasterizerStates;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableDeformerStacks;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableSkinDeformerReadOnlyBuffers;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableMorphDeformerReadOnlyBuffers;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableComputePipelines;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableComputePipelinesWithStageDescriptor;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableColorMatchingComputePipelines;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableTessellators;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableWireframeMaterials;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableOpenSubdivComputeEvaluators;
    struct { NSMapTable *registry; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock; BOOL registryKeyIsObject; } _availableShadables;
    VFXMTLShadableKey *_availableShadablesSearchKey;
    NSMutableArray *_availableStageDescriptors;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _availableStageDescriptorsLock;
    struct { resourceIDToBuffer *resourceProvider; NSMapTable *x0; NSMapTable *resourceIDToTexture; NSMapTable *bufferToBuiltin; NSMapTable *textureToBuiltin; NSMapTable *resourceIDToRenderPipeline; NSMapTable *resourceIDToRenderPipelineDesc; NSMapTable *renderPipelineDescToResourceID; NSMapTable *renderPipelineStateToDescriptor; struct *argumentBufferEntries; long long argumentBufferEntriesCount; NSMutableArray *newlyRegisteredRenderPipelineResourceIDs; } _remote;
    id<MTLTexture> _areaLightPrecomputedDataTexture;
    id<MTLTexture> _specularDFGDiffuseHammonTexture;
    struct __CFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned char x1 : 1; unsigned char x2 : 1; struct __CFXProgramDelegate *x3; struct __CFString *x4[2]; struct __CFString *x5; struct __CFString *x6; struct __CFDictionary *x7; struct __CFSet *x8; void *x9; struct __CFDictionary *x10; int x11; id /* block */ x12; id /* block */ x13; unsigned long long x14; unsigned int x15; } *_defaultProgram;
    struct __CFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned char x1 : 1; unsigned char x2 : 1; struct __CFXProgramDelegate *x3; struct __CFString *x4[2]; struct __CFString *x5; struct __CFString *x6; struct __CFDictionary *x7; struct __CFSet *x8; void *x9; struct __CFDictionary *x10; int x11; id /* block */ x12; id /* block */ x13; unsigned long long x14; unsigned int x15; } *_defaultProgramForTessellation;
    struct __CFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned char x1 : 1; unsigned char x2 : 1; struct __CFXProgramDelegate *x3; struct __CFString *x4[2]; struct __CFString *x5; struct __CFString *x6; struct __CFDictionary *x7; struct __CFSet *x8; void *x9; struct __CFDictionary *x10; int x11; id /* block */ x12; id /* block */ x13; unsigned long long x14; unsigned int x15; } *_isolateProgram;
    id<MTLDepthStencilState> _depthAndStencilStateWithReadWriteDepthDisabled;
    id<MTLTexture> _defaultTexture;
    id<MTLTexture> _defaultTexture1D;
    id<MTLTexture> _defaultTexture3D;
    id<MTLTexture> _defaultCubeTexture;
    id<MTLTexture> _defaultLightingEnvironmentIrradianceTexture;
    id<MTLTexture> _defaultLightingEnvironmentRadianceTexture;
    MTKTextureLoader *_mtkTextureLoader;
    BOOL _isShared;
    NSMutableDictionary *_sourceCodeShaderCache;
    NSArray *_binaryArchives;
    id _shaderArchive;
}

@property (retain, nonatomic) id<CFXRemoteResourceProvider> remoteResourceProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)_fillVertexDescriptor:(id)a0 withMeshSource:(struct __CFXMeshSource { struct __CFXGenericSource { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; struct __CFXSourceAccessor *x1; union { struct __CFData *x0; void *x1; void *x2; } x2; long long x3; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; } x0; unsigned short x1; unsigned char x2; unsigned char x3; } *)a1 semantic:(char)a2 inputSet:(long long)a3 bufferIndex:(long long)a4;
+ (void)_fillVertexDescriptor:(id)a0 withSemantic:(char)a1 inputSet:(long long)a2 bufferIndex:(long long)a3 vertexFormat:(unsigned long long)a4 offset:(unsigned long long)a5 stride:(unsigned long long)a6;

- (void)dealloc;
- (id)newComputePipelineStateWithFunctionName:(id)a0;
- (void)incrementUsageCount;
- (id)areaLightPrecomputedDataTexture;
- (id)latlongTextureForCubemap:(id)a0 pixelFormat:(unsigned long long)a1 renderContext:(id)a2 needsMipmap:(BOOL)a3;
- (void)_bakeStochasticIrradianceTexture:(id)a0 forEnvironmentTexture:(id)a1 mipmapLevelForSampling:(unsigned long long)a2 renderContext:(id)a3;
- (BOOL)_copyImage:(struct __CFXImage { } *)a0 toTexture:(id)a1 desc:(id)a2 textureOptions:(unsigned char)a3 needsMipMapGeneration:(BOOL)a4;
- (id)newRenderPipelineStateWithDesc:(struct { struct { struct __CFXProgramHashCode *x0; struct __CFXProgram *x1; struct __CFString *x2; struct __CFString *x3; struct __CFXRenderingOverride *x4; struct __CFXBlendStates *x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; id x10; unsigned long long x11; unsigned char x12; unsigned char x13; id x14; struct { unsigned char x0; id /* block */ x1; } x15; unsigned long long x16; } x0; id x1; struct { unsigned long long x0[8]; unsigned long long x1; unsigned long long x2; unsigned char x3; } x2; struct __CFXBlendStates *x3; unsigned long long x4[8]; unsigned char x5; id x6; id x7; id x8; id x9; id x10; id x11; id /* block */ x12; unsigned char x13; BOOL x14; BOOL x15; BOOL x16; })a0;
- (void)__updateMutableMesh:(struct __CFXMesh { } *)a0 withMetalMesh:(id)a1;
- (void)_bakeSphericalHamonicsBasedIrradianceTexture:(id)a0 forEnvironmentTexture:(id)a1 renderContext:(id)a2 applySH:(id /* block */)a3;
- (id)_bufferForData:(struct __CFData { } *)a0 bytesPerIndex:(unsigned long long)a1;
- (id)_bufferForMTLBuffer:(void *)a0;
- (id)_computePipelineStateForKernel:(id)a0 constants:(id)a1 constantsHash:(id)a2 threadGroupSizeIsMultipleOfThreadExecutionWidth:(BOOL)a3;
- (void)_configureComputePipeline:(id)a0 withDescriptor:(id)a1;
- (void)_createPipelineStateWithDescriptor:(id)a0 desc:(struct { struct { struct __CFXProgramHashCode *x0; struct __CFXProgram *x1; struct __CFString *x2; struct __CFString *x3; struct __CFXRenderingOverride *x4; struct __CFXBlendStates *x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; id x10; unsigned long long x11; unsigned char x12; unsigned char x13; id x14; struct { unsigned char x0; id /* block */ x1; } x15; unsigned long long x16; } x0; id x1; struct { unsigned long long x0[8]; unsigned long long x1; unsigned long long x2; unsigned char x3; } x2; struct __CFXBlendStates *x3; unsigned long long x4[8]; unsigned char x5; id x6; id x7; id x8; id x9; id x10; id x11; id /* block */ x12; unsigned char x13; BOOL x14; BOOL x15; BOOL x16; })a1 pipeline:(id)a2;
- (void)_deformerStackDidChange:(id)a0;
- (void)_deformerStackWillDie:(id)a0;
- (void)_enqueueCopyFromTexture:(id)a0 toTexture:(id)a1 blitEncoder:(struct VFXMTLBlitCommandEncoder { id x0; id x1; } *)a2 generateMipMaps:(BOOL)a3;
- (void)_imageProxyWillDie:(id)a0;
- (void)_imageWillDie:(id)a0;
- (void)_materialWillDie:(id)a0;
- (void)_meshElementWillDie:(id)a0;
- (void)_meshSourceWillDie:(id)a0;
- (void)_meshWillDie:(id)a0;
- (void)_morphWillDie:(id)a0;
- (id)_newComputeDescriptorForPipelineDesc:(struct { id x0; id x1; id x2; id /* block */ x3; BOOL x4; BOOL x5; BOOL x6; id x7; })a0 library:(id)a1;
- (void)_precomputedLightingEnvironmentWillDie:(id)a0;
- (void)_programHashCodeWillDie:(id)a0;
- (void)_programWillDie:(id)a0;
- (void)_rasterizerStateDidDie:(const void *)a0;
- (void)_skinWillDie:(id)a0;
- (id)_textureDescriptorFromImage:(struct __CFXImage { } *)a0 needsMipMap:(BOOL)a1 textureOptions:(unsigned char)a2;
- (void)colorMatchBiPlanarPixelBufferWithFormatType:(unsigned int)a0 pixelBufferYCbCrMatrix:(id)a1 pixelBufferColorPrimaries:(id)a2 pixelBufferTransferFunction:(id)a3 sourceTextureY:(id)a4 sourceTextureCbCr:(id)a5 sourceColorSpace:(struct CGColorSpace { } *)a6 destinationColorSpace:(struct CGColorSpace { } *)a7 destinationTexture:(id)a8 renderContext:(id)a9;
- (void)colorMatchSourceTexture:(id)a0 sourceColorSpace:(struct CGColorSpace { } *)a1 destinationColorSpace:(struct CGColorSpace { } *)a2 destinationTexture:(id)a3 renderContext:(id)a4;
- (id)colorMatchingComputePipelineStateForBiPlanarPixelBufferWithFormatType:(unsigned int)a0 pixelBufferYCbCrMatrix:(id)a1 pixelBufferColorPrimaries:(id)a2 pixelBufferTransferFunction:(id)a3 sourceColorSpace:(struct CGColorSpace { } *)a4 destinationColorSpace:(struct CGColorSpace { } *)a5 renderContext:(id)a6;
- (id)colorMatchingComputePipelineStateForSourceColorSpace:(struct CGColorSpace { } *)a0 destinationColorSpace:(struct CGColorSpace { } *)a1 renderContext:(id)a2;
- (void)commandBufferDidCompleteWithError:(id)a0;
- (id)computeEvaluatorWithContext:(struct MTLContext { id x0; id x1; id x2; id x3; } *)a0 srcDesc:(const struct BufferDescriptor { int x0; int x1; int x2; } *)a1 dstDesc:(const struct BufferDescriptor { int x0; int x1; int x2; } *)a2 duDesc:(const struct BufferDescriptor { int x0; int x1; int x2; } *)a3 dvDesc:(const struct BufferDescriptor { int x0; int x1; int x2; } *)a4;
- (id)computePipelineStateForKernel:(id)a0;
- (id)computePipelineStateForKernel:(id)a0 constants:(id)a1 constantsHash:(id)a2;
- (id)computePipelineStateForKernel:(id)a0 threadGroupSizeIsMultipleOfThreadExecutionWidth:(BOOL)a1;
- (id)computePipelineStateForKernel:(id)a0 withStageDescriptor:(id)a1 stageDescriptorUpdateBlock:(id /* block */)a2 constants:(id)a3 constantsHash:(id)a4;
- (id)copyTextureByConvertingToCubeMapIfApplicable:(id)a0 engineContext:(struct __CFXEngineContext { } *)a1 needsMipmap:(BOOL)a2;
- (id)defaultCubeTexture;
- (id)defaultLightingEnvironmentIrradianceTexture;
- (id)defaultLightingEnvironmentRadianceTexture;
- (struct __CFXProgram { } *)defaultProgramUsingTessellation:(BOOL)a0;
- (id)defaultTexture;
- (id)defaultTexture3D;
- (id)getUniqueStageDescriptor:(id)a0;
- (BOOL)hasCommonProfilePrecompiledFunctions;
- (id)iesTextureForProfile:(void *)a0 renderContext:(id)a1;
- (id)irradianceTextureForEnvironmentTexture:(id)a0 renderContext:(id)a1 applySH:(id /* block */)a2;
- (id)irradianceTextureForPrecomputedLightingEnvironment:(id)a0;
- (id)lazyMTKTextureLoader;
- (id)newComputePipelineStateForDesc:(struct { id x0; id x1; id x2; id /* block */ x3; BOOL x4; BOOL x5; BOOL x6; id x7; })a0 library:(id)a1;
- (id)newComputePipelineStateWithFunctionName:(id)a0 constantValues:(id)a1;
- (id)newComputePipelineStateWithFunctionName:(id)a0 library:(id)a1;
- (id)newCubemapTextureForLatlongTexture:(id)a0 pixelFormat:(unsigned long long)a1 engineContext:(struct __CFXEngineContext { } *)a2 needsMipmap:(BOOL)a3;
- (id)newTextureUsingMTKTextureLoaderWithData:(id)a0 options:(id)a1;
- (id)newTextureUsingMTKTextureLoaderWithURL:(id)a0 options:(id)a1;
- (id)radianceTextureForPrecomputedLightingEnvironment:(id)a0;
- (void)reloadPipelinesIfNeeded;
- (id)renderResourceForDeformerStack:(struct __CFXDeformerStack { } *)a0 node:(struct __CFXNode { } *)a1 dataKind:(unsigned char)a2;
- (id)renderResourceForImage:(struct __CFXImage { } *)a0 sampler:(struct { unsigned char x0 : 8; unsigned char x1 : 8; unsigned char x2 : 8; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; unsigned char x6 : 8; unsigned char x7 : 7; unsigned char x8 : 1; })a1 options:(unsigned char)a2 engineContext:(struct __CFXEngineContext { } *)a3 didFallbackToDefaultTexture:(BOOL *)a4;
- (id)renderResourceForImageProxy:(struct __CFXImageProxy { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; } x1; void *x2; unsigned char x3; } *)a0 sampler:(struct { unsigned char x0 : 8; unsigned char x1 : 8; unsigned char x2 : 8; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; unsigned char x6 : 8; unsigned char x7 : 7; unsigned char x8 : 1; })a1 engineContext:(struct __CFXEngineContext { } *)a2 didFallbackToDefaultTexture:(BOOL *)a3;
- (id)renderResourceForMorpher:(struct __CFXMorpher { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; struct __CFXGeometry *x1; struct __CFXMorph *x2; unsigned int x3; unsigned int x4; float *x5; unsigned int x6; unsigned int x7; } *)a0 baseMesh:(struct __CFXMesh { } *)a1 dataKind:(unsigned char)a2 provider:(id /* block */)a3;
- (id)renderResourceForSkinner:(struct __CFXSkinner { } *)a0 baseMesh:(struct __CFXMesh { } *)a1 dataKind:(unsigned char)a2 provider:(id /* block */)a3;
- (id)shFromCPU:(id)a0 commandBuffer:(id)a1;
- (id)specularDFGDiffuseHammonTextureWithRenderContext:(id)a0;
- (id)sphericalHarmonicsForEnvironmentTexture:(id)a0 order:(unsigned long long)a1 commandBuffer:(id)a2;
- (id)unstageTexture:(id)a0 commandBuffer:(id)a1;
- (void)remoteRegisterTexture:(id)a0 remoteID:(unsigned long long)a1;
- (void)__createPipelineStateWithDescriptor:(id)a0 desc:(struct { struct { struct __CFXProgramHashCode *x0; struct __CFXProgram *x1; struct __CFString *x2; struct __CFString *x3; struct __CFXRenderingOverride *x4; struct __CFXBlendStates *x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; id x10; unsigned long long x11; unsigned char x12; unsigned char x13; id x14; struct { unsigned char x0; id /* block */ x1; } x15; unsigned long long x16; } x0; id x1; struct { unsigned long long x0[8]; unsigned long long x1; unsigned long long x2; unsigned char x3; } x2; struct __CFXBlendStates *x3; unsigned long long x4[8]; unsigned char x5; id x6; id x7; id x8; id x9; id x10; id x11; id /* block */ x12; unsigned char x13; BOOL x14; BOOL x15; BOOL x16; })a1 pipeline:(id)a2;
- (void)encodeNewlyRegisteredResources:(struct __CFXRemoteFrameBuilder { } *)a0;
- (void)registerBuiltinTexture:(id)a0 builtin:(unsigned char)a1;
- (void)_deallocRemoteResources;
- (void)_modelWillDie:(id)a0;
- (void)_removeHazardousResourcesForKey:(id)a0 fromLockedRegistry:(struct { struct { id x0; struct os_unfair_lock_s { unsigned int x0; } x1; BOOL x2; } x0; id x1; } *)a1 byEnumeratingFirstUsingBlock:(id /* block */)a2;
- (void)_removeMatchingProgram:(struct __CFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned char x1 : 1; unsigned char x2 : 1; struct __CFXProgramDelegate *x3; struct __CFString *x4[2]; struct __CFString *x5; struct __CFString *x6; struct __CFDictionary *x7; struct __CFSet *x8; void *x9; struct __CFDictionary *x10; int x11; id /* block */ x12; id /* block */ x13; unsigned long long x14; unsigned int x15; } *)a0 owner:(struct __CFXWorld { } *)a1;
- (void)_setupRemoteResourcesRegistry;
- (void)_worldWillDie:(id)a0;
- (BOOL)allowHotReload;
- (id)bufferForResourceID:(unsigned long long)a0;
- (unsigned char)builtinForBufferSlice:(struct { void *x0; unsigned int x1; unsigned int x2; })a0;
- (unsigned char)builtinForTexture:(id)a0;
- (void)clearArgumentBufferDescriptors;
- (long long)decrementUsageCount;
- (id)defaultTexture1D;
- (id)defaultTextureForTextureType:(unsigned long long)a0;
- (id)depthStencilStateForDepthStencilDesc:(struct { struct { unsigned char x0 : 4; unsigned char x1 : 4; unsigned char x2 : 4; unsigned char x3 : 4; unsigned char x4 : 8; unsigned char x5 : 8; } x0; struct { unsigned char x0 : 4; unsigned char x1 : 4; unsigned char x2 : 4; unsigned char x3 : 4; unsigned char x4 : 8; unsigned char x5 : 8; } x1; unsigned char x2 : 7; unsigned char x3 : 1; })a0;
- (struct { struct { unsigned char x0 : 4; unsigned char x1 : 4; unsigned char x2 : 4; unsigned char x3 : 4; unsigned char x4 : 8; unsigned char x5 : 8; } x0; struct { unsigned char x0 : 4; unsigned char x1 : 4; unsigned char x2 : 4; unsigned char x3 : 4; unsigned char x4 : 8; unsigned char x5 : 8; } x1; unsigned char x2 : 7; unsigned char x3 : 1; })descForDepthStencilState:(id)a0;
- (struct { unsigned char x0 : 8; unsigned char x1 : 8; unsigned char x2 : 8; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; unsigned char x6 : 8; unsigned char x7 : 7; unsigned char x8 : 1; })descForSamplerState:(id)a0;
- (id)fetchArgumentBufferDescriptorWithRemoteID:(unsigned long long)a0 offset:(unsigned long long)a1;
- (id)hazardousResourceForKey:(id)a0 inLockedRegistry:(struct { struct { id x0; struct os_unfair_lock_s { unsigned int x0; } x1; BOOL x2; } x0; id x1; } *)a1 onBehalfOfRenderContext:(id)a2 withHazardTrackingHandler:(id /* block */)a3;
- (id)initWithDevice:(id)a0 remoteEncoding:(BOOL)a1;
- (id)newComputePipelineStateWithFunctionName:(id)a0 constantValues:(id)a1 linkedFunctions:(id)a2;
- (id)newComputePipelineStateWithFunctionName:(id)a0 library:(id)a1 constantValues:(id)a2 linkedFunctions:(id)a3;
- (id)newFunctionWithName:(id)a0 constants:(id)a1 library:(id)a2;
- (id)newRadianceTextureForEnvironmentTexture:(id)a0 size:(unsigned int)a1 engineContext:(struct __CFXEngineContext { } *)a2 cpuAccessible:(BOOL)a3;
- (id)radianceTextureForEnvironmentTexture:(id)a0 engineContext:(struct __CFXEngineContext { } *)a1;
- (void)registerBuiltinBuffer:(struct { void *x0; unsigned int x1; unsigned int x2; })a0 builtin:(unsigned char)a1;
- (void)registerRenderPipeline:(id)a0 forResourceID:(unsigned long long)a1;
- (unsigned long long)registerRenderPipelineDescriptor:(id)a0 state:(id)a1;
- (void)remoteRegisterArgumentBufferDescriptor:(id)a0 remoteID:(unsigned long long)a1 offset:(unsigned long long)a2;
- (void)remoteRegisterBuffer:(id)a0 remoteID:(unsigned long long)a1;
- (void)remoteRegisterRenderPipelineDescriptor:(id)a0 remoteID:(unsigned long long)a1;
- (void)remoteUnregisterBuffer:(unsigned long long)a0;
- (void)remoteUnregisterTexture:(unsigned long long)a0;
- (void)removeAllBuiltinBuffers;
- (void)removeAllBuiltinTextures;
- (void)removeResourceForKey:(id)a0 fromRegistry:(struct { id x0; struct os_unfair_lock_s { unsigned int x0; } x1; BOOL x2; } *)a1;
- (void)removeResourceIDForResource:(id)a0;
- (id)renderPipelineDescForResourceID:(unsigned long long)a0;
- (id)renderPipelineForResourceID:(unsigned long long)a0;
- (id)renderResourceForAsset:(void *)a0 withEngineContext:(struct __CFXEngineContext { } *)a1 entityCache:(long long *)a2 isFallback:(BOOL *)a3 isDynamic:(BOOL *)a4;
- (id)renderResourceForMaterialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; union { struct __CFXImage *x0; struct __CFXImageProxy *x1; struct __CFXTexture *x2; void *x3; void *x4; void *x5; struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x6; } x1; void *x2; long long x3; void *x4; unsigned char x5 : 8; unsigned char x6 : 1; unsigned char x7 : 4; char x8; struct { unsigned char x0 : 8; unsigned char x1 : 8; unsigned char x2 : 8; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; unsigned char x6 : 8; unsigned char x7 : 7; unsigned char x8 : 1; } x9; struct *x10; float x11; int x12; void *x13; } *)a0 withEngineContext:(struct __CFXEngineContext { } *)a1 didFallbackToDefaultTexture:(BOOL *)a2 isDynamic:(BOOL *)a3;
- (id)renderResourceForProgramDesc:(struct { struct __CFXProgramHashCode *x0; struct __CFXProgram *x1; struct __CFString *x2; struct __CFString *x3; struct __CFXRenderingOverride *x4; struct __CFXBlendStates *x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; id x10; unsigned long long x11; unsigned char x12; unsigned char x13; id x14; struct { unsigned char x0; id /* block */ x1; } x15; unsigned long long x16; })a0 renderPassDesc:(struct { unsigned long long x0[8]; unsigned long long x1; unsigned long long x2; unsigned char x3; } *)a1;
- (unsigned long long)resourceIDForBuffer:(id)a0;
- (unsigned long long)resourceIDForBufferSlice:(struct { void *x0; unsigned int x1; unsigned int x2; })a0;
- (unsigned long long)resourceIDForRenderPipelineState:(id)a0;
- (unsigned long long)resourceIDForTexture:(id)a0;
- (id)samplerStateForSamplerDesc:(struct { unsigned char x0 : 8; unsigned char x1 : 8; unsigned char x2 : 8; unsigned char x3 : 8; unsigned char x4 : 8; unsigned char x5 : 8; unsigned char x6 : 8; unsigned char x7 : 7; unsigned char x8 : 1; })a0;
- (void)setHazardousResource:(struct { id x0; id x1; })a0 forKey:(id)a1 inLockedRegistry:(struct { struct { id x0; struct os_unfair_lock_s { unsigned int x0; } x1; BOOL x2; } x0; id x1; } *)a2 onBehalfOfRenderContext:(id)a3;
- (id)shaderArchive;
- (id)textureForResourceID:(unsigned long long)a0;

@end

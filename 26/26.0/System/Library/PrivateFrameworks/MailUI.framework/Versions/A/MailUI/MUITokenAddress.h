@class NSMenu, NSString, NSArray, NSTokenField, ABGroup, CNContact, CNGroup, CNAutocompleteStore, NSTextView, MUIRecategorizationMenuController;
@protocol MUITokenAddressDelegate, CNCancelable;

@interface MUITokenAddress : NSObject <MUIRecategorizationMenuControllerDelegate, NSMenuItemValidation, EMBlockedSenderTokenAddress, CNAutocompleteFetchDelegate, NSCopying>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *address;
@property (nonatomic) BOOL shouldRefreshNameIfPossible;
@property (retain, nonatomic) id<CNCancelable> autocompletionSearchRequest;
@property (readonly, nonatomic) CNAutocompleteStore *autocompleteStore;
@property (retain, nonatomic) MUIRecategorizationMenuController *recategorizationMenuController;
@property (retain, nonatomic) id<MUITokenAddressDelegate> delegate;
@property (weak, nonatomic) NSTokenField *tokenField;
@property (weak, nonatomic) NSTextView *textView;
@property (retain, nonatomic) CNContact *contact;
@property (retain, nonatomic) CNGroup *group;
@property (retain, nonatomic) ABGroup *abGroup;
@property (readonly, nonatomic) BOOL hasGroup;
@property (copy, nonatomic) NSString *recentRawAddress;
@property (copy, nonatomic) NSString *currentRawAddress;
@property (copy, nonatomic) NSString *currentName;
@property (copy, nonatomic) NSString *ckShareAddress;
@property (nonatomic) long long tokenStyle;
@property (readonly, nonatomic) BOOL isExternal;
@property (readonly, copy, nonatomic) NSString *formattedAddress;
@property (readonly, copy, nonatomic) NSArray *writablePasteboardTypes;
@property (readonly, nonatomic) NSMenu *menu;
@property (readonly, copy, nonatomic) NSArray *expandedTokens;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_contactsCache;
+ (id)_suggestionRepresentationFromTokenAddress:(id)a0 suggestion:(id)a1;
+ (BOOL)addressIsExternal:(id)a0;
+ (id)keyPathsForValuesAffectingIsExternal;
+ (id)tokenWithAddress:(id)a0;
+ (id)tokenWithAddress:(id)a0 isRecent:(BOOL)a1 contact:(id)a2;
+ (void)writeTokens:(id)a0 toPasteboard:(id)a1;

- (BOOL)validateMenuItem:(id)a0;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)unblockContact:(id)a0;
- (id)init;
- (void)_contactsChanged:(id)a0;
- (void)blockContact:(id)a0;
- (void).cxx_destruct;
- (id)_groupName;
- (void)writeToPasteboard:(id)a0;
- (void)autocompleteFetch:(id)a0 didFailWithError:(id)a1;
- (void)autocompleteFetch:(id)a0 didReceiveResults:(id)a1;
- (void)openInContacts:(id)a0;
- (void)addToContacts:(id)a0;
- (void)removeAddress:(id)a0;
- (void)openNewMessage:(id)a0;
- (void)openPersonCard:(id)a0;
- (void)searchForToken:(id)a0;
- (id)_contactForEmail:(id)a0;
- (id)_contactNameFormatter;
- (id)_contactsOperationQueue;
- (id)_formattedCurrentAddress;
- (void)_getAddressAndNameFromContact:(id)a0;
- (void)_getRecordFromAddress;
- (void)_muiTokenAddressCommonInit;
- (void)_refreshToken;
- (id)_serializedSuggestionRepresentation;
- (id)_suggestionSerializedRepresentation;
- (id)_tokenForTokenAddress:(id)a0;
- (void)_writeToPasteboard:(id)a0 forceAddressOnly:(BOOL)a1;
- (BOOL)_writeToPasteboard:(id)a0 type:(id)a1 forceAddressOnly:(BOOL)a2;
- (void)addToVIPSenders:(id)a0;
- (void)changeAddress:(id)a0;
- (void)copyAddressToClipboard:(id)a0;
- (id)displayStringWithMode:(long long)a0;
- (void)editAddress:(id)a0;
- (void)expandGroupAddress:(id)a0;
- (void)getRecordFromAddress;
- (id)initWithABGroup:(id)a0;
- (id)initWithAddress:(id)a0 isRecent:(BOOL)a1 contact:(id)a2;
- (id)initWithCNGroup:(id)a0;
- (void)openHideMyEmailSettings:(id)a0;
- (void)recategorizationMenuController:(id)a0 performCategoryChangeAction:(id)a1;
- (void)removeFromAddressHistory:(id)a0;
- (void)removeFromVIPSenders:(id)a0;
- (id)suggestionWithGenius:(id)a0;
- (id)toolTipWithMode:(long long)a0;
- (id)viewModelForRecategorizationMenuController:(id)a0;
- (BOOL)writeToPasteboard:(id)a0 type:(id)a1;

@end

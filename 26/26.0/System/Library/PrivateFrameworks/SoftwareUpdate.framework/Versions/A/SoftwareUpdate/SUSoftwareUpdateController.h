@class NSError, NSXPCConnection, NSArray, SUSoftwareUpdateClientObserver, NSSet, NSPredicate, NSDictionary, SUPowerSourceMonitor, NSObject, NSWindow;
@protocol SUSoftwareUpdateControllerDelegate, OS_dispatch_semaphore, OS_dispatch_queue, OS_dispatch_source;

@interface SUSoftwareUpdateController : NSObject {
    struct AuthorizationOpaqueRef { } *_authRef;
    BOOL _destroyAuthRef;
    SUPowerSourceMonitor *_powerMonitor;
    SUSoftwareUpdateClientObserver *_clientObserver;
    NSError *_lastCantStartError;
    NSError *_lastError;
    NSArray *_availableUpdates;
    NSSet *_availableUpdateProductKeys;
    NSPredicate *_currentPredicate;
    NSArray *_matchingUpdates;
    NSArray *_matchingUpdateKeys;
    double _currentProgressFraction;
    NSObject<OS_dispatch_semaphore> *_runningUpdate;
    NSObject<OS_dispatch_source> *_timerSource;
    BOOL _doingFallbackScan;
    BOOL _didCancel;
    BOOL _usingPredicate;
    BOOL _mdmInitiated;
}

@property (retain) NSXPCConnection *connection;
@property (retain) NSObject<OS_dispatch_queue> *updateQueue;
@property BOOL didSendAuth;
@property (retain) NSDictionary *evaluationMetaInfo;
@property (readonly, weak) id<SUSoftwareUpdateControllerDelegate> delegate;
@property (nonatomic) BOOL requireACPower;
@property (readonly) BOOL canStartUpdate;
@property (retain) NSWindow *windowForSheet;
@property (copy) NSDictionary *installedPrintersPlist;
@property (readonly) BOOL canCancelUpdate;
@property (readonly) double progressPercentage;
@property (readonly) double estimatedTimeForCurrentState;
@property (readonly) long long currentState;
@property (readonly) unsigned long long downloadedSize;
@property (readonly) unsigned long long totalSize;

- (BOOL)setAuthorization:(struct AuthorizationOpaqueRef { } *)a0;
- (BOOL)cancelUpdate;
- (void)dealloc;
- (BOOL)_connectToService;
- (void).cxx_destruct;
- (BOOL)canStartNonUserInitiatedUpdates;
- (BOOL)_authorizeForManagingDaemon;
- (BOOL)_authorizeNowIfNeeded;
- (BOOL)_canStartInstallingMacBuddyEligibleProductKey:(id)a0 withError:(id *)a1;
- (BOOL)_canStartUpdateWithPredicate:(id)a0 error:(id *)a1;
- (void)_checkAndInstallMatchingUpdatesWithCompletionHandler:(id /* block */)a0;
- (void)_clearAndNotifyProgressPercentage;
- (void)_closeNecessaryApplicationsWithCompletionHandler:(id /* block */)a0;
- (BOOL)_determineUpdatesToInstallFromAvailable:(id)a0 filterKey:(id)a1;
- (id)_errorWithCode:(long long)a0 userInfo:(id)a1 underlyingError:(id)a2 recoveryAction:(id /* block */)a3;
- (void)_fetchMajorOSInfoForProductKey:(id)a0 withCompletionHandler:(id /* block */)a1;
- (id)_macBuddyEligibleUpdateProductInfo;
- (void)_notifyCanUpdateChanged;
- (void)_notifyUpdateEndedWithError:(id)a0 didCancel:(BOOL)a1 signalRunning:(BOOL)a2;
- (void)_queryForAvailableUpdatesWithCompletionHandler:(id /* block */)a0;
- (void)_runInstallForProductKey:(id)a0 completionHandler:(id /* block */)a1;
- (void)_runPredicateInstallWithCompletionHandler:(id /* block */)a0;
- (void)_scanForMacBuddyEligibleUpdates:(id /* block */)a0;
- (void)_setAndNotifyCurrentState:(long long)a0;
- (void)_setAndNotifyEstimatedTimeForCurrentState:(double)a0;
- (void)_setAndNotifyProgressPercentage:(double)a0;
- (void)_setAvailableUpdates:(id)a0 currentStatus:(id)a1;
- (id)_statusForProductKey:(id)a0;
- (void)_updateProgressParameters;
- (BOOL)canStartUpdateReturningError:(id *)a0;
- (void)catalogAndScanInfoWithReply:(id /* block */)a0;
- (long long)countOfCachedProductsMatchingPredicate:(id)a0;
- (id)getOSNotificationBundleProperties;
- (void)hasMacBuddyEligibleUpdates:(id /* block */)a0;
- (id)initWithDelegate:(id)a0 localizedProductName:(id)a1;
- (void)initiateBackgroundScanIfNecessary:(BOOL)a0 replyWhenDone:(id /* block */)a1;
- (void)installOSNotificationBundleIfAvailableReplyWhenDone:(id /* block */)a0;
- (BOOL)isCacheCurrent;
- (id)metadataOfCachedProductsMatchingPredicate:(id)a0;
- (BOOL)needsAuthorization;
- (void)overrideDeferralForProductKeys:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)queryForAvailableUpdatesWithReply:(id /* block */)a0;
- (void)startAdminUpdatesInBackground:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)startInstallingMacBuddyEligibleUpdates:(id)a0;
- (void)startUpdateForProductWithKey:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)startUpdateInBackgroundWithPredicate:(id)a0;
- (void)startUpdateWithPredicate:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)suspendBackgroundOperations:(BOOL)a0 duration:(long long)a1;
- (id)tagsOfCachedProductsMatchingPredicate:(id)a0;

@end

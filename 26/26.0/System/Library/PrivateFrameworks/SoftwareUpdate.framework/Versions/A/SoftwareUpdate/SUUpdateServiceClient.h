@class NSString, NSXPCConnection, NSMutableArray, NSObject;
@protocol OS_dispatch_queue;

@interface SUUpdateServiceClient : NSObject <SUUpdateService, SUUpdateClient> {
    int _clientPID;
    int _clientAuditIdentifier;
    unsigned int _clientUID;
    NSString *_clientPath;
    struct AuthorizationOpaqueRef { } *_installAuth;
    NSMutableArray *_acquiredRights;
    unsigned long long _transactionsStarted;
    NSObject<OS_dispatch_queue> *_transactionQueue;
    NSObject<OS_dispatch_queue> *_lockQueue;
    BOOL _appleSigned;
    BOOL _isPreventingScans;
    BOOL _entitledToModifyPreferences;
}

@property (readonly, retain) NSXPCConnection *connection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)authorizeForDaemonManagement:(struct AuthorizationOpaqueRef { } *)a0 overConnection:(id)a1 reply:(id /* block */)a2;
+ (void)authorizeForUpdating:(struct AuthorizationOpaqueRef { } *)a0 overConnection:(id)a1 additionalTransactions:(unsigned long long)a2 reply:(id /* block */)a3;
+ (void)authorizeForUpdating:(struct AuthorizationOpaqueRef { } *)a0 overConnection:(id)a1 reply:(id /* block */)a2;
+ (void)ignoreClientMessagesForConnection:(id)a0;

- (void)dealloc;
- (id)initWithConnection:(id)a0;
- (void)invalidate;
- (void)clearCatalogAndNotifyWithReply:(id /* block */)a0;
- (void)endTransactions;
- (void)sendTelemetryEvent:(id)a0 server:(long long)a1 reportableDictionary:(id)a2 className:(id)a3 reply:(id /* block */)a4;
- (BOOL)_isAuthorizedForAppleSoftware;
- (BOOL)_isAuthorizedForAppleSoftwareAsAdministrator;
- (BOOL)_isAuthorizedToManageDaemon;
- (void)_noteAuthorizationUsed;
- (void)adminDeferredAvailableUpdatesWithReply:(id /* block */)a0;
- (void)adoptManualProductArchiveByReadingFromFileHandle:(id)a0 archiveName:(id)a1 displayName:(id)a2 displayVersion:(id)a3 allowDevSigning:(BOOL)a4 replyWithResult:(id /* block */)a5;
- (void)authChallengeWasReceived:(id)a0 handled:(BOOL *)a1;
- (void)authorizeForManagingDaemonWithExternalFormData:(id)a0 reply:(id /* block */)a1;
- (void)authorizeForUpdatingWithExternalFormData:(id)a0 additionalTransactions:(unsigned long long)a1 reply:(id /* block */)a2;
- (void)availableUpdatesDidChange;
- (void)availableUpdatesOfType:(long long)a0 withState:(long long)a1 filteredByState:(unsigned long long)a2 filterDeferred:(BOOL)a3 filterDuplicates:(BOOL)a4 reply:(id /* block */)a5;
- (void)buildTagCacheIfNecessaryWithReply:(id /* block */)a0;
- (void)calculateDiskSpaceRequiredForUpdatesWithProductKeys:(id)a0 downloadingOnly:(BOOL)a1 invokeCacheDelete:(BOOL)a2 reply:(id /* block */)a3;
- (void)cancelUpdatesForProductKeys:(id)a0 reply:(id /* block */)a1;
- (void)catalogAndScanInformationWithReply:(id /* block */)a0;
- (void)catalogInformationWithReply:(id /* block */)a0;
- (void)catalogURLDidChange;
- (void)clearAnyPreferenceWithKey:(id)a0 reply:(id /* block */)a1;
- (void)clearInvalidationForIdentifier:(id)a0 version:(id)a1 forReason:(int)a2;
- (void)combinedStatusForUpdatesWithProductKeys:(id)a0 reply:(id /* block */)a1;
- (void)commitLoginCredentialsDisablingFLO:(BOOL)a0 hasArmedBaseSystemUpdates:(BOOL)a1 finishBlock:(id /* block */)a2;
- (void)conditionsMetForNonUserInitiatedUpdatesWithReply:(id /* block */)a0;
- (void)configureProgressPhasesEnablingFLO:(id)a0 finishBlock:(id /* block */)a1;
- (void)configureProgressPhasesWithFinishBlock:(id /* block */)a0;
- (void)consumeUUIDForToken:(id)a0 replyWithResult:(id /* block */)a1;
- (void)currentDevKeyModeWithReply:(id /* block */)a0;
- (void)dataForNVRAMKey:(id)a0 reply:(id /* block */)a1;
- (void)dumpServiceDebugInfo;
- (void)evaluateProducts:(id)a0 reply:(id /* block */)a1;
- (void)fetchMajorOSInfoForProductKey:(id)a0 getIcon:(BOOL)a1 reply:(id /* block */)a2;
- (void)fetchMajorOSInfoForProductKey:(id)a0 reply:(id /* block */)a1;
- (void)getInstallHistoryWithReply:(id /* block */)a0;
- (void)installStateDidChange:(id)a0 forUpdateWithProductKey:(id)a1;
- (void)installStatus:(id)a0 didChangeExternallyForProductKey:(id)a1;
- (void)installedBundlesToRegisterWithLaunchServices:(id)a0 completion:(id /* block */)a1;
- (void)installedUpdateJournalPrunedAndSortedWithReply:(id /* block */)a0;
- (void)installedUpdateJournalWithReply:(id /* block */)a0;
- (BOOL)isPreventingScans;
- (void)markRampedUpdatesAsSeenWithReply:(id /* block */)a0;
- (void)migratePreferencesWithReply:(id /* block */)a0;
- (void)overrideDeferralForProductKeys:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)preferenceObjectForKey:(id)a0 reply:(id /* block */)a1;
- (void)preparationRequiredForProductKeys:(id)a0 reply:(id /* block */)a1;
- (void)preventFurtherScansWhileConnected:(id /* block */)a0;
- (void)productKeysToAutomaticallyInstallLaterWithReply:(id /* block */)a0;
- (void)productKeysToInstallAfterLogoutWithReply:(id /* block */)a0;
- (void)productsInActiveForegroundTransactions:(id /* block */)a0;
- (void)progressForRefreshOfAvailableUpdatesWithReply:(id /* block */)a0;
- (void)rebootForPostLogoutUpdatesAfterSuccess:(BOOL)a0 displayAsleep:(BOOL)a1 shouldShutDown:(BOOL)a2 reply:(id /* block */)a3;
- (void)refreshAvailableUpdates:(BOOL)a0 preferredLocalizations:(id)a1 limitedToProductTypes:(id)a2 replyWhenDone:(id /* block */)a3;
- (void)refreshAvailableUpdatesForCurrentConfigurationLimitedToProductKeys:(id)a0 distributionEnvironment:(id)a1 distributionEvalutionMetainfo:(id)a2 installedPrinters:(id)a3 mdmInitiated:(BOOL)a4 preferredLocalizations:(id)a5 replyWhenDone:(id /* block */)a6;
- (void)refreshAvailableUpdatesForCurrentConfigurationLimitedToProductTypes:(id)a0 distributionEnvironment:(id)a1 distributionEvalutionMetainfo:(id)a2 installedPrinters:(id)a3 mdmInitiated:(BOOL)a4 preferredLocalizations:(id)a5 replyWhenDone:(id /* block */)a6;
- (void)registerRequestsToInstallAfterPostLogoutUpdates:(id)a0 reply:(id /* block */)a1;
- (void)registerToInstallAfterLogoutForProductKeys:(id)a0 nowIsLater:(BOOL)a1 restartNow:(BOOL)a2 shouldStashCredentials:(BOOL)a3 skipFLO:(BOOL)a4 reply:(id /* block */)a5;
- (void)resetServiceWithReply:(id /* block */)a0;
- (void)restartingForDoItLaterUpdateWithReply:(id /* block */)a0;
- (void)setAutomaticallyInstallLater:(BOOL)a0 forProductKeys:(id)a1 replyWhenDone:(id /* block */)a2;
- (void)setIASUCatalogWithValue:(id)a0 reply:(id /* block */)a1;
- (void)setPreferenceObject:(id)a0 forKey:(id)a1 reply:(id /* block */)a2;
- (void)setProductProperties:(id)a0 forProductKeys:(id)a1 replyWhenDone:(id /* block */)a2;
- (void)setRestartingForDoItLaterUpdate:(BOOL)a0;
- (void)startDownloadingForProductKeys:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)startInstallingAdminUpdates:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)startRootModeUpdatesForProductKeys:(id)a0 clientBlocksRestart:(BOOL)a1 replyWhenDone:(id /* block */)a2;
- (void)startUpdatesForProductKeys:(id)a0 inForeground:(BOOL)a1 clientBlocksRestart:(BOOL)a2 replyWhenDone:(id /* block */)a3;
- (void)stashAndCommitFDEKeyReplyingWithResult:(id /* block */)a0;
- (void)stashLoginCredentialsEnablingFLO:(BOOL)a0 reply:(id /* block */)a1;
- (void)stashURLCredential:(id)a0;
- (void)statusForUpdateWithProductKey:(id)a0 reply:(id /* block */)a1;
- (void)suspendBackgroundTasksTemporarily:(BOOL)a0 desiredDuration:(long long)a1 reply:(id /* block */)a2;
- (void)takeInstallNotificationsOfType:(id)a0 withReply:(id /* block */)a1;
- (void)takeRequestsToInstallAfterPostLogoutUpdatesWithReply:(id /* block */)a0;
- (void)updateProductsForProductKeys:(id)a0 withReply:(id /* block */)a1;
- (void)updatesQueuedForLaterDidChange;

@end

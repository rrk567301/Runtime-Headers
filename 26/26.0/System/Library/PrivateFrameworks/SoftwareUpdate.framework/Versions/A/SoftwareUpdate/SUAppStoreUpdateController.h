@class NSError, NSString, NSXPCConnection, NSURLCredential, NSArray, NSLock, SUPowerSourceMonitor, NSObject;
@protocol OS_dispatch_queue;

@interface SUAppStoreUpdateController : NSObject <SUUpdateClient> {
    NSXPCConnection *_conn;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _connectionLock;
    NSArray *_currentUpdates;
    NSArray *_currentMajorUpdates;
    NSArray *_queuedUpdates;
    NSObject<OS_dispatch_queue> *_q;
    SUPowerSourceMonitor *_powerMonitor;
    NSObject<OS_dispatch_queue> *_scanAndSessionQ;
    NSError *_lastCantStartError;
    struct AuthorizationOpaqueRef { } *_authRef;
    BOOL _didSendAuth;
    BOOL _destroyAuthRef;
    BOOL _serviceInterrupted;
    long long _numServiceInterruptionsDetected;
    NSObject<OS_dispatch_queue> *_authQueue;
    NSLock *_statusTimerLock;
    NSObject<OS_dispatch_queue> *_initialAvailableUpdatesQueryQueue;
    BOOL _isSystemAppleInternal;
}

@property BOOL requireACPower;
@property (readonly) BOOL canStartUpdate;
@property (retain) NSURLCredential *sharedURLCredential;
@property (readonly) BOOL deferredUpdatesExist;
@property BOOL shouldRegisterBundleURLWithLaunchServices;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_errorWithCode:(long long)a0 userInfo:(id)a1 underlyingError:(id)a2;
+ (id)keyPathsForValuesAffectingCanStartUpdate;
+ (id)sharedUpdateController;

- (id)_connection;
- (BOOL)setAuthorization:(struct AuthorizationOpaqueRef { } *)a0;
- (id)synchronousRemoteObjectProxyWithErrorHandler:(id /* block */)a0;
- (void)cancelOperation:(id)a0;
- (id)remoteObjectProxyWithErrorHandler:(id /* block */)a0;
- (void)dealloc;
- (id)init;
- (id)updatesToBeInstalledAfterLogout;
- (id)catalogHostName;
- (void)__queryForAvailableUpdatesHelper:(id /* block */)a0;
- (BOOL)_authorizeIfNeeded:(BOOL)a0;
- (BOOL)_clearUserSideStashCredentials;
- (id)_dictFromUpdateStatus:(id)a0;
- (BOOL)_hasIAUpdate:(id)a0;
- (id)_lookupURLCredentialsFromUserKeychain:(id)a0;
- (id)_productKeysFromUpdates:(id)a0;
- (void)_queryForAvailableUpdatesSynchronous;
- (void)_queryForAvailableUpdatesWithCompletionHandler:(id /* block */)a0;
- (id)_queuedProductKeys;
- (void)_retrieveCatalogInformationWithCompletionHandler:(id /* block */)a0;
- (void)_setAvailableUpdates:(id)a0 withMajorOSUpdates:(id)a1 currentStatus:(id)a2 deferredUpdatesChanged:(BOOL)a3;
- (void)_setQueuedUpdatesAndNotify:(id)a0;
- (id)_shortDescriptionOfUpdates:(id)a0;
- (BOOL)_shouldStashLoginCredentialsForUpdates:(id)a0;
- (void)_softwareUpdateDaemonStarted:(id)a0;
- (id)_startSessionForUpdates:(id)a0 withInstall:(BOOL)a1 usingForeground:(BOOL)a2 notifyOn:(id)a3 progress:(id /* block */)a4 finish:(id /* block */)a5;
- (void)_updateCanStartUpdate:(id)a0;
- (id)_updatesFromProductKeys:(id)a0;
- (long long)actionRequiredForQueuedUpdates;
- (long long)actionRequiredForUpdates:(id)a0;
- (id)applicationIdentifiersToCloseForQueuedUpdates;
- (id)applicationIdentifiersToCloseForUpdates:(id)a0;
- (void)authChallengeWasReceived:(id)a0 handled:(BOOL *)a1;
- (id)availableMajorOSUpdates;
- (id)availableUpdates;
- (void)availableUpdatesDidChange;
- (void)availableUpdatesMatchingPredicate:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)blockUntilInitialAvailableUpdatesPopulated;
- (BOOL)canStartUpdateReturningError:(id *)a0;
- (void)cancelUpdatesForProductKeys:(id)a0;
- (int)catalogTrustLevel;
- (id)catalogURL;
- (void)catalogURLDidChange;
- (id)combinedStatusForProductKeys:(id)a0;
- (BOOL)dequeueUpdate:(id)a0;
- (id)dictFromUpdateStatus:(id)a0;
- (unsigned long long)diskSpaceRequiredForQueuedUpdates;
- (unsigned long long)diskSpaceRequiredForUpdates:(id)a0;
- (BOOL)enqueueUpdate:(id)a0;
- (void)fetchMajorProductForUpdate:(id)a0 withCompletionHandler:(id /* block */)a1;
- (BOOL)installQueuedUpdatesAfterNextLogoutRestartingNow:(BOOL)a0;
- (void)installStateDidChange:(id)a0 forUpdateWithProductKey:(id)a1;
- (BOOL)installUpdatesAfterNextLogout:(id)a0 restartingNow:(BOOL)a1;
- (BOOL)installUpdatesAfterNextLogout:(id)a0 restartingNow:(BOOL)a1 nowIsLater:(BOOL)a2;
- (BOOL)installUpdatesLater:(id)a0;
- (void)installedBundlesToRegisterWithLaunchServices:(id)a0 completion:(id /* block */)a1;
- (id)installedUpdateJournal;
- (id)installedUpdateJournalPrunedAndSorted;
- (BOOL)isDefaultCatalog;
- (BOOL)isDownloadRequiredForPostLogoutQueuedUpdates;
- (BOOL)isDownloadRequiredForPostLogoutUpdates:(id)a0;
- (BOOL)isEVProtected;
- (id)productKeysInActiveForegroundTransactions;
- (id)queuedUpdates;
- (BOOL)registerRequestsToInstallAfterPostLogoutUpdates:(id)a0 error:(id *)a1;
- (BOOL)removeAllUpdatesFromInstallLater;
- (id)startDownloadingPostLogoutQueuedUpdatesAndNotifyOn:(id)a0 progress:(id /* block */)a1 finish:(id /* block */)a2;
- (id)startDownloadingPostLogoutUpdates:(id)a0 notifyOn:(id)a1 progress:(id /* block */)a2 finish:(id /* block */)a3;
- (id)startInstallingQueuedUpdatesAndNotifyOn:(id)a0 progress:(id /* block */)a1 finish:(id /* block */)a2;
- (id)startInstallingUpdates:(id)a0 notifyOn:(id)a1 progress:(id /* block */)a2 finish:(id /* block */)a3;
- (id)startInstallingUpdates:(id)a0 notifyOn:(id)a1 usingForeground:(BOOL)a2 progress:(id /* block */)a3 finish:(id /* block */)a4;
- (id)startScanningForUpdatesIncludingPrerelease:(BOOL)a0 rampedUnseen:(BOOL)a1 evenIfUnchanged:(BOOL)a2 notifyOn:(id)a3 progress:(id /* block */)a4 finish:(id /* block */)a5;
- (id)systemConfiguredCatalogURL;
- (void)updatesQueuedForLaterDidChange;
- (id)updatesToBeInstalledLater;

@end

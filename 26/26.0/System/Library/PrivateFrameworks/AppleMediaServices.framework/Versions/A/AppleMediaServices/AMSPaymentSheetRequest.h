@class NSString, AMSDelegatePurchaseRequest, AMSPaymentSheetPerformanceMetrics, NSArray, AMSBiometricsSignatureRequest, NSDictionary, NSURL, ACAccount, NSAttributedString, AMSCardSingleSelection, NSNumber;

@interface AMSPaymentSheetRequest : NSObject <NSSecureCoding>

@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly) unsigned long long ams_confirmationStyle;
@property BOOL isDelegateAuthentication;
@property (retain) AMSPaymentSheetPerformanceMetrics *performanceMetrics;
@property (copy) NSDictionary *responseDictionary;
@property (retain) AMSDelegatePurchaseRequest *delegatePurchaseRequest;
@property BOOL isDelegateAuthentication;
@property (retain) AMSPaymentSheetPerformanceMetrics *performanceMetrics;
@property (copy) NSDictionary *responseDictionary;
@property (retain) AMSDelegatePurchaseRequest *delegatePurchaseRequest;
@property (copy) ACAccount *account;
@property (copy) NSString *accountHeader;
@property (getter=isApplePayClassic) BOOL applePayClassic;
@property (copy) NSArray *attributedList;
@property (retain) AMSBiometricsSignatureRequest *biometricsRequest;
@property long long confirmationTitle;
@property (copy) NSString *countryCode;
@property (copy) NSString *currencyCode;
@property (copy) NSString *delegateAuthenticateChallenge;
@property (copy) NSNumber *designVersion;
@property (copy) NSString *displayPrice;
@property (copy) NSString *explanation;
@property (copy) NSArray *flexList;
@property (retain) NSArray *inlineImages;
@property (retain) NSString *logKey;
@property (copy) NSDictionary *merchantSession;
@property (copy) NSString *message;
@property long long payee;
@property (copy) NSString *paymentSession;
@property (copy) NSString *paymentSummary;
@property (copy) NSArray *preSheetDialog;
@property (copy) NSNumber *price;
@property (copy) NSArray *priceSectionItems;
@property (copy) NSString *ratingHeader;
@property (copy) NSString *ratingValue;
@property BOOL requiresAuthorization;
@property (readonly) BOOL requiresDelegateAuthentication;
@property long long salableIcon;
@property (copy) NSURL *salableIconURL;
@property (copy) NSArray *salableInfo;
@property (copy) NSAttributedString *salableInfoLabel;
@property (copy) NSArray *secondaryFlexList;
@property long long secondarySalableIcon;
@property (copy) NSURL *secondarySalableIconURL;
@property (copy) NSArray *secondarySalableInfo;
@property (copy) NSAttributedString *secondarySalableInfoLabel;
@property (retain) AMSCardSingleSelection *selectedCard;
@property BOOL shouldUppercaseText;
@property (copy) NSString *storeName;
@property (copy) NSArray *styles;
@property (copy) NSString *title;
@property long long titleType;
@property (copy) NSString *userAgent;
@property BOOL disablePasscodeFallback;
@property BOOL drawBackground;
@property BOOL drawBottomDivider;

+ (id)attributedStringByRemovingPlaceholderTagsFromAttributedString:(id)a0;
+ (id)paymentSheetRequestFromDictionary:(id)a0 account:(id)a1;

- (void)encodeWithCoder:(id)a0;
- (id)init;
- (id)initWithCoder:(id)a0;
- (void).cxx_destruct;
- (struct CGImage { } *)_createImageRefForImageRef:(struct CGImage { } *)a0 withAdornmentStyle:(long long)a1 andDesignVersion:(id)a2;
- (id)ams_createContentItemForAccount;
- (id)_amsContentItemsForFlexibleList:(id)a0 assetCache:(id)a1 designVersion:(id)a2 bag:(id)a3;
- (id)_attachInlineImagesToAttributedString:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)_attachLeadingItem:(id)a0 attributedString:(id)a1 designVersion:(id)a2;
- (id)_contentItemsForFlexibleList:(id)a0 assetCache:(id)a1 designVersion:(id)a2 bag:(id)a3;
- (struct CGPath { } *)_createBorderPathForAdornmentStyle:(long long)a0 iconWidth:(double)a1 iconHeight:(double)a2;
- (struct CGImage { } *)_createDefaultImageWithImageRef:(struct CGImage { } *)a0 size:(struct CGSize { double x0; double x1; })a1 borderPath:(struct CGPath { } *)a2;
- (struct CGImage { } *)_createImageForAssetConfiguration:(id)a0 outAssetScale:(float *)a1;
- (struct CGImage { } *)_createImageMaskRefWithSize:(struct CGSize { double x0; double x1; })a0 andPath:(struct CGPath { } *)a1;
- (struct CGImage { } *)_createImageRefForAssetURL:(id)a0 size:(struct CGSize { double x0; double x1; })a1 assetType:(long long)a2 outAssetScale:(float *)a3;
- (struct CGImage { } *)_createImageRefForImageSource:(struct CGImageSource { } *)a0 screenScale:(float)a1 outAssetScale:(float *)a2;
- (struct CGImage { } *)_createImageRefForImageURL:(id)a0 outAssetScale:(float *)a1;
- (struct CGImage { } *)_createImageRefForPDFURL:(id)a0 size:(struct CGSize { double x0; double x1; })a1 outAssetScale:(float *)a2;
- (struct CGImage { } *)_createImageRefWithURL:(id)a0 designVersion:(id)a1 adornmentStyle:(long long)a2 bag:(id)a3;
- (struct CGImage { } *)_createMaskedImageRefForImageRef:(struct CGImage { } *)a0 withPathRef:(struct CGPath { } *)a1 adornmentStyle:(long long)a2 andDesignVersion:(id)a3;
- (struct CGImage { } *)_createRGBImageRefForGreyScaleImageRef:(struct CGImage { } *)a0 width:(unsigned long long)a1 height:(unsigned long long)a2;
- (struct CGImage { } *)_createRatingImageWithStringValue:(id)a0 assetScale:(float *)a1;
- (long long)_imageTypeForURL:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectWithAspectRatio:(struct CGSize { double x0; double x1; })a0 insideRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)_replaceImagePlaceholderTag:(id)a0 withAttributes:(id)a1 foregroundColor:(long long)a2 forAttributedString:(id)a3;
- (id)_replaceImagePlaceholderTag:(id)a0 withImageData:(id)a1 scale:(float)a2 tint:(BOOL)a3 forAttributedString:(id)a4;
- (BOOL)_shouldDrawGrayBorderForMaskedImageWithDesignVersion:(id)a0;
- (id)_summaryItemsForAttributedList:(id)a0 assetCache:(id)a1 bag:(id)a2;
- (id)ams_amsContentItemForSalableInfoLabel:(id)a0 salableIconURL:(id)a1 salableIcon:(long long)a2 assetCache:(id)a3 designVersion:(id)a4 bag:(id)a5;
- (id)ams_contentItemForSalableInfoLabel:(id)a0 salableIconURL:(id)a1 salableIcon:(long long)a2 assetCache:(id)a3 designVersion:(id)a4 bag:(id)a5;
- (id)ams_createAMSContentItem:(id)a0 label:(id)a1 image:(struct CGImage { } *)a2 accessibilityIdentifier:(id)a3 padding:(id)a4;
- (id)ams_createAMSContentItemForRating;
- (id)ams_createAMSContentItemForSalableInfoWithAssetCache:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)ams_createAMSContentItemsForFlexibleListWithAssetCache:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)ams_createAMSContentItemsForPreScreenDialogWithAssetCache:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)ams_createContentItemForDeviceName:(id)a0;
- (id)ams_createContentItemForRating;
- (id)ams_createContentItemForSalableInfoWithAssetCache:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)ams_createContentItemsForFlexibleListWithAssetCache:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)ams_createContentItemsForPreScreenDialogWithAssetCache:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)ams_createSecondaryContentItemForSalableInfoWithAssetCache:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)ams_createSecondaryContentItemsForFlexibleListWithAssetCache:(id)a0 designVersion:(id)a1 bag:(id)a2;
- (id)ams_createSummaryItems;
- (id)ams_createSummaryItemsForAttributedListWithAssetCache:(id)a0 bag:(id)a1;
- (unsigned long long)ams_paymentRequestorType;
- (BOOL)isDesignVersionEqual:(id)a0;
- (BOOL)isDesignVersionEqualOrGreaterThan:(id)a0;
- (BOOL)isDesignVersionLessThan:(id)a0;

@end

@class NSBezierPath, NSImmediateActionGestureRecognizer, NSDate, VKTextPosition, VKTextRange, NSImage, NSString, NSCursor, NSAttributedString, CAShapeLayer, NSArray, VKCImageTextSelectionViewCommandHandler, NSColor;

@interface VKCImageTextSelectionView_macOS : VKCImageTextSelectionView <NSMenuItemValidation, NSServicesMenuRequestor, RVPresenterHighlightDelegate, RVPresenterViewControllerProvider, NSImmediateActionGestureRecognizerDelegate, NSTextInputClient, NSDraggingSource, NSSharingServicePickerDelegate, NSSharingServiceDelegate, NSPasteboardWriting>

@property (retain, nonatomic) VKTextPosition *mouseDownStartPosition;
@property (retain, nonatomic) VKTextRange *mouseDownStartRange;
@property (nonatomic) BOOL textDragPossible;
@property (nonatomic) struct CGPoint { double x; double y; } mouseDownStartPoint;
@property (retain, nonatomic) NSDate *mouseDownStartDate;
@property (nonatomic) BOOL selectionOffsetThresholdPassed;
@property (nonatomic) unsigned long long textDragHoldTimeIndex;
@property (nonatomic) BOOL inputContextEventHandled;
@property (retain, nonatomic) NSBezierPath *selectionPath;
@property (retain, nonatomic) NSBezierPath *outlinePath;
@property (retain, nonatomic) CAShapeLayer *selectionLayer;
@property (retain, nonatomic) CAShapeLayer *selectionOutlineLayer;
@property (retain, nonatomic) NSArray *selectionQuads;
@property (retain, nonatomic) NSArray *outlineRects;
@property (readonly, nonatomic) NSString *selectedString;
@property (readonly, nonatomic) NSAttributedString *selectedAttributedString;
@property (retain, nonatomic) NSImmediateActionGestureRecognizer *deepClickRecognizer;
@property (retain, nonatomic) NSImage *highlightButton;
@property (retain, nonatomic) VKCImageTextSelectionViewCommandHandler *commandHandler;
@property (retain, nonatomic) NSCursor *iBeamCursor;
@property (retain, nonatomic) NSColor *fillColor;
@property (retain, nonatomic) NSColor *strokeColor;
@property (retain, nonatomic) NSArray *textSelectionAXChildren;
@property BOOL needsTextSelectionAXChildrenFrameUpdate;
@property BOOL needsTextSelectionAXChildrenSelectionUpdate;
@property (retain, nonatomic) VKTextRange *selectedVKRange;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } unionRectInVisibleSelectedRange;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } documentVisibleRect;
@property (readonly) BOOL supportsAdaptiveImageGlyph;

- (void)selectAll:(id)a0;
- (BOOL)validateMenuItem:(id)a0;
- (void)unmarkText;
- (void)windowDidMove:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })markedRange;
- (BOOL)validateUserInterfaceItem:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectedRange;
- (void)mouseDown:(id)a0;
- (void)mouseUp:(id)a0;
- (BOOL)hasMarkedText;
- (void)clearSelection;
- (void)mouseDragged:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (void)keyDown:(id)a0;
- (BOOL)resignFirstResponder;
- (BOOL)isFlipped;
- (BOOL)becomeFirstResponder;
- (id)presenter;
- (void)copy:(id)a0;
- (void)doCommandBySelector:(SEL)a0;
- (unsigned long long)characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_share:(id)a0;
- (void).cxx_destruct;
- (void)revealContext:(id)a0 drawRectsForItem:(id)a1;
- (void)_lookUpDefiniteRangeInDictionaryFromMenu:(id)a0;
- (void)_lookUpIndefiniteRangeInDictionaryFromMenu:(id)a0;
- (void)_searchWithGoogleFromMenu:(id)a0;
- (BOOL)acceptsFirstMouse:(id)a0;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityChildren;
- (id)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (unsigned long long)draggingSession:(id)a0 sourceOperationMaskForDraggingContext:(long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)immediateActionRecognizerWillBeginAnimation:(id)a0;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)mouseMoved:(id)a0;
- (id)pasteboardPropertyListForType:(id)a0;
- (void)quickLookWithEvent:(id)a0;
- (id)revealContext:(id)a0 rectsForItem:(id)a1;
- (void)selectLine:(id)a0;
- (void)selectWord:(id)a0;
- (void)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (id)sharingService:(id)a0 sourceWindowForShareItems:(id)a1 sharingContentScope:(long long *)a2;
- (id)sharingServicePicker:(id)a0 delegateForSharingService:(id)a1;
- (id)validAttributesForMarkedText;
- (id)validRequestorForSendType:(id)a0 returnType:(id)a1;
- (void)viewDidEndLiveResize;
- (BOOL)wantsLayer;
- (id)writableTypesForPasteboard:(id)a0;
- (BOOL)writeSelectionToPasteboard:(id)a0 types:(id)a1;
- (void)updateCursorForEvent:(id)a0;
- (void)setRecognitionResult:(id)a0;
- (id)menuItemTitleForPresenter:(id)a0 item:(id)a1 documentContext:(id)a2 presentingContext:(id)a3 options:(id)a4;
- (id)viewControllerForPresenter:(id)a0 item:(id)a1 documentContext:(id)a2 presentingContext:(id)a3 options:(id)a4;
- (void)_configureCursorForPoint:(struct CGPoint { double x0; double x1; })a0 event:(id)a1;
- (void)_configureCursorForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_copyText:(id)a0;
- (id)_documentContext;
- (BOOL)_selectWordIfNecessaryForEvent:(id)a0 point:(struct CGPoint { double x0; double x1; })a1;
- (void)_shareText:(id)a0;
- (void)_tapToRadarFromMenu:(id)a0;
- (void)beginDragWithEvent:(id)a0;
- (void)configureSelectionForSelectionQuads:(id)a0;
- (id)dataDetectorElementForUUID:(id)a0;
- (id)documentContextForElement:(id)a0;
- (void)invalidatedMovibleByWindowRegionsIfNecessary;
- (BOOL)isPointDirectlyOverSelectedTextForClosestPosition:(id)a0 point:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)isPointOverText:(struct CGPoint { double x0; double x1; })a0;
- (id)itemAtLocation:(struct CGPoint { double x0; double x1; })a0 updateSelection:(BOOL)a1 outElement:(id *)a2;
- (id)menuItemsForEvent:(id)a0;
- (id)normalizedSelectionQuadsForRange:(id)a0;
- (BOOL)performTextActionWithSelector:(SEL)a0;
- (id)presentingContextAtWindowLocation:(struct CGPoint { double x0; double x1; })a0 item:(id)a1;
- (BOOL)selectWordIfNecessaryForEvent:(id)a0;
- (void)selectedTextBackgroundColorDidChange:(id)a0;
- (void)sendAnalyticsIfNecessaryWithSelector:(SEL)a0 type:(long long)a1 source:(long long)a2 preSelection:(id)a3 postSelection:(id)a4;
- (void)sendMenuAnalyticsEventIfNecessaryForItem:(id)a0 eventType:(long long)a1;
- (void)setNormalizedVisibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)showContextMenuWithEvent:(id)a0;
- (void)showContextMenuWithEvent:(id)a0 element:(id)a1 locationInWindow:(struct CGPoint { double x0; double x1; })a2;
- (void)showContextMenuWithEvent:(id)a0 element:(id)a1 locationInWindow:(struct CGPoint { double x0; double x1; })a2 ddEventType:(long long)a3;
- (id)supportedPboardTypes;
- (void)updateSelectionBorderIfNecessary;
- (void)updateSelectionColors;
- (void)updateSelectionOutlineLayer;
- (void)updateSelectionOutlineWidthIfNecessary;
- (void)updateSelectionPathLayerTransform;
- (void)updateSelectionRectsForBoundsChange;

@end

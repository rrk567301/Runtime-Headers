@class NSMutableDictionary, CIFilter, NSMapTable, NSIndexPath, NSObject, MOCollectionView, NSMutableArray, NSString, NSColorSpace, NSMutableSet, MOLRUCache, MOMediaViewLayout, MONSOperationQueue, NSColor;
@protocol OS_dispatch_queue, OS_dispatch_source, MOMediaViewDelegate, MOMediaViewDataSource;

@interface MOMediaView : NSView <NSScrollViewDelegate> {
    NSColor *_backgroundColor;
    BOOL _inLiveResize;
    BOOL _mouseDownHitBackground;
    BOOL _performBackgroundClickCheck;
    double _motionBlurScrollingRadius;
    CIFilter *_motionBlurScrollingFilter;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _decelerationTargetDocumentRect;
    NSMapTable *_lowThumbnailsCellOperations;
    NSMapTable *_bestThumbnailsCellOperations;
    MOLRUCache *_lowThumbnailsMemoryCache;
    NSMapTable *_lowThumbnailsPrefetchOperations;
    MOLRUCache *_bestThumbnailsMemoryCache;
    NSMapTable *_bestThumbnailsPrefetchOperations;
    NSMutableArray *_bestThumbnailsOperations;
    unsigned long long _maxBestConcurrentOperationCount;
    NSMapTable *_mainQueueThumbnailsOperations;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastOverdrawRect;
    NSObject<OS_dispatch_source> *_memoryStatusSource;
    unsigned long long _memoryStatus;
    id _activity;
    NSObject<OS_dispatch_queue> *_cancellationQueue;
    NSMutableDictionary *_pinnedThumbnails;
    NSMutableSet *_mainThreadRunLoopBlockTokens;
    NSObject<OS_dispatch_queue> *_mainThreadRunLoopBlockTokensQueue;
    NSMapTable *_mainThreadRunLoopBlockTokensCellsMap;
    struct { BOOL needsReload; BOOL reloading; BOOL waitingForVisibleContent; BOOL viewIsPrepared; BOOL inModalSelectionMode; BOOL modalSelectionModeSavedAllowsContinuousSelectionState; BOOL modalSelectionModeSavedAllowsPaintingSelectionState; BOOL modalSelectionModeSavedLassoSelectsInverse; BOOL dataSourceNumberOfSections; BOOL dataSourceMediaSectionAtIndexPath; BOOL dataSourceCellReuseIdentifierAtIndexPath; BOOL dataSourceSupplementaryViewReuseIdentifierOfKindAtIndexPath; BOOL dataSourceCanMoveItemsAtIndexPaths; BOOL dataSourceAllowedDropPositionsForItemsAtIndexPathsMovedToIndexPath; BOOL dataSourceDragOperationForItemsAtIndexPathsMovedOntoItemAtIndexPath; BOOL dataSourceMoveItemsAtIndexPathsToIndexPathsDropPosition; BOOL dataSourceShouldExchangeItemsAtIndexPathsWithProposedIndexPaths; BOOL dataSourceExchangeItemsAtIndexPathsWithIndexPaths; BOOL delegateTargetContentOffsetForProposedContentOffset; BOOL delegateWillUpdateCell; BOOL delegateDidUpdateCell; BOOL delegateWillUpdateSupplementaryView; BOOL delegateDidUpdateSupplementaryView; BOOL delegateWillDisplayCell; BOOL delegateDidEndDisplayingCell; BOOL delegateShouldSelectItem; BOOL delegateShouldDeselectItem; BOOL delegateDidSelectItem; BOOL delegateDidDeselectItem; BOOL delegateSelectionWillChange; BOOL delegateSelectionDidChange; BOOL delegateSelectionWillAddAndRemove; BOOL delegateSelectionDidAddAndRemove; BOOL delegateSectionsForSelectAllAction; BOOL delegateBackgroundWasClicked; BOOL delegateBackgroundWasRightClicked; BOOL delegateWillBeginScrolling; BOOL delegateDidScroll; BOOL delegateDidEndScrolling; BOOL delegateDidEndScrollingAnimation; BOOL delegateMouseDownWithEvent; BOOL delegateItemWasDoubleClickedAtIndexPathWithEvent; BOOL delegateItemWasRightClickedAtIndexPathWithEvent; BOOL delegateLoadingThumbnail; BOOL delegateUpdatesLayoutOnDrag; BOOL delegateImageForDraggedItemAtIndexPath; BOOL delegatePasteboardWriterForItemAtIndexPath; BOOL delegateDraggingItemForIndexPathProposedDraggingItem; BOOL delegatePreferredDraggingFormation; BOOL delegateCreatedDraggingSessionForItemsAtIndexPaths; BOOL delegateDraggingSessionSourceOperationMaskForDraggingContext; BOOL delegateDraggingSessionWillBeginAtPoint; BOOL delegateDraggingSessionMovedToPoint; BOOL delegateDraggingSessionEndedAtPointDragOperation; BOOL delegateDragSourceIdentifier; BOOL delegatePrepareForDragOperation; BOOL delegatePerformDragOperation; BOOL delegateDraggingEntered; BOOL delegateDraggingUpdated; BOOL delegateDraggingExited; BOOL delegateDraggingEnded; } _mediaViewFlags;
    BOOL _needsToPrefetchTargetBestThumbnails;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _currentScrollTargetRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastVisibleRect;
    unsigned long long _lastScrollDirection;
    unsigned long long _pptSampledCountOfFrames;
    unsigned long long _pptSampledCountOfEmptyCells;
}

@property (retain, nonatomic) MOCollectionView *collectionView;
@property (nonatomic) BOOL allowsMotionBlurScrolling;
@property (nonatomic) BOOL showsLowThumbnails;
@property (nonatomic) BOOL showsBestThumbnails;
@property (nonatomic) BOOL showsThumbnailsIndicators;
@property (nonatomic) unsigned long long mediaSectionsMinimumMemoryCacheSlots;
@property (nonatomic) unsigned long long mediaItemsMinimumMemoryCacheSlots;
@property (nonatomic) unsigned long long mediaSectionsMaximumMemoryCacheSlots;
@property (nonatomic) unsigned long long mediaItemsMaximumMemoryCacheSlots;
@property (nonatomic) double bestResolutionThumbnailQualityScale1;
@property (nonatomic) double bestResolutionThumbnailQualityScale2;
@property (nonatomic) unsigned long long prefetchLowThumbnailsPagesCount;
@property (nonatomic) unsigned long long prefetchLowThumbnailsWhileScrollingPagesCount;
@property (nonatomic) unsigned long long lowThumbnailsMemoryCacheSlotsAlignement;
@property (nonatomic) double lowThumbnailsMemoryCacheSlotsMinimumFactor;
@property (nonatomic) double lowThumbnailsMemoryCacheSlotsMaximumFactor;
@property (nonatomic) unsigned long long prefetchBestThumbnailsPagesCount;
@property (nonatomic) unsigned long long prefetchBestThumbnailsWhileScrollingPagesCount;
@property (nonatomic) unsigned long long bestThumbnailsMemoryCacheSlotsAlignement;
@property (nonatomic) double bestThumbnailsMemoryCacheSlotsMinimumFactor;
@property (nonatomic) double bestThumbnailsMemoryCacheSlotsMaximumFactor;
@property (readonly, nonatomic) double backingScaleFactor;
@property (readonly, retain, nonatomic) NSColorSpace *colorSpace;
@property (readonly, nonatomic) MONSOperationQueue *operationQueue;
@property BOOL isCancellingAllOperations;
@property (readonly, nonatomic) struct CGPoint { double x; double y; } collectionViewContentPreviousOffset;
@property (retain, nonatomic) NSIndexPath *liveResizeAnchorIndexPath;
@property (nonatomic) struct CGPoint { double x; double y; } liveResizeAnchorOffset;
@property (weak, nonatomic) id<MOMediaViewDataSource> dataSource;
@property (weak, nonatomic) id<MOMediaViewDelegate> delegate;
@property (readonly, nonatomic) MOMediaViewLayout *mediaViewLayout;
@property (nonatomic) BOOL allowsBestOnDeceleration;
@property (nonatomic) BOOL fadesBestOnUpdates;
@property (nonatomic) unsigned long long thumbnailMode;
@property (nonatomic) BOOL usesBestNearestInterpolation;
@property (nonatomic) BOOL usesSmoothScrolling;
@property (nonatomic) BOOL animateSelection;
@property (nonatomic) BOOL rearrangingEnabled;
@property (nonatomic) BOOL rearrangingAllowAutoscroll;
@property (nonatomic) BOOL externalDropEnabled;
@property (readonly, nonatomic, getter=isLassoSelectionInProgress) BOOL lassoSelectionInProgress;
@property (readonly, nonatomic) NSIndexPath *lastRightClickedIndexPath;
@property (setter=_setWantsPageAlignedHorizontalAxis:) BOOL _wantsPageAlignedHorizontalAxis;
@property (setter=_setWantsPageAlignedVerticalAxis:) BOOL _wantsPageAlignedVerticalAxis;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)numberOfItemsInSection:(long long)a0;
- (void)reloadData;
- (void)cancelAllOperations;
- (void)windowDidExitFullScreen:(id)a0;
- (long long)numberOfSectionsInCollectionView:(id)a0;
- (id)collectionView:(id)a0 viewForSupplementaryElementOfKind:(id)a1 atIndexPath:(id)a2;
- (long long)collectionView:(id)a0 numberOfItemsInSection:(long long)a1;
- (void)mouseDown:(id)a0;
- (void)mouseUp:(id)a0;
- (void)viewWillMoveToWindow:(id)a0;
- (long long)numberOfSections;
- (void)collectionView:(id)a0 didDeselectItemAtIndexPath:(id)a1;
- (void)collectionView:(id)a0 didEndDisplayingSupplementaryView:(id)a1 forElementOfKind:(id)a2 atIndexPath:(id)a3;
- (BOOL)collectionView:(id)a0 shouldDeselectItemAtIndexPath:(id)a1;
- (void)mouseDragged:(id)a0;
- (void)setBackgroundColor:(id)a0;
- (void)setNeedsReload:(BOOL)a0;
- (BOOL)needsReload;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForItemAtIndexPath:(id)a0;
- (id)collectionView:(id)a0 pasteboardWriterForItemAtIndexPath:(id)a1;
- (void)keyDown:(id)a0;
- (id)collectionView:(id)a0 cellForItemAtIndexPath:(id)a1;
- (void)collectionView:(id)a0 willDisplayCell:(id)a1 forItemAtIndexPath:(id)a2;
- (BOOL)collectionView:(id)a0 shouldSelectItemAtIndexPath:(id)a1;
- (void)_setBackgroundColor:(id)a0;
- (void)collectionView:(id)a0 didSelectItemAtIndexPath:(id)a1;
- (void)viewDidMoveToWindow;
- (id)initWithCoder:(id)a0;
- (void)viewDidChangeBackingProperties;
- (void)collectionView:(id)a0 didEndDisplayingCell:(id)a1 forItemAtIndexPath:(id)a2;
- (void)windowDidEnterFullScreen:(id)a0;
- (void)viewDidChangeEffectiveAppearance;
- (struct CGPoint { double x0; double x1; })_collectionView:(id)a0 targetContentOffsetForProposedContentOffset:(struct CGPoint { double x0; double x1; })a1;
- (void).cxx_destruct;
- (void)rightMouseDown:(id)a0;
- (id)_indexPathsForAllItemsInSection:(long long)a0;
- (void)collectionView:(id)a0 draggingSession:(id)a1 endedAtPoint:(struct CGPoint { double x0; double x1; })a2 dragOperation:(unsigned long long)a3;
- (BOOL)inLiveResize;
- (id)indexPathForItemAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)indexPathsForSelectedItems;
- (void)registerClass:(Class)a0 forCellWithReuseIdentifier:(id)a1;
- (void)registerClass:(Class)a0 forSupplementaryViewOfKind:(id)a1 withReuseIdentifier:(id)a2;
- (void)rightMouseDragged:(id)a0;
- (void)rightMouseUp:(id)a0;
- (void)scrollToItemAtIndexPath:(id)a0 atScrollPosition:(unsigned long long)a1 animated:(BOOL)a2;
- (void)scrollViewBeganMomentum:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (void)viewDidEndLiveResize;
- (void)viewWillMoveToSuperview:(id)a0;
- (void)viewWillStartLiveResize;
- (void)systemColorsDidChange:(id)a0;
- (struct CGSize { double x0; double x1; })frameSizeForContentSize:(struct CGSize { double x0; double x1; })a0;
- (unsigned long long)numberOfSelectedItems;
- (void)updateVisibleCells;
- (void)reloadData:(BOOL)a0;
- (unsigned long long)collectionView:(id)a0 draggingEntered:(id)a1;
- (void)selectAllItems:(BOOL)a0;
- (unsigned long long)collectionView:(id)a0 draggingUpdated:(id)a1;
- (void)_viewCleanup;
- (long long)collectionView:(id)a0 allowedDropPositionsForItemsAtIndexPaths:(id)a1 movedToIndexPath:(id)a2;
- (BOOL)collectionView:(id)a0 canMoveItemsAtIndexPaths:(id)a1;
- (void)collectionView:(id)a0 createdDraggingSession:(id)a1 forItemsAtIndexPaths:(id)a2;
- (void)collectionView:(id)a0 didPrepareForOverdraw:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (unsigned long long)collectionView:(id)a0 dragOperationForItemsAtIndexPaths:(id)a1 movedOntoItemAtIndexPath:(id)a2;
- (void)collectionView:(id)a0 draggingEnded:(id)a1;
- (void)collectionView:(id)a0 draggingExited:(id)a1;
- (id)collectionView:(id)a0 draggingItemForIndexPath:(id)a1 proposedDraggingItem:(id)a2;
- (void)collectionView:(id)a0 draggingSession:(id)a1 movedToPoint:(struct CGPoint { double x0; double x1; })a2;
- (unsigned long long)collectionView:(id)a0 draggingSession:(id)a1 sourceOperationMaskForDraggingContext:(long long)a2;
- (void)collectionView:(id)a0 draggingSession:(id)a1 willBeginAtPoint:(struct CGPoint { double x0; double x1; })a2;
- (void)collectionView:(id)a0 exchangeItemsAtIndexPaths:(id)a1 withIndexPaths:(id)a2;
- (id)collectionView:(id)a0 imageForDraggedItemAtIndexPath:(id)a1;
- (void)collectionView:(id)a0 indexPathsForSelectedItemsDidAdd:(id)a1 remove:(id)a2 animated:(BOOL)a3;
- (void)collectionView:(id)a0 indexPathsForSelectedItemsWillAdd:(id)a1 remove:(id)a2 animated:(BOOL)a3;
- (void)collectionView:(id)a0 itemWasDoubleClickedAtIndexPath:(id)a1 withEvent:(id)a2;
- (void)collectionView:(id)a0 itemWasRightClickedAtIndexPath:(id)a1 withEvent:(id)a2;
- (void)collectionView:(id)a0 mouseDownWithEvent:(id)a1;
- (void)collectionView:(id)a0 moveItemsAtIndexPaths:(id)a1 toIndexPath:(id)a2 dropPosition:(long long)a3;
- (BOOL)collectionView:(id)a0 performDragOperation:(id)a1;
- (BOOL)collectionView:(id)a0 prepareForDragOperation:(id)a1;
- (BOOL)collectionView:(id)a0 shouldExchangeItemsAtIndexPaths:(id)a1 withProposedIndexPaths:(id)a2;
- (struct CGPoint { double x0; double x1; })collectionView:(id)a0 targetContentOffsetOnResizeForProposedContentOffset:(struct CGPoint { double x0; double x1; })a1;
- (void)collectionViewDidEndDecelerating:(id)a0;
- (void)collectionViewDidEndScrolling:(id)a0;
- (void)collectionViewDidEndScrollingAnimation:(id)a0;
- (void)collectionViewDidScroll:(id)a0;
- (BOOL)collectionViewUpdatesLayoutOnDrag:(id)a0;
- (void)collectionViewWillBeginScrolling:(id)a0;
- (struct CGSize { double x0; double x1; })contentSizeForFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)deselectAllItems:(BOOL)a0;
- (void)deselectItemsAtIndexPaths:(id)a0 animated:(BOOL)a1;
- (id)dragSourceIdentifierForCollectionView:(id)a0;
- (void)scrollToItemAtIndexPath:(id)a0 atScrollPosition:(unsigned long long)a1 animated:(BOOL)a2 userInteractivelyScrolling:(BOOL)a3;
- (id)sectionsForSelectAllActionInCollectionView:(id)a0;
- (BOOL)selectedItemAtIndexPath:(id)a0;
- (void)addMainQueueThumbnailOperation:(id)a0;
- (void)invalidateMediaItemAtIndexPath:(id)a0;
- (void)updateContentSupplementaryViews;
- (BOOL)_mediaViewBackgroundHitByEvent:(id)a0;
- (void)_viewDidChangeBackingProperties;
- (void)prefetchBestVisibleMediaContent;
- (void)updateVisibleSupplementaryViews;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleFrameForItemAtIndexPath:(id)a0;
- (id)_bestThumbnailInMemoryForMediaItem:(id)a0 andResolution:(unsigned long long)a1;
- (id)_bestThumbnailsCellOperations;
- (id)_bestThumbnailsPrefetchOperations;
- (BOOL)_canShowBestThumbnailsForCell:(id)a0;
- (BOOL)_closeEnoughToLoadBestThumbnailForCell:(id)a0;
- (BOOL)_closeEnoughToPrefetchTargetBestThumbnailsWhenScrolling;
- (void)_collectionViewDidEndDecelerating;
- (void)_collectionViewDidEndScrolling;
- (void)_collectionViewWillBeginScrolling;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_criticalScrollingArea;
- (void)_didResignActiveNotification;
- (id)_lowThumbnailInMemoryForMediaItem:(id)a0;
- (id)_lowThumbnailsCellOperations;
- (id)_lowThumbnailsPrefetchOperations;
- (id)_mainQueueThumbnailsOperations;
- (id)_mediaViewRelatedViewHitByEvent:(id)a0;
- (void)_registerClass:(Class)a0 forCellWithReuseIdentifier:(id)a1;
- (void)_registerClass:(Class)a0 forSupplementaryViewOfKind:(id)a1 withReuseIdentifier:(id)a2;
- (void)_rescheduleOperations;
- (void)_setBestThumbnailInMemory:(id)a0 andResolution:(unsigned long long)a1 forMediaItem:(id)a2;
- (void)_setLowThumbnailInMemory:(id)a0 forMediaItem:(id)a1;
- (void)_setMediaViewLayout:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (id)_thumbnailAtIndexPath:(id)a0;
- (void)_updateCell:(id)a0 withMediaItem:(id)a1 atIndexPath:(id)a2;
- (void)_updateCellToBest:(id)a0 withMediaItem:(id)a1 atIndexPath:(id)a2 withDependencyOperation:(id)a3;
- (void)_updateCollectionViewWithMediaViewLayout:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)_updateContentsInResponseToUserInitiatedSizeChange;
- (void)_updateMotionBlurScrolling;
- (void)_updateSupplementaryView:(id)a0 ofKind:(id)a1 withMediaSection:(id)a2 atIndexPath:(id)a3;
- (void)_viewDidPrepare:(BOOL)a0;
- (void)_viewWillPrepare;
- (void)_waitUntilVisibleContentIsPrepared:(double)a0 includingBest:(BOOL)a1 completion:(id /* block */)a2;
- (void)_willTerminateNotification;
- (void)addBestThumbnailCellOperation:(id)a0;
- (void)addBestThumbnailPrefetchOperation:(id)a0;
- (void)addLowThumbnailCellOperation:(id)a0;
- (void)addLowThumbnailPrefetchOperation:(id)a0;
- (void)addMainThreadRunLoopBlockWithToken:(id)a0 forCellUUID:(id)a1;
- (unsigned long long)bestThumbnailsCellOperationsCount;
- (void)cancelAllBestThumbnailCellNonVisibleOperations;
- (void)cancelAllBestThumbnailCellOperations;
- (void)cancelAllBestThumbnailPrefetchOperations;
- (void)cancelAllBestThumbnailPrefetchOperationsButIndexPaths:(id)a0;
- (void)cancelAllLowThumbnailCellOperations;
- (void)cancelAllLowThumbnailPrefetchOperations;
- (void)cancelAllLowThumbnailPrefetchOperationsButIndexPaths:(id)a0;
- (void)cancelAllMainQueueThumbnailOperations;
- (void)cancelAllMainThreadRunLoopBlocks;
- (void)cancelAllOperations:(id /* block */)a0;
- (void)cancelAllThumbnailCellOperations;
- (void)cancelAllThumbnailCellOperationsForCell:(id)a0;
- (void)cancelAllThumbnailPrefetchOperations;
- (void)cancelAllThumbnailPrefetchOperationsForIndexPath:(id)a0;
- (void)cancelBestThumbnailCellOperationsForCell:(id)a0;
- (void)cancelBestThumbnailPrefetchOperationForIndexPath:(id)a0;
- (void)cancelLowThumbnailCellOperationsForCell:(id)a0;
- (void)cancelLowThumbnailPrefetchOperationForIndexPath:(id)a0;
- (void)cancelMainQueueThumbnailOperationForContext:(id)a0;
- (void)cancelMainThreadRunLoopBlockForCellUUID:(id)a0;
- (id)closestIndexPathForItemAtPoint:(struct CGPoint { double x0; double x1; })a0 byDelta:(double)a1;
- (long long)collectionViewPreferredDraggingFormation:(id)a0;
- (unsigned long long)countOfEmptyCells;
- (id)currentBestThumbnailOperationDependency;
- (void)deselectItemsInSection:(long long)a0 animated:(BOOL)a1;
- (void)didEndScrollingContent;
- (void)enumerateVisibleSupplementaryViewsOfKind:(id)a0 usingBlock:(id /* block */)a1;
- (void)flushPinnedThumbnails;
- (BOOL)hasBestThumbnailCellOperationForCell:(id)a0;
- (BOOL)hasBestThumbnailPrefetchOperationForIndexPath:(id)a0;
- (BOOL)hasLowThumbnailCellOperationForCell:(id)a0;
- (BOOL)hasLowThumbnailPrefetchOperationForIndexPath:(id)a0;
- (BOOL)hasMainQueueThumbnailOperationForContext:(id)a0;
- (BOOL)hasMainThreadRunLoopBlockWithToken:(id)a0;
- (BOOL)inModalSelectionMode;
- (id)indexPathsForAllItems;
- (void)indexPathsForSelectedItemsDidAdd:(id)a0 remove:(id)a1;
- (void)indexPathsForSelectedItemsWillAdd:(id)a0 remove:(id)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 mediaViewLayout:(id)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 mediaViewLayout:(id)a1 responsiveScrolling:(BOOL)a2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 responsiveScrolling:(BOOL)a1;
- (void)installMemoryPressureListener;
- (void)invalidateAllMemoryCaches;
- (void)invalidateThumbnailsMemoryCaches;
- (BOOL)isVisibleContentPrepared:(BOOL)a0;
- (BOOL)isWaitingForVisibleContent;
- (struct CGPoint { double x0; double x1; })layoutPointForMediaViewPoint:(struct CGPoint { double x0; double x1; })a0;
- (unsigned long long)lowThumbnailsCellOperationsCount;
- (unsigned long long)mainQueueThumbnailsOperationsCount;
- (id)mediaItemAtIndexPath:(id)a0;
- (id)mediaItemsAtIndexPaths:(id)a0;
- (id)mediaItemsForSelectedItems;
- (id)mediaSectionAtIndex:(long long)a0;
- (id)mediaSectionAtIndexPath:(id)a0;
- (struct CGPoint { double x0; double x1; })mediaViewPointForLayoutPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)mediaVisiblePivotIndexPath;
- (long long)operationQueuePriorityForType:(unsigned long long)a0 withCell:(id)a1;
- (id)orderedContentCells;
- (id)orderedOverdrawMediaItems;
- (id)orderedVisibleMediaItems;
- (id)pinVisibleThumbnails;
- (void)prefetchAdjacentMediaContent;
- (void)prefetchAdjacentThumbnails:(BOOL)a0;
- (void)prefetchBestForItemsAroundIndexPath:(id)a0;
- (void)prefetchBestThumbnails:(unsigned long long)a0;
- (void)prefetchBestThumbnails:(unsigned long long)a0 pageDirection:(unsigned long long)a1;
- (void)prefetchBestThumbnailsAtIndexPaths:(id)a0;
- (void)prefetchBestThumbnailsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)prefetchBestThumbnailsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 pageDirection:(unsigned long long)a1;
- (void)prefetchContentItemsBestThumbnails;
- (void)prefetchContentItemsLowThumbnails;
- (void)prefetchLowThumbnails:(unsigned long long)a0;
- (void)prefetchLowThumbnails:(unsigned long long)a0 pageDirection:(unsigned long long)a1;
- (void)prefetchLowThumbnailsAtIndexPaths:(id)a0;
- (void)prefetchLowThumbnailsForScrolling;
- (void)prefetchLowThumbnailsInExactRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)prefetchLowThumbnailsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 pageDirection:(unsigned long long)a1;
- (void)prefetchLowVisibleMediaContent;
- (void)refreshContentCells;
- (void)refreshItemAtIndexPath:(id)a0;
- (void)refreshItemsAtIndexPaths:(id)a0;
- (void)removeBestThumbnailCellOperation:(id)a0;
- (void)removeBestThumbnailPrefetchOperation:(id)a0;
- (void)removeLowThumbnailCellOperation:(id)a0;
- (void)removeLowThumbnailPrefetchOperation:(id)a0;
- (void)removeMainQueueThumbnailOperation:(id)a0;
- (void)removeMainThreadRunLoopBlockWithToken:(id)a0 forCellUUID:(id)a1;
- (void)rescheduleOperations;
- (void)resetOverdraw;
- (void)scrollToBeginning:(BOOL)a0;
- (void)scrollToEnd:(BOOL)a0;
- (id)scrollingDebugInformation;
- (void)selectItemsAtIndexPaths:(id)a0 animated:(BOOL)a1;
- (void)selectItemsInSection:(long long)a0 animated:(BOOL)a1;
- (void)setConcurrencyEnabled:(BOOL)a0;
- (void)setMediaViewLayout:(id)a0 animated:(BOOL)a1 completion:(id /* block */)a2;
- (void)setModalSelectionMode:(BOOL)a0;
- (void)setMotionBlurRadius:(double)a0 animated:(BOOL)a1;
- (BOOL)shouldFadeBestThumbnailsForCell:(id)a0;
- (BOOL)shouldUseNearestInterpolationForBestThumbnail;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })thumbnailFrameForItemAtIndexPath:(id)a0;
- (void)updateAllContent;
- (void)updateAllVisibleContent;
- (void)updateAllVisibleToBest;
- (void)updateContentCells;
- (void)updateContentCellsToBest;
- (void)updateItemAtIndexPath:(id)a0;
- (void)updateItemsAtIndexPaths:(id)a0;
- (void)updateMediaContentToBest;
- (void)updateMemoryCaches;
- (void)updateMemoryCaches:(unsigned long long)a0;
- (void)updateSectionAtIndexPath:(id)a0 ofKind:(id)a1;
- (void)updateSectionsAtIndexPaths:(id)a0 ofKind:(id)a1;
- (void)updateVisibleCellsToBest;
- (void)viewCleanup;
- (void)viewPrepare;
- (id)visibleMediaItemIndexPaths;
- (id)visibleMediaItemIndexPathsWithOverdraw;
- (id)visibleMediaItems;
- (void)waitUntilVisibleContentIsPrepared:(double)a0 includingBest:(BOOL)a1 completion:(id /* block */)a2;
- (void)willBeginScrollingContent;

@end

@class NSMutableDictionary, NSMapTable, NSPredicate, EFLocked, EFLazyCache, NSObject, NSDictionary, EMMailboxScope, NSString, NSSet, EFFuture, EMCollectionItemIDStateCapturer, EMThreadScope, EMObjectID, EMMessageRepository;
@protocol OS_os_log, EFScheduler, OS_dispatch_queue;

@interface EMMessageList : EMQueryingCollection <EFContentProtectionObserver, EFLoggable, EMCollectionChangeObserver, EMCollectionItemIDStateCapturerDelegate, EMMessageListQueryResultsObserver, EMMessageList, NSCopying> {
    NSMutableDictionary *_expandedThreads;
    NSMapTable *_messageListItemsForRetry;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _expandedThreadsLock;
}

@property (class, readonly) NSObject<OS_os_log> *log;

@property (readonly, nonatomic) EMMessageRepository *repository;
@property (readonly, nonatomic) EMMailboxScope *mailboxScope;
@property (readonly, nonatomic) EMThreadScope *threadScope;
@property (readonly, nonatomic) EFLazyCache *cache;
@property (readonly, nonatomic) id<EFScheduler> observerScheduler;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *contentProtectionQueue;
@property (retain, nonatomic) EMMessageList *unfilteredMessageList;
@property (retain, nonatomic) NSSet *recentlyCollapsedItemIDs;
@property (copy, nonatomic) NSPredicate *filterPredicate;
@property (readonly, nonatomic) EMCollectionItemIDStateCapturer *stateCapturer;
@property (readonly, nonatomic) EFLocked *itemIDSections;
@property (copy, nonatomic) NSDictionary *topHitsSnippetHintsByGlobalMessageID;
@property (readonly, nonatomic) BOOL hasSectionPredicates;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) EMObjectID *objectID;
@property (readonly, nonatomic) BOOL isThreaded;
@property (readonly, copy) NSSet *expandedThreadItemIDs;
@property (readonly, nonatomic) EFFuture *allItemIDs;
@property (readonly, copy, nonatomic) NSString *ef_publicDescription;
@property (readonly, copy, nonatomic) NSString *ef_shortPublicDescription;

+ (id)groupedCommerceSenderMessageListForMailboxes:(id)a0 withRepository:(id)a1 grouping:(long long)a2 sectionPredicates:(id)a3 countOfItemsToPrecache:(unsigned long long)a4;
+ (id)groupedCommerceSenderMessageListForMailboxes:(id)a0 withRepository:(id)a1 grouping:(long long)a2 sectionPredicates:(id)a3 countOfItemsToPrecache:(unsigned long long)a4 transformPredicate:(id /* block */)a5;
+ (id)simpleMessageListForMailboxes:(id)a0 withRepository:(id)a1 additionalQueryOptions:(unsigned long long)a2 countOfItemsToPrecache:(unsigned long long)a3 shouldUpdateDisplayDate:(BOOL)a4 sortDescriptors:(id)a5 sectionPredicates:(id)a6 transformPredicate:(id /* block */)a7;
+ (id)simpleMessageListForMailboxes:(id)a0 withRepository:(id)a1 additionalQueryOptions:(unsigned long long)a2 shouldUpdateDisplayDate:(BOOL)a3;
+ (id)threadedMessageListForMailboxes:(id)a0 withRepository:(id)a1 additionalQueryOptions:(unsigned long long)a2 countOfItemsToPrecache:(unsigned long long)a3 shouldUpdateDisplayDate:(BOOL)a4 sortDescriptors:(id)a5 sectionPredicates:(id)a6 transformPredicate:(id /* block */)a7;
+ (id)threadedMessageListForMailboxes:(id)a0 withRepository:(id)a1 additionalQueryOptions:(unsigned long long)a2 shouldUpdateDisplayDate:(BOOL)a3;

- (void)stopObserving:(id)a0;
- (void)setRepository:(id)a0;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)contentProtectionStateChanged:(long long)a0 previousState:(long long)a1;
- (id)labelForStateCapture;
- (void).cxx_destruct;
- (id)itemIDsForStateCaptureWithErrorString:(id *)a0;
- (id)_expandedObjectIDsForObjectIDs:(id)a0;
- (void)collection:(id)a0 addedItemIDs:(id)a1 before:(id)a2;
- (void)collectionDidFinishInitialLoad:(id)a0;
- (void)expandThreadsFromThreadItemIDs:(id)a0;
- (void)insertItemIDs:(id)a0 before:(id)a1 extraInfo:(id)a2;
- (void)collapseThread:(id)a0;
- (void)collection:(id)a0 movedItemIDs:(id)a1 before:(id)a2;
- (void)_addPrecachedItemsFromExtraInfo:(id)a0;
- (id)_adjustedItemIDToInsertAfterForExistingItemID:(id)a0 sectionIndex:(unsigned long long)a1;
- (id)_adjustedItemIDToInsertBeforeForExistingItemID:(id)a0 sectionIndex:(unsigned long long)a1;
- (void)_attemptToFinishRetryingPromisesByItemID:(id)a0;
- (id)_availableMessageListItemsForItemIDs:(id)a0;
- (void)_commonInitWithRepository:(id)a0;
- (id)_debugDescriptionIncludeQuery:(BOOL)a0;
- (id)_extraInfoForThread:(id)a0 addedItemIDs:(id)a1;
- (id)_itemIDsForItemIDs:(id)a0 changeObserver:(id)a1 extraInfo:(id)a2 outObserverSectionIndex:(unsigned long long *)a3;
- (id)_nextThreadItemIDAfterThreadItemID:(id)a0;
- (id)_sectionIdentierForItemID:(id)a0;
- (id)_sectionIdentifierForIndex:(unsigned long long)a0;
- (unsigned long long)_sectionIndexForIdentifier:(id)a0;
- (unsigned long long)_sectionIndexForItemID:(id)a0;
- (id)_sectionPredicates;
- (id)_sectionedObjectIDsFromExtraInfo:(id)a0;
- (id)_snippetHintsByObjectIDFromExtraInfo:(id)a0;
- (BOOL)_threadIsExpanded:(id)a0;
- (BOOL)_threadIsExpandedForItemID:(id)a0;
- (id)_unreadItemIDsFromExtraInfo:(id)a0;
- (void)_updateSectionsWithItemIDs:(id)a0 extraInfo:(id)a1;
- (BOOL)anyExpandedThreadContainsItemID:(id)a0;
- (void)clearRecentlyCollapsedThread;
- (void)collection:(id)a0 addedItemIDs:(id)a1 after:(id)a2;
- (void)collection:(id)a0 changedItemIDs:(id)a1;
- (void)collection:(id)a0 changedItemIDs:(id)a1 itemIDsWithCountChanges:(id)a2 itemIDsWithBrandIndicatorLocationChanges:(id)a3;
- (void)collection:(id)a0 deletedItemIDs:(id)a1;
- (void)collection:(id)a0 movedItemIDs:(id)a1 after:(id)a2;
- (void)collection:(id)a0 replacedExistingItemID:(id)a1 withNewItemID:(id)a2;
- (void)enumerateObserversWithLastBlock:(id /* block */)a0;
- (void)expandThread:(id)a0;
- (id)filteredMessageListWithPredicate:(id)a0 userFiltered:(BOOL)a1;
- (void)finishRecovery;
- (id)initWithMailboxes:(id)a0 repository:(id)a1 sortDescriptors:(id)a2 sectionPredicates:(id)a3 transformPredicate:(id /* block */)a4 targetClass:(Class)a5 additionalQueryOptions:(unsigned long long)a6 countOfItemsToPrecache:(unsigned long long)a7 shouldUpdateDisplayDate:(BOOL)a8 labelPrefix:(id)a9;
- (id)initWithMessageList:(id)a0;
- (id)initWithObjectID:(id)a0 query:(id)a1 repository:(id)a2;
- (id)initWithQuery:(id)a0 repository:(id)a1;
- (void)insertItemIDs:(id)a0 after:(id)a1 extraInfo:(id)a2;
- (void)invalidateCacheForItemIDs:(id)a0;
- (id)itemIDForObjectID:(id)a0;
- (id)itemIDOfFirstMessageListItemMatchingPredicate:(id)a0;
- (id)itemIDOfMessageListItemWithDisplayMessage:(id)a0;
- (id)messageListItemForItemID:(id)a0;
- (id)messageListItemForItemID:(id)a0 ifAvailable:(BOOL)a1;
- (id)messageListItemsForItemIDs:(id)a0;
- (id)messageListItemsForItemIDs:(id)a0 ifAvailable:(BOOL)a1;
- (void)notifyChangeObserver:(id)a0 stockedItemIDs:(id)a1;
- (void)notifyChangeObserversAboutAddedItemIDs:(id)a0 after:(id)a1 extraInfo:(id)a2;
- (void)notifyChangeObserversAboutAddedItemIDs:(id)a0 before:(id)a1 extraInfo:(id)a2;
- (void)notifyChangeObserversAboutChangedItemIDs:(id)a0 extraInfo:(id)a1;
- (void)notifyChangeObserversAboutMovedItemIDs:(id)a0 after:(id)a1 extraInfo:(id)a2;
- (void)notifyChangeObserversAboutMovedItemIDs:(id)a0 before:(id)a1 extraInfo:(id)a2;
- (BOOL)objectIDBelongsToCollection:(id)a0;
- (id)objectIDForItemID:(id)a0;
- (void)queryMatchedChangedObjectIDs:(id)a0 extraInfo:(id)a1;
- (void)queryMatchedMovedObjectIDs:(id)a0 after:(id)a1 extraInfo:(id)a2;
- (void)queryMatchedMovedObjectIDs:(id)a0 before:(id)a1 extraInfo:(id)a2;
- (void)queryMatchedOldestItemsUpdatedForMailboxesObjectIDs:(id)a0;
- (BOOL)recentlyCollapsedThreadContainsItemID:(id)a0;
- (id)removeItemIDs:(id)a0;

@end

@class NSMutableDictionary, MRLayerClock, NSDictionary, MRAudioPlayer, MCPlug, MCPlugHaven, NSMutableArray, MCTransitionTrigger, NSString, MRRenderer, MCPlugParallel, MCPlugSerial;

@interface MRLayer : NSObject <MRLoadable, MRRenderable> {
    MRLayerClock *mClock;
    struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12[16]; float x13[16]; float x14[16]; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; } *mRenderingState;
    NSMutableArray *mLayerCommandQueue;
    MRRenderer *mRenderer;
    MRAudioPlayer *mAudioPlayer;
    BOOL mIsPrecomputing;
    BOOL mIsReadonly;
    BOOL mDoAudio;
    BOOL mNeedsRendering;
    BOOL mNeedsToResyncClockToPlug;
    BOOL mNeedsToUpdateInitialState;
    BOOL mNeedsToRequestRebuildAudio;
    BOOL mNeedsToRequestRebuildVolume;
    BOOL mLayerCommandQueueNeedsAttention;
}

@property (readonly, nonatomic) BOOL _isNative3D;
@property (readonly) MRLayerClock *clock;
@property (readonly) struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12[16]; float x13[16]; float x14[16]; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; } *renderingState;
@property (readonly) NSMutableDictionary *persistentState;
@property (readonly) NSMutableDictionary *animationTriggers;
@property (readonly) NSMutableDictionary *motions;
@property (retain) id parentHelper;
@property (readonly, nonatomic) BOOL supportsDynamicExpansion;
@property (copy, nonatomic) NSString *idInSupercontainer;
@property (readonly, nonatomic) unsigned long long index;
@property (retain) MCTransitionTrigger *nextTransition;
@property (retain) MCTransitionTrigger *previousTransition;
@property (nonatomic) double opacity;
@property (nonatomic) BOOL isTriggered;
@property (readonly) MRLayer *superlayer;
@property (readonly) MCPlug *plug;
@property (readonly) MCPlugSerial *plugAsSerial;
@property (readonly) MCPlugParallel *plugAsParallel;
@property (readonly) MCPlugHaven *plugAsHaven;
@property (readonly) NSString *uuid;
@property (readonly) NSDictionary *parameters;
@property (nonatomic) struct CGSize { double width; double height; } pixelSize;
@property (nonatomic) double timeIn;
@property (nonatomic) double duration;
@property (readonly, nonatomic) BOOL isPreactivated;
@property (readonly, nonatomic) BOOL isActivated;
@property (nonatomic) BOOL isSelected;
@property (nonatomic) BOOL isDimmed;
@property (readonly, nonatomic) double timeStamp;
@property (readonly, nonatomic) BOOL isScheduledForDestruction;
@property (readonly, nonatomic) BOOL hasAudio;
@property (nonatomic) BOOL needsToSynchronizeTime;
@property (nonatomic) BOOL needsToUpdateGeometry;
@property (nonatomic) long long zIndex;
@property (retain, nonatomic) NSString *filterID;
@property (nonatomic) double phaseInDuration;
@property (nonatomic) double phaseOutDuration;
@property (readonly) BOOL isAdhocLayer;
@property (readonly, nonatomic) BOOL isNative3D;
@property (readonly, nonatomic) BOOL isOpaque;
@property (readonly, nonatomic) BOOL isAlphaFriendly;
@property (readonly, nonatomic) BOOL isInfinite;

+ (id)layerWithPlug:(id)a0 andParameters:(id)a1 inSuperlayer:(id)a2;

- (void)cancelLoading;
- (void)cleanup;
- (id)initWithParameters:(id)a0;
- (void)unload;
- (void)dealloc;
- (void)_applyState:(id)a0;
- (id)_currentState;
- (id)actions;
- (void)deactivate;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)activate;
- (void)updateGeometry;
- (double)_serial_gotoPreviousWithObject:(id)a0;
- (void)synchronizeTime;
- (void)_setNeedsToRequestRebuildAudio:(BOOL)a0;
- (BOOL)isFlatAndSquare;
- (id)__retainedByUserRenderedImageAtTime:(double)a0 inContext:(id)a1 withArguments:(id)a2;
- (id)_dumpLayerWithOptions:(unsigned long long)a0;
- (void)_observePlug;
- (void)_observePlugOnPreactivate;
- (void)_queueLayerCommand:(int)a0 object:(id)a1;
- (void)_rebuildAudio;
- (void)_renderAtTime:(double)a0 inContext:(id)a1 withArguments:(id)a2;
- (id)_retainedByUserRenderedImageAtTime:(double)a0 inContext:(id)a1 withArguments:(id)a2;
- (void)_sendAction:(id)a0 withStates:(id)a1 async:(BOOL)a2 yesterday:(BOOL)a3;
- (double)_serial_gotoNextWithObject:(id)a0;
- (void)_setPlug:(id)a0 andSuperlayer:(id)a1;
- (void)_setScissorRectOnContext:(id)a0 saveTo:(int *)a1;
- (BOOL)_setStateValue:(id)a0 forKey:(id)a1;
- (void)_unobservePlug;
- (void)_unobservePlugOnDepreactivate;
- (void)_updateStateWithContext:(id)a0;
- (void)animateOpacityTo:(double)a0 withDuration:(double)a1;
- (void)beginMorphingToAspectRatio:(double)a0 withDuration:(double)a1;
- (struct CGPoint { double x0; double x1; })convertGlobalPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertLocalPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)currentSlideInfoForElement:(id)a0;
- (id)currentSlideInfos;
- (void)depreactivate:(BOOL)a0;
- (void)didFocusOnNextSlideWithState:(id)a0;
- (void)didFocusOnPreviousSlideWithState:(id)a0;
- (double)doActionTrigger:(id)a0;
- (double)doAnimationTrigger:(id)a0;
- (double)doGenericAction:(id)a0;
- (double)doMotionTrigger:(id)a0;
- (double)doStateOperation:(id)a0;
- (void)endMorphing;
- (BOOL)enterSlideFocusModeWithState:(id)a0;
- (void)exitSlideFocusModeWithState:(id)a0;
- (void)getLazyDuration:(double *)a0 lazyFactor:(double *)a1 animationDuration:(double *)a2 fromInterestingTime:(double)a3;
- (BOOL)getStartTime:(double *)a0 andDuration:(double *)a1 forMovingToElementID:(id)a2 backwards:(BOOL)a3;
- (BOOL)hasMoreSlidesFromTime:(double)a0 backwards:(BOOL)a1 startTime:(double *)a2 duration:(double *)a3;
- (BOOL)hasSlides;
- (BOOL)hasSomethingToRender;
- (id)initWithPlug:(id)a0 andParameters:(id)a1 inSuperlayer:(id)a2;
- (double)interestingTimeForElement:(id)a0;
- (double)interestingTimeForTime:(double)a0;
- (BOOL)isInInteractiveMode;
- (BOOL)isLoadedForTime:(double)a0;
- (void)loadForTime:(double)a0 inContext:(id)a1 withArguments:(id)a2 now:(BOOL)a3;
- (id)patchworkAtTime:(double)a0 inContext:(id)a1 withArguments:(id)a2;
- (void)preactivate;
- (BOOL)prerenderForTime:(double)a0 inContext:(id)a1 withArguments:(id)a2;
- (void)renderAtTime:(double)a0 inContext:(id)a1 withArguments:(id)a2;
- (void)resumeOrPause:(BOOL)a0;
- (id)retainedByUserRenderedImageAtTime:(double)a0 inContext:(id)a1 withArguments:(id)a2;
- (void)scheduleForDestruction;
- (void)setIsInInteractiveMode:(BOOL)a0;
- (void)setNeedsUpdateForPluggerOfSublayer:(id)a0;
- (BOOL)shouldBeActivatedAtTime:(double)a0;
- (BOOL)shouldBePreactivatedAtTime:(double)a0;
- (void)stampTime;
- (BOOL)willFocusOnNextSlideWithState:(id)a0 animate:(BOOL)a1;
- (BOOL)willFocusOnPreviousSlideWithState:(id)a0 animate:(BOOL)a1;

@end

@class NSObject, MPFrame, NSString, MPLayerGroup, NSMutableDictionary, NSMutableArray, MCSlide;
@protocol MPEffectSupport;

@interface MPSlide : NSObject <NSSecureCoding, NSCopying, MPFilterSupport, MPAnimationSupport> {
    MPFrame *_frame;
    NSMutableDictionary *_attributes;
    NSString *_path;
    MPLayerGroup *_layerGroup;
    NSMutableArray *_filters;
    NSMutableDictionary *_animationPaths;
    MCSlide *_slide;
    NSObject<MPEffectSupport> *_parent;
    double _startTime;
    double _duration;
    double _audioFadeInDuration;
    double _audioFadeOutDuration;
    double _audioDuckInDuration;
    double _audioDuckOutDuration;
    double _audioDuckLevel;
    double _scale;
    double _rotation;
    struct CGPoint { double x; double y; } _center;
    double _audioVolume;
    NSString *_sizingMode;
    unsigned long long _mediaType;
    BOOL _isSecondary;
    BOOL _mirrorToDuplicatePaths;
    double _cachedShowTime;
    double _cachedShowDuration;
    struct CGSize { double width; double height; } _cachedSize;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (retain, nonatomic) MPFrame *frame;
@property (copy, nonatomic) NSString *path;
@property (copy, nonatomic) NSString *absolutePath;
@property (retain, nonatomic) MPLayerGroup *layerGroup;
@property (nonatomic) double duration;
@property (nonatomic) double startTime;
@property (nonatomic) double audioVolume;
@property (nonatomic) double audioFadeInDuration;
@property (nonatomic) double audioFadeOutDuration;
@property (nonatomic) double audioDuckInDuration;
@property (nonatomic) double audioDuckOutDuration;
@property (nonatomic) double audioDuckLevel;
@property (copy, nonatomic) NSString *sizingMode;
@property (nonatomic) struct CGPoint { double x0; double x1; } center;
@property (nonatomic) double scale;
@property (nonatomic) double rotation;

+ (id)slide;
+ (id)slideWithPath:(id)a0;

- (id)initWithPath:(id)a0;
- (void)dump;
- (id)action;
- (void)setParent:(id)a0;
- (long long)index;
- (void)cleanup;
- (id)filters;
- (void)setMediaType:(unsigned long long)a0;
- (id)parent;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)removeAllFilters;
- (void)encodeWithCoder:(id)a0;
- (double)aspectRatio;
- (id)init;
- (id)description;
- (id)initWithCoder:(id)a0;
- (void)addFilter:(id)a0;
- (void)addFilters:(id)a0;
- (id)slide;
- (id)objectSpecifier;
- (double)maxDuration;
- (void)setIsSecondary:(BOOL)a0;
- (BOOL)isSecondary;
- (double)originalAspectRatio;
- (BOOL)hasMovie;
- (id)parentDocument;
- (BOOL)canZoom;
- (void)copyLayerGroup:(id)a0;
- (BOOL)determineShowTime:(double *)a0 showDuration:(double *)a1;
- (void)moveFiltersFromIndices:(id)a0 toIndex:(long long)a1;
- (double)showDisplayTime;
- (id)animationPathForKey:(id)a0;
- (id)animationPaths;
- (void)copyAnimationPaths:(id)a0;
- (void)copyFilters:(id)a0;
- (void)copyFrame:(id)a0;
- (void)copyVars:(id)a0;
- (long long)countOfFilter;
- (void)duplicateAnimationPaths;
- (id)fullDebugLog;
- (BOOL)hasAnimationPathForKey:(id)a0;
- (id)initWithLayerGroup:(id)a0;
- (void)insertFilters:(id)a0 atIndex:(long long)a1;
- (void)insertObject:(id)a0 inFilterAtIndex:(long long)a1;
- (BOOL)isPanoramaInDocument:(id)a0;
- (id)keyframedAnimationPathForKey:(id)a0;
- (long long)liveIndex;
- (id)nearestLayer;
- (BOOL)needsStyleUpdateOnSlideChange;
- (BOOL)needsTimingUpdateOnSlideChange;
- (id)objectInFilterAtIndex:(long long)a0;
- (id)parentEffect;
- (id)parentSubtitleEffect;
- (void)removeAnimationPathForKey:(id)a0;
- (void)removeFiltersAtIndices:(id)a0;
- (void)removeObjectFromFilterAtIndex:(long long)a0;
- (void)replaceObjectInFilterAtIndex:(long long)a0 withObject:(id)a1;
- (void)resetCachedTimes;
- (id)scriptingAnimations;
- (id)scriptingFrame;
- (void)setAnimationPath:(id)a0 forKey:(id)a1;
- (void)setKeyframedAnimationPath:(id)a0 forKey:(id)a1;
- (void)setMirrorToDuplicatePaths:(BOOL)a0;
- (void)setScriptingAnimations:(id)a0;
- (void)setScriptingFrame:(id)a0;
- (void)setSlide:(id)a0;
- (void)setUserInfoAttribute:(id)a0 forKey:(id)a1;
- (double)showDisplayStartTime;
- (double)showDuration;
- (double)showTime;
- (id)userInfoAttributeForKey:(id)a0;

@end

@interface CTBChatBotRenderInformationWrapper : NSObject

@property (readonly, nonatomic) struct optional<ctb::chatbot::RenderInformation> { union { char __null_state_; struct RenderInformation { struct BotInformation { struct PCC { struct optional<ctb::chatbot::OrgDetails> { union { char __null_state_; struct OrgDetails { struct optional<ctb::chatbot::CommunicationAddress> { union { char __null_state_; struct CommunicationAddress { struct TelephoneInformation { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } fLabel; struct TelephoneNumber { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } fNumber; } fTelNumber; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } fTelephoneType; } fTelInformation; struct URIEntryList { struct vector<ctb::chatbot::URIEntry, std::allocator<ctb::chatbot::URIEntry>> { struct URIEntry *__begin_; struct URIEntry *__end_; struct URIEntry *__cap_; } fList; } fUriList; } __val_; } ; BOOL __engaged_; } fCommunicationAddress; struct optional<ctb::chatbot::MediaList> { union { char __null_state_; struct MediaList { struct vector<ctb::chatbot::MediaEntry, std::allocator<ctb::chatbot::MediaEntry>> { struct MediaEntry *__begin_; struct MediaEntry *__end_; struct MediaEntry *__cap_; } fList; } __val_; } ; BOOL __engaged_; } fMediaList; struct optional<ctb::chatbot::OrgName> { union { char __null_state_; struct OrgName { struct vector<ctb::chatbot::OrgNameEntry, std::allocator<ctb::chatbot::OrgNameEntry>> { struct OrgNameEntry *__begin_; struct OrgNameEntry *__end_; struct OrgNameEntry *__cap_; } fList; } __val_; } ; BOOL __engaged_; } fOrgName; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fOrgDescription; struct optional<ctb::chatbot::CategoryList> { union { char __null_state_; struct CategoryList { struct vector<std::string, std::allocator<std::string>> { void *__begin_; void *__end_; void *__cap_; } fCategoryList; } __val_; } ; BOOL __engaged_; } fCategoryList; struct optional<ctb::chatbot::WebResources> { union { char __null_state_; struct WebResources { struct vector<ctb::chatbot::WebEntry, std::allocator<ctb::chatbot::WebEntry>> { struct WebEntry *__begin_; struct WebEntry *__end_; struct WebEntry *__cap_; } fList; } __val_; } ; BOOL __engaged_; } fWebResources; } __val_; } ; BOOL __engaged_; } fOrgDetails; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fPccType; } fPcc; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fVersion; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fProvider; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fEmail; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fColor; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fBackgroundImageUrl; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fWebsite; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fTcPageUrl; struct optional<ctb::chatbot::AddressEntryList> { union { char __null_state_; struct AddressEntryList { struct vector<ctb::chatbot::AddressEntry, std::allocator<ctb::chatbot::AddressEntry>> { struct AddressEntry *__begin_; struct AddressEntry *__end_; struct AddressEntry *__cap_; } fList; } __val_; } ; BOOL __engaged_; } fAddresses; } fBotInfo; struct optional<ctb::chatbot::MenuItem> { union { char __null_state_; struct MenuItem { struct vector<ctb::chatbot::MenuL0Content, std::allocator<ctb::chatbot::MenuL0Content>> { struct MenuL0Content *__begin_; struct MenuL0Content *__end_; struct MenuL0Content *__cap_; } fList; } __val_; } ; BOOL __engaged_; } fPersistentMenu; struct VerificationDetails { BOOL fVerified; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } fVerifiedBy; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } fExpires; } fVerificationDetails; struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } fGenericCSSTemplateUrl; } __val_; } ; BOOL __engaged_; } wrapped;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithWrapped:(struct optional<ctb::chatbot::RenderInformation> { union { char x0; struct RenderInformation { struct BotInformation { struct PCC { struct optional<ctb::chatbot::OrgDetails> { union { char x0; struct OrgDetails { struct optional<ctb::chatbot::CommunicationAddress> { union { char x0; struct CommunicationAddress { struct TelephoneInformation { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x0; struct TelephoneNumber { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x0; } x1; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x2; } x0; struct URIEntryList { struct vector<ctb::chatbot::URIEntry, std::allocator<ctb::chatbot::URIEntry>> { struct URIEntry *x0; struct URIEntry *x1; struct URIEntry *x2; } x0; } x1; } x1; } x0; BOOL x1; } x0; struct optional<ctb::chatbot::MediaList> { union { char x0; struct MediaList { struct vector<ctb::chatbot::MediaEntry, std::allocator<ctb::chatbot::MediaEntry>> { struct MediaEntry *x0; struct MediaEntry *x1; struct MediaEntry *x2; } x0; } x1; } x0; BOOL x1; } x1; struct optional<ctb::chatbot::OrgName> { union { char x0; struct OrgName { struct vector<ctb::chatbot::OrgNameEntry, std::allocator<ctb::chatbot::OrgNameEntry>> { struct OrgNameEntry *x0; struct OrgNameEntry *x1; struct OrgNameEntry *x2; } x0; } x1; } x0; BOOL x1; } x2; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x3; struct optional<ctb::chatbot::CategoryList> { union { char x0; struct CategoryList { struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; void *x2; } x0; } x1; } x0; BOOL x1; } x4; struct optional<ctb::chatbot::WebResources> { union { char x0; struct WebResources { struct vector<ctb::chatbot::WebEntry, std::allocator<ctb::chatbot::WebEntry>> { struct WebEntry *x0; struct WebEntry *x1; struct WebEntry *x2; } x0; } x1; } x0; BOOL x1; } x5; } x1; } x0; BOOL x1; } x0; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x1; } x0; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x1; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x2; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x3; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x4; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x5; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x6; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x7; struct optional<ctb::chatbot::AddressEntryList> { union { char x0; struct AddressEntryList { struct vector<ctb::chatbot::AddressEntry, std::allocator<ctb::chatbot::AddressEntry>> { struct AddressEntry *x0; struct AddressEntry *x1; struct AddressEntry *x2; } x0; } x1; } x0; BOOL x1; } x8; } x0; struct optional<ctb::chatbot::MenuItem> { union { char x0; struct MenuItem { struct vector<ctb::chatbot::MenuL0Content, std::allocator<ctb::chatbot::MenuL0Content>> { struct MenuL0Content *x0; struct MenuL0Content *x1; struct MenuL0Content *x2; } x0; } x1; } x0; BOOL x1; } x1; struct VerificationDetails { BOOL x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x2; } x2; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x3; } x1; } x0; BOOL x1; })a0;

@end

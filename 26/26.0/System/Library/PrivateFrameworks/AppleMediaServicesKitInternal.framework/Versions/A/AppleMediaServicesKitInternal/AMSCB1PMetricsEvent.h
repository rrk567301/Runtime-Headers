@interface AMSCB1PMetricsEvent : NSObject <NSCopying> {
    struct optional<AMSCore::IMetricsProvider::Event> { union { char __null_state_; struct Event { void /* function */ **_vptr$Event; struct WeakSession { struct weak_ptr<AMSCore::Session::impl> { struct impl *__ptr_; struct __shared_weak_count *__cntrl_; } mImpl; } mSession; struct AccountIdentity { struct optional<std::string> { union { char __null_state_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } __val_; } ; BOOL __engaged_; } mAltDSID; unsigned long long mDSID; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } mUsername; } mAccountIdentity; struct map<std::string, AMSCore::Any, std::less<void>, std::allocator<std::pair<const std::string, AMSCore::Any>>> { struct __tree<std::__value_type<std::string, AMSCore::Any>, std::__map_value_compare<std::string, std::__value_type<std::string, AMSCore::Any>, std::less<void>>, std::allocator<std::__value_type<std::string, AMSCore::Any>>> { void *__begin_node_; struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __end_node_; unsigned long long __size_; } __tree_; } mProperties; struct { BOOL preventSampling; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char __data_[23]; unsigned char __size_ : 7; unsigned char __is_long_ : 1; } __s; struct __long { char *__data_; unsigned long long __size_; unsigned long __cap_ : 63; unsigned char __is_long_ : 1; } __l; } __rep_; } accountClientIdentifier; struct map<std::string, AMSCore::MetricFormatter::FormatOption, std::less<std::string>, std::allocator<std::pair<const std::string, AMSCore::MetricFormatter::FormatOption>>> { struct __tree<std::__value_type<std::string, AMSCore::MetricFormatter::FormatOption>, std::__map_value_compare<std::string, std::__value_type<std::string, AMSCore::MetricFormatter::FormatOption>, std::less<std::string>>, std::allocator<std::__value_type<std::string, AMSCore::MetricFormatter::FormatOption>>> { void *__begin_node_; struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __end_node_; unsigned long long __size_; } __tree_; } clampSettings; } mClientOnlyProperties; } __val_; } ; BOOL __engaged_; } _event;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)initWithEvent:(struct Event { void /* function */ **x0; struct WeakSession { struct weak_ptr<AMSCore::Session::impl> { struct impl *x0; struct __shared_weak_count *x1; } x0; } x1; struct AccountIdentity { struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; } x0; BOOL x1; } x0; unsigned long long x1; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x2; } x2; struct map<std::string, AMSCore::Any, std::less<void>, std::allocator<std::pair<const std::string, AMSCore::Any>>> { struct __tree<std::__value_type<std::string, AMSCore::Any>, std::__map_value_compare<std::string, std::__value_type<std::string, AMSCore::Any>, std::less<void>>, std::allocator<std::__value_type<std::string, AMSCore::Any>>> { void *x0; struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x1; unsigned long long x2; } x0; } x3; struct { BOOL x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { union __rep { struct __short { char x0[23]; unsigned char x1 : 7; unsigned char x2 : 1; } x0; struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x1; } x0; } x1; struct map<std::string, AMSCore::MetricFormatter::FormatOption, std::less<std::string>, std::allocator<std::pair<const std::string, AMSCore::MetricFormatter::FormatOption>>> { struct __tree<std::__value_type<std::string, AMSCore::MetricFormatter::FormatOption>, std::__map_value_compare<std::string, std::__value_type<std::string, AMSCore::MetricFormatter::FormatOption>, std::less<std::string>>, std::allocator<std::__value_type<std::string, AMSCore::MetricFormatter::FormatOption>>> { void *x0; struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x1; unsigned long long x2; } x0; } x2; } x4; })a0;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithTopic:(const char *)a0 bridge:(id)a1 bundleInfo:(const struct IBundleInfo { void /* function */ **x0; } *)a2;

@end

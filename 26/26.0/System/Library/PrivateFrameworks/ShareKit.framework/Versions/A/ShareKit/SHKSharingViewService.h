@class NSUUID, NSView, NSString, SHKBlockQueue, NSSharingUIExtensionContext, SHKAutoLayoutConstraintPair, NSMutableArray, NSWindow, NSImageView;

@interface SHKSharingViewService : NSServiceViewController <SHKClientWindowSyncDelegate, SHKSharingViewServiceProtocol> {
    BOOL _draggable;
}

@property (retain) NSView *containerView;
@property (retain) NSView *backgroundView;
@property (retain) NSWindow *window;
@property (retain) NSUUID *uuid;
@property (weak) NSSharingUIExtensionContext *extensionContext;
@property struct CGPoint { double x; double y; } originOffset;
@property unsigned long long serviceMask;
@property BOOL animatesLikeMarkup;
@property BOOL animateMarkupWithoutImageCopy;
@property BOOL disableDragging;
@property BOOL serviceUsesAutoLayout;
@property BOOL shouldDimSourceWindow;
@property (retain) NSString *sourceWindowFrameString;
@property (retain) NSString *sourceWindowScreenVisibleFrameString;
@property (retain) NSString *sourceWindowContentRectString;
@property (retain) NSImageView *itemImageView;
@property (retain) NSView *itemBorderView;
@property (retain) NSMutableArray *queuedSharingAnimations;
@property (copy) id /* block */ closingFinishedBlock;
@property (retain) SHKBlockQueue *animationBlockQueue;
@property (retain) SHKBlockQueue *completionBlockQueue;
@property (retain) SHKAutoLayoutConstraintPair *sameCenterConstraints;
@property (retain) SHKAutoLayoutConstraintPair *fixedDimensionsContainerConstraints;
@property (retain) SHKAutoLayoutConstraintPair *fixedDimensionsBackgroundConstraints;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)exportedInterface;
- (id)exportedObject;
- (id)viewController;
- (void)loadView;
- (void)setup;
- (void)invalidate;
- (void).cxx_destruct;
- (void)preferredContentSizeDidChangeForViewController:(id)a0;
- (id)remoteViewControllerInterface;
- (BOOL)remoteViewSizeChanged:(struct CGSize { double x0; double x1; })a0 transaction:(id)a1;
- (void)setDraggable:(BOOL)a0;
- (BOOL)draggable;
- (void)proceedWithInstantTransitionOut;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bumpedRectFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 oldContainerFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 newContainerFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)setViewOptions:(id)a0;
- (id)_effectiveSourceItemView;
- (void)_setServiceWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 animation:(id /* block */)a1 completion:(id /* block */)a2;
- (void)_setServiceWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withClientWindowSync:(BOOL)a1 animation:(id /* block */)a2 completion:(id /* block */)a3;
- (void)addFirstImageSubviewAnimationsToQueuedAnimationsForImageViews:(id)a0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })affineTransformToHideRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 behindRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)animateClosingOfEditorServiceWithSuccess:(BOOL)a0 finishedBlock:(id /* block */)a1;
- (void)animateClosingWithSuccess:(BOOL)a0 finishedBlock:(id /* block */)a1;
- (id)animatingItemsAndSetHasAtLeastOneFinalImage:(BOOL *)a0;
- (void)changeViewControllerViewToSize:(struct CGSize { double x0; double x1; })a0 transactionUUID:(id)a1;
- (BOOL)clientHasSourceWindow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })finalImageFrameForSharingItemProvider:(id)a0 imageContentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 transitionFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (id)fixedDimensionsConstraintsForView:(id)a0;
- (id)fixedDimensionsConstraintsForView:(id)a0 size:(struct CGSize { double x0; double x1; })a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })initialWindowFrameForSourceFrameForWindow:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)moveClientWindowWithEvent:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })neededRemoteViewFrame;
- (void)performQueuedAnimationActionsWithCompletionBlock:(id /* block */)a0;
- (void)performQueuedCompletionActions;
- (void)positionServiceViewInRemoteViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)prepareForEditorServiceIntroduction;
- (void)prepareForShareSheetIntroduction;
- (void)proceedWithInstantTransitionIn;
- (void)proceedWithMarkupTransitionIn;
- (void)proceedWithMarkupTransitionOut;
- (void)proceedWithSharingTransitionIn;
- (void)proceedWithSharingTransitionOutWithSuccess:(BOOL)a0 duration:(double)a1;
- (void)remoteViewLayerContentsWithCompletionHandler:(id /* block */)a0;
- (void)requestResizeToNeededRemoteViewFrameThenDo:(id /* block */)a0;
- (id)sameCenterConstraintsForView:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })serviceViewScreenFrame;
- (void)serviceWindowDidShow;
- (void)setupEditorServiceWithView:(id)a0;
- (void)setupWithSourceWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })singleItemSourceFrameForEditorService;
- (id)singleItemSourceImage;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sourceFrameForViewControllerView:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sourceWindowContentRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sourceWindowFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sourceWindowScreenVisibleFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })symmetricalRectFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 aroundPoint:(struct CGPoint { double x0; double x1; })a1;
- (BOOL)viewControllerSupportsAnimation:(id)a0;
- (id)viewControllerView;

@end

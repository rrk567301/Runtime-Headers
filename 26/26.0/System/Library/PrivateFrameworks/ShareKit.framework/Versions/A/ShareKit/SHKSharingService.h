@class NSExtension, SHKHostExtensionContext, SHKShareSheetHEICOptionsModel, NSSharingService, SHKCollaborationContext, NSDictionary, SHKUIServiceLatencyMetric, NSURL, NSSharingServiceDescription, NSImage, NSString, SHKRemoteWindowController, NSRemoteViewController, NSWindow, NSArray, NSUUID;
@protocol PKPlugIn, SHKSharingServiceDelegate;

@interface SHKSharingService : NSObject <SFShareSheetActivity> {
    NSDictionary *_identifierToProvider;
    SHKRemoteWindowController *_remoteWindowController;
    NSRemoteViewController *_remoteViewController;
}

@property (retain) id customDelegate;
@property (retain) id customInternalDelegate;
@property (retain) NSExtension *extension;
@property (retain) SHKHostExtensionContext *extensionContext;
@property (retain) NSSharingServiceDescription *serviceDescription;
@property (retain) NSString *identifier;
@property (copy) NSString *plugInIdentifier;
@property (copy) NSString *title;
@property (retain) NSImage *image;
@property (copy) NSString *iconImageIdentifier;
@property BOOL isSymbolImageIdentifier;
@property (retain) NSImage *alternateImage;
@property (copy) id /* block */ block;
@property (copy, nonatomic) id /* block */ asyncBlock;
@property BOOL shouldDimSourceWindow;
@property BOOL viewBased;
@property (readonly) BOOL isCloudSharingService;
@property (readonly) BOOL isCollaborationOnlyService;
@property (readonly) BOOL isCollaborationSpecificExtension;
@property unsigned long long mask;
@property unsigned int remoteCID;
@property (copy) NSUUID *uuid;
@property (readonly) NSUUID *shareSheetUUID;
@property (retain) NSArray *sharedItems;
@property unsigned long long finalSharedItemsCount;
@property BOOL disableDragging;
@property BOOL sourceWindowProvided;
@property (readonly) BOOL needsCustomPresentingWindow;
@property BOOL allowInactive;
@property (copy, nonatomic) id /* block */ restoreWindowStateBlock;
@property (copy, nonatomic) id /* block */ cancelExtensionKillTimer;
@property (copy, nonatomic) id /* block */ cancelRestoreWindowStateTimer;
@property (copy, nonatomic) id /* block */ cancelPotentialUnregisterTimer;
@property (copy, nonatomic) id /* block */ serviceCompletedHandler;
@property (retain, nonatomic) NSDictionary *sandboxExtensions;
@property (weak) NSWindow *sourceWindow;
@property (readonly) BOOL disableServiceWindowPresentation;
@property (retain) SHKCollaborationContext *collaborationContext;
@property (retain, nonatomic) SHKShareSheetHEICOptionsModel *heicOptions;
@property (retain) SHKUIServiceLatencyMetric *uiServiceLatencyMetric;
@property (readonly) NSSharingService *nsSharingService;
@property (weak, nonatomic) id<SHKSharingServiceDelegate> delegate;
@property (getter=isEnabled) BOOL enabled;
@property (readonly) BOOL isCatalyst;
@property (readonly) NSString *name;
@property (copy, nonatomic) NSDictionary *parameters;
@property (readonly) id<PKPlugIn> plugIn;
@property (readonly, copy) NSURL *plugInURL;
@property (readonly, weak) NSWindow *remoteWindow;
@property (copy) NSString *subtitle;
@property (readonly) long long type;
@property (readonly, copy, nonatomic) NSString *activityType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)addRecentEmailServiceToDefaultsWithSubject:(id)a0 recipients:(id)a1;
+ (id)sharingServiceNamed:(id)a0;
+ (id)sharingServiceNamed:(id)a0 allowInactive:(BOOL)a1;
+ (void)sharingServiceNamed:(id)a0 allowInactive:(BOOL)a1 completion:(id /* block */)a2;
+ (id)sharingServiceWithIdentifier:(id)a0 title:(id)a1 image:(id)a2 alternateImage:(id)a3 type:(long long)a4 handler:(id /* block */)a5;
+ (id)sharingServicesForItems:(id)a0 mask:(unsigned long long)a1;
+ (void)sharingServicesForItems:(id)a0 mask:(unsigned long long)a1 completion:(id /* block */)a2;
+ (void)saveDefaultDisplayOrder:(id)a0 domain:(struct __CFString { } *)a1;
+ (void)sharingServiceNamed:(id)a0 completion:(id /* block */)a1;
+ (void)recursivelyAddServicesFromPlugIns:(id)a0 withCurrentIndex:(unsigned long long)a1 legacyPlugInDict:(id)a2 compatibleWithUserDict:(id)a3 toServices:(id)a4 allowInactive:(BOOL)a5 completion:(id /* block */)a6;
+ (id)_createServiceImageFromSymbolNamed:(id)a0 backgroundColor:(id)a1;
+ (unsigned long long)_newServicesCount;
+ (unsigned long long)_newServicesCountForExtensions:(id)a0 consumeCount:(BOOL)a1 cacheInvalidated:(BOOL)a2;
+ (BOOL)_notifyDidFailToShareItemsForSharingServiceDelegate:(id)a0 sharingService:(id)a1 items:(id)a2 error:(id)a3;
+ (BOOL)_notifyDidShareItemsForSharingServiceDelegate:(id)a0 sharingService:(id)a1 items:(id)a2 completion:(id /* block */)a3;
+ (id)_serviceSymbolImagesCacheKeyForSymbolNamed:(id)a0 backgroundColor:(id)a1;
+ (id)_sortedServicesForServices:(id)a0 displayOrderDictionary:(id)a1;
+ (void)addServiceFromDescription:(id)a0 toServices:(id)a1 withExtension:(id)a2 allowInactive:(BOOL)a3;
+ (void)addServicesForQueries:(id)a0 compatibleWithUserDict:(id)a1 toServices:(id)a2 invokedByPicker:(BOOL)a3 allowInactive:(BOOL)a4 discoveryCacheInvalidated:(BOOL)a5 completion:(id /* block */)a6;
+ (void)addServicesFromPlugIn:(id)a0 legacyPlugInDict:(id)a1 compatibleWithUserDict:(id)a2 toServices:(id)a3 allowInactive:(BOOL)a4;
+ (void)addServicesFromPlugIns:(id)a0 compatibleWithUserDict:(id)a1 toServices:(id)a2;
+ (void)addServicesFromPlugIns:(id)a0 compatibleWithUserDict:(id)a1 toServices:(id)a2 allowInactive:(BOOL)a3;
+ (void)addServicesFromPlugIns:(id)a0 compatibleWithUserDict:(id)a1 toServices:(id)a2 allowInactive:(BOOL)a3 completion:(id /* block */)a4;
+ (id)attributesArrayForSharingAndActionServices;
+ (id)attributesArrayForViewerAndEditorServices;
+ (id)bundleForPlugIn:(id)a0;
+ (id)callingProcessBundleIdentifier;
+ (id)collapsedSharePlaceholderService;
+ (id)descriptionForSharingServiceDict:(id)a0 bundle:(id)a1 attributeStore:(id)a2;
+ (void)ensurePlugInCacheInitialized;
+ (id)filterAndSortSharingServices:(id)a0 withContext:(id)a1;
+ (id)filterOutServicesForCompatibleServices:(id)a0 identifier:(id)a1 attributes:(id)a2;
+ (id)imageForBundlePath:(id)a0;
+ (id)imageForSharingServiceDictionary:(id)a0 bundle:(id)a1;
+ (BOOL)matchingDictionary:(id)a0 isSupportedByServiceIdentifier:(id)a1 requiredIdentifier:(id)a2;
+ (BOOL)overridesForServiceIdentifier:(id)a0 supportsSharingAttachments:(BOOL)a1 body:(BOOL)a2 requiredIdentifier:(id)a3;
+ (void)populateDescription:(id)a0 withAttributeStore:(id)a1 forAppIdentifier:(id)a2;
+ (id)queryExtensionsForContext:(id)a0;
+ (void)recursivelyAddServicesForQueries:(id)a0 withCurrentIndex:(unsigned long long)a1 compatibleWithUserDict:(id)a2 toServices:(id)a3 invokedByPicker:(BOOL)a4 allowInactive:(BOOL)a5 shouldCheckSharingServices:(BOOL)a6 discoveryCacheInvalidated:(BOOL)a7 completion:(id /* block */)a8;
+ (id)reorderdListOfExtensions:(id)a0 getLegacyPlugInDict:(id *)a1;
+ (id)sandboxProofItemsFromItems:(id)a0;
+ (id)serviceDictionaryFromBundle:(id)a0 matchingUserDict:(id)a1;
+ (id)serviceIdentifierWithBundle:(id)a0 serviceDictionary:(id)a1 multiplexed:(BOOL)a2;
+ (BOOL)serviceIsEnabledForSharingServiceDict:(id)a0;
+ (BOOL)sharedItemsAreValid:(id)a0;
+ (id)sharingServiceWithIdentifier:(id)a0 provider:(id)a1 title:(id)a2 image:(id)a3 alternateImage:(id)a4;
+ (id)sharingServiceWithIdentifier:(id)a0 title:(id)a1 image:(id)a2 alternateImage:(id)a3 type:(long long)a4 handler:(id /* block */)a5 asyncHandler:(id /* block */)a6;
+ (id)sharingServiceWithTitle:(id)a0 image:(id)a1 alternateImage:(id)a2 handler:(id /* block */)a3;
+ (id)sharingServicesForContext:(id)a0;
+ (void)sharingServicesForContext:(id)a0 completion:(id /* block */)a1;
+ (id)sharingServicesForFilteredItemsWithContext:(id)a0;
+ (void)sharingServicesForFilteredItemsWithContext:(id)a0 completion:(id /* block */)a1;
+ (void)sharingServicesOnMainQueueForContext:(id)a0 completion:(id /* block */)a1;
+ (id)sharingServicesWithIdentifier:(id)a0 attributes:(id)a1 matchingDictionary:(id)a2 attributeStore:(id)a3;
+ (id)sharingServicesWithIdentifier:(id)a0 attributes:(id)a1 matchingDictionary:(id)a2 attributeStore:(id)a3 allowInactive:(BOOL)a4;
+ (void)sharingServicesWithIdentifier:(id)a0 attributes:(id)a1 matchingDictionary:(id)a2 attributeStore:(id)a3 allowInactive:(BOOL)a4 completion:(id /* block */)a5;
+ (void)sharingServicesWithIdentifier:(id)a0 attributes:(id)a1 matchingDictionary:(id)a2 attributeStore:(id)a3 completion:(id /* block */)a4;
+ (id)sharingServicesWithIdentifier:(id)a0 attributes:(id)a1 matchingDictionary:(id)a2 attributeStore:(id)a3 invokedByPicker:(BOOL)a4;
+ (id)sharingServicesWithIdentifier:(id)a0 attributes:(id)a1 matchingDictionary:(id)a2 attributeStore:(id)a3 invokedByPicker:(BOOL)a4 allowInactive:(BOOL)a5;
+ (void)sharingServicesWithIdentifier:(id)a0 attributes:(id)a1 matchingDictionary:(id)a2 attributeStore:(id)a3 invokedByPicker:(BOOL)a4 allowInactive:(BOOL)a5 completion:(id /* block */)a6;
+ (void)sharingServicesWithIdentifier:(id)a0 attributes:(id)a1 matchingDictionary:(id)a2 attributeStore:(id)a3 invokedByPicker:(BOOL)a4 completion:(id /* block */)a5;
+ (id)sortedServicesForServices:(id)a0 withContext:(id)a1;
+ (id)unwrapPlugIn:(id)a0;
+ (void)updateUserElectionForPlugIn:(id)a0 legacyPlugInDict:(id)a1 completion:(id /* block */)a2;

- (BOOL)isRegistered;
- (void)unregister;
- (void)dealloc;
- (id)bundle;
- (void)_commonInit;
- (long long)compare:(id)a0;
- (id)init;
- (BOOL)isEqual:(id)a0;
- (void).cxx_destruct;
- (void)canPerformWithItems:(id)a0 completion:(id /* block */)a1;
- (BOOL)canPerformWithItems:(id)a0;
- (void)dismissWithCompletion:(id /* block */)a0;
- (void)performWithItems:(id)a0;
- (id)preProcessingJavaScriptURL;
- (void)setDelegate:(id)a0 customDelegate:(id)a1;
- (void)_cleanupService;
- (BOOL)isCustomService;
- (BOOL)hasNarrowLayout;
- (void)_addObjects:(id)a0 toArray:(id)a1;
- (void)_convertImagesIfNeededForItems:(id)a0 completion:(id /* block */)a1;
- (void)_deleteShareIfNecessary;
- (void)_deleteSharingURL:(id)a0;
- (void)_didFinishPerformingCustomServiceWithItems:(id)a0 success:(BOOL)a1 error:(id)a2;
- (id)_fetchExtensionImageAllowingIconServices:(BOOL)a0;
- (void)_plugInDeactivated;
- (void)_runActionBlockWithItems:(id)a0;
- (BOOL)_runActionBlockWithItems:(id)a0 completion:(id /* block */)a1;
- (void)_sourceWindowDidResize:(id)a0;
- (void)_windowWillDoSomethingThatShouldCancelCurrentSharing:(id)a0;
- (void)cancelExtensionKillTimerOnMainQueue;
- (void)cancelRemoteServiceUI;
- (BOOL)debugRunningServices;
- (id /* block */)executeHandler:(id /* block */)a0 onQueue:(id)a1 onTimeoutInSeconds:(float)a2;
- (id /* block */)executeHandler:(id /* block */)a0 onTimeoutInSeconds:(float)a1;
- (BOOL)extensionWatchdogDisabled;
- (void)getAppIDWithCompletion:(id /* block */)a0;
- (void)handleIOSMacExtensionWithExtensionItem:(id)a0;
- (void)handleMacExtensionWithOptions:(id)a0;
- (id)initWithExtension:(id)a0 description:(id)a1;
- (id)initWithIdentifier:(id)a0 title:(id)a1 image:(id)a2 mask:(unsigned long long)a3;
- (void)invalidateRemoteWindowController;
- (void)invalidateRemoteWindowControllerWithCompletionBlock:(id /* block */)a0;
- (BOOL)isMacExtension;
- (BOOL)isMessagesServiceInvokedFromMaps;
- (void)killExtensionIfNoResponseWithTimeout:(float)a0;
- (unsigned long long)launchCount;
- (void)launchExtensionWithExtensionItem:(id)a0 options:(id)a1;
- (id)nsSharingItemFromSHKSharingItem:(id)a0 fromItems:(id)a1 delegate:(id)a2;
- (void)observeAllAncestorWindowForSomethingThatWillCancelSharingWithSourceWindow:(id)a0;
- (void)performCustomServiceWithItems:(id)a0;
- (void)performStandardServiceWithItems:(id)a0;
- (void)performWithItems:(id)a0 completion:(id /* block */)a1;
- (void)registerPotentially;
- (void)registerWithItems:(id)a0;
- (id)replaceDataItemsWithItemProviders:(id)a0;
- (void)requestCompletedWithItems:(id)a0 completion:(id /* block */)a1;
- (void)serviceDoneWithStatus:(unsigned long long)a0 error:(id)a1 parameters:(id)a2 outputItems:(id)a3;
- (void)serviceDoneWithStatus:(unsigned long long)a0 error:(id)a1 parameters:(id)a2 outputItems:(id)a3 completion:(id /* block */)a4;
- (void)setupExtensionBlocks;
- (void)unregisterPotentially;
- (void)unregisterPotentiallyAndRemoveReferenceToCustomDelegate:(BOOL)a0;

@end

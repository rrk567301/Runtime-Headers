@class RTTripClusterRoadTransitionsDataStore, NSDate, RTTripClusterRecencyStore, RTTripClusterWaypointDataStore, RTDefaultsManager, RTTripSegmentManager, RTTripClusterStore, RTTripClusterRouteStore, RTTripClusterRoadTransitionsStore, RTTripClusterProcessor, NSString, RTTripSegment, RTTripClusterProcessorOptions, RTTripClusterScheduleStore;

@interface RTTripClusterManager : RTService <RTPurgable> {
    double _accumulatedDistance;
    double _accumulatedDuration;
    NSDate *_multiModalStartDate;
    NSDate *_multiModalEndDate;
    RTTripSegment *_pendingDrivingTripSegment;
}

@property (retain, nonatomic) RTTripSegmentManager *tripSegmentManager;
@property (retain, nonatomic) RTDefaultsManager *defaultsManager;
@property (retain, nonatomic) RTTripClusterProcessorOptions *options;
@property (retain, nonatomic) RTTripClusterProcessor *tripClusterProcessor;
@property BOOL isTripSegmentClusteringEnabled;
@property (retain, nonatomic) RTTripClusterStore *tripClusterStore;
@property (retain, nonatomic) RTTripClusterRouteStore *tripClusterRouteStore;
@property (retain, nonatomic) RTTripClusterWaypointDataStore *tripClusterWaypointStore;
@property (retain, nonatomic) RTTripClusterRoadTransitionsDataStore *tripClusterRouteRoadTransitionsStore;
@property (retain, nonatomic) RTTripClusterRecencyStore *tripClusterRecencyStore;
@property (retain, nonatomic) RTTripClusterScheduleStore *tripClusterScheduleStore;
@property (retain, nonatomic) RTTripClusterRoadTransitionsStore *tripSegmentRoadTransitionsStore;
@property (readonly, nonatomic) BOOL isClusterLearningInProgress;
@property (readonly, nonatomic) BOOL clustersUnlockedAfterStartUp;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (long long)periodicPurgePolicy;

- (void)performPurgeOfType:(long long)a0 referenceDate:(id)a1 completion:(id /* block */)a2;
- (void)fetchLearnedRoutesWithOptions:(id)a0 handler:(id /* block */)a1;
- (void)setup;
- (void)_setup;
- (void)purgeTripClusterWithClusterID:(id)a0 handler:(id /* block */)a1;
- (void)fetchTripClusterMetadataWithOptions:(id)a0 handler:(id /* block */)a1;
- (void)purgeTripClusterTable:(int)a0 handler:(id /* block */)a1;
- (void).cxx_destruct;
- (BOOL)areTwoPointsTooClose:(id)a0 location2:(id)a1;
- (int)maximumLocationsInALearnedRoute;
- (BOOL)_addTripSegmentToCompoundRoute:(id)a0 outLocationsArray:(id)a1 maxDistanceAllowedBetweenDriveSegments:(double)a2 tripSegmentRoadTransitionsStore:(id)a3 outRoadTransitionArray:(id)a4 compoundTripSegmentID:(id)a5 compoundTripSegmentStartDate:(id)a6 compoundRouteMetric:(id)a7;
- (unsigned long long)_bestRoute:(id)a0 routeDate:(id)a1;
- (unsigned long long)_bestScheduleRoute:(id)a0 routeDate:(id)a1;
- (void)_computeSPIStatisticMetrics:(id)a0 learnedRoutes:(id)a1 error:(id)a2 spiStatisticReasonCode:(long long)a3 fetchRequestTime:(id)a4;
- (id)_createNonDriveRTLearnedRouteTravelMode:(id)a0 totalNumberOfRoutes:(int)a1 sumOfTraversalCountOfAllRoutes:(int)a2;
- (id)_createUnionOfLocations:(id)a0 decimatedLocations:(id)a1;
- (void)_deleteAllTripClusterDataForClusterID:(id)a0;
- (long long)_fetchLearnedRoutesForFetchTypeAny:(id)a0 handler:(id /* block */)a1;
- (long long)_fetchLearnedRoutesWithOptions:(id)a0 handler:(id /* block */)a1;
- (void)_fetchLearnedRoutesWithOptionsMock:(id)a0 handler:(id /* block */)a1;
- (void)_fetchTripClusterMetadataWithOptions:(id)a0 handler:(id /* block */)a1;
- (void)_findNonDriveClusterForCommuteID:(id)a0 tripClusters:(id)a1 beforeDriveCluster:(id *)a2 afterDriveCluster:(id *)a3;
- (void)_findRouteFromCurrentLocation:(id)a0 options:(id)a1 queryStartTime:(id)a2 handler:(id /* block */)a3;
- (id)_getClusterLikelihoods:(id)a0 routeDate:(id)a1;
- (id)_getPurgePolicyOverrideDaysToPersistTripClusterData:(id)a0;
- (id)_getPurgePolicyOverrideDaysToPersistTripClusterDataShort:(id)a0;
- (void)_getRoadDataFromFetchedRoutes:(id)a0 roadData:(id)a1;
- (void)_groupTripSegmentsByCommuteID:(id)a0 tripSegmentByCommuteID:(id)a1;
- (void)_learnClusters;
- (id)_learnedRouteForDriveCluster:(id)a0 tripClusters:(id)a1 routeStartLocation:(id)a2 routeEndLocation:(id)a3 fetchAllRouteLocations:(BOOL)a4 metricsCollector:(id)a5 excludeRouteLocations:(BOOL)a6;
- (id)_learnedRouteForNoDriveCluster:(id)a0 routeStartLocation:(id)a1 routeEndLocation:(id)a2 metricsCollector:(id)a3;
- (void)_markTripSegmentsAsProcessedByClustering:(id)a0;
- (int)_maximumTravelDistanceForSignificantNonDriveCluster:(short)a0;
- (int)_maximumTravelTimeForSignificantNonDriveCluster:(short)a0;
- (int)_minimumTravelDistanceForSignificantNonDriveCluster;
- (int)_minimumTravelTimeForSignificantNonDriveCluster;
- (void)_mockLearnedRouteTravelModeConfiguration:(long long *)a0 driveTravelMode:(long long *)a1 postDriveTravelMode:(long long *)a2;
- (unsigned long long)_mostTravelledRoute:(id)a0;
- (id)_odPairMetricsPerClusterOrder:(id)a0;
- (void)_processAllFetchedRouteClustersForIndexRange:(id)a0 handler:(id /* block */)a1 tripClusters:(id)a2 originLatitude:(double)a3 originLongitude:(double)a4 destLatitude:(double)a5 destLongitude:(double)a6 startIndexIncluded:(unsigned long long)a7 endIndexExcluded:(unsigned long long)a8 queryStartTime:(id)a9 excludeRouteLocations:(BOOL)a10;
- (void)_processAllTripSegmentsGroupedByOD:(id)a0 inCommuteGroups:(id)a1;
- (id)_readMockSPIDataFile;
- (id)_removeEmptyWaypointClusters:(id)a0;
- (void)_routeLocationsForCluster:(id)a0 inRouteLocations:(id)a1 learnedRouteLocations:(id)a2 fetchAllRouteLocations:(BOOL)a3;
- (void)_routeScoreForDate:(id)a0 learnedRouteLastDate:(id)a1 distanceInWeekday:(unsigned long long *)a2 distanceInHour:(unsigned long long *)a3;
- (BOOL)_shouldMockLearnedRoutesSPI;
- (BOOL)_significantNonDriveClusterForFetchSPI:(id)a0;
- (BOOL)_supportsRouteCompoundingWithoutVisitAggregation;
- (void)_topListRoutes:(id)a0 routeDate:(id)a1 handler:(id /* block */)a2;
- (void)_updateSPIMetricReasonCodeAndSubmit:(long long)a0;
- (BOOL)areOriginAndDestinationTooClose:(id)a0;
- (BOOL)areTripSegmentsSpatiallyAligned:(id)a0 withTrip:(id)a1;
- (id)attemptCreatingACompoundRoute:(id)a0 compoundTripSegmentLocations:(id *)a1 numberOfDriveSegments:(unsigned long long)a2 tripSegmentRoadTransitionsStore:(id)a3 compoundTripSegmentRoadTransitions:(id *)a4 driveTripDuration:(double *)a5;
- (void)computeCloudSyncMetric;
- (id)createMockTripWithSequence:(int)a0 sequenceMax:(int)a1 commuteID:(id)a2 originLat:(double)a3 originLon:(double)a4 destLat:(double)a5 destLon:(double)a6 mode:(long long)a7;
- (id)getWaypointsFromOldStore:(id)a0;
- (void)groupTripSegments:(id)a0 inOriginDestPair:(id *)a1;
- (id)initWithTripSegmentManager:(id)a0 tripClusterStore:(id)a1 tripClusterRouteStore:(id)a2 tripClusterRouteRoadTransitionsStore:(id)a3 tripClusterRecencyStore:(id)a4 tripClusterScheduleStore:(id)a5 tripSegmentRoadTransitionsStore:(id)a6 tripClusterWaypointStore:(id)a7 defaultsManager:(id)a8;
- (void)learnClusters;
- (double)maximumInterTripSegmentDistanceAllowedForCompoundRoute;
- (int)minimumTraversalCountForLearnedRoutes;
- (void)outputLearnedRouteSPICallDebuggingData:(id)a0 options:(id)a1 queryStartTime:(id)a2 queryResponseTimeMSec:(double)a3 learnedRoutes:(id)a4 type:(id)a5;
- (void)outputTripSegmentsInDebugLogLine:(id)a0;
- (BOOL)processTripSegments:(id)a0 outLocationsArray:(id *)a1;
- (void)purgeClusterDatabasesPredating:(id)a0 handler:(id /* block */)a1;
- (void)purgeClustersDatabaseWithTripClusterStore:(id)a0 tripClusterRouteStore:(id)a1 tripClusterRoadTransitionStore:(id)a2;
- (void)unlockAllRouteClusters;
- (void)validateAndProcessCommute:(id)a0;

@end

@class NSString;

@interface ULConfigurationStore : ULStore <ULStoreProtocol>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)MOClass;
+ (id)defaultSortProperty;
+ (unsigned int)maxEntriesInTable;

- (struct vector<CLMicroLocationConfigurationTable::Entry, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationConfigurationTable::Entry *, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; } x2; })_fetchConfigurationsByAndPredicates:(id)a0 sortDescriptors:(id)a1 andLimit:(unsigned long long)a2;
- (char)batchTransferRecordsUsingBatchSize:(unsigned long long)a0 andLimit:(unsigned long long)a1 intoTargetStore:(id)a2 withCancelFunc:(struct function<bool ()> { struct __value_func<bool ()> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; })a3;
- (struct vector<CLMicroLocationConfigurationTable::Entry, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationConfigurationTable::Entry *, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; } x2; })fetchAllConfigurationsOfType:(struct optional<const CLMicroLocationProto::ConfigurationType> { union { char x0; int x1; } x0; BOOL x1; })a0 loiGroupId:(const struct uuid { unsigned char x0[16]; } *)a1 withLimit:(unsigned int)a2;
- (struct vector<CLMicroLocationConfigurationTable::Entry, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationConfigurationTable::Entry *, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; } x2; })fetchAllConfigurationsforLoiGroup:(const struct uuid { unsigned char x0[16]; } *)a0 withLimit:(unsigned int)a1;
- (struct vector<CLMicroLocationConfigurationTable::Entry, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationConfigurationTable::Entry *, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; } x2; })fetchAllRecordsWithLimit:(unsigned int)a0;
- (struct vector<CLMicroLocationConfigurationTable::Entry, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationConfigurationTable::Entry *, std::allocator<CLMicroLocationConfigurationTable::Entry>> { struct Entry *x0; } x2; })fetchLatestConfigurationPerTypeAtLoi:(const struct uuid { unsigned char x0[16]; } *)a0 withLimit:(unsigned int)a1;
- (struct optional<CLMicroLocationConfigurationTable::Entry> { union { char x0; struct Entry { struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; struct uuid { unsigned char x0[16]; } x2; int x3; struct Configuration { void /* function */ **x0; double x1; struct WifiHistogram *x2; struct AnchorAppearanceConfiguration *x3; struct AnchorValueStatisticsConfiguration *x4; int x5; int x6; unsigned int x7[1]; } x4; } x1; } x0; BOOL x1; })fetchMostRecentAnchorAppearancesAtLoi:(const struct uuid { unsigned char x0[16]; } *)a0;
- (struct optional<CLMicroLocationConfigurationTable::Entry> { union { char x0; struct Entry { struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; struct uuid { unsigned char x0[16]; } x2; int x3; struct Configuration { void /* function */ **x0; double x1; struct WifiHistogram *x2; struct AnchorAppearanceConfiguration *x3; struct AnchorValueStatisticsConfiguration *x4; int x5; int x6; unsigned int x7[1]; } x4; } x1; } x0; BOOL x1; })fetchMostRecentClusterAnchorValueStatisticsForLOIType:(const void *)a0;
- (struct optional<CLMicroLocationConfigurationTable::Entry> { union { char x0; struct Entry { struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; struct uuid { unsigned char x0[16]; } x2; int x3; struct Configuration { void /* function */ **x0; double x1; struct WifiHistogram *x2; struct AnchorAppearanceConfiguration *x3; struct AnchorValueStatisticsConfiguration *x4; int x5; int x6; unsigned int x7[1]; } x4; } x1; } x0; BOOL x1; })fetchMostRecentClusterAnchorValueStatisticsForModelUUID:(const struct uuid { unsigned char x0[16]; } *)a0;
- (struct optional<CLMicroLocationConfigurationTable::Entry> { union { char x0; struct Entry { struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; struct uuid { unsigned char x0[16]; } x2; int x3; struct Configuration { void /* function */ **x0; double x1; struct WifiHistogram *x2; struct AnchorAppearanceConfiguration *x3; struct AnchorValueStatisticsConfiguration *x4; int x5; int x6; unsigned int x7[1]; } x4; } x1; } x0; BOOL x1; })fetchMostRecentConfiguration:(const int *)a0 atLoiGroupId:(const struct uuid { unsigned char x0[16]; } *)a1 beforeTime:(double)a2;
- (struct optional<CLMicroLocationConfigurationTable::Entry> { union { char x0; struct Entry { struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; struct uuid { unsigned char x0[16]; } x2; int x3; struct Configuration { void /* function */ **x0; double x1; struct WifiHistogram *x2; struct AnchorAppearanceConfiguration *x3; struct AnchorValueStatisticsConfiguration *x4; int x5; int x6; unsigned int x7[1]; } x4; } x1; } x0; BOOL x1; })fetchMostRecentConfiguration:(const int *)a0 atLoiType:(const void *)a1 loiGroupId:(const void *)a2 beforeTime:(struct optional<const double> { union { char x0; double x1; } x0; BOOL x1; })a3;
- (struct optional<CLMicroLocationConfigurationTable::Entry> { union { char x0; struct Entry { struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; struct uuid { unsigned char x0[16]; } x2; int x3; struct Configuration { void /* function */ **x0; double x1; struct WifiHistogram *x2; struct AnchorAppearanceConfiguration *x3; struct AnchorValueStatisticsConfiguration *x4; int x5; int x6; unsigned int x7[1]; } x4; } x1; } x0; BOOL x1; })fetchMostRecentWifiChannelHistogramAtLoi:(const struct uuid { unsigned char x0[16]; } *)a0;
- (char)insertEntries:(const void *)a0;

@end

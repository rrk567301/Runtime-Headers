@class NSString;

@interface ULModelStore : ULStore <ULStoreProtocol>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)MOClass;
+ (id)defaultSortProperty;
+ (unsigned int)maxEntriesInTable;

- (struct vector<CLMicroLocationModelTable::Entry, std::allocator<CLMicroLocationModelTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationModelTable::Entry *, std::allocator<CLMicroLocationModelTable::Entry>> { struct Entry *x0; } x2; })_fetchModelEntriesByAndPredicates:(id)a0 sortDescriptors:(id)a1 andLimit:(unsigned long long)a2;
- (char)deleteAllModelsOfDeletedServices;
- (char)deleteModelsForClients:(const void *)a0;
- (char)deleteUnneededModelsWithNumNonLslsModeltoKeep:(unsigned int)a0 numLSLModelsToKeep:(unsigned int)a1;
- (struct vector<CLMicroLocationModelTable::Entry, std::allocator<CLMicroLocationModelTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationModelTable::Entry *, std::allocator<CLMicroLocationModelTable::Entry>> { struct Entry *x0; } x2; })fetchAllRecordsWithLimit:(unsigned int)a0;
- (struct vector<CLMicroLocationModelTable::Entry, std::allocator<CLMicroLocationModelTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationModelTable::Entry *, std::allocator<CLMicroLocationModelTable::Entry>> { struct Entry *x0; } x2; })fetchModelsAtLoiGroupId:(struct uuid { unsigned char x0[16]; })a0 andLimit:(unsigned long long)a1;
- (struct optional<CLMicroLocationModelTable::Entry> { union { char x0; struct Entry { struct uuid { unsigned char x0[16]; } x0; struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x1; int x2; struct Model { void /* function */ **x0; struct RepeatedPtrField<CLMicroLocationProto::Fingerprint> { void **x0; int x1; int x2; int x3; } x1; unsigned long long x2; double x3; int x4; int x5; struct RepeatedPtrField<CLMicroLocationProto::ClusterRecordings> { void **x0; int x1; int x2; int x3; } x6; struct RepeatedPtrField<CLMicroLocationProto::AnchorMetadata> { void **x0; int x1; int x2; int x3; } x7; BOOL x8; unsigned int x9; struct anchorAppearancesVector *x10; struct LocationSimilarityListData *x11; int x12; int x13; struct RepeatedField<int> { int *x0; int x1; int x2; } x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; void *x21; struct BlueAtlasData *x22; unsigned int x23; int x24; unsigned int x25[1]; } x3; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; } x0; BOOL x1; } x4; struct optional<boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; } x5; struct uuid { unsigned char x0[16]; } x6; } x1; } x0; BOOL x1; })fetchMostRecentMagicalMomentsModelForClient:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; })a0 atLoiGroupId:(struct uuid { unsigned char x0[16]; })a1;
- (struct optional<CLMicroLocationModelTable::Entry> { union { char x0; struct Entry { struct uuid { unsigned char x0[16]; } x0; struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x1; int x2; struct Model { void /* function */ **x0; struct RepeatedPtrField<CLMicroLocationProto::Fingerprint> { void **x0; int x1; int x2; int x3; } x1; unsigned long long x2; double x3; int x4; int x5; struct RepeatedPtrField<CLMicroLocationProto::ClusterRecordings> { void **x0; int x1; int x2; int x3; } x6; struct RepeatedPtrField<CLMicroLocationProto::AnchorMetadata> { void **x0; int x1; int x2; int x3; } x7; BOOL x8; unsigned int x9; struct anchorAppearancesVector *x10; struct LocationSimilarityListData *x11; int x12; int x13; struct RepeatedField<int> { int *x0; int x1; int x2; } x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; void *x21; struct BlueAtlasData *x22; unsigned int x23; int x24; unsigned int x25[1]; } x3; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; } x0; BOOL x1; } x4; struct optional<boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; } x5; struct uuid { unsigned char x0[16]; } x6; } x1; } x0; BOOL x1; })fetchMostRecentModelForServiceUuid:(struct uuid { unsigned char x0[16]; })a0 atLoiGroupId:(struct uuid { unsigned char x0[16]; })a1;
- (struct optional<CLMicroLocationModelTable::Entry> { union { char x0; struct Entry { struct uuid { unsigned char x0[16]; } x0; struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x1; int x2; struct Model { void /* function */ **x0; struct RepeatedPtrField<CLMicroLocationProto::Fingerprint> { void **x0; int x1; int x2; int x3; } x1; unsigned long long x2; double x3; int x4; int x5; struct RepeatedPtrField<CLMicroLocationProto::ClusterRecordings> { void **x0; int x1; int x2; int x3; } x6; struct RepeatedPtrField<CLMicroLocationProto::AnchorMetadata> { void **x0; int x1; int x2; int x3; } x7; BOOL x8; unsigned int x9; struct anchorAppearancesVector *x10; struct LocationSimilarityListData *x11; int x12; int x13; struct RepeatedField<int> { int *x0; int x1; int x2; } x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; void *x21; struct BlueAtlasData *x22; unsigned int x23; int x24; unsigned int x25[1]; } x3; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; } x0; BOOL x1; } x4; struct optional<boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; } x5; struct uuid { unsigned char x0[16]; } x6; } x1; } x0; BOOL x1; })fetchMostRecentModelOfModelType:(int)a0 ForClient:(const void *)a1 atLoiGroupId:(struct optional<const boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; })a2;
- (struct optional<CLMicroLocationModelTable::Entry> { union { char x0; struct Entry { struct uuid { unsigned char x0[16]; } x0; struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x1; int x2; struct Model { void /* function */ **x0; struct RepeatedPtrField<CLMicroLocationProto::Fingerprint> { void **x0; int x1; int x2; int x3; } x1; unsigned long long x2; double x3; int x4; int x5; struct RepeatedPtrField<CLMicroLocationProto::ClusterRecordings> { void **x0; int x1; int x2; int x3; } x6; struct RepeatedPtrField<CLMicroLocationProto::AnchorMetadata> { void **x0; int x1; int x2; int x3; } x7; BOOL x8; unsigned int x9; struct anchorAppearancesVector *x10; struct LocationSimilarityListData *x11; int x12; int x13; struct RepeatedField<int> { int *x0; int x1; int x2; } x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; void *x21; struct BlueAtlasData *x22; unsigned int x23; int x24; unsigned int x25[1]; } x3; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; } x0; BOOL x1; } x4; struct optional<boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; } x5; struct uuid { unsigned char x0[16]; } x6; } x1; } x0; BOOL x1; })fetchMostRecentModelOfModelType:(int)a0 ForService:(struct optional<const boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; })a1 atLoiGroupId:(struct optional<const boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; })a2;
- (struct optional<CLMicroLocationModelTable::Entry> { union { char x0; struct Entry { struct uuid { unsigned char x0[16]; } x0; struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long double x0; } x0; } x1; int x2; struct Model { void /* function */ **x0; struct RepeatedPtrField<CLMicroLocationProto::Fingerprint> { void **x0; int x1; int x2; int x3; } x1; unsigned long long x2; double x3; int x4; int x5; struct RepeatedPtrField<CLMicroLocationProto::ClusterRecordings> { void **x0; int x1; int x2; int x3; } x6; struct RepeatedPtrField<CLMicroLocationProto::AnchorMetadata> { void **x0; int x1; int x2; int x3; } x7; BOOL x8; unsigned int x9; struct anchorAppearancesVector *x10; struct LocationSimilarityListData *x11; int x12; int x13; struct RepeatedField<int> { int *x0; int x1; int x2; } x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; void *x21; struct BlueAtlasData *x22; unsigned int x23; int x24; unsigned int x25[1]; } x3; struct optional<std::string> { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x1; } x0; BOOL x1; } x4; struct optional<boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; } x5; struct uuid { unsigned char x0[16]; } x6; } x1; } x0; BOOL x1; })fetchMostRecentModelOfModelType:(int)a0 atLoiGroupId:(struct optional<const boost::uuids::uuid> { union { char x0; struct uuid { unsigned char x0[16]; } x1; } x0; BOOL x1; })a1;
- (struct vector<CLMicroLocationModelTable::Entry, std::allocator<CLMicroLocationModelTable::Entry>> { struct Entry *x0; struct Entry *x1; struct __compressed_pair<CLMicroLocationModelTable::Entry *, std::allocator<CLMicroLocationModelTable::Entry>> { struct Entry *x0; } x2; })fetchMostRecentModels;
- (char)insertEntries:(const void *)a0;
- (char)updateAllModelsWithMatchingClientId:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; })a0 withNewClientId:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; })a1;
- (char)updateAllModelsWithMatchingServiceUUID:(struct uuid { unsigned char x0[16]; })a0 withNewServiceUUID:(struct uuid { unsigned char x0[16]; })a1;

@end

@class MPShuffleableSectionedIdentifierList, NSMutableDictionary, NSString, NSDictionary, MPSectionedIdentifierListPosition, MPSectionedIdentifierList;
@protocol MPCQueueControllerBehaviorHost, MPCQueueControllerBehaviorMusicDelegate;

@interface _MPCQueueControllerBehaviorMusic : NSObject <MPArtworkDataSource, MPShuffleableSectionedIdentifierListDelegate, MPSectionedIdentifierListAnnotationDelegate, MPCContinueListeningRadioQueueProviding, MPCQueueControllerBehaviorMusic, MPCQueueControllerBehaviorDynamicLoadingImplementation, MPCQueueControllerBehaviorTransportableImplementation, MPCQueueControllerBehaviorRestorableImplementation, MPCQueueControllerBehaviorUpNextImplementation, MPCQueueControllerBehaviorStartPlayerItemContinuableImplementation> {
    char _wasDecoded;
    unsigned short _activeItemFlags;
    id /* block */ _loadAdditionalItemsCompletion;
    NSDictionary *_lastEmittedBehaviorMetadata;
    NSString *_activeHostingSharedSessionID;
}

@property (class, readonly) char supportsSecureCoding;

@property (retain, nonatomic) MPShuffleableSectionedIdentifierList *identifierList;
@property (retain, nonatomic) MPSectionedIdentifierList *autoPlayIdentifierList;
@property (nonatomic) long long autoPlayState;
@property (retain, nonatomic) MPSectionedIdentifierListPosition *autoPlayEndPosition;
@property (nonatomic) char autoPlayIsTriggered;
@property (retain, nonatomic) NSMutableDictionary *dataSources;
@property (readonly, nonatomic) long long state;
@property (copy, nonatomic) NSString *latestUpNextSectionID;
@property (copy, nonatomic) NSString *playNowInsertionContentItemID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<MPCQueueControllerBehaviorMusicDelegate> musicBehaviorDelegate;
@property (readonly, nonatomic) long long repeatType;
@property (readonly, nonatomic) long long shuffleType;
@property (readonly, nonatomic) char autoPlayEnabled;
@property (readonly, nonatomic) char hasUserMutations;
@property (nonatomic) char allowsQueueModifications;
@property (readonly, nonatomic) long long preferredUpcomingItemCount;
@property (readonly, copy, nonatomic) NSString *sessionID;
@property (readonly, weak, nonatomic) id<MPCQueueControllerBehaviorHost> host;
@property (readonly, nonatomic) long long playbackPositionRestorationPolicy;
@property (readonly, nonatomic) char isEmpty;
@property (readonly, nonatomic) char containsRestorableContent;

+ (id)makeExtensionWithInvalidatable:(id)a0;
+ (char)canLoadQueue:(id)a0 reason:(id *)a1;

- (void)dealloc;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)initWithSessionID:(id)a0;
- (char)areRepresentationsAvailableForCatalog:(id)a0;
- (void)cancelLoadingRepresentationForArtworkCatalog:(id)a0;
- (id)debugDescriptionForItem:(id)a0 inSection:(id)a1;
- (id)debugDescriptionForSection:(id)a0;
- (void)didDequeueShuffledItemsInSectionedIdentifierList:(id)a0;
- (id)existingRepresentationForArtworkCatalog:(id)a0;
- (char)isRepresentation:(id)a0 bestRepresentationForArtworkCatalog:(id)a1;
- (void)loadRepresentationForArtworkCatalog:(id)a0 completionHandler:(id /* block */)a1;
- (void)sectionedIdentifierList:(id)a0 dataSourceDidAddItems:(id)a1 toSection:(id)a2;
- (void)sectionedIdentifierList:(id)a0 dataSourceDidChangeItems:(id)a1 inSection:(id)a2;
- (void)sectionedIdentifierList:(id)a0 dataSourceDidEndTransactionForSection:(id)a1;
- (void)sectionedIdentifierList:(id)a0 dataSourceDidMoveItems:(id)a1 inSection:(id)a2;
- (void)sectionedIdentifierList:(id)a0 dataSourceDidRemoveItems:(id)a1 fromSection:(id)a2;
- (void)sectionedIdentifierList:(id)a0 dataSourceDidUpdateItems:(id)a1 inSection:(id)a2;
- (void)sectionedIdentifierList:(id)a0 dataSourceDidUpdateSection:(id)a1;
- (id)visualIdenticalityIdentifierForCatalog:(id)a0;
- (void)_setRepeatType:(long long)a0;
- (id)_stateDictionaryIncludingQueue:(char)a0;
- (id)contentItemIDEnumeratorStartingAfterContentItemID:(id)a0 mode:(long long)a1 options:(unsigned long long)a2;
- (void)removeContentItemID:(id)a0 completion:(id /* block */)a1;
- (id)_accountForAutoPlay;
- (void)_addAutoPlayPlaybackContext:(id)a0 atPosition:(long long)a1 afterContentItemID:(id)a2 sectionIdentifier:(id)a3 actions:(unsigned long long)a4 completion:(id /* block */)a5;
- (void)_addPlaybackContext:(id)a0 atPosition:(long long)a1 afterContentItemID:(id)a2 sectionIdentifier:(id)a3 actions:(unsigned long long)a4 completion:(id /* block */)a5;
- (char)_allDataSourcesSupportInsertionPositionLast;
- (id)_autoPlayUpNextSectionIdentifierForItem:(id)a0;
- (long long)_autoplayMode;
- (id)_componentsForContentItemID:(id)a0;
- (long long)_countOfItemsWithinSection:(id)a0 maxCount:(long long)a1;
- (void)_emitEventsForAddingPlaybackContext:(id)a0 sectionIdentifier:(id)a1;
- (void)_emitEventsForPlaybackBehaviorChangeIfNeeded;
- (void)_evaluateAutoPlayStateAfterItemsChanged;
- (void)_evaluateLoadingDataSourceItemThresholds;
- (id)_idenitiferListForPosition:(long long)a0 afterContentItemID:(id)a1 existingUpNextSectionID:(id)a2 createdUpNextSectionID:(id)a3;
- (id)_identifierListForSection:(id)a0;
- (void)_initializeWithCoder:(id)a0;
- (id)_itemForComponents:(id)a0;
- (id)_itemForContentItemID:(id)a0 allowReuse:(char)a1;
- (void)_playNowIfPossible:(id)a0 completion:(id /* block */)a1;
- (unsigned long long)_playbackContextOptions;
- (long long)_privateListeningSourceForContext:(id)a0;
- (void)_qfa_performInsertPlaybackContext:(id)a0 atPosition:(long long)a1 afterContentItemID:(id)a2 sectionIdentifier:(id)a3 actions:(unsigned long long)a4 completion:(id /* block */)a5;
- (void)_setShuffleType:(long long)a0 startingContentItemID:(id)a1 randomSource:(id)a2;
- (id)_tailInsertionComponentsForUpNextSectionID:(id)a0;
- (void)_transitionToAutoPlayState:(long long)a0;
- (id)_upNextSectionIdentifierForItem:(id)a0;
- (id)_upNextSectionIdentifierForItem:(id)a0 shouldLookInBaseList:(char)a1;
- (void)_updateGroupSessionParticipants:(id)a0 localParticipant:(id)a1;
- (void)activeItemFlagsDidChange:(unsigned short)a0;
- (char)canJumpToContentItemID:(id)a0 reason:(id *)a1;
- (char)canNextItemFromContentItemID:(id)a0 reason:(id *)a1;
- (char)canPreviousItemFromContentItemID:(id)a0 reason:(id *)a1;
- (char)canRemoveContentItemID:(id)a0 reason:(id *)a1;
- (void)canReuseQueue:(id)a0 completion:(id /* block */)a1;
- (char)canUserChangeRepeatTypeWithReason:(id *)a0;
- (char)canUserChangeShuffleModeWithReason:(id *)a0;
- (char)canUserEnableAutoPlayWithReason:(id *)a0;
- (void)clearAllItemsAfterContentItemID:(id)a0;
- (id)componentsForContentItemID:(id)a0;
- (void)connectToHost:(id)a0;
- (id)contentItemIDWithoutRepeatIteration:(id)a0;
- (id)copyContentItemID:(id)a0 repeatIteration:(long long)a1;
- (void)currentItemDidChangeFromContentItemID:(id)a0 toContentItemID:(id)a1;
- (void)didConnectToHost:(id)a0;
- (void)didReachEndOfQueueWithReason:(id)a0;
- (void)disconnectFromHost:(id)a0;
- (long long)displayItemCount;
- (void)donateStartPlayerItem:(id)a0 completion:(id /* block */)a1;
- (id)finalizeStateRestorationWithTargetContentItemID:(id)a0 completion:(id /* block */)a1;
- (void)findFirstContentItemIDForItemIntersectingIdentifierSet:(id)a0 completion:(id /* block */)a1;
- (void)getSharedQueueTracklistWithStartingContentItemID:(id)a0 completion:(id /* block */)a1;
- (char)isAutoPlayContentItemID:(id)a0;
- (char)isExportableSessionType:(id)a0 forContentItemID:(id)a1 extension:(id)a2 reason:(id *)a3;
- (char)isSupportedInsertionPosition:(long long)a0 fromContentItemID:(id)a1 reason:(id *)a2;
- (char)itemExistsForContentItemID:(id)a0;
- (id)lastSectionContentItemIDForTargetContentItemID:(id)a0;
- (void)loadAdditionalUpcomingItems:(long long)a0 completion:(id /* block */)a1;
- (void)moveContentItemID:(id)a0 afterContentItemID:(id)a1 completion:(id /* block */)a2;
- (void)moveContentItemID:(id)a0 beforeContentItemID:(id)a1 completion:(id /* block */)a2;
- (void)performInsertCommand:(id)a0 targetContentItemID:(id)a1 completion:(id /* block */)a2;
- (id)performLoadCommand:(id)a0 completion:(id /* block */)a1;
- (void)prepareForCreateStationAfterContentItemID:(id)a0;
- (id)queueReferencesWithMaxCount:(long long)a0;
- (void)reshuffleWithTargetContentItemID:(id)a0 completion:(id /* block */)a1;
- (void)restoreWithSharedCoder:(id)a0 block:(id /* block */)a1;
- (void)setAutoPlayEnabled:(char)a0 targetContentItemID:(id)a1 completion:(id /* block */)a2;
- (void)setHostingSharedSessionID:(id)a0 reason:(id)a1;
- (void)setRepeatType:(long long)a0 completion:(id /* block */)a1;
- (void)setShuffleType:(long long)a0 startingContentItemID:(id)a1 randomSource:(id)a2;
- (void)setShuffleType:(long long)a0 targetContentItemID:(id)a1 completion:(id /* block */)a2;
- (id)tailInsertionContentItemIDForTargetContentItemID:(id)a0;

@end

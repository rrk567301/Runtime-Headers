@interface CSUtils : NSObject

+ (long long)processIdentifier;
+ (id)deviceIdentifier;
+ (char)isContinuousConversationEnabled;
+ (char)supportRemoteDarwinVoiceTrigger;
+ (char)isMagusDisabledForLanguageCode:(id)a0;
+ (char)shouldDisableSpeakerRecognition;
+ (id)_timeStampString;
+ (id)deviceBuildVersion;
+ (id)deviceProductType;
+ (id)deviceProductVersion;
+ (char)faultPagesWithVaddr:(void *)a0 mmapedSize:(unsigned long long)a1 filePath:(id)a2;
+ (id)fetchHypotheticalBluetoothRouteProductIdFromAudioSessionId:(unsigned int)a0;
+ (unsigned long long)fetchHypotheticalRouteType;
+ (unsigned long long)fetchHypotheticalRouteTypeFromAudioSessionId:(unsigned int)a0;
+ (unsigned int)getAudioDeviceForHalUID:(id)a0;
+ (id)getBestSupportedSiriLanguageWithFallback:(id)a0;
+ (unsigned int)getDefaultOutputAudioDevice;
+ (unsigned int)getNumElementInBitset:(unsigned long long)a0;
+ (id)getSerialQueue:(id)a0 qualityOfService:(unsigned int)a1;
+ (id)getSerialQueue:(id)a0 withQualityOfService:(unsigned int)a1 andTargetQueue:(id)a2;
+ (id)getSerialQueueWithQOS:(unsigned int)a0 name:(id)a1 fixedPriority:(unsigned char)a2;
+ (id)getSiriLanguageWithEndpointId:(id)a0 fallbackLanguage:(id)a1;
+ (id)getSiriLanguageWithFallback:(id)a0;
+ (char)hasRemoteBuiltInMic;
+ (char)hasRemoteCoreSpeech;
+ (unsigned long long)horsemanDeviceType;
+ (char)isAttentiveSiriEnabled;
+ (char)isBluetoothVehicleOutput;
+ (char)isBuiltInRecordRoute:(id)a0;
+ (char)isBuiltInRouteWithRecordRoute:(id)a0 playbackRoute:(id)a1;
+ (char)isCarplayWithFlexibleFollowupEnabled;
+ (char)isContinuousConversationSupported;
+ (char)isDarwinOS;
+ (char)isDisplayPortRouteWithRecordRoute:(id)a0;
+ (char)isDoAPAudioRouteWithRecordRoute:(id)a0;
+ (char)isExclaveHardware;
+ (char)isFirstPassSourceTypeRingtoneWithVTEI:(id)a0;
+ (char)isFlexibleEndpointingEnabled;
+ (char)isHypotheticalAudioRouteBluetoothFromAudioSessinoId:(unsigned int)a0;
+ (char)isIOSDeviceSupportingBargeIn;
+ (char)isJarvisAudioRouteWithRecordRoute:(id)a0;
+ (char)isLocalVoiceTriggerAvailable;
+ (char)isM9Device;
+ (char)isMagusRestrictedWithSAEForLanguageCode:(id)a0;
+ (char)isMedocFeatureEnabled;
+ (char)isNNVADFallbackUnexpectedForLanguageCode:(id)a0;
+ (char)isOutOfBandAudioRouteWithRecordRoute:(id)a0;
+ (char)isOutputDevice:(unsigned int)a0 relatedToInputDevice:(unsigned int)a1;
+ (char)isSiriDSPTurnedOn;
+ (char)isVoiceTriggerFromExclaveWithVTEI:(id)a0;
+ (void)iterateBitset:(unsigned long long)a0 block:(id /* block */)a1;
+ (unsigned int)loggingHeartbeatRate;
+ (void *)mmapWithFile:(id)a0 mappedSizeOut:(id *)a1;
+ (char)platformSupportsImplicitUttAddition;
+ (void)removeLogFilesInDirectory:(id)a0 matchingPattern:(id)a1 beforeDays:(float)a2;
+ (id)rootQueueWithFixedPriority:(int)a0;
+ (char)shouldBlockVoiceTriggerWhenOtherAppRecording;
+ (char)shouldDeinterleaveAudioOnCS;
+ (char)shouldDelayTwoShotFeedbackForMyriadDecision;
+ (char)shouldUseHorsemanSpeechEndpointAssets;
+ (char)supportAdBlocker;
+ (char)supportAudioTappingSelfTrigger;
+ (char)supportBluetoothDeviceVoiceTrigger;
+ (char)supportCSTwoShotDecision;
+ (char)supportContinuousVoiceTrigger;
+ (char)supportEarconRemoval;
+ (char)supportHandsFree;
+ (char)supportHangUp;
+ (char)supportHearstVoiceTrigger;
+ (char)supportHomeKitAccessory;
+ (char)supportHybridEndpointer;
+ (char)supportJarvisVoiceTrigger;
+ (char)supportLanguageDetector;
+ (char)supportMph;
+ (char)supportMphAssets;
+ (char)supportNonInterruptibleSiri;
+ (char)supportOpportuneSpeakListener;
+ (char)supportOpportunisticZLL;
+ (char)supportPhatic;
+ (char)supportPremiumAssets;
+ (char)supportRemoraVoiceTrigger;
+ (char)supportRingtoneA2DP;
+ (char)supportSAT;
+ (char)supportSelfTriggerSuppression:(unsigned long long)a0 refChannelIdx:(unsigned long long)a1;
+ (char)supportSessionActivateDelay;
+ (char)supportSmartVolume;
+ (char)supportStateFeedback;
+ (char)supportTelephonyAudioTap;
+ (char)supportTrialMitigationAssets;
+ (char)supportVoiceTriggerChannelSelection;
+ (char)supportZeroFilter:(unsigned long long)a0;
+ (char)supportsDispatchWorkloop;
+ (char)supportsEndpointingOnATV;
+ (char)supportsMphForLanguageCode:(id)a0;
+ (char)supportsPersonalizedHeySiri;
+ (char)supportsSCDAFramework;
+ (char)supportsSpeakerRecognitionAssets;
+ (char)supportsSystemDaemon;
+ (char)supportsUnderstandingOnDevice;
+ (double)systemUpTime;
+ (char)xpcConnection:(id)a0 hasEntitlement:(id)a1;
+ (void)removeDirectory:(id)a0;
+ (char)supportsANE;
+ (id)boardID;
+ (char)isASRViaSpeechAPIEnabled;
+ (char)_gibraltarHasBuiltInMic;
+ (char)supportTTS;
+ (char)supportsMphForLanguageCode:(id)a0 forDeviceType:(unsigned long long)a1;
+ (id)timeStampWithSaltGrain;
+ (id)defaultDateFormatter;
+ (char)supportPremiumModel;
+ (char)supportsHybridUnderstandingOnDevice;
+ (char)supportsSecureAssetForSpeakerRecognition;
+ (char)supportsVoiceProfileIDInUserProfile;
+ (id)FourCCToString:(unsigned int)a0;
+ (char)deviceRequirePowerAssertionHeld;
+ (char)isBluetoothAudioDeviceConnected;
+ (char)isRecordContextHearstDoubleTap:(id)a0;
+ (id)readValuesFromJsonFile:(id)a0 keyword:(id)a1;
+ (void)withElapsedTimeLogging:(id)a0 execute:(id /* block */)a1;
+ (char)isRecordContextHomeButtonPress:(id)a0;
+ (void)URLsInDirectory:(id)a0 matchingPattern:(id)a1 completion:(id /* block */)a2;
+ (id)_contentsOfDirectoryAtURL:(id)a0 matchingPattern:(id)a1 includingPropertiesForKeys:(id)a2 error:(id *)a3;
+ (char)_createLoggingDirectoryIfNeeded:(id)a0;
+ (id)_readValuesInNestedDictionary:(id)a0 keyword:(id)a1 depth:(long long)a2 limitedDepth:(long long)a3;
+ (id)_sharedDisposeLoggingQueue;
+ (void)_sortedURLsInDirectory:(id)a0 matchingPattern:(id)a1 completion:(id /* block */)a2;
+ (char)allowExtendedRingBufferSize;
+ (id)audioPortSubtypeAsString:(unsigned int)a0;
+ (id)auditTokenToString:(struct { unsigned int x0[8]; })a0;
+ (char)checkEntitlementForToken:(struct { unsigned int x0[8]; })a0 withEntitlement:(id)a1;
+ (void)clearLogFilesInDirectory:(id)a0 matchingPattern:(id)a1 exceedNumber:(unsigned long long)a2;
+ (id)dateWithSaltGrain;
+ (id)deviceHwRevision;
+ (char)deviceRequirePreventStandbyAssertion;
+ (id)deviceUserAssignedName;
+ (id)dispatchWorkloopWithWithQOS:(unsigned int)a0 name:(id)a1 fixedPriority:(int)a2;
+ (id)fetchHypotheticalRouteFromAudioSession:(id)a0;
+ (int)getFileDescriptor:(id)a0;
+ (unsigned long long)getFileSizeWithFd:(int)a0;
+ (id)getResourcePathInSystemDomainMaskByAppending:(id)a0;
+ (id)getResourcePathInSystemDomainMaskFromRootPathByAppending:(id)a0;
+ (struct { unsigned int x0[8]; })getTokenFromDictionary:(id)a0 withTokenKey:(id)a1;
+ (char)isBridgeOS;
+ (char)isFromActiveUserMachXPCConnection:(id)a0;
+ (char)isHFPWithRecordRoute:(id)a0;
+ (char)isHeadphoneDeviceWithRecordRoute:(id)a0 playbackRoute:(id)a1;
+ (char)isMultiUserMedocFeatureEnabled;
+ (char)isOnDeviceASRAudioLoggingEnabled;
+ (char)isRecordContextAutoPrompt:(id)a0;
+ (char)isRecordContextBuiltInVoiceTrigger:(id)a0;
+ (char)isRecordContextDarwinVoiceTrigger:(id)a0;
+ (char)isRecordContextHearstVoiceTrigger:(id)a0;
+ (char)isRecordContextJarvisButtonPress:(id)a0;
+ (char)isRecordContextJarvisVoiceTrigger:(id)a0;
+ (char)isRecordContextRaiseToSpeak:(id)a0;
+ (char)isRecordContextSpeakerIdTrainingTrigger:(id)a0;
+ (char)isRecordContextVoiceTrigger:(id)a0;
+ (char)isRemoteDarwinWithDeviceId:(id)a0;
+ (char)isTCUSupported;
+ (char)isValidRecordContext:(id)a0;
+ (id)loggingFilePathWithDirectory:(id)a0 requestId:(id)a1 token:(id)a2 postfix:(id)a3;
+ (id)loggingFilePathWithDirectory:(id)a0 token:(id)a1 postfix:(id)a2;
+ (char)machXPCConnection:(id)a0 hasEntitlement:(id)a1;
+ (void)purgeFilesWithExtensionInDirectory:(id)a0 extension:(id)a1 withFileToKep:(id)a2;
+ (char)readOptimizationMadviseWithVaddr:(void *)a0 mmapedSize:(unsigned long long)a1 preLoadChunkSize:(unsigned long long)a2;
+ (id)recordContextString:(id)a0;
+ (char)shouldDownloadVTAssetsOnDaemon;
+ (char)supportAcousticProgressiveChecker;
+ (char)supportBeepCanceller:(unsigned long long)a0 recordType:(long long)a1;
+ (char)supportCircularBuffer;
+ (char)supportCompactPlus;
+ (char)supportEndpointerWhileHostAsleep;
+ (char)supportKeywordDetector;
+ (char)supportMedocAnnounce;
+ (char)supportMyriadLightHouse;
+ (char)supportPremiumWatchAssets;
+ (char)supportRaiseToSpeak;
+ (char)supportRelayCall;
+ (char)supportSelfTriggerSuppressionWatch;
+ (char)supportVoiceID;
+ (char)supportsAudioMessage;
+ (char)supportsDictationOnDevice;
+ (char)supportsLogger;
+ (char)supportsMagusForLanguageCode:(id)a0;
+ (char)supportsSecureSensor;
+ (char)supportsSiriLiminal;
+ (char)supportsSpeechRecognitionOnDevice;
+ (char)xpcConnection:(id)a0 hasEntitlement:(id)a1 withStringValue:(id)a2;

@end

@class NSMutableArray, NSString, HTTPMessage, HTTPConfig, HTTPUpgrade, NSObject, GCDAsyncSocket;
@protocol OS_dispatch_queue, HTTPResponse;

@interface HTTPConnection : NSObject {
    NSObject<OS_dispatch_queue> *connectionQueue;
    GCDAsyncSocket *asyncSocket;
    HTTPConfig *config;
    char started;
    HTTPMessage *request;
    unsigned int numHeaderLines;
    char sentResponseHeaders;
    NSString *nonce;
    long long lastNC;
    HTTPUpgrade *httpUpgrade;
    NSObject<HTTPResponse> *httpResponse;
    NSMutableArray *ranges;
    NSMutableArray *ranges_headers;
    NSString *ranges_boundry;
    int rangeIndex;
    unsigned long long requestContentLength;
    unsigned long long requestContentLengthReceived;
    unsigned long long requestChunkSize;
    unsigned long long requestChunkSizeReceived;
    NSMutableArray *responseDataSizes;
    unsigned long long posthumousCountedBytesWritten;
    unsigned char replyStarted : 1;
    unsigned char ignoreBodyData : 1;
    unsigned char disconnectAfterResponding : 1;
    unsigned long long requestBodyState;
}

+ (void)initialize;
+ (id)generateNonce;
+ (char)hasRecentNonce:(id)a0;
+ (id)parseParams:(id)a0;

- (void)dealloc;
- (void).cxx_destruct;
- (id)url;
- (void)start;
- (void)stop;
- (void)startConnection;
- (id)realm;
- (char)isAuthenticated;
- (unsigned short)connectedPort;
- (int)receiveBufferSize;
- (void)die;
- (id)filePathForURI:(id)a0;
- (void)addBasicAuthChallenge:(id)a0;
- (void)addDigestAuthChallenge:(id)a0;
- (void)readRequestBody;
- (unsigned long long)bodyBytesWritten;
- (id)chunkedTransferFooter;
- (id)chunkedTransferSizeLineForLength:(unsigned long long)a0;
- (id)connectedHost;
- (void)continueSendingMultiRangeResponseBody;
- (void)continueSendingSingleRangeResponseBody;
- (void)continueSendingStandardResponseBody;
- (void)customizeSSLSettings:(id)a0;
- (id)dateAsString:(id)a0;
- (id)directoryIndexFileNames;
- (char)expectsDelayedResponse;
- (char)expectsRequestBodyFromMethod:(id)a0 atPath:(id)a1;
- (id)filePathForURI:(id)a0 allowDirectory:(char)a1;
- (void)finishBody;
- (void)finishResponse;
- (void)handleAuthenticationFailed;
- (void)handleInternalServerError;
- (void)handleInvalidRequest:(id)a0;
- (void)handleNotAvailable;
- (void)handleNotImplemented;
- (void)handleResourceNotFound;
- (void)handleUnknownMethod:(id)a0;
- (void)handleVersionNotSupported:(id)a0;
- (id)httpResponseForMethod:(id)a0 URI:(id)a1;
- (id)initWithAsyncSocket:(id)a0 configuration:(id)a1;
- (char)isPasswordProtected:(id)a0;
- (char)isSecureServer;
- (id)newMultiRangeResponse:(unsigned long long)a0;
- (id)newUniRangeResponse:(unsigned long long)a0;
- (id)parseGetParams;
- (id)parseParams:(id)a0;
- (char)parseRangeRequest:(id)a0 withContentLength:(unsigned long long)a1;
- (id)passwordForUser:(id)a0;
- (void)prepareForBodyWithSize:(unsigned long long)a0;
- (id)preprocessErrorResponse:(id)a0;
- (id)preprocessResponse:(id)a0;
- (void)processBodyData:(id)a0;
- (id)readDataOfLength:(unsigned long long)a0 orLimit:(unsigned long long)a1;
- (void)replyToHTTPRequest;
- (id)requestURI;
- (void)resetBodyBytesWritten;
- (void)responseDidAbort:(id)a0;
- (void)responseHasAvailableData:(id)a0;
- (void)sendResponseHeadersAndBody;
- (void)setReceiveBufferSize:(int)a0;
- (char)shouldDie;
- (void)socket:(id)a0 didReadData:(id)a1 withTag:(long long)a2;
- (void)socket:(id)a0 didWriteDataWithTag:(long long)a1;
- (void)socketDidDisconnect:(id)a0 withError:(id)a1;
- (const unsigned int *)sslCipherSuites:(unsigned long long *)a0;
- (id)sslIdentityAndCertificates;
- (void)startReadingRequest;
- (void)startResponseForMethod:(id)a0 URI:(id)a1;
- (void)stopAfterResponding;
- (char)supportsMethod:(id)a0 atPath:(id)a1;
- (char)supportsStreamedRequestBody;
- (char)useDigestAccessAuthentication;
- (void)writeData:(id)a0 withTimeout:(double)a1 tag:(long long)a2;
- (unsigned long long)writeQueueSize;
- (char)isUpgradeRequest;
- (id)upgradeForToken:(id)a0;
- (id)upgradeToken;
- (id)webSocketForURI:(id)a0;

@end

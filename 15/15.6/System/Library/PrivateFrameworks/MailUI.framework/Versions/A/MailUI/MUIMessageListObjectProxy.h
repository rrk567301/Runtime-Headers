@class NSTextEncapsulation, MFMailbox, NSDictionary, NSObject, MFCriterion, MCMessage, MessageListCellHelper, NSOrderedSet, MessageListCellViewModel, NSString, MUICachingSVGConverter, NSImage, NSAttributedString, NSSet, NSIndexSet, NSArray, EFPair, MUIBrandIndicatorProvider, NSColor;
@protocol OS_os_log, EFCancelable;

@interface MUIMessageListObjectProxy : NSObject <EFLoggable> {
    id<EFCancelable> _observationCancelable;
    id<EFCancelable> _columnLayoutCancelable;
    id<EFCancelable> _followUpDisabledUserDefaultCancelable;
    id<EFCancelable> _showCategoryStringDefaultCancelable;
    long long _flags;
    unsigned long long _conversationFlags;
    MFCriterion *_mailboxCriterion;
    NSIndexSet *_flagColors;
    NSString *_snippet;
    unsigned long long _messageSize;
    char _isVIP;
    char _showContactPhotos;
    char _showRecipient;
    char _isColumnLayout;
}

@property (class, readonly, nonatomic) NSTextEncapsulation *textEncapsulation;
@property (class, readonly, nonatomic) NSTextEncapsulation *selectedTextEncapsulation;
@property (class, readonly) MUICachingSVGConverter *svgConverter;
@property (class, readonly) NSObject<OS_os_log> *log;

@property (copy, nonatomic) NSString *sender;
@property (copy, nonatomic) NSAttributedString *addressee;
@property (copy, nonatomic) NSString *receiver;
@property (retain, nonatomic) NSArray *avatarContacts;
@property (copy, nonatomic) NSString *dateString;
@property (copy, nonatomic) NSString *timeString;
@property (copy, nonatomic) NSString *dateTimeString;
@property (copy, nonatomic) NSString *dateReceivedString;
@property (copy, nonatomic) NSString *dateSentString;
@property (copy, nonatomic) NSString *remindMeDateString;
@property (copy, nonatomic) NSString *sendLaterDateString;
@property (retain, nonatomic) NSTextEncapsulation *dateLabelTextEncapsulation;
@property (copy, nonatomic) NSAttributedString *subject;
@property (copy, nonatomic) NSString *accessibilitySubjectValue;
@property (copy, nonatomic) NSString *mailbox;
@property (copy, nonatomic) NSString *size;
@property (nonatomic) char showContactPhotos;
@property (retain, nonatomic) NSImage *unreadImage;
@property (retain, nonatomic) NSImage *replyImage;
@property (retain, nonatomic) NSDictionary *mutedImages;
@property (retain, nonatomic) NSImage *extensionImage;
@property (retain, nonatomic) NSImage *statusImage;
@property (copy, nonatomic) NSOrderedSet *flagImages;
@property (copy, nonatomic) NSAttributedString *snippetString;
@property (copy, nonatomic) NSString *accessibilitySnippetStringValue;
@property (nonatomic) char isUnread;
@property (nonatomic) char isOpen;
@property (readonly, nonatomic) char isReplyHiddenInStatusColumn;
@property (nonatomic) char noThread;
@property (nonatomic) unsigned long long threadCount;
@property (copy, nonatomic) NSString *toCcString;
@property (copy, nonatomic) NSString *attachmentsString;
@property (retain, nonatomic) NSImage *blockedSenderImage;
@property (retain, nonatomic) NSImage *priorityImage;
@property (nonatomic) char followUpDisabled;
@property (nonatomic) char showCategoryString;
@property (readonly, nonatomic) NSImage *singleStatusImage;
@property (readonly, nonatomic) char isSingleStatusHidden;
@property (readonly, nonatomic) char isStatusStackHidden;
@property (retain, nonatomic) NSColor *timeSensitiveImageColor;
@property (copy, nonatomic) NSString *categorizationString;
@property (retain, nonatomic) NSTextEncapsulation *categorizationTextEncapsulation;
@property char previousIsUnread;
@property (readonly, copy, nonatomic) NSString *test_snippetPlaceholder;
@property (readonly, nonatomic) MCMessage *message;
@property (readonly, nonatomic) MessageListCellViewModel *viewModel;
@property (readonly, nonatomic) MessageListCellHelper *cellHelper;
@property (nonatomic) long long backgroundStyle;
@property (weak, nonatomic) MFCriterion *mailboxCriterion;
@property (readonly, nonatomic) MFMailbox *messageMailbox;
@property (readonly, nonatomic) NSSet *gmailLabels;
@property (nonatomic) char showRecipient;
@property (nonatomic) char showDateTime;
@property (nonatomic) char selected;
@property (nonatomic) long long flags;
@property (nonatomic) unsigned long long conversationFlags;
@property (nonatomic) char muted;
@property (nonatomic) unsigned long long messageSize;
@property (copy, nonatomic) NSIndexSet *flagColors;
@property (nonatomic) char canShowReadLaterDate;
@property (nonatomic) char canShowFollowUpDate;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } subjectViewBounds;
@property (copy, nonatomic) NSString *snippet;
@property (nonatomic) long long photoSize;
@property (weak, nonatomic) MUIBrandIndicatorProvider *brandIndicatorProvider;
@property (nonatomic) char isDeleted;
@property (readonly, nonatomic) NSImage *vipImage;
@property (readonly, nonatomic) NSImage *attachmentImage;
@property (readonly, nonatomic) NSImage *readLaterImage;
@property (readonly, nonatomic) EFPair *firstFlagImage;
@property (readonly, nonatomic) NSString *firstFlagName;
@property (readonly, nonatomic) NSImage *mutedImage;
@property (readonly, nonatomic) char isBlockedSender;
@property (nonatomic) char isVIP;
@property (readonly, nonatomic) char isFollowUp;
@property (nonatomic) char hasGeneratedSummary;
@property (readonly, nonatomic) NSColor *firstStatusColor;
@property (nonatomic) char showTimeSensitiveImage;
@property (readonly, nonatomic) NSImage *timeSensitiveImage;
@property (copy, nonatomic) NSDictionary *snippetHintsByZone;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)keyPathsForValuesAffectingFirstFlagImage;
+ (id)keyPathsForValuesAffectingFirstFlagName;
+ (id)keyPathsForValuesAffectingFirstStatusColor;
+ (id)keyPathsForValuesAffectingFollowUpImage;
+ (id)keyPathsForValuesAffectingIsReplyHiddenInStatusColumn;
+ (id)keyPathsForValuesAffectingIsSingleStatusHidden;
+ (id)keyPathsForValuesAffectingIsStatusStackHidden;
+ (id)keyPathsForValuesAffectingMutedImage;
+ (id)keyPathsForValuesAffectingSingleStatusImage;
+ (id)keyPathsForValuesAffectingVipImage;
+ (void)reloadReplyImages;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)_updateSize;
- (void)update;
- (id)initWithMessage:(id)a0;
- (id)_sender;
- (void)_updateDateTime;
- (id)_iconsForFlags:(id)a0;
- (void)_updateReceiver;
- (id)_addressForPhotoProvideFullAddress:(char)a0;
- (id)_addressee;
- (unsigned long long)_attachmentsCount;
- (void)_blockedSenderListChanged:(id)a0;
- (id)_dateForMessage:(id)a0 showDateTime:(char *)a1;
- (id)_dateFromDisplayDate:(id)a0 sendLaterDate:(id)a1 readLaterDate:(id)a2 followUp:(id)a3 showDateTime:(char *)a4;
- (id)_dateStringFromDate:(id)a0 isTimeIncluded:(char)a1;
- (id)_defaultDateFormatter;
- (id)_displayDateForMessage:(id)a0;
- (void)_displayNameChanged:(id)a0;
- (id)_emailAttributedReceiver;
- (id)_emailAttributedSender;
- (id)_highlightSender:(id)a0;
- (id)_highlightSnippet:(id)a0;
- (void)_highlightSnippets;
- (id)_highlightSubject:(id)a0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)_initializeMutedImages;
- (char)_isFollowUpForViewModel:(id)a0;
- (id)_messageForPhoto;
- (char)_messageHasAttachments:(id)a0;
- (id)_readLaterDateForMessage;
- (id)_receiver;
- (void)_refreshDate:(id)a0;
- (id)_relevantAddressesForMessage:(id)a0 fullAddresses:(char)a1;
- (id)_relevantAddressesProvideFullAddress:(char)a0;
- (id)_timeDateFormatter;
- (id)_todayDateFormatter;
- (void)_updateAddressee;
- (void)_updateAttachmentString;
- (void)_updateAvatarContacts;
- (void)_updateAvatarContactsWithImageData:(id)a0 fullAddress:(id)a1;
- (void)_updateCategoryString;
- (void)_updateContactPhotoVisibilityFromDefaults;
- (void)_updateExtensionImage;
- (void)_updateFlagImages;
- (void)_updateIsVIP;
- (void)_updateMailbox;
- (void)_updateMutedImages;
- (void)_updatePriorityImage;
- (void)_updateReadLaterImage;
- (void)_updateReplyImages;
- (void)_updateSender;
- (void)_updateSnippet;
- (void)_updateStatusImage;
- (void)_updateSubject;
- (void)_updateThreadData;
- (void)_updateTimeSensitiveImage;
- (void)_updateToCcString;
- (void)_updateUnreadImage;
- (void)_vipSendersChanged:(id)a0;
- (id)followUpImage;
- (id)initWithMessage:(id)a0 showRecipient:(char)a1 canShowFollowUpDate:(char)a2 canShowReadLaterDate:(char)a3;
- (id)initWithMessageListViewModel:(id)a0 cellHelper:(id)a1;
- (void)setMessageMailbox:(id)a0 gmailLabels:(id)a1 mailboxCriterion:(id)a2;
- (void)updateSubjectWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;

@end

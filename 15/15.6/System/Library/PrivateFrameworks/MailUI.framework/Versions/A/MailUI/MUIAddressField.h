@class CNAutocompleteResult, NSString, NSScrollView, MUITokenAddressField, CNAutocompleteResultWindow, NSArray, NSDictionary, CNAutocompleteStore, NSLayoutConstraint, NSButton, NSMapTable;
@protocol MUIAddressFieldContextProvider, MUIAddressFieldSenderAddressHandler, MUIAddressFieldAddressesDidChangeDelegate, MUITokenAddressDelegate, EFCancelable, CNCancelable;

@interface MUIAddressField : NSControl <CNAutocompleteResultWindowDelegate, CNAutocompleteFetchDelegate, CNContactPickerDelegate, NSTableViewDataSource, NSTableViewDelegate, NSTokenFieldDelegate, NSEditorRegistration, NSCandidateListTouchBarItemDelegate, NSTouchBarDelegate> {
    SEL _action;
    id _target;
    long long _style;
}

@property (retain, nonatomic) NSScrollView *scrollView;
@property (retain, nonatomic) NSButton *addContactButton;
@property (retain, nonatomic) CNAutocompleteResultWindow *autocompleteResultWindow;
@property (readonly, nonatomic) CNAutocompleteStore *autocompleteStore;
@property (retain, nonatomic) CNAutocompleteResult *selectedResult;
@property (copy, nonatomic) NSString *currentPrefix;
@property (retain, nonatomic) id<CNCancelable> currentSearchRequest;
@property (retain, nonatomic) id<CNCancelable> lastSuccessfulSearchRequest;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } editingRange;
@property (nonatomic) long long addressDisplayMode;
@property (retain, nonatomic) id tokenValue;
@property (nonatomic) char isShowingContactPicker;
@property (weak, nonatomic) NSLayoutConstraint *addContactButtonTrailingConstraint;
@property (weak, nonatomic) NSLayoutConstraint *tokenFieldTrailingConstraint;
@property (weak, nonatomic) NSLayoutConstraint *tokenFieldBottomConstraint;
@property (retain, nonatomic) NSMapTable *representedObjectsCache;
@property (nonatomic) char shouldDrawFocusRing;
@property (nonatomic) char isBoundToTokenField;
@property (nonatomic) char isShowingSelectedCompletion;
@property (copy, nonatomic) NSString *lastSendingAddress;
@property (copy, nonatomic) NSString *previousPrimaryAddress;
@property (retain, nonatomic) id<EFCancelable> tokenValueObservationToken;
@property (nonatomic) long long lastTokenCount;
@property (nonatomic) char didPasteAddresses;
@property (retain, nonatomic) NSDictionary *currentEmailAddressTokenIconsMap;
@property (nonatomic) char hideInitialEmptyCandidateList;
@property (retain, nonatomic) NSLayoutConstraint *addressFieldHeightConstraint;
@property (retain, nonatomic) MUITokenAddressField *tokenField;
@property (retain, nonatomic) id<MUITokenAddressDelegate> tokenAddressDelegate;
@property (nonatomic) char ignoreCompletionForTextChange;
@property (weak, nonatomic) id<MUIAddressFieldContextProvider> delegate;
@property (weak, nonatomic) id<MUIAddressFieldAddressesDidChangeDelegate> addressChangeDelegate;
@property (weak, nonatomic) id<MUIAddressFieldSenderAddressHandler> senderAddressHandler;
@property (copy, nonatomic) NSString *accountIdentifier;
@property (copy, nonatomic) NSString *senderAddress;
@property (copy, nonatomic) NSString *senderDomain;
@property (retain, nonatomic) NSArray *addresses;
@property (readonly, nonatomic) NSArray *rawAddresses;
@property (readonly, nonatomic) NSArray *chosenRawAddresses;
@property (readonly, nonatomic) char isEmpty;
@property (nonatomic) long long style;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)readablePasteboardTypes;
+ (id)log;
+ (id)_contactPicker;
+ (id)keyPathsForValuesAffectingAddresses;

- (void)dealloc;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (void)setEnabled:(char)a0;
- (void)setTarget:(id)a0;
- (id)target;
- (void)setAction:(SEL)a0;
- (SEL)action;
- (void)setAccessibilityTitleUIElement:(id)a0;
- (void)setNextKeyView:(id)a0;
- (id)touchBar:(id)a0 makeItemForIdentifier:(id)a1;
- (void)_configureConstraints;
- (void)_registerForNotifications;
- (void)_windowDidResize:(id)a0;
- (void)_windowWillClose:(id)a0;
- (id)accessibilityChildren;
- (char)canBecomeKeyView;
- (void)candidateListTouchBarItem:(id)a0 endSelectingCandidateAtIndex:(long long)a1;
- (char)control:(id)a0 textView:(id)a1 doCommandBySelector:(SEL)a2;
- (void)controlTextDidChange:(id)a0;
- (void)controlTextDidEndEditing:(id)a0;
- (void)drawFocusRingMask;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })focusRingMaskBounds;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)makeTouchBar;
- (void)objectDidBeginEditing:(id)a0;
- (void)objectDidEndEditing:(id)a0;
- (void)removeFromSuperview;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (char)tokenField:(id)a0 characterAtIndex:(unsigned long long)a1 shouldTerminateString:(id)a2;
- (id)tokenField:(id)a0 completionsForSubstring:(id)a1 indexOfToken:(long long)a2 indexOfSelectedItem:(long long *)a3;
- (id)tokenField:(id)a0 displayStringForRepresentedObject:(id)a1;
- (id)tokenField:(id)a0 editingStringForRepresentedObject:(id)a1;
- (char)tokenField:(id)a0 hasMenuForRepresentedObject:(id)a1;
- (id)tokenField:(id)a0 menuForRepresentedObject:(id)a1;
- (id)tokenField:(id)a0 readFromPasteboard:(id)a1;
- (id)tokenField:(id)a0 representedObjectForEditingString:(id)a1;
- (id)tokenField:(id)a0 setUpTokenAttachmentCell:(id)a1 forRepresentedObject:(id)a2;
- (id)tokenField:(id)a0 shouldAddObjects:(id)a1 atIndex:(unsigned long long)a2;
- (unsigned long long)tokenField:(id)a0 styleForRepresentedObject:(id)a1;
- (char)tokenField:(id)a0 writeRepresentedObjects:(id)a1 toPasteboard:(id)a2;
- (void)updateConstraints;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)autocompleteFetch:(id)a0 didFailWithError:(id)a1;
- (void)autocompleteFetch:(id)a0 didReceiveResults:(id)a1;
- (void)autocompleteFetchDidBeginNetworkActivity:(id)a0;
- (void)autocompleteFetchDidEndNetworkActivity:(id)a0;
- (void)autocompleteFetchDidFinish:(id)a0;
- (void)contactPicker:(id)a0 didSelectContactProperty:(id)a1;
- (void)contactPickerDidClose:(id)a0;
- (void)contactPickerWillClose:(id)a0;
- (void)selectedResult:(id)a0;
- (id)headerForNilPrefixResults;
- (void)selectionDidChange:(id)a0;
- (id)_tokensWithGroupTokensExpanded:(id)a0;
- (void)_addAddress:(id)a0 contact:(id)a1;
- (char)_addressFieldNeedsToBeScrollable;
- (id)_addressesWithTokens:(id)a0 tokenConverter:(id /* block */)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedFrameForAutocompleteResultWindow;
- (char)_allowNextPeoplePrediction;
- (id)_attributedStringForTokenCellWithText:(id)a0 image:(id)a1 description:(id)a2;
- (void)_cancelAndCloseCompletion;
- (void)_cancelCompletion;
- (unsigned long long)_cellColorForEmailAddressIconType:(long long)a0;
- (void)_closeCompletion;
- (void)_completeSelection:(id)a0;
- (id)_completionStringForSelectedRecord;
- (void)_configureAddContactButton;
- (void)_configureScrollView;
- (void)_configureTokenField;
- (void)_displayNextPeoplePrediction;
- (id)_editingStringWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a0;
- (char)_hasFocus;
- (id)_imageForEmailAddressIconType:(long long)a0 withDescription:(id)a1 forFont:(id)a2;
- (void)_muiAddressFieldCommonInit;
- (void)_objectDidTriggerAction:(id)a0;
- (void)_presentAutocompletionResultWindow;
- (void)_refreshAddressDisplayMode;
- (void)_resizeFieldIfNeeded;
- (void)_scrollerStyleDidChange:(id)a0;
- (void)_sharedPreferencesChanged:(id)a0;
- (void)_showContactPicker:(id)a0;
- (void)_showSelectedCompletionInField;
- (id)_sortedAddressTokenIconsForEmailAddress:(id)a0 includeExternalAddressTokenIcon:(char)a1;
- (void)_startCompleting;
- (void)_tokenFieldCommitedEditing:(id)a0;
- (void)_tokenFieldGainedFocus:(id)a0;
- (void)_tokenFieldMouseAction:(id)a0;
- (void)_updateAutocompleteTouchBarButtons;
- (void)_updateEditingRange;
- (void)_updateSelectedResultAndShowInField:(id)a0;
- (void)_updateSenderAddressHandler;
- (void)_updateTrailingConstraints;
- (void)_windowDidChangeKeyStatus:(id)a0;
- (void)addressTokenGenerationCompletedWithTokens:(id)a0;
- (void)bindOrUnbindToTokenField:(char)a0;
- (void)handleControlTextChange;

@end

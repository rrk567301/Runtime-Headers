@class BWStreamingCVAFilterRenderer, FigCaptureSemanticStyle, BWMetalColorCubeRenderer, BWRenderList, BWFencedAnimationQueue, BWSemanticStyleColorCubeCache, BWColorLookupCache, BWStreamingRaytracingSDOFRenderer, NSObject, BWFigVideoCaptureDevice, NSString, NSArray, BWRenderListProcessor, BWRenderListAnimator, FigCaptureSemanticStyleSet;
@protocol OS_dispatch_queue, MTLCommandQueue;

@interface BWStreamingFilterNode : BWNode <BWRendererResourceProvider, BWDetectedFacesFilterDelegate, BWSemanticStyleSceneObserver> {
    char _preparedToBecomeLive;
    char _streamingSegmentationFromInferenceEngine;
    char _depthDataDeliveryEnabled;
    char _focusBlurMapDeliveryEnabled;
    char _depthFromMonocularNetworkEnabled;
    char _portraitAutoSuggestEnabled;
    char _metadataProcessingEnabled;
    char _attachesInputPixelBufferAfterRendering;
    char _studioAndContourRenderingEnabled;
    char _stageRenderingEnabled;
    char _cinematicVideoEnabled;
    char _applyStyleBackgroundToEntireFrame;
    char _haveSeenFirstSampleBuffer;
    char _primaryStreamingPersonSegmentationEnabled;
    char _secondaryStreamingPersonSegmentationEnabled;
    char _depthFilterRenderingIsAfterPreviewStitcher;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _renderListLock;
    BWRenderList *_currentRenderList;
    BWRenderListAnimator *_currentAnimator;
    BWRenderList *_nextRenderList;
    BWRenderList *_mostRecentRenderListRequested;
    BWRenderListAnimator *_nextAnimator;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _filterChangeLock;
    NSArray *_filters;
    BWMetalColorCubeRenderer *_metalFilterRenderer;
    char _semanticStyleRenderingEnabled;
    FigCaptureSemanticStyle *_semanticStyle;
    char _semanticStyleRenderingSuspended;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _semanticStyleSceneLock;
    int _semanticStyleSceneType;
    BWFencedAnimationQueue *_fencedAnimationQueue;
    char _multipleSemanticStylesEnabled;
    struct opaqueCMSampleBuffer { } *_lastSampleBuffer;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastRenderedPTS;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lastSampleBufferLock;
    NSArray *_semanticStyleFiltersAndRegionArray;
    FigCaptureSemanticStyleSet *_currentSemanticStyleSet;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _primaryCaptureRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _fullScreenRectangle;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _semanticStyleSetLock;
    BWSemanticStyleColorCubeCache *_colorCubeCache;
    float _pickerComparisonMaxCubeStrength;
    char _maskVisualizationEnabled;
    BWStreamingCVAFilterRenderer *_streamingCVAFilterRenderer;
    float _simulatedAperture;
    float _portraitLightingEffectStrength;
    char _mirroredForMetadataAdjustment;
    int _rotationDegreesForMetadataAdjustment;
    BWStreamingRaytracingSDOFRenderer *_streamingRaytracingSDOFRenderer;
    BWRenderListProcessor *_renderListProcessor;
    BWColorLookupCache *_colorLookupCache;
    NSObject<OS_dispatch_queue> *_processorPreparationQueue;
    BWFigVideoCaptureDevice *_captureDevice;
    char _receivedInitialFixedPointDisparityBuffer;
    char _receivedOccludedFixedPointDisparityBuffer;
    char _mixColorCubesInGammaDomain;
    char _portraitPreviewForegroundBlurEnabled;
    id<MTLCommandQueue> _metalCommandQueue;
    unsigned int _priority;
    unsigned int _receivedFrameCounter;
    unsigned int _perFrameLoggingRatio;
    char _shouldLogPerFrameLogging;
    char _smartStyleRenderingEnabled;
}

@property (nonatomic, getter=isStreamingSegmentationFromInferenceEngine) char streamingSegmentationFromInferenceEngine;
@property (nonatomic, getter=isDepthDataDeliveryEnabled) char depthDataDeliveryEnabled;
@property (nonatomic, getter=isFocusBlurMapDeliveryEnabled) char focusBlurMapDeliveryEnabled;
@property (nonatomic, getter=isDepthFromMonocularNetworkEnabled) char depthFromMonocularNetworkEnabled;
@property (nonatomic, getter=isPortraitAutoSuggestEnabled) char portraitAutoSuggestEnabled;
@property (nonatomic, getter=isMetadataProcessingEnabled) char metadataProcessingEnabled;
@property (nonatomic) char attachesInputPixelBufferAfterRendering;
@property (nonatomic) char studioAndContourRenderingEnabled;
@property (nonatomic) char stageRenderingEnabled;
@property (nonatomic) char primaryStreamingPersonSegmentationEnabled;
@property (nonatomic) char secondaryStreamingPersonSegmentationEnabled;
@property (readonly, retain, nonatomic) NSArray *filters;
@property (readonly, nonatomic, getter=isSemanticStyleRenderingEnabled) char semanticStyleRenderingEnabled;
@property (readonly, nonatomic, getter=isRenderingSemanticStyle) char renderingSemanticStyle;
@property (readonly, retain, nonatomic) FigCaptureSemanticStyle *semanticStyle;
@property (readonly, nonatomic, getter=isSemanticStyleRenderingSuspended) char semanticStyleRenderingSuspended;
@property (readonly, nonatomic) int semanticStyleSceneType;
@property (readonly, nonatomic, getter=isRenderingSemanticStyleSet) char renderingSemanticStyleSet;
@property float simulatedAperture;
@property float portraitLightingEffectStrength;
@property (readonly) BWColorLookupCache *colorLookupCache;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;

- (void)dealloc;
- (id)nodeType;
- (void)changeToSemanticStyle:(id)a0 animated:(char)a1;
- (void)changeToFilters:(id)a0 animated:(char)a1;
- (void)changeToFilters:(id)a0 semanticStyle:(id)a1 animated:(char)a2;
- (void)configurationWithID:(long long)a0 updatedFormat:(id)a1 didBecomeLiveForInput:(id)a2;
- (void)didReachEndOfDataForInput:(id)a0;
- (void)didSelectFormat:(id)a0 forInput:(id)a1 forAttachedMediaKey:(id)a2;
- (void)filterDetectedFacesInSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (id)initWithCaptureDevice:(id)a0 maxLossyCompressionLevel:(int)a1 semanticStyleRenderingEnabled:(char)a2 cinematicVideoEnabled:(char)a3 smartStyleRenderingEnabled:(char)a4 portraitPreviewForegroundBlurEnabled:(char)a5 depthFilterRenderingIsAfterPreviewStitcher:(char)a6 metalCommandQueue:(id)a7 priority:(unsigned int)a8 mirroredForMetadataAdjustment:(char)a9 rotationDegreesForMetadataAdjustment:(int)a10;
- (id)nodeSubType;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)prepareForRenderingWithPreparedPixelBufferPool;
- (id)provideApplySmartStyleRenderer;
- (id)provideColorLookupCache;
- (id)provideCoreImageFilterRenderer;
- (id)provideMetalFilterRenderer;
- (id)provideStillImageCoreImageBlurMapRenderer;
- (id)provideStillImageMetalBlurMapRenderer;
- (id)provideStillImageMetalSDOFRenderer;
- (id)provideStreamingSDOFFilterRenderer;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 forInput:(id)a1;
- (void)semanticStyleSceneTypeDidChange:(int)a0;
- (void)setSemanticStyleRenderingSuspended:(char)a0 animated:(char)a1;
- (void)setSemanticStyleSet:(id)a0 fencePortSendRight:(id)a1;

@end

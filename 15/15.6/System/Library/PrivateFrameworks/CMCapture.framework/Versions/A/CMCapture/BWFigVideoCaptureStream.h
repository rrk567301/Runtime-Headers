@class NSMutableDictionary, BWFigCaptureDevice, BWSphereModeSelector, NSDictionary, NSObject, BWFigCaptureStream, BWStillImageTimeMachine, BWStillImageCaptureSettings, BWStillImageCaptureStreamSettings, NSMutableArray, NSString, NSSet, BWSecureMetadataOutputConfigurator, BWFigCaptureSynchronizedStreamsGroup, BWNoiseReductionAndSharpeningParameters, NSArray, NSData, NSNumber, BWNondisruptiveSwitchingFormatSelector;
@protocol BWFigVideoCaptureStreamDelegate, BWFigVideoCaptureStreamStillImageCaptureDelegate, BWFaceDetector, OS_tcc_identity, BWObjectDetector, OS_dispatch_queue;

@interface BWFigVideoCaptureStream : NSObject <BWFigCaptureStreamStartStopDelegate, BWPortraitEffectPropertiesDelegate> {
    BWFigCaptureDevice *_parentDevice;
    char _streamHasBeenSuspended;
    char _willStopStreaming;
    NSString *_portType;
    NSDictionary *_cachedVideoOutputConfigurations;
    NSDictionary *_cachedVideoOutputsEnabled;
    float _minimumFrameRate;
    float _maximumFrameRate;
    float _maximumSupportedFrameRate;
    float _maximumFrameRateForSensorRawOutputBufferPoolRequirements;
    char _rawBufferCompandingEnabled;
    unsigned int _sensorInterfaceRawPixelFormat;
    NSDictionary *_supportedProperties;
    NSArray *_supportedFormats;
    NSArray *_supportedOutputs;
    int _activeFormatIndex;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _activeNondisruptiveSwitchingFormatIndexLock;
    int _activeNondisruptiveSwitchingFormatIndex;
    int _activeNondisruptiveSwitchingCommandID;
    int _activeFastSwitchingMainFormatIndex;
    NSDictionary *_moduleInfo;
    char _usePinholeCameraFocalLengthInIntrinsicMatrixCalculation;
    float _exifFocalLengthMultiplier;
    char _hasFocus;
    NSDictionary *_sensorIDDictionary;
    float _baseZoomFactor;
    float _baseZoomFactorAfterGDC;
    int _deviceType;
    char _isSlave;
    NSData *_ambientViewingEnvironment;
    int _clientPID;
    NSString *_applicationID;
    struct { unsigned int val[8]; } _clientAuditToken;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _streamStateLock;
    NSObject<OS_tcc_identity> *_tccIdentity;
    NSString *_mediaEnvironment;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sphereLock;
    char _sphereEnabled;
    char _motionDataInvalid;
    BWSphereModeSelector *_sphereModeSelector;
    NSString *_lastSphereMode;
    char _sphereVideoRecenteringSupported;
    int _motionDataDeliveryEnabled;
    char _isStationary;
    char _timeMachineEnabled;
    int _timeMachineCapacity;
    BWStillImageTimeMachine *_timeMachine;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stillImageCaptureStateLock;
    char _grabNextFrame;
    BWStillImageCaptureSettings *_activeResolvedStillImageCaptureSettings;
    BWStillImageCaptureStreamSettings *_activeResolvedStillImageCaptureStreamSettings;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _largestStillImagePTS;
    NSMutableArray *_stillFusionBracketFramesMetadata;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _stillCaptureReferenceFramePTS;
    int _skippedFramesCountForAF;
    int _expectedImagesOrErrorsForCaptureStillImageNow;
    int _receivedImagesOrErrorsForCaptureStillImageNow;
    id /* block */ _stillImageBufferTimeMachineHandler;
    char _stillImageCaptureEnabled;
    NSObject<OS_dispatch_queue> *_streamNotificationQueue;
    NSMutableDictionary *_sifrRAWThumbnailsByTimeMachineIndex;
    struct CGPoint { double x; double y; } _lastDigitalFlashSphereOffsetOpticalCenter;
    NSSet *_detectedObjectTypes;
    char _objectDetectionStartupDeferred;
    NSDictionary *_faceDetectionConfiguration;
    char _faceDetectionEnabled;
    char _eyeDetectionRequired;
    NSDictionary *_lastObjectDetectionConfiguration;
    NSDictionary *_lastFaceDetectionConfiguration;
    NSNumber *_lastFaceDetectionEnabled;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _faceAndObjectDetectionLock;
    BWFigCaptureSynchronizedStreamsGroup *_synchronizedStreamsGroup;
    int _masterToSlaveFrameRateRatio;
    char _streamingRequiredWhenConfiguredAsSlave;
    NSDictionary *_geometricDistortionCoefficients;
    NSDictionary *_geometricDistortionCoefficientsCalibratedForNarrowerFieldOfView;
    char _lumaHistogramMetadataEnabled;
    NSMutableDictionary *_keypointDetectionConfiguration;
    char _keypointDetectionConfigured;
    char _keypointDetectionEnabled;
    char _stillImageKeypointDetectionEnabled;
    char _highlightRecoverySuspended;
    char _highlightRecoveryEnabledWhenConfiguredAsMasterOrSingleStream;
    char _highlightRecoveryEnabledWhenConfiguredAsSlave;
    char _videoHDRFusionEnabled;
    char _videoHDRImageStatisticsEnabled;
    BWNoiseReductionAndSharpeningParameters *_stillImageNoiseAndSharpeningParameters;
    int _band0StrengthModulation;
    char _unifiedBracketingEnabled;
    char _aeStatisticsEnabled;
    char _rawFocusScoresEnabled;
    char _focusBlurMapEnabled;
    char _zeroShutterLagEnabled;
    char _maxExposureDurationHasBeenSet;
    char _variableFrameRateVideoEnabled;
    char _cinematicFramingEnabled;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _centerStageRectOfInterest;
    int _centerStageFramingMode;
    char _backgroundBlurEnabled;
    char _studioLightingEnabled;
    char _reactionEffectsEnabled;
    char _gesturesEnabled;
    char _suppressedGesturesEnabled;
    char _backgroundReplacementEnabled;
    NSDictionary *_zoomFactorToNondisruptiveSwitchingFormatIndexSIFRBinned;
    NSDictionary *_zoomFactorToNondisruptiveSwitchingFormatIndexSIFRNonBinned;
    BWNondisruptiveSwitchingFormatSelector *_nondisruptiveSwitchingFormatSelector;
    int _mainFormatSIFRBinningFactor;
    struct CGPoint { double x; double y; } _previewShift;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _averageFrameRateCalculationLock;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstValidPTS;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastValidPTS;
    unsigned int _numberOfBuffersEmitted;
    char _deskCamActive;
    char _firstValidFrameSeen;
    BWSecureMetadataOutputConfigurator *_secureMetadataOutputConfigurator;
}

@property (readonly) BWFigCaptureStream *stream;
@property (nonatomic) id<BWFigVideoCaptureStreamDelegate> delegate;
@property (readonly) NSString *portType;
@property (readonly) int deviceType;
@property (readonly) NSArray *supportedFormats;
@property (readonly) NSArray *supportedOutputs;
@property (readonly) NSDictionary *moduleInfo;
@property (readonly) char usePinholeCameraFocalLengthInIntrinsicMatrixCalculation;
@property (readonly) float exifFocalLengthMultiplier;
@property (readonly) char hasFocus;
@property (readonly) NSString *sensorIDString;
@property (readonly) NSDictionary *sensorIDDictionary;
@property (readonly) NSDictionary *geometricDistortionCoefficients;
@property (readonly) NSDictionary *geometricDistortionCoefficientsCalibratedForNarrowerFieldOfView;
@property (readonly) char synchronizedStreamsEnabled;
@property (readonly) NSDictionary *sensorColorCalibrationData;
@property (readonly) NSData *flashCalibrationData;
@property (readonly) struct OpaqueCMClock { } *clock;
@property (readonly) struct CGPoint { double x; double y; } opticalCenterOffset;
@property (readonly) struct CGPoint { double x; double y; } opticalCenterOffsetInPhysicalSensorDimensions;
@property (readonly) struct CGPoint { double x; double y; } opticalCenterOffsetCalibratedForNarrowerFieldOfView;
@property (readonly) struct CGPoint { double x; double y; } opticalCenterOffsetCalibratedForNarrowerFieldOfViewInPhysicalSensorDimensions;
@property (readonly) char hasOpticalCenterOffsetCalibratedForNarrowerFieldOfView;
@property (readonly) float pixelSize;
@property (readonly) float pixelsPerMicron;
@property (readonly) float focalLength;
@property (readonly) float lensFNumber;
@property (readonly) float gravityFactor;
@property (readonly) NSData *cameraViewMatrix;
@property (readonly) NSData *cameraViewMatrixCalibratedForNarrowerFieldOfView;
@property (readonly) NSNumber *calibrationValidRadiusForNarrowerFieldOfView;
@property (readonly) NSNumber *calibrationValidRadiusForFullFieldOfView;
@property (readonly) float calibratedRotationAngle;
@property (readonly) NSData *cameraPoseMatrix;
@property (readonly) NSString *nonLocalizedName;
@property (nonatomic) int completedNondisruptiveSwitchingCommandID;
@property (readonly, nonatomic, getter=isNondisruptiveFastSwitchingSupported) char nondisruptiveFastSwitchingSupported;
@property (nonatomic) int fastSwitchingMainFormatIndex;
@property (readonly, nonatomic) int activeQuadraBinningFactor;
@property (readonly, nonatomic) struct { int x0; int x1; } activeSensorDimensions;
@property (nonatomic) float aeMaxGain;
@property (nonatomic) float momentCaptureVideoRecordingAEMaxGain;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } maxExposureDurationClientOverride;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } maxExposureDurationFrameworkOverride;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } maxExposureDuration;
@property (readonly, nonatomic) float maxEIT;
@property (nonatomic) float minimumFrameRate;
@property (nonatomic) float maximumFrameRate;
@property (nonatomic) float maximumSupportedFrameRate;
@property (nonatomic) float minimumSupportedFrameRate;
@property (nonatomic) float maximumFrameRateForSensorRawOutputBufferPoolRequirements;
@property (readonly, nonatomic) char rawBufferCompandingEnabled;
@property (readonly, nonatomic) unsigned int sensorInterfaceRawPixelFormat;
@property (readonly) char hasSphere;
@property (nonatomic) char enablesSphereWhenAvailable;
@property (readonly) char sphereEnabled;
@property (readonly) char sphereVideoSupported;
@property (nonatomic) char sphereVideoEnabled;
@property (nonatomic) char avoidsSphereRecentering;
@property (nonatomic) char depthDataDeliveryEnabled;
@property (nonatomic) int sphereThermalLevel;
@property (nonatomic) char isStationary;
@property (readonly, nonatomic) struct __CFString { } *currentSphereMode;
@property (readonly, nonatomic) struct __CFString { } *currentNonLowPowerSphereMode;
@property (nonatomic) char motionDataDeliveryEnabled;
@property (readonly) char motionDataInvalid;
@property (nonatomic) char faceDetectionEnabled;
@property (nonatomic) char eyeDetectionRequired;
@property (copy) NSDictionary *faceDetectionConfiguration;
@property (copy, nonatomic) NSSet *detectedObjectTypes;
@property (nonatomic) char objectDetectionStartupDeferred;
@property (readonly, nonatomic) char suspendingSupported;
@property (readonly, nonatomic) char suspended;
@property (readonly, nonatomic) char started;
@property (nonatomic) char stillImageCaptureEnabled;
@property (nonatomic) id<BWFigVideoCaptureStreamStillImageCaptureDelegate> stillImageCaptureDelegate;
@property (nonatomic) char usesStillFusionReferenceFramePTSForDidCaptureCallback;
@property (readonly) int timeMachineCapacity;
@property (nonatomic) char timeMachineEnabled;
@property (copy, nonatomic) id /* block */ stillImageBufferTimeMachineHandler;
@property (readonly, nonatomic) int activeStillImageCaptureType;
@property (readonly, nonatomic) float activeStillImageScaleFactor;
@property (readonly, nonatomic) char providesPreBracketedEV0;
@property (readonly, nonatomic) int lastStillImageCaptureType;
@property (readonly, nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } lastStillImagePTS;
@property (readonly, nonatomic, getter=isSynchronizationMaster) char synchronizationMaster;
@property (nonatomic) int masterToSlaveFrameRateRatio;
@property (nonatomic) char streamingRequiredWhenConfiguredAsSlave;
@property (nonatomic) char visionDataRequiredWhenConfiguredAsSlave;
@property (nonatomic) char firmwareTimeMachineEnabledWhenConfiguredAsSlave;
@property (nonatomic) char keypointDetectionEnabled;
@property (nonatomic) char stillImageKeypointDetectionEnabled;
@property (nonatomic) int multiBandNoiseReductionMode;
@property (nonatomic) int mainToSIFRFrameRateRatio;
@property (nonatomic) char highlightRecoverySuspended;
@property (readonly, nonatomic) char highlightRecoveryEnabled;
@property (nonatomic) char highlightRecoveryEnabledWhenConfiguredAsMasterOrSingleStream;
@property (nonatomic) char highlightRecoveryEnabledWhenConfiguredAsSlave;
@property (nonatomic) char unifiedBracketingEnabled;
@property (nonatomic) char aeStatisticsEnabled;
@property (nonatomic) char rawFocusScoresEnabled;
@property (nonatomic) char focusBlurMapEnabled;
@property (nonatomic) char digitalFlashEnabled;
@property (nonatomic) char zeroShutterLagEnabled;
@property (nonatomic) char overCaptureEnabled;
@property (retain, nonatomic) id<BWFaceDetector> faceDetector;
@property (retain, nonatomic) id<BWObjectDetector> objectDetector;
@property (nonatomic) char timeLapseEnabled;
@property (nonatomic) char lowLightVideoEnabled;
@property (nonatomic) char cinematicVideoEnabled;
@property (nonatomic) char variableFrameRateVideoEnabled;
@property (readonly, nonatomic) int autoFocusPositionSensorMode;
@property float baseZoomFactor;
@property float baseZoomFactorAfterGDC;
@property (nonatomic) char videoHDRImageStatisticsEnabled;
@property (nonatomic) char videoHDRFusionEnabled;
@property (nonatomic) char pixelFormatIsTenBit;
@property (nonatomic) char colorSpaceIsAppleLog;
@property (nonatomic) struct { int width; int height; } videoCaptureDimensions;
@property (nonatomic) struct { int width; int height; } sensorDimensions;
@property (nonatomic) struct { int width; int height; } physicalSensorDimensions;
@property (nonatomic) char cinematicFramingEnabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } centerStageRectOfInterest;
@property (nonatomic) int centerStageFramingMode;
@property (nonatomic) char backgroundBlurEnabled;
@property (nonatomic) char studioLightingEnabled;
@property (nonatomic) char reactionEffectsEnabled;
@property (nonatomic) char gesturesEnabled;
@property (nonatomic) char suppressedGesturesEnabled;
@property (nonatomic) char backgroundReplacementEnabled;
@property (nonatomic, getter=isDeskCamActive) char deskCamActive;
@property (readonly, nonatomic) float averageFrameRate;
@property (nonatomic) char continuityCameraIsWired;
@property (nonatomic) int continuityCameraClientDeviceClass;
@property (readonly, nonatomic) NSString *uniqueID;
@property (readonly, nonatomic, getter=isCMIOZoomFactorSupported) char cmioZoomFactorSupported;
@property (nonatomic) float cmioZoomFactor;
@property (nonatomic) int stillImageMaxQualityPrioritization;
@property (nonatomic) int clientUIDeviceOrientation;
@property (nonatomic) int videoStabilizationStrength;
@property (readonly, nonatomic) NSDictionary *zoomFactorToNondisruptiveSwitchingFormatIndexSIFRBinned;
@property (readonly, nonatomic) NSDictionary *zoomFactorToNondisruptiveSwitchingFormatIndexSIFRNonBinned;
@property (readonly, nonatomic) NSArray *nondisruptiveSwitchingZoomFactors;
@property (nonatomic) struct CGPoint { double x0; double x1; } previewShift;
@property struct CGPoint { double x; double y; } previewShiftAtBaseZoom;
@property (readonly, nonatomic, getter=isMultipleSensorRawBufferPoolsSupported) char multipleSensorRawBufferPoolsSupported;
@property (nonatomic) float streamingFrameRateForZoomPIPOverlay;
@property (readonly, nonatomic) BWSecureMetadataOutputConfigurator *secureMetadataOutputConfigurator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;

- (void)dealloc;
- (int)start;
- (int)setSuspended:(char)a0;
- (int)stop;
- (int)activeFormatIndex;
- (int)setActiveFormatIndex:(int)a0;
- (void)performReactionEffect:(id)a0;
- (void)setRuntimeUpdates:(id)a0;
- (int)activeNondisruptiveSwitchingCommandID;
- (int)activeNondisruptiveSwitchingFormatIndex;
- (void)captureStillImageFromTimeMachineWithStillImageSettings:(id)a0;
- (void)captureStreamDidStart;
- (void)captureStreamDidStop;
- (void)didBecomeMasterStream;
- (void)didBecomeSlaveStream;
- (void)didChangeBackgroundBlurAperture:(float)a0;
- (void)didChangeBackgroundReplacementPixelBuffer:(struct __CVBuffer { } *)a0;
- (void)didChangeGesturesEnabled:(char)a0;
- (void)didChangePortraitEffectStudioLightQuality:(long long)a0;
- (void)didChangeStudioLightingIntensity:(float)a0;
- (void)didChangeSuppressedGesturesEnabled:(char)a0;
- (void)failedToCaptureStillImageFromFirmwareWithError:(int)a0;
- (id)initWithCaptureStream:(id)a0 parentDevice:(id)a1 attributes:(id)a2 sensorIDDictionary:(id)a3 synchronizedStreamsGroup:(id)a4 applicationID:(id)a5 clientAuditToken:(struct { unsigned int x0[8]; })a6 tccIdentity:(id)a7 mediaEnvironment:(id)a8 error:(int *)a9;
- (id)noiseReductionAndSharpeningConfigurationForType:(int)a0 gain:(float)a1;
- (id)noiseReductionAndSharpeningConfigurationForType:(int)a0 gain:(float)a1 qSub:(char)a2;
- (void)prepareForStillImageCaptureFromFirmwareWithStillImageSettings:(id)a0;
- (unsigned int)reactionCount;
- (void)resignStreamStartStopDelegate;
- (void)serviceNondisruptiveSwitchingFormatForZoomFactor:(float)a0 frameStatistics:(id)a1 imageControlMode:(int)a2 stillImageDigitalFlashMode:(int)a3 isStationary:(char)a4 binnedSIFROnSecondaryStreamAllowed:(char)a5 ignoreZoomFactorAndQuadraSubPixelSceneMonitoring:(char)a6 ultraHighResolutionZeroShutterLagEnabled:(char)a7;
- (int)setActiveNondisruptiveSwitchingFormatIndex:(int)a0;
- (int)setActiveNondisruptiveSwitchingFormatIndex:(int)a0 maximumAllowedFrameRate:(int)a1 minimumFrameRate:(int)a2 maximumFrameRate:(int)a3;
- (void)setReactionsInProgressChangedHandler:(id /* block */)a0;
- (void)setSuppressedGestureHandler:(id /* block */)a0;
- (void)setTemporalNoiseReductionConfigurationBand0Enabled:(char)a0 rawEnabled:(char)a1 modulation:(int)a2 adaptiveOverscanEnabled:(char)a3 strengthHighEnabled:(char)a4;
- (void)setVisionDataKeypointDetectionThreshold:(float)a0;
- (void)setVisionDataSuspended:(char)a0;
- (void)setZoomFactorToNondisruptiveSwitchingFormatIndexSIFRBinned:(id)a0 zoomFactorToNondisruptiveSwitchingFormatIndexSIFRNonBinned:(id)a1 ultraHighResolutionNondisruptiveStreamingFormatIndex:(int)a2 mainFormatSIFRBinningFactor:(int)a3 quadraSubPixelSwitchingParameters:(id)a4;
- (void)sourceNodeDidDropFrameWithPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)sourceNodeDidStartStreaming;
- (void)sourceNodeDidStopStreaming:(char)a0;
- (void)sourceNodeFailedToStartStreaming;
- (char)sourceNodeShouldDiscardStillImageSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 sensorRawOutput:(char)a1;
- (void)sourceNodeWillDiscardVideoSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (int)sourceNodeWillEmitDepthSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (void)sourceNodeWillEmitDetectedFacesSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (int)sourceNodeWillEmitPointCloudSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (void)sourceNodeWillEmitStillImageQuadraBufferProcessingError:(int)a0;
- (int)sourceNodeWillEmitStillImageSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (int)sourceNodeWillEmitVideoSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 drivesCameraControls:(char)a1 deliversStills:(char)a2;
- (void)sourceNodeWillStartStreaming;
- (void)sourceNodeWillStopStreaming;
- (int)synchronizedStreamsGroupDidUpdateActiveNondisruptiveSwitchingFormatIndex:(int)a0 activeNondisruptiveSwitchingCommandID:(int)a1 maximumAllowedFrameRate:(int)a2 minimumFrameRate:(int)a3 maximumFrameRate:(int)a4;
- (void)triggerVisionDataBurst;
- (void)updateAETables;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })updateMaxExposureDuration;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })updateMaxExposureDurationClientOverride:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)willBecomeMasterStream;
- (void)willBecomeSlaveStream;
- (void)willCaptureStillImageFromFirmware;

@end

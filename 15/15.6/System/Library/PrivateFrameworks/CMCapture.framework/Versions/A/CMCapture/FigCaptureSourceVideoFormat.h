@class FigCaptureSourceCompanionFormat, NSArray, NSString;

@interface FigCaptureSourceVideoFormat : FigCaptureSourceFormat <FigXPCCoding, NSSecureCoding> {
    struct { int width; int height; } _previewDimensions;
    NSArray *_frontEndScalerCompanionFormats;
    FigCaptureSourceCompanionFormat *_nonSIFRCompanionFormat;
    FigCaptureSourceCompanionFormat *_fullBinSIFRCompanionFormat;
    FigCaptureSourceCompanionFormat *_midFrameSynchronizationOptimizedCompanionFormat;
    FigCaptureSourceCompanionFormat *_actionCameraCompanionFormat;
    FigCaptureSourceCompanionFormat *_depthCompanionFormat;
    FigCaptureSourceCompanionFormat *_ultraHighResCompanionFormat;
    FigCaptureSourceCompanionFormat *_fsdNetCompanionFormat;
    FigCaptureSourceCompanionFormat *_stereoVideoCompanionFormat;
    FigCaptureSourceVideoFormat *_cinematicFramingFormat;
    FigCaptureSourceVideoFormat *_geometricDistortionCorrectionFormat;
    NSArray *_supportedDepthDataFormats;
    FigCaptureSourceVideoFormat *_fastSwitchingMainCaptureStreamFormat;
}

@property (class, readonly) char supportsSecureCoding;

@property (readonly) struct { int x0; int x1; } sensorDimensions;
@property (readonly) struct { int x0; int x1; } previewDimensions;
@property (readonly) float fieldOfView;
@property (readonly) float geometricDistortionCorrectedFieldOfView;
@property (readonly, getter=isBinned) char binned;
@property (readonly) int stabilizationTypeOverrideForStandard;
@property (readonly) int stabilizationTypeOverrideForCinematic;
@property (readonly) float stabilizationOverscanPercentageOverrideForStandard;
@property (readonly) float stabilizationOverscanPercentageOverrideForCinematic;
@property (readonly) float cinematicStabilizationExtendedLookAheadDuration;
@property (readonly) float maxZoomFactor;
@property (readonly) float zoomFactorUpscaleThreshold;
@property (readonly) float minISO;
@property (readonly) float maxISO;
@property (readonly) struct { long long x0; int x1; unsigned int x2; long long x3; } minExposureDuration;
@property (readonly) struct { long long x0; int x1; unsigned int x2; long long x3; } maxExposureDuration;
@property (readonly) char hasSensorHDRCompanionIndex;
@property (readonly) char prefersSensorHDREnabled;
@property (readonly, getter=isSIFRSupported) char SIFRSupported;
@property (readonly, getter=isLowLightVideoCaptureSupported) char lowLightVideoCaptureSupported;
@property (readonly, getter=isVariableFrameRateVideoCaptureSupported) char variableFrameRateVideoCaptureSupported;
@property (readonly, getter=isVideoGreenGhostMitigationSupported) char videoGreenGhostMitigationSupported;
@property (readonly, getter=isVideoGreenGhostMitigationUsesLightSourceMaskAndKeypointDescriptorData) char videoGreenGhostMitigationUsesLightSourceMaskAndKeypointDescriptorData;
@property (readonly) float stabilizationOverscanPercentageOverrideForCinematicExtendedEnhanced;
@property (readonly, getter=isVideoHDRFusionSupported) char videoHDRFusionSupported;
@property (readonly) int autoFocusSystem;
@property (readonly, getter=isFocusPixelBlurScoreSupported) char focusPixelBlurScoreSupported;
@property (readonly) char capturesStillsFromVideoStream;
@property (readonly, getter=isSphereAssistedAutoFocusEnabled) char sphereAssistedAutoFocusEnabled;
@property (readonly, getter=isPhotoFormat) char photoFormat;
@property (readonly, getter=isStillImageStabilizationSupported) char stillImageStabilizationSupported;
@property (readonly, getter=isIrisSupported) char irisSupported;
@property (readonly, getter=isIrisVideoStabilizationSupported) char irisVideoStabilizationSupported;
@property (readonly, getter=isHDRSupported) char hdrSupported;
@property (readonly, getter=isHDROriginalImageDeliverySupported) char hdrOriginalImageDeliverySupported;
@property (readonly, getter=isHighResStillImageSupported) char highResStillImageSupported;
@property (readonly, getter=isQuadraHighResStillImageSupported) char quadraHighResStillImageSupported;
@property (readonly, getter=isStereoFusionSupported) char stereoFusionSupported;
@property (readonly, getter=isRedEyeReductionSupported) char redEyeReductionSupported;
@property (readonly, getter=isDigitalFlashSupported) char digitalFlashSupported;
@property (readonly, getter=isDeepFusionSupported) char deepFusionSupported;
@property (readonly, getter=isZeroShutterLagSupported) char zeroShutterLagSupported;
@property (readonly, getter=isZeroShutterLagWithDepthSupported) char zeroShutterLagWithDepthSupported;
@property (readonly, getter=isUltraHighResolutionZeroShutterLagSupported) char ultraHighResolutionZeroShutterLagSupported;
@property (readonly, getter=isResponsiveShutterSupported) char responsiveShutterSupported;
@property (readonly, getter=isSemanticStyleRenderingSupported) char semanticStyleRenderingSupported;
@property (readonly, getter=isSmartStyleRenderingSupported) char smartStyleRenderingSupported;
@property (readonly, getter=isApplyStandardSmartStyleForStillsWhenNoStyleRequestedSupported) char applyStandardSmartStyleForStillsWhenNoStyleRequestedSupported;
@property (readonly, getter=isHighPhotoQualitySupported) char highPhotoQualitySupported;
@property (readonly, getter=isWideColorSupported) char wideColorSupported;
@property (readonly) NSArray *supportedColorSpaces;
@property (readonly) unsigned int supportedRawPixelFormat;
@property (readonly) unsigned int internalDemosaicedRawPixelFormat;
@property (readonly) unsigned int supportedDemosaicedRawPixelFormat;
@property (readonly) float defaultSimulatedAperture;
@property (readonly) float minSimulatedAperture;
@property (readonly) float maxSimulatedAperture;
@property (readonly) float defaultPortraitLightingEffectStrength;
@property (readonly) float minPortraitLightingEffectStrength;
@property (readonly) float maxPortraitLightingEffectStrength;
@property (readonly) NSArray *AVCaptureSessionPresets;
@property (readonly, getter=isStreamingDisparitySupported) char streamingDisparitySupported;
@property (readonly, getter=isStreamingDepthSupported) char streamingDepthSupported;
@property (readonly, getter=isStillImageDisparitySupported) char stillImageDisparitySupported;
@property (readonly, getter=isStillImageDepthSupported) char stillImageDepthSupported;
@property (readonly) float clientMaxContinuousZoomFactorForDepthDataDelivery;
@property (readonly) float maxContinuousZoomFactorForDepthDataDelivery;
@property (readonly, getter=isPortraitAutoSuggestSupported) char portraitAutoSuggestSupported;
@property (readonly) NSArray *supportedDepthDataFormats;
@property (readonly, getter=isMomentCaptureMovieRecordingSupported) char momentCaptureMovieRecordingSupported;
@property (readonly, getter=isSpatialOverCaptureSupported) char spatialOverCaptureSupported;
@property (readonly) float spatialOverCapturePercentage;
@property (readonly, getter=isNonDestructiveCropSupported) char nonDestructiveCropSupported;
@property (readonly, getter=isDeferredPhotoProcessingSupported) char deferredPhotoProcessingSupported;
@property (readonly, getter=isMultiCamSupported) char multiCamSupported;
@property (readonly) float hardwareCost;
@property (readonly) int baseSensorPowerConsumption;
@property (readonly) int variableSensorPowerConsumption;
@property (readonly) int ispPowerConsumption;
@property (readonly, nonatomic) char intelligentDistortionCorrectionSupported;
@property (readonly, getter=isCinematicFramingSupported) char cinematicFramingSupported;
@property (readonly, getter=isCinematicFramingSupportedForContinuityCapture) char cinematicFramingSupportedForContinuityCapture;
@property (readonly, getter=isCinematicFramingProvidedBySource) char cinematicFramingProvidedBySource;
@property (readonly, getter=isCenterStageRectOfInterestSupported) char centerStageRectOfInterestSupported;
@property (readonly) FigCaptureSourceVideoFormat *cinematicFramingFormat;
@property (readonly, getter=isManualFramingSupported) char manualFramingSupported;
@property (readonly) FigCaptureSourceVideoFormat *geometricDistortionCorrectionFormat;
@property (readonly, getter=isBackgroundBlurSupported) char backgroundBlurSupported;
@property (readonly, getter=isBackgroundBlurSupportedForContinuityCapture) char backgroundBlurSupportedForContinuityCapture;
@property (readonly, getter=isBackgroundBlurProvidedBySource) char backgroundBlurProvidedBySource;
@property (readonly, getter=isStudioLightingSupported) char studioLightingSupported;
@property (readonly, getter=isStudioLightingSupportedForContinuityCapture) char studioLightingSupportedForContinuityCapture;
@property (readonly, getter=isStudioLightingProvidedBySource) char studioLightingProvidedBySource;
@property (readonly) char reactionEffectsSupported;
@property (readonly) char reactionEffectsSupportedForContinuityCapture;
@property (readonly) char reactionEffectsProvidedBySource;
@property (readonly, getter=isBackgroundReplacementSupported) char backgroundReplacementSupported;
@property (readonly, getter=isBackgroundReplacementSupportedForContinuityCapture) char backgroundReplacementSupportedForContinuityCapture;
@property (readonly, getter=isBackgroundReplacementProvidedBySource) char backgroundReplacementProvidedBySource;
@property (readonly) NSArray *secondaryNativeResolutionZoomFactors;
@property (readonly, nonatomic, getter=isStereoVideoCaptureSupported) char stereoVideoCaptureSupported;
@property (readonly, nonatomic, getter=isStereoPhotoCaptureSupported) char stereoPhotoCaptureSupported;
@property (readonly) float maxContinuousZoomFactorForCinematicVideo;
@property (readonly, getter=isConstantColorSupported) char constantColorSupported;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;

- (void)dealloc;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (unsigned int)mediaType;
- (float)defaultMaxFrameRateForSessionPreset:(id)a0;
- (float)defaultMinFrameRateForSessionPreset:(id)a0;
- (id)highResStillImageDimensions;
- (char)isStabilizationModeSupported:(int)a0;
- (char)isVideoStabilizationStrengthSupported:(int)a0;
- (char)configureForDigitalFlashSupport;
- (id)copyXPCEncoding;
- (id)digitalFlashDetectedObjectTypes;
- (char)distortionCompensationSupported;
- (char)isCompatibleWithInfraredFormat:(id)a0;
- (float)actionCameraAEMaxGainScaleFactor;
- (id)actionCameraCompanionFormat;
- (float)aeMaxGain;
- (struct { int x0; int x1; })cinematicFramingOutputDimensions;
- (char)configureForDepthDataDelivery;
- (int)configureForGreenGhostMitigationVersion;
- (char)configureForNonDisruptiveFullBinSIFRSwitching;
- (char)configureForSoftISPSupport;
- (char)configureForSpatialOverCaptureSupport;
- (char)configureForStereoPhotoCaptureSupport;
- (char)configureForStillImageStabilizationSupport;
- (char)configureForSupplementalTimeOfFlightCameraSupport;
- (int)constantColorVersion;
- (id)copyWithNewPixelFormat:(unsigned int)a0;
- (struct { int x0; int x1; })cropDimensionsForFES;
- (id)depthCompanionFormat;
- (float)depthDataAEMaxGain;
- (float)depthDataMaxIntegrationTimeOverride;
- (id)fastSwitchingMainCaptureStreamFormat;
- (int)fesBinningFactorHorizontal;
- (struct { int x0; int x1; })fesInputCropDimensions;
- (int)formatIndex;
- (id)frontEndScalerCompanionFormats;
- (id)fsdNetCompanionFormat;
- (id)fullBinSIFRCompanionFormat;
- (char)fullBinSIFROnSecondaryCameraAllowed;
- (char)gdcInStillImageSinkPipelineSupported;
- (struct { int x0; int x1; })geometricDistortionCorrectedNativeDimensions;
- (int)greenGhostMitigationVersion;
- (int)horizontalSensorBinningFactor;
- (id)initWithFigCaptureStreamFormatDictionary:(id)a0;
- (id)initWithFigCaptureStreamFormatDictionary:(id)a0 pixelFormatOverride:(unsigned int)a1;
- (id)initWithXPCEncoding:(id)a0;
- (char)isCaptureTimePhotoCurationSupported;
- (char)isContentAwareAWBSupported;
- (char)isContentAwareEnhancementSupported;
- (char)isDeepZoomSupported;
- (char)isDigitalFlashRawNightModeSupported;
- (char)isFastSwitchingConfigurationRequired;
- (char)isGNRHDRSupported;
- (char)isGainMapSupported;
- (char)isISPMultiBandNoiseReductionSupported;
- (char)isLearnedNRSupported;
- (char)isMultiIlluminantWhiteBalanceSupported;
- (char)isSIFRStillImageCaptureWithDepthDataDisabled;
- (char)isSecondaryScalerUnavailable;
- (char)isStagePreviewRenderingSupported;
- (char)isStillImageISPChromaNoiseReductionEnabled;
- (char)isStillImageISPMultiBandNoiseReductionSupported;
- (char)isStudioAndContourPreviewRenderingSupported;
- (char)isSupplementalTimeOfFlightCameraSupported;
- (char)isValidDerivedSourceFormatForUnderlyingFormat:(id)a0;
- (char)isVideoSTFMetadataEnabled;
- (char)isVideoSTFSupported;
- (char)isWideAsStatsMasterEnabled;
- (char)isWideDigitalFlashAvailableShallowDepthOfFieldEffectsEnabled;
- (char)ispChromaNoiseReductionEnabled;
- (float)lowLightVideoAEMaxGain;
- (char)machineLearningVideoNoiseReductionSupported;
- (int)maxIntegrationTimeOverride;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maxVisibleSensorRect;
- (id)midFrameSynchronizationOptimizedCompanionFormat;
- (struct { int x0; int x1; })nativeDimensions;
- (id)nonSIFRCompanionFormat;
- (struct { int x0; int x1; })postGDCCropDimensions;
- (struct { int x0; int x1; })preGDCSensorCropDimensions;
- (int)preferredPreviewMaxFrameRate;
- (int)previewImageQueueSyncStrategy;
- (id)quadraSubPixelSwitchingParameters;
- (id)rawLensShadingCorrection;
- (int)redEyeReductionVersion;
- (int)semanticDevelopmentVersion;
- (char)semanticRenderingSupported;
- (struct CGPoint { double x0; double x1; })sensorCenterOffset;
- (struct { int x0; int x1; })sensorCropDimensions;
- (int)sensorHDRCompanionIndex;
- (char)shouldPreferSIFRFormatWithHighlightRecoveryEnabled:(char)a0;
- (int)sifrBinningFactorOverrideForNondisruptiveSwitching;
- (struct { int x0; int x1; })sourceCropAspectRatio;
- (struct CGSize { double x0; double x1; })stabilizationOverscanFromSensorForFESCropDimensions:(struct { int x0; int x1; })a0 preferSIFRFormat:(char)a1 geometricDistortionCorrection:(char)a2 useFESCompanionIndex:(char)a3;
- (float)stereoVideoAEMaxGain;
- (id)stereoVideoCompanionFormat;
- (struct { int x0; int x1; })stillImageGDCInDCProcessorOutputCropDimensions;
- (int)stillImageGDCSourceMode;
- (char)sushiRawBlackBorderingEnabled;
- (char)sushiRawSupported;
- (char)swfrSupported;
- (char)temporalNoiseReductionBand0Disabled;
- (int)temporalNoiseReductionMode;
- (char)temporalNoiseReductionRawEnabled;
- (id)ultraHighResCompanionFormat;
- (char)usesPacked10BitFirmwareStillImageOutputPixelFormat;
- (float)variableFrameRateVideoCaptureFromFWAEMaxGain;
- (int)verticalSensorBinningFactor;
- (char)zeroShutterLagRequiresUserInitiatedCaptureRequestTime;

@end

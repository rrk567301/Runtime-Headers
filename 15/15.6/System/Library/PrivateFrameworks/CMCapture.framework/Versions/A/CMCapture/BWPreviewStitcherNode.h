@class BWPreviewRegistration, NSMutableDictionary, CIContext, NSDictionary, BWRamp, FigCaptureMachPortSendRight, BWPixelBufferPool, NSObject, BWFencedAnimationQueue, BWSpringSimulation, NSString, BWMemoryPoolFlushAssertion, NSArray;
@protocol BWPreviewStitcherDelegate, OS_dispatch_queue, OS_dispatch_group;

@interface BWPreviewStitcherNode : BWNode {
    struct { int width; int height; } _outputDimensions;
    int _rotationDegrees;
    char _flipHorizontal;
    char _flipVertical;
    double _primaryCaptureRectYInset;
    int _primaryCaptureRectPixelInset;
    double _primaryCaptureRectCenterX;
    int _primaryCaptureRectCenterXPixelOffset;
    int _primaryCaptureRectCenterXPixelOffsetFudge;
    char _previewsWideBeforeSlaveStreamStarts;
    char _generatesHistogram;
    int _maxLossyCompressionLevel;
    char _superWideFallbackForMacroSceneEnabled;
    char _haveSuperWideCamera;
    char _haveTeleCamera;
    float _superWideBaseZoomFactor;
    float _wideBaseZoomFactor;
    float _teleBaseZoomFactor;
    float _superWideCorrectedBaseZoomFactor;
    float _wideBaseZoomFactorOverride;
    char _wideBaseZoomFactorDynamicOverrideEnabled;
    float _wideBaseZoomFactorDynamicOverride;
    float _wideBaseZoomFactorDynamicOverrideScaled;
    float _wideBaseZoomFactorOverrideMacro;
    float _widePinholeFocalLengthInfinity;
    float _widePinholeFocalLengthMacro;
    float _dynamicWideBaseZoomFactorSmoothingFactor;
    char _inputBuffersHaveHorizontalOverscanOnly;
    float _dynamicCameraScaleMSRMarginPercentage;
    NSArray *_wideNondisruptiveSwitchingZoomFactors;
    float _wideNondisruptiveSwitchingScaleFactor;
    float _lastWideNondisruptiveSwitchingScaleFactor;
    NSArray *_superWideNondisruptiveSwitchingZoomFactors;
    float _superWideNondisruptiveSwitchingScaleFactor;
    char _superWideNondisruptiveSwitchingWaitsForSuperWideFallback;
    char _wideNondisruptiveSwitchingCroppedFrameEnabled;
    char _wideNondisruptiveSwitchingCurrentFrameIsCropped;
    float _teleBaseZoomFactorOverride;
    struct { int width; int height; } _sensorBinningFactor;
    float _shiftSmoothingFactor;
    char _applyShift;
    struct CGPoint { double x; double y; } _superWideToWideBravoShift;
    struct CGPoint { double x; double y; } _wideToTeleBravoShift;
    struct OpaqueVTPixelRotationSession { } *_intermediateRotationSession;
    struct OpaqueVTPixelRotationSession { } *_outputRotationSession;
    struct opaqueCMFormatDescription { } *_outputFormatDescription;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _outputTransform;
    id<BWPreviewStitcherDelegate> _delegate;
    char _stoppingForModeSwitch;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _configurationLock;
    char _deviceIsStationary;
    char _pendingRegistrationAfterDeviceBecomesStationary;
    char _registrationEnabled;
    int _lastRegisteredFrameCaptureID;
    char _lastRegistrationEnabled;
    int _registrationType;
    char _excludeStaticComponentFromAlignmentShiftsEnabled;
    BWPreviewRegistration *_registration;
    char _registrationResourcesAllocated;
    char _firstRegistrationCompleted;
    char _firstRegistrationIsSynchronous;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _shiftCorrectionsUpdateLock;
    struct BWPreviewStitcherShiftCorrection { struct CGPoint { double x; double y; } currentValue; struct CGPoint { double x; double y; } updatedValue; char valueIsUpdated; char lastRegistrationWasValid; int registeredFrameCaptureID; BWRamp *rampX; BWRamp *rampY; } _wideToTeleShiftCorrections[3];
    struct BWPreviewStitcherShiftCorrection { struct CGPoint { double x; double y; } currentValue; struct CGPoint { double x; double y; } updatedValue; char valueIsUpdated; char lastRegistrationWasValid; int registeredFrameCaptureID; BWRamp *rampX; BWRamp *rampY; } _superWideToWideShiftCorrections[3];
    int _registrationFrameSkipCount;
    int _registrationUpdateRampFrameCount;
    char _registerFirstFrame;
    NSDictionary *_registrationTranslationOverride;
    double _primaryCameraAspectRatio;
    float _lastPrimaryCameraAspectRatio;
    FigCaptureMachPortSendRight *_fencePortSendRight;
    char _displaysWidestCameraOnly;
    char _displaysPrimaryCameraOnly;
    char _drawWiderCameraOnly;
    char _currentZoomRequiresWiderCamera;
    char _lastZoomingOrSwitchingCameras;
    float _rampZoomFactorOfInterest;
    float _rampStartZoomFactor;
    NSString *_lastRecommendedMasterPortType;
    NSString *_lastPreferredMasterPortType;
    NSString *_lastNarrowerPortType;
    char _lastNarrowerCameraIsTele;
    BWRamp *_teleOpacityRamp;
    BWPixelBufferPool *_teleOpacityPool;
    BWMemoryPoolFlushAssertion *_teleOpacityPoolReadyAssertion;
    struct { int width; int height; } _teleOpacityPoolDimensions;
    CIContext *_teleOpacityCIContext;
    char _teleOpacityRampForSuperMacroFallbackTransition;
    int _screenScale;
    char _frameRateBasedRampsEnabled;
    NSObject<OS_dispatch_queue> *_ciPreheatingQueue;
    NSObject<OS_dispatch_group> *_ciPreheatingGroup;
    char _havePreheatedCI;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstFramePTS;
    char _edgeFeatheringEnabled;
    char _showFeatherGradient;
    float _edgeFeatheringAspectCompensation;
    float _zoomInFeatheringInnerRadiusStart;
    float _zoomInFeatheringInnerRadiusEnd;
    float _zoomInFeatheringOuterRadiusStart;
    float _zoomInFeatheringOuterRadiusEnd;
    float _zoomOutFeatheringInnerRadiusStart;
    float _zoomOutFeatheringInnerRadiusEnd;
    float _zoomOutFeatheringOuterRadiusStart;
    float _zoomOutFeatheringOuterRadiusEnd;
    char _featherEdgesForOpacityRamp;
    char _superWideCompensateForMissingFOV;
    struct opaqueCMSampleBuffer { } *_lastSampleBuffer;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastInputPTS;
    char _multiCameraStitchingEnabled;
    char _aspectRatioChanging;
    long long _lastRenderTime;
    float _additionalZoomFactor;
    float _additionalZoomFactorSpringStartFactor;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _additionalZoomFactorSpringStartPTS;
    BWSpringSimulation *_additionalZoomFactorSpring;
    NSMutableDictionary *_blackFilledBorderRectsBySurfaceID;
    char _forceBlackFillBorderEnabled;
    char _overCaptureNotSupportedByDownstreamNodes;
    char _rebuildingGraphForTrueVideoTransition;
    char _trueVideoCaptureEnabled;
    char _trueVideoCaptureFormatIs4K;
    double _trueVideoCaptureAdditionalZoomFactor;
    char _waitsForFencedUpdateBeforeFirstEmit;
    int _overCaptureStatus;
    struct BWSmartCameraScene { char enabled; char confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _wideFocusDistanceFarEnoughForStitching;
    char _hideSuperWideOverCaptureWhenTooClose;
    char _superWideOccludedByWide;
    char _superWideDrawingSuspendedUntilFocusImproves;
    char _hideSuperWideStitchingWhenTooClose;
    char _hidePartialOverCapture;
    struct BWSmartCameraScene { char enabled; char confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _widerCameraFoVFillsOverCapture;
    float _uiZoomFactor;
    char _deviceTooHotDimmingEnabled;
    int _wideFallbackMode;
    struct BWSmartCameraScene { char enabled; char confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _wideFocusDistanceFarEnoughToUseTele;
    char _wideFocusingOneShot;
    char _teleFocusingOneShot;
    BWRamp *_wideFallbackShiftRamp;
    struct CGPoint { double x; double y; } _wideFallbackRecenteringShiftOffset;
    char _wantWideFallbackDueToTeleAEAF;
    char _wideFallbackShiftRampTargetValueIsWide;
    char _wideFallbackUserInitiatedTuningEnabled;
    char _lastWideCameraFallbackWasUserInitiated;
    int _lastRecommendedMasterSelectionReason;
    struct BWSmartCameraScene { char enabled; char confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _wideFocusDistanceFarEnoughToUseWide;
    BWRamp *_superWideFallbackShiftRamp;
    char _superWideFallbackShiftRampTargetValueIsSuperWide;
    struct CGPoint { double x; double y; } _superWideFallbackRecenteringShiftOffset;
    float _superWideFallbackRecenteringStrength;
    char _wantSuperWideFallback;
    char _superWideFallbackTransitioningWithStreamingPortTypesChanged;
    char _superMacroUserInitiatedFallbackTuningEnabled;
    char _lastSuperWideCameraFallbackWasUserInitiated;
    char _inSuperMacroRange;
    char _superMacroRangeRegistrationTuningEnabled;
    struct BWSmartCameraScene { char enabled; char confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _superWideFocusDistanceFarEnoughForRegistration;
    char _superMacroOpacityRampOnFullPrimaryRectEnabled;
    char _superMacroEdgeFeatheringBlurEnabled;
    float _superMacroEdgeFeatheringBlurInset;
    char _superMacroEdgeFeatheringShowBlurMask;
    char _waitsForRegistrationToComplete;
    BWFencedAnimationQueue *_fencedAnimationQueue;
    char _momentMovieRecordingRecenteringEnabled;
    int _momentMovieRecordingRecenteringShiftRampFrameCount;
    char _borderBlurEnabled;
    float _borderBlurStrength;
    char _borderStretchEnabled;
    float _borderStretchScaleFactor;
    float _borderStretchNextNarrowerBaseZoomFactorMultiplier;
    char _zoomPIPOverlayEnabled;
    char _zoomPIPSingleStreamModeEnabled;
    char _zoomPIPUseNarrowerCamera;
    float _zoomPIPMinimumUIZoomFactor;
    char _previewTapRegistered;
    char _fractionalSourceRectEnabled;
    char _propagateDepth;
    char _propagateStyles;
    char _smartStyleRenderingEnabledInTrueVideoGraph;
    char _didSetTimeToStartStyleEngineApplyWithLearnedCoefficientsAfterExitingTrueVideo;
    float _timeToStarStyleEngineApplyWithLearnedCoefficientsAfterExitingTrueVideo;
    char _parallaxMitigationBasedOnZoomFactorEnabled;
    struct BWSmartCameraScene { char enabled; char confident; float confidenceFilterRatio; float filteredConfidence; float confidenceThreshold; float confidenceHysteresisValueLag; short confidenceHysteresisTemporalLagBeforeConfident; short confidenceHysteresisTemporalLagBeforeNotConfident; short currentTemporalHysteresis; char resetTemporalHysteresisAndFilteringOnNextUpdate; char *name; } _narrowerCameraFoVFillsOverCapture;
    char _superWideSensorCenterOffsetEnabled;
    char _delayedEndOfDataEnabled;
    char _haveDelayedEOD;
    char _stoppingWithISPFastSwitchEnabled;
    char _trueVideoTransitionInProgress;
    char _trueVideoTransitionEnteringIncreasingAspectRatio;
    char _trueVideoTransitionEnteringAspectRatio;
    double _trueVideoTransitionPercentComplete;
    char _allowEdgeInsetDuringTrueVideoTransitions;
    struct opaqueCMSampleBuffer { } *_transitionReferenceSampleBuffer;
    struct opaqueCMSampleBuffer { } *_transitionReferenceLearnedCoefficientsSampleBuffer;
    int _transitionReferenceLearnedCoefficientsSampleBufferApplyCount;
    BWRamp *_transitionReferenceOpacityRamp;
    BWRamp *_trueVideoHDRtoSDRBlendRamp;
    char _thermalPressureIsCritical;
    char _inputIsHDR;
    long long _firstDroppedUnfencedFrameHostTime;
    NSObject<OS_dispatch_queue> *_metalSubmissionAndCompletionQueue;
    NSObject<OS_dispatch_queue> *_restitchingQueue;
}

@property (nonatomic) id<BWPreviewStitcherDelegate> delegate;
@property (readonly) double trueVideoTransitionPercentComplete;
@property (readonly) struct opaqueCMSampleBuffer { } *trueVideoTransitionReferenceSampleBuffer;
@property char displaysWidestCameraOnly;
@property (nonatomic) char previewTapRegistered;

+ (void)initialize;

- (void)dealloc;
- (int)rotationDegrees;
- (void)setRotationDegrees:(int)a0;
- (id)nodeType;
- (void)setTrueVideoCaptureEnabled:(char)a0;
- (void)setForceBlackFillBorderEnabled:(char)a0;
- (char)centerRegistrationValid;
- (void)configurationWithID:(long long)a0 updatedFormat:(id)a1 didBecomeLiveForInput:(id)a2;
- (void)didReachEndOfDataForInput:(id)a0;
- (void)didSelectFormat:(id)a0 forInput:(id)a1;
- (char)flipHorizontal;
- (char)flipVertical;
- (id)focusingDescription;
- (char)forceBlackFillBorderEnabled;
- (char)generatesHistogram;
- (id)initWithCameraInfoByPortType:(id)a0 sensorBinningFactor:(struct { int x0; int x1; })a1 inputBuffersHaveHorizontalOverscanOnly:(char)a2 registrationType:(int)a3 registrationMetalCommandQueue:(id)a4 excludeStaticComponentFromAlignmentShifts:(char)a5 propagateDepth:(char)a6 propagateStyles:(char)a7 parallaxMitigationBasedOnZoomFactorEnabled:(char)a8 zoomPIPOverlayEnabled:(char)a9 zoomPIPMinimumUIZoomFactor:(float)a10 zoomPIPSingleStreamModeEnabled:(char)a11 preallocateOutputBufferPool:(char)a12;
- (id)initWithStitchingDisabledAndZoomPIPOverlayEnabled:(char)a0 zoomPIPMinimumUIZoomFactor:(float)a1 zoomPIPSingleStreamModeEnabled:(char)a2 propagateDepth:(char)a3 propagateStyles:(char)a4 parallaxMitigationBasedOnZoomFactorEnabled:(char)a5 preallocateOutputBufferPool:(char)a6;
- (void)markDelayedEndOfData;
- (int)maxLossyCompressionLevel;
- (id)nodeSubType;
- (struct { int x0; int x1; })outputDimensions;
- (char)overCaptureNotSupportedByDownstreamNodes;
- (id)overCaptureStatusString;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (id)previewRegistrationType;
- (char)previewsWideBeforeSlaveStreamStarts;
- (double)primaryCameraAspectRatio;
- (id)primaryCameraShortDisplayName;
- (double)primaryCaptureRectCenterX;
- (double)primaryCaptureRectYInset;
- (void)rampToAdditionalZoomFactor:(double)a0 momentMovieRecordingRecenteringEnabled:(char)a1;
- (char)rebuildingGraphForTrueVideoTransition;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 forInput:(id)a1;
- (void)setFlipHorizontal:(char)a0;
- (void)setFlipVertical:(char)a0;
- (void)setGeneratesHistogram:(char)a0;
- (void)setMaxLossyCompressionLevel:(int)a0;
- (void)setOutputDimensions:(struct { int x0; int x1; })a0;
- (void)setOverCaptureNotSupportedByDownstreamNodes:(char)a0;
- (void)setPreviewsWideBeforeSlaveStreamStarts:(char)a0;
- (void)setPrimaryCameraAspectRatio:(double)a0;
- (void)setPrimaryCaptureRectAspectRatio:(double)a0 center:(struct CGPoint { double x0; double x1; })a1 trueVideoTransitionPercentComplete:(double)a2 trueVideoTransitionReferenceSampleBuffer:(struct opaqueCMSampleBuffer { } *)a3 fencePortSendRight:(id)a4;
- (void)setPrimaryCaptureRectCenterX:(double)a0;
- (void)setPrimaryCaptureRectYInset:(double)a0;
- (void)setRebuildingGraphForTrueVideoTransition:(char)a0;
- (void)setStoppingForModeSwitch:(char)a0 delayedEndOfDataEnabled:(char)a1 ispFastSwitchEnabled:(char)a2 smartStyleRenderingEnabledInTrueVideoGraph:(char)a3;
- (void)setSuperWideFallbackForMacroSceneEnabled:(char)a0;
- (void)setThermalPressureIsCritical:(char)a0;
- (void)setTrueVideoCaptureAdditionalZoomFactor:(double)a0;
- (void)setTrueVideoCaptureFormatIs4K:(char)a0;
- (void)setWaitsForFencedUpdateBeforeFirstEmit:(char)a0;
- (void)setWaitsForRegistrationToComplete:(char)a0;
- (char)superWideFallbackForMacroSceneEnabled;
- (float)superWideFocusDistance;
- (char)thermalPressureIsCritical;
- (char)tooCloseFor1xStitching;
- (char)tooCloseForSuperWideRegistration;
- (double)trueVideoCaptureAdditionalZoomFactor;
- (char)trueVideoCaptureEnabled;
- (char)trueVideoCaptureFormatIs4K;
- (char)waitsForFencedUpdateBeforeFirstEmit;
- (char)waitsForRegistrationToComplete;
- (float)wideBaseZoomFactor;
- (id)wideFallbackDescription;
- (float)wideFocusDistance;

@end

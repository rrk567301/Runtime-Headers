@class NSMutableDictionary, NSDictionary, NSObject, BWStats, BWVISProcessorController, BWIrisStillImageMovieMetadataCache, NSString, BWLimitedGMErrorLogger, BWFigCaptureISPProcessingSession, NSArray, NSNumber, NSData, BWVISProcessorControllerConfiguration, BWVideoFormatRequirements;
@protocol OS_dispatch_semaphore;

@interface BWVISNode : BWNode <BWVISProcessorDelegate, BWNodeBackPressureSource> {
    int _stabilizationMethod;
    int _stabilizationType;
    BWVISProcessorControllerConfiguration *_processorControllerConfiguration;
    BWVISProcessorController *_processorController;
    char _flushingProcessor;
    NSArray *_supportedInputPixelFormats;
    NSArray *_supportedOutputPixelFormats;
    int _maxLossyCompressionLevel;
    struct { int width; int height; } _outputDimensions;
    int _gpuPriority;
    char _sphereVideoEnabled;
    char _onlyGeneratingTransforms;
    char _stabilizeMetadata;
    char _flipHorizontalExcludingIris;
    char _liveFlipHorizontal;
    int _pipelineTraceID;
    char _videoSTFEnabled;
    char _videoGreenGhostMitigationEnabled;
    char _lowLightGreenGhostMitigationEnabled;
    char _lightSourceMaskAndKeypointDescriptorDataEnabled;
    char _fillExtendedRowsOfOutputBuffer;
    char _usingExtendedCVISLivePhotoStabilization;
    char _stabilizeForLongPressVideo;
    int _visExecutionMode;
    NSDictionary *_offlineCameraInfoByPortType;
    float _videoStabilizationOverscanOverride;
    char _generatesDroppedSampleMarkerBuffers;
    BWVideoFormatRequirements *_visOutputFormatRequirements;
    NSObject<OS_dispatch_semaphore> *_emitSampleBufferSemaphore;
    int _numberOfBuffersEmitted;
    double _maxFrameRate;
    BWIrisStillImageMovieMetadataCache *_irisStillImageMovieMetadataCache;
    NSNumber *_cachedLivePhotoKeyFrame;
    NSString *_cachedStillImageKeyFrameSettingsID;
    BWLimitedGMErrorLogger *_limitedGMErrorLogger;
    struct BWVISMotionTensors { NSDictionary *entries; struct { long long value; int timescale; unsigned int flags; long long epoch; } framePTS; } _frameMotionTensorsRingBuffer[10];
    unsigned int _frameMotionTensorsRingBufferWriteIndex;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _frameMotionTensorsRingBuffeLock;
    int _outputColorSpaceProperties;
    BWStats *_ioSurfaceCompressionRatioStats;
    int _pixelBufferCompressionType;
    unsigned long long _totalCompressedDataSize;
    unsigned long long _totalUncompressedDataSize;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastEmittedPTS;
    char _frameRateConversionEnabled;
    char _stabilizeDepthAttachments;
    struct { int width; int height; } _outputDepthDimensions;
    NSMutableDictionary *_intermediatePixelBufferPools;
    char _smartStyleRenderingEnabled;
    char _smartStyleReversibilityEnabled;
    char _smartStyleReversibilityUses4x3Spotlights;
    char _stabilizeForSmartStyleReversibility;
    char _lowResImageUsedByVideoEncoderEnabled;
    struct opaqueCMFormatDescription { } *_lowResImageUsedByVideoEncoderFormatDescription;
    char _personSegmentationRenderingEnabled;
    NSData *_foregroundColorCube;
    NSData *_backgroundColorCube;
    NSData *_cameraExtrinsicMatrix;
    char _zoomSmoothingEnabled;
    char _overrideFinalCropRect;
    int _stereoMode;
    NSObject<OS_dispatch_semaphore> *_processingSemaphore;
}

@property (readonly) int cinematicLookAheadFrameCount;
@property (readonly, nonatomic) BWFigCaptureISPProcessingSession *ispProcessingSession;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *emitSampleBufferSemaphore;
@property char firstFrameProcessed;

+ (void)initialize;

- (void)dealloc;
- (void)flush;
- (id)nodeType;
- (void)didCompleteProcessingOfBuffer:(struct opaqueCMSampleBuffer { } *)a0 withStatus:(int)a1;
- (void)setSmartStyleRenderingEnabled:(char)a0;
- (void)setVideoGreenGhostMitigationEnabled:(char)a0;
- (char)smartStyleRenderingEnabled;
- (void)willStartProcessingBuffer:(struct opaqueCMSampleBuffer { } *)a0 withStatus:(int)a1;
- (char)videoSTFEnabled;
- (int)pipelineTraceID;
- (void)setFlipHorizontalExcludingIris:(char)a0;
- (id)cameraExtrinsicMatrix;
- (void)configurationWithID:(long long)a0 updatedFormat:(id)a1 didBecomeLiveForInput:(id)a2;
- (void)didReachEndOfDataForInput:(id)a0;
- (void)didSelectFormat:(id)a0 forInput:(id)a1 forAttachedMediaKey:(id)a2;
- (char)flipHorizontalExcludingIris;
- (char)frameRateConversionEnabled;
- (char)generatesDroppedSampleMarkerBuffers;
- (void)handleDroppedSample:(id)a0 forInput:(id)a1;
- (id)initWithSensorIDDict:(id)a0 stabilizationMethod:(int)a1 stabilizationType:(int)a2 ispProcessingSession:(id)a3 maxSupportedFrameRate:(float)a4 activeMaxFrameRate:(float)a5 gpuPriority:(int)a6 metalSubmissionAndCompletionQueuePriority:(unsigned int)a7 motionAttachmentsSource:(int)a8 fillExtendedRowsOfOutputBuffer:(char)a9 overCaptureEnabled:(char)a10 stereoMode:(int)a11 videoStabilizationOverscanOverride:(float)a12 videoStabilizationStrength:(int)a13 zoomSmoothingEnabled:(char)a14 applyFrameCropOffset:(char)a15 motionMetadataPreloadingEnabled:(char)a16 visExecutionMode:(int)a17 livePhotoCleanOutputRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a18 cameraInfoByPortType:(id)a19 cvisExtendedLookAheadDuration:(float)a20 distortionCorrectionEnabledPortTypes:(id)a21 distortionCompensationEnabledPortTypes:(id)a22 minDistanceForBravoParallaxShift:(float)a23 lightSourceMaskAndKeypointDescriptorDataEnabled:(char)a24 attachStabilizedOutputCameraTrajectory:(char)a25;
- (id)irisStillImageMovieMetadataCache;
- (char)lowResImageUsedByVideoEncoderEnabled;
- (int)maxLossyCompressionLevel;
- (id)nodeSubType;
- (int)outputColorSpaceProperties;
- (struct { int x0; int x1; })outputDepthDimensions;
- (struct { int x0; int x1; })outputDimensions;
- (char)personSegmentationRenderingEnabled;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (id)processingSemaphore;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 forInput:(id)a1;
- (void)setCameraExtrinsicMatrix:(id)a0;
- (void)setFrameRateConversionEnabled:(char)a0;
- (void)setGeneratesDroppedSampleMarkerBuffers:(char)a0;
- (void)setIrisStillImageMovieMetadataCache:(id)a0;
- (void)setLowResImageUsedByVideoEncoderEnabled:(char)a0;
- (void)setMaxLossyCompressionLevel:(int)a0;
- (void)setOutputColorSpaceProperties:(int)a0;
- (void)setOutputDepthDimensions:(struct { int x0; int x1; })a0;
- (void)setOutputDimensions:(struct { int x0; int x1; })a0;
- (void)setPersonSegmentationRenderingEnabled:(char)a0;
- (void)setPipelineTraceID:(int)a0;
- (void)setProcessingSemaphore:(id)a0;
- (void)setSmartStyleReversibilityEnabled:(char)a0;
- (void)setSphereVideoEnabled:(char)a0;
- (void)setStabilizeDepthAttachments:(char)a0;
- (void)setVideoSTFEnabled:(char)a0;
- (char)smartStyleReversibilityEnabled;
- (char)sphereVideoEnabled;
- (char)stabilizeDepthAttachments;
- (char)videoGreenGhostMitigationEnabled;

@end

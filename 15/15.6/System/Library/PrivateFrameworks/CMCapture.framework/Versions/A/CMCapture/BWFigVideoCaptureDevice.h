@class BWActionCameraFlickerAvoidanceMonitor, BWMovingWindowStats, NSDictionary, BWStats, NSMutableSet, NSMutableArray, BWFigCaptureDevice, BWHistogramStats, BWAmbientLightSensor, BWStereoVideoCaptureSceneMonitor, BWInferenceResult, BWZoomCommandHandler, BWMemoryPool, BWFigVideoCaptureSynchronizedStreamsGroup, BWImageControlModeTransitionMonitor, NSNumber, BWFigCaptureDeviceVendor, BWStillImageCaptureSettings, BWFigVideoCaptureStream, BWDeviceMotionActivityDetector, BWMetadataTimeMachine, BWBravoStreamSelector, BWVariableFrameRateSelector, NSArray, BWFrameStatisticsByPortType, BWRamp, NSMutableDictionary, FigWeakReference, BWZoomRange, NSString, NSObject, FigStateMachine, BWStreamStartStopSynchronizer, NSSet;
@protocol BWFigVideoCaptureDeviceSubjectSelectionDelegate, BWSupplementalPointCloudCaptureDeviceDelegate, BWPreviewTimeMachineProcessor, BWFigVideoCaptureDeviceManualCinematicFramingDelegate, OS_dispatch_queue, BWAttachedMediaTimeMachineDelegate, BWPortraitSceneMonitor, BWFigVideoCaptureDeviceZoomFactorChangedDelegate, BWAdaptiveBracketingController, BWFigVideoCaptureDeviceCenterStageDelegate;

@interface BWFigVideoCaptureDevice : NSObject <BWZoomCompletionDelegate, BWSupplementalPointCloudCaptureDeviceDelegate> {
    BWFigCaptureDeviceVendor *_deviceVendor;
    struct { unsigned int val[8]; } _clientAuditToken;
    int _clientPID;
    char _isRunningInXCTest;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _clientAuditTokenLock;
    NSMutableDictionary *_cameraInfoByPortType;
    NSDictionary *_supportedProperties;
    unsigned int _activeDeviceMask;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sensorRawPoolLock;
    char _multipleSensorRawBufferPoolsEnabled;
    NSMutableDictionary *_sensorRawPools;
    unsigned int _stillImageSensorRawPoolRetainedBufferCounts[3];
    unsigned int _timeOfFlightCameraUseCaseMask;
    unsigned int _timeOfFlightCameraProjectorModeMask;
    char _cinematicFramingEnabled;
    long long _cinematicFramingStartTime;
    long long _cinematicFramingTotalTime;
    char _stereoVideoCaptureEnabled;
    char _stereoPhotoCaptureEnabled;
    NSDictionary *_stereoPhotoSNRSimpleMovingAverageByPortType;
    NSMutableDictionary *_stereoPhotoLastSceneSNRByPortType;
    char _deskCamActive;
    long long _deskCamStartTime;
    char _backgroundBlurEnabled;
    long long _backgroundBlurStartTime;
    long long _backgroundBlurTotalTime;
    float _backgroundBlurApertureInitial;
    char _backgroundBlurApertureChanged;
    float _backgroundBlurAperture;
    char _studioLightingEnabled;
    long long _studioLightingStartTime;
    long long _studioLightingTotalTime;
    float _studioLightingIntensityInitial;
    char _studioLightingIntensityChanged;
    float _studioLightingIntensity;
    char _reactionEffectsEnabled;
    char _gesturesEnabled;
    char _suppressedGesturesEnabled;
    long long _reactionEffectsEnabledStartTime;
    long long _reactionEffectsEnabledTotalTime;
    long long _gesturesEnabledStartTime;
    long long _gesturesEnabledTotalTime;
    char _backgroundReplacementEnabled;
    long long _backgroundReplacementStartTime;
    long long _backgroundReplacementTotalTime;
    char _backgroundReplacementPixelBufferChanged;
    struct __CVBuffer { } *_backgroundReplacementPixelBuffer;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _mainCamMLVNRStartTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _mainCamMLVNRTotalTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _deskCamMLVNRStartTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _deskCamMLVNRTotalTime;
    struct __CFString { } *_faceDetectionDrivenImageProcessingModeString;
    unsigned int _faceDrivenAFDisabledCount;
    unsigned int _faceDrivenAEDisabledCount;
    unsigned int _maxFacesDetected;
    BWHistogramStats *_luxLevelStats;
    char _multiCamEnabled;
    NSString *_lastEmittedPortType;
    NSDictionary *_attributes;
    NSString *_cameraManufacturer;
    NSNumber *_cameraLocation;
    NSString *_cameraNonLocalizedName;
    BWFigVideoCaptureStream *_lastRecommendedMasterCaptureStream;
    BWStreamStartStopSynchronizer *_synchronizedStreamsStartStopSynchronizer;
    char _superWideCaptureStreamAsStatsMasterPreferred;
    char _increaseSlaveFrameRateWhenWaitingForExposureFocusStability;
    char _increaseSlaveFrameRateWhenWaitingForExposureFocusStabilityOnlyWhenWideIsMaster;
    char _elevateSlaveFrameRateForSuperBravoWithDepthEnabled;
    struct { struct { float x; float y; } previousSpherePosition[3]; struct { float x; float y; } currentSpherePosition[3]; struct { float x; float y; } filteredSpherePosition[3]; struct { float x; float y; } estimatedSagPosition[3]; BOOL supportAverageSpherePositionKey; struct { unsigned int configuration; struct { float x; float y; } opticalCenterOffset[3]; float baseZoomFactor[3]; float baseZoomFactorAdjustment[3]; float pixelSizeInMicron[3]; int quadraBinningFactor[3]; float currentToReferenceScaleRatio[7]; float currentToReferenceExtrinsicMatrix[7][12]; int referencePortIndex; int previousPortIndex; struct { float x; float y; } parallaxShift; struct { float x; float y; } stashedSpherePos[3]; float lastPracticalFocalLength[3]; float lastEffectiveFocalLength[3]; float lastPinholeCameraFocalLength[3]; BOOL decoupleBravoParallaxShiftFromSphereLensPosition; float minDistanceForBravoParallaxShift; float sphereScalingFactorUsedForParallaxShiftComputation; } bravoData; double sagEstimationAlpha; } _sphereShiftState;
    int _sphereShiftStateLastUpdateCaptureID;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sphereShiftStateLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _switchOverLock;
    char _synchronizedStreamsSwitchOverInProgress;
    char _slaveSwitchOverInProgressPreventingStillCapture;
    char _nonDisruptiveSwitchOverInProgress;
    BWFigVideoCaptureStream *_currentMasterCaptureStream;
    BWFigVideoCaptureStream *_currentPreferredCaptureStream;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _currentMasterCaptureStreamLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _bravoMasterLock;
    BWBravoStreamSelector *_bravoStreamSelector;
    int _maxNumberOfActiveSlaveStreams;
    char _bravoStreamSelectionInformWhenFocusScanCompletes;
    struct { long long selectionBehavior; unsigned long long restrictedSelectionConditions; } _bravoStreamSelectionConfiguration;
    struct { long long selectionBehavior; unsigned long long restrictedSelectionConditions; } _bravoStreamSelectionConfigurationForRecording;
    char _bravoStreamSelectionConfigurationForRecordingEnabled;
    float _synchronizedStreamsStereoFusionLowerBoundZoomFactor;
    float _synchronizedStreamsStereoFusionUpperBoundZoomFactor;
    int _synchronizedStreamsNominalSlaveFrameRate;
    int _synchronizedStreamsNominalMasterToSlaveFrameRateRatio;
    int _synchronizedStreamsElevatedSlaveFrameRate;
    int _synchronizedStreamsElevatedMasterToSlaveFrameRateRatio;
    int _synchronizedStreamsNominalSlaveFrameRateForDepthDataDelivery;
    int _synchronizedStreamsElevatedSlaveFrameRateForDepthDataDelivery;
    int _synchronizedStreamsElevatedSlaveFrameRateForDepthDataDeliveryWhenWaitingForExposureFocusStability;
    int _synchronizedStreamsSlaveFrameRateForOverCapture;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _parallaxMitigationStrengthLock;
    float _parallaxMitigationStrength;
    int _parallaxMitigationRampDuration;
    int _parallaxMitigationRampShape;
    BWRamp *_parallaxMitigationRamp;
    BWFigVideoCaptureStream *_parallaxMitigationTargetCaptureStream;
    char _macroFocusDetectionEnabled;
    float _macroFocusDistanceLowerThreshold;
    float _macroFocusDistanceUpperThreshold;
    char _macroFocusDetected;
    char _depthDataDeliveryEnabled;
    float _depthMaxFrameRate;
    NSDictionary *_maxISPZoomFactorsForDepthDataByMasterPortType;
    char _shallowDepthOfFieldEffectEnabled;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sdofLock;
    int _sdofEffectStatus;
    int _sdofStagePreviewStatus;
    char _sdofSceneMonitoringEnabled;
    id<BWPortraitSceneMonitor> _portraitSceneMonitor;
    char _stereoVideoCaptureSceneMonitoringEnabled;
    BWStereoVideoCaptureSceneMonitor *_stereoVideoCaptureSceneMonitor;
    int _stereoVideoCaptureStatus;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stereoVideoCaptureSceneMonitorLock;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    NSObject<OS_dispatch_queue> *_focusAndExposureUpdateQueue;
    void /* function */ *_createAutofocusSampleBufferProcessorFunction;
    NSObject<OS_dispatch_queue> *_autofocusProcessorQueue;
    NSMutableDictionary *_autofocusCachedPropertiesDictionary;
    struct OpaqueFigSimpleMutex { } *_autofocusStatusMutex;
    struct OpaqueFigSampleBufferProcessor { } *_autofocusProcessor;
    char _allowAEStableNotifications;
    char _aeStable;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _aeRequestTime;
    int _aeRequestCount;
    int _aeFrameWaitCount;
    char _allowAWBStableNotifications;
    char _awbStable;
    char _autofocusProcessorCachedPropertyDeferred;
    char _exposureLockDeferred;
    char _whiteBalanceGainsDeferred;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cachedExposureRectNormalizedInSensorSpace;
    char _isCachedExposureRectForSpotMetering;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cachedFocusRectNormalizedInSensorSpace;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _regionOfInterestWithoutOverscan;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _regionOfInterestWithoutOverscanNormalizedInSensorSpace;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _nonDestructiveCropSizeLock;
    struct CGSize { double width; double height; } _nonDestructiveCropSize;
    char _useAutoImageControlMode;
    int _autoImageControlMode;
    int _currentImageControlMode;
    char _autoImageControlModeWantsSphereVideoEnabled;
    double _transitionMonitorCoarseFocusTimeoutForVideoRecording;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _autoImageControlModeCompletionLock;
    BWImageControlModeTransitionMonitor *_autoImageControlModeTransitionMonitor;
    id /* block */ _autoImageControlModeCompletionHandler;
    int _apsMode;
    char _collectAPSStatistics;
    char _hasAPSStatistics;
    struct BWAPSStatistics { float stdDataFromAPSForWide; float maxDataFromAPSForWide; float minDataFromAPSForWide; float stdDataFromSphereForWide; float maxDataFromSphereForWide; float minDataFromSphereForWide; float stdDataFromAPSForTele; float maxDataFromAPSForTele; float minDataFromAPSForTele; float stdDataFromSphereForTele; float maxDataFromSphereForTele; float minDataFromSphereForTele; float stdDataFromAccel; float maxDataFromAccel; float minDataFromAccel; float stdDataFromGyro; float maxDataFromGyro; float minDataFromGyro; } _apsStatistics;
    int _numAPSStatisticsSamples;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _frameStatisticsLock;
    BWFrameStatisticsByPortType *_currentFrameStatisticsByPortType;
    BWFrameStatisticsByPortType *_tempFrameStatisticsByPortType;
    char _stillImageCaptureNowAfterAutofocusTimeoutSupported;
    int _stillImageContrastBasedAutofocusTimeout;
    int _stillImagePhaseDetectionAutofocusTimeout;
    char _hasNightMode;
    int _unifiedBracketingMode;
    char _sifrStillImageCaptureEnabledIfAvailable;
    char _ubSIFREnabled;
    char _ubHDRWithBiasEnabled;
    char _ubNonHDRBrightLightCaptureEnabled;
    NSDictionary *_ubCaptureParametersByPortType;
    BWMetadataTimeMachine *_ubZeroShutterLagMetadataTimeMachine;
    char _ubZeroShutterLagMetadataTimeMachineReady;
    NSMutableDictionary *_ubZeroShutterLagMetadataTimeMachineSecondaryStreamsReadyFrameDelayByPortType;
    long long _ubZeroShutterLagWaitingForTimeMachinesCurrentSettingsID;
    long long _ubZeroShutterLagWaitingForTimeMachinesLastCancelledSettingsID;
    char _hasSoftISP;
    char _softISPEnabled;
    char _sensorRawStillImageOutputsEnabled;
    NSMutableDictionary *_highResolutionNondisruptiveSwitchingFormatIndexByPortType;
    char _hasDeepFusion;
    char _deepFusionEnabled;
    char _depthWithDeepFusionEnabled;
    unsigned int _learnedNRMode;
    char _learnedNRUltraHighResolutionDowngradeEnabled;
    char _swfrEnabled;
    char _constantColorEnabled;
    char _streamingImageIntentNeedsUpdate;
    int _currentStreamingImageIntent;
    int _nextStreamingImageIntent;
    float _streamingImageIntentDefaultMinimumFrameRate;
    float _streamingImageIntentDefaultMaximumFrameRate;
    NSMutableDictionary *_streamingImageIntentDefaultAEMaxGainByPortType;
    NSMutableDictionary *_streamingImageIntentDefaultMaxExposureDurationFrameworkOverrideByPortType;
    char _updateStreamingImageIntentWhenMasterStreamChanges;
    float _timeLapseCaptureRate;
    int _timeLapseStationaryCount;
    int _timeLapseStationaryHysteresisLag;
    int _timeLapseDirectionalMotionDetectionEnabled;
    char _globalToneMappingEnabled;
    NSNumber *_globalToneMappingEnabledOverride;
    char _hasDigitalFlash;
    char _digitalFlashEnabled;
    char _digitalFlashMetadataEnabled;
    NSArray *_digitalFlashDetectedObjectTypes;
    NSSet *_digitalFlashSupportedPortTypes;
    int _streamingDigitalFlashMode;
    char _digitalFlashUseWideForSceneMonitoring;
    char _digitalFlashMacroAutoFlashEnabled;
    int _digitalFlashModeForSceneMonitoring;
    int _digitalFlashStatus;
    double _lastDigitalFlashStatusEIT;
    float _lastDigitalFlashRecommendRegularFlashSNR;
    double _lastDigitalFlashRecommendRegularFlashBacklitRelativeAEDifference;
    BWMovingWindowStats *_digitalFlashRecommendRegularFlashBacklitRelativeAEDifferenceSimpleMovingAverage;
    double _digitalFlashExposureTimes[3];
    NSMutableDictionary *_digitalFlashExposureTimesForSceneMonitoringByPortType;
    char _digitalFlashLockingAE;
    char _digitalFlashLockingAF;
    char _digitalFlashCaptureInProgress;
    int _digitalFlashCaptureSupplementalPointCloudCaptureDeviceFrameRateMaxSkippedFrames;
    FigWeakReference *_supplementalPointCloudCaptureDeviceDelegate;
    FigWeakReference *_supplementalPointCloudCaptureDevice;
    float _supplementalPointCloudCaptureDeviceStreamingMinimumFrameRate;
    float _supplementalPointCloudCaptureDeviceCaptureMinimumFrameRate;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _supplementalPointCloudCaptureDeviceLock;
    float _supplementalPointCloudCaptureDeviceCurrentFrameRate;
    NSMutableDictionary *_autoFlashNormalizedSNRThresholdByPortType;
    float _autoTorchNormalizedSNRThreshold;
    float _lastFlashSceneSNR;
    BWMovingWindowStats *_autoFlashSNRSimpleMovingAverage;
    float _macroLastFlashSceneSNR;
    BWMovingWindowStats *_macroAutoFlashSNRSimpleMovingAverage;
    double _stillImageStabilizationIntegrationTimeThreshold;
    double _synchronizedStreamsStillImageStabilizationTeleIntegrationTimeThreshold;
    double _synchronizedStreamsOISSISStereoFusionTeleMinIntegrationTime;
    float _synchronizedStreamsOISSISStereoFusionTeleMinGain;
    struct OpaqueFigSimpleMutex { } *_torchLock;
    char _autoTorchEnabled;
    char _autoTorchStatsCheckedForVideoRecording;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _autoTorchRampedUpTime;
    char _torchWillBeEnabledForVideoRecording;
    char _torchActive;
    float _torchLevel;
    float _maxTorchLevel;
    int _flashModeForSceneMonitoring;
    int _hdrModeForSceneMonitoring;
    int _qualityPrioritizationForSceneMonitoring;
    char _flashScene;
    char _hdrScene;
    char _sisScene;
    char _forcePostingForSceneDetectionNotifications;
    char _stillImageCaptureEnabled;
    float _quadraLowLightResampledNormalizedSNRThreshold;
    char _eagerSwitchingToMinNonDisruptiveZoomFactorInVideoPreview;
    int _eagerSwitchingTeleToWideNonDisruptiveSwitchingDelayInFrameCount;
    int _eagerSwitchingTeleToWideNonDisruptiveSwitchingDelayCounter;
    NSObject<OS_dispatch_queue> *_stillImageDispatchQueue;
    int _numberOfCompletedStillCaptures;
    int _skippedFramesCountForStillImageCaptureRetry;
    int _maxSkippedFramesForStillImageCaptureRetry;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stillImageCaptureStateLock;
    BWStillImageCaptureSettings *_stillImageCaptureSettings;
    NSDictionary *_stillImageCaptureNowOptions;
    NSDictionary *_stillImageCaptureStreamProperties;
    char _stillImageCaptureNowUsingSyncGroup;
    int _stillImageCaptureNowBusyCount;
    char _retryCaptureStillImageNow;
    FigStateMachine *_stillImageCaptureStateMachine;
    id /* block */ _prepareToCaptureStillImageNowCompletionHandler;
    id /* block */ _pendingPrepareToCaptureStillImageNowCompletionHandler;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastStillImageCaptureEndPTS;
    char _stillImageCaptureWithQSubSwitchingEnabled;
    char _stillImageCaptureWithQSubSwitchingInProgress;
    int _stillImageCaptureWithQSubSwitchingSkippedFramesCount;
    BWAmbientLightSensor *_ambientLightSensor;
    int _currentManualFocusCompletedID;
    int _currentManualExposureCompletedID;
    int _currentBiasedExposureCompletedID;
    int _currentManualWhiteBalanceCompletedID;
    NSMutableDictionary *_observedProperties;
    struct OpaqueFigSimpleMutex { } *_manualPropertyMutex;
    float _lensPosition;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _exposureDuration;
    float _ISO;
    float _exposureTargetBias;
    float _exposureTargetOffset;
    struct { float redGain; float greenGain; float blueGain; } _deviceWhiteBalanceGains;
    struct { float redGain; float greenGain; float blueGain; } _grayWorldWhiteBalanceGains;
    NSObject<OS_dispatch_queue> *_whiteBalanceGainsQueue;
    NSMutableDictionary *_whiteBalanceGains;
    NSMutableArray *_whiteBalanceGainsOrderedKeys;
    int _whiteBalanceModeForExif;
    NSObject<OS_dispatch_queue> *_zoomFactorUpdateQueue;
    float _maxISPZoomFactor;
    float _newISPZoomFactor;
    float _lastRequestedZoomFactor;
    float _newTotalZoomFactor;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _zoomFactorLock;
    float _rampDefaultBravoSnapDistanceFraction;
    int _ispZoomLatency;
    int _maxIspZoomLatency;
    int _lastISPZoomLatency;
    char _usingIncreasedIspZoomLatency;
    char _nondisruptiveSwitchingBasedOnZoomFactorEnabled;
    char _superWideNondisruptiveSwitchingBasedOnZoomFactorEnabled;
    float _wideCameraMaxNonDisruptiveSwitchingZoomFactor;
    float _superWideCameraMaxNonDisruptiveSwitchingZoomFactor;
    char _nondisruptiveSwitchingAdditionalISPZoomDelayEnabled;
    float _additionalISPZoomDelayMinZoomFactorMultiplier;
    float _additionalISPZoomDelayMaxZoomFactorMultiplier;
    struct BWZoomRampTuningSettings { struct BWContinuousDirectInputSettings { float exponentialSnapFraction; float exponentialRampDuration; float zoomOutDurationScale; } continuousDirectPreview; struct BWContinuousDirectInputSettings { float exponentialSnapFraction; float exponentialRampDuration; float zoomOutDurationScale; } continuousDirectRecording; char continuousDirectEarlySwitchOverForZoomInEnabled; char continuousDirectRecordingSpringRampsEnabled; struct BWSpringSettings { float snapFraction; float tension; float friction; } continuousDirectRecordingZoomInSpring; struct BWSpringSettings { float snapFraction; float tension; float friction; } continuousDirectRecordingZoomOutSpring; struct BWSpringSettings { float snapFraction; float tension; float friction; } continuousDirectOverCaptureRecordingZoomInSpring; struct BWSpringSettings { float snapFraction; float tension; float friction; } continuousDirectOverCaptureRecordingZoomOutSpring; struct BWContinuousIndirectInputSettings { float exponentialSnapFraction; float exponentialRampDurationPreview; float exponentialRampDurationOverCapturePreview; float zoomOutDurationScalePreview; float baseZoomFactorSnapFractionPreview; float baseZoomFactorSnapFractionOverCapturePreview; float exponentialRampDurationRecording; float zoomOutDurationScaleRecording; } continuousIndirect; struct BWSpringSettings { float snapFraction; float tension; float friction; } jumpZoomIn[3]; struct BWSpringSettings { float snapFraction; float tension; float friction; } jumpZoomOut[3]; struct BWSpringSettings { float snapFraction; float tension; float friction; } jumpFrontFacingZoomIn[3]; struct BWSpringSettings { float snapFraction; float tension; float friction; } jumpFrontFacingZoomOut[3]; float earlySwitchOverScaleFactorForZoomIn; float allowableMinimumDigitalZoomFactorDuringZoomOut; } _zoomRampTuning;
    char _cmioZoomStreamPropertySupported;
    BWDeviceMotionActivityDetector *_deviceMotionActivityDetector;
    char _stationary;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _ptsOfLastFrameForStationaryCheck;
    float _minimumTimeBetweenStationaryChecks;
    char _stationaryChecksWhileStillImageCaptureInProgressEnabled;
    FigWeakReference *_smartStyleAttachedMediaTimeMachineDelegate;
    id<BWFigVideoCaptureDeviceZoomFactorChangedDelegate> _zoomFactorChangedDelegate;
    NSString *_zoomFactorChangedDelegatePortType;
    char _smartCameraEnabled;
    char _smartCameraFreezeMotionEnabled;
    char _smartCameraFaceSceneEnabled;
    float _smartCameraFaceSceneRecentlyDetectedThreshold;
    int _currentSemanticStyleSceneType;
    int _currentExifOrientation;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _currentExifOrientationLock;
    struct { unsigned short major; unsigned short minor; unsigned short patch; } _smartCameraVersion;
    BWInferenceResult *_mostRecentSmartCameraResult;
    BWInferenceResult *_currentStillSmartCameraResult;
    char _zeroShutterLagEnabled;
    char _ultraHighResolutionZeroShutterLagSupportEnabled;
    char _ultraHighResolutionZeroShutterLagEnabled;
    char _ultraHighResolutionZeroShutterLagThermalMitigationSupportEnabled;
    char _ultraHighResolutionZeroShutterLagThermalMitigationEnabled;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _zeroShutterLagEarliestAllowedPTS;
    float _zeroShutterLagStillImageStabilizationGainThreshold;
    float _zeroShutterLagSynchronizedStreamsStillImageStabilizationTeleGainThreshold;
    NSArray *_previewMetadataForTimeMachinePTSRange;
    NSMutableSet *_shouldCheckAPSOffsetEstimatorByPortType;
    NSMutableSet *_shouldCheckCriticalFocusErrorByPortType;
    NSMutableSet *_criticalFocusErrorOccurredByPortType;
    NSMutableSet *_portTypesToCheckForDegradedAutoFocus;
    NSMutableDictionary *_degradedAutoFocusStatusByPortTypes;
    NSMutableDictionary *_apsMaxDynamicGainDerateByPortTypes;
    NSMutableDictionary *_apsMaxTopEndDynamicBufferByPortTypes;
    NSMutableDictionary *_sphereJitterDetectionAttemptsByPortType;
    NSMutableDictionary *_sphereJitterSuccessfulDetectionsByPortType;
    long long _streamingStartTime;
    unsigned int _numberOfPhotoCaptures;
    unsigned int _numberOfBurstPhotoCaptures;
    unsigned int _numberOfBalancedPhotoCaptures;
    int _streamingStartCameraPosture;
    int _streamingStartExifOrientation;
    unsigned int _timeToFirstPhotoCapture;
    long long _previousPhotoCaptureTime;
    unsigned int _minTimeSinceLastPhotoCapture;
    unsigned int _maxTimeSinceLastPhotoCapture;
    unsigned int _numberOfButtonMashingCapturesAtRate0;
    unsigned int _numberOfButtonMashingCapturesAtRate1;
    unsigned int _numberOfButtonMashingEventsAtRate0;
    unsigned int _numberOfButtonMashingEventsAtRate1;
    char _buttonMashingEventStartedAtRate0;
    char _buttonMashingEventStartedAtRate1;
    unsigned int _longestButtonMashingEventAtRate0;
    unsigned int _longestButtonMashingEventAtRate1;
    unsigned int _lengthOfCurrentButtonMashingEventAtRate0;
    unsigned int _lengthOfCurrentButtonMashingEventAtRate1;
    NSMutableDictionary *_moduleActuatorVendorByPortType;
    NSString *_sphereMode;
    float _structuredLightIdleTemperatureFirstReading;
    float _structuredLightActiveTemperatureFirstReading;
    float _structuredLightActiveTemperatureLastReading;
    BWStats *_structuredLightActiveTemperatureStats;
    BWStats *_infaredSensorTemperatureStats;
    unsigned long long _infraredProjectorUptimeInUsForLowPowerSparse;
    unsigned long long _infraredProjectorUptimeInUsForHighPowerSparse;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _previousInfraredFramePTS;
    NSMutableDictionary *_sensorTemperatureStatsByPortType;
    long long _accumulatedSystemPressureLevel;
    long long _timeOfLastSystemPressureChange;
    int _maxSystemPressureLevel;
    long long _timeToCriticalSystemPressureInMS;
    unsigned int _factorsContributingToMaxSystemPressureLevel;
    char _regionOfInterestForCameraControlsSupported;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _regionOfInterestForCameraControls;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _regionOfInterestForCameraControlsNormalizedInSensorSpace;
    struct { int width; int height; } _activeSensorRegionForCameraControls;
    char _cinematicFramingFeedbackForCameraControlsROIEnabled;
    BWMemoryPool *_memoryPool;
    char _overCaptureEnabled;
    char _overrideClientZoomRamps;
    char _masterStreamSwitchingEnabledForOverCapture;
    char _streamSelectorEnabledForOverCapture;
    char _standbySlaveFrameSkippingEnabledForOverCapture;
    char _overCaptureLockedStreamsEnabled;
    NSArray *_overCaptureLockedStreams;
    int _overCaptureLockedStreamsTimeoutCounter;
    int _overCaptureCameraTransitionFrameCount;
    char _applyPreviewShiftToFocusAndExposureRect;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _previewShiftInSensorSpaceLock;
    struct CGPoint { double x; double y; } _previewShiftInSensorSpace;
    char _overCaptureApplyPreviewShiftToROIForSuperWideCamera;
    char _momentCaptureVideoRecordingSupported;
    char _variableFrameRateControlEnabled;
    BWVariableFrameRateSelector *_variableFrameRateSelector;
    float _variableFrameRateNewSuggestedFrameRate;
    float _variableFrameRateLastRequestedFrameRate;
    NSMutableDictionary *_variableFrameRateLastRequestedAEMaxGainByPortType;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _variableFrameRateUpdateLock;
    NSObject<OS_dispatch_queue> *_variableFrameRateUpdateQueue;
    char _cinematicVideoEnabled;
    NSMutableDictionary *_cinematicVideoFocusRequest;
    int _videoStabilizationStrength;
    BWActionCameraFlickerAvoidanceMonitor *_flickerAvoidanceMonitor;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _systemPressureStatusLock;
    int _systemPressureLevel;
    int _thermalSystemPressureLevel;
    int _peakPowerSystemPressureLevel;
    char _needsToRelieveSystemPressure;
    unsigned int _systemPressureFactors;
    char _allowSystemPressureToForceOffOverCaptureActiveSlaveStream;
    char _overCaptureActiveSlaveStreamForcedOff;
    int _overCaptureActiveSlaveStreamRemainingFramesUntilShutdown;
    char _restorationOfForcedOffOverCaptureActiveSlaveStreamEnabled;
    float _timeOfFlightStreamingTimeAt0FPS;
    float _timeOfFlightStreamingTimeAt1FPS;
    float _timeOfFlightStreamingTimeAt8FPS;
    float _timeOfFlightStreamingTimeAtOtherFPS;
    int _lastTimeOfFlightFrameRate;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _ptsOfLastTimeOfFlightFrameRateChange;
    int _temporalNoiseReductionBand0StrengthModulation;
    FigWeakReference *_maxDepthFrameRateChangedDelegate;
    int _overheadCameraMode;
    FigWeakReference *_overheadCameraModeChangedDelegate;
    FigWeakReference *_subjectSelectionDelegate;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _centerStageRectOfInterest;
    FigWeakReference *_centerStageDelegate;
    char _centerStageFieldOfViewRestrictedToWide;
    int _centerStageFramingMode;
    char _centerStageMetadataDeliveryEnabled;
    char _centerStageActive;
    float _maxContinuousZoomFactorForDepthDataDelivery;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _depthDataDeliveryZoomLock;
    BWZoomRange *_depthDataDeliveryZoomRange;
    FigWeakReference *_portraitEffectPropertiesDelegate;
    FigWeakReference *_manualCinematicFramingDelegate;
    char _manualCinematicFramingActive;
    char _deviceStreaming;
    char _ispWasStreamingAtStart;
    int _mainFormatSIFRBinningFactor;
    NSMutableSet *_shouldNotifySensorTemperatureByPortType;
    NSMutableDictionary *_sensorTemperatureByPortType;
    int _continuityCameraClientDeviceClass;
    long long _thermalThrottledStartTime;
    int _colorSpace;
    char _largeSphereTravelDetectedWhileStopping;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sphereMonitoringLock;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastPTSWithLargeSphereTravel;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastPTSOfActiveToStillPreviewActiveTransition;
    NSString *_lastSphereMode;
    char _frameSkippingWhenNotRecordingEnabled;
    int _targetFrameRateWhenNotRecording;
    char _deviceInvalidatesFramesDueToNoSensorAccess;
    char _invalidFrameStatsCollectionEnabled;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstInvalidFramePTS;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstValidFramePTS;
    int _invalidFrameCountAfterFirstValidFrame;
    char _secureMetadataEnabled;
    char _hitPortraitInPhotoPreviewThermalPressure;
    unsigned int _longestContinuousPortraitInPhotoPreviewInMS;
    long long _latestPortraitInPhotoPreviewStartTime;
}

@property (readonly) NSDictionary *moduleInfoByPortType;
@property (readonly) NSDictionary *sensorIDDictionaryByPortType;
@property (readonly) BWFigCaptureDevice *device;
@property (readonly) int deviceType;
@property (readonly) int position;
@property (readonly) struct OpaqueCMClock { } *clock;
@property (readonly, nonatomic) NSDictionary *moduleCalibrationByPortType;
@property (readonly) NSArray *activePortTypes;
@property (readonly) char hasFlash;
@property (readonly) char supportsWideColor;
@property (retain, nonatomic) BWMemoryPool *memoryPool;
@property (readonly, nonatomic) NSString *applicationID;
@property (nonatomic) char clientExpectsCameraMountedInLandscapeOrientation;
@property (nonatomic) char cinematicFramingSupported;
@property (nonatomic) char cinematicFramingEnabled;
@property (nonatomic) unsigned int cinematicFramingControlMode;
@property (nonatomic) char backgroundBlurSupported;
@property (nonatomic) char backgroundBlurEnabled;
@property (nonatomic) char studioLightingSupported;
@property (nonatomic) char studioLightingEnabled;
@property (nonatomic) char reactionEffectsSupported;
@property (nonatomic) char reactionEffectsEnabled;
@property (nonatomic) char backgroundReplacementSupported;
@property (nonatomic) char backgroundReplacementEnabled;
@property (nonatomic) char faceDrivenAEAFEnabledByDefault;
@property (nonatomic, getter=isPhotoFormat) char photoFormat;
@property (retain, nonatomic) NSDictionary *faceDetectionConfiguration;
@property (readonly, nonatomic) BWFigVideoCaptureStream *captureStream;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *streamSetPropertyAsyncQueue;
@property (nonatomic) char temporalNoiseReductionEnabled;
@property (nonatomic) char temporalNoiseReductionBand0Disabled;
@property (nonatomic) char temporalNoiseReductionRawEnabled;
@property (nonatomic) char temporalNoiseReductionStrengthHighEnabled;
@property (nonatomic) char disableTemporalNoiseReductionWhenStopping;
@property (nonatomic) int temporalNoiseReductionBand0StrengthModulation;
@property (readonly, nonatomic) float masterCaptureStreamLastFrameEIT;
@property (nonatomic) char stillImageCaptureEnabled;
@property (nonatomic) int stillImageFusionScheme;
@property (retain, nonatomic) NSDictionary *stillImageSupportedHighResolutionFlavorsByPortType;
@property (nonatomic, getter=isStillImageISPChromaNoiseReductionEnabled) char stillImageISPChromaNoiseReductionEnabled;
@property (nonatomic) char quadraHighResStillImageCaptureEnabled;
@property (nonatomic) char stillImageGNRHDREnabled;
@property (nonatomic) char irisFrameHarvestingEnabled;
@property (nonatomic, getter=isStillImageISPMultiBandNoiseReductionEnabled) char stillImageISPMultiBandNoiseReductionEnabled;
@property (nonatomic) char stillImageFocusPixelDataCaptureWithDepthEnabled;
@property (nonatomic) char stillImageSashimiRawCaptureWithDepthEnabled;
@property (nonatomic) int numberOfActiveTimeMachines;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } sensorRegionOfInterestForCameraControls;
@property (nonatomic) char lumaHistogramsEnabled;
@property (nonatomic) struct CGSize { double width; double height; } defaultAutoFocusTapWindowSize;
@property (nonatomic) struct CGSize { double width; double height; } defaultContinuousAutoFocusWindowSize;
@property (nonatomic) char focusPixelsEnabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } regionOfInterestWithoutOverscan;
@property (nonatomic) float maximumFrameRate;
@property (nonatomic) float minimumFrameRate;
@property (nonatomic) char variableFrameRateControlEnabled;
@property (nonatomic) char cinematicVideoEnabled;
@property (nonatomic) float cinematicVideoAverageRenderingTime;
@property (nonatomic) float cinematicVideoWorstCaseRenderingTime;
@property (nonatomic) int maxOverscanVideoStabilizationMethod;
@property (nonatomic) char videoStabilizationModeUsesReducedOverscan;
@property (nonatomic) int videoStabilizationStrength;
@property (nonatomic) char adaptiveOverscanEnabled;
@property (nonatomic) char stereoVideoCaptureEnabled;
@property (nonatomic) char stereoPhotoCaptureEnabled;
@property float zoomFactor;
@property (nonatomic) char optimizesZoomRampsForVISZoomSmoothing;
@property (readonly) BWZoomCommandHandler *zoomCommandHandler;
@property (copy, nonatomic) NSDictionary *baseZoomFactorsByPortType;
@property (readonly, nonatomic) NSDictionary *clientBaseZoomFactorsByPortType;
@property (nonatomic) float zoomPIPMinimumUIZoomFactor;
@property (nonatomic) float uiBaseZoomFactor;
@property (nonatomic) char zoomPIPSuspended;
@property (nonatomic) float maxContinuousZoomFactorForDepthDataDelivery;
@property (nonatomic) char previewVideoDepthNodeUnprepared;
@property (retain, nonatomic) NSString *preferredMasterPortType;
@property (readonly, nonatomic, getter=isCMIOZoomStreamPropertySupported) char cmioZoomStreamPropertySupported;
@property (retain, nonatomic) NSDictionary *exifFocalLengthsByZoomFactor;
@property struct CGSize { double x0; double x1; } nonDestructiveCropSize;
@property (readonly) BWFigVideoCaptureSynchronizedStreamsGroup *synchronizedStreamsGroup;
@property (readonly) char isBravoVariant;
@property (readonly) char isExternalVariant;
@property (readonly) BWFigVideoCaptureStream *masterCaptureStream;
@property (readonly) BWFigVideoCaptureStream *bravoTelephotoCaptureStream;
@property (readonly) BWFigVideoCaptureStream *bravoSuperWideCaptureStream;
@property (readonly) BWFigVideoCaptureStream *pearlInfraredCaptureStream;
@property (readonly) NSArray *captureStreams;
@property (readonly) NSArray *captureStreamsByFocalLength;
@property struct { long long x0; unsigned long long x1; } bravoStreamSelectionConfiguration;
@property struct { long long x0; unsigned long long x1; } bravoStreamSelectionConfigurationForRecording;
@property char bravoStreamSelectionConfigurationForRecordingEnabled;
@property (copy) NSArray *bravoStreamSelectionEligibleFallbackPortTypes;
@property char wideCaptureStreamAsStatsMasterPreferred;
@property (readonly) struct { struct { float x0; float x1; } x0[3]; struct { float x0; float x1; } x1[3]; struct { float x0; float x1; } x2[3]; struct { float x0; float x1; } x3[3]; BOOL x4; struct { unsigned int x0; struct { float x0; float x1; } x1[3]; float x2[3]; float x3[3]; float x4[3]; int x5[3]; float x6[7]; float x7[7][12]; int x8; int x9; struct { float x0; float x1; } x10; struct { float x0; float x1; } x11[3]; float x12[3]; float x13[3]; float x14[3]; BOOL x15; float x16; float x17; } x5; double x6; } sphereShiftState;
@property (readonly) char parallaxMitigationBasedOnZoomFactorEnabled;
@property (readonly, nonatomic) int timeOfFlightCameraType;
@property int timeOfFlightProjectorMode;
@property (nonatomic) char timeOfFlightAFEnabled;
@property (nonatomic) char midFrameSynchronizationEnabled;
@property (nonatomic) char depthDataDeliveryEnabled;
@property (nonatomic) float depthMaxFrameRate;
@property (nonatomic) int depthDataBaseRotation;
@property (nonatomic) struct { int width; int height; } depthFormatDimensions;
@property (nonatomic) unsigned int depthPixelFormat;
@property (nonatomic) char depthFilteringEnabled;
@property (nonatomic) int depthType;
@property (nonatomic) char allocateResourcesCompatibleWithDepthDataDelivery;
@property (nonatomic) char shallowDepthOfFieldEffectEnabled;
@property (nonatomic) char wideDigitalFlashAvailableShallowDepthOfFieldEffectsEnabled;
@property (nonatomic) char portraitAutoSuggestEnabled;
@property (readonly) int shallowDepthOfFieldEffectStatus;
@property (readonly) int shallowDepthOfFieldStagePreviewStatus;
@property (readonly, nonatomic) char portraitPreviewForegroundBlurEnabled;
@property (readonly, nonatomic) char portraitSceneMonitorUsesDisparityStatistics;
@property (readonly) int stereoVideoCaptureStatus;
@property (nonatomic) char stereoFusionEnabled;
@property (nonatomic) char bravoConstituentPhotoDeliveryEnabled;
@property (nonatomic) float visionDataMaxFrameRate;
@property (nonatomic) id<BWPreviewTimeMachineProcessor> previewTimeMachineProcessor;
@property (weak, nonatomic) id<BWAttachedMediaTimeMachineDelegate> smartStyleAttachedMediaTimeMachineDelegate;
@property (nonatomic) char smartCameraEnabled;
@property (nonatomic) char attachesUprightExifOrientationMetadataToStreamingFrames;
@property (readonly) NSString *smartCameraStatus;
@property (readonly) NSString *lastStillCaptureStatus;
@property (readonly) NSString *lastStillScene;
@property (readonly) NSString *lastScene;
@property (readonly) NSString *orientation;
@property (nonatomic) char globalToneMappingEnabled;
@property (retain, nonatomic) NSNumber *globalToneMappingEnabledOverride;
@property (nonatomic) int unifiedBracketingMode;
@property (nonatomic) char sifrStillImageCaptureEnabledIfAvailable;
@property (nonatomic) char softISPEnabled;
@property (nonatomic) char sensorRawStillImageOutputsEnabled;
@property (nonatomic) char deepFusionEnabled;
@property (nonatomic) char depthWithDeepFusionEnabled;
@property (nonatomic) unsigned int learnedNRMode;
@property (readonly, nonatomic) char learnedNRUltraHighResolutionDowngradeSupported;
@property (nonatomic) char learnedNRUltraHighResolutionDowngradeEnabled;
@property (nonatomic) char swfrEnabled;
@property char constantColorEnabled;
@property (nonatomic) char digitalFlashEnabled;
@property (nonatomic) char digitalFlashMetadataEnabled;
@property (retain, nonatomic) NSArray *digitalFlashDetectedObjectTypes;
@property (nonatomic) int streamingDigitalFlashMode;
@property (nonatomic) id<BWAdaptiveBracketingController> adaptiveUnifiedBracketingController;
@property (nonatomic) char redSaturationMitigationEnabled;
@property (nonatomic) char disparityGenerationFromReferenceFramesSupported;
@property (nonatomic) char sensorRawPoolEnabled;
@property (readonly, nonatomic) unsigned int sensorRawPixelFormat;
@property (readonly, nonatomic) NSDictionary *sensorRawPoolRequirements;
@property (nonatomic) struct { int width; int height; } ultraHighResSensorRawPoolDimensions;
@property (nonatomic) char zeroShutterLagEnabled;
@property (nonatomic) int zeroShutterLagTimeMachineBufferCapacity;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } zeroShutterLagEarliestAllowedPTS;
@property (nonatomic) char ultraHighResolutionZeroShutterLagSupportEnabled;
@property (nonatomic) char ultraHighResolutionZeroShutterLagEnabled;
@property (nonatomic) char redEyeReductionEnabled;
@property (nonatomic) float timeLapseCaptureRate;
@property (nonatomic) id<BWSupplementalPointCloudCaptureDeviceDelegate> supplementalPointCloudCaptureDeviceDelegate;
@property (nonatomic) BWFigVideoCaptureDevice *supplementalPointCloudCaptureDevice;
@property (nonatomic) char overCaptureEnabled;
@property (nonatomic) float overCapturePercentage;
@property (nonatomic) char allocateResourcesCompatibleWithOverCapture;
@property (nonatomic) char overCaptureSuperWideMacroActive;
@property (nonatomic) char momentCaptureVideoRecordingSupported;
@property int systemPressureLevel;
@property int thermalSystemPressureLevel;
@property int peakPowerSystemPressureLevel;
@property (nonatomic) unsigned int systemPressureFactors;
@property (readonly) char needsToRelieveSystemPressure;
@property char restorationOfForcedOffOverCaptureActiveSlaveStreamEnabled;
@property (nonatomic) int clientUIDeviceOrientation;
@property (nonatomic) int overheadCameraMode;
@property (nonatomic, getter=isDeskCamActive) char deskCamActive;
@property (nonatomic, getter=isUltraWideStreamActive) char ultraWideActive;
@property (weak, nonatomic) id<BWFigVideoCaptureDeviceSubjectSelectionDelegate> subjectSelectionDelegate;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } centerStageRectOfInterest;
@property (nonatomic) int centerStageFramingMode;
@property (nonatomic) char centerStageMetadataDeliveryEnabled;
@property (nonatomic) char centerStageFieldOfViewRestrictedToWide;
@property (nonatomic) char manualCinematicFramingEnabled;
@property (weak, nonatomic) id<BWFigVideoCaptureDeviceCenterStageDelegate> centerStageDelegate;
@property (weak, nonatomic) id<BWFigVideoCaptureDeviceManualCinematicFramingDelegate> manualCinematicFramingDelegate;
@property (nonatomic, getter=isCenterStageActive) char centerStageActive;
@property (nonatomic, getter=isManualCinematicFramingActive) char manualCinematicFramingActive;
@property (nonatomic) float backgroundBlurAperture;
@property (nonatomic) float studioLightingIntensity;
@property (nonatomic) char gesturesEnabled;
@property (nonatomic) char suppressedGesturesEnabled;
@property (nonatomic) struct __CVBuffer { } *backgroundReplacementPixelBuffer;
@property (readonly, nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } mostRecentPTS;
@property (nonatomic) char fullBinSIFROnSecondaryCameraAllowed;
@property (nonatomic) unsigned int streamingSessionAnalyticsPixelFormat;
@property (nonatomic) struct { int width; int height; } streamingSessionAnalyticsVideoDimensions;
@property (nonatomic) char streamingSessionAnalyticsHighlightRecoveryEnabled;
@property (nonatomic) char streamingSessionAnalyticsClientIsVOIP;
@property (nonatomic) char streamingSessionAnalyticsMixWithOthersEnabled;
@property (nonatomic) char secureMetadataEnabled;
@property (nonatomic) char trueVideoCaptureEnabled;
@property (nonatomic) char rebuildingGraphForTrueVideoTransition;
@property (nonatomic) char stoppingForTrueVideoTransition;
@property (nonatomic) float durationAlreadyWaitedForRecordingStop;
@property (nonatomic) char frameSkippingWhenNotRecordingEnabled;
@property (nonatomic) int targetFrameRateWhenNotRecording;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;

- (void)dealloc;
- (void)releaseResources;
- (float)exposureTargetOffset;
- (void)startPanningAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (float)ISO;
- (struct { float x0; float x1; float x2; })deviceWhiteBalanceGains;
- (id)digitalFlashExposureTimes;
- (int)digitalFlashStatus;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })exposureDuration;
- (struct { float x0; float x1; float x2; })grayWorldDeviceWhiteBalanceGains;
- (char)isFlashScene;
- (char)isHDRScene;
- (float)lensPosition;
- (void)panWithTranslation:(struct CGPoint { double x0; double x1; })a0;
- (void)performOneShotFraming;
- (void)performReactionEffect:(id)a0;
- (void)resetFraming;
- (int)setAutomaticallyAdjustsImageControlMode:(char)a0;
- (int)setImageControlMode:(int)a0;
- (void)setPortraitEffectStudioLightQuality:(long long)a0;
- (int)setProvidesStortorgetMetadata:(char)a0;
- (int)setSubjectAreaChangeMonitoringEnabled:(char)a0;
- (float)torchLevel;
- (void)captureStreamDidStartStreaming:(id)a0;
- (void)captureStreamWillStopStreaming:(id)a0;
- (struct OpaqueFigSampleBufferProcessor { } *)_autofocusProcessor;
- (id)_initWithCaptureDevice:(id)a0 attributes:(id)a1 synchronizedStreamsAttributes:(id)a2 unsynchronizedStreamsAttributes:(id)a3 multiCamEnabled:(char)a4 applicationID:(id)a5 clientAuditToken:(struct { unsigned int x0[8]; })a6 tccIdentity:(id)a7 mediaEnvironment:(id)a8 deviceVendor:(id)a9 createAutofocusSampleBufferProcessorFunction:(void /* function */ *)a10 cameraParameters:(id)a11 deviceClientPriority:(int)a12 error:(int *)a13;
- (void)_postNotificationWithPayload:(id)a0 notificationPayload:(id)a1;
- (void)_resetStillImageCaptureRequestState;
- (int)_setupAutofocusSampleBufferProcessor;
- (id)_stillImageCaptureStateMachine;
- (id)_stillImageDispatchQueue;
- (void)_teardownAutoFocusSampleBufferProcessor;
- (int)autoImageControlMode;
- (id)cameraInfoByPortType;
- (id)cameraInfoByPortTypeIncludingLSCGains:(char)a0 includeFocusPixelMap:(char)a1 includeDefectivePixelTable:(char)a2;
- (void)cancelPrepareToCaptureStillImageNow;
- (int)captureStillImageNowWithSettings:(id)a0 captureSettings:(id)a1;
- (void)captureStream:(id)a0 didCompleteStillImageCaptureWithPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 error:(int)a2;
- (void)captureStream:(id)a0 didDropVideoSampleBufferWithPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)captureStream:(id)a0 didUpdatePreviewShift:(struct CGPoint { double x0; double x1; })a1;
- (void)captureStream:(id)a0 willDiscardVideoSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)captureStream:(id)a0 willEmitDepthSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)captureStream:(id)a0 willEmitPointCloudSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (void)captureStream:(id)a0 willEmitStillImageSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 fromTimeMachine:(char)a2;
- (void)captureStream:(id)a0 willEmitVideoSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 drivesCameraControls:(char)a2;
- (void)captureStreamDidChangeActiveFormatIndex:(id)a0;
- (void)captureStreamDidStopStreaming:(id)a0;
- (void)captureStreamFailedToStartStreaming:(id)a0;
- (void)captureStreamWillStartStreaming:(id)a0;
- (void)captureStreamWillStopCameraStreamingMonitor;
- (id)copyISPProcessingSessionWithType:(int)a0 error:(int *)a1;
- (void)drainNotifications;
- (id)initWithCaptureDevice:(id)a0 attributes:(id)a1 synchronizedStreamsAttributes:(id)a2 unsynchronizedStreamsAttributes:(id)a3 multiCamEnabled:(char)a4 applicationID:(id)a5 clientAuditToken:(struct { unsigned int x0[8]; })a6 tccIdentity:(id)a7 mediaEnvironment:(id)a8 deviceClientPriority:(int)a9 error:(int *)a10;
- (void)initiateCaptureStillImageNowWithPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 completionHandler:(id /* block */)a1;
- (void)invalidateForParallelGraphRebuild;
- (char)isPortTypeUsingZoomBasedSourceSensorRaws:(id)a0;
- (char)isPropertyObserved:(id)a0;
- (char)isSISScene;
- (int)maxStillImageCaptureBufferCountForHDRMode:(int)a0 digitalFlashMode:(int)a1 qualityPrioritization:(int)a2 clientBracketCount:(int)a3 bravoConstituentImageDeliveryDeviceTypes:(id)a4;
- (float)parallaxMitigationStrengthAndTargetCaptureStream:(id *)a0;
- (void)performBlockOnNotificationQueue:(id /* block */)a0;
- (void)pointCloudCaptureDevice:(id)a0 willEmitPointCloudSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1;
- (id)preferredMasterPortTypeForZoomFactor:(float)a0;
- (void)prepareToCaptureStillImageNow:(id /* block */)a0;
- (void)rampToVideoZoomFactor:(float)a0 withRampType:(int)a1 rate:(float)a2 duration:(double)a3 commandID:(int)a4;
- (void)rampToVideoZoomFactor:(float)a0 withTuning:(int)a1 commandID:(int)a2;
- (void)registerForAEMatrixMetadata;
- (float)requestedZoomFactorRelativeToPortType:(id)a0;
- (id)sceneClassificationConfidences;
- (void)semanticStyleSceneTypeDidChange:(int)a0;
- (void)sendCalibrationDataToISP;
- (int)sensorRawHighResolutionFlavorForDimensions:(struct { int x0; int x1; })a0;
- (char)setAutoFlashEnabled:(char)a0 error:(id *)a1;
- (int)setAutoImageControlMode:(int)a0;
- (void)setAutoImageControlMode:(int)a0 completionHandler:(id /* block */)a1;
- (int)setAutomaticallyAdjustsTorch:(char)a0;
- (void)setCinematicVideoFocus:(id)a0;
- (int)setContinuousAutoFocusRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 isFocusRectInOverscanSpace:(char)a1;
- (int)setExposureModeAutoWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (int)setExposureModeCustomWithExposureDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 minFrameRate:(double)a1 maxFrameRate:(double)a2 ISO:(float)a3 requestID:(int)a4;
- (int)setExposureModeLocked;
- (int)setExposureTargetBias:(float)a0 requestID:(int)a1;
- (int)setFaceDetectionDrivenImageProcessingMode:(int)a0;
- (int)setFocusModeAutoWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 restrictToRect:(char)a1 continuous:(char)a2 smooth:(char)a3 rangeRestrictionNear:(float)a4 rangeRestrictionFar:(float)a5 isFocusRectInOverscanSpace:(char)a6;
- (int)setFocusModeManualWithLensPosition:(float)a0 requestID:(int)a1;
- (void)setISPZoomFactor:(float)a0 totalZoomFactor:(float)a1;
- (void)setMaxDepthFrameRateChangedDelegate:(id)a0;
- (void)setMaxExposureDurationClientOverride:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)setMaxTorchLevel:(float)a0;
- (void)setNondisruptiveSwitchingFormatIndicesByPortType:(id)a0 maximumAllowedFrameRate:(int)a1 minimumFrameRate:(int)a2 maximumFrameRate:(int)a3;
- (void)setNondisruptiveSwitchingFormatIndicesByZoomFactorSIFRBinned:(id)a0 nondisruptiveSwitchingFormatIndicesByZoomFactorSIFRNonBinned:(id)a1 ultraHighResolutionNondisruptiveStreamingFormatIndex:(int)a2 mainFormatSIFRBinningFactor:(int)a3 forPortType:(id)a4 quadraSubPixelSwitchingParameters:(id)a5;
- (void)setOverheadCameraModeChangeDelegate:(id)a0;
- (void)setPortraitEffectPropertiesDelegate:(id)a0;
- (void)setProperty:(id)a0 isObserved:(char)a1;
- (void)setSmartCameraVersion:(struct { unsigned short x0; unsigned short x1; unsigned short x2; })a0;
- (int)setStillImageSceneMonitoringFlashMode:(int)a0 hdrMode:(int)a1 qualityPrioritization:(int)a2 digitalFlashMode:(int)a3;
- (void)setStillImageStabilizationSceneDetectionEnabled:(char)a0;
- (int)setTorchLevel:(float)a0;
- (int)setWhiteBalanceModeAuto;
- (int)setWhiteBalanceModeLockedWithGains:(struct { float x0; float x1; float x2; })a0 requestID:(int)a1;
- (void)setZoomFactorChangedDelegate:(id)a0 forPortType:(id)a1;
- (void)shutDownSystemPressuredDevice;
- (void)startupFaceDetectionIfNeeded;
- (id)stillImageCaptureSettingsWithSettings:(id)a0 speedOverQualityCaptureEnabled:(char)a1 processingSupportProvider:(id)a2;
- (void)stopPointCloudCaptureForStillImageCaptureWithSettingsID:(long long)a0;
- (void)unregisterForAEMatrixMetadata;
- (void)updateClientAuditToken:(struct { unsigned int x0[8]; })a0;
- (void)updateFudgedZoomRanges;
- (void)updatePortraitSceneMonitoringRequiresStageThresholds:(char)a0;
- (void)updateSDOFBackgroundShiftSum:(float)a0 invalidShiftRatio:(float)a1 closeCanonicalDisparityAverage:(float)a2 faceCanonicalDisparityAverages:(id)a3 erodedForegroundRatio:(float)a4 foregroundRatio:(float)a5 occluded:(char)a6 faces:(id)a7 personSegmentationRatio:(float)a8;
- (void)updateSmartCameraStreamPropertiesWithInferenceResult:(id)a0;
- (void)updateSphereShiftStateWithSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0;
- (int)updateStillImageSensorRawBufferPoolsWithRetainedBufferCount:(int)a0 zoomBasedRetainedBufferCount:(int)a1 ultraHighResolutionRetainedBufferCount:(int)a2;
- (void)zeroShutterLagCancelWaitingForTimeMachinesForSettingsID:(long long)a0;
- (void)zoomCommandHandler:(id)a0 didApplyZoomFactor:(float)a1 zoomFactorWithoutFudge:(float)a2 targetZoomFactor:(float)a3 rampComplete:(char)a4 rampCommandID:(int)a5;

@end

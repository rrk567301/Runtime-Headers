@class NSObject, NSDictionary, _EARRelevantTextContext, _EARSpeakerCodeInfo, EARVoiceCommandActiveSet, _EARRecognitionMetrics, _EARSpeechRecognitionAudioBuffer, NSString, _EARFormatter, NSSet, _EARSpeechModelInfo, NSArray, NSData, NSNumber, _EARTokenizer;
@protocol OS_dispatch_queue;

@interface _EARSpeechRecognizer : NSObject {
    NSObject<OS_dispatch_queue> *_formatterQueue;
    _EARFormatter *_formatter;
    NSObject<OS_dispatch_queue> *_trainingQueue;
    struct shared_ptr<quasar::SpeakerCodeTraining> { struct SpeakerCodeTraining *__ptr_; struct __shared_weak_count *__cntrl_; } _training;
    char _supportVoiceCommands;
    char _enableVoiceCommands;
    NSSet *_endsOfSentencePunctuations;
    struct shared_ptr<quasar::SpeechRecognizer> { struct SpeechRecognizer *__ptr_; struct __shared_weak_count *__cntrl_; } _recognizer;
    struct shared_ptr<quasar::corrective_reranking::Parser> { struct Parser *__ptr_; struct __shared_weak_count *__cntrl_; } _parser;
    _EARSpeechRecognitionAudioBuffer *_currentAudioBuffer;
    struct weak_ptr<ResultStreamWrapper> { struct ResultStreamWrapper *__ptr_; struct __shared_weak_count *__cntrl_; } _currentResultStreamWrapper;
    NSString *_currentLanguage;
    NSString *_currentTask;
    unsigned long long _currentSamplingRate;
    NSObject<OS_dispatch_queue> *_recognitionQueue;
    NSDictionary *_muxIdMask;
    NSDictionary *_muxIdReverseMask;
    NSSet *_muxIds;
    NSArray *_userProfiles;
    struct vector<std::string, std::allocator<std::string>> { void *__begin_; void *__end_; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *__value_; } __end_cap_; } _rightContextTokens;
    struct shared_ptr<EARModelInitializeContext> { struct EARModelInitializeContext *__ptr_; struct __shared_weak_count *__cntrl_; } _modelInitializeContext;
    char _loadLmeForVoiceCommand;
    _EARTokenizer *_tokenizer;
}

@property (readonly, nonatomic) char isContinuousListening;
@property (readonly, nonatomic) NSString *configPath;
@property (readonly, nonatomic) unsigned short itnEnablingFlags;
@property (readonly, nonatomic) char isLegacyVoiceCommandRequest;
@property (readonly, nonatomic) char hasUtteranceDetection;
@property (retain, nonatomic) NSNumber *overrideDoServerSideEndpointing;
@property (copy, nonatomic) _EARRelevantTextContext *relevantTextContext;
@property (copy, nonatomic) NSData *userProfileData;
@property (copy, nonatomic) NSData *jitProfileData;
@property (readonly, nonatomic) _EARSpeechModelInfo *modelInfo;
@property (readonly, nonatomic) _EARSpeakerCodeInfo *speakerCodeInfo;
@property (nonatomic) char detectUtterances;
@property (nonatomic) char concatenateUtterances;
@property (nonatomic) char allowUtteranceDelay;
@property (nonatomic) char formatAcrossUtterances;
@property (nonatomic) double endpointStart;
@property (nonatomic) char recognizeEagerCandidates;
@property (nonatomic) char farField;
@property (nonatomic) char highPriority;
@property (nonatomic) char enableSpeakerCodeTraining;
@property (nonatomic) double maximumRecognitionDuration;
@property (copy, nonatomic) NSDictionary *recognitionReplacements;
@property (copy, nonatomic) NSDictionary *recognitionConfidenceSubtraction;
@property (copy, nonatomic) NSArray *leftContext;
@property (copy, nonatomic) NSString *inputOrigin;
@property (copy, nonatomic) NSString *deviceId;
@property (copy, nonatomic) NSString *refTranscriptForErrorBlaming;
@property (copy, nonatomic) NSString *bluetoothDeviceId;
@property (copy, nonatomic) NSString *userId;
@property (copy, nonatomic) NSString *sessionId;
@property (copy, nonatomic) NSArray *extraLmList;
@property (copy, nonatomic) NSArray *scoreNbestExtraLmList;
@property (nonatomic) char scoreNbest;
@property (nonatomic) char atypicalSpeech;
@property (nonatomic) double latitude;
@property (nonatomic) double longitude;
@property (nonatomic) char disableAutoPunctuation;
@property (nonatomic) char disablePartialResults;
@property (nonatomic) char enableVoiceCommands;
@property (nonatomic) char shouldGenerateVoiceCommandCandidates;
@property (nonatomic) char disableContextualBiasing;
@property (nonatomic) long long vadGatingLevel;
@property (readonly, nonatomic) EARVoiceCommandActiveSet *voiceCommandActiveSet;
@property (nonatomic) char recognizeEmoji;
@property (copy, nonatomic) NSString *rightContext;
@property (copy, nonatomic) NSString *selectedText;
@property (copy, nonatomic) NSString *aneContext;
@property (copy, nonatomic) NSString *cpuContext;
@property (copy, nonatomic) NSString *gpuContext;
@property (copy, nonatomic) _EARRecognitionMetrics *recognitionMetrics;
@property (copy, nonatomic) NSArray *leftContextForItn;

+ (void)initialize;
+ (char)compileRecognizerModels2WithConfiguration:(id)a0 error:(id *)a1;
+ (void)compileRecognizerModelsWithConfiguration:(id)a0;
+ (id)maximumSupportedConfigurationVersion;
+ (id)minimumSupportedConfigurationVersion;
+ (void)purgeCompiledRecognizerModelsWithConfiguration:(id)a0;
+ (id)rawTokenResultsFromRecognitionResults:(id)a0;

- (void).cxx_destruct;
- (id).cxx_construct;
- (id)initWithConfiguration:(id)a0;
- (id)initWithConfiguration:(id)a0 withGeneralVoc:(id)a1 withLexiconEnh:(id)a2 withItnEnh:(id)a3;
- (char)isSpeakerCodeTrainingSupported:(id)a0;
- (id)runRecognitionWithResultStream:(id)a0;
- (void)setUserProfile:(id)a0;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3 activeConfiguration:(id)a4 modelLoadingOptions:(id)a5 enableSpeakerCodeTraining:(char)a6;
- (struct shared_ptr<quasar::RecogAudioBufferBase> { struct RecogAudioBufferBase *x0; struct __shared_weak_count *x1; })_audioBufferWithLangauge:(id)a0 task:(id)a1 samplingRate:(unsigned long long)a2 userProfileData:(id)a3 resultStream:(struct shared_ptr<quasar::RecogResultStreamBase> { struct RecogResultStreamBase *x0; struct __shared_weak_count *x1; })a4;
- (void)_restartActiveRecognition;
- (void)_setProfileContainers:(id)a0 muxIds:(id)a1;
- (id)_tokenizer;
- (id)_unmaskMuxPackages:(id)a0;
- (void)_waitForAsyncRecogToFinish;
- (void)_waitForInitialization;
- (id)activeConfiguration;
- (char)canCloneIsFinalAsLastNonFinal;
- (void)cancelRecognition;
- (void)dumpModelVirtualMemoryInfo;
- (void)getFormatterWithBlock:(id /* block */)a0;
- (struct shared_ptr<quasar::corrective_reranking::Parser> { struct Parser *x0; struct __shared_weak_count *x1; })getParser;
- (struct shared_ptr<quasar::SpeechRecognizer> { struct SpeechRecognizer *x0; struct __shared_weak_count *x1; })getRecognizer;
- (id)initWithConfig:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3 activeConfiguration:(id)a4 modelLoadingOptions:(id)a5 enableSpeakerCodeTraining:(char)a6 supportEmojiRecognition:(char)a7 voiceCommandActiveSet:(id)a8 modelContextDelegate:(id)a9 enableItn:(char)a10 error:(id *)a11;
- (id)initWithConfiguration:(id)a0 overrideConfigFiles:(id)a1;
- (id)initWithConfiguration:(id)a0 overrideConfigFiles:(id)a1 generalVoc:(id)a2 lexiconEnh:(id)a3 itnEnh:(id)a4;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 generalVoc:(id)a2 lexiconEnh:(id)a3 itnEnh:(id)a4;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 generalVoc:(id)a3 lexiconEnh:(id)a4 itnEnh:(id)a5;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 generalVoc:(id)a3 lexiconEnh:(id)a4 itnEnh:(id)a5 language:(id)a6;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 generalVoc:(id)a3 lexiconEnh:(id)a4 itnEnh:(id)a5 language:(id)a6 activeConfiguration:(id)a7;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 generalVoc:(id)a3 lexiconEnh:(id)a4 itnEnh:(id)a5 language:(id)a6 activeConfiguration:(id)a7 enableSpeakerCodeTraining:(char)a8;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 generalVoc:(id)a3 lexiconEnh:(id)a4 itnEnh:(id)a5 language:(id)a6 activeConfiguration:(id)a7 modelLoadingOptions:(id)a8 enableSpeakerCodeTraining:(char)a9;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 generalVoc:(id)a3 lexiconEnh:(id)a4 itnEnh:(id)a5 language:(id)a6 activeConfiguration:(id)a7 modelLoadingOptions:(id)a8 enableSpeakerCodeTraining:(char)a9 supportEmojiRecognition:(char)a10;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 generalVoc:(id)a3 lexiconEnh:(id)a4 itnEnh:(id)a5 language:(id)a6 activeConfiguration:(id)a7 modelLoadingOptions:(id)a8 enableSpeakerCodeTraining:(char)a9 supportEmojiRecognition:(char)a10 voiceCommandActiveSet:(id)a11;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 generalVoc:(id)a3 lexiconEnh:(id)a4 itnEnh:(id)a5 language:(id)a6 activeConfiguration:(id)a7 modelLoadingOptions:(id)a8 enableSpeakerCodeTraining:(char)a9 supportEmojiRecognition:(char)a10 voiceCommandActiveSet:(id)a11 modelContextDelegate:(id)a12;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3 activeConfiguration:(id)a4;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3 activeConfiguration:(id)a4 enableSpeakerCodeTraining:(char)a5;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3 activeConfiguration:(id)a4 modelLoadingOptions:(id)a5 enableSpeakerCodeTraining:(char)a6 supportEmojiRecognition:(char)a7;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3 activeConfiguration:(id)a4 modelLoadingOptions:(id)a5 enableSpeakerCodeTraining:(char)a6 supportEmojiRecognition:(char)a7 voiceCommandActiveSet:(id)a8;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3 activeConfiguration:(id)a4 modelLoadingOptions:(id)a5 enableSpeakerCodeTraining:(char)a6 supportEmojiRecognition:(char)a7 voiceCommandActiveSet:(id)a8 modelContextDelegate:(id)a9;
- (id)initWithConfiguration:(id)a0 overrides:(id)a1 overrideConfigFiles:(id)a2 language:(id)a3 activeConfiguration:(id)a4 modelLoadingOptions:(id)a5 enableSpeakerCodeTraining:(char)a6 supportEmojiRecognition:(char)a7 voiceCommandActiveSet:(id)a8 modelContextDelegate:(id)a9 enableItn:(char)a10;
- (id)initWithConfiguration:(id)a0 useQuasarFormatter:(char)a1;
- (id)initWithConfiguration:(id)a0 useQuasarFormatter:(char)a1 activeConfiguration:(id)a2;
- (id)initWithConfiguration:(id)a0 withLanguage:(id)a1 withSdapiConfig:(id)a2;
- (void)interruptTraining;
- (char)isVadGatingSupported:(unsigned long long)a0 task:(id)a1 device:(id)a2 farField:(char)a3 atypicalSpeech:(char)a4 aneContext:(id)a5 cpuContext:(id)a6 gpuContext:(id)a7;
- (void)loadParser;
- (void)pauseRecognition;
- (id)recognitionResultsWithAudioData:(id)a0 userProfileData:(id)a1 language:(id)a2 task:(id)a3 samplingRate:(unsigned long long)a4;
- (id)recognitionResultsWithAudioData:(id)a0 userProfileData:(id)a1 language:(id)a2 task:(id)a3 samplingRate:(unsigned long long)a4 extraLanguageModel:(id)a5;
- (id)recognitionStatistics;
- (id)recognitionUtteranceInfos;
- (id)recognitionUtterenceStatistics;
- (void)requestEagerResult:(id)a0;
- (void)resumeRecognitionWithLeftContext:(id)a0 rightContext:(id)a1 selectedText:(id)a2;
- (id)runRecognitionWithResultStream:(id)a0 language:(id)a1 task:(id)a2 samplingRate:(unsigned long long)a3;
- (id)runRecognitionWithResultStream:(id)a0 language:(id)a1 task:(id)a2 samplingRate:(unsigned long long)a3 userProfileData:(id)a4 speakerCodeWriter:(id)a5;
- (id)runRecognitionWithResultStream:(id)a0 speakerCodeWriter:(id)a1 language:(id)a2 task:(id)a3 samplingRate:(unsigned long long)a4;
- (void)setActiveConfiguration:(id)a0;
- (void)setAlternateRawRecognitionTokenSausage:(id)a0;
- (void)setLeftContextText:(id)a0;
- (struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; })splitWithTokenizer:(id)a0 isLeftContext:(char)a1 shouldTruncate:(char)a2 outTokensInVocab:(id *)a3;
- (struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; })splitWithTokenizer:(id)a0 outTokensInVocab:(id *)a1 isLeftContext:(char)a2;
- (id)testFormattingWithOneBestResults:(id)a0 uttMillis:(id)a1;
- (id)tokenizeTextFromEnd:(id)a0 withLimit:(unsigned long long)a1 outTokensInVocab:(id *)a2;
- (void)updateJitProfileData:(id)a0;
- (void)updateUserProfileData:(id)a0;
- (void)updateVoiceCommandContextWithPrefixText:(id)a0 postfixText:(id)a1 selectedText:(id)a2 disambiguationActive:(id)a3 cursorInVisibleText:(id)a4 favorCommandSuppression:(id)a5 abortCommandSuppression:(id)a6;
- (void)updateVoiceCommandContextWithPrefixText:(id)a0 postfixText:(id)a1 selectedText:(id)a2 disambiguationActive:(id)a3 cursorInVisibleText:(id)a4 favorCommandSuppression:(id)a5 abortCommandSuppression:(id)a6 undoEvent:(id)a7;
- (void)writeRecordedStateAccesses;

@end

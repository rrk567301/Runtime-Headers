@class NSView, NSString, NSArray, NSDraggingSession, NSMutableDictionary, SSFrameBuffer, CALayer, NSImage, CAFilter, NSPasteboard;
@protocol SSFrameBufferViewDelegate, SSInputEventConsumer;

@interface SSFrameBufferView : NSView <SSFrameBufferObserver, SSDragDelegate, CAAnimationDelegate, NSFilePromiseProviderDelegate> {
    CALayer *cachedImageLayer;
    CALayer *flashLayer;
    char mShouldWarnAboutScaling;
}

@property (nonatomic) struct CGPoint { double x; double y; } lastDragMousePosition;
@property (retain) CAFilter *blurFilter;
@property (retain) NSView *dynamicResizeVisualEffectsCrossFadeView;
@property (retain) NSView *dynamicResizeVisualEffectsBackDropView;
@property (retain) SSFrameBuffer *frameBuffer;
@property (retain) id<SSInputEventConsumer> inputEventConsumer;
@property id<SSFrameBufferViewDelegate> delegate;
@property unsigned long long screenNumOverride;
@property (readonly) char isPBCopy;
@property (readonly) char scalingNotInSync;
@property (readonly, getter=isUsingAVCMediaStream) char usingAVCMediaStream;
@property char useCachedImage;
@property char shouldMaskScreen;
@property char allowsDragAndDropFileCopyToRemote;
@property char allowsDragAndDropFileCopyFromRemote;
@property (retain) NSMutableDictionary *screenIdsAndRenderViews;
@property double mXScaleFactor;
@property double mXInverseScaleFactor;
@property double mYScaleFactor;
@property double mYInverseScaleFactor;
@property (nonatomic) char cursorInside;
@property (retain) NSPasteboard *remotePasteboard;
@property (retain) NSImage *remoteDragImage;
@property (copy) NSArray *remoteFilePaths;
@property (copy) NSArray *uniqueRemoteFilePaths;
@property (retain) NSDraggingSession *dragSession;
@property (retain) NSArray *savedRegisteredDraggedTypes;
@property (nonatomic) double independentViewerScaleAdjustment;
@property (readonly) id renderViewContents;
@property (retain) NSImage *remoteDragImage2;
@property (getter=isDynamicResizeVisualEffectsInProgress) char dynamicResizeVisualEffectsInProgress;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (char)isCompatibleWithResponsiveScrolling;

- (void)dealloc;
- (id)initWithCoder:(id)a0;
- (void)layout;
- (void)draggingExited:(id)a0;
- (void)otherMouseDown:(id)a0;
- (void)rightMouseDown:(id)a0;
- (void)swipeWithEvent:(id)a0;
- (char)acceptsFirstMouse:(id)a0;
- (char)acceptsFirstResponder;
- (void)awakeFromNib;
- (void)beginGestureWithEvent:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (void)draggingSession:(id)a0 endedAtPoint:(struct CGPoint { double x0; double x1; })a1 operation:(unsigned long long)a2;
- (unsigned long long)draggingSession:(id)a0 sourceOperationMaskForDraggingContext:(long long)a1;
- (unsigned long long)draggingUpdated:(id)a0;
- (void)endGestureWithEvent:(id)a0;
- (id)filePromiseProvider:(id)a0 fileNameForType:(id)a1;
- (void)filePromiseProvider:(id)a0 writePromiseToURL:(id)a1 completionHandler:(id /* block */)a2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)isOpaque;
- (void)keyDown:(id)a0;
- (void)keyUp:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseDragged:(id)a0;
- (void)mouseMoved:(id)a0;
- (void)mouseUp:(id)a0;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)a0;
- (void)otherMouseDragged:(id)a0;
- (void)otherMouseUp:(id)a0;
- (char)performDragOperation:(id)a0;
- (void)quickLookWithEvent:(id)a0;
- (void)rightMouseDragged:(id)a0;
- (void)rightMouseUp:(id)a0;
- (void)rotateWithEvent:(id)a0;
- (void)scrollWheel:(id)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)smartMagnifyWithEvent:(id)a0;
- (void)updateLayer;
- (char)wantsUpdateLayer;
- (void)flash;
- (void)updateSubviews;
- (void)ssFrameBuffer:(id)a0 rectangleChanged:(struct SSRect { struct SSPoint { long long x0; long long x1; } x0; struct SSSize { unsigned long long x0; unsigned long long x1; } x1; })a1;
- (void)stopResizeVisualEffectsIfNeeded;
- (void)AVConferenceLayerContent:(id)a0 forScreen:(long long)a1;
- (void)setCursorColor:(id)a0;
- (void)setTouchEvents:(id)a0;
- (void)ssFrameBuffer:(id)a0 sizeWillChangeTo:(struct SSSize { unsigned long long x0; unsigned long long x1; })a1;
- (void)commonInitialization;
- (void)ensureUniqueDragNames;
- (struct SSPoint { long long x0; long long x1; })frameBufferCoordinatesFromNSEvent:(id)a0;
- (struct SSPoint { long long x0; long long x1; })frameBufferCoordinatesFromWindowCoordinates:(struct CGPoint { double x0; double x1; })a0;
- (void)gestureScrollWithEvent:(id)a0;
- (void)magnificationChanged:(id)a0;
- (id)renderViewForScreen:(long long)a0;
- (void)reregisterFileCopyDragTypes;
- (void)sendMouseButtonEvent:(id)a0 withButton:(unsigned long long)a1 withState:(int)a2;
- (void)sendMouseButtonEventWithWindowCoordinates:(struct CGPoint { double x0; double x1; })a0 withButton:(unsigned long long)a1 withState:(int)a2 withClickCount:(long long)a3 withEvent:(id)a4;
- (void)sendMouseEventWithWindowCoordinates:(struct CGPoint { double x0; double x1; })a0;
- (void)sendMouseMovedEvent:(id)a0;
- (void)setAVConferenceLayerRotation:(unsigned int)a0 forScreen:(long long)a1;
- (void)setupLayer;
- (struct SSPoint { long long x0; long long x1; })sourcePointForScreen:(id)a0 withDestinationPoint:(struct CGPoint { double x0; double x1; })a1;
- (char)specialGetDestinationRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 forScreen:(id)a1 withSourceRect:(struct SSRect { struct SSPoint { long long x0; long long x1; } x0; struct SSSize { unsigned long long x0; unsigned long long x1; } x1; })a2 checkIntersection:(char)a3;
- (void)ssDragImage:(id)a0 at:(struct CGPoint { double x0; double x1; })a1 offset:(struct CGSize { double x0; double x1; })a2 event:(id)a3 pasteboard:(id)a4 source:(id)a5 slideBack:(char)a6;
- (void)ssDragRemotePasteboardTransferred:(id)a0 withDragImage:(id)a1 withRemoteFilePaths:(id)a2;
- (void)ssFrameBufferSizeDidChange:(id)a0;
- (void)startBlurringContent;
- (void)startResizeVisualEffects;
- (void)stopBlurringContent;
- (void)unregisterFileCopyDragTypes;
- (void)updateRenderViewFramesWith:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)updateScalingFactors;
- (char)viewCoordinates:(struct CGPoint { double x0; double x1; })a0 inScreenFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;

@end

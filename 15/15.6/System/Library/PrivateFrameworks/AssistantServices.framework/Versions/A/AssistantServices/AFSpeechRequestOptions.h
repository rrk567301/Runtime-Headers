@class NSFileHandle, NSURL, AFSpeechTestRequestOptions, NSDictionary, SCDAContext, AFMyriadContext, AFSpeechSynthesisRecord, NSString, AFLanguageDetectionUserContext, NSXPCListenerEndpoint, AFSpeechPackage, NSNumber, AFSpeechRecordingAlertPolicy, NSUUID;

@interface AFSpeechRequestOptions : NSObject <NSSecureCoding>

@property (class, readonly) char supportsSecureCoding;

@property (nonatomic) long long activationEvent;
@property (copy, nonatomic) NSString *activationDeviceIdentifier;
@property (nonatomic) char isEyesFree;
@property (nonatomic) char isSystemApertureEnabled;
@property (nonatomic) char isLiveActivitiesSupported;
@property (nonatomic) char isInAmbient;
@property (copy, nonatomic) NSString *serverCommandId;
@property (nonatomic) char useAutomaticEndpointing;
@property (nonatomic) long long endpointerOperationMode;
@property (copy, nonatomic) AFSpeechRecordingAlertPolicy *recordingAlertPolicy;
@property (nonatomic) char disableInputAudioPowerUpdate;
@property (nonatomic) char disableOutputAudioPowerUpdate;
@property (nonatomic) char useStreamingDictation;
@property (nonatomic) double homeButtonDownEventTime;
@property (nonatomic) unsigned long long homeButtonDownEventMachAbsoluteTime;
@property (nonatomic) double activationEventTime;
@property (nonatomic) unsigned long long activationEventMachAbsoluteTime;
@property (nonatomic) double expectedActivationEventTime;
@property (nonatomic) unsigned long long stopRecordingHostTime;
@property (nonatomic) char isInitialBringUp;
@property (copy, nonatomic) NSNumber *homeButtonUpFromBeep;
@property (nonatomic) char acousticIdEnabled;
@property (nonatomic) long long audioFileType;
@property (retain, nonatomic) NSFileHandle *audioFileHandle;
@property (copy, nonatomic) NSDictionary *voiceTriggerEventInfo;
@property (copy, nonatomic) NSDictionary *raiseToSpeakEventInfo;
@property (copy, nonatomic) AFMyriadContext *myriadContext;
@property (copy, nonatomic) SCDAContext *scdaContext;
@property (nonatomic) char releaseAudioSessionOnRecordingCompletion;
@property (copy, nonatomic) NSString *recordDeviceIdentifier;
@property (retain, nonatomic) NSXPCListenerEndpoint *speechRecordingEventListeningEndpoint;
@property (nonatomic) char usePrelisteningMode;
@property (nonatomic) char pendCallbacksUntilAfterContinuation;
@property (nonatomic) char useBorealisBuffer;
@property (nonatomic) char reloadSmartSiriVolume;
@property (nonatomic) char skipPersonalizedASR;
@property (nonatomic) char disableASR;
@property (copy, nonatomic) NSNumber *notifyState;
@property (copy, nonatomic) NSURL *audioFileURL;
@property (nonatomic) char suppressStartAlert;
@property (nonatomic) char suppressStopAlert;
@property (nonatomic) char hasPlayedStartAlert;
@property (nonatomic) unsigned long long bargeInOptions;
@property (copy, nonatomic) AFSpeechSynthesisRecord *speechSynthesisRecord;
@property (copy, nonatomic) NSString *btDeviceAddress;
@property (copy, nonatomic) NSDictionary *clientAnalyticsContext;
@property (copy, nonatomic) NSDictionary *startContext;
@property (copy, nonatomic) NSDictionary *stopContext;
@property (nonatomic) char isOnPhoneCall;
@property (nonatomic) char skipGeneratingSpeechPacket;
@property (nonatomic) char isMediaPlaying;
@property (nonatomic) float mediaPlaybackVolume;
@property (copy, nonatomic) AFLanguageDetectionUserContext *languageDetectionUserContext;
@property (nonatomic) long long dictationInputOrigin;
@property (copy, nonatomic) NSUUID *turnIdentifier;
@property (nonatomic) long long presentationMode;
@property (copy, nonatomic) NSString *preheatLanguage;
@property (copy, nonatomic) NSURL *preheatTestModelPath;
@property (nonatomic) unsigned long long dictationVoiceTriggerAbsStartSampleId;
@property (copy, nonatomic) NSString *applicationDisplayName;
@property (copy, nonatomic) NSString *applicationBundleIdentifier;
@property (nonatomic, getter=isHybridUODEnabled) char hybridUODEnabled;
@property (copy, nonatomic) NSDictionary *continuousConversationInfo;
@property (copy, nonatomic) NSUUID *intuitiveConversationRequestId;
@property (nonatomic) long long announcementPlatform;
@property (nonatomic) unsigned long long smartSiriVolumeTTSType;
@property (nonatomic) char isTest;
@property (copy, nonatomic) AFSpeechTestRequestOptions *testRequestOptions;
@property (copy, nonatomic) AFSpeechPackage *speechPackageOverride;
@property (nonatomic) char isHeadphonesAuthenticated;
@property (copy, nonatomic) NSString *userProfilePersonaId;
@property (nonatomic) long long userProfileConfidence;
@property (nonatomic) char userProfileHeadphoneConnected;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)description;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)initForTestWithTestRequestOptions:(id)a0;
- (id)initWithActivationEvent:(long long)a0;
- (char)isRaiseToSpeak;
- (char)isVoiceTrigger;

@end

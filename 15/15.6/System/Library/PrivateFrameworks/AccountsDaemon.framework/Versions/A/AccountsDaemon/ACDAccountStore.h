@class ACDDatabaseBackupActivity, ACDFakeRemoteAccountStoreSession, ACRemoteDeviceProxy, ACDAccessPluginManager, NSMutableArray, ACDDatabaseConnection, NSString, ACDDataclassOwnersManager, ACDAuthenticationDialogManager, ACDClient, ACDAuthenticationPluginManager, ACDAccountNotifier, ACDClientAuthorizationManager;
@protocol ACDAccountStoreDelegate;

@interface ACDAccountStore : ACAccountStore <ACRemoteAccountStoreProtocol> {
    NSMutableArray *_accountChanges;
    ACDFakeRemoteAccountStoreSession *_fakeRemoteAccountStoreSession;
}

@property (readonly, nonatomic) ACDDatabaseConnection *databaseConnection;
@property (retain) ACDAuthenticationPluginManager *authenticationPluginManager;
@property (retain) ACDAccessPluginManager *accessPluginManager;
@property (retain) ACDDataclassOwnersManager *dataclassOwnersManager;
@property (retain) ACDAuthenticationDialogManager *authenticationDialogManager;
@property (retain) ACRemoteDeviceProxy *remoteDeviceProxy;
@property (retain) ACDAccountNotifier *accountNotifier;
@property (retain) ACDDatabaseBackupActivity *databaseBackupActivity;
@property char notificationsEnabled;
@property (getter=isMigrationInProgress) char migrationInProgress;
@property (weak) id<ACDAccountStoreDelegate> delegate;
@property (weak) ACDClient *client;
@property (readonly) ACDClientAuthorizationManager *authorizationManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)accountCache;

- (id)init;
- (void).cxx_destruct;
- (void)kerberosAccountsForDomainFromURL:(id)a0 completion:(id /* block */)a1;
- (void)uidOfAccountsd:(id /* block */)a0;
- (void)accessKeysForAccountType:(id)a0 handler:(id /* block */)a1;
- (void)accountExistsWithDescription:(id)a0 completion:(id /* block */)a1;
- (void)accountIdentifiersEnabledForDataclass:(id)a0 handler:(id /* block */)a1;
- (void)accountIdentifiersEnabledForDataclasses:(id)a0 withAccountTypeIdentifiers:(id)a1 completion:(id /* block */)a2;
- (void)accountIdentifiersEnabledToSyncDataclass:(id)a0 handler:(id /* block */)a1;
- (void)accountTypeWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)accountTypesWithHandler:(id /* block */)a0;
- (void)accountWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)accountsOnPairedDeviceWithAccountTypes:(id)a0 withOptions:(id)a1 handler:(id /* block */)a2;
- (void)accountsWithAccountType:(id)a0 handler:(id /* block */)a1;
- (void)accountsWithAccountType:(id)a0 options:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)accountsWithAccountTypeIdentifiers:(id)a0 preloadedProperties:(id)a1 completion:(id /* block */)a2;
- (void)accountsWithHandler:(id /* block */)a0;
- (void)accountsWithTypeIdentifier:(id)a0 propertyKey:(id)a1 value:(id)a2 cacheSuffix:(id)a3 completion:(id /* block */)a4;
- (void)addClientToken:(id)a0 forAccountIdentifier:(id)a1 completion:(id /* block */)a2;
- (void)appPermissionsForAccountType:(id)a0 withHandler:(id /* block */)a1;
- (void)canSaveAccount:(id)a0 completion:(id /* block */)a1;
- (void)childAccountsForAccountWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)childAccountsWithAccountTypeIdentifier:(id)a0 parentAccountIdentifier:(id)a1 handler:(id /* block */)a2;
- (void)clearAllPermissionsGrantedForAccountType:(id)a0 withHandler:(id /* block */)a1;
- (void)clearGrantedPermissionsForAccountType:(id)a0 withHandler:(id /* block */)a1;
- (id)clientTokenForAccount:(id)a0;
- (void)clientTokenForAccountIdentifier:(id)a0 completion:(id /* block */)a1;
- (void)credentialForAccount:(id)a0 serviceID:(id)a1 handler:(id /* block */)a2;
- (void)credentialForAccountWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)credentialItemForAccount:(id)a0 serviceName:(id)a1 completion:(id /* block */)a2;
- (void)credentialItemsWithCompletion:(id /* block */)a0;
- (void)dataclassActionsForAccountDeletion:(id)a0 completion:(id /* block */)a1;
- (void)dataclassActionsForAccountSave:(id)a0 completion:(id /* block */)a1;
- (void)dataclassesWithHandler:(id /* block */)a0;
- (void)discoverPropertiesForAccount:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)displayAccountTypeForAccountWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)enabledDataclassesForAccountWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)grantedPermissionsForAccountType:(id)a0 withHandler:(id /* block */)a1;
- (void)handleURL:(id)a0;
- (void)insertAccountType:(id)a0 withHandler:(id /* block */)a1;
- (void)insertCredentialItem:(id)a0 completion:(id /* block */)a1;
- (void)isPerformingDataclassActionsForAccount:(id)a0 completion:(id /* block */)a1;
- (void)isPushSupportedForAccount:(id)a0 completion:(id /* block */)a1;
- (void)isTetheredSyncingEnabledForDataclass:(id)a0 completion:(id /* block */)a1;
- (id)longLivedRemoteAccountStoreSession;
- (void)migrateCredentialForAccount:(id)a0 completion:(id /* block */)a1;
- (void)notifyRemoteDevicesOfModifiedAccount:(id)a0 withChangeType:(id)a1;
- (void)notifyRemoteDevicesOfModifiedAccount:(id)a0 withChangeType:(id)a1 options:(id)a2 completion:(id /* block */)a3;
- (void)openAuthenticationURL:(id)a0 forAccount:(id)a1 shouldConfirm:(char)a2 completion:(id /* block */)a3;
- (void)openAuthenticationURLForAccount:(id)a0 withDelegateClassName:(id)a1 fromBundleAtPath:(id)a2 shouldConfirm:(char)a3 completion:(id /* block */)a4;
- (void)parentAccountForAccountWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)permissionForAccountType:(id)a0 withHandler:(id /* block */)a1;
- (void)preloadDataclassOwnersWithCompletion:(id /* block */)a0;
- (void)provisionedDataclassesForAccountWithIdentifier:(id)a0 handler:(id /* block */)a1;
- (void)registerMonitorForAccountsOfTypes:(id)a0 propertiesToPrefetch:(id)a1 completion:(id /* block */)a2;
- (id)remoteAccountStoreSession;
- (void)removeAccount:(id)a0 withDataclassActions:(id)a1 completion:(id /* block */)a2;
- (void)removeAccountFromPairedDevice:(id)a0 withOptions:(id)a1 completion:(id /* block */)a2;
- (void)removeAccountType:(id)a0 withHandler:(id /* block */)a1;
- (void)removeAccountsFromPairedDeviceWithOptions:(id)a0 completion:(id /* block */)a1;
- (void)removeCredentialItem:(id)a0 completion:(id /* block */)a1;
- (void)renewCredentialsForAccount:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)requestAccessForAccountTypeWithIdentifier:(id)a0 options:(id)a1 withHandler:(id /* block */)a2;
- (void)resetDatabaseToVersion:(id)a0 withCompletion:(id /* block */)a1;
- (void)runAccountMigrationPlugins:(id /* block */)a0;
- (void)saveAccount:(id)a0 toPairedDeviceWithOptions:(id)a1 completion:(id /* block */)a2;
- (void)saveAccount:(id)a0 verify:(char)a1 dataclassActions:(id)a2 completion:(id /* block */)a3;
- (void)saveAccount:(id)a0 withHandler:(id /* block */)a1;
- (void)saveCredentialItem:(id)a0 completion:(id /* block */)a1;
- (void)scheduleBackupIfNonexistent:(id /* block */)a0;
- (void)setClientBundleID:(id)a0 withHandler:(id /* block */)a1;
- (void)setCredential:(id)a0 forAccount:(id)a1 serviceID:(id)a2 completion:(id /* block */)a3;
- (void)setPermissionGranted:(id)a0 forBundleID:(id)a1 onAccountType:(id)a2 withHandler:(id /* block */)a3;
- (void)shutdownAccountsD:(id /* block */)a0;
- (void)supportedDataclassesForAccountType:(id)a0 handler:(id /* block */)a1;
- (void)syncableDataclassesForAccountType:(id)a0 handler:(id /* block */)a1;
- (void)tetheredSyncSourceTypeForDataclass:(id)a0 completion:(id /* block */)a1;
- (void)triggerKeychainMigrationIfNecessary:(id /* block */)a0;
- (void)verifyCredentialsForAccount:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)visibleTopLevelAccountsWithAccountTypeIdentifiers:(id)a0 completion:(id /* block */)a1;
- (id)_accountWithIdentifier:(id)a0;
- (id)accountTypeWithIdentifier:(id)a0;
- (id)_childAccountsForAccountWithID:(id)a0;
- (char)_saveWithError:(id *)a0;
- (id)_accountTypeWithIdentifier:(id)a0;
- (id)_accountWithIdentifier:(id)a0 prefetchKeypaths:(id)a1;
- (id)_accountsWithAccountType:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (id)_accountsWithAcountType:(id)a0 error:(id *)a1;
- (id)_addAccountNoSave:(id)a0 withDataclassActions:(id)a1 error:(id *)a2;
- (id)_allAccounts_sync;
- (id)_block_accountWithIdentifier:(id)a0;
- (id)_block_accountsWithAccountType:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (id)_block_accountsWithAccountTypeIdentifiers:(id)a0 preloadedProperties:(id)a1;
- (char)_canManagedAccountType:(id)a0 syncManagedDataclass:(id)a1;
- (char)_canSaveAccount:(id)a0 error:(id *)a1;
- (id)_clientTokenForAccountIdentifier:(id)a0 error:(id)a1;
- (id)_clientTokenQueue;
- (id)_commitOrRollbackDataclassActions:(id)a0 forAccount:(id)a1 originalEnabledDataclasses:(id)a2;
- (void)_completeSave:(id)a0 dataclassActions:(id)a1 completion:(id /* block */)a2;
- (id)_credentialItemWithAccountIdentifier:(id)a0 serviceName:(id)a1;
- (id)_dataclassWithName:(id)a0 createIfNecessary:(char)a1;
- (void)_delegate_accountStoreDidSaveAccount:(id)a0 changeType:(int)a1;
- (void)_deleteAccountNoSave:(id)a0 withDataclassActions:(id)a1 error:(id *)a2;
- (id)_displayAccountForAccount:(id)a0;
- (char)_handleAccountAdd:(id)a0 withDataclassActions:(id)a1 error:(id *)a2;
- (char)_handleAccountMod:(id)a0 withDataclassActions:(id)a1 withError:(id *)a2;
- (char)_isManagedAccount:(id)a0 enabledForManagedDataclass:(id)a1;
- (id)_legacyCredentialForAccount:(id)a0 client:(id)a1 error:(id *)a2;
- (id)_lockForAccountType:(id)a0;
- (char)_performDataclassActions:(id)a0 forAccount:(id)a1 error:(id *)a2;
- (id)_predicateForFetchingAccountsWithManagedAccountTypeID:(id)a0 options:(unsigned long long)a1;
- (void)_pruneDuplicateAccountsForAccountType:(id)a0 withUserName:(id)a1 error:(id *)a2;
- (char)_removeAccountNoSave:(id)a0 withDataclassActions:(id)a1 withError:(id *)a2;
- (void)_removeClientTokenForAccountIdentifer:(id)a0;
- (void)_requestAccessForAccountTypeWithIdentifier:(id)a0 options:(id)a1 allowUserInteraction:(char)a2 withHandler:(id /* block */)a3;
- (void)_setAccountManagedObjectRelationships:(id)a0 withAccount:(id)a1 oldAccount:(id)a2 error:(id *)a3;
- (id)_sync_accountWithIdentifier:(id)a0;
- (char)_updateAccountNoSave:(id)a0 withDataclassActions:(id)a1 error:(id *)a2;
- (char)accountsExistWithAccountTypeIdentifier:(id)a0;
- (id)accountsWithAccountTypeIdentifier:(id)a0;
- (void)addAccountNoSave:(id)a0 error:(id *)a1;
- (void)cacheGenerationForAccounts:(id)a0 cacheSuffix:(id)a1;
- (void)deleteAccountNoSave:(id)a0 error:(id *)a1;
- (id)initWithClient:(id)a0 databaseConnection:(id)a1;
- (id)masterCredentialForAccountIdentifier:(id)a0;
- (void)saveAccount:(id)a0 pid:(id)a1 verify:(char)a2 dataclassActions:(id)a3 completion:(id /* block */)a4;
- (char)shouldPreventAccountCreationWithObsoleteAccountType;
- (void)updateAccountNoSave:(id)a0 error:(id *)a1;

@end

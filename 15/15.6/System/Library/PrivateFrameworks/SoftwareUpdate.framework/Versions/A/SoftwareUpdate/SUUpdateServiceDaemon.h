@class SUPowerAssertionManager, NSString, NSMutableDictionary, SUProduct, NSMutableSet, NSMutableArray, NSXPCListener, NSObject;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface SUUpdateServiceDaemon : NSObject <SUUpdateService, NSXPCListenerDelegate> {
    NSXPCListener *_listener;
    NSMutableArray *_clients;
    NSMutableArray *_availableUpdates;
    SUProduct *_adoptedManualProduct;
    NSMutableSet *_approvedStashingTokens;
    SUPowerAssertionManager *_powerAssertionManager;
    long long _didAutoInstallNotifyCount;
    NSMutableArray *_didAutoInstallNotifyStrings;
    NSMutableArray *_additionalPostLogoutInstallRequests;
    NSMutableDictionary *_productsInstalledAfterPostLogoutInstallDictionary;
    NSMutableDictionary *_additionalPackageDigestsByURL;
    NSObject<OS_dispatch_queue> *_serviceQueue;
    NSObject<OS_dispatch_queue> *_updateInfoQueue;
    NSObject<OS_dispatch_queue> *_clientNotifyQueue;
    NSObject<OS_dispatch_queue> *_backgroundActivityQueue;
    NSObject<OS_dispatch_queue> *_saveStateQueue;
    long long _retriesForBackgroundActivity;
    char _postLogoutInstallWillHaveFLO;
    char _saveStateScheduled;
    char _restartingForDoItLaterUpdate;
    NSObject<OS_dispatch_source> *_suspendWatchdogTimer;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedUpdateServiceDaemon;

- (void)dealloc;
- (id)init;
- (char)listener:(id)a0 shouldAcceptNewConnection:(id)a1;
- (void)clearCatalogAndNotifyWithReply:(id /* block */)a0;
- (void)endTransactions;
- (void)sendTelemetryEvent:(id)a0 server:(long long)a1 reportableDictionary:(id)a2 className:(id)a3 reply:(id /* block */)a4;
- (void)startStagingUpdatesForProductKey:(id)a0 usingForeground:(char)a1 replyWhenDone:(id /* block */)a2;
- (id)_currentClients;
- (void)_setProductsForPostLogoutInstallResultsNotification:(id)a0 nowIsLater:(char)a1;
- (id)_addAdditionalPostLogoutInstallRequests:(id)a0;
- (id)_archivedState;
- (void)_doTheCredsStashEnablingFLO:(char)a0 reply:(id /* block */)a1;
- (void)_installStateDidChangeForKeys:(id)a0;
- (void)_refreshLocalUpdateObjects:(id)a0 afterScan:(char)a1 joinUpdateInfoQueue:(char)a2;
- (void)_runBackgroundActionsOnCurrentQueueIfAppropriate:(char *)a0;
- (void)_saveCurrentStateNoDelay:(char)a0;
- (void)_scheduleTransientBackgroundActionWithDelay:(long long)a0 grace:(long long)a1;
- (id)_takeAllValidAdditionalPostLogoutInstallRequests;
- (char)_unarchiveStateFrom:(id)a0;
- (void)_updateProductForPostLogoutInstallResultsNotification:(id)a0 withStatus:(id)a1;
- (void)adminDeferredAvailableUpdatesWithReply:(id /* block */)a0;
- (void)adoptManualProductArchiveByReadingFromFileHandle:(id)a0 archiveName:(id)a1 displayName:(id)a2 displayVersion:(id)a3 allowDevSigning:(char)a4 replyWithResult:(id /* block */)a5;
- (void)authChallengeWasReceived:(id)a0 handled:(char *)a1;
- (void)authorizeForManagingDaemonWithExternalFormData:(id)a0 reply:(id /* block */)a1;
- (void)authorizeForUpdatingWithExternalFormData:(id)a0 additionalTransactions:(unsigned long long)a1 reply:(id /* block */)a2;
- (void)availableUpdatesOfType:(long long)a0 withState:(long long)a1 filteredByState:(unsigned long long)a2 filterDeferred:(char)a3 filterDuplicates:(char)a4 reply:(id /* block */)a5;
- (void)buildTagCacheIfNecessaryWithReply:(id /* block */)a0;
- (void)calculateDiskSpaceRequiredForUpdatesWithProductKeys:(id)a0 downloadingOnly:(char)a1 invokeCacheDelete:(char)a2 reply:(id /* block */)a3;
- (void)cancelUpdatesForProductKeys:(id)a0 reply:(id /* block */)a1;
- (void)catalogAndScanInformationWithReply:(id /* block */)a0;
- (void)catalogInformationWithReply:(id /* block */)a0;
- (void)clearAnyPreferenceWithKey:(id)a0 reply:(id /* block */)a1;
- (void)clearInvalidationForIdentifier:(id)a0 version:(id)a1 forReason:(int)a2;
- (void)combinedStatusForUpdatesWithProductKeys:(id)a0 reply:(id /* block */)a1;
- (void)commitLoginCredentialsDisablingFLO:(char)a0 hasArmedBaseSystemUpdates:(char)a1 finishBlock:(id /* block */)a2;
- (void)conditionsMetForNonUserInitiatedUpdatesWithReply:(id /* block */)a0;
- (void)configureProgressPhasesEnablingFLO:(id)a0 finishBlock:(id /* block */)a1;
- (void)configureProgressPhasesWithFinishBlock:(id /* block */)a0;
- (void)consumeUUIDForToken:(id)a0 replyWithResult:(id /* block */)a1;
- (void)currentDevKeyModeWithReply:(id /* block */)a0;
- (void)dataForNVRAMKey:(id)a0 reply:(id /* block */)a1;
- (void)dumpArchiveState;
- (void)dumpServiceDebugInfo;
- (void)evaluateProducts:(id)a0 reply:(id /* block */)a1;
- (void)fetchMajorOSInfoForProductKey:(id)a0 getIcon:(char)a1 reply:(id /* block */)a2;
- (void)fetchMajorOSInfoForProductKey:(id)a0 reply:(id /* block */)a1;
- (void)getInstallHistoryWithReply:(id /* block */)a0;
- (void)installStatus:(id)a0 didChangeExternallyForProductKey:(id)a1;
- (void)installedUpdateJournalPrunedAndSortedWithReply:(id /* block */)a0;
- (void)installedUpdateJournalWithReply:(id /* block */)a0;
- (void)markRampedUpdatesAsSeenWithReply:(id /* block */)a0;
- (void)migratePreferencesWithReply:(id /* block */)a0;
- (void)overrideDeferralForProductKeys:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)performDownloadAndStageWithProductKeys:(id)a0 downloadOnly:(char)a1 stageOnly:(char)a2 reply:(id /* block */)a3;
- (void)popScanBlockingClient;
- (void)preferenceObjectForKey:(id)a0 reply:(id /* block */)a1;
- (void)preparationRequiredForProductKeys:(id)a0 reply:(id /* block */)a1;
- (void)preventFurtherScansWhileConnected:(id /* block */)a0;
- (void)productKeysToAutomaticallyInstallLaterWithReply:(id /* block */)a0;
- (void)productKeysToInstallAfterLogoutWithReply:(id /* block */)a0;
- (void)productsInActiveForegroundTransactions:(id /* block */)a0;
- (void)progressForRefreshOfAvailableUpdatesWithReply:(id /* block */)a0;
- (void)purgeManualProductState;
- (void)rebootForPostLogoutUpdatesAfterSuccess:(char)a0 displayAsleep:(char)a1 shouldShutDown:(char)a2 reply:(id /* block */)a3;
- (void)refreshAvailableUpdates:(char)a0 preferredLocalizations:(id)a1 limitedToProductTypes:(id)a2 replyWhenDone:(id /* block */)a3;
- (void)refreshAvailableUpdatesForCurrentConfigurationLimitedToProductKeys:(id)a0 distributionEnvironment:(id)a1 distributionEvalutionMetainfo:(id)a2 installedPrinters:(id)a3 mdmInitiated:(char)a4 preferredLocalizations:(id)a5 replyWhenDone:(id /* block */)a6;
- (void)refreshAvailableUpdatesForCurrentConfigurationLimitedToProductTypes:(id)a0 distributionEnvironment:(id)a1 distributionEvalutionMetainfo:(id)a2 installedPrinters:(id)a3 mdmInitiated:(char)a4 preferredLocalizations:(id)a5 replyWhenDone:(id /* block */)a6;
- (void)registerRequestsToInstallAfterPostLogoutUpdates:(id)a0 reply:(id /* block */)a1;
- (void)registerToInstallAfterLogoutForProductKeys:(id)a0 nowIsLater:(char)a1 restartNow:(char)a2 shouldStashCredentials:(char)a3 skipFLO:(char)a4 reply:(id /* block */)a5;
- (void)resetServiceWithReply:(id /* block */)a0;
- (void)restartingForDoItLaterUpdateWithReply:(id /* block */)a0;
- (void)schedulePeriodicActionsWithBackgroundActionCompletion:(id /* block */)a0;
- (void)setAutomaticallyInstallLater:(char)a0 forProductKeys:(id)a1 replyWhenDone:(id /* block */)a2;
- (void)setIASUCatalogWithValue:(id)a0 reply:(id /* block */)a1;
- (void)setPreferenceObject:(id)a0 forKey:(id)a1 reply:(id /* block */)a2;
- (void)setProductProperties:(id)a0 forProductKeys:(id)a1 replyWhenDone:(id /* block */)a2;
- (void)setRestartingForDoItLaterUpdate:(char)a0;
- (void)startDownloadingForProductKeys:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)startInstallingAdminUpdates:(id)a0 replyWhenDone:(id /* block */)a1;
- (void)startListeningForConnections;
- (void)startRootModeUpdatesForProductKeys:(id)a0 clientBlocksRestart:(char)a1 replyWhenDone:(id /* block */)a2;
- (void)startUpdatesForProductKeys:(id)a0 inForeground:(char)a1 clientBlocksRestart:(char)a2 replyWhenDone:(id /* block */)a3;
- (void)startUpdatesForProductKeys:(id)a0 usingClientAuthorization:(struct AuthorizationOpaqueRef { } *)a1 holdingBoostDuringInstall:(char)a2 usingForeground:(char)a3 clientBlocksRestart:(char)a4 packageScriptUserID:(unsigned int)a5 sendingStatusUpdates:(char)a6 replyWhenDone:(id /* block */)a7;
- (void)stashAndCommitFDEKeyReplyingWithResult:(id /* block */)a0;
- (void)stashLoginCredentialsEnablingFLO:(char)a0 reply:(id /* block */)a1;
- (void)stashURLCredential:(id)a0;
- (void)statusForUpdateWithProductKey:(id)a0 reply:(id /* block */)a1;
- (void)suspendBackgroundTasksTemporarily:(char)a0 desiredDuration:(long long)a1 reply:(id /* block */)a2;
- (void)takeInstallNotificationsOfType:(id)a0 withReply:(id /* block */)a1;
- (void)takeRequestsToInstallAfterPostLogoutUpdatesWithReply:(id /* block */)a0;
- (void)updateProductsForProductKeys:(id)a0 withReply:(id /* block */)a1;

@end

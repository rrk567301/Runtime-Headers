@class _TtC26AuthenticationServicesCore23ASCRelatedOriginFetcher, NSObject, ASCAuthorizationTrafficController, NSDictionary, NSMutableArray, _TtC26AuthenticationServicesCore13ASCABLEClient, NSString, _TtC26AuthenticationServicesCore30ASPasswordSignInEventCollector, WBSSavedAccountContext, ASCCredentialRequestContext, NSXPCListener, NSArray, NSNumber, NSXPCConnection, NSUUID;
@protocol OS_os_activity, ASPublicKeyCredentialManagerInterface, OS_dispatch_semaphore, WBSConditionalRegistrationRequester, ASCAuthorizationPresenterHostProtocol;

@interface ASCAgent : NSObject <SFCredentialProviderExtensionManagerObserver, NSXPCListenerDelegate, AuthenticationServicesCore.ASCABLEClientDelegate, ASCAgentProtocol, ASPublicKeyCredentialManagerDelegate, ASCAuthorizationPresenterDelegate> {
    ASCAuthorizationTrafficController *_authorizationTrafficController;
    NSUUID *_authorizationTrafficControllerToken;
    char _existingAppleIDCredentialAvailableForLogIn;
    NSArray *_passwordCredentials;
    NSArray *_appleIDChoices;
    NSXPCConnection *_connection;
    ASCCredentialRequestContext *_requestContext;
    NSString *_clientApplicationIdentifier;
    id<ASCAuthorizationPresenterHostProtocol> _requestPresenter;
    char _isClientEntitledWebBrowser;
    char _isClientEntitledInternalProcess;
    WBSSavedAccountContext *_savedAccountContext;
    id /* block */ _authorizationCompletionHandler;
    NSXPCListener *_viewServiceListener;
    id<ASPublicKeyCredentialManagerInterface> _publicKeyCredentialManager;
    _TtC26AuthenticationServicesCore30ASPasswordSignInEventCollector *_signInEventCollector;
    id<WBSConditionalRegistrationRequester> _conditionalRegistrationRequesterProxy;
    NSArray *_platformLoginChoices;
    NSArray *_securityKeyLoginChoices;
    id /* block */ _didLoadPlatformCredentialsCallback;
    id /* block */ _userEnteredPINCallback;
    id /* block */ _pinResultCallback;
    id /* block */ _passkeyCredentialCallback;
    NSUUID *_publicKeyCredentialOperationUUID;
    NSObject<OS_os_activity> *_authorizationActivity;
    NSObject<OS_dispatch_semaphore> *_internalSemaphore;
    char _didStartCABLEClient;
    _TtC26AuthenticationServicesCore13ASCABLEClient *_cableClient;
    NSDictionary *_test_overrideEntitlements;
    NSNumber *_test_overrideCanCreateICloudKeychainPasskey;
    NSNumber *_test_overrideIsLAContextValid;
    NSArray *_test_overrideExtensionStates;
    _TtC26AuthenticationServicesCore23ASCRelatedOriginFetcher *_relatedOriginFetcher;
    NSMutableArray *_test_credentialProviderExtensionLoginChoices;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) char isCABLEAuthenticatorRequest;

- (void)dealloc;
- (void).cxx_destruct;
- (char)listener:(id)a0 shouldAcceptNewConnection:(id)a1;
- (void)deleteAllPasskeysForRelyingParty:(id)a0 completionHandler:(id /* block */)a1;
- (void)getPasskeysDataForRelyingParty:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)preflightCanCreateICloudKeychainPasskeyWithCompletionHandler:(id /* block */)a0;
- (void)cancelCurrentRequest;
- (void)getArePasskeysDisallowedForRelyingParty:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)getCanCurrentProcessAccessPasskeysForRelyingParty:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)performAuthorizationRequestsForContext:(id)a0 withClearanceHandler:(id /* block */)a1;
- (void)performAutoFillAuthorizationRequestsForContext:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)performSilentAuthorizationRequestsForContext:(id)a0 withCompletionHandler:(id /* block */)a1;
- (char)_connection:(id)a0 hasEntitlement:(id)a1;
- (void)credentialProviderExtensionManagerExtensionListDidChange:(id)a0;
- (void)userSelectedLoginChoice:(id)a0 authenticatedContext:(id)a1 completionHandler:(id /* block */)a2;
- (void)beginAuthorizationForApplicationIdentifier:(id)a0 fromEndpoint:(id)a1;
- (void)beginCABLEPresentationForOperationUUID:(id)a0 viewServiceEndpoint:(id)a1;
- (void)browserPasskeysForRelyingParty:(id)a0 completionHandler:(id /* block */)a1;
- (void)deletePasskeyForRelyingParty:(id)a0 withCredentialID:(id)a1 completionHandler:(id /* block */)a2;
- (void)openCredentialProviderAppSettingsWithCompletionHandler:(id /* block */)a0;
- (void)openVerificationCodeAppSettingsWithCompletionHandler:(id /* block */)a0;
- (void)renamePasskeyWithCredentialID:(id)a0 newName:(id)a1 completionHandler:(id /* block */)a2;
- (void)requestCompletedWithCredential:(id)a0 error:(id)a1;
- (void)requestToTurnOnCredentialProviderExtensionWithCompletionHandler:(id /* block */)a0;
- (void)didReceiveError:(long long)a0;
- (id)_allAvailableLoginChoicesForRequestContext:(id)a0;
- (id)_allTransportsForAssertionRequest:(id)a0;
- (char)_allowListExclusivelyMatchesPlatformLoginChoices:(id)a0;
- (unsigned long long)_allowedAuthenticatorModalitiesForRequestContext:(id)a0;
- (unsigned char)_approvalStateForApplicationIdentifier:(id)a0 relyingParty:(id)a1;
- (void)_authorizationCompletedWithCredential:(id)a0 error:(id)a1;
- (id)_bundleIDFromAppID:(id)a0;
- (id)_cableLoginChoiceForRequestContext:(id)a0;
- (char)_canCreateICloudKeychainPasskeyPreflightWithError:(id *)a0;
- (char)_canPerformConditionalRegistrationInICloudKeychainForUsername:(id)a0 relyingParty:(id)a1;
- (char)_clientHasAuthKitDeveloperEntitlement;
- (char)_clientHasNecessaryAuthKitEntitlements;
- (char)_clientIsAuthKitOwner;
- (char)_clientIsInternalAuthKit;
- (char)_clientIsPrivateAuthKit;
- (void)_configureAppleIDCredentialWithContext:(id)a0 completionHandler:(id /* block */)a1;
- (void)_configureLoginChoicesForPresentationContext:(id)a0 withRequestContext:(id)a1;
- (void)_configurePasswordCredentialsWithCompletionHandler:(id /* block */)a0;
- (void)_configurePublicKeyCredentialsWithAssertionOptions:(id)a0 forProcessWithApplicationIdentifier:(id)a1 requestStyle:(long long)a2 testOptions:(id)a3 completionHandler:(id /* block */)a4;
- (void)_credentialRequestedForCABLELoginChoice:(id)a0;
- (void)_credentialRequestedForPasswordLoginChoice:(id)a0 completionHandler:(id /* block */)a1;
- (void)_credentialRequestedForPlatformLoginChoice:(id)a0 authenticatedContext:(id)a1 completionHandler:(id /* block */)a2;
- (void)_credentialRequestedForSecurityKeyLoginChoice:(id)a0;
- (char)_hasAnyCredentialsAvailableForRequestContext:(id)a0;
- (char)_hasSignInOptionsForRequestContext:(id)a0;
- (id)_iconURLForBundleIdentifier:(id)a0;
- (id)_implicitlySelectAssertionLoginChoiceFromChoices:(id)a0 forContext:(id)a1;
- (char)_isClientWithApplicationIdentifier:(id)a0 properlyEntitledForRequestContext:(id)a1 error:(id *)a2;
- (char)_isConnection:(id)a0 entitledToDeletePasskeysForRelyingParty:(id)a1;
- (char)_isExtensionEnabled:(id)a0;
- (char)_isValidContext:(id)a0;
- (id)_noCredentialsFoundErrorForRequestContext:(id)a0;
- (void)_openPasswordOptions:(id /* block */)a0;
- (void)_performAuthKitAuthorizationValidationForAccount:(id)a0;
- (void)_prepareForAuthorizationRequestsForContext:(id)a0 clientConnection:(id)a1 withPresentationHandler:(id /* block */)a2;
- (void)_requestConditionalRegistrationOnProvider:(id)a0 listenerEndpoint:(id)a1 presentationContext:(id)a2 requestContext:(id)a3 completionHandler:(id /* block */)a4;
- (void)_resetStateOfCurrentRequestWithError:(id)a0;
- (char)_shouldAddCABLEChoiceForRequestContext:(id)a0;
- (char)_shouldApplyQuirksToClientWithApplicationIdentifier:(id)a0;
- (char)_showExtensionEnablementAlert:(id)a0;
- (id)_teamIDfromAppID:(id)a0;
- (void)authorizationPresenter:(id)a0 credentialRequestedForLoginChoice:(id)a1 authenticatedContext:(id)a2 completionHandler:(id /* block */)a3;
- (void)authorizationPresenter:(id)a0 didFinishWithCredential:(id)a1 error:(id)a2;
- (void)authorizationPresenter:(id)a0 validateUserEnteredPIN:(id)a1 completionHandler:(id /* block */)a2;
- (void)beginAuthorizationForApplicationIdentifier:(id)a0 withPresenter:(id)a1;
- (void)cableClientWillAuthenticate:(id)a0;
- (void)cableClientWillConnect:(id)a0;
- (void)clearAllPlatformPublicKeyCredentialsWithCompletionHandler:(id /* block */)a0;
- (void)didCompleteAssertionWithCredential:(id)a0 error:(id)a1;
- (void)didCompleteRegistrationWithCredential:(id)a0 error:(id)a1;
- (void)didFetchPlatformLoginChoices:(id)a0;
- (void)didFetchSecurityKeyLoginChoices:(id)a0;
- (id)encodeGetAssertionCTAPCommandForAuthenticatorWithUserVerificationAvailability:(unsigned long long)a0 authenticatorSupportedExtensions:(id)a1;
- (id)encodeMakeCredentialCTAPCommandForAuthenticatorWithUserVerificationAvailability:(unsigned long long)a0 authenticatorSupportedExtensions:(id)a1;
- (void)getShouldUseAlternateCredentialStoreWithCompletionHandler:(id /* block */)a0;
- (id)initWithTrafficController:(id)a0 connection:(id)a1 publicKeyCredentialManager:(id)a2 signInEventCollector:(id)a3;
- (void)openCABLEURL:(id)a0 fromSourceApplication:(id)a1 withCompletionHandler:(id /* block */)a2;
- (void)requestNewPINWithMinLength:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (void)requestPINWithRemainingRetries:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (void)test_addAutoFillEvent:(id)a0 url:(id)a1;
- (void)test_addCredentialProviderExtensionLoginChoiceWithName:(id)a0 extensionBundleID:(id)a1 containingAppBundleID:(id)a2;
- (id)test_allAvailableLoginChoicesForRequestContext:(id)a0;
- (unsigned long long)test_allowedAuthenticatorModalitiesForRequestContext:(id)a0;
- (void)test_clearCredentialProviderExtensionLoginChoices;
- (void)test_setIsClientEntitledWebBrowser:(char)a0;
- (void)test_setOverrideCanCreateICloudKeychainPasskey:(char)a0;
- (void)test_setOverrideEntitlements:(id)a0;
- (void)test_setOverrideExtensionStates:(id)a0;
- (void)test_setOverrideISLAContextValid:(char)a0;
- (id)viewServiceListenerEndpoint;

@end

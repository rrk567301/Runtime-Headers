@class FI_TKeyValueObserverGlue, NSString, NSArray, NSColor, FI_TDesktopInlinePreviewController, NSImage, FI_TNotificationCenterObserverGlue, FI_TIconView, NSObject, NSIndexSet;

@interface FI_TIconCollectionViewController : FI_TIconOrGalleryCollectionViewController <TUpdateLayoutControllerSuspenderProtocol, TInfoExtractorDelegate, TDesktopInlinePreviewDataSource> {
    NSColor *_backgroundColor;
    NSImage *_backgroundImage;
    struct optional_bool { union { char __null_state_; BOOL __val_; } ; BOOL __engaged_; } _hasNewDocumentButton;
    FI_TIconView *_iconViewForDragImage;
    FI_TDesktopInlinePreviewController *_inlinePreviewController;
    BOOL _isUpdateInlinePreviewSuspended;
    struct shared_ptr<TInfoExtractorController> { struct TInfoExtractorController *__ptr_; struct __shared_weak_count *__cntrl_; } _infoController;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _iconSizeSliderWillChangeObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _iconSizeSliderDidChangeObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _gridSpacingSliderWillChangeObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _gridSpacingSliderDidChangeObserver;
    struct TKeyValueObserver { FI_TKeyValueObserverGlue *fObserver; NSObject *fObjectToObserve; NSArray *fArrayOfObjectsToObserve; NSIndexSet *fIndexesOfObjectsToObserve; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fKeyPathToObserve; } _allowsNewDocumentButtonObserver;
}

@property (nonatomic, getter=isKeepArranged) BOOL keepArranged;
@property (nonatomic, getter=isSnapToGrid) BOOL snapToGrid;
@property (nonatomic) double gridSpacing;
@property (nonatomic) int arrangeBy;
@property (nonatomic) int backgroundType;
@property (retain, nonatomic) NSColor *backgroundColor;
@property (retain, nonatomic) NSImage *backgroundImage;
@property (nonatomic, getter=isTitleOnBottom) BOOL titleOnBottom;
@property (nonatomic) BOOL showItemInfo;
@property (nonatomic) BOOL isUpdateLayoutControllerSuspended;
@property (nonatomic) BOOL isUpdateLayoutControllerDirty;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void).cxx_destruct;
- (id)itemIdentifier;
- (id).cxx_construct;
- (void)collectionView:(id)a0 willDisplayItem:(id)a1 forRepresentedObjectAtIndexPath:(id)a2;
- (void)menu:(id)a0 prepareForLocation:(struct CGPoint { double x0; double x1; })a1 inView:(id)a2;
- (id)nibName;
- (id)collectionView:(id)a0 child:(long long)a1 ofRepresentedObject:(id)a2;
- (void)collectionView:(id)a0 didDeselectItemsAtIndexPaths:(id)a1;
- (void)collectionView:(id)a0 didEndDisplayingItem:(id)a1 forRepresentedObjectAtIndexPath:(id)a2;
- (void)collectionView:(id)a0 didSelectItemsAtIndexPaths:(id)a1;
- (struct CGSize { double x0; double x1; })collectionView:(id)a0 layout:(id)a1 referenceSizeForHeaderInSection:(long long)a2;
- (long long)collectionView:(id)a0 numberOfChildrenOfRepresentedObject:(id)a1;
- (id)collectionView:(id)a0 shouldChangeItemsAtIndexPaths:(id)a1 toHighlightState:(long long)a2;
- (id)collectionView:(id)a0 shouldSelectItemsAtIndexPaths:(id)a1;
- (id)collectionView:(id)a0 viewForSupplementaryElementOfKind:(id)a1 atIndexPath:(id)a2;
- (char)collectionView:(id)a0 writeItemsAtIndexPaths:(id)a1 toPasteboard:(id)a2;
- (BOOL)handleMouseUp:(id)a0;
- (void)invalidateLayout;
- (void)menuWillOpen:(id)a0;
- (void)setDataSource:(id)a0;
- (int)viewStyle;
- (void)aboutToTearDown;
- (void)setIconSize:(double)a0;
- (void)configureView;
- (void)initCommon;
- (void)setTextSize:(double)a0;
- (BOOL)inlinePreviewMouseDown:(id)a0;
- (int)inlinePreviewIconFlavorForItem:(id)a0;
- (id)inlinePreviewPropertiesForItem:(id)a0;
- (void)insertOrRemoveNewDocumentButton;
- (void)updateSubtitleForIconView:(id)a0 node:(struct TFENode { struct OpaqueNodeRef *x0; })a1;
- (BOOL)determineSnapToGridStateForDrag;
- (void)inlinePreviewIsVisible:(BOOL)a0 forItem:(id)a1;
- (void)updateInlinePreviewEnabledState;
- (id)browserViewState;
- (void)cmdContextMenuSortByDate:(id)a0;
- (void)cmdContextMenuSortByName:(id)a0;
- (void)cmdContextMenuSortByTags:(id)a0;
- (BOOL)collapse:(BOOL)a0 section:(unsigned long long)a1;
- (BOOL)collapseNewSections:(const void *)a0 firstPopulation:(BOOL)a1;
- (void)concludeDragOperation:(id)a0 dropTargetView:(id)a1;
- (void)configureCollectionViewItem:(id)a0 forNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)configureGroupNodes:(const void *)a0 firstPopulation:(BOOL)a1;
- (void)configureIconView:(id)a0 forNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)dataSourceChanged_buildInsert:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 :(const void *)a1 :(void *)a2 :(void *)a3;
- (void)dataSourceItemsDidChange:(const void *)a0;
- (id)effectiveBackgroundColor;
- (void)getFreeFormLayoutGridSize:(struct CGSize { double x0; double x1; } *)a0 firstIconAnchorPoint:(struct CGPoint { double x0; double x1; } *)a1;
- (id)iconCollectionView;
- (id)iconCollectionViewKeepArrangedLayout;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })iconFrameForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (id)iconImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct unordered_set<TString, std::hash<TString>, std::equal_to<TString>, std::allocator<TString>> { struct __hash_table<TString, std::hash<TString>, std::equal_to<TString>, std::allocator<TString>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<TString, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TString, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<TString, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TString, void *> *> *>>> { void **x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TString, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TString, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<TString, void *> *>, std::allocator<std::__hash_node<TString, void *>>> { struct __hash_node_base<std::__hash_node<TString, void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::hash<TString>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::equal_to<TString>> { float x0; } x3; } x0; })infoStringsForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })inlinePreviewContentFrameForItem:(id)a0 inHostingView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })inlinePreviewFrameForItem:(id)a0 inHostingView:(id)a1;
- (BOOL)inlinePreviewLayerIsInWindowServer;
- (void)inlinePreviewWillLoadForItem:(id)a0;
- (long long)insertOrResortIndexOffset;
- (void)invalidateInfoTextForKeyNodes:(const void *)a0;
- (void)invalidateLayoutForIndexPaths:(id)a0;
- (void)invalidateLayoutForNodes:(const void *)a0;
- (BOOL)isGroupingByDate;
- (BOOL)isInFreeFormLayout;
- (BOOL)isSubtitleEnabled;
- (id)makeDragImageIconViewForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })nextNodeInViewAfter:(const void *)a0;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })nodesWithViews;
- (void)performBatchUpdatesCompletionHandler:(const void *)a0 :(BOOL)a1 :(const void *)a2 :(BOOL)a3 :(BOOL)a4 :(unsigned long long)a5;
- (void)privateBindSettings;
- (id)quickLookSharedPreviewView;
- (BOOL)receiveDrop:(void *)a0 draggingInfo:(id)a1;
- (BOOL)receivePrivateDrag:(id)a0;
- (void)registerCollectionViewItemClassOrNib;
- (void)registerContainerWithInfoExtractorCache:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)registerContainerWithNodeKeyCache:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)reloadIconsInView;
- (void)restoreBrowserViewState:(id)a0;
- (void)reusingDataSource;
- (void)saveScrollPosition;
- (BOOL)sectionIsCollapsed:(unsigned long long)a0;
- (void)selectionIndexPathsChanged:(id)a0;
- (void)setAllowsDraggingFilesIn:(BOOL)a0;
- (void)setContainerController:(id)a0;
- (void)setInitialConfigInProgress:(BOOL)a0;
- (void)setShowIconPreview:(BOOL)a0;
- (BOOL)shouldDrawSelectionBordered;
- (long long)titleBarSeparatorStyle;
- (void)unregisterContainerWithInfoExtractorCache:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)unregisterContainerWithNodeKeyCache:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)updateAccessibilityAnnotationsForIconView:(id)a0 node:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)updateAccessibilityAnnotationsForIconView:(id)a0 node:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1 infoStrings:(const void *)a2;
- (void)updateDimmedForIconView:(id)a0 node:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)updateDraggingItemsForDrag:(id)a0 dropTargetView:(id)a1;
- (void)updateDrawSelectionBordered;
- (BOOL)updateHasNewDocumentButton;
- (void)updateIconsToBackgroundColor;
- (void)updateInlineProgressForIconView:(id)a0 node:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)updateLayoutController;
- (void)updateLayoutController:(BOOL)a0;
- (void)updateNewDocumentButton;
- (void)updateScreenTimeBadgeForIconView:(id)a0 node:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)updateSpatialDataAfterGridSizeChange:(const struct CGSize { double x0; double x1; } *)a0 oldFirstIconAnchorPoint:(const struct CGPoint { double x0; double x1; } *)a1;
- (void)updateSyncBadgeForIconView:(id)a0 node:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (BOOL)validateContextMenuSortByDate:(id)a0;
- (BOOL)validateContextMenuSortByName:(id)a0;
- (BOOL)validateContextMenuSortByTags:(id)a0;
- (unsigned long long)validateDrop:(id)a0 proposedIndexPath:(id *)a1 dropOperation:(long long *)a2 dropTargetNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a3 outDropTargetNodeAcceptsDrop:(BOOL *)a4;
- (void)viewOptionSliderDidChangeForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)viewOptionSliderWillChangeForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;

@end

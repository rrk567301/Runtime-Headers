@class NSString, FI_TBVDSBulkConfigChangedState, NSObject;
@protocol OS_dispatch_queue;

@interface FI_TBrowserViewDataSource : NSObject <TReadWriteLockingProtocol, TCoalescingNodeObserverProtocol> {
    struct TReadWriteLock { struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } fRWLock; } _lock;
    NSObject<OS_dispatch_queue> *_workerSerialQueue;
    struct unique_ptr<TBlockingQueue, std::default_delete<TBlockingQueue>> { struct __compressed_pair<TBlockingQueue *, std::default_delete<TBlockingQueue>> { struct TBlockingQueue *__value_; } __ptr_; } _callBackQueue;
    struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { _Atomic BOOL __a_value; } __a_; } _isTornDown;
    FI_TBVDSBulkConfigChangedState *_bulkConfigChangedState;
    struct unordered_map<TFENode, TChildrenData, std::hash<TFENode>, std::equal_to<TFENode>, std::allocator<std::pair<const TFENode, TChildrenData>>> { struct __hash_table<std::__hash_value_type<TFENode, TChildrenData>, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, TChildrenData>, std::hash<TFENode>, std::equal_to<TFENode>>, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, TChildrenData>, std::equal_to<TFENode>, std::hash<TFENode>>, std::allocator<std::__hash_value_type<TFENode, TChildrenData>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TChildrenData>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, TChildrenData>, std::hash<TFENode>, std::equal_to<TFENode>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, TChildrenData>, std::equal_to<TFENode>, std::hash<TFENode>>> { float __value_; } __p3_; } __table_; } _nodeToChildrenDataMap;
    BOOL _checkChildrenForTags;
    int _sortBy;
    BOOL _isSortInIncreasingOrder;
    BOOL _isSortFoldersFirst;
    struct unordered_map<TFENode, TGroupModeData, std::hash<TFENode>, std::equal_to<TFENode>, std::allocator<std::pair<const TFENode, TGroupModeData>>> { struct __hash_table<std::__hash_value_type<TFENode, TGroupModeData>, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, TGroupModeData>, std::hash<TFENode>, std::equal_to<TFENode>>, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, TGroupModeData>, std::equal_to<TFENode>, std::hash<TFENode>>, std::allocator<std::__hash_value_type<TFENode, TGroupModeData>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TGroupModeData>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, TGroupModeData>, std::hash<TFENode>, std::equal_to<TFENode>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, TGroupModeData>, std::equal_to<TFENode>, std::hash<TFENode>>> { float __value_; } __p3_; } __table_; } _containerNodeToGroupDataMap;
    int _groupBy;
    struct function<std::shared_ptr<TFENodeComparator> (const TFENodeComparatorParameters &)> { struct __value_func<std::shared_ptr<TFENodeComparator> (const TFENodeComparatorParameters &)> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } _comparatorFunc;
    struct unordered_map<TFENode, FI_TBVDSBusyStateIncrementer *, std::hash<TFENode>, std::equal_to<TFENode>, std::allocator<std::pair<const TFENode, FI_TBVDSBusyStateIncrementer *>>> { struct __hash_table<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, std::hash<TFENode>, std::equal_to<TFENode>>, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, std::equal_to<TFENode>, std::hash<TFENode>>, std::allocator<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, std::hash<TFENode>, std::equal_to<TFENode>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, FI_TBVDSBusyStateIncrementer *>, std::equal_to<TFENode>, std::hash<TFENode>>> { float __value_; } __p3_; } __table_; } _firstPopBusyStateIncrementers;
    struct atomic<unsigned long> { struct __cxx_atomic_impl<unsigned long, std::__cxx_atomic_base_impl<unsigned long>> { _Atomic unsigned long long __a_value; } __a_; } _busyStateRefCount;
    struct shared_ptr<TCoalescingNodeObserverCocoaBridge> { struct TCoalescingNodeObserverCocoaBridge *__ptr_; struct __shared_weak_count *__cntrl_; } _nodeObserver;
    struct unordered_set<TFENode, std::hash<TFENode>, std::equal_to<TFENode>, std::allocator<TFENode>> { struct __hash_table<TFENode, std::hash<TFENode>, std::equal_to<TFENode>, std::allocator<TFENode>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<TFENode, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TFENode, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<TFENode, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TFENode, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TFENode, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TFENode, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<TFENode, void *> *>, std::allocator<std::__hash_node<TFENode, void *>>> { struct __hash_node_base<std::__hash_node<TFENode, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::hash<TFENode>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::equal_to<TFENode>> { float __value_; } __p3_; } __table_; } _alwaysVisibleNodes;
    BOOL _isSwitchingViewStyles;
    struct unordered_map<TFENode, TOpenContainerOptions, std::hash<TFENode>, std::equal_to<TFENode>, std::allocator<std::pair<const TFENode, TOpenContainerOptions>>> { struct __hash_table<std::__hash_value_type<TFENode, TOpenContainerOptions>, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, TOpenContainerOptions>, std::hash<TFENode>, std::equal_to<TFENode>>, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, TOpenContainerOptions>, std::equal_to<TFENode>, std::hash<TFENode>>, std::allocator<std::__hash_value_type<TFENode, TOpenContainerOptions>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, TOpenContainerOptions>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, TOpenContainerOptions>, std::hash<TFENode>, std::equal_to<TFENode>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, TOpenContainerOptions>, std::equal_to<TFENode>, std::hash<TFENode>>> { float __value_; } __p3_; } __table_; } _pendingNodeToOpenContainerOptions;
    struct unordered_map<TFENode, NodeNotificationOptions, std::hash<TFENode>, std::equal_to<TFENode>, std::allocator<std::pair<const TFENode, NodeNotificationOptions>>> { struct __hash_table<std::__hash_value_type<TFENode, NodeNotificationOptions>, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, NodeNotificationOptions>, std::hash<TFENode>, std::equal_to<TFENode>>, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, NodeNotificationOptions>, std::equal_to<TFENode>, std::hash<TFENode>>, std::allocator<std::__hash_value_type<TFENode, NodeNotificationOptions>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<TFENode, NodeNotificationOptions>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<TFENode, std::__hash_value_type<TFENode, NodeNotificationOptions>, std::hash<TFENode>, std::equal_to<TFENode>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<TFENode, std::__hash_value_type<TFENode, NodeNotificationOptions>, std::equal_to<TFENode>, std::hash<TFENode>>> { float __value_; } __p3_; } __table_; } _pendingNodeToCloseContainerOptions;
}

@property (nonatomic) BOOL handlingPendingCallbacks;
@property (readonly) int sortBy;
@property (readonly) BOOL isSortInIncreasingOrder;
@property (readonly) BOOL isSortFoldersFirst;
@property (readonly) int groupBy;
@property BOOL checkChildrenForTags;
@property (readonly) BOOL isBusy;
@property BOOL bulkConfigInProgress;
@property (getter=isSwitchingViewStyles) BOOL switchingViewStyles;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (id).cxx_construct;
- (unsigned long long)count:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)aboutToTearDown;
- (BOOL)contains:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)coalescingNodeObserver:(void *)a0 groupDefinitionChanged:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)coalescingNodeObserver:(void *)a0 nodesAdded:(const void *)a1 toObservedNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a2;
- (void)coalescingNodeObserver:(void *)a0 nodesChanged:(const void *)a1 inObservedNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a2;
- (void)coalescingNodeObserver:(void *)a0 nodesDeleted:(const void *)a1 fromObservedNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a2;
- (void)coalescingNodeObserver:(void *)a0 openChildListUpdated:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)coalescingNodeObserver:(void *)a0 openSyncCompleted:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)coalescingNodeObserver:(void *)a0 openSyncStarted:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)coalescingNodeObserver:(void *)a0 spotlightAttrSyncCompleted:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (long long)indexForChild:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 forContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (const void *)sortedChildrenForContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)setSortBy:(int)a0 inIncreasingOrder:(BOOL)a1 sortFoldersFirst:(BOOL)a2 completionHandler:(void *)a3;
- (void)_addFirstBVDSBusyStateIncrementerForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)_closeContainerNodesOnWorkerQueue:(const void *)a0 busyStateIncrementer:(id)a1 isSwitchingViewStyles:(BOOL)a2;
- (void)_decrementBusyStateRefCount;
- (struct shared_ptr<TGroupManager> { struct TGroupManager *x0; struct __shared_weak_count *x1; })_groupManagerForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 calculateFolderSizes:(BOOL)a1;
- (void)_incrementBusyStateRefCount;
- (BOOL)_isContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (BOOL)_isGroupNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)_modifyChildrenOfContainerAsync:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 withUnlockedFunctor:(const void *)a1;
- (struct shared_ptr<TFENodeComparator> { struct TFENodeComparator *x0; struct __shared_weak_count *x1; })_newGroupComparatorForContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 withGroupManager:(const void *)a1;
- (struct shared_ptr<TFENodeComparator> { struct TFENodeComparator *x0; struct __shared_weak_count *x1; })_newSortComparatorForContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 calculateFolderSizes:(BOOL)a1;
- (void)_openContainerNodesOnWorkerQueue:(const void *)a0 busyStateIncrementer:(id)a1 isSwitchingViewStyles:(BOOL)a2;
- (void)_rebuildOnWorkerQueue:(id)a0 completionHandler:(void *)a1;
- (void)_recheckChildrenForTagsOnWorkerQueue:(id)a0;
- (void)_removeAllFirstBVDSBusyStateIncrementers;
- (void)_removeAllFirstBVDSBusyStateIncrementersWhileLocked;
- (void)_removeFirstBVDSBusyStateIncrementerForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)_removeFirstBVDSBusyStateIncrementerForNodeWhileLocked:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)_resortOnWorkerQueue:(id)a0 completionHandler:(void *)a1 forceResort:(BOOL)a2;
- (void)adjustContainerNodeObserverOptions:(const void *)a0;
- (const void *)alwaysVisibleNodes;
- (BOOL)atLeastOneTaggedChildInContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)callOnMainThread:(void *)a0;
- (void)cancelDelayedNodeEventHandling;
- (const struct TFENode { struct OpaqueNodeRef *x0; } *)childOfContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 atIndex:(unsigned long long)a1;
- (void)closeContainerNodes:(const void *)a0;
- (BOOL)containerNodeIsPopulated:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)delayNodeEventHandling:(struct duration<double, std::ratio<1>> { double x0; })a0;
- (struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *x0; } x0; })descriptionForRootNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)enumerate:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 callback:(const void *)a1;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })flatten:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })flatten:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)flushPendingEvents:(void *)a0;
- (void)getGroupedChildren:(void *)a0 forContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1 countGroups:(BOOL)a2;
- (struct shared_ptr<TGroupManager> { struct TGroupManager *x0; struct __shared_weak_count *x1; })groupManagerForContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (const struct TFENode { struct OpaqueNodeRef *x0; } *)groupNodeForChildNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 rootContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (const struct TFENode { struct OpaqueNodeRef *x0; } *)groupNodeOfContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 atIndex:(unsigned long long)a1;
- (const struct TFENode { struct OpaqueNodeRef *x0; } *)groupedChildOfContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 atIndex:(unsigned long long)a1 countGroups:(BOOL)a2;
- (void)handleOpenSyncCompletedAndChildListUpdated:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 containerNodeSet:(const void *)a1 nodeToChildrenDataMapToModify:(void *)a2 groupModeDataToModify:(void *)a3 dataSourceChangedListToModify:(void *)a4 isInGroupMode:(BOOL)a5 checkChildrenForTags:(BOOL)a6;
- (void)handlePendingCallBacks:(struct duration<long long, std::ratio<1, 1000>> { long long x0; })a0;
- (unsigned long long)indexForGroupNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 forContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (long long)indexForGroupedChild:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 forContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1 countGroups:(BOOL)a2;
- (id)initWithSortBy:(int)a0 sortInIncreasingOrder:(BOOL)a1 sortFoldersFirst:(BOOL)a2 groupBy:(int)a3 checkChildrenForTags:(BOOL)a4 comparatorFunc:(const void *)a5;
- (BOOL)isContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (BOOL)isGroupNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 inContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (BOOL)isInGroupMode;
- (BOOL)isNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 childOfContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (BOOL)isNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 groupedChildOfContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)lockForRead;
- (void)lockForWrite;
- (unsigned long long)numberOfGroupNodesForContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (unsigned long long)numberOfGroupedChildrenForContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 countGroups:(BOOL)a1;
- (unsigned long long)numberOfSortedChildrenForContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)openContainerNodes:(const void *)a0;
- (void)setAlwaysVisibleNodes:(const void *)a0 append:(BOOL)a1;
- (void)setGroupBy:(int)a0 completionHandler:(void *)a1;
- (BOOL)sortOrderChangeRequiresRebuild:(int)a0 inIncreasingOrder:(BOOL)a1 sortFoldersFirst:(BOOL)a2;
- (const void *)sortedGroupNodesForContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)unlockForRead;
- (void)unlockForWrite;

@end

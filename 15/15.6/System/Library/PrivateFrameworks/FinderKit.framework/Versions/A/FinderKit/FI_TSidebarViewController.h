@class FI_TContainerLayoutManager, FI_TSidebarView, NSString, NSObject;
@protocol TSidebarViewControllerDelegate;

@interface FI_TSidebarViewController : FI_TViewController <QLSeamlessCloserDelegate, NSOutlineViewDataSource, TSidebarViewDelegate, NSMenuDelegate, NSMenuItemValidation, ISpawnOriginDelegateProtocol, TMarkTornDown> {
    FI_TSidebarView *_sidebarView;
    struct TNSWeakPtr<NSObject<TSidebarViewControllerDelegate>> { NSObject<TSidebarViewControllerDelegate> *fWeakObject; } _delegate;
    struct vector<TSidebarZone, std::allocator<TSidebarZone>> { int *__begin_; int *__end_; struct __compressed_pair<TSidebarZone *, std::allocator<TSidebarZone>> { int *__value_; } __end_cap_; } _localDataSourceCopyZones;
    struct map<TSidebarZone, TFENodeVector, std::less<TSidebarZone>, std::allocator<std::pair<const TSidebarZone, TFENodeVector>>> { struct __tree<std::__value_type<TSidebarZone, TFENodeVector>, std::__map_value_compare<TSidebarZone, std::__value_type<TSidebarZone, TFENodeVector>, std::less<TSidebarZone>>, std::allocator<std::__value_type<TSidebarZone, TFENodeVector>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSidebarZone, TFENodeVector>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<TSidebarZone, std::__value_type<TSidebarZone, TFENodeVector>, std::less<TSidebarZone>>> { unsigned long long __value_; } __pair3_; } __tree_; } _localDataSourceCopy;
    BOOL _observingShared;
    BOOL _repopulating;
    BOOL _suppressSelectionUpdate;
    BOOL _selectionChangingProgrammatically;
    BOOL _suspendRepopulation;
    BOOL _suspendedRepopulationPending;
    int _dragClickStartZone;
    struct TFENode { struct OpaqueNodeRef *fNodeRef; } _privateDragNode;
    BOOL _privateDrag;
    struct CGPoint { double x; double y; } _dragStartGlobalPoint;
    double _dragStartTime;
    struct TFENode { struct OpaqueNodeRef *fNodeRef; } _nodeToIncludeInDrop;
    BOOL _isCurrentDragARemove;
    double _optimalWidthCache;
    struct function<void ()> { struct __value_func<void ()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } _optimalWidthUpdateCallback;
    long long _rowSizeStyleForOptimalWidthCache;
    unsigned long long _mediaBrowserShownTypes;
    struct TFENode { struct OpaqueNodeRef *fNodeRef; } _nodeBeingClicked;
    struct vector<TNotificationCenterObserver, std::allocator<TNotificationCenterObserver>> { struct TNotificationCenterObserver *__begin_; struct TNotificationCenterObserver *__end_; struct __compressed_pair<TNotificationCenterObserver *, std::allocator<TNotificationCenterObserver>> { struct TNotificationCenterObserver *__value_; } __end_cap_; } _notificationCenterObservers;
    BOOL _recentlyOnActiveSpaceCache;
    double _recentlyOnActiveSpaceCacheLastCheck;
    struct shared_ptr<TFPFSGlobalProgress> { struct TFPFSGlobalProgress *__ptr_; struct __shared_weak_count *__cntrl_; } _fpfsGlobalProgress;
}

@property (class, readonly, nonatomic) double defaultSidebarWidth;

@property (retain, nonatomic) FI_TContainerLayoutManager *containerLayoutManager;
@property (readonly, weak, nonatomic) NSObject<TSidebarViewControllerDelegate> *delegate;
@property (nonatomic) BOOL restoringExpandedState;
@property (readonly, nonatomic) FI_TSidebarView *sidebar;
@property (readonly, nonatomic) double minimumSidebarWidth;
@property (readonly, nonatomic) struct TFENode { struct OpaqueNodeRef *x0; } containerSidebarTarget;
@property (readonly, nonatomic) BOOL isBackupBrowser;
@property (readonly, nonatomic) BOOL isSnapshotImageBrowser;
@property (nonatomic) struct TFENode { struct OpaqueNodeRef *x0; } selectedNode;
@property (readonly, nonatomic) double optimalWidth;
@property (readonly, nonatomic) double optimalHeight;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (getter=isTornDown) BOOL tornDown;

+ (id)iconForCategory:(int)a0 optionalSize:(struct CGSize { double x0; double x1; })a1 asyncCallback:(const void *)a2;

- (void)dealloc;
- (void).cxx_destruct;
- (void)setDelegate:(id)a0;
- (id).cxx_construct;
- (id)window;
- (id)nibName;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeForItem:(id)a0;
- (char)outlineView:(id)a0 acceptDrop:(id)a1 item:(id)a2 childIndex:(long long)a3;
- (id)outlineView:(id)a0 child:(long long)a1 ofItem:(id)a2;
- (void)outlineView:(id)a0 draggedImage:(id)a1 movedTo:(struct CGPoint { double x0; double x1; })a2;
- (void)outlineView:(id)a0 draggingEndedAt:(struct CGPoint { double x0; double x1; })a1 operation:(unsigned long long)a2;
- (void)outlineView:(id)a0 draggingSession:(id)a1 willBeginAtPoint:(struct CGPoint { double x0; double x1; })a2 forItems:(id)a3;
- (char)outlineView:(id)a0 isGroupItem:(id)a1;
- (char)outlineView:(id)a0 isItemExpandable:(id)a1;
- (long long)outlineView:(id)a0 numberOfChildrenOfItem:(id)a1;
- (id)outlineView:(id)a0 objectValueForTableColumn:(id)a1 byItem:(id)a2;
- (char)outlineView:(id)a0 shouldEditTableColumn:(id)a1 item:(id)a2;
- (char)outlineView:(id)a0 shouldSelectItem:(id)a1;
- (id)outlineView:(id)a0 tintConfigurationForItem:(id)a1;
- (unsigned long long)outlineView:(id)a0 validateDrop:(id)a1 proposedItem:(id)a2 proposedChildIndex:(long long)a3;
- (id)outlineView:(id)a0 viewForTableColumn:(id)a1 item:(id)a2;
- (char)outlineView:(id)a0 writeItems:(id)a1 toPasteboard:(id)a2;
- (void)outlineViewItemDidCollapse:(id)a0;
- (void)outlineViewItemDidExpand:(id)a0;
- (void)outlineViewItemWillExpand:(id)a0;
- (void)outlineViewSelectionDidChange:(id)a0;
- (BOOL)outlineViewShouldSlideBackAfterDragFailed:(id)a0;
- (void)setMediaBrowserShownTypes:(unsigned long long)a0;
- (char)validateMenuItem:(id)a0;
- (void)aboutToTearDown;
- (void)handleProgress:(id)a0;
- (void)removeNode:(struct TFENode { struct OpaqueNodeRef *x0; })a0;
- (void)configureView;
- (struct CGSize { double x0; double x1; })idealContentSize;
- (BOOL)isZoneExpanded:(int)a0;
- (void)setUpActionForCell:(id)a0 action:(int)a1 node:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a2;
- (struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *x0; } x0; })tagNameFromURL:(id)a0;
- (id)tagURLForSingleTagOnPasteboard:(id)a0;
- (int)remapAction:(int)a0 forNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1 mouseState:(int)a2;
- (void)rowHit:(long long)a0;
- (void)updateSelectionForCurrentTarget;
- (BOOL)acceptHeaderDrop:(id)a0 childIndex:(long long)a1;
- (int)actionForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 dimmed:(BOOL)a1;
- (void)axRowHit:(long long)a0;
- (id)buttonImageForActionKind:(int)a0 forNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1 mouseState:(int)a2;
- (BOOL)canTarget:(id)a0;
- (id)cellAtRow:(long long)a0;
- (id)cellForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cellFrameForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (BOOL)dragPastRemovalThresholdDistance:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)dragPastSidebarEdgeThresholdDistance:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)dragShouldRemove;
- (struct TFENode { struct OpaqueNodeRef *x0; })draggedNode;
- (BOOL)draggingLongEnough;
- (void)expandCollapseZone:(id)a0 expand:(BOOL)a1;
- (void)expandCollapseZoneKind:(int)a0 expand:(BOOL)a1;
- (BOOL)globalDisclosedStateForZone:(int)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })globalZoomRectForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)handleItemsAddedRemovedReordered:(id)a0;
- (void)handleItemsChanged:(id)a0;
- (BOOL)handleQuickLookWithEvent:(id)a0;
- (BOOL)hidesSharedItems;
- (id)init:(id)a0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 containerLayoutManager:(id)a2;
- (void)initialSidebarPopulation;
- (void)invalidateOptimalWidthCache;
- (BOOL)isDimmed:(id)a0;
- (BOOL)isDragInsideView;
- (BOOL)isDragOverDock;
- (BOOL)isDragOverMenuBar;
- (BOOL)isSidebarCachingBrowser;
- (BOOL)isSingleTagOnPasteboard:(id)a0;
- (BOOL)isZoneHidden:(int)a0;
- (BOOL)itemIsZoneHeader:(id)a0;
- (void)loadContentsReadZoneOrderFromPrefs:(BOOL)a0;
- (void *)localDataSourceCopy;
- (const void *)localZones;
- (id)makeCellViewForDrag:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct pair<std::function<void (FI_TMouseOverButton *)>, std::function<void (FI_TMouseOverButton *)>> { struct function<void (FI_TMouseOverButton *)> { struct __value_func<void (FI_TMouseOverButton *)> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; } x0; struct function<void (FI_TMouseOverButton *)> { struct __value_func<void (FI_TMouseOverButton *)> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; } x1; })makeDeterminateProgressAnimationSetup:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct pair<std::function<void (FI_TMouseOverButton *)>, std::function<void (FI_TMouseOverButton *)>> { struct function<void (FI_TMouseOverButton *)> { struct __value_func<void (FI_TMouseOverButton *)> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; } x0; struct function<void (FI_TMouseOverButton *)> { struct __value_func<void (FI_TMouseOverButton *)> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; } x1; })makeIndeterminateProgressAnimationSetup:(int)a0 node:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (struct pair<std::function<void (FI_TMouseOverButton *)>, std::function<void (FI_TMouseOverButton *)>> { struct function<void (FI_TMouseOverButton *)> { struct __value_func<void (FI_TMouseOverButton *)> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; } x0; struct function<void (FI_TMouseOverButton *)> { struct __value_func<void (FI_TMouseOverButton *)> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; } x1; })makeNormalButtonStateSetup:(int)a0 forNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (struct pair<std::function<void (FI_TMouseOverButton *)>, std::function<void (FI_TMouseOverButton *)>> { struct function<void (FI_TMouseOverButton *)> { struct __value_func<void (FI_TMouseOverButton *)> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; } x0; struct function<void (FI_TMouseOverButton *)> { struct __value_func<void (FI_TMouseOverButton *)> { struct type { unsigned char x0[32]; } x0; void *x1; } x0; } x1; })makeSimpleImageSetterForAction:(int)a0 forNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1 mouseState:(int)a2;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeForClick;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeForItemAt:(long long)a0 inZone:(int)a1;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })nodesForZone:(int)a0;
- (double)optimalWidthForZone:(int)a0;
- (double)optimalWidthNoScrollbar;
- (double)optionalScrollbarWidth;
- (int)preferenceKeyForZone:(int)a0;
- (void)preferencesUpdated:(id)a0;
- (BOOL)privateDrag;
- (BOOL)quicklyCheckIfNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 isDimmed:(BOOL *)a1;
- (void)reloadContentsReadZoneOrderFromPrefs:(BOOL)a0 zone:(int)a1;
- (void)reloadZone:(int)a0;
- (void)repopulateReadZoneOrderFromPrefs:(BOOL)a0;
- (void)repopulateReadZoneOrderFromPrefs:(BOOL)a0 zone:(int)a1;
- (long long)rowForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (long long)rowForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 inZone:(int)a1;
- (long long)rowIndexForItem:(id)a0 inZone:(int)a1 includeProxyNodeMatch:(BOOL)a2;
- (long long)rowIndexForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 inZone:(int)a1;
- (void)saveGlobalDisclosedState:(int)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })seamlessCloserSourceFrameOnScreenForPreviewItem:(id)a0;
- (id)seamlessCloserTransitionImageForPreviewItem:(id)a0 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (void)setHidesSharedItems:(BOOL)a0;
- (void)setOptimalWidthUpdateCallback:(const void *)a0;
- (void)sharedSectionVisibilityChanged;
- (struct TFENode { struct OpaqueNodeRef *x0; })sidebarNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 inZone:(int)a1;
- (void)sidebarView:(id)a0 draggingEnded:(id)a1;
- (unsigned long long)sidebarView:(id)a0 draggingEntered:(id)a1;
- (void)sidebarView:(id)a0 draggingExited:(id)a1;
- (id)tint:(id)a0 forMouseState:(int)a1;
- (void)unloadContents;
- (void)unloadContentsForZone:(int)a0;
- (void)updateCursorToMatchDragPoofState;
- (void)updatePasteboardToMatchDragState:(id)a0 dropNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1 dragRemove:(BOOL)a2;
- (void)updatePasteboardToMatchDragStateIfNeeded;
- (void)updateSelectionForTarget:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)updateZoneExpandedState;
- (void)updateZoneListToMatchPrefs:(BOOL)a0;
- (unsigned long long)validateNoZoneDrop;
- (int)zoneForItem:(id)a0;
- (int)zoneIndexInController:(int)a0;
- (int)zoneIndexInDataSourceCopy:(int)a0;
- (id)zoneItemForKind:(int)a0;
- (const void *)zoneList:(int)a0;
- (BOOL)zoneShowing:(int)a0;
- (id)zoomImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;

@end

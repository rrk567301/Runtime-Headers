@class FI_TKeyValueObserverGlue, NSString, NSArray, NSIndexSet, NSObject, FI_TNotificationCenterObserverGlue;

@interface FI_TBaseCollectionViewController : FI_TBrowserViewController <NSCollectionViewDelegate, NSCollectionViewDataSourcePrivate, TCollectionViewDelegateProtocol> {
    unsigned long long _pendingNodeToPropertiesToUpdateIndex;
    struct unordered_map<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>>> { struct __hash_table<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, std::hash<unsigned long>, std::equal_to<unsigned long>>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, std::equal_to<unsigned long>, std::hash<unsigned long>>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, std::hash<unsigned long>, std::equal_to<unsigned long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_map<TFENode, std::unordered_set<Property>>>, std::equal_to<unsigned long>, std::hash<unsigned long>>> { float __value_; } __p3_; } __table_; } _pendingNodeToPropertiesToUpdateMaps;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _sizeChangedObserver;
    struct TKeyValueObserver { FI_TKeyValueObserverGlue *fObserver; NSObject *fObjectToObserve; NSArray *fArrayOfObjectsToObserve; NSIndexSet *fIndexesOfObjectsToObserve; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fKeyPathToObserve; } _selectionIndexPathsObserver;
    struct TKeyValueObserver { FI_TKeyValueObserverGlue *fObserver; NSObject *fObjectToObserve; NSArray *fArrayOfObjectsToObserve; NSIndexSet *fIndexesOfObjectsToObserve; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fKeyPathToObserve; } _windowFirstResponderObserver;
    BOOL _selectionChanged;
    int _selectionCoalescing;
}

@property (nonatomic) BOOL useActiveAppearance;
@property (nonatomic) BOOL supportsPrefetching;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void).cxx_destruct;
- (unsigned long long)itemCount;
- (id)itemIdentifier;
- (id).cxx_construct;
- (id)nibName;
- (id)collectionView;
- (char)collectionView:(id)a0 acceptDrop:(id)a1 indexPath:(id)a2 dropOperation:(long long)a3;
- (id)collectionView:(id)a0 child:(long long)a1 ofRepresentedObject:(id)a2;
- (void)collectionView:(id)a0 didEndDisplayingItem:(id)a1 forRepresentedObjectAtIndexPath:(id)a2;
- (id)collectionView:(id)a0 itemForRepresentedObject:(id)a1 atIndexPath:(id)a2;
- (id)collectionView:(id)a0 itemForRepresentedObjectAtIndexPath:(id)a1;
- (long long)collectionView:(id)a0 numberOfChildrenOfRepresentedObject:(id)a1;
- (long long)collectionView:(id)a0 numberOfItemsInSection:(long long)a1;
- (unsigned long long)collectionView:(id)a0 validateDrop:(id)a1 proposedIndexPath:(id *)a2 dropOperation:(long long *)a3;
- (void)draggingSession:(id)a0 endedAtPoint:(struct CGPoint { double x0; double x1; })a1 operation:(unsigned long long)a2;
- (BOOL)handleMouseDown:(id)a0;
- (BOOL)handleMouseUp:(id)a0;
- (void)moveToBeginningOfDocument:(id)a0;
- (void)moveToEndOfDocument:(id)a0;
- (long long)numberOfSectionsInCollectionView:(id)a0;
- (int)viewStyle;
- (void)aboutToTearDown;
- (void)configureView;
- (void)initCommon;
- (BOOL)isLTRLocalization;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeAtIndex:(unsigned long long)a0;
- (void)browserViewDidMoveToWindow;
- (void)selectionChanged;
- (unsigned long long)draggingEntered:(id)a0 dropTargetView:(id)a1;
- (unsigned long long)draggingUpdated:(id)a0 dropTargetView:(id)a1;
- (struct TFENode { struct OpaqueNodeRef *x0; })firstNodeToSelectFromDirection:(int)a0;
- (BOOL)nodeIsSelected:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (id)_zoomImageFromViewForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)aboutToRemoveNodes:(const void *)a0;
- (void)concludeDragOperation:(id)a0 dropTargetView:(id)a1;
- (void)configureCollectionViewItem:(id)a0 forNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a1;
- (void)dataSourceChanged:(const void *)a0;
- (void)dataSourceChanged_buildInsert:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 :(const void *)a1 :(void *)a2 :(void *)a3;
- (void)dataSourceChanged_buildMove:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 :(const void *)a1 :(void *)a2;
- (void)dataSourceChanged_buildPropChanged:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 :(const void *)a1 :(void *)a2;
- (void)dataSourceChanged_buildRemove:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 :(const void *)a1 :(void *)a2 :(void *)a3 :(id)a4;
- (void)dataSourceItemsDidChange:(const void *)a0;
- (void)deselectAllNodes;
- (id)dragFlockIconImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 atIconSize:(double)a1 inView:(id)a2;
- (id)dragFlockLabelImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 outFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1 inView:(id)a2;
- (void)draggingEnded:(id)a0 dropTargetView:(id)a1;
- (void)draggingExited:(id)a0 dropTargetView:(id)a1;
- (void)endSelectionCoalescing:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForSection:(unsigned long long)a0;
- (unsigned long long)getSelectedNodesFromView:(void *)a0 upTo:(unsigned long long)a1;
- (void)getVisibleNodes:(void *)a0;
- (BOOL)handleKeyDown:(id)a0 currentKey:(unsigned short)a1;
- (BOOL)handleMouseDragged:(id)a0;
- (unsigned long long)indexForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (id)indexPathForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (id)indexPathsForNodes:(const void *)a0 upTo:(unsigned long long)a1;
- (long long)insertOrResortIndexOffset;
- (BOOL)isKeepArranged;
- (id)makeCompleteDragImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 outOffset:(struct CGSize { double x0; double x1; } *)a1;
- (id)makeDragImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 forTitle:(BOOL)a1 outFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (id)makeDragImageIconViewForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })nextNodeInViewAfter:(const void *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeAtEventPoint:(id)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeAtPoint:(const struct CGPoint { double x0; double x1; } *)a0 includeTarget:(BOOL)a1;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeForIndexPath:(id)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeForSectionIndex:(unsigned long long)a0;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })nodesForIndexPaths:(id)a0 upTo:(unsigned long long)a1;
- (void)performBatchUpdatesCompletionHandler:(const void *)a0 :(BOOL)a1 :(const void *)a2 :(BOOL)a3 :(BOOL)a4 :(unsigned long long)a5;
- (BOOL)performDragOperation:(id)a0 dropTargetView:(id)a1;
- (id)popoverAnchorViewForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)prefetchIconsForNewlyInsertedNodes:(const void *)a0;
- (void)prefetchIconsForNodes:(const void *)a0;
- (BOOL)prepareForDragOperation:(id)a0 dropTargetView:(id)a1;
- (void)processInvalidatedThumbnailNodes:(const void *)a0;
- (BOOL)receiveDrop:(void *)a0 draggingInfo:(id)a1;
- (void)registerCollectionViewItemClassOrNib;
- (void)revealNodes:(const void *)a0 select:(BOOL)a1;
- (BOOL)sectionsWillBeReloaded:(const void *)a0;
- (void)selectAllNodes;
- (void)selectFirstIconFromDirection:(int)a0;
- (unsigned long long)selectedNodesCount;
- (void)selectionIndexPathsChanged:(id)a0;
- (BOOL)setSelectedNodeIfAllowed:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)setSelectedNodes:(const void *)a0 byExtendingSelection:(BOOL)a1;
- (BOOL)shouldRevealSelection:(const void *)a0;
- (void)startSelectionCoalescing:(id)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })thumbnailTargetNode;
- (struct TFENode { struct OpaqueNodeRef *x0; })thumbnailTargetNodeForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })thumbnailTargetNodeFromContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)updateDraggingItemsForDrag:(id)a0 dropTargetView:(id)a1;
- (unsigned long long)validateDrop:(id)a0 proposedIndexPath:(id *)a1 dropOperation:(long long *)a2 dropTargetNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a3 outDropTargetNodeAcceptsDrop:(BOOL *)a4;
- (void)willPresentPopoverForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;

@end

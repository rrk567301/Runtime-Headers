@class FI_TNodeViewSettings, NSEvent, NSObject, FI_TNotificationCenterObserverGlue, NSString, NSIndexSet, FI_TBrowserContainerController, FI_TKeyValueObserverGlue, NSArray, NSView, FI_TBrowserViewDataSource, FINode, NSSharingServicePicker;

@interface FI_TBaseBrowserViewController : FI_TViewController <NSSharingServiceDelegate, NSTouchBarDelegate, NSDraggingSource, NSMenuItemValidation, NSSharingServicePickerDelegate, TBrowserViewDelegate, TDropOperationDelegateProtocol, TNodeTaskDelegateProtocol, TContextMenuDelegate, TMarkTornDown, TQLPreviewWindowControllerProtocol, TTypeSelectDelegate, TFloatingInputWindowDelegateProtocol, TThumbnailExtractorDelegate> {
    struct TNSWeakPtr<FI_TBrowserContainerController> { FI_TBrowserContainerController *fWeakObject; } _weakContainerController;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _dataSourceChangedObserver;
    struct shared_ptr<TThumbnailExtractorController> { struct TThumbnailExtractorController *__ptr_; struct __shared_weak_count *__cntrl_; } _thumbnailController;
    struct vector<std::shared_ptr<TIconFetcher>, std::allocator<std::shared_ptr<TIconFetcher>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<TIconFetcher> *, std::allocator<std::shared_ptr<TIconFetcher>>> { void *__value_; } __end_cap_; } _pendingIconFetchers;
    struct TEventMonitor { NSObject *fEventMonitorToken; } _localModifierFlagsEventMonitor;
    struct TEventMonitor { NSObject *fEventMonitorToken; } _globalModifierFlagsEventMonitor;
    NSEvent *_mouseDownEventForDrag;
    struct TNSWeakPtr<FINode> { FINode *fWeakObject; } _nodeToDoubleClick;
    struct TFENodeVector { struct TFENode *__begin_; struct TFENode *__end_; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *__value_; } __end_cap_; } _orderedSelection;
    NSSharingServicePicker *_toolbarSharingServicePicker;
    NSSharingServicePicker *_weakToolbarSharingServicePicker;
    NSView *_anchoringViewForSharingService;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _browserViewWillMoveToWindowObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _browserViewDidMoveToWindowObserver;
    struct TKeyValueObserver { FI_TKeyValueObserverGlue *fObserver; NSObject *fObjectToObserve; NSArray *fArrayOfObjectsToObserve; NSIndexSet *fIndexesOfObjectsToObserve; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fKeyPathToObserve; } _browserViewEffectiveAppearanceObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _browserViewBackingPropertiesObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _browserWindowDidBecomeMainObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _browserWindowDidResignMainObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _browserWindowDidBecomeKeyObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _browserWindowDidResignKeyObserver;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _tagsPopoverDidCloseObserver;
}

@property (retain, nonatomic) NSEvent *mouseDownEventForDrag;
@property (nonatomic) struct TFENode { struct OpaqueNodeRef *x0; } nodeToDoubleClick;
@property (readonly, nonatomic) int includeBadgeInIconImage;
@property (readonly, nonatomic) void *thumbnailController;
@property (weak, nonatomic) FI_TBrowserViewDataSource *dataSource;
@property (weak, nonatomic) FI_TBrowserContainerController *containerController;
@property (retain, nonatomic) FI_TNodeViewSettings *viewSettings;
@property (nonatomic) double iconSize;
@property (readonly, nonatomic) double scaleFactor;
@property (readonly, nonatomic, getter=isDarkBackground) BOOL darkBackground;
@property (nonatomic) double textSize;
@property (nonatomic) BOOL showIconPreview;
@property (readonly, nonatomic) unsigned long long selectedNodesCount;
@property (readonly, nonatomic) BOOL isEditingTags;
@property (retain, nonatomic) NSView *anchoringViewForSharingService;
@property (nonatomic) BOOL forceSharingCollaboration;
@property (nonatomic) BOOL openSavePanelMode;
@property (nonatomic) struct optional<std::pair<TFENode, TString>> { union { char __null_state_; struct pair<TFENode, TString> { struct TFENode { struct OpaqueNodeRef *fNodeRef; } first; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } second; } __val_; } ; BOOL __engaged_; } currentPopoverNodeCellIdentifierPair;
@property (nonatomic) BOOL allowsDraggingFilesIn;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (getter=isTornDown) BOOL tornDown;

+ (void)addTagsItemsToFileMenu:(id)a0;
+ (BOOL)canDownloadNowFromContextualMenu:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
+ (void)openNodeInTerminal:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
+ (void *)typeSelectControllerWithDelegate:(id)a0;

- (id)performSelector:(SEL)a0 withObject:(id)a1;
- (void).cxx_destruct;
- (unsigned long long)itemCount;
- (const struct TFENode { struct OpaqueNodeRef *x0; } *)target;
- (id).cxx_construct;
- (id)anchoringViewForSharingService:(id)a0 showRelativeToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1 preferredEdge:(unsigned long long *)a2;
- (void)cmdOpen:(id)a0;
- (void)draggingSession:(id)a0 endedAtPoint:(struct CGPoint { double x0; double x1; })a1 operation:(unsigned long long)a2;
- (unsigned long long)draggingSession:(id)a0 sourceOperationMaskForDraggingContext:(long long)a1;
- (char)ignoreModifierKeysForDraggingSession:(id)a0;
- (id)scrollView;
- (struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *x0; } x0; })searchString;
- (void)selectAll:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sharingService:(id)a0 sourceFrameOnScreenForShareItem:(id)a1;
- (id)sharingService:(id)a0 sourceWindowForShareItems:(id)a1 sharingContentScope:(long long *)a2;
- (id)sharingService:(id)a0 transitionImageForShareItem:(id)a1 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (void)sharingService:(id)a0 willShareItems:(id)a1;
- (id)sharingServicePicker:(id)a0 delegateForSharingService:(id)a1;
- (void)sharingServicePicker:(id)a0 didChooseSharingService:(id)a1;
- (id)sharingServicePicker:(id)a0 sharingServicesForItems:(id)a1 proposedSharingServices:(id)a2;
- (id)validRequestorForSendType:(id)a0 returnType:(id)a1;
- (char)validateMenuItem:(id)a0;
- (void)windowDidBecomeKey:(id)a0;
- (void)windowDidBecomeMain:(id)a0;
- (void)windowDidResignKey:(id)a0;
- (void)windowDidResignMain:(id)a0;
- (BOOL)writeSelectionToPasteboard:(id)a0 types:(id)a1;
- (void)aboutToTearDown;
- (void)configureView;
- (void)initCommon;
- (BOOL)isLTRLocalization;
- (BOOL)validateDuplicate:(id)a0;
- (BOOL)validateSelectAll:(id)a0;
- (id)browserView;
- (void)browserViewDidMoveToWindow;
- (void)browserViewWillMoveToWindow:(id)a0;
- (void)selectionChanged;
- (void)cmdDownloadNow:(id)a0;
- (void)cmdPin:(id)a0;
- (void)cmdScreenShare:(id)a0;
- (void)commonSetLabel:(long long)a0;
- (unsigned long long)draggingEntered:(id)a0 dropTargetView:(id)a1;
- (BOOL)filterQuickLookNodes:(const void *)a0 originalNodes:(void *)a1 nodesToPreview:(void *)a2 allowFolders:(BOOL)a3;
- (void)flushNodeEvents;
- (void)invalidateThumbnailForKeyNodes:(const void *)a0;
- (BOOL)isTypeSelectInProgressWithTime:(double)a0;
- (void)typeSelectNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (BOOL)validateRename:(id)a0;
- (void)cmdDeselectAll:(id)a0;
- (void)cmdMoveToTrash:(id)a0;
- (void)cmdSetTagColor:(id)a0;
- (void)handleDuplicateCommand:(const void *)a0 exactly:(BOOL)a1;
- (BOOL)isBackupBrowser;
- (void)setAccessibilityForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 inView:(id)a1;
- (BOOL)validateMoveToTrashFromToolbar:(id)a0;
- (BOOL)validateSortBy:(id)a0;
- (id)_zoomImageFromViewForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)addOffsetSpatialDataFromNodes:(const void *)a0 toPropertyList:(void *)a1;
- (void)addPendingIconFetcher:(const void *)a0;
- (void)addSpatialDataForLocationInView:(const struct CGPoint { double x0; double x1; } *)a0 toPropertyList:(void *)a1;
- (id)appCustomMenuItemsForNodes:(const void *)a0;
- (void)attemptToSelectPendingNodes;
- (void)becomeActiveQLWindowController;
- (id)beginDraggingNodes:(const void *)a0 mouseDownEvent:(id)a1;
- (id)beginDraggingNodes:(const void *)a0 mouseDownEvent:(id)a1 dragSourceView:(id)a2;
- (void)browserViewBackingPropertiesChanged;
- (void)browserViewEffectiveAppearanceChanged;
- (BOOL)canHaveRedundantReplicaNodes;
- (BOOL)canHaveReplicaNodes;
- (void)cancelDelayedNodeEventHandling;
- (void)checkDarkBackground;
- (void)clearTypeSelectBuffer;
- (void)closePreviewPanel;
- (void)cmdArrange:(id)a0;
- (void)cmdDeleteImmediately:(id)a0;
- (void)cmdDoNotSyncItems:(id)a0;
- (void)cmdDuplicate:(id)a0;
- (void)cmdMoveToTrashFromToolbar:(id)a0;
- (void)cmdOpenParent:(id)a0;
- (void)cmdQuickLook:(id)a0;
- (void)cmdRemoveAllTags:(id)a0;
- (void)cmdRemoveDownload:(id)a0;
- (void)cmdRemoveLabel1:(id)a0;
- (void)cmdRemoveLabel2:(id)a0;
- (void)cmdRemoveLabel3:(id)a0;
- (void)cmdRemoveLabel4:(id)a0;
- (void)cmdRemoveLabel5:(id)a0;
- (void)cmdRemoveLabel6:(id)a0;
- (void)cmdRemoveLabel7:(id)a0;
- (void)cmdRemoveTag:(id)a0;
- (void)cmdRename:(id)a0;
- (void)cmdResumeSyncingItems:(id)a0;
- (void)cmdSetLabel0:(id)a0;
- (void)cmdSetLabel1:(id)a0;
- (void)cmdSetLabel2:(id)a0;
- (void)cmdSetLabel3:(id)a0;
- (void)cmdSetLabel4:(id)a0;
- (void)cmdSetLabel5:(id)a0;
- (void)cmdSetLabel6:(id)a0;
- (void)cmdSetLabel7:(id)a0;
- (void)cmdSetLabel:(id)a0;
- (void)cmdShare:(id)a0;
- (void)cmdShareFromToolbarItem:(id)a0;
- (void)cmdShareTargetWithICloud:(id)a0;
- (void)cmdShowPinnedFolder:(id)a0;
- (void)cmdSortBy:(id)a0;
- (void)cmdToggleFavoriteTag:(id)a0;
- (void)cmdUnpin:(id)a0;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })commandTarget:(SEL)a0;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })commandTarget:(SEL)a0 upTo:(unsigned long long)a1;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })commandValidationTarget:(SEL)a0;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })commandValidationTarget:(SEL)a0 isPartial:(BOOL *)a1;
- (void)commonRemoveLabel:(long long)a0;
- (BOOL)commonValidateOpen:(id)a0;
- (void)configureDraggedTypes;
- (void)configureModifierFlagsEventMonitor;
- (id)contextMenuItemTarget;
- (void)dataSourceChanged:(const void *)a0;
- (void)delayNodeEventHandling:(struct duration<double, std::ratio<1>> { double x0; })a0;
- (void)deselectAllNodes;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dragFlockingFrameForDraggingItem:(id)a0 dropTargetView:(id)a1 mouseLocationInView:(const struct CGPoint { double x0; double x1; } *)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dragFlockingFrameForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 dropTargetView:(id)a1;
- (struct CGSize { double x0; double x1; })dragFlockingFrameSizeForDropTargetView:(id)a0;
- (id)dragFlockingImageComponentsForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 dropTargetView:(id)a1;
- (unsigned long long)dragOperationWhenMovingInsideTargetAndCheckingModifiers;
- (id)draggedTypesForDropTargetView:(id)a0;
- (void)draggingEnded:(id)a0 dropTargetView:(id)a1;
- (void)draggingExited:(id)a0 dropTargetView:(id)a1;
- (BOOL)fetchIconifiedThumbnails;
- (void)flushNodeEventsWithCompletion:(void *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })focusNode;
- (BOOL)focusedOnSearchResults;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct pair<TFENodeVector, unsigned long> { struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; } x0; unsigned long long x1; })getCommandTarget:(SEL)a0 upTo:(unsigned long long)a1;
- (void)getDropTargetNode:(struct TFENode { struct OpaqueNodeRef *x0; } *)a0 fromDraggingInfo:(id)a1 inDropTargetView:(id)a2;
- (void)getQuickLookNodes:(void *)a0;
- (unsigned long long)getSelectedNodes:(void *)a0;
- (unsigned long long)getSelectedNodes:(void *)a0 upTo:(unsigned long long)a1;
- (unsigned long long)getSelectedNodesForQuickLook:(void *)a0 includeTarget:(BOOL)a1;
- (unsigned long long)getSelectedNodesForQuickLook:(void *)a0 includeTarget:(BOOL)a1 upTo:(unsigned long long)a2;
- (unsigned long long)getSelectedNodesFromView:(void *)a0 upTo:(unsigned long long)a1;
- (unsigned long long)getSelectedNodesInFocus:(void *)a0;
- (unsigned long long)getSelectedNodesInFocus:(void *)a0 upTo:(unsigned long long)a1;
- (BOOL)getSelectionForServices:(void *)a0;
- (unsigned long long)getTargetSelection:(void *)a0 includeTarget:(BOOL)a1;
- (unsigned long long)getTargetSelection:(void *)a0 includeTarget:(BOOL)a1 upTo:(unsigned long long)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })globalFrameForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })globalIconFrameForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })globalZoomRectForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (BOOL)groupingByTag;
- (void)handleCmdEditTags:(id)a0;
- (BOOL)handleKeyDown:(id)a0 currentKey:(unsigned short)a1;
- (void)handleMoveToTrashCommand:(const void *)a0 immediately:(BOOL)a1;
- (void)handleMoveToTrashOrPutBackCommand:(const void *)a0;
- (void)handlePreflightServiceWithItems:(id)a0 service:(id)a1 completion:(const void *)a2;
- (BOOL)handleQuickLookWithEvent:(id)a0;
- (BOOL)handleUnicodeTextInput:(id)a0 atTime:(double)a1;
- (BOOL)handleValidateEditTags:(id)a0;
- (BOOL)handleValidateOpen:(const void *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })iconFrameForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (id)iconImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (BOOL)inBrowseMode;
- (struct optional_bool { union { char x0; BOOL x1; } x0; BOOL x1; })includeTargetForCommandSelector:(SEL)a0;
- (void)invalidateKeyNodes:(const void *)a0 processNodes:(const void *)a1;
- (BOOL)isActiveQLWindowController;
- (BOOL)isBrowseBySize;
- (BOOL)isDesktopBrowser;
- (BOOL)isTimeMachineBrowser;
- (struct TFENode { struct OpaqueNodeRef *x0; })nextNodeInViewAfter:(const void *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeAtPoint:(const struct CGPoint { double x0; double x1; } *)a0 includeTarget:(BOOL)a1;
- (struct TFENode { struct OpaqueNodeRef *x0; })nodeForDraggingItem:(id)a0;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })nodesInBrowser;
- (void)offsetSpatialData:(struct IconSpatialData { int x0; int x1; int x2; short x3; } *)a0;
- (void)openPreviewPanelInFullScreen:(BOOL)a0;
- (void)openQuickLookNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)openSelectedNodes:(const void *)a0 modifiers:(unsigned long long)a1 allowTabs:(BOOL)a2;
- (void)openSelection;
- (void)openSelectionWithModifiers:(unsigned long long)a0 allowTabs:(BOOL)a1;
- (struct TFENode { struct OpaqueNodeRef *x0; })parentNodeToOpen:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (const void *)pendingIconFetchers;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })pendingNodesToSelectUpTo:(unsigned long long)a0;
- (BOOL)performDragOperation:(id)a0 dropTargetView:(id)a1;
- (id)popoverAnchorViewForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct pair<bool, TFENodeVector> { BOOL x0; struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; } x1; })preCheckFPActionForNodes:(id)a0 allowPartialValidation:(BOOL)a1 forUIElement:(id)a2;
- (void)processInvalidatedThumbnailNodes:(const void *)a0;
- (BOOL)quickLookHandleEvent:(id)a0;
- (id)quickLookSharedPreviewView;
- (void)registerContainerWithNodeKeyCache:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)registerContainerWithThumbnailCache:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)reloadIconsInView;
- (void)removePendingIconFetcher:(const void *)a0;
- (void)resignActiveQLWindowController;
- (const void *)resolvedTargetPath;
- (void)revealNodes:(const void *)a0 select:(BOOL)a1;
- (void)selectAllNodes;
- (void)selectContextMenuTargetNodesForCommand:(SEL)a0;
- (void)selectNodesForTask:(const void *)a0 startEditing:(BOOL)a1;
- (void)selectNodesNowOrLater:(const void *)a0;
- (unsigned long long)selectedNodesCountInFocus;
- (void)setSelectedNodes:(const void *)a0 byExtendingSelection:(BOOL)a1;
- (void)shareNodes:(const void *)a0 withSpecificSharingService:(id)a1;
- (void)shareNodes:(struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })a0 withSpecificSharingServiceName:(id)a1;
- (void)shareWithSharingService:(id)a0 verticalInset:(struct optional<double> { union { char x0; double x1; } x0; BOOL x1; })a1;
- (void)shareWithSpecificSharingServiceName:(id)a0;
- (BOOL)shouldTypeSelectForEvent:(id)a0 withCurrentSearchString:(id)a1;
- (void)showingTagsPopover:(id)a0;
- (BOOL)snapNodeToGridNowOrLater:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 startEditing:(BOOL)a1 renameOp:(id)a2;
- (BOOL)startEditingNodeNowOrLater:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 renameOp:(id)a1;
- (BOOL)startEditingWithNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 renameOp:(id)a1;
- (void)stopEditing:(BOOL)a0;
- (BOOL)targetIsSearch;
- (struct optional<TThumbnailExtractorData> { union { char x0; struct TThumbnailExtractorData { struct TFENode { struct OpaqueNodeRef *x0; } x0; id x1; struct map<unsigned int, TThumbnailExtractorData::TImageRepData, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, TThumbnailExtractorData::TImageRepData>>> { struct __tree<std::__value_type<unsigned int, TThumbnailExtractorData::TImageRepData>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, TThumbnailExtractorData::TImageRepData>, std::less<unsigned int>>, std::allocator<std::__value_type<unsigned int, TThumbnailExtractorData::TImageRepData>>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, TThumbnailExtractorData::TImageRepData>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, TThumbnailExtractorData::TImageRepData>, std::less<unsigned int>>> { unsigned long long x0; } x2; } x0; } x2; int x3; struct TFENodeData { id x0; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *x0; } x0; } x1; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *x0; } x0; } x2; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *x0; } x0; } x3; struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> { struct __CFFileSecurity *x0; } x4; BOOL x5; BOOL x6; BOOL x7; } x4; } x1; } x0; BOOL x1; })thumbnailExtractorDataForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })thumbnailTargetNodeForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })thumbnailTargetNodeFromContainerNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (int)thumbnailTypeToPrefetch;
- (long long)titleBarSeparatorStyle;
- (void)titleOfNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 didChangeTo:(id)a1 renameOp:(id)a2;
- (void)togglePreviewPanelWithFullScreen:(BOOL)a0;
- (struct TFENodeVector { struct TFENode *x0; struct TFENode *x1; struct __compressed_pair<TFENode *, std::allocator<TFENode>> { struct TFENode *x0; } x2; })typeSelectCandidateNodes;
- (BOOL)typeSelectEvent:(const void *)a0 atTime:(double)a1;
- (unsigned long long)typeSelectGetSelectedNodes:(void *)a0;
- (void)unregisterContainerWithNodeKeyCache:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)unregisterContainerWithThumbnailCache:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (void)updateDraggingItemsForDrag:(id)a0 dropTargetView:(id)a1;
- (void)updateDraggingItemsForDrag:(id)a0 dropTargetView:(id)a1 nodesToUpdate:(const void *)a2;
- (void)updateOrderedSelection;
- (void)updatePreviewPanel;
- (void)updateSTFEditorLocation;
- (BOOL)validateArrange:(id)a0;
- (BOOL)validateDeleteImmediately:(id)a0;
- (BOOL)validateDeselectAll:(id)a0;
- (BOOL)validateDoNotSyncItems:(id)a0;
- (BOOL)validateDownloadNow:(id)a0;
- (BOOL)validateFPActionForNodes:(id)a0 forUIElement:(id)a1 withStrings:(const void *)a2;
- (BOOL)validateImportFromDevice;
- (BOOL)validateMoveToTrash:(id)a0;
- (BOOL)validateOpen:(id)a0;
- (BOOL)validateOpenParent:(id)a0;
- (BOOL)validateOpenParentCommon:(id)a0;
- (BOOL)validatePin:(id)a0;
- (BOOL)validateQuickLook:(id)a0;
- (BOOL)validateQuickLookWithNodes:(const void *)a0;
- (BOOL)validateRemoveAllTags:(id)a0;
- (BOOL)validateRemoveDownload:(id)a0;
- (BOOL)validateRemoveTag:(id)a0;
- (BOOL)validateResumeSyncingItems:(id)a0;
- (BOOL)validateScreenShare:(id)a0;
- (BOOL)validateSetLabel:(id)a0;
- (BOOL)validateShare:(id)a0;
- (BOOL)validateShowPinnedFolder:(id)a0;
- (BOOL)validateToggleFavoriteTag:(id)a0;
- (BOOL)validateUnpin:(id)a0;
- (void)viewDidSyncToDataSource:(const void *)a0;
- (BOOL)waitingForThumbnailForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (struct TFENode { struct OpaqueNodeRef *x0; })wellPositionedNodeFromNodes:(const void *)a0 browserViewClickPoint:(struct optional<CGPoint> { union { char x0; struct CGPoint { double x0; double x1; } x1; } x0; BOOL x1; })a1;
- (void)willPresentPopoverForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (id)zoomImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })zoomRectForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0;
- (id)zoomThumbnailImageForNode:(const struct TFENode { struct OpaqueNodeRef *x0; } *)a0 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;

@end

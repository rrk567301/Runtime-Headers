@class NSObject, NSArray, FIFinderViewGutsController, NSURL, NSLayoutConstraint, NSStackView, FI_TNotificationCenterObserverGlue;
@protocol FIFinderViewDelegate;

@interface FIFinderView : NSView {
    id<FIFinderViewDelegate> _delegate;
    struct TNotificationCenterObserver { NSObject *fObservedObject; struct TString { struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> { struct __CFString *fRef; } fString; } fNotificationName; FI_TNotificationCenterObserverGlue *fFunctorGlue; BOOL fIsDistributedObserving; struct function<NSNotificationCenter *()> { struct __value_func<NSNotificationCenter *()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } fCenterProvider; } _windowDidBecomeKeyObserver;
}

@property (retain, nonatomic) FIFinderViewGutsController *controller;
@property (retain, nonatomic) NSLayoutConstraint *gutsBottomConstraint;
@property (retain, nonatomic) NSLayoutConstraint *gutsWidthConstraint;
@property (retain, nonatomic) NSArray *gutsViewFrozenCollapsedSizeConstraints;
@property (nonatomic) char treatsFilePackagesAsDirectories;
@property (nonatomic) char showsHiddenFiles;
@property (nonatomic) char resolvesAliases;
@property (nonatomic) char canClickDisabledFiles;
@property (nonatomic) char allowsExpandingMultipleDirectories;
@property (nonatomic) char allowsMultipleSelection;
@property (nonatomic) char isSavePanel;
@property (readonly, nonatomic) char canCreateNewFolder;
@property (readonly, nonatomic) char canSaveNewDocument;
@property (readonly, nonatomic) char isNewFolderDialogRunning;
@property (readonly, nonatomic) char hasCollapseButton;
@property (nonatomic) char showsNewDocumentButton;
@property (nonatomic) char showsSidebar;
@property (nonatomic) char offersHideExtension;
@property (nonatomic) char hideExtension;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } minimumViewSize;
@property (weak, nonatomic) id<FIFinderViewDelegate> delegate;
@property (nonatomic) BOOL downloadsUbiquitousContents;
@property (retain, nonatomic) NSURL *directoryURL;
@property (retain, nonatomic) NSURL *rootDirectoryURL;
@property (nonatomic) int viewStyle;
@property (readonly, nonatomic) double sidebarWidth;
@property (copy, nonatomic) NSArray *selectedURLs;
@property (readonly, nonatomic) NSArray *selectedRawURLs;
@property (nonatomic) char hidesSharedSection;
@property (readonly, nonatomic) NSStackView *browserStackView;
@property (readonly, nonatomic) NSStackView *topBrowserStackView;
@property (readonly, nonatomic) NSStackView *bottomBrowserStackView;

+ (void)checkForLeaksAfterCloseAll;
+ (id)keyPathsForValuesAffectingAllowsExpandingMultipleDirectories;
+ (id)keyPathsForValuesAffectingAllowsMultipleSelection;
+ (id)keyPathsForValuesAffectingBottomBrowserStackView;
+ (id)keyPathsForValuesAffectingCanClickDisabledFiles;
+ (id)keyPathsForValuesAffectingCanCreateNewFolder;
+ (id)keyPathsForValuesAffectingCanSaveNewDocument;
+ (id)keyPathsForValuesAffectingDirectoryURL;
+ (id)keyPathsForValuesAffectingHideExtension;
+ (id)keyPathsForValuesAffectingHidesSharedItems;
+ (id)keyPathsForValuesAffectingIsNewFolderDialogRunning;
+ (id)keyPathsForValuesAffectingIsSavePanel;
+ (id)keyPathsForValuesAffectingOffersHideExtension;
+ (id)keyPathsForValuesAffectingResolvesAliases;
+ (id)keyPathsForValuesAffectingRootDirectoryURL;
+ (id)keyPathsForValuesAffectingSelectedRawURLs;
+ (id)keyPathsForValuesAffectingSelectedURLs;
+ (id)keyPathsForValuesAffectingShowsHiddenFiles;
+ (id)keyPathsForValuesAffectingShowsNewDocumentButton;
+ (id)keyPathsForValuesAffectingTopBrowserStackView;
+ (id)keyPathsForValuesAffectingTreatsFilePackagesAsDirectories;
+ (id)keyPathsForValuesAffectingViewStyle;

- (void)dealloc;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (id).cxx_construct;
- (id)locationAreaLeadingLayoutAnchor;
- (void)refreshContents;
- (void)windowOrderedIn;
- (char)acceptsPreviewPanelControl:(id)a0;
- (void)beginPreviewPanelControl:(id)a0;
- (id)documentsDirectoryURL;
- (void)endPreviewPanelControl:(id)a0;
- (BOOL)expanded;
- (double)fauxToolbarHeightForAppCentric:(char)a0 runningAsAService:(char)a1;
- (void)finishAnimation:(char)a0;
- (void)hidePreviewPanelIfNecessary;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 options:(id)a1;
- (id)locationAreaTrailingLayoutAnchor;
- (char)makeNewFolderForSavePanel:(id)a0;
- (char)maySaveNewItemInThisLocation:(id)a0;
- (char)performKeyEquivalent:(id)a0;
- (void)prepForAnimatedTransition:(char)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })seamlessOpener:(id)a0 sourceFrameOnScreenForPreviewItem:(id)a1;
- (id)seamlessOpener:(id)a0 transitionImageForPreviewItem:(id)a1 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (void)selectFirstKeyView;
- (id)selectedSeamlessOpenerPreviewItems;
- (void)setExpanded:(char)a0;
- (void)setMediaBrowserShownTypes:(unsigned long long)a0;
- (char)shouldEnableShareButton;
- (char)showGotoWithInitialFilename:(id)a0;
- (char)sidebarContainsURL:(id)a0;
- (char)startDownloadingSelectedItemsIfNecessary;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)a0;
- (id)whereLabelLeadingLayoutAnchor;
- (id)whereLabelTrailingLayoutAnchor;
- (void)windowOrderedOut;
- (id)activeContainer;
- (void)_commonFinderViewInit:(id)a0;
- (BOOL)animatingExpandOrCollapse;
- (void)cacheShareButton:(id)a0;
- (void)cacheTagsButton:(id)a0;
- (void)canCreateNewFolderWithReplyBlock:(id /* block */)a0;
- (void)disableHistoryAndDoWork:(id /* block */)a0;
- (void)ourWindowDidBecomeKey;
- (void)setAnimatingExpandOrCollapse:(BOOL)a0;
- (void)setTopAccessory:(id)a0;
- (char)shouldEnableTagsButton;

@end

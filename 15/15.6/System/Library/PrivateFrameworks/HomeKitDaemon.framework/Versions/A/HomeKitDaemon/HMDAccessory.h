@class NSDictionary, HMDApplicationData, HMAccessoryCategory, NSNotificationCenter, HMDRoom, HMDAccessoryNetworkAccessViolation, NSString, NSMutableSet, NSArray, HMFMessageDispatcher, NSObject, HMDVendorModelEntry, NSData, HMDSoftwareUpdate, HMDNetworkRouterFirewallRuleAccessoryIdentifier, HMFVersion, NSUUID, HMDAccessoryVersion, NSDate, NSNumber, HMDHome;
@protocol HMDFeaturesDataSource, OS_dispatch_queue;

@interface HMDAccessory : HMFObject <HMDBulletinIdentifiers, HMDSoftwareUpdateDataSource, NSSecureCoding, HMDHomeMessageReceiver, HMDBackingStoreObjectProtocol, HMFDumpState, HMFLogging> {
    struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } ourl_lock; unsigned int ourl_count; } _lock;
    NSMutableSet *_accessoryProfiles;
}

@property (class, readonly) char supportsSecureCoding;

@property (nonatomic, readonly) char isDemoAccessory;
@property (nonatomic, readonly) char isCurrentDemoAccessory;
@property (readonly, copy, nonatomic) NSString *contextID;
@property (readonly, copy, nonatomic) NSUUID *contextSPIUniqueIdentifier;
@property (readonly, copy) NSString *urlString;
@property (readonly, copy) NSDictionary *assistantObject;
@property (readonly) HMDNetworkRouterFirewallRuleAccessoryIdentifier *metadataIdentifier;
@property (readonly, nonatomic) NSNotificationCenter *notificationCenter;
@property (nonatomic, getter=isPrimary) char primary;
@property (nonatomic, getter=isSuspendCapable) char suspendCapable;
@property (nonatomic) long long currentNetworkProtectionMode;
@property (nonatomic) long long networkClientLAN;
@property (retain, nonatomic) NSUUID *networkClientProfileFingerprint;
@property (nonatomic) long long wiFiCredentialType;
@property (retain, nonatomic) NSArray *allowedHosts;
@property (retain, nonatomic) HMDAccessoryNetworkAccessViolation *networkAccessViolation;
@property (copy, nonatomic) NSString *pendingConfigurationIdentifier;
@property (retain, nonatomic) NSDate *lastSeenDate;
@property (retain, nonatomic) NSUUID *configuredNetworkProtectionGroupUUID;
@property (readonly, nonatomic) NSUUID *defaultNetworkProtectionGroupUUID;
@property (retain) id<HMDFeaturesDataSource> featuresDataSource;
@property (retain, nonatomic) NSData *wiFiUniquePreSharedKey;
@property (retain, nonatomic) NSUUID *networkRouterUUID;
@property (retain, nonatomic) NSNumber *networkClientIdentifier;
@property (copy) id /* block */ hashedRouteFactory;
@property (retain, nonatomic) NSUUID *uuid;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly, nonatomic) long long reachableTransports;
@property (nonatomic, getter=isRemoteAccessEnabled) char remoteAccessEnabled;
@property (retain, nonatomic) HMFMessageDispatcher *msgDispatcher;
@property (retain, nonatomic) HMAccessoryCategory *category;
@property (retain, nonatomic) NSNumber *categoryIdentifier;
@property (retain, nonatomic) HMDRoom *room;
@property (retain, nonatomic) NSString *configuredName;
@property (nonatomic) unsigned long long configNumber;
@property (nonatomic, getter=isReachable) char reachable;
@property (nonatomic, getter=hasActiveSession) char connected;
@property (nonatomic) unsigned long long accessoryReprovisionState;
@property (nonatomic) double lastPairingFailureTime;
@property (nonatomic) unsigned long long consecutivePairingFailures;
@property (nonatomic) char resetOnBackoffExpiry;
@property (retain, nonatomic) HMDSoftwareUpdate *softwareUpdate;
@property (copy, nonatomic) NSUUID *preferredMediaUserUUID;
@property (copy, nonatomic) NSNumber *preferredMediaUserSelectionTypeNumber;
@property (weak, nonatomic) HMDAccessory *hostAccessory;
@property (nonatomic, getter=isLowBattery) char lowBattery;
@property (copy, nonatomic) HMDAccessoryVersion *firmwareVersion;
@property (readonly) char supportsIdentify;
@property (readonly, copy) NSUUID *spiClientIdentifier;
@property (readonly, copy) NSUUID *endpointIdentifier;
@property (readonly, getter=isCurrentAccessory) char currentAccessory;
@property (copy, nonatomic) NSString *identifier;
@property (readonly, nonatomic) NSNumber *initialCategoryIdentifier;
@property (readonly, copy, nonatomic) NSString *name;
@property (weak) HMDHome *home;
@property (copy, nonatomic) NSString *providedName;
@property (readonly, copy, nonatomic) NSString *model;
@property (readonly, copy, nonatomic) NSString *initialModel;
@property (readonly, copy, nonatomic) NSString *manufacturer;
@property (readonly, copy, nonatomic) NSString *initialManufacturer;
@property (readonly, copy, nonatomic) NSString *displayableFirmwareVersion;
@property (readonly, copy, nonatomic) NSString *serialNumber;
@property (readonly, copy, nonatomic) HMDVendorModelEntry *vendorInfo;
@property (readonly, nonatomic) NSString *productData;
@property (readonly, nonatomic) NSString *productGroup;
@property (readonly, nonatomic) char hasBattery;
@property (nonatomic, getter=isSuspended) char suspended;
@property (nonatomic, getter=isRemotelyReachable) char remotelyReachable;
@property (readonly) char supportsUserManagement;
@property (readonly) char requiresHomeAppForManagement;
@property (readonly, nonatomic) char supportsMediaContentProfile;
@property (readonly, nonatomic) char supportsPersonalRequests;
@property (readonly, nonatomic) char supportsHomeLevelLocationServiceSetting;
@property (readonly, nonatomic) char supportsTargetControl;
@property (readonly, nonatomic) char supportsTargetController;
@property (readonly, nonatomic) char supportsMultiUser;
@property (readonly, nonatomic) char supportsAudioReturnChannel;
@property (readonly, nonatomic) char supportsDoorbellChime;
@property (readonly, nonatomic) char supportsUserMediaSettings;
@property (readonly, nonatomic) char supportsCompanionInitiatedRestart;
@property (readonly, nonatomic) char supportsCompanionInitiatedObliterate;
@property (readonly, nonatomic) char supportsMusicAlarm;
@property (readonly, nonatomic) char supportsAnnounce;
@property (readonly, nonatomic) char supportsMediaActions;
@property (readonly, nonatomic) char supportsCoordinationDoorbellChime;
@property (readonly, nonatomic) char supportsCoordinationFreeDoorbellChime;
@property (readonly, nonatomic) char supportsTVOSUpdateManualUpdateAvailableNotification;
@property (readonly, nonatomic) char supportsThirdPartyMusic;
@property (readonly, nonatomic) char supportsFirmwareUpdate;
@property (retain, nonatomic) HMFVersion *primaryProfileVersion;
@property (readonly, copy) NSArray *accessoryProfiles;
@property (readonly) char hasSiriEndpointProfile;
@property (readonly) char hasMediaProfile;
@property (retain, nonatomic) HMDApplicationData *appData;
@property (nonatomic) char reachabilityPingEnabled;
@property (nonatomic) char reachabilityPingNotificationEnabled;
@property (copy, nonatomic) NSDate *timeBecameUnreachable;
@property (copy, nonatomic) NSDate *timeBecameReachable;
@property char shouldProcessTransactionRemoval;
@property (copy, nonatomic) NSArray *transportReports;
@property (readonly) char supportsManagedConfigurationProfile;
@property (readonly) char supportsSoftwareUpdateV2;
@property (readonly, nonatomic) char supportsMessagedHomePodSettings;
@property (readonly, nonatomic) char supportsJustSiri;
@property (readonly, nonatomic) char supportsWiFiRepairV2;
@property (readonly, nonatomic) char supportsStereoOdeonTTSUBypassingPrimary;
@property (readonly) char requiresWaitingToBecomeReachableAfterRemoteAdd;
@property (retain, nonatomic) NSString *hashRouteID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;

+ (id)logCategory;
+ (char)splitProductDataIntoProductGroupAndProductNumber:(id)a0 productGroup:(id *)a1 productNumber:(id *)a2;
+ (char)validateProductData:(id)a0;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)initWithNotificationCenter:(id)a0;
- (id)shortDescription;
- (void)setModel:(id)a0;
- (void)setSerialNumber:(id)a0;
- (id)privateDescription;
- (void)setManufacturer:(id)a0;
- (void)didEncounterError:(id)a0;
- (id)logIdentifier;
- (id)attributeDescriptions;
- (id)dumpState;
- (id)messageDestination;
- (id)networkProtectionGroupUUID;
- (void)setAccessoryProfiles:(id)a0;
- (char)supportsDiagnosticsTransfer;
- (char)supportsWiFiReconfiguration;
- (void)unconfigure;
- (void)setProductData:(id)a0;
- (void)submitLogEvent:(id)a0;
- (char)supportsUnreachablePing;
- (void)__handleRename:(id)a0;
- (id)dumpSimpleState;
- (void)removeCloudData;
- (void)__handlePairingIdentityRequest:(id)a0;
- (void)handleAddedSiriEndpointProfile:(id)a0;
- (void)handleIdentifyAccessoryMessage:(id)a0;
- (void)updateCategory:(id)a0;
- (void)__handleGetAccessoryAdvertisingParams:(id)a0;
- (void)__handleIdentify:(id)a0;
- (void)__handleListPairings:(id)a0;
- (void)__handleSetAppData:(id)a0;
- (void)__handleShowMatterLockNotification:(id)a0;
- (void)__handleUpdatePendingConfigurationIdentifierMessage:(id)a0;
- (void)__handleUpdateRoom:(id)a0;
- (char)_allowSoftwareUpdateChangeFromSource:(unsigned long long)a0;
- (void)_applySoftwareUpdateModel:(id)a0 completion:(id /* block */)a1;
- (void)_checkForLastSeenUpdateOnBecomingUnreachable;
- (void)_configNumberUpdated;
- (char)_getLastKnownLowBatteryStatus;
- (void)_handleLastSeenStatusRequestMessage:(id)a0;
- (void)_handleLinkQualityRequestMessage:(id)a0;
- (void)_handlePreviewAllowedHosts:(id)a0;
- (void)_handleUpdatedName:(id)a0;
- (void)_handleWiFiReconfiguration:(id)a0;
- (void)_notifyConnectivityChangedWithRemoteAccessChanged:(char)a0;
- (void)_registerForMessages;
- (void)_relayIdentifyAccessorytoResidentForMessage:(id)a0;
- (void)_remoteAccessEnabled:(char)a0;
- (void)_renameAccessory:(id)a0 resetName:(char)a1 message:(id)a2;
- (char)_shouldFilterAccessoryProfileForEntitledClients:(id)a0;
- (char)_shouldFilterAccessoryProfileForUnentitledClients:(id)a0;
- (id)_updateCategory:(id)a0 notifyClients:(char)a1;
- (void)_updateHost:(id)a0;
- (char)_updateRoom:(id)a0 source:(unsigned long long)a1;
- (id)accessoryBulletinContext;
- (void)addAccessoryProfile:(id)a0;
- (void)addAdvertisement:(id)a0;
- (void)addHostedAccessory:(id)a0;
- (void)appDataRemoved:(id)a0 message:(id)a1;
- (void)appDataUpdated:(id)a0 message:(id)a1;
- (void)autoConfigureTargetControllers;
- (id)backingStoreObjects:(long long)a0;
- (void)configureTargetController:(id)a0;
- (void)configureWithHome:(id)a0 msgDispatcher:(id)a1 configurationTracker:(id)a2 initialConfiguration:(char)a3;
- (unsigned long long)consecutivePairingFailure;
- (void)decodePreferredMediaUser:(id)a0;
- (void)didUpdateCurrentNetworkProtection;
- (id)dumpNetworkState;
- (void)encodePreferredMediaUser:(id)a0;
- (id)getConfiguredName;
- (void)handleAccessoryUpdateShouldProcessTransactionRemovalValueRequestMessage:(id)a0;
- (void)handleAddedAccessoryProfile:(id)a0;
- (void)handleAddedMediaProfile:(id)a0;
- (void)handleAddedSoftwareUpdateModel:(id)a0 message:(id)a1;
- (void)handleRemovedSoftwareUpdateModel:(id)a0 message:(id)a1;
- (void)handleUpdatedSoftwareUpdateModel:(id)a0 newValues:(id)a1 message:(id)a2;
- (id)initWithTransaction:(id)a0 home:(id)a1;
- (char)isFirstPartyAccessory;
- (char)isReachableForXPCClients;
- (id)messageSendPolicy;
- (id)metricLoggingTransportDetails;
- (id)metricLoggingVendorDetails;
- (id)modelWithUpdatedRoom:(id)a0;
- (char)needsAirplayAccess;
- (id)notificationCenterForSoftwareUpdate:(id)a0;
- (void)notifyAccessoryNameChanged:(char)a0;
- (void)notifyClientsOfUpdatedAccessoryControllableValue:(char)a0;
- (void)populateModelObject:(id)a0 version:(long long)a1;
- (void)populateVendorDetailsForCoreAnalytics:(id)a0 keyPrefix:(id)a1;
- (void)postAccessoryRenamedNotification;
- (char)providesHashRouteID;
- (void)remoteAccessEnabled:(char)a0;
- (void)removeAccessoryProfile:(id)a0;
- (void)removeAdvertisement:(id)a0;
- (void)removeHostedAccessory:(id)a0;
- (void)renameDemoAccessory:(id)a0;
- (void)resetHashedRoute;
- (void)runTransactionWithModel:(id)a0 label:(id)a1 completion:(id /* block */)a2;
- (void)runTransactionWithModels:(id)a0 label:(id)a1 completion:(id /* block */)a2;
- (void)runTransactionWithPreferredMediaUserUUID:(id)a0 selectionType:(unsigned long long)a1 completion:(id /* block */)a2;
- (id)runtimeState;
- (void)saveCurrentNetworkProtectionMode:(long long)a0 assignedLAN:(long long)a1 allowedWANHosts:(id)a2 profileFingerprint:(id)a3;
- (void)saveLastSeenToLocalStore;
- (void)saveNetworkAccessViolation:(id)a0;
- (void)saveNetworkClientIdentifier:(id)a0 networkRouterUUID:(id)a1 clearProfileFingerprint:(char)a2;
- (void)saveWiFiUniquePreSharedKey:(id)a0 credentialType:(long long)a1;
- (void)sendLastSeenStatusResponseMessage:(id)a0;
- (void)sendRemovalRequest;
- (void)sendRemovalRequestWithCompletion:(id /* block */)a0;
- (void)setConsecutivePairingFailure:(unsigned long long)a0;
- (void)setDefaultPreferredMediaUserIfRemoved:(id)a0 defaultUser:(id)a1 completion:(id /* block */)a2;
- (void)setDisplayableFirmwareVersion:(id)a0;
- (void)setInitialCategoryIdentifier:(id)a0;
- (void)setInitialManufacturer:(id)a0;
- (void)setInitialModel:(id)a0;
- (void)setPreferredMediaUser:(id)a0 selectionType:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)setSoftwareUpdateForTesting:(id)a0;
- (void)setSuspendedCapable:(char)a0;
- (void)setWifiCredentialType:(long long)a0;
- (void)setreachabilityPingNotificationEnabled:(char)a0;
- (char)shouldEnableDaemonRelaunch;
- (void)startReachabilityCheck;
- (void)stopReachabilityCheck;
- (void)submitLogEvent:(id)a0 error:(id)a1;
- (unsigned long long)supportedTransports;
- (char)supportsMinimumUserPrivilege;
- (char)supportsNetworkProtection;
- (char)supportsSoftwareUpdate;
- (long long)targetNetworkProtectionMode;
- (void)transactionAccessoryUpdatedForPreferredMediaUser:(id)a0 completionHandler:(id /* block */)a1;
- (void)transactionObjectRemoved:(id)a0 message:(id)a1;
- (void)transactionObjectUpdated:(id)a0 newValues:(id)a1 message:(id)a2;
- (id)transactionWithObjectChangeType:(unsigned long long)a0;
- (void)updateGenerationCounterWithReason:(id)a0 sourceUUID:(id)a1 shouldNotifyClients:(char)a2;
- (void)updateMediaSession:(id)a0;
- (void)updateRoom:(id)a0 source:(unsigned long long)a1;
- (void)updateSoftwareUpdate:(id)a0 completionHandler:(id /* block */)a1;

@end

@class NSString, NAPromise, HMBLocalDatabase, HMBCloudDatabase, HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel, NSObject, HMBLocalZone, NAFuture;
@protocol OS_dispatch_queue, NAScheduler, HMBLocalZoneID;

@interface HMDNetworkRouterFirewallRuleManagerBackingStoreMirror : HMFObject <HMFLogging, HMDNetworkRouterFirewallRuleManagerBackingStoreMirror, HMBMirrorProtocol>

@property (readonly, nonatomic) HMBCloudDatabase *cloudDatabase;
@property (readonly, nonatomic) HMBLocalDatabase *localDatabase;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly, nonatomic) char useAnonymousRequests;
@property (readonly, nonatomic) NAPromise *startupPromise;
@property (readonly, nonatomic) NAPromise *shutdownPromise;
@property (readonly, nonatomic) id<NAScheduler> workQueueScheduler;
@property (readonly, nonatomic, getter=isRunning) char running;
@property (nonatomic, getter=isShuttingDown) char shuttingDown;
@property (retain, nonatomic) HMBLocalZone *localZone;
@property (retain, nonatomic) NAFuture *lastAsyncFuture;
@property (retain, nonatomic) HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel *internalState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NAFuture *startupFuture;
@property (readonly, nonatomic) NAFuture *shutdownFuture;
@property (readonly, nonatomic) id<HMBLocalZoneID> zoneID;
@property (readonly, nonatomic) NAFuture *startUp;

+ (id)logCategory;
+ (id)__certificatesRecordID;
+ (id)__createSignatureVerificationPolicy;
+ (char)__errorIsNotFound:(id)a0;
+ (unsigned long long)__maxSizeForCKRecordSignatureVerificationCertificateChain;
+ (id)__overrideParentModelID;
+ (id)__publicKeyFromCertificateRecord:(id)a0 dataKey:(id)a1 assetKey:(id)a2;
+ (id)__recordKeyCertificatePrefix:(id)a0;
+ (id)publicKeysFromCertificateRecord:(id)a0;

- (void).cxx_destruct;
- (id)destroy;
- (id)flush;
- (id)shutdown;
- (id)desiredKeys;
- (void)startUpWithLocalZone:(id)a0;
- (id)triggerOutputForOutputRow:(unsigned long long)a0 options:(id)a1;
- (char)__removeOverridesForZoneName:(id)a0 recordName:(id)a1 options:(id)a2 activity:(id)a3 error:(id *)a4;
- (char)__addOverrides:(id)a0 replace:(char)a1 options:(id)a2 activity:(id)a3 error:(id *)a4;
- (id)__asyncFutureWithActivity:(id)a0 ignoreErrors:(char)a1 block:(id /* block */)a2;
- (char)__canRecoverFromFetchDatabaseChangesError:(id)a0 fetchInfo:(id)a1;
- (char)__canRecoverFromVerificationCertificatesError:(id)a0 fetchInfo:(id)a1;
- (id)__createCloudZoneIDForZoneID:(id)a0;
- (char)__createCloudZonesForFetchInfo:(id)a0 error:(id *)a1;
- (id)__fetchAllDataForRecordIDs:(id)a0 options:(id)a1 activity:(id)a2 error:(id *)a3;
- (id)__fetchAllDataForZoneID:(id)a0 options:(id)a1 activity:(id)a2 error:(id *)a3;
- (id)__fetchAllDataForZoneName:(id)a0 options:(id)a1 activity:(id)a2 error:(id *)a3;
- (void)__fetchCloudRecordsWithFetchInfo:(id)a0;
- (void)__fetchDatabaseChangesCompleted:(id)a0 error:(id)a1;
- (void)__fetchDatabaseChangesWithFetchInfo:(id)a0;
- (id)__fetchOverridesForRecordIDs:(id)a0 options:(id)a1 activity:(id)a2 error:(id *)a3;
- (id)__fetchOverridesForZoneName:(id)a0 options:(id)a1 activity:(id)a2 error:(id *)a3;
- (void)__fetchRecordByID:(id)a0;
- (void)__fetchRecordsByQuery:(id)a0;
- (void)__fetchVerificationCertificatesCompleted:(id)a0 record:(id)a1 error:(id)a2;
- (void)__fetchVerificationCertificatesWithFetchInfo:(id)a0;
- (void)__fetchZoneChangesWithFetchInfo:(id)a0;
- (id)__loadOrCreateInternalStateModelWithLocalZone:(id)a0 activity:(id)a1;
- (id)__localZonesForRecordIDs:(id)a0 activity:(id)a1 error:(id *)a2;
- (id)__openLocalZoneForCloudZoneID:(id)a0 error:(id *)a1;
- (void)__performCloudZonePullsWithFetchInfo:(id)a0;
- (char)__removeAllLocalRulesWithOptions:(id)a0 activity:(id)a1 error:(id *)a2;
- (char)__removeAllOverridesWithOptions:(id)a0 activity:(id)a1 error:(id *)a2;
- (void)__removeDeletedZonesWithFetchInfo:(id)a0;
- (char)__removeOverridesForRecordIDs:(id)a0 options:(id)a1 activity:(id)a2 error:(id *)a3;
- (char)__removeOverridesForZoneName:(id)a0 options:(id)a1 activity:(id)a2 error:(id *)a3;
- (void)__retryFetchDatabaseChangesWithFetchInfo:(id)a0;
- (void)__retryFetchVerificationCertificatesWithFetchInfo:(id)a0;
- (void)__saveInternalStateWithActivity:(id)a0;
- (char)__shouldFailCloudRecordFetchError:(id)a0 error:(id)a1;
- (void)__shutdownLocalZones:(id)a0 activity:(id)a1;
- (void)__shutdownWithActivity:(id)a0;
- (void)__startQueryOperation:(id)a0 operation:(id)a1;
- (void)__startUpCloudZonesWithFetchInfo:(id)a0;
- (void)__startupWithLocalZone:(id)a0 activity:(id)a1;
- (void)__updateChangeTokenWithFetchInfo:(id)a0;
- (id)_fetchAllDataForZoneName:(id)a0 options:(id)a1 error:(id *)a2;
- (void)_fetchCloudRecordsForZoneID:(id)a0 recordID:(id)a1 options:(id)a2 desiredKeys:(id)a3 completion:(id /* block */)a4;
- (id)_fetchOverridesForZoneName:(id)a0 options:(id)a1 error:(id *)a2;
- (char)_removeOverridesForZoneName:(id)a0 recordName:(id)a1 options:(id)a2 error:(id *)a3;
- (char)addOverrides:(id)a0 replace:(char)a1 options:(id)a2 error:(id *)a3;
- (id)cloudFetchNeededForRecordIDs:(id)a0 error:(id *)a1;
- (id)fetchAllDataForRecordIDs:(id)a0 options:(id)a1 error:(id *)a2;
- (id)fetchAllDataForZoneName:(id)a0 options:(id)a1 error:(id *)a2;
- (id)fetchAllDataWithOptions:(id)a0 error:(id *)a1;
- (id)fetchAllOverridesWithOptions:(id)a0 error:(id *)a1;
- (void)fetchCloudChangesForRecordIDs:(id)a0 options:(id)a1 ignoreLastSynchronizedRecords:(char)a2 xpcActivity:(id)a3 completion:(id /* block */)a4;
- (void)fetchCloudRecordIDsForZoneID:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)fetchCloudRecordsForZoneID:(id)a0 recordID:(id)a1 options:(id)a2 completion:(id /* block */)a3;
- (id)fetchOverridesForRecordIDs:(id)a0 options:(id)a1 error:(id *)a2;
- (id)fetchOverridesForZoneName:(id)a0 options:(id)a1 error:(id *)a2;
- (void)fetchVerificationCertificatesRecordWithOperationGroup:(id)a0 completion:(id /* block */)a1;
- (id)initWithLocalDatabase:(id)a0 cloudDatabase:(id)a1 useAnonymousRequests:(char)a2 ownerQueue:(id)a3;
- (char)removeAllLocalRulesWithOptions:(id)a0 error:(id *)a1;
- (char)removeAllOverridesWithOptions:(id)a0 error:(id *)a1;
- (char)removeOverridesForRecordIDs:(id)a0 options:(id)a1 error:(id *)a2;
- (char)removeOverridesForZoneName:(id)a0 recordName:(id)a1 options:(id)a2 error:(id *)a3;

@end

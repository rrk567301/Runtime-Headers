@class NSString, NSSet, CUTWeakReference, NSMutableDictionary, IDSBaseSocketPairConnection, NSObject;
@protocol OS_dispatch_queue;

@interface _IDSSession : NSObject <IDSDaemonListenerProtocol, IDSBaseSocketPairConnectionDelegate> {
    id _delegateContext;
    NSString *_uniqueID;
    NSString *_accountID;
    NSSet *_destinations;
    IDSBaseSocketPairConnection *_unreliableSocketPairConnection;
    CUTWeakReference *_delegate;
    NSObject<OS_dispatch_queue> *_queue;
    long long _transportType;
    int _socket;
    char _isAudioEnabled;
    char _isMuted;
    char _isLegacy;
    long long _inviteTimeout;
    unsigned long long _connectionCountHint;
    char _needsToWaitForPreConnectionData;
    char _disallowCellularInterface;
    char _disallowWifiInterface;
    unsigned long long _preferredAddressFamily;
    char _preferCellularForCallSetup;
    NSString *_clientUUID;
    char _disableEncryption;
    char _shouldUseSocketForTransport;
    char _enableSingleChannelDirectMode;
    char _alwaysSkipSelf;
    unsigned int _sessionEndedReason;
    NSMutableDictionary *_preferences;
    NSMutableDictionary *_sessionConfig;
}

@property (readonly, nonatomic) int socket;
@property (readonly, nonatomic) NSString *uniqueID;
@property (readonly, nonatomic) unsigned int state;
@property (readonly, nonatomic) unsigned long long initialLinkType;
@property (nonatomic) long long inviteTimeout;
@property (readonly, nonatomic) unsigned int sessionEndedReason;
@property (retain, nonatomic) id boostContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void).cxx_destruct;
- (void)connection:(id)a0 didReceiveData:(id)a1;
- (void)setPreferences:(id)a0;
- (void)setDelegate:(id)a0 queue:(id)a1;
- (void)_callDelegateWithBlock:(id /* block */)a0;
- (void)setMuted:(char)a0;
- (void)endSession;
- (void)xpcObject:(id)a0 objectContext:(id)a1;
- (unsigned long long)MTUForAddressFamily:(unsigned long long)a0;
- (char)sendData:(id)a0 error:(id *)a1;
- (char)getAudioEnabled;
- (void)sessionStarted:(id)a0;
- (void)_broadcastNewSessionToDaemon;
- (void)_cleanupSocketPairConnections;
- (id)_initWithAccount:(id)a0 destinations:(id)a1 options:(id)a2 delegateContext:(id)a3;
- (id)_initWithAccount:(id)a0 destinations:(id)a1 transportType:(long long)a2 connectionCountHint:(unsigned long long)a3 needsToWaitForPreConnectionData:(char)a4 uniqueID:(id)a5 delegateContext:(id)a6;
- (void)_setupSocketPairToDaemon;
- (void)_setupUnreliableSocketPairConnection;
- (void)acceptInvitation;
- (void)acceptInvitationWithData:(id)a0;
- (void)allocationDone:(id)a0 sessionInfo:(id)a1;
- (void)cancelInvitation;
- (void)cancelInvitationWithData:(id)a0;
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)a0;
- (id)daemonController;
- (void)daemonDisconnected;
- (id)daemonListener;
- (void)declineInvitation;
- (void)declineInvitationWithData:(id)a0;
- (void)endSessionWithData:(id)a0;
- (char)getMuted;
- (id)getPreferences;
- (id)initWithAccount:(id)a0 destinations:(id)a1 options:(id)a2 delegateContext:(id)a3;
- (id)initWithAccount:(id)a0 destinations:(id)a1 transportType:(long long)a2 delegateContext:(id)a3;
- (id)initWithAccount:(id)a0 destinations:(id)a1 transportType:(long long)a2 uniqueID:(id)a3 delegateContext:(id)a4;
- (void)reconnectSession;
- (void)sendAllocationRequest:(id)a0;
- (void)sendInvitationWithData:(id)a0 declineOnError:(char)a1;
- (void)sendInvitationWithOptions:(id)a0;
- (void)sendSessionMessage:(id)a0;
- (void)sendSessionMessage:(id)a0 toDestinations:(id)a1;
- (void)session:(id)a0 audioEnabled:(char)a1;
- (void)session:(id)a0 didReceiveReport:(id)a1;
- (void)session:(id)a0 invitationSentToTokens:(id)a1 shouldBreakBeforeMake:(char)a2;
- (void)session:(id)a0 muted:(char)a1;
- (void)sessionAcceptReceived:(id)a0 fromID:(id)a1 withData:(id)a2;
- (void)sessionCancelReceived:(id)a0 fromID:(id)a1 withData:(id)a2;
- (void)sessionDeclineReceived:(id)a0 fromID:(id)a1 withData:(id)a2;
- (void)sessionEndReceived:(id)a0 fromID:(id)a1 withData:(id)a2;
- (void)sessionEnded:(id)a0 withReason:(unsigned int)a1 error:(id)a2;
- (void)sessionMessageReceived:(id)a0 fromID:(id)a1 withData:(id)a2;
- (void)setAudioEnabled:(char)a0;
- (char)shouldUseSocketForTransport;

@end

@class NSError, NSString, BRCGenerationID, NSDictionary, BRCAliasItem, BRCLocalVersion, NSMutableSet, NSNumber, BRCDirectoryItem;

@interface BRCDocumentItem : BRCLocalItem <BRCTopLevelShareable>

@property (readonly, nonatomic) BRCAliasItem *asBRAlias;
@property (readonly, nonatomic) BRCDirectoryItem *asDirectory;
@property (readonly, nonatomic) BRCDocumentItem *asDocument;
@property (readonly, nonatomic) char hasLocalContent;
@property (readonly, nonatomic) char isEvictable;
@property (readonly, nonatomic) char isAutomaticallyEvictable;
@property (readonly, nonatomic) char isVisibleIniCloudDrive;
@property (readonly, nonatomic) char shouldBeGreedy;
@property (readonly, nonatomic) char shouldHaveThumbnail;
@property (readonly, nonatomic) char shouldTransferThumbnail;
@property (readonly, nonatomic) unsigned int queryItemStatus;
@property (readonly, nonatomic) unsigned short downloadStatus;
@property (readonly, nonatomic) BRCLocalVersion *currentVersion;
@property (readonly, nonatomic) NSError *uploadError;
@property (readonly, nonatomic) NSMutableSet *resolvedConflictLoserEtags;
@property (readonly, nonatomic) NSDictionary *conflictLoserState;
@property (readonly, nonatomic) char hasFileIDForUpload;
@property (readonly, nonatomic) NSNumber *fileIDForUpload;
@property (readonly, nonatomic) BRCGenerationID *generationIDForUpload;
@property (readonly, nonatomic) NSString *unsaltedBookmarkData;

+ (char)shouldDocumentBeGreedyWithName:(id)a0;
+ (char)isDocumentAutomaticallyEvictableWithExtension:(id)a0;
+ (char)isDocumentAutomaticallyEvictableWithName:(id)a0;

- (void).cxx_destruct;
- (char)isPackage;
- (char)isDocument;
- (void)markDead;
- (void)markForceUpload;
- (id)asShareableItem;
- (char)isShareableItem;
- (void)_crossZoneMoveToParent:(id)a0;
- (char)_deleteFromDB:(id)a0 keepAliases:(char)a1;
- (id)_initFromPQLResultSet:(id)a0 session:(id)a1 db:(id)a2 error:(id *)a3;
- (id)_initWithImportObject:(id)a0 error:(id *)a1;
- (id)_initWithLocalItem:(id)a0;
- (id)_initWithServerItem:(id)a0 dbRowID:(unsigned long long)a1;
- (char)_insertInDB:(id)a0 dbRowID:(unsigned long long)a1;
- (void)_insertTombstoneForPreviousZoneGlobalID;
- (char)_isInFlightSyncContent;
- (char)_isInterestingUpdateForNotifs;
- (void)_markAsDeadTombstoneWithPreviousGlobalID;
- (char)_needsSyncBubbleRecomputeForError:(id)a0 origError:(id)a1;
- (char)_nukePackageItemsFromDB:(id)a0;
- (char)_updateInDB:(id)a0 diffs:(unsigned long long)a1;
- (char)_updatePackageItemsIfNecessaryWithImportObject:(id)a0 error:(id *)a1;
- (void)_updateRecursivePropertiesInDB:(id)a0 dbRowID:(unsigned long long)a1 diffs:(unsigned long long)a2;
- (void)_updateUploadJobIfNeededWithDiffs:(unsigned long long)a0;
- (void)addResolvedConflictLoserEtag:(id)a0;
- (id)aliasItemID;
- (void)appDidResolveConflictLoserWithEtag:(id)a0;
- (id)baseRecord;
- (id)baseRecordClearAllFields:(char)a0;
- (void)cancelDownloadWithEtag:(id)a0 downloadKind:(int)a1;
- (void)clearVersionSignatures:(unsigned long long)a0 isPackage:(char)a1;
- (id)collaborationIdentifierIfComputable;
- (char)contentRecordNeedsForceAllFieldsWhenDeadInServerTruth:(char)a0;
- (id)descriptionWithContext:(id)a0;
- (unsigned long long)diffAgainstLocalItem:(id)a0;
- (unsigned long long)diffAgainstServerItem:(id)a0;
- (id)documentRecordID;
- (void)forceVersionConflictByClearkingCKInfo;
- (void)forceiWorkSharingInfoResend;
- (void)handleUnknownItemError;
- (char)hasShareIDAndIsOwnedByMe;
- (char)hasValidCKInfo;
- (char)isCrossZoneMoveTombstone;
- (char)isDocumentBeingCopiedToNewZone;
- (void)markCrossZoneMovedForServerAssetCopyWithParentItem:(id)a0;
- (void)markDoneMigratingToFPFS;
- (void)markForceNeedsSyncUp;
- (void)markItemForgottenByServer;
- (char)markLatestSyncRequestAcknowledgedInZone:(id)a0;
- (void)markLatestSyncRequestRejectedInZone:(id)a0;
- (void)markNeedsReading;
- (void)markNeedsUploadOrSyncingUp;
- (void)markOverQuotaWithError:(id)a0;
- (void)markUploadedWithRecord:(id)a0;
- (char)quarantineItemIfNecessary;
- (void)reIngestFromFileProvider;
- (void)recoverDamagedDocumentIfNecessaryWithError:(id)a0;
- (char)startDownloadInTask:(id)a0 options:(unsigned long long)a1 etagIfLoser:(id)a2 stageFileName:(id)a3 error:(id *)a4;
- (char)supportsServerSideAssetCopies;
- (id)syncContextUsedForTransfers;
- (void)updateContentsCKInfoAndDeviceIDFromServerItem:(id)a0;
- (char)updateFromServerItem:(id)a0;
- (void)updateVersionMetadataFromServerItem:(id)a0 preventVersionDiffs:(char)a1;
- (void)updateWithContentModificationDate:(id)a0;
- (char)updateWithImportObject:(id)a0 onlyContentDependentProperties:(char)a1 error:(id *)a2;
- (void)updateWithLogicalName:(id)a0 newParent:(id)a1;
- (void)updateWithLogicalName:(id)a0 newParent:(id)a1 forceTopLevelShareMove:(char)a2;
- (char)validateLoggingToFile:(struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)a0;

@end

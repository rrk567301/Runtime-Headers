@class NSError, NSString, NSArray, CPLSyncSession, CPLEngineForceSyncTask, NSCountedSet, CPLDerivativesFilter, CPLEngineLibrary, CPLPlatformObject, NSMutableArray, NSObject, CPLSyncStep;
@protocol CPLEngineStoreUserIdentifier, OS_dispatch_queue, CPLEngineTransportSetupTask;

@interface CPLEngineSyncManager : NSObject <CPLAbstractObject, CPLEngineComponent, CPLEngineSyncTaskDelegate, CPLEngineForceSyncTaskDelegate> {
    id<CPLEngineStoreUserIdentifier> _transportUserIdentifier;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _transportUserIdentifierLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _brokenScopesLock;
    NSMutableArray *_brokenScopes;
    CPLDerivativesFilter *_derivativesFilter;
    char _setupIsDone;
    char _shouldUpdateDisabledFeatures;
    char _closed;
    id<CPLEngineTransportSetupTask> _setupTask;
    id /* block */ _closingCompletionHandler;
    CPLSyncSession *_session;
    NSObject<OS_dispatch_queue> *_lock;
    NSError *_lastError;
    CPLSyncStep *_currentStep;
    id<CPLEngineTransportSetupTask> _forcedSetupTask;
    CPLEngineForceSyncTask *_currentForceSyncTask;
    CPLEngineForceSyncTask *_pendingForceSyncTask;
    unsigned long long _shouldRestartSessionFromState;
    NSMutableArray *_lastErrors;
    char _foreground;
    char _boostPriority;
    char _hasOverridenBudgets;
    char _disabledSchedulerForForceSyncTask;
    NSMutableArray *_forcedSyncHistory;
    NSMutableArray *_cancellerBlocks;
    NSCountedSet *_blockedReasons;
}

@property (nonatomic, setter=_setState:) unsigned long long state;
@property (nonatomic) char shouldTryToMingleImmediately;
@property (readonly, weak, nonatomic) CPLEngineLibrary *engineLibrary;
@property (readonly, nonatomic) NSError *lastError;
@property (readonly) char hasBrokenScopes;
@property (readonly) NSArray *brokenScopes;
@property (readonly, nonatomic) CPLPlatformObject *platformObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (unsigned int)qualityOfServiceForSyncSessions;
+ (id)descriptionForState:(unsigned long long)a0;
+ (id)platformImplementationProtocol;
+ (unsigned int)qualityOfServiceForForcedTasks;
+ (id)shortDescriptionForState:(unsigned long long)a0;
+ (id)stepForState:(unsigned long long)a0 syncManager:(id)a1 session:(id)a2;

- (void).cxx_destruct;
- (void)openWithCompletionHandler:(id /* block */)a0;
- (id)componentName;
- (void)task:(id)a0 didFinishWithError:(id)a1;
- (void)_moveAllTasksToBackgroundLocked;
- (void)setErrorForSyncSessionUnlocked:(id)a0;
- (void)_launchForceSyncTaskIfNecessary;
- (void)addBrokenScope:(id)a0;
- (void)getStatusWithCompletionHandler:(id /* block */)a0;
- (void)_addRuleToUserDefaults:(id)a0;
- (void)_advanceToNextStateLocked;
- (void)_advanceToNextStateLockedMinimalState:(unsigned long long)a0;
- (void)_cancelAllTasksForSetup;
- (void)_cancelAllTasksLocked;
- (void)_cancelAllTasksLockedDeferringPushTaskCancellationIfCurrentlyUploadingForeground:(char)a0;
- (void)_cancelCurrentSyncSession;
- (char)_checkForegroundAtLaunchForForceSyncTask;
- (id)_descriptionForCurrentState;
- (id)_descriptionForLaunchedTasks;
- (id)_descriptionForSetupTasks;
- (char)_didFinishSetupTaskWithError:(id)a0 shouldStop:(char *)a1;
- (void)_disableSchedulerForForceSyncTaskIfNecessary;
- (void)_discardPendingForceSyncTaskWithError:(id)a0;
- (void)_dispatchAfter:(double)a0 block:(id /* block */)a1;
- (void)_dispatchCancellerBlocksIfNecessary;
- (id)_dropDerivativeRulesFromUserDefaults;
- (void)_forceSyncTaskDidFinishWithError:(id)a0;
- (void)_launchForceSetupTask;
- (char)_launchNecessaryTasksForCurrentStateLocked;
- (char)_launchSetupTask;
- (void)_notifyEndOfSyncSession;
- (void)_overrideBudgetsIfNeeded;
- (void)_recordForcedSyncTask:(id)a0 discarded:(char)a1 error:(id)a2;
- (void)_reenableSchedulerForForceSyncTaskIfNecessary;
- (void)_resetErrorForSyncSession;
- (void)_restartSyncSessionFromStateLocked:(unsigned long long)a0 session:(id)a1 cancelIfNecessary:(char)a2;
- (void)_setTransportUserIdentifier:(id)a0;
- (id)_setupTaskWithCompletionHandler:(id /* block */)a0;
- (id)_shortDescriptionForCurrentState;
- (id)_transportUserIdentifier;
- (void)addDropDerivativesRecipe:(id)a0 writeToUserDefaults:(char)a1 withCompletionHandler:(id /* block */)a2;
- (void)beginClientWork:(id)a0;
- (void)cancelAndBlockAllSyncSessionsWithReason:(id)a0 block:(id /* block */)a1;
- (void)cancelCurrentSyncSession;
- (void)closeAndDeactivate:(char)a0 completionHandler:(id /* block */)a1;
- (void)configureDirectTransportTask:(id)a0;
- (void)discardTransportUserIdentifier;
- (void)dispatchForcedTaskBlock:(id /* block */)a0;
- (void)dispatchSyncBlock:(id /* block */)a0;
- (void)endClientWork:(id)a0;
- (void)forceSyncTaskHasBeenCancelled:(id)a0;
- (void)forceSyncTaskHasBeenLaunched:(id)a0;
- (void)getStatusDictionaryWithCompletionHandler:(id /* block */)a0;
- (id)initWithEngineLibrary:(id)a0;
- (id)lastErrorUnlocked;
- (char)prepareAndLaunchSyncTaskUnlocked:(id)a0;
- (void)removeBrokenScope:(id)a0;
- (void)requestDisabledFeaturesUpdate;
- (void)resetTransportUserIdentifier;
- (void)setBoostPriority:(char)a0;
- (void)setSyncSessionShouldBeForeground:(char)a0;
- (void)startSyncSession:(id)a0 withMinimalPhase:(unsigned long long)a1 rewind:(char)a2;
- (void)task:(id)a0 didProgress:(float)a1 userInfo:(id)a2;
- (void)unblockSyncSessionWithReason:(id)a0;

@end

@class NSURL, NSMutableDictionary, NSCountedSet, NSDate, NSObject, CPLEngineFeedbackManager, CPLEngineSyncManager, CPLEngineScheduler, CPLEngineTransport, CPLMetrics, NSString, NSHashTable, CPLEngineSystemMonitor, CPLConfiguration, NSArray, CPLPlatformObject, CPLEngineStore, NSError, CPLStatus;
@protocol CPLEngineLibrarySupervisor, OS_dispatch_source, OS_dispatch_queue, CPLEngineLibraryOwner;

@interface CPLEngineLibrary : NSObject <CPLStatusDelegate, CPLAbstractObject> {
    NSArray *_components;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_closingQueue;
    NSMutableDictionary *_blocksToDispatchWhenLibraryAttaches;
    NSHashTable *_attachedObjects;
    NSHashTable *_invalidAttachedObjects;
    id _currentChangeSessionToken;
    id _pendingChangeSessionToken;
    id /* block */ _pendingChangeSessionCompletionHandler;
    NSError *_openingError;
    CPLStatus *_status;
    CPLMetrics *_metrics;
    char _closed;
    char _totalAssetCountHasBeenCalculated;
    NSDate *_cachedLastQuarantineCountReportDate;
    unsigned long long _totalAssetCount;
    NSCountedSet *_holdTestAssertions;
    id /* block */ _pingRequestToPushAllChanges;
    NSObject<OS_dispatch_source> *_timerForPushRepositoryFlagsCountsHaveChanged;
    NSDate *_mostRecentScopeStatusCountsDidChangeNotificationDate;
    id _metricsObserver;
}

@property (class, nonatomic) double timeToWaitForLibrary;
@property (class, nonatomic) double timeToWaitForClientToActivateScopes;
@property (class, nonatomic) double timeToWaitForClientToPushChanges;
@property (class, nonatomic) char failOnPushingChangesTimeout;
@property (class, nonatomic) double timeToWaitForClientToPullChanges;

@property (readonly, nonatomic) char libraryIsCorrupted;
@property (readonly, nonatomic) NSString *mainScopeIdentifier;
@property (readonly) NSString *currentClosingComponentName;
@property (readonly, copy, nonatomic) NSURL *clientLibraryBaseURL;
@property (readonly, copy, nonatomic) NSURL *cloudLibraryStateStorageURL;
@property (readonly, copy, nonatomic) NSURL *cloudLibraryResourceStorageURL;
@property (readonly, copy, nonatomic) NSString *libraryIdentifier;
@property (readonly, nonatomic) char isSystemLibrary;
@property (readonly, nonatomic) char isAppLibrary;
@property (readonly, nonatomic) unsigned long long libraryOptions;
@property (weak, nonatomic) id<CPLEngineLibraryOwner> owner;
@property (retain, nonatomic) id<CPLEngineLibrarySupervisor> supervisor;
@property (readonly, nonatomic) CPLEngineStore *store;
@property (readonly, nonatomic) CPLEngineScheduler *scheduler;
@property (readonly, nonatomic) CPLEngineSyncManager *syncManager;
@property (readonly, nonatomic) CPLEngineTransport *transport;
@property (readonly, nonatomic) CPLEngineSystemMonitor *systemMonitor;
@property (readonly, nonatomic) CPLEngineFeedbackManager *feedback;
@property (readonly, nonatomic) CPLConfiguration *configuration;
@property (nonatomic) char hasChangesToProcess;
@property (nonatomic, getter=isWalrusEnabled) char walrusEnabled;
@property (nonatomic, getter=isKeychainCDPEnabled) char keychainCDPEnabled;
@property (nonatomic, getter=isUpgradeSuggestedToAccessAllPhotos) char upgradeSuggestedToAccessAllPhotos;
@property (nonatomic) long long serverFeatureCompatibleVersion;
@property (nonatomic) char containerHasBeenWiped;
@property (nonatomic) char iCloudLibraryClientVersionTooOld;
@property (nonatomic) char iCloudLibraryClientIsNotAuthenticated;
@property (nonatomic) char isStuckInExitForSharedLibrary;
@property (readonly, nonatomic) NSDate *initialSyncDate;
@property (readonly, nonatomic) NSDate *initialDownloadDate;
@property (nonatomic) char isExceedingQuota;
@property (nonatomic) char isExceedingSharedLibraryQuota;
@property (nonatomic) unsigned long long estimatedCountOfRemainingRecordsDuringSharedLibraryExit;
@property (nonatomic) long long busyState;
@property (nonatomic) char iCloudLibraryHasBeenWiped;
@property (nonatomic) char iCloudLibraryExists;
@property (copy, nonatomic) NSDate *exitDeleteTime;
@property (readonly, nonatomic) NSArray *processesInvolvedInSyncSessions;
@property (readonly, nonatomic) NSString *clientAppBundleIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) CPLPlatformObject *platformObject;

+ (id)platformImplementationProtocol;

- (void).cxx_destruct;
- (id)redactedDescription;
- (void)openWithCompletionHandler:(id /* block */)a0;
- (id)componentName;
- (void)statusDidChange:(id)a0;
- (void)getStatusForComponents:(id)a0 completionHandler:(id /* block */)a1;
- (id)initWithClientLibraryBaseURL:(id)a0 cloudLibraryStateStorageURL:(id)a1 cloudLibraryResourceStorageURL:(id)a2 libraryIdentifier:(id)a3 mainScopeIdentifier:(id)a4 options:(unsigned long long)a5;
- (id)_allComponentsIncludingPlatformObjects:(char)a0 respondingToSelector:(SEL)a1;
- (void)_cancelBlockWhenLibraryAttaches:(id)a0;
- (void)_closeNextComponent:(id)a0 deactivate:(char)a1 lastError:(id)a2 completionHandler:(id /* block */)a3;
- (void)_didOpenComponent:(id)a0 error:(id)a1;
- (void)_fillStatus:(id)a0 forComponents:(id)a1 completionHandler:(id /* block */)a2;
- (void)_fillStatusArray:(id)a0 forComponents:(id)a1 completionHandler:(id /* block */)a2;
- (id)_libraryObject;
- (void)_notifyAttachedObjectsThatPushRepositoryFlagsCountsHaveChanged;
- (void)_openNextComponent:(id)a0 completionHandler:(id /* block */)a1;
- (id)_performBlockWhenLibraryAttaches:(id /* block */)a0;
- (void)_performBlockWithLibrary:(char)a0 enumerateAttachedObjects:(id /* block */)a1;
- (void)_performPendingBlockForWhenLibraryAttaches;
- (void)_reportQuarantineCountIfNecessaryWithLastReportDate:(id)a0;
- (void)_requestUpdateOfMainScopeFromTransport;
- (void)_setCurrentClosingComponentName:(id)a0;
- (void)_testKey:(id)a0 value:(id)a1 completionHandler:(id /* block */)a2;
- (void)_updateTotalAssetCountWithAssetCounts:(id)a0;
- (void)_willOpenComponent:(id)a0;
- (void)attachObject:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)beginChangeSessionWithSessionToken:(id)a0 completionHandler:(id /* block */)a1;
- (void)blockEngineWithReason:(id)a0 onlyIfBlocked:(char)a1 block:(id /* block */)a2;
- (void)clientIsPushingChanges;
- (void)closeAndDeactivate:(char)a0 completionHandler:(id /* block */)a1;
- (id)corruptionInfo;
- (void)detachObject:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)emergencyClose;
- (void)endChangeSessionWithSessionToken:(id)a0;
- (void)forceBackupWithActivity:(id)a0 forceClientPush:(char)a1 completionHandler:(id /* block */)a2;
- (void)forceInitialDownloadWithActivity:(id)a0 scopeIdentifiers:(id)a1 completionHandler:(id /* block */)a2;
- (void)getListOfComponentsWithCompletionHandler:(id /* block */)a0;
- (void)getStatusArrayForComponents:(id)a0 completionHandler:(id /* block */)a1;
- (char)hasAssetCountOnServer;
- (void)markAttachedObjectAsInvalid:(id)a0;
- (void)noteMainScopeHasBeenActivated;
- (void)notifyAttachedObjectsHasStatusChanges;
- (void)notifyAttachedObjectsPullQueueIsFull;
- (void)notifyAttachedObjectsResourceDidDownloadInBackground:(id)a0;
- (void)notifyAttachedObjectsResourceDidFailBackgroundDownloadOfResource:(id)a0;
- (void)notifyAttachedObjectsSizeOfResourcesToUploadDidChangeToSize:(unsigned long long)a0 sizeOfOriginalResourcesToUpload:(unsigned long long)a1 numberOfImages:(unsigned long long)a2 numberOfVideos:(unsigned long long)a3 numberOfOtherItems:(unsigned long long)a4;
- (void)notifyAttachedObjectsThatPushRepositoryFlagsCountsHaveChanged;
- (void)notifyAttachedObjectsUploadTask:(id)a0 didFinishWithError:(id)a1;
- (void)notifyAttachedObjectsUploadTask:(id)a0 didProgress:(float)a1;
- (void)notifyAttachedObjectsUploadTaskDidStart:(id)a0;
- (void)performBlockOnLibrary:(id /* block */)a0;
- (void)performMaintenanceCleanupWithCompletionHandler:(id /* block */)a0;
- (void)provideCloudResource:(id)a0 completionHandler:(id /* block */)a1;
- (void)providePayloadForComputeStates:(id)a0 inFolderWithURL:(id)a1 completionHandler:(id /* block */)a2;
- (void)provideRecordWithCloudScopeIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)provideScopeChangeForScopeWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)reportLibraryCorrupted;
- (void)reportQuarantineCountIfNecessary;
- (void)reportRadar:(unsigned long long)a0;
- (void)reportUnsuccessfulSync;
- (void)requestAttachedLibrary;
- (void)requestClientToPullAllChangesWithScopeIdentifiers:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestClientToPushAllChangesWithCompletionHandler:(id /* block */)a0;
- (void)requestScopesWithIdentifiersToBeActivated:(id)a0 completionHandler:(id /* block */)a1;
- (void)setAccountEPPCapability:(long long)a0;
- (void)setConnectedToNetwork:(char)a0 cellularIsRestricted:(char)a1 inAirplaneMode:(char)a2;
- (void)setHasCellularBudget:(char)a0 hasBatteryBudget:(char)a1 hasLowBatteryLevel:(char)a2 isConstrainedNetwork:(char)a3 isBlockedByLowPowerMode:(char)a4 hasHeavyResourceUsage:(char)a5 hasPoorNetworkQuality:(char)a6 hasModerateThermalPressure:(char)a7 hasThermalPressure:(char)a8 hasPoorSystemConditions:(char)a9 isBudgetValid:(char)a10 blockedReason:(long long)a11 unBlockedReason:(long long)a12;
- (void)setLowDiskSpace:(char)a0 veryLowDiskSpace:(char)a1;
- (void)startSyncSession;
- (void)testKey:(id)a0 value:(id)a1 completionHandler:(id /* block */)a2;
- (unsigned long long)totalAssetCountOnServer;
- (void)updateAccountFlagsData:(id)a0;
- (void)updateAssetCountsFromServer:(id)a0;
- (void)updateBlockedMetrics:(char)a0 syncRequested:(char)a1;
- (void)updateComputeSyncMetrics:(long long)a0 silentDecryptionFailed:(char)a1 error:(id)a2;
- (void)updateDisabledFeatures:(id)a0;
- (void)updateInitialDownloadDate:(id)a0;
- (void)updateInitialSyncDate:(id)a0;
- (void)updateLastSuccessfullSyncDate:(id)a0;

@end

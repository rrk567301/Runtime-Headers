@class NSCountedSet, NSString, CPLPlatformObject, NSDictionary, NSMutableDictionary, NSMutableArray, _CPLEngineScopeCache;

@interface CPLEngineScopeStorage : CPLEngineStorage <CPLAbstractObject> {
    _CPLEngineScopeCache *_scopeCache;
    char _shouldResetGlobalsForMainScope;
    char _scheduleATransportUpdate;
    char _scheduleAScopeUpdate;
    unsigned long long _schedulePushHighPriorityToTransportChangeTypes;
    unsigned long long _schedulePushToTransportChangeTypes;
    char _schedulePullFromTransport;
    char _schedulePullFromClient;
    char _shouldChangeSyncManagerPriorityBoost;
    char _syncManagerPriorityBoost;
    char _someScopeMightHaveToBePulledByClient;
    char _clearSomeScopeMightHaveToBePulledByClient;
    NSMutableArray *_scopesToRemoveFromBrokenScopes;
    char _shouldUpdateGlobalStatusAtEndOfTransaction;
    NSDictionary *_assetCountsToUpdate;
    long long _serverFeatureCompatibleVersionToUpdate;
    NSCountedSet *_scopeIdentifiersBeingCreated;
    NSMutableDictionary *_scopeObservers;
}

@property (readonly, nonatomic) char hasStagedSyncAnchors;
@property (readonly, nonatomic) CPLPlatformObject *platformObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void).cxx_destruct;
- (id)status;
- (char)openWithError:(id *)a0;
- (unsigned long long)scopeType;
- (char)commitSyncAnchorForScope:(id)a0 error:(id *)a1;
- (char)doesScopeAllowCourtesyMingling:(id)a0;
- (id)downloadTransportGroupForScope:(id)a0;
- (char)hasFinishedInitialSyncForScope:(id)a0;
- (char)setDisabledDate:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)storeScopeListSyncAnchor:(id)a0 error:(id *)a1;
- (long long)uploadComputeStateTaskForScope:(id)a0;
- (id)createScopeWithIdentifier:(id)a0 scopeType:(long long)a1 flags:(long long)a2 transportScope:(id)a3 error:(id *)a4;
- (char)doesScopeNeedToUpdateTransport:(id)a0;
- (void)endCreatingScopeWithIdentifier:(id)a0;
- (id)enumeratorForScopesWithMingling;
- (char)_activateSharedScopeIfPresentWithError:(id *)a0;
- (void)_cacheScope:(id)a0;
- (void)_checkSyncManagerPriorityBoost;
- (void)_clearScopeCache;
- (id)_createScopeFromScopeChange:(id)a0 error:(id *)a1;
- (char)_doesScopeContributeToGlobalStatus:(id)a0;
- (char)_dropSharingScopeIdentifier:(id)a0 error:(id *)a1;
- (void)_fixGlobalStatus;
- (char)_forceClientToPullScopeIfNecessary:(id)a0 error:(id *)a1;
- (void)_forceSyncManagerPriorityBoost;
- (char)_handledDisabledFeaturesForScopeIfNecessary:(id)a0 type:(long long)a1 error:(id *)a2;
- (unsigned long long)_indexOfCurrentClassForInitialQueriesForScope:(id)a0;
- (char)_isValidSharingScope:(id)a0 forScopeIdentifier:(id)a1;
- (char)_isValidSharingScopeIdentifier:(id)a0 scopeType:(long long)a1 forScopeIdentifier:(id)a2;
- (void)_notifyScopeObserversForScope:(id)a0 flagsUpdate:(id)a1;
- (id)_realScopeIdentifiersFromScopeIdentifiers:(id)a0;
- (void)_removeBrokenScope:(id)a0;
- (char)_resetCompleteSyncStateForScope:(id)a0 error:(id *)a1;
- (void)_resetGlobalsForMainScope;
- (char)_resetLocalSyncStateForScope:(id)a0 error:(id *)a1;
- (id)_scopeChangeToBePulledByClientForScope:(id)a0;
- (id)_scopeWithIdentifier:(id)a0;
- (char)_setScopeType:(long long)a0 forScope:(id)a1 error:(id *)a2;
- (char)_setSharingScopeIdentifier:(id)a0 error:(id *)a1;
- (void)_updateGlobalStatusWithScopeChange:(id)a0 forScope:(id)a1;
- (char)activateScope:(id)a0 error:(id *)a1;
- (id)activationDateForScope:(id)a0;
- (char)addCleanupTasksForScope:(id)a0 error:(id *)a1;
- (char)addRewindSyncAnchor:(id)a0 forScope:(id)a1 error:(id *)a2;
- (void)addScopeFlagsObserver:(id /* block */)a0 withIdentifier:(id)a1;
- (id)allScopeIdentifiersIncludeInactive:(char)a0;
- (void)beginCreatingScopeWithIdentifier:(id)a0;
- (long long)busyStateForScope:(id)a0;
- (Class)classOfRecordsForInitialQueryForScope:(id)a0;
- (char)clearAllQuotaFlagsForMainScopeWithReason:(id)a0 error:(id *)a1;
- (char)clearTransportGroupsForScope:(id)a0 error:(id *)a1;
- (char)clientAcknowledgedScopeChanges:(id)a0 error:(id *)a1;
- (char)deactivateScope:(id)a0 error:(id *)a1;
- (id)deleteDateForScope:(id)a0;
- (char)deleteScopeWithIdentifier:(id)a0 error:(id *)a1;
- (char)didDropSomeRecordsForScope:(id)a0;
- (char)disableInitialQueriesForScope:(id)a0 error:(id *)a1;
- (char)disablePrimaryScopeWithError:(id *)a0;
- (id)disabledDateForScope:(id)a0;
- (char)discardStagedSyncAnchorForScope:(id)a0 error:(id *)a1;
- (char)discardStagedSyncAnchorWithScopeFilter:(id)a0 error:(id *)a1;
- (char)doScopesNeedMetadataSync:(id)a0;
- (char)doesScopeNeedToBePulledByClient:(id)a0;
- (char)doesScopeNeedToPullChangesFromTransport:(id)a0;
- (char)doesScopeNeedToPushChangesToTransport:(id)a0;
- (char)doesScopeNeedToUploadComputeState:(id)a0;
- (char)doesScopeSupportToBePulledByClient:(id)a0;
- (char)enablePrimaryScopeWithError:(id *)a0;
- (id)enumeratorForDeletedStagedScopes;
- (id)enumeratorForScopesIncludeInactive:(char)a0;
- (id)enumeratorForScopesNeedingToPullChangesFromTransport;
- (id)enumeratorForScopesNeedingToPushChangesToTransport;
- (id)enumeratorForScopesNeedingToPushHighPriorityChangesToTransport;
- (id)enumeratorForScopesNeedingToUpdateTransport;
- (id)enumeratorForScopesNeedingToUploadComputeState;
- (id)enumeratorForScopesNeedingUpdateFromTransport;
- (unsigned long long)estimatedAssetCountForScope:(id)a0;
- (unsigned long long)estimatedSizeForScope:(id)a0;
- (id)filterForExcludedScopeIdentifiers:(id)a0;
- (id)filterForIncludedScopeIdentifiers:(id)a0;
- (id)flagsForScope:(id)a0;
- (char)hasFinishedAFullSyncForScope:(id)a0;
- (char)hasFinishedInitialDownloadForScope:(id)a0;
- (char)hasScopeFetchedInitialSyncAnchor:(id)a0;
- (char)hasScopeFlagsObservers;
- (char)hasScopesNeedingToPullChangesFromTransport;
- (char)hasScopesNeedingToPushChangesToTransport;
- (char)hasScopesNeedingToPushHighPriorityChangesToTransport;
- (char)hasScopesNeedingToUpdateTransport;
- (char)hasScopesNeedingToUploadComputeState;
- (char)hasStagedSyncAnchorForScope:(id)a0;
- (long long)indexForCloudScopeIdentifier:(id)a0;
- (long long)indexForLocalScopeIdentifier:(id)a0;
- (id)initWithEngineStore:(id)a0 name:(id)a1;
- (id)initialMetadataDownloadDateForScope:(id)a0;
- (id)initialMetadataQueriesDateForScope:(id)a0;
- (id)initialMingleDateForScope:(id)a0;
- (id)initialSyncAnchorForScope:(id)a0;
- (id)lastDateOfClearedPushRepositoryForScope:(id)a0;
- (id)lastDateOfCompletedPullFromTransportForScope:(id)a0;
- (char)markInitialQueryIsDoneForRecordsOfClass:(Class)a0 forScope:(id)a1 error:(id *)a2;
- (id)mostCurrentChangesSyncAnchorForScope:(id)a0;
- (char)noteDidCheckAssetWithServerWhenOverQuotaForScope:(id)a0 error:(id *)a1;
- (char)performMaintenanceWithError:(id *)a0;
- (char)performUpgradeWithError:(id *)a0;
- (id)primaryScope;
- (long long)pullFromTransportTaskForScope:(id)a0;
- (long long)pushToTransportTaskForScope:(id)a0;
- (id)remainingClassesForInitialQueryForScope:(id)a0;
- (void)removeScopeFlagsObserverWithIdentifier:(id)a0;
- (char)resetCloudRecordsForScopeWithIdentifier:(id)a0 error:(id *)a1;
- (char)resetCompleteSyncStateForScope:(id)a0 error:(id *)a1;
- (char)resetCompleteSyncStateIncludingIDMappingForScope:(id)a0 error:(id *)a1;
- (char)resetDidCheckAssetWithServerWhenOverQuotaForScope:(id)a0 error:(id *)a1;
- (char)resetInitialSyncAnchorForScope:(id)a0 error:(id *)a1;
- (char)resetLocalRecordsForScopeWithIdentifier:(id)a0 error:(id *)a1;
- (char)resetLocalSyncStateForScope:(id)a0 error:(id *)a1;
- (char)resetStableRecordsForScopeWithIdentifier:(id)a0 error:(id *)a1;
- (char)resetSyncAnchorForScope:(id)a0 error:(id *)a1;
- (char)resetSyncStateForScope:(id)a0 error:(id *)a1;
- (id)rewindSyncAnchorsForScope:(id)a0;
- (id)scopeChangeForScope:(id)a0;
- (id)scopeChangesNeedingToBePulledByClientWithMaximumCount:(unsigned long long)a0;
- (id)scopeForSharingScope:(id)a0;
- (id)scopeIdentifierForCloudScopeIndex:(long long)a0;
- (id)scopeIdentifierForLocalScopeIndex:(long long)a0;
- (id)scopeListSyncAnchor;
- (id)scopeWithCloudScopeIndex:(long long)a0;
- (id)scopeWithIdentifier:(id)a0;
- (id)scopeWithLocalScopeIndex:(long long)a0;
- (id)scopeWithStableIndex:(long long)a0;
- (id)scopedIdentifierForCloudScopedIdentifier:(id)a0;
- (id)scopedIdentifierForLocalScopedIdentifier:(id)a0;
- (char)setAllScopesHasChangesToPullFromTransportWithError:(id *)a0;
- (char)setCloudScopeIndexOnChange:(id)a0;
- (char)setDeleteDate:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)setDidDropSomeRecordsForScope:(id)a0 error:(id *)a1;
- (char)setHasFetchedInitialSyncAnchor:(char)a0 forScope:(id)a1 error:(id *)a2;
- (char)setHasFinishedInitialDownloadForScope:(id)a0 error:(id *)a1;
- (char)setHasUpdatedScope:(id)a0 fromTransportWithError:(id *)a1;
- (char)setInitialSyncAnchor:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)setLocalScopeIndexOnChange:(id)a0;
- (char)setPullFromTransportExpirationInterval:(double)a0 scope:(id)a1 error:(id *)a2;
- (char)setScope:(id)a0 hasCompletedInitialMinglingWithError:(id *)a1;
- (char)setScope:(id)a0 hasCompletedPullFromTransportTask:(long long)a1 error:(id *)a2;
- (char)setScope:(id)a0 hasCompletedPushToTransportTask:(long long)a1 error:(id *)a2;
- (char)setScope:(id)a0 hasCompletedTransportUpdate:(long long)a1 error:(id *)a2;
- (char)setScope:(id)a0 hasCompletedUploadComputeStateTask:(long long)a1 error:(id *)a2;
- (char)setScopeHasChangesToPullFromTransport:(id)a0 error:(id *)a1;
- (char)setScopeHasChangesToPushToTransport:(id)a0 changeTypes:(unsigned long long)a1 error:(id *)a2;
- (char)setScopeNeedsToBePulledByClient:(id)a0 error:(id *)a1;
- (char)setScopeNeedsToUpdateTransport:(id)a0 error:(id *)a1;
- (char)setScopeNeedsToUploadComputeState:(id)a0 error:(id *)a1;
- (char)setScopeNeedsUpdateFromTransport:(id)a0 error:(id *)a1;
- (char)setSyncAnchor:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)setTransportScope:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)setValue:(char)a0 forFlag:(long long)a1 forScope:(id)a2 error:(id *)a3;
- (char)setupAnchorResetTransportGroupForScope:(id)a0 error:(id *)a1;
- (char)setupInitialSyncTransportGroupsForScope:(id)a0 error:(id *)a1;
- (char)setupResetSyncTransportGroupForScope:(id)a0 error:(id *)a1;
- (id)sharingScopeForScope:(id)a0;
- (char)shouldAutoactivateScopeWithIdentifier:(id)a0 scopeType:(long long)a1;
- (char)shouldCheckAssetsWithServerWhenOverQuotaForScope:(id)a0;
- (char)shouldDropAllUploadsForScope:(id)a0 dropReason:(id *)a1 shouldQuarantineRecords:(char *)a2;
- (char)shouldTrackAdditionalInitialSyncDatesForScope:(id)a0;
- (long long)stableScopeIndexForScopeIdentifier:(id)a0;
- (id)stagingScopeForScope:(id)a0;
- (id)statusDictionaryForScope:(id)a0;
- (char)storeBusyState:(long long)a0 forScope:(id)a1 error:(id *)a2;
- (char)storeEstimatedSize:(unsigned long long)a0 estimatedAssetCount:(unsigned long long)a1 forScope:(id)a2 error:(id *)a3;
- (char)storeLastDateOfClearedPushRepository:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)storeRewindSyncAnchors:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)storeScopeChange:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)storeSupervisorInfo:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)storeSupportedFeatureVersionInLastSync:(unsigned long long)a0 forScope:(id)a1 error:(id *)a2;
- (char)storeTransientSyncAnchor:(id)a0 forScope:(id)a1 error:(id *)a2;
- (id)supervisorInfoForScope:(id)a0;
- (unsigned long long)supportedFeatureVersionInLastSyncForScope:(id)a0;
- (char)supportedFeatureVersionIsMostRecentForScope:(id)a0;
- (id)syncAnchorForScope:(id)a0;
- (id)transientSyncAnchorForScope:(id)a0;
- (id)transportScopeForScope:(id)a0;
- (long long)transportUpdateTaskForScope:(id)a0;
- (char)updateFlags:(id)a0 forScope:(id)a1 error:(id *)a2;
- (char)updateInitialSyncTransportGroupEstimatedSize:(unsigned long long)a0 assetCount:(unsigned long long)a1 forScope:(id)a2 error:(id *)a3;
- (char)updateScopeWithChange:(id)a0 error:(id *)a1;
- (id)updatedScopeFilter:(id)a0;
- (char)upgradeScopesWithNewLibraryOptions:(unsigned long long)a0 error:(id *)a1;
- (id)uploadTransportGroupForScope:(id)a0;
- (id)validCloudScopeIndexes;
- (id)validLocalScopeIndexes;
- (char)valueForFlag:(long long)a0 forScope:(id)a1;
- (void)writeTransactionDidFail;
- (void)writeTransactionDidSucceed;

@end

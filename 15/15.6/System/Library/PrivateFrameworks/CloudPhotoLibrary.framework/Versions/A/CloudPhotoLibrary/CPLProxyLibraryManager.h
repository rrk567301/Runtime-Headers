@class NSXPCConnection, NSString, NSDate, NSMutableDictionary, NSCountedSet, NSObject, NSMutableArray, CPLFingerprintContext;
@protocol OS_dispatch_queue;

@interface CPLProxyLibraryManager : CPLPlatformObject <CPLClientLibraryManagerProtocol, NSXPCConnectionDelegate, CPLLibraryManagerImplementation> {
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _realConnectionLock;
    NSXPCConnection *_realConnection;
    NSMutableDictionary *_downloadTasks;
    NSMutableDictionary *_inMemoryDownloadTasks;
    NSMutableDictionary *_uploadTasks;
    NSMutableDictionary *_forceSyncTasks;
    NSMutableDictionary *_vouchersPerTaskIdentifier;
    unsigned long long _foregroundCalls;
    char _foregroundCallsHaveBeenQuiet;
    NSCountedSet *_disablingReasons;
    unsigned long long _disablingMinglingCount;
    unsigned long long _significantWorkCalls;
    NSMutableDictionary *_outstandingInvocations;
    unsigned long long _outstandingInvocationsCount;
    NSMutableDictionary *_syncOutstandingInvocations;
    unsigned long long _syncOutstandingInvocationsCount;
    NSMutableArray *_pendingBlocksAfterOpening;
    int _openingStatus;
    NSDate *_backoffRetryingConnectionDate;
    int _notifyToken;
    char _killed;
    char _firstTryOpeningLibrary;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) CPLFingerprintContext *fingerprintContextIfKnown;

+ (id)clientProtocolInterface;
+ (id)daemonProtocolInterface;

- (void)dealloc;
- (void).cxx_destruct;
- (void)connection:(id)a0 handleInvocation:(id)a1 isReply:(char)a2;
- (void)openWithCompletionHandler:(id /* block */)a0;
- (void)barrier;
- (id)_connection;
- (void)closeWithCompletionHandler:(id /* block */)a0;
- (void)_setupConnection;
- (id)proxyWithErrorHandler:(id /* block */)a0;
- (void)cancelTask:(id)a0;
- (void)resetStatus;
- (void)acceptSharedScope:(id)a0 completionHandler:(id /* block */)a1;
- (void)acknowledgeChangedStatuses:(id)a0;
- (void)activateScopeWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)attachComputeStates:(id)a0 completionHandler:(id /* block */)a1;
- (void)beginDownloadForResource:(id)a0 clientBundleID:(id)a1 options:(id)a2 proposedTaskIdentifier:(id)a3 completionHandler:(id /* block */)a4;
- (void)beginInMemoryDownloadOfResource:(id)a0 clientBundleID:(id)a1 completionHandler:(id /* block */)a2;
- (void)boostPriorityForScopeWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)checkHasBackgroundDownloadOperationsWithCompletionHandler:(id /* block */)a0;
- (void)checkResourcesAreSafeToPrune:(id)a0 checkServerIfNecessary:(char)a1 completionHandler:(id /* block */)a2;
- (void)createScope:(id)a0 completionHandler:(id /* block */)a1;
- (void)deactivateScopeWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)deactivateWithCompletionHandler:(id /* block */)a0;
- (void)deleteResources:(id)a0 checkServerIfNecessary:(char)a1 completionHandler:(id /* block */)a2;
- (void)fetchSharedScopeFromShareURL:(id)a0 completionHandler:(id /* block */)a1;
- (void)forceBackupWithCompletionHandler:(id /* block */)a0;
- (void)forceSynchronizingScopeWithIdentifiers:(id)a0 completionHandler:(id /* block */)a1;
- (void)getChangedStatusesWithCompletionHandler:(id /* block */)a0;
- (void)getScopeStatusCountsForScopeWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)getStatusForComponents:(id)a0 completionHandler:(id /* block */)a1;
- (void)getStatusForPendingRecordsSharedToScopeWithIdentifier:(id)a0 maximumCount:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)getStatusForRecordsWithScopedIdentifiers:(id)a0 completionHandler:(id /* block */)a1;
- (void)getSystemBudgetsWithCompletionHandler:(id /* block */)a0;
- (void)noteClientIsBeginningSignificantWork;
- (void)noteClientIsEndingSignificantWork;
- (void)noteClientIsInBackground;
- (void)noteClientIsInForegroundQuietly:(char)a0;
- (void)queryUserDetailsForShareParticipants:(id)a0 completionHandler:(id /* block */)a1;
- (void)refreshScopeWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)removeParticipants:(id)a0 fromSharedScopeWithIdentifier:(id)a1 retentionPolicy:(long long)a2 exitSource:(long long)a3 completionHandler:(id /* block */)a4;
- (void)reportMiscInformation:(id)a0;
- (void)reportSetting:(id)a0 hasBeenSetToValue:(id)a1;
- (void)resolveLocalScopedIdentifiersForCloudScopedIdentifiers:(id)a0 completionHandler:(id /* block */)a1;
- (void)setShouldOverride:(char)a0 forSystemBudgets:(unsigned long long)a1;
- (void)sharedLibraryRampCheckWithCompletionHandler:(id /* block */)a0;
- (void)startExitFromSharedScopeWithIdentifier:(id)a0 retentionPolicy:(long long)a1 exitSource:(long long)a2 completionHandler:(id /* block */)a3;
- (void)updateShareForScope:(id)a0 completionHandler:(id /* block */)a1;
- (void)cancelSyncTask:(id)a0;
- (void)disableMingling;
- (void)dispatchBlockWhenLibraryIsOpen:(id /* block */)a0;
- (void)_dispatchBlockWhenOpen:(id /* block */)a0;
- (void)_dispatchFailedDownloadTaskForResource:(id)a0 options:(id)a1 proposedTaskIdentifier:(id)a2 withError:(id)a3 withCompletionHandler:(id /* block */)a4;
- (void)_dispatchFailedForceSyncTaskForScopeIdentifiers:(id)a0 withError:(id)a1 withCompletionHandler:(id /* block */)a2;
- (void)_dispatchFailedInMemoryDownloadTaskForResource:(id)a0 withError:(id)a1 withCompletionHandler:(id /* block */)a2;
- (void)_dropConnectionCompletly;
- (void)_dropConnectionCompletlyLocked;
- (void)_dropVoucherForTaskWithIdentifier:(id)a0;
- (void)_invokeOutstandingInvocationsWithTaskIdentifier:(id)a0;
- (void)_invokeSyncOutstandingInvocationsWithTaskIdentifier:(id)a0;
- (void)_markConnectionAsInvalid;
- (void)_reallyOpenWithCompletionHandler:(id /* block */)a0;
- (char)_setStatusFromDictionary:(id)a0;
- (void)_storeVoucher:(id)a0 forTaskWithIdentifier:(id)a1;
- (id)_uploadTaskDidStartForResource:(id)a0 withTaskIdentifier:(id)a1;
- (void)_withVoucherForTaskWithIdentifier:(id)a0 do:(id /* block */)a1;
- (void)addDropDerivativesRecipe:(id)a0 writeToUserDefaults:(char)a1 withCompletionHandler:(id /* block */)a2;
- (void)addInfoToLog:(id)a0;
- (void)addStatusChangesForRecordsWithScopedIdentifiers:(id)a0 persist:(char)a1;
- (void)backgroundDownloadDidFailForResource:(id)a0;
- (void)backgroundDownloadDidFinishForResource:(id)a0;
- (void)blockEngineElement:(id)a0;
- (void)cloudCacheGetDescriptionForRecordWithScopedIdentifier:(id)a0 related:(char)a1 completionHandler:(id /* block */)a2;
- (void)compactFileCacheWithCompletionHandler:(id /* block */)a0;
- (void)deleteScopeWithIdentifier:(id)a0 forced:(char)a1 completionHandler:(id /* block */)a2;
- (void)disableSynchronizationWithReason:(id)a0;
- (void)downloadDidFinishForResourceTransferTask:(id)a0 finalResource:(id)a1 withError:(id)a2;
- (void)downloadDidProgress:(float)a0 forResourceTransferTask:(id)a1;
- (void)downloadDidStartForResourceTransferTask:(id)a0;
- (void)enableMingling;
- (void)enableSynchronizationWithReason:(id)a0;
- (void)fetchComputeStatesForRecordsWithScopedIdentifiers:(id)a0 validator:(id)a1 shouldDecrypt:(char)a2 onDemand:(char)a3 completionHandler:(id /* block */)a4;
- (void)fetchExistingSharedLibraryScopeWithCompletionHandler:(id /* block */)a0;
- (void)forceSyncDidFinishForTask:(id)a0 withErrors:(id)a1;
- (void)getCloudCacheRecordsWithLocalScopedIdentifiers:(id)a0 desiredProperties:(id)a1 completionHandler:(id /* block */)a2;
- (void)getListOfComponentsWithCompletionHandler:(id /* block */)a0;
- (void)getMappedScopedIdentifiersForScopedIdentifiers:(id)a0 inAreLocalIdentifiers:(char)a1 completionHandler:(id /* block */)a2;
- (void)getResourcesForItemWithScopedIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)getStatusArrayForComponents:(id)a0 completionHandler:(id /* block */)a1;
- (void)getStatusesForScopesWithIdentifiers:(id)a0 includeStorages:(char)a1 completionHandler:(id /* block */)a2;
- (void)getStreamingURLForResource:(id)a0 intent:(unsigned long long)a1 hints:(id)a2 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })a3 clientBundleID:(id)a4 completionHandler:(id /* block */)a5;
- (void)getTargetsForRecordsWithScopedIdentifiers:(id)a0 completionHandler:(id /* block */)a1;
- (void)inMemoryDownloadDidFinishForResourceTransferTask:(id)a0 data:(id)a1 withError:(id)a2;
- (id)initWithAbstractObject:(id)a0;
- (void)libraryManagerDidUpdateSizeOfResourcesToUploadToSize:(unsigned long long)a0 sizeOfOriginalResourcesToUpload:(unsigned long long)a1 numberOfImages:(unsigned long long)a2 numberOfVideos:(unsigned long long)a3 numberOfOtherItems:(unsigned long long)a4;
- (void)libraryManagerDidUpdateStatusWithProperties:(id)a0;
- (void)libraryManagerHasBeenReplaced;
- (void)libraryManagerHasChangesToPull;
- (void)libraryManagerHasStatusChanges;
- (void)noteClientReceivedNotificationOfServerChanges;
- (void)provideCloudResource:(id)a0 completionHandler:(id /* block */)a1;
- (void)provideLocalResource:(id)a0 recordClassString:(id)a1 completionHandler:(id /* block */)a2;
- (void)providePayloadForComputeStates:(id)a0 inFolderWithURL:(id)a1 completionHandler:(id /* block */)a2;
- (void)provideRecordWithCloudScopeIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)provideScopeChangeForScopeWithIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (void)pushAllChangesWithCompletionHandler:(id /* block */)a0;
- (void)rampingRequestForResourceType:(unsigned long long)a0 numRequested:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)requestClientToPullAllChangesInScopeIdentifiers:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestClientToPushAllChangesWithCompletionHandler:(id /* block */)a0;
- (void)resetCacheWithOption:(unsigned long long)a0 reason:(id)a1 completionHandler:(id /* block */)a2;
- (void)startSyncSession;
- (void)testKey:(id)a0 value:(id)a1 completionHandler:(id /* block */)a2;
- (void)unblockEngineElement:(id)a0;
- (void)unblockEngineElementOnce:(id)a0;
- (void)uploadDidStartForResource:(id)a0 withResourceTransferTask:(id)a1;
- (void)uploadOfResource:(id)a0 didFinishForResourceTransferTask:(id)a1 withError:(id)a2;
- (void)uploadOfResource:(id)a0 didProgress:(float)a1 forResourceTransferTask:(id)a2;

@end

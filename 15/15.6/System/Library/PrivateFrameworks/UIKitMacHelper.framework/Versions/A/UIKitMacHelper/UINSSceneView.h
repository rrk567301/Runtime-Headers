@class NSString, NSArray, UINSInputView, CALayer, UIWindow, UINSSceneViewController, UINSCursor, NSMutableArray, USSLayerHost, NSTrackingArea, NSMutableSet, NSViewDynamicToolTipManager;

@interface UINSSceneView : NSView {
    CALayer *_zoomLayer;
    USSLayerHost *_sceneLayer;
    unsigned int _lastSentDisplayID;
    struct CGSize { double width; double height; } _lastSentSceneSize;
    double _lastSentScale;
    long long _lastSentGamut;
    struct NSEdgeInsets { double top; double left; double bottom; double right; } _lastSentSceneContentInsets;
    long long _sceneResizeSuppressionCount;
    UINSCursor *_currentCursor;
    NSTrackingArea *_cursorTrackingArea;
    char _preventSceneResize;
    id _windowDidChangeScreenNotificationToken;
    id _statusBarHeightChangeNotificationToken;
    NSMutableSet *_dragRegisteredContextIDs;
    NSViewDynamicToolTipManager *_dynamicToolTipManager;
    char _sceneRequiresFullScreen;
    struct CGSize { double width; double height; } _fullScreenSceneReferenceSize;
    char _referenceSizeValid;
    double _cachedSceneToSceneViewScaleFactor;
    char _didSetupLayoutRectKVO;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _coordinateFromSceneTransform;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _coordinateToSceneTransform;
    id _hostedViewServiceWindowContextAttachNotification;
}

@property (nonatomic, setter=_setHostedContextId:) unsigned int _hostedContextId;
@property (nonatomic) double rasterizationScaleFactor;
@property (weak, nonatomic) UINSSceneViewController *sceneViewController;
@property (readonly, nonatomic) UINSInputView *inputView;
@property (nonatomic) unsigned int contextId;
@property (copy, nonatomic) NSString *sceneIdentifier;
@property (nonatomic) struct CGSize { double width; double height; } sceneSize;
@property (readonly, nonatomic) struct NSEdgeInsets { double x0; double x1; double x2; double x3; } sceneContentInsets;
@property (readonly, nonatomic) double sceneToSceneViewScaleFactor;
@property (nonatomic) double fixedSceneToSceneViewScaleFactor;
@property (nonatomic) double fixedBackingScaleFactor;
@property (nonatomic, getter=areImplicitZoomScaleAnimationsEnabled) char implicitZoomScaleAnimationsEnabled;
@property (nonatomic) char isSimAccessibilityEnabled;
@property (retain, nonatomic) NSMutableArray *dropSessions;
@property (copy, nonatomic) id /* block */ resizeBlock;
@property (nonatomic) double enqueuedTimestampOfLastEvent;
@property (nonatomic, getter=isViewBridgeServiceScene) char viewBridgeServiceScene;
@property (copy, nonatomic) id /* block */ contextDidChangeHandler;
@property (weak, nonatomic) UIWindow *hostedServiceUIWindow;
@property (retain, nonatomic) UIWindow *appKitHostedServiceUIWindow;
@property (nonatomic) char shouldHostContent;
@property (nonatomic) int counterRotation;
@property (readonly, nonatomic) NSArray *uiWindows;
@property (readonly, nonatomic) UIWindow *keyUIWindow;

+ (void)initialize;
+ (char)requiresConstraintBasedLayout;
+ (void)_installDisplayTimingRunLoopObserver;
+ (void)setNeedsUpdateDisplayTiming;
+ (double)updateDisplayTimingReturningRefreshInterval;

- (void)dealloc;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (void)layout;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)draggingExited:(id)a0;
- (id)_dynamicToolTipManager;
- (char)_intelligenceCollectRemote;
- (void)_intelligenceCollectRemoteContentInVisibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 remoteContextWrapper:(id)a1;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_intelligenceRemoteTransform;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityFocusRingMaskBounds;
- (void)concludeDragOperation:(id)a0;
- (void)cursorUpdate:(id)a0;
- (void)draggingEnded:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (unsigned long long)draggingUpdated:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dynamicToolTipRectAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)dynamicToolTipRevealoverInfoAtPoint:(struct CGPoint { double x0; double x1; })a0 trackingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (id)dynamicToolTipStringAtPoint:(struct CGPoint { double x0; double x1; })a0 trackingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (unsigned long long)focusRingType;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)isFlipped;
- (char)mouseDownCanMoveWindow;
- (char)performDragOperation:(id)a0;
- (char)prepareForDragOperation:(id)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)viewDidChangeBackingProperties;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)a0;
- (char)wantsPeriodicDraggingUpdates;
- (void)setCursor:(id)a0;
- (void)_updateRasterizationScaleFactor;
- (double)_counterRotationAngle;
- (char)_counterRotationIsOrthogonalToAppOrientation;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_counterRotationTransformForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 rotationAngle:(double)a1;
- (char)_dragTargetsHostedContent:(id)a0;
- (id)_dumpUIWindowLayers;
- (unsigned long long)_indexOfSessionWithID:(long long)a0;
- (void)_invalidateCachedScaleFactor;
- (void)_recalculateCachedScaleFactor;
- (void)_sharedInit;
- (void)_updateTransformsForZoomScale:(double)a0;
- (void)_updateUIKitSceneProperties;
- (void)_updateZoomLayer;
- (unsigned int)contextIdAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointFromScene:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPointToScene:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectFromScene:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToScene:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })convertSizeFromScene:(struct CGSize { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })convertSizeToScene:(struct CGSize { double x0; double x1; })a0;
- (void)dynamicTooTipRevealoverDrawInView:(id)a0 displayInfo:(id)a1;
- (id)externalDropSessionFor:(unsigned int)a0;
- (void)resumeSceneResize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scaleRectToScene:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setUINSCursor:(id)a0;
- (void)suppressSceneResize;
- (void)updateDragContextRegistrations;
- (void)warpCursorToScene;

@end

@class BCSBlastDoorHelper, NSString, NSObject;
@protocol BCSFetchTrigger, BCSIconControllerProtocol, BCSChatSuggestControllerProtocol, BCSItemBatchResolving, BCSConfigCaching, BCSItemResolving, OS_dispatch_queue, BCSConfigResolving, BCSCacheClearing, BCSShardResolving, BCSHousekeeping, BCSConfigCacheSkipping, BCSURLPatternControllerProtocol, BCSShardCacheQueryable, BCSMetricFactoryProtocol, BCSShardCacheSkipping, BCSEntitlementVerifying, BCSIdentityServiceProtocol, BCSQueryChopperProtocol;

@interface BCSBusinessQueryController : NSObject <BCSLinkQueryChopperDelegate, BCSBusinessConfigProvider, BCSBusinessShardProvider, BCSBusinessItemProvider, BCSBusinessLookupProvider, BCSBusinessBatchProvider, BCSXPCDaemonProtocol>

@property (retain, nonatomic) id<BCSIdentityServiceProtocol> identityService;
@property (retain, nonatomic) id<BCSIconControllerProtocol> iconController;
@property (retain, nonatomic) id<BCSCacheClearing> cacheClearer;
@property (retain, nonatomic) id<BCSChatSuggestControllerProtocol> chatSuggestController;
@property (retain, nonatomic) id<BCSItemResolving> chatSuggestItemResolver;
@property (retain, nonatomic) id<BCSConfigResolving> chatSuggestConfigResolver;
@property (retain, nonatomic) id<BCSShardResolving> chatSuggestShardResolver;
@property (retain, nonatomic) id<BCSItemResolving> linkItemResolver;
@property (retain, nonatomic) id<BCSConfigResolving> linkConfigResolver;
@property (retain, nonatomic) id<BCSShardResolving> linkShardResolver;
@property (retain, nonatomic) id<BCSItemResolving> businessCallerItemResolver;
@property (retain, nonatomic) id<BCSConfigResolving> businessCallerConfigResolver;
@property (retain, nonatomic) id<BCSShardResolving> businessCallerShardResolver;
@property (retain, nonatomic) id<BCSItemResolving, BCSItemBatchResolving> businessEmailItemResolver;
@property (retain, nonatomic) id<BCSConfigResolving> businessEmailConfigResolver;
@property (retain, nonatomic) id<BCSShardResolving> businessEmailShardResolver;
@property (retain, nonatomic) id<BCSFetchTrigger> chatSuggestMegashardFetchTrigger;
@property (retain, nonatomic) id<BCSFetchTrigger> businessLinkMegashardFetchTrigger;
@property (retain, nonatomic) id<BCSFetchTrigger> businessCallerMegashardFetchTrigger;
@property (retain, nonatomic) id<BCSFetchTrigger> businessEmailMegashardFetchTrigger;
@property (retain, nonatomic) id<BCSEntitlementVerifying> entitlementVerifier;
@property (retain, nonatomic) id<BCSQueryChopperProtocol> queryChopper;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *serialDispatchQueue;
@property (readonly, nonatomic) id<BCSMetricFactoryProtocol> metricFactory;
@property (retain, nonatomic) id<BCSShardCacheQueryable> shardCache;
@property (retain, nonatomic) id<BCSConfigCaching> configCache;
@property (retain, nonatomic) id<BCSConfigCacheSkipping> configCacheSkip;
@property (retain, nonatomic) id<BCSShardCacheSkipping> shardCacheSkip;
@property (retain, nonatomic) id<BCSURLPatternControllerProtocol> patternController;
@property (retain, nonatomic) id<BCSHousekeeping> housekeeper;
@property (retain, nonatomic) BCSBlastDoorHelper *blastDoorHelper;
@property char blastDoorWarmedUp;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void).cxx_destruct;
- (void)fetchConfigForQuery:(id)a0 completion:(id /* block */)a1;
- (void)fetchShardWithQuery:(id)a0 completion:(id /* block */)a1;
- (void)fetchLinkItemModelWithURL:(id)a0 chopURL:(char)a1 forClientBundleID:(id)a2 completion:(id /* block */)a3;
- (id)_configResolverForType:(long long)a0;
- (void)_deleteInMemoryCache;
- (void)_generateSafeImageURLForItemIdentifier:(id)a0 imageData:(id)a1 format:(id)a2 completion:(id /* block */)a3;
- (char)_isBloomFilterCachedForType:(long long)a0;
- (id)_itemResolverForType:(long long)a0;
- (void)_prefetchBusinessCallerMegashardForReason:(unsigned long long)a0 completion:(id /* block */)a1;
- (void)_prefetchBusinessEmailMegashardForReason:(unsigned long long)a0 completion:(id /* block */)a1;
- (void)_prefetchBusinessLinkMegashardForReason:(unsigned long long)a0 completion:(id /* block */)a1;
- (void)_prefetchChatSuggestMegashardForReason:(unsigned long long)a0 completion:(id /* block */)a1;
- (id)_shardIdentifierForQuery:(id)a0 withItemIdentifier:(id)a1;
- (id)_shardResolverForType:(long long)a0;
- (long long)_shardStartIndexForItemIdentifier:(id)a0 shardType:(long long)a1 shardCount:(long long)a2;
- (void)cachedBusinessMetadataForEmail:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)clearCachesForLinkItemsAssociatedWithBundleID:(id)a0 completion:(id /* block */)a1;
- (void)clearCachesForType:(long long)a0 completion:(id /* block */)a1;
- (void)clearExpiredCachesForType:(long long)a0 completion:(id /* block */)a1;
- (void)fetchAreBusinessesRegisteredWithQuery:(id)a0 completion:(id /* block */)a1;
- (void)fetchBusinessCallerMetadataForPhoneNumber:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)fetchBusinessCallerMetadataForPhoneNumber:(id)a0 forClientBundleID:(id)a1 metadataCallback:(id /* block */)a2 logoURLCallback:(id /* block */)a3 completion:(id /* block */)a4;
- (void)fetchBusinessItemWithDetailsForPhoneNumber:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)fetchBusinessItemWithPhoneNumber:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)fetchBusinessLogoForBusinessIdentifier:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)fetchBusinessMetadataForEmail:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)fetchBusinessMetadataForEmailIdentifier:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)fetchBusinessMetadataForEmails:(id)a0 forClientBundleID:(id)a1 requestId:(id)a2 completion:(id /* block */)a3;
- (void)fetchIsBusinessPhoneNumber:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)fetchIsBusinessRegisteredWithQuery:(id)a0 completion:(id /* block */)a1;
- (void)fetchItemWithQuery:(id)a0 completion:(id /* block */)a1;
- (void)fetchItemsWithQuery:(id)a0 perItemCompletion:(id /* block */)a1 completion:(id /* block */)a2;
- (void)fetchLinkItemModelWithHash:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)fetchShardsWithQuery:(id)a0 completion:(id /* block */)a1;
- (void)fetchSquareIconDataForBusinessItem:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (id)initWithChatSuggestMegashardFetchTrigger:(id)a0 businessLinkMegashardFetchTrigger:(id)a1 businessCallerMegashardFetchTrigger:(id)a2 businessEmailMegashardFetchTrigger:(id)a3 entitlementVerifier:(id)a4 identityService:(id)a5 chatSuggestController:(id)a6 iconController:(id)a7 cacheClearer:(id)a8 shardCache:(id)a9 configCache:(id)a10 configCacheSkip:(id)a11 shardCacheSkip:(id)a12 chatSuggestConfigResolver:(id)a13 linkConfigResolver:(id)a14 businessCallerConfigResolver:(id)a15 businessEmailConfigResolver:(id)a16 chatSuggestShardResolver:(id)a17 linkShardResolver:(id)a18 businessCallerShardResolver:(id)a19 businessEmailShardResolver:(id)a20 chatSuggestItemResolver:(id)a21 linkItemResolver:(id)a22 businessCallerItemResolver:(id)a23 businessEmailItemResolver:(id)a24 queryChopper:(id)a25 patternController:(id)a26 metricFactory:(id)a27 blastDoorHelper:(id)a28 housekeeper:(id)a29;
- (id)initWithChatSuggestMegashardFetcher:(id)a0 businessLinkMegashardFetcher:(id)a1 businessCallerMegashardFetcher:(id)a2 businessEmailMegashardFetcher:(id)a3 shardCache:(id)a4 cacheManager:(id)a5 chatSuggestRemoteFetcher:(id)a6 businessLinkRemoteFetcher:(id)a7 businessCallerRemoteFetcher:(id)a8 businessEmailRemoteFetcher:(id)a9 userDefaults:(id)a10 metricFactory:(id)a11;
- (void)isBusinessCallerRegisteredForPhoneNumber:(id)a0 forClientBundleID:(id)a1 completion:(id /* block */)a2;
- (void)isBusinessRegisteredForURL:(id)a0 chopURL:(char)a1 forClientBundleID:(id)a2 completion:(id /* block */)a3;
- (void)lookupBloomFiltersForURL:(id)a0 chopURL:(char)a1 forClientBundleID:(id)a2 registeredMetric:(id)a3 completion:(id /* block */)a4;
- (void)prefetchMegashardsWithCompletion:(id /* block */)a0;
- (void)startUpTasks;
- (void)warmCacheIfNecessaryForPhoneNumbers:(id)a0 forClientBundleID:(id)a1;

@end

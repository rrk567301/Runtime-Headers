@class NSString, NSView, NSHashTable, NSObject, PXScrollInfo;
@protocol PXAnonymousScrollView, PXAnonymousCoordinateSpace, PXScrollControllerUpdateDelegate;

@interface PXScrollViewController : NSObject <PXScrollController> {
    NSHashTable *_willLayoutSubviewsObservers;
    NSHashTable *_didLayoutSubviewsObservers;
    NSHashTable *_didScrollObservers;
}

@property (readonly, nonatomic) NSHashTable *_observers;
@property (readonly, nonatomic) long long activeEdgeScrollAnimations;
@property (readonly, nonatomic) char scrollViewIsAnimatingScroll;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } scrollViewReferenceSize;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewActiveRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewVisibleRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewConstrainedVisibleRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewTargetRect;
@property (readonly, nonatomic) struct CGSize { double width; double height; } scrollViewContentSize;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewVisibleRectOutsideBounds;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewContentBounds;
@property (readonly, nonatomic) NSObject<PXAnonymousScrollView> *scrollView;
@property (readonly, nonatomic) char isAnimatingScrollTowardsEdge;
@property (readonly, nonatomic) char isAnimatingScroll;
@property (readonly, nonatomic) char isDecelerating;
@property (readonly, nonatomic) char isDragging;
@property (readonly, nonatomic) char isTracking;
@property (readonly, nonatomic) char isBouncing;
@property (readonly, nonatomic) char isScrubbing;
@property (readonly, nonatomic) char isManuallyChanging;
@property (readonly, nonatomic) char hasWindow;
@property (readonly, nonatomic) NSView<PXAnonymousCoordinateSpace> *contentCoordinateSpace;
@property (nonatomic) struct CGPoint { double x0; double x1; } visibleOrigin;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } visibleRectOutsideBounds;
@property (nonatomic) struct NSEdgeInsets { double top; double left; double bottom; double right; } contentInset;
@property (nonatomic) long long decelerationRate;
@property (nonatomic) char clipsToBounds;
@property (nonatomic) long long contentInsetAdjustmentBehavior;
@property (nonatomic) char showsHorizontalScrollIndicator;
@property (nonatomic) char showsVerticalScrollIndicator;
@property (nonatomic) long long indicatorStyle;
@property (nonatomic) char alwaysBounceHorizontal;
@property (nonatomic) char alwaysBounceVertical;
@property (nonatomic) char isScrollEnabled;
@property (nonatomic) char adjustsContentInsetWhenScrollDisabled;
@property (nonatomic) struct NSEdgeInsets { double top; double left; double bottom; double right; } horizontalScrollIndicatorInsets;
@property (nonatomic) struct NSEdgeInsets { double top; double left; double bottom; double right; } verticalScrollIndicatorInsets;
@property (nonatomic) struct NSEdgeInsets { double top; double left; double bottom; double right; } hitTestContentInsets;
@property (nonatomic) char draggingPerformsScroll;
@property (nonatomic) char transfersScrollToContainer;
@property (nonatomic) double horizontalInterPageSpacing;
@property (nonatomic) char shouldScrollSimultaneouslyWithDescendantScrollView;
@property (nonatomic) char deferContentOffsetUpdates;
@property (weak, nonatomic) id<PXScrollControllerUpdateDelegate> updateDelegate;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } referenceSize;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } activeRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } visibleRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } constrainedVisibleRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } targetRect;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentBounds;
@property (copy, nonatomic) PXScrollInfo *scrollInfo;
@property (nonatomic) char respectsContentZOrder;
@property (nonatomic) struct CGSize { double width; double height; } presentedContentSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)platformScrollViewControllerForScrollView:(id)a0;
+ (id)scrollViewControllerForScrollView:(id)a0;

- (id)init;
- (void).cxx_destruct;
- (void)addSubview:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setNeedsUpdate;
- (void)updateIfNeeded;
- (void)unregisterObserver:(id)a0;
- (void)registerObserver:(id)a0;
- (void)scrollRectToVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 animated:(char)a1;
- (void)addFloatingSublayer:(id)a0 forAxis:(long long)a1;
- (char)isFloatingSublayer:(id)a0;
- (char)isScrolledAtEdge:(unsigned int)a0 tolerance:(double)a1;
- (void)scrollRectToVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 avoidingContentInsetEdges:(unsigned long long)a1 animated:(char)a2;
- (void)scrollToEdge:(unsigned int)a0 animated:(char)a1;
- (void)scrollToEdge:(unsigned int)a0 padding:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a1 animated:(char)a2 completionHandler:(id /* block */)a3;
- (void)scrollViewDidLayout;
- (void)stopScrollingAndZoomingAnimations;
- (void)draggingPerformsScrollDidChange;
- (void)addSubviewToScrollView:(id)a0;
- (void)applyScrollInfo:(id)a0;
- (void)contentInsetAdjustmentBehaviorDidChange;
- (void)decelerationRateDidChange;
- (void)indicatorStyleDidChange;
- (char)isInterruptingScrollWithDirection:(out struct CGPoint { double x0; double x1; } *)a0;
- (char)isSubview:(id)a0;
- (void)performManualChange:(id /* block */)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollIndicatorFrameForAxis:(long long)a0;
- (void)scrollToEdge:(unsigned int)a0 animated:(char)a1 completionHandler:(id /* block */)a2;
- (void)scrollViewContentBoundsDidChange;
- (void)scrollViewDidBeginFocusFastScrolling;
- (void)scrollViewDidEndFocusFastScrolling;
- (void)scrollViewDidEndScrolling;
- (void)scrollViewDidEndScrollingAnimation;
- (void)scrollViewDidScroll;
- (void)scrollViewLayoutIfNeeded;
- (char)scrollViewShouldBeginScrollingWithPanAtLocation:(struct CGPoint { double x0; double x1; })a0 inCoordinateSpace:(id)a1 velocity:(struct CGPoint { double x0; double x1; })a2;
- (char)scrollViewShouldScrollToTop;
- (void)scrollViewWillBeginScrolling;
- (void)scrollViewWillBeginScrollingAnimationTowardsContentEdges:(unsigned long long)a0;
- (void)scrollViewWillLayout;
- (void)setActiveEdgeScrollAnimations:(long long)a0;
- (void)setScrollViewNeedsLayout;
- (void)transfersScrollToContainerDidChange;
- (void)willEndScrollingWithVelocity:(struct CGPoint { double x0; double x1; })a0 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a1;

@end

@class NSURL, NSDate, NSObject, PLManagedFolder, NSOrderedSet, NSString, NSMutableOrderedSet, NSMutableSet, PLManagedAsset, NSArray, NSData, PLPhotoLibrary, NSNumber;
@protocol PLIndexMappingCache;

@interface PLGenericAlbum : PLManagedObject <PLSyncableObject, PLSearchableManagedObject, PLAlbumProtocol, PLDerivedAlbumOrigin, PLIndexMappersDataOrigin> {
    NSObject<PLIndexMappingCache> *_derivedAlbums[5];
    char _didAutomaticallyAssignParentFolder;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, retain, nonatomic) id localID;
@property (nonatomic) short cloudLocalState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) NSOrderedSet *keyAssets;
@property (readonly, nonatomic) PLPhotoLibrary *photoLibrary;
@property (retain, nonatomic) NSNumber *kind;
@property (retain, nonatomic) NSMutableSet *albumLists;
@property (retain, nonatomic) PLManagedFolder *parentFolder;
@property (nonatomic) long long syncEventOrderKey;
@property (nonatomic) unsigned int customSortKey;
@property (nonatomic) char customSortAscending;
@property (retain, nonatomic) PLManagedAsset *customKeyAsset;
@property (nonatomic) int cachedCount;
@property (nonatomic) int cachedPhotosCount;
@property (nonatomic) int cachedVideosCount;
@property (nonatomic) short trashedState;
@property (retain, nonatomic) NSDate *trashedDate;
@property (retain, nonatomic) NSDate *startDate;
@property (retain, nonatomic) NSDate *endDate;
@property (retain, nonatomic) NSDate *creationDate;
@property (retain, nonatomic) NSString *uuid;
@property (nonatomic) int kindValue;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) NSString *cloudGUID;
@property (retain, nonatomic) NSString *importedByBundleIdentifier;
@property (nonatomic) char isPinned;
@property (nonatomic) char isPrototype;
@property (nonatomic) short privacyState;
@property (nonatomic) short cloudLocalState;
@property (nonatomic) short cloudDeleteState;
@property (retain, nonatomic) NSData *userQueryData;
@property (retain, nonatomic) NSDate *lastModifiedDate;
@property (readonly, nonatomic) long long keyAssetsMaxCount;
@property (readonly, nonatomic) char isLibrary;
@property (readonly, nonatomic) char isCameraAlbum;
@property (readonly, nonatomic) char isSmartAlbum;
@property (readonly, nonatomic) char isUserCreated;
@property (readonly, nonatomic) char isOwnPhotoStreamAlbum;
@property (readonly, nonatomic) char isProjectAlbumRootFolder;
@property (readonly, nonatomic) char isRegularRootFolder;
@property (readonly, nonatomic) char isRecentlyAddedAlbum;
@property (readonly, nonatomic) char isUserLibraryAlbum;
@property (readonly, nonatomic) char isProjectAlbum;
@property (readonly, nonatomic) char isDuplicateAlbum;
@property (readonly, nonatomic) char shouldDeleteWhenEmpty;
@property (nonatomic) char isRegisteredForChanges;
@property (nonatomic) char didRegisteredWithUserInterfaceContext;
@property (readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets;
@property (nonatomic) char hasUnseenContentBoolValue;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, retain, nonatomic) NSObject *posterImage;
@property (readonly, nonatomic) char isPanoramasAlbum;
@property (readonly, nonatomic) char isPhotoStreamAlbum;
@property (readonly, nonatomic) char isCloudSharedAlbum;
@property (readonly, nonatomic) char isPendingPhotoStreamAlbum;
@property (readonly, nonatomic) char isStandInAlbum;
@property (readonly, nonatomic) char isFolder;
@property (readonly, nonatomic) char isInTrash;
@property (readonly, nonatomic) char isOwnedCloudSharedAlbum;
@property (readonly, nonatomic) char isFamilyCloudSharedAlbum;
@property (readonly, nonatomic) char isMultipleContributorCloudSharedAlbum;
@property (readonly, nonatomic) char canContributeToCloudSharedAlbum;
@property (retain, nonatomic) NSString *importSessionID;
@property (readonly, retain, nonatomic) NSURL *groupURL;
@property (readonly, copy, nonatomic) id /* block */ sortingComparator;
@property (nonatomic) int pendingItemsCount;
@property (nonatomic) int pendingItemsType;
@property (nonatomic) unsigned long long batchSize;
@property (readonly, copy, nonatomic) NSString *localizedTitle;
@property (readonly, retain, nonatomic) NSOrderedSet *assets;
@property (readonly, nonatomic) unsigned long long approximateCount;
@property (readonly, nonatomic) unsigned long long assetsCount;
@property (readonly, nonatomic) unsigned long long photosCount;
@property (readonly, nonatomic) unsigned long long videosCount;
@property (readonly, nonatomic) char isEmpty;
@property (readonly, nonatomic) char canShowComments;
@property (readonly, nonatomic) char canShowAvalancheStacks;
@property (readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)entityName;
+ (id)keyPathsForValuesAffectingValueForKey:(id)a0;
+ (id)propertiesToFetch;
+ (id)insertNewSmartAlbumIntoLibrary:(id)a0;
+ (id)albumWithObjectID:(id)a0 inLibrary:(id)a1;
+ (id)defaultAlbumKindsForFetchingWithCPLEnabled:(char)a0;
+ (id)insertNewAlbumIntoLibrary:(id)a0;
+ (id)insertNewCloudSharedAlbumWithTitle:(id)a0 lastInterestingDate:(id)a1 intoLibrary:(id)a2;
+ (id)localizedTitleForAlbumKind:(int)a0 cplEnabled:(char)a1;
+ (id)sortDescriptorsForAssetsInAlbumWithSortKey:(unsigned int)a0 ascending:(char)a1;
+ (char)supportsCustomKeyAssetWithAlbumKind:(int)a0;
+ (id)uuidFromGroupURL:(id)a0;
+ (id)albumsWithCloudGUIDs:(id)a0 inLibrary:(id)a1;
+ (id)albumFromGroupURL:(id)a0 photoLibrary:(id)a1;
+ (char)is1WaySyncKind:(int)a0;
+ (void)removeEmptyAlbumsAndFoldersForCloudResetInManagedObjectContext:(id)a0;
+ (id)_albumsMatchingPredicate:(id)a0 expectedResultCount:(id)a1 inManagedObjectContext:(id)a2;
+ (id)_baseIndexingPredicate;
+ (id)_insertNewAlbumWithKind:(int)a0 title:(id)a1 lastInterestingDate:(id)a2 intoLibrary:(id)a3;
+ (id)_predicateForSupportedAlbumTypes;
+ (void)_removeAlbumsAndFolders:(id)a0 inManagedObjectContext:(id)a1;
+ (id)_singletonFetchingAlbumWithKind:(int)a0 library:(id)a1;
+ (id)_singletonManagedAlbumWithKind:(int)a0 library:(id)a1;
+ (id)_unpushedParentsOfAlbums:(id)a0;
+ (char)_validateCurrentKeyAssetIDs:(id)a0 fetchedKeyAssetIDs:(id)a1 customKeyAssetID:(id)a2 maxCount:(long long)a3;
+ (void)addSingletonObjectsToContext:(id)a0;
+ (id)albumWithCloudGUID:(id)a0 inLibrary:(id)a1;
+ (id)albumWithKind:(int)a0 inManagedObjectContext:(id)a1;
+ (id)albumWithName:(id)a0 inLibrary:(id)a1;
+ (id)albumWithUUID:(id)a0 inLibrary:(id)a1;
+ (id)albumsForStreamID:(id)a0 inLibrary:(id)a1;
+ (id)albumsMatchingPredicate:(id)a0 expectedResultCount:(id)a1 inLibrary:(id)a2;
+ (id)albumsToUploadInitiallyInLibrary:(id)a0 limit:(unsigned long long)a1;
+ (id)albumsWithKind:(int)a0 inManagedObjectContext:(id)a1;
+ (id)allAlbumsInLibrary:(id)a0;
+ (id)allAlbumsInManagedObjectContext:(id)a0;
+ (id)allAlbumsRegisteredWithManagedObjectContext:(id)a0;
+ (id)allAssetsAlbumInLibrary:(id)a0;
+ (id)allFavoritesAlbumInLibrary:(id)a0;
+ (id)allHorizontalPanoramasAlbumInLibrary:(id)a0;
+ (id)allPanoramasAlbumInLibrary:(id)a0;
+ (id)allPhotoStreamAssetsAlbumInLibrary:(id)a0;
+ (id)allSyncedAlbumsInManagedObjectContext:(id)a0;
+ (id)allVerticalPanoramasAlbumInLibrary:(id)a0;
+ (id)allVideosAlbumInLibrary:(id)a0;
+ (id)childKeyForOrdering;
+ (id)eventsWithName:(id)a0 andImportSessionIdentifier:(id)a1 inManagedObjectContext:(id)a2;
+ (id)fetchAlbumsForAssetObjectID:(id)a0 libraryIdentifier:(long long)a1 managedObjectContext:(id)a2;
+ (id)fetchAlbumsWithUUIDs:(id)a0 propertiesToFetch:(id)a1 managedObjectContext:(id)a2;
+ (id)filesystemImportProgressAlbumInLibrary:(id)a0;
+ (id)iTunesLibraryAlbumInLibrary:(id)a0;
+ (id)includeUnpushedParentsForAlbums:(id)a0 limit:(unsigned long long)a1;
+ (id)insertAlbumWithKind:(int)a0 title:(id)a1 uuid:(id)a2 inManagedObjectContext:(id)a3;
+ (id)insertNewAlbumWithKind:(int)a0 title:(id)a1 intoLibrary:(id)a2;
+ (id)insertNewAlbumWithTitle:(id)a0 intoLibrary:(id)a1;
+ (id)insertNewLegacyFaceAlbumIntoLibrary:(id)a0;
+ (id)insertNewProjectAlbumWithTitle:(id)a0 documentType:(id)a1 intoLibrary:(id)a2;
+ (id)insertNewSyncedEventIntoLibrary:(id)a0;
+ (id)insertNewSyncedEventWithTitle:(id)a0 intoLibrary:(id)a1;
+ (id)isEligibleForSearchIndexingPredicateForLibraryIdentifier:(long long)a0;
+ (char)isFolder:(int)a0;
+ (char)isSmartAlbumForKind:(int)a0;
+ (char)isUserCreatedForKind:(int)a0;
+ (id)keyPathsForValuesAffectingKindValue;
+ (id)keyPathsForValuesAffectingName;
+ (id)localizedRecoveredTitle;
+ (id)otaRestoreProgressAlbumInLibrary:(id)a0;
+ (id)predicateForAlbumsSupportingCachedKeyAssets;
+ (id)predicateForAlbumsSupportingCustomKeyAsset;
+ (id)projectAlbumRootFolderInLibrary:(id)a0;
+ (id)relationshipKeyPathsToPrefetch;
+ (void)removeAllUserAlbumsAndFoldersInLibrary:(id)a0;
+ (void)removeInvalidAlbumsAndFoldersInManagedObjectContext:(id)a0;
+ (void)removeTrashedAlbumsAndFoldersForCloudResetInManagedObjectContext:(id)a0;
+ (void)resetAlbumStateForCloudInLibrary:(id)a0;
+ (id)rootFolderInLibrary:(id)a0;
+ (char)supportsCachedKeyAssetsWithAlbumKind:(int)a0;
+ (id)syncProgressAlbumInLibrary:(id)a0;
+ (id)trashBinAlbumInLibrary:(id)a0;
+ (id)unableToUploadAlbumInLibrary:(id)a0;
+ (void)updateAssetAssociativityInAlbums:(id)a0 photoLibrary:(id)a1;
+ (void)updateKeyAssetsInAlbums:(id)a0 photoLibrary:(id)a1;
+ (id)userLibraryAlbumInLibrary:(id)a0;

- (void)dealloc;
- (void).cxx_destruct;
- (unsigned long long)count;
- (char)canMoveToTrash;
- (void)awakeFromInsert;
- (void)didSave;
- (void)awakeFromFetch;
- (void)delete;
- (void)willSave;
- (void)willTurnIntoFault;
- (id)scopeIdentifier;
- (id)_prettyDescription;
- (void)batchFetchAssets:(id)a0;
- (char)canPerformEditOperation:(unsigned long long)a0;
- (void)reducePendingItemsCountBy:(unsigned long long)a0;
- (id)scopedIdentifier;
- (void)setUserQueryData:(id)a0;
- (id)predicateForKeyAssetsCandidates;
- (void)applyPropertiesFromAlbumChange:(id)a0;
- (void)_applyTrashedState:(short)a0 date:(char)a1 :(id)a2 cascade:(char)a3;
- (char)_checkLastModifiedDateIfNeeded;
- (id)_compactDebugDescription;
- (char)_isValidAlbumKindForAssetAssociativity;
- (char)_isValidChangeSourceForUpdate;
- (char)_isValidLibraryRoleForUpdate;
- (id)_kindDescription;
- (void)_processUpdateAlbumAssetAssociativityBasedOnTrashStateWithBlock:(id /* block */)a0;
- (void)_repairTitleIfEmpty;
- (void)_updateAlbumAssetAssociativityBasedOnTrashState;
- (void)_validateAndUpdateKeyAssetsIfNeeded;
- (void)applyTrashedState:(short)a0 cascade:(char)a1;
- (id)assetsByObjectIDAtIndexes:(id)a0;
- (id)childKeyForOrdering;
- (id)childManagedObject;
- (unsigned long long)countForAssetsOfKind:(short)a0;
- (id)cplAlbumChangeInPhotoLibrary:(id)a0 orderKeyManager:(id)a1;
- (id)cplFullRecord;
- (void)enumerateDerivedAlbums:(id /* block */)a0;
- (void)enumerateDerivedIndexMappers:(id /* block */)a0;
- (id)fetchKeyAssetCandidates:(id *)a0;
- (char)hasDerivedIndexMappers;
- (char)isCandidateForSearchIndexing;
- (char)isEligibleForSearchIndexing;
- (char)isProjectAlbumSupportingCloudUpload;
- (char)isSyncableChange;
- (id)listOfLastModifiedDateChangeProperties;
- (id)payloadForChangedKeys:(id)a0;
- (id)payloadID;
- (id)payloadIDForTombstone:(id)a0;
- (void)registerDerivedAlbum:(id)a0;
- (void)registerForChanges;
- (void)repairUuidAndTitleWithRecoveryReason:(const char *)a0;
- (id)searchIdentifier;
- (id)sortDescriptorsForKeyAssetsCandidates;
- (char)supportsAssetAssociativity;
- (char)supportsCloudUpload;
- (void)unregisterAllDerivedAlbums;
- (void)unregisterForChanges;
- (void)updateAlbumFolderRelation:(id)a0 orderKeyManager:(id)a1 inLibrary:(id)a2;
- (void)updateKeyAssetsIfNeeded;
- (char)validForPersistenceChangedForChangedKeys:(id)a0;

@end

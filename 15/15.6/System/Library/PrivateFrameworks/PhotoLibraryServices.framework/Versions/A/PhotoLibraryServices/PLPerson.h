@class PLShareParticipant, NSString, NSSet, PLDetectedFace, NSDictionary, PLDetectedFaceGroup;

@interface PLPerson : PLManagedObject <PLSyncablePerson, PLCloudDeletable, PLFileSystemMetadataPersistence, PLUserFeedbackSupporting, PLGraphEdgeReferenceRecipient> {
    short _deleteReason;
    char _shouldPersistMetadata;
    char _shouldRemoveMetadata;
}

@property (class, readonly, copy) NSString *cloudUUIDKeyForDeletion;

@property (readonly, nonatomic) char shouldIndexForSearch;
@property (nonatomic) int verifiedType;
@property (nonatomic) int cloudVerifiedType;
@property (retain, nonatomic) NSString *personUUID;
@property (retain, nonatomic) NSString *fullName;
@property (readonly, nonatomic) char userVerified;
@property (readonly, nonatomic) char graphVerified;
@property (readonly, nonatomic) char isTombstone;
@property (readonly, nonatomic) char keyFaceIsPicked;
@property (nonatomic) short detectionType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, retain, nonatomic) id localID;
@property (nonatomic) short cloudLocalState;
@property (readonly, nonatomic) NSSet *detectedTorsos;
@property (retain, nonatomic) PLDetectedFace *keyFace;
@property (nonatomic) int verifiedType;
@property (nonatomic) int cloudVerifiedType;
@property (nonatomic) double isMeConfidence;
@property (retain, nonatomic) NSString *personUUID;
@property (nonatomic) short detectionType;
@property (nonatomic) short cloudDetectionType;
@property (retain, nonatomic) NSString *fullName;
@property (retain, nonatomic) NSString *displayName;
@property (retain, nonatomic) NSSet *personReferences;
@property (retain, nonatomic) NSSet *detectedFaces;
@property (retain, nonatomic) NSSet *temporalDetectedFaces;
@property (readonly, nonatomic) NSSet *allDetectedFaces;
@property (nonatomic) short keyFacePickSource;
@property (retain, nonatomic) NSSet *rejectedFaces;
@property (retain, nonatomic) NSSet *rejectedFacesNeedingFaceCrops;
@property (retain, nonatomic) NSSet *clusterRejectedFaces;
@property (retain, nonatomic) NSSet *faceCrops;
@property (nonatomic) int type;
@property (nonatomic) unsigned int manualOrder;
@property (nonatomic) double mergeCandidateConfidence;
@property (retain, nonatomic) NSString *personUri;
@property (nonatomic) char inPersonNamingModel;
@property (readonly, nonatomic) int faceCount;
@property (nonatomic) short cloudLocalState;
@property (nonatomic) short cloudDeleteState;
@property (retain, nonatomic) PLDetectedFaceGroup *associatedFaceGroup;
@property (retain, nonatomic) NSDictionary *contactMatchingDictionary;
@property (nonatomic) short questionType;
@property (nonatomic) unsigned short genderType;
@property (nonatomic) unsigned short ageType;
@property (nonatomic) unsigned short suggestedForClientType;
@property (nonatomic) short assetSortOrder;
@property (retain, nonatomic) NSSet *userFeedbacks;
@property (retain, nonatomic) PLShareParticipant *shareParticipant;
@property (retain, nonatomic) NSString *mdID;
@property (retain, nonatomic) NSSet *mergeCandidates;
@property (retain, nonatomic) NSSet *mergeCandidatesWithConfidence;
@property (retain, nonatomic) NSSet *invalidMergeCandidates;
@property (retain, nonatomic) PLPerson *mergeTargetPerson;
@property (retain, nonatomic) NSSet *mergeSourcePersons;
@property (nonatomic) int effectiveVerifiedType;
@property (readonly, nonatomic) char isHiddenGraphPerson;
@property (readonly) long long cloudDeletionType;
@property (readonly, copy) NSString *cloudUUIDForDeletion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)entityName;
+ (id)fetchFinalMergeTargetPersonForPersonWithUUID:(id)a0 context:(id)a1 predicate:(id)a2;
+ (void)batchFetchAssociatedPersonByFaceGroupUUIDWithFaceGroupUUIDs:(id)a0 predicate:(id)a1 library:(id)a2 completion:(id /* block */)a3;
+ (void)batchFetchPersonUUIDsByAssetUUIDWithAssetUUIDs:(id)a0 predicate:(id)a1 includedDetectionTypes:(id)a2 inManagedObjectContext:(id)a3 completion:(id /* block */)a4;
+ (void)batchFetchPersonsByAssetUUIDWithAssetUUIDs:(id)a0 predicate:(id)a1 includedDetectionTypes:(id)a2 library:(id)a3 completion:(id /* block */)a4;
+ (void)createAssociatedPersonForFaceGroup:(id)a0;
+ (id)displayNameFromContact:(id)a0;
+ (id)fetchPersonCountByAssetUUIDForAssetUUIDs:(id)a0 predicate:(id)a1 includedDetectionTypes:(id)a2 library:(id)a3 error:(id *)a4;
+ (id)fullNameFromContact:(id)a0;
+ (id)insertIntoManagedObjectContext:(id)a0 withPersonUUID:(id)a1 fullName:(id)a2 verifiedType:(int)a3;
+ (id)personWithUUID:(id)a0 inManagedObjectContext:(id)a1;
+ (id)personsMatchingPredicate:(id)a0 fetchLimit:(unsigned long long)a1 sortDescriptors:(id)a2 relationshipKeyPathsForPrefetching:(id)a3 inManagedObjectContext:(id)a4;
+ (id)personsWithUUIDs:(id)a0 inManagedObjectContext:(id)a1;
+ (id)predicateForIncludedDetectionTypes:(id)a0;
+ (id)predicateForMePerson;
+ (id)predicateForPersonsNeedingFaceCropGenerationForFaceObjectID:(id)a0;
+ (id)predicateForVisibleKeyFace;
+ (id)predicateToExcludeTorsoOnlyPerson;
+ (id)_batchFetchPersonUUIDsByAssetUUIDWithAssetUUIDs:(id)a0 predicate:(id)a1 includedDetectionTypes:(id)a2 inManagedObjectContext:(id)a3 error:(id *)a4;
+ (char)_deleteObjectsWithFetchRequest:(id)a0 reason:(short)a1 moc:(id)a2 progress:(id)a3 error:(id *)a4;
+ (char)_detachFacesForPerson:(id)a0 reason:(short)a1 error:(id *)a2;
+ (id)_predicateForSupportedDetectionTypesForUpload;
+ (id)_predicateForSupportedVerifiedTypesForUpload;
+ (id)_predicateToBlockHiddenGraphTypesForUpload;
+ (void)_resetMediaAnalysisAfterPersonResetInLibraryURL:(id)a0 resetPersons:(char)a1 completion:(id /* block */)a2;
+ (void)_setPersonResetInProgress:(char)a0 context:(id)a1;
+ (id)_stringFromContact:(id)a0 preferGivenName:(char)a1;
+ (id)allPersonsInManagedObjectContext:(id)a0;
+ (long long)cloudDeletionTypeForTombstone:(id)a0;
+ (void)createAssociatedPersonForFaceGroup:(id)a0 inManagedObjectContext:(id)a1;
+ (id)createUnverifiedPersonInManagedObjectContext:(id)a0;
+ (void)enumerateAssetUUIDsForSearchIndexingWithDetectedFaceUUIDs:(id)a0 managedObjectContext:(id)a1 assetUUIDHandler:(id /* block */)a2;
+ (void)enumerateAssetUUIDsForSearchIndexingWithPersonUUID:(id)a0 managedObjectContext:(id)a1 libraryIdentifier:(long long)a2 assetUUIDHandler:(id /* block */)a3;
+ (id)fetchDuplicatePersonUUIDsInManagedObjectContext:(id)a0 error:(id *)a1;
+ (id)fetchMePersonInManagedObjectContext:(id)a0;
+ (id)insertIntoPhotoLibrary:(id)a0 withPersonUUID:(id)a1 fullName:(id)a2 verifiedType:(int)a3;
+ (id)isEligibleForSearchIndexingPredicate;
+ (id)listOfSyncedProperties;
+ (char)person:(id)a0 isBetterMergeTargetThanPerson:(id)a1;
+ (id)personsToPrefetchInManagedObjectContext:(id)a0;
+ (id)personsToUploadInManagedObjectContext:(id)a0 limit:(long long)a1;
+ (id)personsWithPersonUri:(id)a0 inManagedObjectContext:(id)a1;
+ (id)personsWithPersonUris:(id)a0 inManagedObjectContext:(id)a1;
+ (id)predicateForPersistence;
+ (id)resetAllInLibrary:(id)a0 completion:(id /* block */)a1;
+ (char)resetAllInLibrary:(id)a0 error:(id *)a1;
+ (void)resetCloudStateInPhotoLibrary:(id)a0;

- (void)didSave;
- (void)prepareForDeletion;
- (void)willSave;
- (id)scopeIdentifier;
- (id)pickOptimalStateForUserInitiatedMergeWithPersons:(id)a0 nominalTarget:(id)a1;
- (void)createUnverifiedPersonForRejectedFaceUUIDs:(id)a0 inManagedObjectContext:(id)a1;
- (char)dedupeGraphPersons:(id)a0 error:(id *)a1;
- (char)deletePersonWithReason:(short)a0;
- (void)disconnectFaceGroup;
- (id)faceGroupDescription;
- (char)isValidForPersistence;
- (void)mergePersons:(id)a0 withOptimalState:(id)a1;
- (id)mutableFaces;
- (id)mutableInvalidMergeCandidates;
- (id)mutableMergeCandidates;
- (id)mutableMergeCandidatesWithConfidence;
- (id)mutableRejectedFaces;
- (id)mutableTemporalFaces;
- (void)prepareForUserInitiatedMergeWithPersons:(id)a0;
- (void)rejectFaceIfPossible:(id)a0 shouldCreateFaceCrop:(char)a1;
- (id)scopedIdentifier;
- (void)setKeyFace:(id)a0 pickSource:(short)a1;
- (char)validateDetectionTypesForMergingWithPersons:(id)a0 error:(id *)a1;
- (char)_hideGraphPersonInsteadOfDelete;
- (void)_moveAllFacesToFinalMergeTarget;
- (id)cplPersonChange;
- (id)edgesIn;
- (id)syncDescription;
- (char)_allowSyncOfChangeWithKey:(id)a0;
- (void)_basicMergePersons:(id)a0;
- (void)_logMergeDetailsForPerson:(id)a0;
- (char)_personResetIsInProgress;
- (void)_removeSharedLibraryPeopleRulesForPerson;
- (void)_triggerPersonSyncUpdateWithLibraryServicesManager:(id)a0;
- (char)_updateGroupMembershipFromEdges:(id)a0 mergeTarget:(id)a1 error:(id *)a2;
- (void)_updateSharedLibraryPeopleRulesForTombstone;
- (char)_updateSocialGroupMembershipWithPersonsToMerge:(id)a0 mergeTarget:(id)a1;
- (void)applyCPLChangeForContactMatchingDictionary:(id)a0;
- (void)assignDetectionTypeFromFaces;
- (void)basicMergePersons:(id)a0;
- (id)cplFullRecord;
- (id)debugLogDescription;
- (id)edgesOut;
- (void)enumerateAssetSearchEntityPersonRelationsWithBlock:(id /* block */)a0;
- (void)enumeratePersonRelationsWithBlock:(id /* block */)a0;
- (id)finalMergeTargetPerson;
- (void)implementsPLGraphEdgeReferenceObjectRecipient;
- (char)isSyncableChange;
- (id)mutableFaceCrops;
- (id)mutableRejectedFacesNeedingFaceCrops;
- (id)payloadForChangedKeys:(id)a0;
- (id)payloadID;
- (id)payloadIDForTombstone:(id)a0;
- (void)persistMetadataToFileSystemWithPathManager:(id)a0;
- (id)pickKeyFaceOptimalStateForContactDedupeWithPersons:(id)a0;
- (void)removePersistedFileSystemDataWithPathManager:(id)a0;
- (void)resetAllFacesToDefault;
- (void)resetFacesProcessing;
- (id)reverseOrderedMergeTargetPersons;
- (void)setCPLSyncedMergeTarget:(id)a0;
- (void)setKeyFaceToPicked;
- (void)setMeConfidence:(double)a0;
- (char)supportsCloudUpload;
- (void)updateDetectionTypeIfNeeded;
- (char)validForPersistenceChangedForChangedKeys:(id)a0;

@end

@class NSStackView, GKTimeScopeButton, NSButton, GKLeaderboard, NSImageView, NSScrollView, UXSegmentedControl, GKLeaderboardScoreDataSource, NSLayoutConstraint, CAGradientLayer, GKLeaderboardEntry, GKLeaderboardMetadataView, NSString, GKNoContentView, NSView, NSCollectionView, NSTextField;

@interface GKLeaderboardScoreViewController : GKLoadingViewController <NSWindowDelegate, GKLeaderboardScoreDelegate, GKLeaderboardScoreActionDelegate, GameCenterUI.ScrollViewProvider, GKDaemonProxyDataUpdateDelegate>

@property NSCollectionView *collectionView;
@property NSView *releaseStateInfoBox;
@property NSImageView *releaseStateIcon;
@property (retain, nonatomic) NSTextField *releaseStateHeaderText;
@property (retain, nonatomic) NSTextField *releaseStateInfoText;
@property NSStackView *highlightView;
@property NSButton *scrollToTopButton;
@property UXSegmentedControl *playerScopeControl;
@property NSView *collectionContainer;
@property NSView *timeScopeContainer;
@property NSTextField *titleLabel;
@property NSLayoutConstraint *collectionContainerHeight;
@property NSView *collectionGradientView;
@property (retain, nonatomic) NSView *dimmingView;
@property (retain, nonatomic) NSImageView *gameIconImageView;
@property (retain, nonatomic) NSTextField *gameNameLabel;
@property (retain, nonatomic) GKTimeScopeButton *timeScopeButton;
@property (retain, nonatomic) GKLeaderboardScoreDataSource *dataSource;
@property (retain, nonatomic) GKLeaderboard *leaderboard;
@property (retain, nonatomic) GKLeaderboard *currentOccurrence;
@property (retain, nonatomic) GKLeaderboard *previousOccurrence;
@property (nonatomic) long long timeScope;
@property (nonatomic) long long playerScope;
@property (nonatomic) long long leaderboardOccurrence;
@property (retain, nonatomic) GKLeaderboardMetadataView *personalView;
@property (retain, nonatomic) GKLeaderboardMetadataView *socialView;
@property (retain, nonatomic) GKNoContentView *noContentView;
@property (retain, nonatomic) CAGradientLayer *collectionViewFadeGradient;
@property (retain, nonatomic) GKLeaderboardEntry *localPlayerEntry;
@property (retain, nonatomic) GKLeaderboardEntry *topPlayerEntry;
@property (retain, nonatomic) GKLeaderboardEntry *playerAboveEntry;
@property (retain, nonatomic) GKLeaderboardEntry *playerBelowEntry;
@property (nonatomic) long long totalEntries;
@property (nonatomic) char shouldAutoRefreshHighlights;
@property (nonatomic) double startTime;
@property (nonatomic) char shouldRefreshAgain;
@property (nonatomic) long long initialTimeScope;
@property (nonatomic) long long initialPlayerScope;
@property (nonatomic) char restrictToFriendsOnly;
@property (nonatomic) char isDeeplinked;
@property (retain, nonatomic) NSString *autoScrollToPlayerId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSScrollView *scrollView;

+ (char)restrictToFriendsOnly;
+ (void)setRestrictToFriendsOnly:(char)a0;

- (void)dealloc;
- (void).cxx_destruct;
- (char)hasData;
- (void)loadData;
- (void)viewDidLayout;
- (void)viewDidLoad;
- (struct CGSize { double x0; double x1; })windowWillResize:(id)a0 toSize:(struct CGSize { double x0; double x1; })a1;
- (void)updateContentSize;
- (char)isLoading;
- (void)viewWillAppear:(char)a0;
- (void)viewDidAppear:(char)a0;
- (void)viewWillDisappear:(char)a0;
- (void)clearSelection;
- (void)donePressed:(id)a0;
- (id)backButtonImage;
- (void)updateHighlights;
- (void)refreshContentsForDataType:(unsigned int)a0 userInfo:(id)a1;
- (void)setNeedsRefresh;
- (id)initWithGameRecord:(id)a0 leaderboard:(id)a1;
- (void)sendFriendInvitationViaMessagesTo:(id)a0 withPresentingViewController:(id)a1;
- (void)addLeaderboardHighlights;
- (void)addPlayerScopeControl;
- (id)attributedStringWithSymbol:(id)a0;
- (void)autoRefreshHighlightsPersonalView;
- (void)challengeWithScore:(id)a0;
- (void)collectionViewDidScroll;
- (void)configureCloseButton;
- (void)dataUpdated:(char)a0 withError:(id)a1;
- (void)didEnterLoadingState;
- (void)didEnterRefreshingState;
- (void)didExitRefreshingState;
- (void)didExpandOrContractFriendSuggestions;
- (void)didLoadAdditionalScoresWithUpdatedTotalEntries:(unsigned long long)a0;
- (void)didLoadScoresWithLocalPlayerEntry:(id)a0 topPlayer:(id)a1 playerAbove:(id)a2 playerBelow:(id)a3 totalEntries:(long long)a4;
- (id)formattedNumber:(id)a0;
- (void)hideNoContentPlaceholder;
- (long long)initialTimeScope;
- (void)loadLeaderboardForOccurrence:(long long)a0 handler:(id /* block */)a1;
- (void)playerScopeChanged:(id)a0;
- (void)presentChallengeFromScore:(id)a0;
- (void)removeVisualEffectInView:(id)a0;
- (void)scrollToTopPressed:(id)a0;
- (void)setInitialTimeScope:(long long)a0;
- (void)setPlayerScope:(long long)a0 restrictToFriendsOnly:(char)a1;
- (void)setupFadeGradient;
- (void)setupNoContentView:(id)a0 withError:(id)a1;
- (void)setupReleaseStateInfo;
- (void)shareScore:(id)a0 fromLeaderboard:(id)a1 sendingView:(id)a2 relativeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3;
- (void)shareScoreFromMenuItem:(id)a0;
- (void)shareWithScore:(id)a0 fromView:(id)a1;
- (void)showContextMenuWith:(id)a0 andEvent:(id)a1;
- (void)showNoContentPlaceholderForError:(id)a0;
- (id)timeRemainingFromDate:(id)a0 toDate:(id)a1;
- (void)timeScopePressed:(id)a0;
- (char)updateHighlightsPersonalView;

@end

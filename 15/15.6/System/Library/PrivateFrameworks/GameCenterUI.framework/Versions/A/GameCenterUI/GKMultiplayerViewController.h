@class NSView, NSString, GKGame, GKDashboardMultiplayerPickerViewController, _TtC12GameCenterUI23GKMultiplayerFooterView, NSURL, GKMultiplayerDataSource, NSMutableSet, GKMatchRequest;
@protocol GKDashboardNearbyBrowserDelegate;

@interface GKMultiplayerViewController : GKCollectionViewController <GKDashboardMultiplayerPickerDelegate, GKMultiplayerDataSourceDelegate, NSUICollectionViewDelegate>

@property (retain, nonatomic) NSView *buttonHeaderView;
@property (retain, nonatomic) GKDashboardMultiplayerPickerViewController *playerPickerViewController;
@property (nonatomic) long long invitationType;
@property (nonatomic) unsigned long long messagesInviteStatus;
@property (readonly, copy, nonatomic) GKMatchRequest *matchRequest;
@property (readonly, copy, nonatomic) GKMatchRequest *originalMatchRequest;
@property (copy, nonatomic) NSString *defaultInvitationMessage;
@property (nonatomic) char showCancelButton;
@property (nonatomic) char showNavigationBar;
@property (retain, nonatomic) GKGame *game;
@property (nonatomic) char didAcceptGameInvite;
@property (weak, nonatomic) id<GKDashboardNearbyBrowserDelegate> nearbyDelegate;
@property (retain, nonatomic) NSURL *shareURL;
@property (nonatomic) char didStartForcedAutomatch;
@property (nonatomic) long long matchmakingMode;
@property (retain, nonatomic) _TtC12GameCenterUI23GKMultiplayerFooterView *footerView;
@property (nonatomic) char canStartWithMinimumPlayers;
@property (nonatomic) char canStartGroupActivities;
@property (retain, nonatomic) NSMutableSet *participantsInvitedByLocalPlayer;
@property (retain, nonatomic) GKMultiplayerDataSource *multiplayerDataSource;
@property (nonatomic) char addButtonEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)cancel;
- (void)layoutSubviews;
- (void)viewDidLayout;
- (void)viewDidLoad;
- (char)isLoading;
- (void)viewWillAppear:(char)a0;
- (void)viewDidAppear:(char)a0;
- (void)viewDidDisappear:(char)a0;
- (id)pageId;
- (void)removePlayer:(id)a0;
- (void)updateTitle;
- (void)collectionView:(id)a0 didSelectItemAtIndexPath:(id)a1;
- (char)isCanceling;
- (void)configureDataSource;
- (id)preferredFocusEnvironments;
- (void)collectionViewDidScroll:(id)a0;
- (void)playNow;
- (void)refreshHeaderAndFooterMaterials;
- (void)addAutomatchPlayer;
- (char)allowAutoMatch;
- (char)allowPlayerCountSelection;
- (long long)automatchParticipantStatus;
- (char)canStartForcedAutomatch;
- (void)cancelButtonPressed;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })collectionViewContentInset;
- (void)configureAutoBounce;
- (void)configureDataSourceWithCompletionHandler:(id /* block */)a0;
- (void)configureMatchRequest;
- (void)determineInvitationType;
- (void)didClickCancelForServiceUnavailableAlert;
- (void)didInviteContactPlayers;
- (void)didPickPlayers:(id)a0 messageGroups:(id)a1 source:(unsigned long long)a2 completion:(id /* block */)a3;
- (void)didTapInviteOnCell:(id)a0;
- (void)didTapRemoveParticipant:(id)a0;
- (void)didUpdateAutoMatchPlayerCount;
- (void)didUpdateParticipants;
- (void)dismissPickerViewController;
- (void)handleNewParticipantCount:(long long)a0;
- (void)handleServiceUnavailable:(id)a0;
- (id)initWithMatchRequest:(id)a0;
- (void)inviteContactPlayers:(id)a0 source:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)inviteFriendsButtonPressed;
- (void)invitePlayers:(id)a0;
- (char)isInSetupMode;
- (char)isParticipantInvitedByLocalPlayer:(id)a0;
- (void)loadShareURLWithContactPlayers:(id)a0 completion:(id /* block */)a1;
- (void)localPlayerAcceptedGameInvite:(id)a0;
- (id)makeButtonHeaderView;
- (id)makeDoubleHeaderView;
- (long long)maxAvailablePlayers;
- (long long)multiplayerCellLayoutMode;
- (void)multiplayerPicker:(id)a0 didPickPlayers:(id)a1 messageGroups:(id)a2 customMessage:(id)a3;
- (void)multiplayerPickerDidCancel:(id)a0;
- (void)performActionsForButtonCancelCurrentMatching;
- (void)performActionsForButtonStartGame;
- (void)playersToInvite:(id)a0;
- (void)preparePlayerPicker;
- (void)presentPlayerPicker;
- (void)removeAutomatchPlayer;
- (void)removedPlayer:(id)a0;
- (void)sendInvitesToContactPlayers:(id)a0 legacyPlayers:(id)a1 source:(unsigned long long)a2 completion:(id /* block */)a3;
- (void)sendInvitesToPlayersInOriginalMatchRequest;
- (void)setInvitesFailedWithError:(id)a0;
- (void)setShareInvitees;
- (void)setViewNeedsLayout;
- (void)setupCancelButton;
- (char)setupInvitesForSource:(unsigned long long)a0 completion:(id /* block */)a1;
- (void)startGameButtonPressed;
- (void)updateCollectionViewContentInset;
- (void)updateDataSourceInvitationEnabled;
- (void)updateFooterButtonStates;
- (void)updateStartGameButtonTitle;
- (id)viewControllerLayout;
- (void)willPresentPlayerPicker:(id)a0;

@end

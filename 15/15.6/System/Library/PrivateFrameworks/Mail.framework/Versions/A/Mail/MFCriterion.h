@class MFMailbox, NSString, NSArray, CSSuggestion;

@interface MFCriterion : NSObject <NSCopying> {
    NSString *_criterionIdentifier;
    long long _criterionType;
    NSArray *_criteria;
}

@property (class, readonly, nonatomic) NSString *spotlightScopeAttribute;

@property (readonly, nonatomic) MFCriterion *criterionForSQL;
@property (readonly, nonatomic) MFCriterion *criterionForSQLIgnoringGmail;
@property (readonly, nonatomic) MFCriterion *criterionForSpotlight;
@property (readonly, nonatomic) unsigned long long bestBaseTable;
@property (readonly, nonatomic) char isExpressibleInTigerSchema;
@property (readonly, nonatomic) char hasNumberCriterion;
@property (readonly, nonatomic) MFMailbox *targetSmartMailbox;
@property (readonly, copy, nonatomic) NSString *uniqueId;
@property int specialMailboxType;
@property (copy) NSString *name;
@property (nonatomic) long long criterionType;
@property (copy, nonatomic) NSString *criterionIdentifier;
@property (copy) NSString *expression;
@property long long qualifier;
@property (copy, nonatomic) NSString *searchString;
@property long long dateUnits;
@property char dateIsRelative;
@property char dateExpressionIsNow;
@property (copy, nonatomic) NSArray *criteria;
@property char allCriteriaMustBeSatisfied;
@property unsigned long long knownLimit;
@property (readonly, nonatomic) MFCriterion *simplifiedCriterion;
@property (readonly, nonatomic) MFCriterion *compoundCriterionBySplittingExpression;
@property (readonly, nonatomic) MFCriterion *reducedMailboxCriterion;
@property (readonly, nonatomic) char isSpotlightCriterion;
@property (readonly, nonatomic) char containsVIPSendersCriterion;
@property (readonly, nonatomic) char containsJunkMailboxCriterion;
@property (readonly, nonatomic) char containsMessageIsPriorityCriterion;
@property (readonly, nonatomic) char hasExpression;
@property (retain, nonatomic) CSSuggestion *updatedSuggestion;
@property (retain, nonatomic) NSString *userTypedString;

+ (id)compoundCriterionWithCriteria:(id)a0;
+ (char)criteria:(id)a0 areEqualToCriteria:(id)a1;
+ (id)criteriaFromDefaultsArray:(id)a0;
+ (id)criteriaFromDefaultsArray:(id)a0 removingRecognizedKeys:(char)a1;
+ (long long)criterionTypeForString:(id)a0;
+ (id)defaultsArrayFromCriteria:(id)a0;
+ (char)logCriterionConversionErrors;
+ (void)logSpotlightStatus;
+ (id)stringForCriterionType:(long long)a0;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)debugDescription;
- (id)description;
- (id)init;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)a0;
- (id)dictionaryRepresentation;
- (char)contains:(id /* block */)a0;
- (id)escapedString:(id)a0;
- (id)ef_publicDescription;
- (id)SQLExpressionWithTables:(unsigned long long *)a0 baseTable:(unsigned long long)a1;
- (id)SQLExpressionWithContext:(struct { unsigned long long x0; unsigned long long x1; char x2; char x3; } *)a0 depth:(unsigned long long)a1 enclosingSmartMailboxes:(id)a2;
- (id)_comparisonOperatorForQualifier:(long long)a0;
- (char)_containsVIPSendersCriterionWithInFlightURLs:(id)a0;
- (id)_descriptionWithDepth:(unsigned long long)a0 includePII:(char)a1;
- (char)_isCompoundCriterionSpotlightCriterion;
- (id)_qualifierString;
- (id)_searchTermForExpression:(id)a0 withQualifer:(long long)a1 exactMatch:(char)a2;
- (void)_setCriterionIdentifier:(id)a0;
- (id)_simplifyOnce;
- (id)_spotlightDateQueryStringForAttribute:(id)a0;
- (id)_spotlightQueryStringForAccountCriterion:(id)a0;
- (id)_spotlightQueryStringForAnyAttachmentCriterion;
- (id)_spotlightQueryStringForAnyRecipientCriterion;
- (id)_spotlightQueryStringForAttachmentTypeCriterion;
- (id)_spotlightQueryStringForBodyCriterion;
- (id)_spotlightQueryStringForCompoundCriterionWithInFlightURLs:(id)a0 searchStrings:(id)a1;
- (id)_spotlightQueryStringForContainsAttachmentsCriterion;
- (id)_spotlightQueryStringForFlagCriterion;
- (id)_spotlightQueryStringForFlaggedStatusCriterion;
- (id)_spotlightQueryStringForGmailLabelCriterion;
- (id)_spotlightQueryStringForGroupOrVIPSendersCriterion;
- (id)_spotlightQueryStringForHeaderCriterion;
- (id)_spotlightQueryStringForInASpecialMailboxCriterionWithQualifier:(long long)a0 inFlightURLs:(id)a1;
- (id)_spotlightQueryStringForMailboxCriterion:(id)a0;
- (id)_spotlightQueryStringForMessageID;
- (id)_spotlightQueryStringForNotInAJunkOrTrashMailboxCriterion;
- (id)_spotlightQueryStringForPriorityCriterion;
- (id)_spotlightQueryStringForSize;
- (id)_spotlightQueryStringWithInFlightURLs:(id)a0 searchStrings:(id)a1;
- (id)_spotlightStringForHeaderQueryString:(id)a0 withSpotlightAttribute:(id)a1;
- (char)containsDisplayDateCriterion;
- (char)containsLoadSenderBucketDataCriterion;
- (char)containsReadLaterCriterion;
- (char)containsSendLaterDateCriterion;
- (id)convertToGmailLabelCriterionIfNeeded;
- (id)criterionByMergingSpotlightCriteria;
- (id)criterionExpressionForEqualRelativeDates:(struct { unsigned long long x0; unsigned long long x1; char x2; char x3; } *)a0 depth:(unsigned long long)a1 enclosingSmartMailboxes:(id)a2;
- (id)criterionForSearchWithExpandedSmartMailboxes:(id)a0 forSpotlight:(char)a1 convertingGmailCriteria:(char)a2;
- (id)criterionValueForNotEqualRelativeDates:(long long *)a0;
- (id)dictionaryRepresentationIncludePII:(char)a0;
- (id)fixOnceWithExpandedSmartMailboxes:(id)a0 forSpotlight:(char)a1;
- (id)initWithCriterion:(id)a0 expression:(id)a1;
- (id)initWithDictionary:(id)a0 andRemoveRecognizedKeysIfMutable:(char)a1;
- (char)isEqualToCriterion:(id)a0;
- (char)isValid:(id *)a0 options:(unsigned int)a1;
- (long long)ruleQualifierForString:(id)a0;
- (id)spotlightQueryExpression;
- (id)stringForRuleQualifier:(long long)a0;

@end

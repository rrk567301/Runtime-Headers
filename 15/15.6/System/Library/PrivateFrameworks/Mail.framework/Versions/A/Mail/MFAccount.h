@class ECAuthScheme, NSString, NSImage, NSArray, ACAccount, NSDate, ECAccount;

@interface MFAccount : NSObject <MCAccount, EDAccount, EFPubliclyDescribable>

@property (class, readonly, copy) NSString *accountTypeString;

@property (retain) NSDate *lastConnectionValidationTime;
@property (retain) ACAccount *systemAccount;
@property (readonly) ECAccount *baseAccount;
@property (readonly, copy) NSString *parentAccountIdentifier;
@property (readonly, copy) NSString *accountTypeIdentifier;
@property (readonly) char isAppleAccount;
@property (readonly) char isYahooAccount;
@property (readonly) char isGmailAccount;
@property (copy) NSString *storedDisplayName;
@property (readonly, copy) NSString *offlineDisplayName;
@property (copy) NSString *username;
@property (readonly) NSImage *squareIcon;
@property (readonly, nonatomic) long long defaultPortNumber;
@property (readonly, nonatomic) long long defaultSecurePortNumber;
@property (nonatomic) char isEnabled;
@property char isOffline;
@property char isWillingToGoOnline;
@property char primitiveIsOffline;
@property char primitiveIsWillingToGoOnline;
@property (readonly, nonatomic) char canGoOffline;
@property (nonatomic) char autosynchronizingEnabled;
@property (readonly) char usesParentAuthentication;
@property (readonly) char hasPasswordCredential;
@property (readonly, copy) NSString *accountTypeString;
@property (readonly, copy, nonatomic) NSString *saslProfileName;
@property char configureDynamically;
@property char allowInsecureAuthentication;
@property (copy) NSString *canonicalEmailAddress;
@property long long portNumber;
@property (readonly, copy, nonatomic) NSArray *standardPorts;
@property (readonly, copy, nonatomic) NSArray *standardSSLPorts;
@property long long securityLayerType;
@property (copy) NSString *authenticationScheme;
@property (retain) ECAuthScheme *preferredAuthScheme;
@property (copy) NSString *password;
@property (readonly, copy) NSString *applePersonID;
@property (readonly, copy) NSString *appleAuthenticationToken;
@property (readonly, copy) NSString *machineID;
@property (readonly, copy) NSString *oneTimePassword;
@property (readonly, copy) NSString *clientInfo;
@property (readonly, copy) NSString *base64EncodedAppleAuthenticationToken2;
@property (readonly, copy) NSString *oauthToken;
@property (readonly, copy, nonatomic) NSDate *expiryDate;
@property (readonly, nonatomic) char requiresAuthentication;
@property char shouldUseAuthentication;
@property char usesSSL;
@property (copy) NSString *externalHostname;
@property (readonly, copy) NSString *hostname;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *identifier;
@property (readonly, copy) NSString *altDSID;
@property (readonly, copy, nonatomic) NSString *statisticsKind;
@property (readonly) char primaryiCloudAccount;
@property (readonly) char isActive;
@property (copy) NSString *displayName;
@property (readonly, copy) NSArray *emailAddressStrings;
@property (readonly, copy, nonatomic) NSString *ef_publicDescription;
@property (readonly, copy, nonatomic) NSString *ef_shortPublicDescription;

+ (id)sharedAccountStore;
+ (id)standardPorts;
+ (id)standardSSLPorts;
+ (char)allObjectsInArrayAreOffline:(id)a0;
+ (char)defaultsToSSL;
+ (id)genericAccountLargeImage;
+ (char)haveAccountsBeenConfigured;
+ (id)keyPathsForValuesAffectingOfflineDisplayName;
+ (void)resetConfigureDynamically;
+ (void)saveAccountInfoToDefaults;
+ (void)saveAccounts:(id)a0;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)init;
- (char)isEqual:(id)a0;
- (void).cxx_destruct;
- (void)save;
- (id)accountName;
- (id)serverName;
- (void)setServerName:(id)a0;
- (id)accountPropertyForKey:(id)a0;
- (unsigned int)accountType;
- (void)setAccountName:(id)a0;
- (void)setTLSIdentity:(struct __SecIdentity { } *)a0;
- (id)appleIDSession;
- (void)setHostname:(id)a0;
- (id)loginName;
- (void)setLoginName:(id)a0;
- (id)initWithSystemAccount:(id)a0;
- (void)renewCredentialsWithOptions:(id)a0 completionHandler:(id /* block */)a1;
- (char)canAuthenticateWithCurrentCredentials;
- (void)savePersistentAccount;
- (id)smtpIdentifier;
- (id)accountPassword;
- (struct __SecIdentity { } *)copyTLSIdentity;
- (id)nameForMailbox:(id)a0;
- (id)_anisetteData;
- (void)_discoverConnectionPropertiesWithCompletionHandler:(id /* block */)a0;
- (char)_matchesDiscoveredSystemAccount:(id)a0 fromEmailAddress:(id)a1;
- (char)_matchesEmailAddress:(id)a0;
- (char)_parentSystemAccountDidUpdateProperties:(id)a0 changedSystemAccount:(char *)a1;
- (void)_queueAccountInfoDidChange;
- (void)_setPortNumber:(long long)a0 releasingConnections:(char)a1;
- (void)_setSecurityLayerType:(long long)a0 releasingConnections:(char)a1;
- (void)_setUsesSSL:(char)a0 releasingConnections:(char)a1;
- (char)_systemAccountChangedHostname:(char)a0 portNumber:(char)a1 usesSSL:(char)a2;
- (char)_systemAccountDidUpdateProperties:(id)a0 fromPropertyDiscovery:(char)a1;
- (void)accountInfoDidChange;
- (id)appleID2AuthDataWithHeaders:(id)a0;
- (void)appleID2AuthWithCompletion:(id /* block */)a0;
- (id)authenticatedConnection;
- (char)canAuthenticateWithScheme:(id)a0;
- (char)connectAndAuthenticate:(id)a0;
- (unsigned int)customAuthentication;
- (void)discoverConnectionProperties;
- (char)discoverConnectionPropertiesAndWait;
- (void)displayCredentialPromptInWindow:(id)a0 completion:(id /* block */)a1;
- (void)invalidateAllStores;
- (id)localizedRecoverySuggestionWithServerError:(id)a0 genericDescription:(id)a1;
- (id)newConnectedConnectionDiscoveringBestSettings:(char)a0 withConnectTimeout:(double)a1 readWriteTimeout:(double)a2;
- (char)refreshAccountProperties;
- (char)refreshParentAccountProperties;
- (void)releaseAllConnections;
- (void)respondToHostBecomingReachable;
- (void)setAccountPassword:(id)a0;
- (void)setCustomAuthentication:(unsigned int)a0;
- (void)updateFromSuccessfulConnectionPortNumber:(long long)a0 securityLayerType:(long long)a1;
- (void)validateConnections;
- (void)validateConnectionsIfNeeded;

@end

@class MCMessageDecoder, EMCoreAnalyticsCollector, EFLazyCache, NSMutableArray, NSString, NSMutableSet, EDPersistenceDatabase, NSTimer, NSArray, NSMutableDictionary, MFConversationCalculator, EDConversationPersistence, MFMessageChangeManager_macOS, NSObject, NSSet, EDWebContentParser, NSOperationQueue, EDPersistence, MFMailbox, NSMapTable, NSHashTable;
@protocol OS_os_log;

@interface MFLibrary : NSObject <EDMessageChangeHookResponder, EDRemindMeNotificationControllerObserver, EDCategoryChangeHookResponder, MCActivityTarget> {
    _Atomic BOOL _libraryInitialized;
    id _libraryLock;
    NSMapTable *_mailboxRowIDToURLCache;
    NSMapTable *_mailboxURLToRowIDCache;
    MFMailbox *_currentMailbox;
    id _commitTimerLock;
    NSTimer *_commitTimer;
    NSMutableSet *_messagesToCommit;
    NSMutableDictionary *_lastViewedDateForMessageToCommit;
    id _updateEmlxLock;
    NSMutableSet *_messagesUpdatingEmlx;
    NSMutableSet *_messagesToUpdateEmlx;
    NSMutableDictionary *_mailboxDataDirectoryCache;
    NSArray *_messageLibraryIDsToUpdateEmlx;
    char _restoredFromBackingStoreUpdateJournal;
    char _updateEmlxInProgress;
    char _logSQLitePerformance;
    char _logSQLiteBlockPerformance;
    char _logLibraryMainThreadAccess;
    char _logBackingStoreJournalUpdates;
    char _logSearchCriterion;
    char _libraryIsImporting;
    unsigned long long _runningIndexOfCurrentMessage;
    unsigned long long _totalNumberOfMessages;
    NSMutableSet *_onlineAccounts;
    char _didTagVersion;
    NSMutableDictionary *_importAddressRowids;
    NSMutableDictionary *_importSubjectRowids;
    NSMutableDictionary *_importGlobalMessageIDs;
    NSMutableDictionary *_importMailboxRowids;
    NSOperationQueue *_writeQueue;
    NSOperationQueue *_messageNotificationSerializationQueue;
    NSHashTable *_registeredStores;
    id _activeMailboxesCacheLock;
    char _activeAccountFilterOff;
    NSSet *_activeMailboxesCache;
    NSSet *_oldActiveMailboxesCache;
    char _activeMailboxesCacheIsInvalid;
    struct EFAtomicObject { _Atomic long long cfObject; } _activeMailboxesCacheDescription;
    id _activeMailboxesClauseLock;
    NSString *_activeMailboxesClause;
    id _databaseUUIDStringLock;
    NSString *_databaseUUIDString;
    id _myAddressIDsLock;
    NSString *_myAddressIDsString;
    NSSet *_myEmailAddresses;
    EDWebContentParser *_remoteContentParser;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _remoteContentParserLock;
    EMCoreAnalyticsCollector *_analyticsCollector;
}

@property (class, readonly, nonatomic) NSObject<OS_os_log> *spotlightLog;
@property (class, readonly, nonatomic) NSObject<OS_os_log> *log;
@property (class, readonly, nonatomic) MFLibrary *defaultLibrary;
@property (class, readonly, nonatomic) unsigned long long incrementalLoadingMaximumChunkSize;
@property (class, readonly, getter=isInitialized) char initialized;

@property (readonly, nonatomic) NSMutableArray *mostRecentSpotlightQueries;
@property (retain, nonatomic) EFLazyCache *selectClauseCache;
@property (retain, nonatomic) MCMessageDecoder *decoder;
@property (readonly, nonatomic) EDPersistence *persistence;
@property (readonly, nonatomic) EDPersistenceDatabase *libraryDatabase;
@property (readonly, nonatomic) MFMessageChangeManager_macOS *messageChangeManager;
@property (readonly, nonatomic) EDConversationPersistence *conversationPersistence;
@property (readonly, nonatomic) MFConversationCalculator *conversationCalculator;
@property (readonly, nonatomic) EDWebContentParser *remoteContentParser;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *displayName;

+ (void)initialize;
+ (long long)threadPriority;
+ (id)signpostLog;
+ (id)propertyMapper;
+ (long long)_libraryStatusCanWrite:(char)a0 library:(id *)a1;
+ (char)_fileExists;
+ (unsigned long long)cleanOldDatabases;
+ (id)createDefaultLibrary;
+ (long long)libraryStatusAsReader:(id *)a0;
+ (long long)libraryStatusAsWriter:(id *)a0;
+ (unsigned int)loadOptionsForCriterion:(id)a0;
+ (void)loadSearchSettings;
+ (void)test_resetDefaultLibrary;

- (id)init;
- (void).cxx_destruct;
- (void)commitSynchronously;
- (void)dispose;
- (char)isInitialized;
- (unsigned long long)signpostID;
- (id)writeQueue;
- (char)shouldCancel;
- (void)setInitialized:(char)a0;
- (id)messageDataForMessage:(id)a0;
- (void)removeMessages:(id)a0;
- (void)_conversationFlagsChanged:(id)a0;
- (void)controller:(id)a0 messageTimerFired:(id)a1;
- (void)persistenceDidChangeCategorizationForMessages:(id)a0 userInitiated:(char)a1 generationWindow:(id)a2;
- (void)persistenceDidChangeReadLaterDate:(id)a0 messages:(id)a1 changeIsRemote:(char)a2 generationWindow:(id)a3;
- (void)persistenceDidDeleteMessages:(id)a0 generationWindow:(id)a1;
- (void)persistenceDidUpdateDisplayDateForMessages:(id)a0 changeIsRemote:(char)a1 generation:(long long)a2;
- (void)test_tearDown;
- (id)EWSFolderIdForMailbox:(id)a0;
- (id)EWSFolderIdsByURLForMailboxes:(id)a0;
- (id)EWSSyncStateForMailbox:(id)a0;
- (char)_importMailbox:(id)a0;
- (void)_processMessageData:(id)a0 forMessage:(id)a1;
- (id)_spotlightCallbackDispatchQueue;
- (void)_updateMessageFilesInBackground;
- (id)attachmentsDirectoryForMessage:(id)a0;
- (void)loadDatabaseUUIDStringIfNeeded:(id)a0;
- (void)markMessageAsViewed:(id)a0 viewedDate:(id)a1;
- (id)messagesWithLibraryIDs:(id)a0 options:(unsigned int)a1;
- (void)queueMessagesAddedNotification:(id)a0;
- (void)backfillDateLastViewedAttribute;
- (void)commitFlagsForMessage:(id)a0 oldFlags:(long long)a1;
- (void)compactMailbox:(id)a0;
- (char)imap_mailboxHasInconsistencies:(id)a0;
- (id)messagesWhere:(id)a0 sortedBy:(id)a1 options:(unsigned int)a2;
- (char)rebuildMailbox:(id)a0;
- (char)removeBackingStoreUpdateJournal;
- (char)updateBackingStoreUpdateJournal;
- (char)_EWSFolderExistsForMailbox:(id)a0 errorString:(id)a1;
- (id)_EWSProperty:(char *)a0 forMailbox:(id)a1 errorString:(id)a2;
- (id)_activeMailboxesClauseDescription;
- (void)_addEWSProperty:(char *)a0 value:(id)a1 forMailbox:(id)a2 errorString:(id)a3;
- (long long)_addMessageToCountContext:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a0 statement:(id)a1;
- (void)_addMessagesNeedingEmlxUpdate:(id)a0;
- (id)_attachmentsDirectoryForMessageDatabaseID:(id)a0 mailbox:(id)a1;
- (id)_backingStoreJournalDirectory;
- (id)_backingStoreJournalFile;
- (id)_bodyDataAtPath:(id)a0 headerData:(id *)a1;
- (void)_commitFlagsForMessage:(id)a0 oldFlags:(id)a1;
- (void)_commitMessagesInBackground:(id)a0;
- (id)_copyActiveMailboxesCache;
- (id)_coreSpotlightIndexQueue;
- (id)_dataPathForMessage:(id)a0 type:(long long)a1;
- (id)_dataPathForMessageWithLibraryID:(long long)a0 mailboxID:(long long)a1 type:(long long)a2;
- (id)_dataPathForMessageWithLibraryID:(long long)a0 mailboxID:(long long)a1 withFilename:(id)a2;
- (void)_deleteMailboxFromCoreSpotlight:(id)a0 databaseID:(long long)a1;
- (void)_didCommit:(struct sqlite3 { } *)a0;
- (void)_discardMailboxCache;
- (void)_findOneTimeCodesFromData:(id)a0 withHTMLString:(id *)a1 forMessage:(id)a2 charsetName:(id)a3;
- (void)_getActiveAccountURLs:(id)a0 andActiveMailboxURLs:(id)a1;
- (id)_getHTMLBody:(id)a0 forMessage:(id)a1;
- (void)_handleMessageRowWithContext:(id)a0 statement:(id)a1 uniquer:(id)a2 row:(id)a3;
- (unsigned long long)_imap_countForQuery:(id)a0 bindings:(id)a1 connection:(id)a2;
- (char)_imap_hasLocalActionsForAccountURL:(id)a0 connection:(id)a1;
- (id)_imap_nextBatchForUIDs:(id)a0 limit:(unsigned long long)a1 isContiguous:(char *)a2;
- (id)_imap_uidsParameterForUIDs:(id)a0 isContiguous:(char)a1;
- (char)_importMessageBatch:(id)a0 fromMailbox:(id)a1 store:(id)a2 dataDirectory:(id)a3 seenRemoteIDs:(id)a4;
- (void)_invalidateDirectoryForMailboxes:(id)a0;
- (char)_isActiveMailboxID:(long long)a0;
- (void)_mailAccountsDidChange:(id)a0;
- (id)_mailboxForMailboxID:(long long)a0 forceCreation:(char)a1;
- (id)_mailboxIDsStringForMailboxes:(id)a0;
- (void)_mailboxWasRenamed:(id)a0;
- (void)_mailboxWillBeInvalidated:(id)a0;
- (void)_mergeRestoreMessageLibraryIDsToUpdate:(id)a0;
- (id)_messageDataAtPath:(id)a0;
- (id)_messageForStatement:(id)a0 loadOptions:(unsigned int)a1 uniquer:(id)a2;
- (id)_messageForStatement:(id)a0 loadOptions:(unsigned int)a1 uniquer:(id)a2 row:(id)a3;
- (id)_messageWithLibraryID:(long long)a0 options:(unsigned int)a1 uniquer:(id)a2;
- (id)_messagesDirectoryPathsFromDataPath:(id)a0;
- (id)_queryForCountCriterion:(id)a0 supressingDuplicates:(char)a1;
- (id)_queryForMailbox:(id)a0 where:(id)a1 sortedBy:(id)a2 ascending:(char)a3 options:(unsigned int)a4;
- (void)_queueMessagesChangedNotificationForMessages:(id)a0 flags:(id)a1 oldFlagsByMessage:(id)a2 updateEmlx:(char)a3;
- (void)_rebuildActiveMailboxesCache;
- (void)_rebuildActiveMailboxesCacheIfNecessary;
- (id)_remoteStoreForMessage:(id)a0;
- (void)_removeGmailLabelsFromMessages:(id)a0 libraryIDs:(id)a1 labels:(id)a2;
- (void)_runPostMigrationUpgradeStep:(Class)a0 connection:(id)a1;
- (id)_selectClauseForOptions:(unsigned int)a0;
- (void)_sendMessagesToTargetNow:(id)a0;
- (void)_setCommitTimer:(id)a0;
- (void)_setCurrentMailbox:(id)a0;
- (void)_setDatabaseUUIDString:(id)a0;
- (void)_setStoreForMessage:(id)a0 knownStores:(id)a1;
- (void)_storeRemoteContentLinksFromData:(id)a0 withHTMLString:(id)a1 forMessage:(id)a2 charsetName:(id)a3;
- (void)_synchronouslyUpdateMessageFiles;
- (void)_updateDateLastViewed:(int)a0 forLibraryID:(long long)a1;
- (void)_upgradeMessageDirectoriesSynchronously;
- (id)_versionedMessagesDirectoryPathsForMailboxPath:(id)a0 uuidDirectoryPaths:(id *)a1;
- (char)_writeAttachmentWithDecodedData:(id)a0 forMessage:(id)a1 mimePart:(id)a2 headers:(id)a3;
- (id)accountForMessage:(id)a0;
- (id)activeMailboxesClauseRebuildIfNecessary;
- (char)addCalendarEvent:(id)a0 toMessage:(id)a1;
- (void)addGmailLabels:(id)a0 removeGmailLabels:(id)a1 forMessages:(id)a2;
- (void)addGmailLabelsToEmlx;
- (void)addGmailLabelsToMessagesWithConnection:(id)a0 libraryIDs:(id)a1 labels:(id)a2;
- (id)allMailboxesSearchableIndexQueryExpressionWithExpression:(id)a0 forUnreadCount:(char)a1 withMailboxExclusions:(char)a2 includeAttachmentCriterion:(char)a3;
- (id)allMailboxesSearchableIndexQueryWithExpression:(id)a0 builder:(id /* block */)a1 forUnreadCount:(char)a2 withMailboxExclusions:(char)a3 includeAttachmentCriterion:(char)a4;
- (void)appendMimeData:(id)a0 forMessage:(id)a1 partNumber:(id)a2;
- (id)attachmentURLForMessage:(id)a0 partNumber:(id)a1 attachmentFilename:(id)a2 isMailDropImageArchive:(char)a3 isMailDropImageThumbnail:(char)a4;
- (id)attachmentsDirectoryForMessage:(id)a0 partNumber:(id)a1;
- (id)bodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1;
- (char)boolForCriterion:(id)a0;
- (char)boolForQuery:(id)a0;
- (id)calendarEventForMessageID:(long long)a0;
- (void)cleanUpAfterRemovingMessageBatch:(id)a0;
- (void)clearActiveMailboxesCache;
- (void)commitMessage:(id)a0 immediately:(char)a1;
- (void)commitSynchronouslyPostingMessages:(id)a0 postFlags:(id)a1 postingOldFlagsByMessage:(id)a2;
- (id)contentsOfDatabaseDefinition;
- (id)copyMailboxURLToRowIDMap;
- (unsigned long long)countForCriterion:(id)a0;
- (unsigned long long)countForCriterion:(id)a0 supressingDuplicates:(char)a1;
- (id)createAddresseeStringFromDisplayName:(id)a0 address:(id)a1 stringUniquer:(id)a2 addressIndex:(long long)a3;
- (id)criterionExpressionStringForStartLibraryID:(long long)a0 count:(unsigned long long)a1;
- (id)currentMailbox;
- (id)dataDirectoryForMailbox:(id)a0;
- (id)dataPathForLibraryID:(long long)a0 pathToMailbox:(id)a1 fileExists:(char *)a2;
- (id)dataPathForLibraryID:(long long)a0 pathToMailbox:(id)a1 type:(long long)a2;
- (id)dataPathForMessage:(id)a0;
- (id)dataURLForMessage:(id)a0 partNumber:(id)a1;
- (id)databaseUUIDString;
- (void)deleteDataDirectoriesForMailbox:(id)a0;
- (void)deleteFilesForMessage:(id)a0 cachedDirectoryContents:(id)a1;
- (void)deleteFilesForMessageWithLibraryID:(long long)a0 emlxDirectory:(id)a1 attachmentsDirectory:(id)a2 cachedDirectoryContents:(id)a3;
- (void)deleteMailboxes:(id)a0 forRebuild:(char)a1;
- (void)deleteMailboxes:(id)a0 forRebuild:(char)a1 updatingProgress:(id)a2;
- (void)disableActiveMailboxFiltering;
- (id)draftWithDocumentID:(id)a0 mailbox:(id)a1;
- (id)existingDataFileForMessage:(id)a0;
- (void)fileURLForAttachmentID:(id)a0 messageID:(id)a1 name:(id)a2 mailboxID:(long long)a3 result:(id /* block */)a4;
- (id)filenameForLibraryID:(long long)a0 part:(id)a1;
- (id)filenameForLibraryID:(long long)a0 type:(long long)a1;
- (id)firstReplyToMessage:(id)a0;
- (void)flagsChangedForMessages:(id)a0;
- (void)flushCachedDatabases;
- (id)fullBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1;
- (id)fullMessageDataForMessage:(id)a0;
- (void)gatherCountsForMailbox:(id)a0 totalCount:(unsigned long long *)a1 unreadCount:(unsigned long long *)a2 deletedCount:(unsigned long long *)a3 totalSize:(unsigned long long *)a4;
- (char)getTopLevelMimePart:(id *)a0 headers:(id *)a1 body:(id *)a2 forMessage:(id)a3 skipSignatureVerification:(char)a4 decodeContext:(id)a5;
- (char)hasCacheFileForMessage:(id)a0;
- (char)hasCacheFileForMessage:(id)a0 part:(id)a1;
- (id)headerDataForLibraryID:(long long)a0 mailboxID:(long long)a1;
- (id)headerDataForMessageWithPath:(id)a0;
- (void)hideMailboxesNotInLibraryFromSpotlight;
- (unsigned long long)imap_allegedHighestModificationSequenceforIMAPMailboxURL:(id)a0;
- (void)imap_compactMailbox:(id)a0;
- (unsigned long long)imap_computedHighestModificationSequenceforIMAPMailboxURL:(id)a0;
- (void)imap_recoverLocalItemsForMailboxURL:(id)a0 path:(id)a1 accountDisplayName:(id)a2;
- (void)imap_resetIMAPMessagesForMailbox:(id)a0 duplicateMessages:(id *)a1 invalidMessages:(id *)a2;
- (void)imap_setAllegedHighestModificationSequence:(unsigned long long)a0 forIMAPMailboxURL:(id)a1;
- (void)imap_setComputedHighestModificationSequence:(unsigned long long)a0 forIMAPMailboxURL:(id)a1;
- (id)importAddressRowIDs;
- (id)importGlobalMessageIDs;
- (id)importMailboxRowIDs;
- (char)importMessagesFromEnabledAccounts;
- (id)importSubjectRowIDs;
- (id)incompleteMessagesForMailbox:(id)a0 sinceDate:(id)a1;
- (void)incrementRunningIndexOfCurrentMessage;
- (char)initializeDatabase:(id)a0;
- (id)intermediateDirectoryForLibraryID:(long long)a0 forAttachments:(char)a1;
- (void)invalidateMyEmailAddresses;
- (void)invalidateMyEmailAddressesIfContains:(id)a0;
- (char)isMessageContentLocallyAvailable:(id)a0;
- (id)lastMessageWithMessageID:(id)a0 inMailbox:(id)a1;
- (char)libraryIsImporting;
- (char *)libraryMessageColorForMessageColor:(struct { unsigned char x0; unsigned char x1; unsigned char x2; })a0;
- (void)loadMessageCountsForMailboxes;
- (void)loadSecondaryMetadataForMessage:(id)a0;
- (char)logSQLitePerformance;
- (id)mailboxForMailboxID:(long long)a0;
- (id)mailboxForMessage:(id)a0;
- (long long)mailboxIDForMailbox:(id)a0 loadIfNotPresent:(char)a1;
- (long long)mailboxIDForMailboxURLString:(id)a0 loadIfNotPresent:(char)a1;
- (id)mailboxNameForMessage:(id)a0;
- (void)mailboxesDidChange;
- (struct { unsigned char x0; unsigned char x1; unsigned char x2; })messageColorForLibraryMessageColor:(char *)a0;
- (char)messageHasRelatedNonJunkMessages:(id)a0;
- (id)messageIDHashStringForLegacyMessageIDHashString:(id)a0;
- (id)messageIDsForSendLaterDate:(id)a0;
- (id)messageWithDataPath:(id)a0;
- (id)messageWithLibraryID:(long long)a0;
- (id)messageWithLibraryID:(long long)a0 options:(unsigned int)a1;
- (id)messageWithMessageID:(id)a0;
- (id)messageWithRemoteID:(id)a0 inRemoteMailbox:(id)a1 options:(unsigned int)a2;
- (id)messagesForGmailLabel:(id)a0 inAllMailMailbox:(id)a1 olderThanNumberOfDays:(long long)a2;
- (id)messagesForMailbox:(id)a0 olderThanNumberOfDays:(long long)a1;
- (id)messagesForMailbox:(id)a0 where:(id)a1 sortedBy:(id)a2 ascending:(char)a3 options:(unsigned int)a4;
- (id)messagesMatchingCriterion:(id)a0 options:(unsigned int)a1 searchType:(long long)a2;
- (id)messagesMatchingQuery:(id)a0 limit:(long long)a1 options:(unsigned int)a2;
- (id)messagesMatchingQuery:(id)a0 options:(unsigned int)a1;
- (id)messagesWhere:(id)a0 sortedBy:(id)a1 limit:(long long)a2 options:(unsigned int)a3;
- (id)messagesWithMessageID:(id)a0 inMailbox:(id)a1;
- (id)messagesWithMessageIDHeader:(id)a0;
- (id)messagesWithMessageIDHeaders:(id)a0;
- (id)messagesWithRemoteIDs:(id)a0 inMailbox:(id)a1 options:(unsigned int)a2;
- (id)mimeMessageDataSnippingPartsData:(id)a0 mimePartBlock:(id /* block */)a1;
- (void)muteConversationForMessages:(id)a0;
- (id)myAddressIDsString;
- (id)newUnsignedForQuery:(id)a0 db:(struct sqlite3 { } *)a1;
- (unsigned long long)numberOfMessagesForAccount:(id)a0;
- (void)performBlockDeferringMessageNotifications:(id /* block */)a0;
- (void)prepareToReImportMessages;
- (id)propertyListForMessage:(id)a0 dateReceived:(id)a1 dateLastViewed:(id)a2 remoteID:(id)a3 gmailLabels:(id)a4 flags:(long long)a5 mergeWithDictionary:(id)a6;
- (id)queryForCriterion:(id)a0 options:(unsigned int)a1;
- (id)queryForCriterion:(id)a0 options:(unsigned int)a1 baseTable:(unsigned long long)a2 isSubquery:(char)a3 fixUpCriterion:(char)a4;
- (void)queueConversationFlagsChangedNotification:(id)a0;
- (void)queueMessageGmailLabelsChangedNotificationForMessages:(id)a0;
- (void)queueMessagesCompactedNotification:(id)a0;
- (void)queueMessagesNotification:(id)a0 withUserInfo:(id)a1;
- (void)queueMessagesUpdatedNotification:(id)a0;
- (void)queueStoreFinishedFirstTimeSyncWithBlock:(id /* block */)a0;
- (char)rebuildIMAPServerMessagesFromMessagesInMailbox:(id)a0 duplicateMessageLibraryIDs:(id *)a1 invalidMessages:(id *)a2 forConnection:(id)a3;
- (void)recalculateMessageCountsForMailboxIDs:(id)a0;
- (id)referenceHashesFromMessageHeaders:(id)a0;
- (id)referencesForLibraryID:(long long)a0;
- (void)registerStoreForUpdates:(id)a0;
- (void)reloadMailboxCacheUsingConnection:(id)a0 forceReload:(char)a1;
- (void)reloadMessage:(id)a0;
- (void)removeAllDataForMessage:(id)a0;
- (void)removeCurrentTemporaryDatabaseFiles;
- (void)removeExtendedAttributePlistFromEmlxFile:(id)a0;
- (char)removeMessageBatch:(id)a0 connection:(id)a1;
- (void)removeMessages:(id)a0 cleanUpAfter:(char)a1;
- (void)removeMessages:(id)a0 cleanUpAfter:(char)a1 notifyPersistence:(char)a2;
- (void)removeSourceMailbox:(id)a0;
- (char)renameMailboxes:(id)a0 to:(id)a1;
- (void)resetConversationsForExistingMessagesWithRowIDs:(id)a0 connection:(id)a1;
- (void)restoreBackingStoreUpdateJournalIfNeeded;
- (long long)rowidForMailboxURL:(id)a0 connection:(id)a1 cache:(id)a2;
- (unsigned long long)runningIndexOfCurrentMessage;
- (void)scheduleCommit;
- (void)scheduleMessageFileUpdate;
- (void)sendMessagesMatchingCriterion:(id)a0 to:(id)a1 options:(unsigned int)a2 searchType:(long long)a3 queryLabel:(id)a4 async:(char)a5;
- (void)sendMessagesMatchingQuery:(id)a0 to:(id)a1 limit:(long long)a2 options:(unsigned int)a3;
- (void)sendMessagesMatchingQuery:(id)a0 to:(id)a1 options:(unsigned int)a2;
- (void)setAttachmentMetadata:(id)a0 forMessage:(id)a1;
- (void)setBackgroundColorForMessages:(id)a0 textColorForMessages:(id)a1;
- (void)setConversationFlags:(unsigned long long)a0 forMessages:(id)a1 reason:(long long)a2;
- (void)setData:(id)a0 forMessage:(id)a1 isPartial:(char)a2 hasCompleteText:(char)a3;
- (void)setDateReceivedInterval:(double)a0 forMessage:(id)a1;
- (void)setEWSFolderId:(id)a0 forMailbox:(id)a1;
- (void)setEWSSyncState:(id)a0 forMailbox:(id)a1;
- (void)setFlagsAndColorForMessages:(id)a0;
- (void)setFlagsForMessages:(id)a0 messages:(id)a1;
- (void)setLibraryIsImporting:(char)a0;
- (void)setRecipientTypeForMessages:(id)a0;
- (void)setSnippetsForMessages:(id)a0;
- (void)setSourceMailbox:(id)a0 forMailboxes:(id)a1;
- (void)setStoreForMessage:(id)a0 fromMailbox:(id)a1 knownStores:(id)a2;
- (void)setStoresForMessages:(id)a0;
- (void)setTotalNumberOfMessages:(unsigned long long)a0;
- (char)setupLibrary;
- (id)snipAttachmentMimeForFileIfNeeded:(id)a0 originalMessageData:(id)a1 forMessage:(id)a2;
- (id)snippetsForMessages:(id)a0;
- (id)sqlListWithArray:(id)a0;
- (void)tagDatabaseVersionIfNeeded:(id)a0;
- (void)takeAccountsOnlineAllAccounts:(char)a0;
- (void)test_discardAllDatabaseState;
- (void)test_waitForMessageNotificationsToFinish;
- (void)test_waitForSpotlightOperationsToFinish;
- (unsigned long long)totalCountForMailbox:(id)a0 unseenCount:(unsigned long long *)a1 adjustedUnreadCount:(unsigned long long *)a2;
- (unsigned long long)totalNumberOfMessages;
- (void)unScheduleCommit;
- (void)unScheduleMessageFileUpdate;
- (void)unmuteConversationForMessages:(id)a0;
- (unsigned long long)unreadCountForMessageType:(char)a0;
- (id)unreadMessagesForMailbox:(id)a0;
- (unsigned long long)unsignedCountForQuery:(id)a0 monitor:(id)a1;
- (void)updateConversationFlagsForMessages:(id)a0 flags:(unsigned long long)a1 reason:(long long)a2;
- (void)updateDatabaseValuesIfNeeded;
- (void)updateEWSOfflineIdsToRealIds:(id)a0;
- (void)updateFileForMessage:(id)a0;
- (void)updateJunkMessagesForIndexing;
- (void)updateSize:(id)a0 forMessage:(id)a1;
- (void)updateSubjectTo:(id)a0 forMessage:(id)a1;
- (void)upgradeMessageDirectoriesIfNeeded;
- (id)urlForMailboxID:(long long)a0;
- (id)versionedIntermediateDirectoryForLibraryID:(long long)a0 forAttachments:(char)a1;
- (void)writeAttachmentsIfNeededForMessage:(id)a0;

@end

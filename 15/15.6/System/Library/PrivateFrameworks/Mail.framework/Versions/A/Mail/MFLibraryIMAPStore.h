@class IMAPDownloadCache, NSString, MFMailbox, NSArray, NSDate, IMAPMailbox, NSMutableArray, IMAPCommandPipeline, MFIMAPAccount, NSObject, EDServerMessagePersistence, EDMessageChangeManager;
@protocol OS_os_log;

@interface MFLibraryIMAPStore : MFRemoteStore <IMAPMailboxDelegate, IMAPMessageDataSource> {
    IMAPMailbox *_IMAPMailbox;
    IMAPDownloadCache *_downloadCache;
    IMAPCommandPipeline *_fetchPipeline;
    NSMutableArray *_recentlyDeletedMessageIDs;
    id _uidNextLock;
    unsigned long long _numberOfAppendsOutstanding;
    id _appendCountLock;
}

@property (class, readonly, nonatomic) NSObject<OS_os_log> *largeDeleteLog;

@property unsigned long long totalCount;
@property (nonatomic) char supportsCustomPermanentFlags;
@property (copy) NSString *mailboxName;
@property (readonly, nonatomic) char canSetMessageColors;
@property char isOpenedByUser;
@property (readonly, nonatomic) MFMailbox *mailbox;
@property (readonly, nonatomic) MFIMAPAccount *account;
@property (readonly, copy, nonatomic) NSArray *messagesBeingRouted;
@property (readonly, nonatomic) unsigned long long totalCountOfMessages;
@property (readonly, copy, nonatomic) NSString *stateStringForDiagnostics;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) char isInbox;
@property (readonly, nonatomic) char isAllMailMailbox;
@property (readonly, nonatomic) char isTrash;
@property (readonly, nonatomic) unsigned int permanentFlags;
@property (readonly, nonatomic) unsigned long long serverMessageCount;
@property (readonly, nonatomic) IMAPCommandPipeline *fetchPipeline;
@property (readonly, nonatomic) IMAPDownloadCache *downloadCache;
@property (readonly, nonatomic) unsigned int maximumUID;
@property (nonatomic) unsigned int uidNext;
@property (nonatomic) unsigned long long allegedHighestModificationSequence;
@property char supportsModificationSequences;
@property (retain) NSDate *lastSyncDate;
@property (readonly) EDServerMessagePersistence *serverMessagePersistence;
@property (readonly) EDMessageChangeManager *messageChangeManager;
@property (nonatomic) unsigned int uidValidity;
@property (readonly) char isReadOnly;
@property (readonly, nonatomic) char canCompact;
@property (readonly, copy, nonatomic) NSString *displayName;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void).cxx_destruct;
- (void)_invalidate;
- (id)sortOrder;
- (char)allowsOverwrite;
- (char)_isSynchronized;
- (void)compactMailbox:(id)a0;
- (void)fixMessagesAndResetIMAPMessages;
- (id)_IMAPMailbox;
- (id)_dataForMessage:(id)a0 readHeadersOnly:(char)a1;
- (id)_fetchBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 fetchIfNotAvailable:(char)a2 allowPartial:(char)a3;
- (id)_fetchHeaderDataForMessage:(id)a0 fetchIfNotAvailable:(char)a1 allowPartial:(char)a2;
- (char)_isSynchronizing;
- (void)_openSynchronouslyUpdatingMetadata:(char)a0 withOptions:(unsigned long long)a1;
- (void)_setBackgroundColorForMessages:(id)a0 textColorForMessages:(id)a1;
- (unsigned long long)allegedHighestModificationSequenceForMailbox:(id)a0;
- (char)allowsAppend;
- (void)asynchronousCopyOfAllMessagesWithOptions:(id)a0;
- (id)cachedBodyDataForMessage:(id)a0 andHeaderDataIfReadilyAvailable:(id *)a1 allowPartial:(char)a2;
- (char)canRebuild;
- (id)colorForMessage:(id)a0;
- (unsigned long long)computedHighestModificationSequenceForMailbox:(id)a0;
- (id)copyIncompleteMessages;
- (id)copyOfAllMessagesWithOptions:(unsigned int)a0;
- (id)copyOfOldCachedMessagesContentsForUid:(unsigned int)a0;
- (void)deleteLastMessageWithHeaders:(id)a0 compactWhenDone:(char)a1;
- (void)deleteMessages:(id)a0 moveToTrash:(char)a1;
- (void)deleteMessagesOlderThanNumberOfDays:(long long)a0 compact:(char)a1;
- (void)doCompact;
- (void)doRoutineCleanup;
- (id)flagChangeFromLocalFlags:(id)a0 toServerFlags:(id)a1;
- (id)flagsForRemoteIDs:(id)a0;
- (void)forceResync;
- (char)hasValidCacheFileForMessage:(id)a0;
- (char)hasValidCacheFileForUid:(unsigned int)a0;
- (id)initWithCriterion:(id)a0 mailbox:(id)a1 readOnly:(char)a2;
- (char)isSortedAscending;
- (char)mailboxHasInconsistencies;
- (id)messageForMessageID:(id)a0;
- (id)messageWithRemoteID:(id)a0 inRemoteMailbox:(id)a1;
- (id)messagesForMailbox:(id)a0 where:(id)a1 sortedBy:(id)a2 ascending:(char)a3 options:(unsigned int)a4;
- (void)messagesWereAdded:(id)a0 secondaryMessages:(id)a1 duringOpen:(char)a2;
- (id)messagesWithRemoteIDs:(id)a0;
- (id)objectSpecifierForMessage:(id)a0;
- (void)openAsynchronously;
- (void)openSynchronouslyUpdatingMetadata:(char)a0;
- (void)setBackgroundColorForMessages:(id)a0 textColorForMessages:(id)a1;
- (void)setComputedHighestModificationSequence:(unsigned long long)a0;
- (void)setUidNextIfNeeded:(unsigned int)a0;
- (char)shouldCallCompactWhenClosing;
- (char)shouldSendUserNotificationForMessage:(id)a0;
- (unsigned long long)totalCountAndUnseenCount:(unsigned long long *)a0 adjustedUnreadCount:(unsigned long long *)a1;
- (void)updateComputedHighestModificationSequence:(unsigned long long)a0 forMailbox:(id)a1;
- (void)updatePermanentFlags:(unsigned int)a0 forMailbox:(id)a1;

@end

@class NSLock, NSMutableDictionary, MFMailbox, NSDate, MCInvocationQueue, NSDictionary, ACAccount, ECIMAPAccount, NSString, MFLibraryIMAPStore, NSMutableSet, NSOperationQueue, NSArray, NSError, ECAuthScheme;
@protocol IMAPTaskManager;

@interface MFIMAPAccount : MFRemoteStoreAccount <IMAPAccount> {
    NSArray *_lastKnownCapabilities;
    NSMutableSet *_namespacePrivatePrefixes;
    NSMutableSet *_namespacePublicPrefixes;
    NSMutableSet *_namespaceSharedPrefixes;
    NSString *_separatorChar;
    NSString *_serverPathPrefixWithFilesystemSeparator;
    NSString *_serverPathPrefixAsFilesystemPath;
    NSLock *_fsPrefixLock;
    NSLock *_mailboxListingLock;
    NSMutableSet *_mailboxURLsToSynchronize;
    NSMutableDictionary *_IMAPMailboxes;
    NSMutableDictionary *_IMAPQuotaRoots;
    id _allMailLock;
    MFMailbox *_allMailMailbox;
    MFMailbox *_serverDefinedArchiveMailbox;
    id _serverDefinedArchiveMailboxLock;
    MFMailbox *_serverDefinedDraftsMailbox;
    id _serverDefinedDraftsMailboxLock;
    MFMailbox *_serverDefinedJunkMailbox;
    id _serverDefinedJunkMailboxLock;
    MFMailbox *_serverDefinedSentMailbox;
    id _serverDefinedSentMailboxLock;
    MFMailbox *_serverDefinedTrashMailbox;
    id _serverDefinedTrashMailboxLock;
    id _propertyDiscoveryLock;
    char _currentlySynchronizingMailboxList;
    char _synchronizingMailboxListNeedToRetryOnFailure;
    id _synchronizeMailboxListingLock;
    NSMutableSet *_labelsBeingCleanedUp;
}

@property (class, readonly, nonatomic) MCInvocationQueue *invocationQueue;
@property (class, readonly, nonatomic) NSOperationQueue *backgroundQueue;
@property (class, readonly, copy) NSString *accountTypeString;
@property (class, readonly, nonatomic) NSString *csAccountTypeString;

@property (retain) MFLibraryIMAPStore *idleStore;
@property double lastMailboxListFetchTime;
@property (nonatomic) char lastConnectionFailed;
@property (nonatomic) char shouldIncludePrefixInPath;
@property (retain, nonatomic) ECIMAPAccount *baseAccount;
@property (readonly, nonatomic) id<IMAPTaskManager> taskManager;
@property char hasServerDefinedAllMailMailbox;
@property char hasServerDefinedArchiveMailbox;
@property char hasServerDefinedDraftsMailbox;
@property char hasServerDefinedJunkMailbox;
@property char hasServerDefinedSentMailbox;
@property char hasServerDefinedTrashMailbox;
@property (readonly) MFMailbox *serverDefinedArchiveMailbox;
@property (readonly) MFMailbox *serverDefinedDraftsMailbox;
@property (readonly) MFMailbox *serverDefinedJunkMailbox;
@property (readonly) MFMailbox *serverDefinedSentMailbox;
@property (readonly) MFMailbox *serverDefinedTrashMailbox;
@property char ignoreServerDefinedArchiveMailbox;
@property char ignoreServerDefinedDraftsMailbox;
@property char ignoreServerDefinedJunkMailbox;
@property char ignoreServerDefinedSentMailbox;
@property char ignoreServerDefinedTrashMailbox;
@property char shouldUseGmailLabelStores;
@property (readonly) char shouldUseGmailLabelStoresIsSet;
@property char needsGmailLabelsCleanup;
@property (readonly, copy) NSArray *lastKnownCapabilities;
@property (readonly) char supportsIDLE;
@property char compactWhenClosingMailboxes;
@property (readonly) char isOffline;
@property (retain) NSError *connectionError;
@property (copy) NSDictionary *serverID;
@property (readonly) char allowsPartialDownloads;
@property (readonly) char shouldMoveDeletedMessagesToTrash;
@property (readonly, copy, nonatomic) NSArray *allBackgroundMailboxNames;
@property char supportsQuickResynchronization;
@property (readonly, nonatomic) char supportsMove;
@property (readonly, nonatomic) char supportsAppleRemoteLinks;
@property (copy) NSString *serverPathPrefix;
@property (readonly) NSDate *credentialExpiryDate;
@property long long cachePolicy;
@property (readonly, nonatomic) NSOperationQueue *remoteTaskQueue;
@property (readonly, nonatomic) NSOperationQueue *remoteFetchQueue;
@property (readonly, nonatomic) char isGmailAccount;
@property (readonly, copy) NSString *accountTypeString;
@property (readonly) char isYahooAccount;
@property (readonly, copy, nonatomic) NSString *saslProfileName;
@property char configureDynamically;
@property char allowInsecureAuthentication;
@property (copy) NSString *canonicalEmailAddress;
@property long long portNumber;
@property (readonly, copy, nonatomic) NSArray *standardPorts;
@property (readonly, copy, nonatomic) NSArray *standardSSLPorts;
@property long long securityLayerType;
@property (copy) NSString *authenticationScheme;
@property (retain) ECAuthScheme *preferredAuthScheme;
@property (copy) NSString *password;
@property (readonly, copy) NSString *applePersonID;
@property (readonly, copy) NSString *appleAuthenticationToken;
@property (readonly, copy) NSString *machineID;
@property (readonly, copy) NSString *oneTimePassword;
@property (readonly, copy) NSString *clientInfo;
@property (readonly, copy) NSString *base64EncodedAppleAuthenticationToken2;
@property (readonly, copy) NSString *oauthToken;
@property (readonly, copy, nonatomic) NSDate *expiryDate;
@property (readonly, nonatomic) char requiresAuthentication;
@property char shouldUseAuthentication;
@property char usesSSL;
@property (copy) NSString *externalHostname;
@property (readonly, copy) NSString *username;
@property (readonly, copy) NSString *hostname;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *identifier;
@property (readonly, copy) NSString *altDSID;
@property (readonly) ACAccount *systemAccount;
@property (readonly, copy, nonatomic) NSString *statisticsKind;
@property (readonly) char primaryiCloudAccount;
@property (readonly) char isActive;
@property (copy) NSString *displayName;
@property (readonly, copy) NSArray *emailAddressStrings;
@property (readonly, nonatomic, getter=isManaged) char managed;

+ (id)standardPorts;
+ (id)standardSSLPorts;
+ (void)_deleteQueuedMailboxes:(id)a0;
+ (id)_mailboxNameForPathComponent:(id)a0;
+ (id)_pathComponentForMailboxName:(id)a0;
+ (void)test_waitForOperationQueuesToFinish;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)setIsOffline:(char)a0;
- (long long)defaultPortNumber;
- (long long)defaultSecurePortNumber;
- (id)initWithSystemAccount:(id)a0;
- (id)IMAPMailboxForMailbox:(id)a0 createIfNeeded:(char)a1;
- (id)IMAPMailboxForMailboxName:(id)a0 createIfNeeded:(char)a1;
- (char)_deleteMailbox:(id)a0 reflectToServer:(char)a1;
- (void)_writeCustomInfoToMailboxCache:(id)a0;
- (id)mailboxForName:(id)a0;
- (id)IMAPMailboxForMailbox:(id)a0 name:(id)a1 createIfNeeded:(char)a2;
- (id)_addIMAPMailboxForMailbox:(id)a0 name:(id)a1;
- (void)clearQuotaRoots;
- (char)handleResponseCodeFromResponse:(id)a0;
- (id)nameForMailbox:(id)a0;
- (id)URLPersistenceScheme;
- (void)_allegedHighestModificationSequenceDidChangeForIMAPMailbox:(id)a0;
- (char)_askToChangePathPrefixToCreateMailbox:(id)a0 displayName:(id)a1;
- (char)_cleanUpMessagesInGmailLabel:(id)a0;
- (void)_cleanUpMessagesInGmailLabels;
- (void)_clearAllPathBasedCachesAndDelete:(char)a0;
- (id)_colorByMessageFromColorByMessageDigest:(id)a0;
- (id)_copyMailboxWithParent:(id)a0 name:(id)a1 pathComponent:(id)a2 attributes:(unsigned long long)a3 existingMailbox:(id)a4;
- (id)_fileSystemServerPathPrefix:(char)a0;
- (id)_fullIMAPPathForPath:(id)a0 relativeToMailbox:(id)a1;
- (id)_infoForMatchingURL:(id)a0;
- (id)_listingForMailbox:(id)a0 listAllChildren:(char)a1;
- (id)_listingForMailbox:(id)a0 listAllChildren:(char)a1 onlySubscribed:(char)a2;
- (void)_loadEntriesFromFileSystemPath:(id)a0 parent:(id)a1;
- (void)_loadMailboxListingIntoCache:(id)a0 parent:(id)a1 addedMailboxes:(id)a2 removedMailboxes:(id)a3 updatingSourceMailbox:(char)a4;
- (id)_mailboxNameForLabelName:(id)a0;
- (id)_mailboxPathPrefix:(char)a0;
- (void)_mailboxesWereRemovedFromTree:(id)a0 withFileSystemPaths:(id)a1 names:(id)a2;
- (void)_migrateColorsForGmail;
- (id)_namespacePrefixesForPrivate:(char)a0 public:(char)a1 shared:(char)a2;
- (char)_parentSystemAccountDidUpdateProperties:(id)a0 changedSystemAccount:(char *)a1;
- (void)_performDiagnostics:(id)a0;
- (void)_readCustomInfoFromMailboxCache:(id)a0;
- (id)_recursivelyFilterMailboxList:(id)a0 accordingToList:(id)a1 removed:(long long *)a2;
- (void)_recursivelyModifySubscriptions:(char)a0 forMailbox:(id)a1 children:(id)a2;
- (void)_releaseAllConnectionsAndCallSuper:(char)a0 saveOfflineCache:(char)a1;
- (void)_removeIMAPMailboxWithName:(id)a0;
- (void)_renameIMAPMailboxWithMailbox:(id)a0 fromName:(id)a1 toName:(id)a2;
- (id)_serverDefinedMailboxWithAttribute:(unsigned long long)a0;
- (char)_setChildren:(id)a0 forMailbox:(id)a1;
- (void)_setFileSystemServerPathPrefix;
- (id)_specialMailboxWithType:(int)a0 create:(char)a1 isLocal:(char)a2;
- (void)_startObserving:(char)a0 IMAPMailbox:(id)a1;
- (char)_synchronizeMailboxList;
- (void)_synchronizeMailboxListDuringMailCheck;
- (void)_synchronouslyLoadListingForParent:(id)a0;
- (void)_unseenCount:(unsigned int)a0 didChangeForIMAPMailbox:(id)a1;
- (void)_updateIdleMailbox;
- (void)_updateSpecialMailboxes;
- (char)_useNewIMAPStack;
- (void)_validateConnections;
- (void)_waitForMailboxListingLoadToComplete;
- (id)allMailMailbox;
- (id)authenticatedConnection;
- (char)canMailboxBeDeleted:(id)a0;
- (void)cleanUpMessagesInGmailLabel:(id)a0;
- (void)completeDeferredInitialization;
- (char)connectAndAuthenticate:(id)a0;
- (id)createMailboxWithParent:(id)a0 displayName:(id)a1 localizedDisplayName:(id)a2;
- (id)createTaskManager;
- (id)dataSourceForMailbox:(id)a0 createIfNeeded:(char)a1;
- (id)dataSourceForMailboxName:(id)a0 createIfNeeded:(char)a1;
- (id)dataSourceForMailboxURL:(id)a0 createIfNeeded:(char)a1;
- (char)deleteMailbox:(id)a0 reflectToServer:(char)a1;
- (void)detectAllMailMailboxWithConnection:(id)a0;
- (void)didConnectToServerWithServerInterface:(id)a0;
- (char)discoverSettings;
- (void)doRoutineCleanup;
- (void)expungeMailboxWithName:(id)a0 URLStringToCompact:(id)a1 ifSelected:(char)a2;
- (void)fetchAsynchronouslyIsAuto:(char)a0;
- (id)gmailLabelWithName:(id)a0;
- (void)handleAlertResponse:(id)a0;
- (void)insertInMailboxes:(id)a0 atIndex:(unsigned long long)a1;
- (void)invalidateMailboxWithName:(id)a0 expunge:(char)a1 URLStringToCompact:(id)a2;
- (id)mailboxForRelativePath:(id)a0 isFilesystemPath:(char)a1 create:(char)a2;
- (id)mailboxPathExtension;
- (id)messageActionsAfterActionID:(long long)a0;
- (unsigned int)messageCaching;
- (void)messageDeliveryWillBegin:(id)a0;
- (char)needToSynchronizeMailboxCaches;
- (char)needsToDiscoverSettings;
- (void)needsToUpdateMailboxList;
- (id)newConnectedConnectionDiscoveringBestSettings:(char)a0 withConnectTimeout:(double)a1 readWriteTimeout:(double)a2;
- (id)primaryMailbox;
- (id)quotaRootForName:(id)a0 createIfNeeded:(char)a1;
- (void)refreshMailboxListingRootedAtMailbox:(id)a0;
- (void)releaseAllConnections;
- (char)renameMailbox:(id)a0 newDisplayName:(id)a1 parent:(id)a2;
- (void)resetNeedToSynchronizeMailboxCaches;
- (char)resetSpecialMailboxes;
- (id)separatorCharFetchIfNeeded:(char)a0;
- (char)setMailbox:(id)a0 forSpecialMailboxType:(int)a1;
- (char)setMailboxTitle:(id)a0 forSpecialMailboxType:(int)a1;
- (void)setMessageCaching:(unsigned int)a0;
- (void)setSeparatorChar:(id)a0;
- (void)setStoreDraftsOnServer:(char)a0;
- (void)setStoreJunkOnServer:(char)a0;
- (void)setStoreSentMessagesOnServer:(char)a0;
- (void)setStoreTrashOnServer:(char)a0;
- (void)setSupportsModificationSequences:(char)a0 forMailboxName:(id)a1;
- (char)shouldFetch;
- (char)shouldFetchRemoteLinksWithDateReceived:(id)a0;
- (void)stopAccountActivity;
- (Class)storeClassForMailbox:(id)a0;
- (id)storeForMailbox:(id)a0;
- (char)storesUnseenCount;
- (void)syncFileSystemWithServerPathPrefix;
- (void)test_stopAllWork;
- (id)validNameForMailbox:(id)a0 fromDisplayName:(id)a1 error:(id *)a2;
- (void)validateConnections;

@end

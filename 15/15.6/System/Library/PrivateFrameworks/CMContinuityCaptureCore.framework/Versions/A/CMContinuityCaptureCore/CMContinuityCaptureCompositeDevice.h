@class NSDate, NSString, NSArray, NSMutableDictionary, CMContinuityCaptureProvider, CMContinuityCaptureEventQueue, NSObject, NSMutableArray, NSMutableSet;
@protocol OS_dispatch_queue, ContinuityCaptureTransportDevice, ContinuityCaptureDeviceClient;

@interface CMContinuityCaptureCompositeDevice : NSObject <ContinuityCaptureTaskDelegate, CMContinuityCaptureEventQueueActionDelegate, CMContinuityCaptureCompositeDeviceDelegate> {
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_captureDeviceByEntityType;
    NSMutableDictionary *_cmControlByName;
    NSMutableArray *_connectionSwitchLogs;
    NSMutableArray *_remoteSessionLogs;
    CMContinuityCaptureEventQueue *_eventQueue;
    NSMutableSet *_streamingIntentEntities;
    id<ContinuityCaptureDeviceClient> _client;
    id /* block */ _pendingTerminationTimeoutBlock;
    _Atomic char autoTransportSwitchDisabled;
    id<ContinuityCaptureTransportDevice> _deviceStatusObserverDevice;
    unsigned long long _lastSessionID;
    id /* block */ _undeferBlockForSidecarClient;
    char _microphonePublishingIsDeferred;
}

@property (readonly, weak) CMContinuityCaptureProvider *provider;
@property (readonly, retain) NSString *publishTime;
@property (readonly, retain) id<ContinuityCaptureDeviceClient> client;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, retain) CMContinuityCaptureEventQueue *eventQueue;
@property (readonly, retain) NSArray *controls;
@property (readonly, retain) NSArray *continuityCaptureDevices;
@property (readonly) unsigned long long currentSessionID;
@property (readonly) unsigned long long lastSessionID;
@property (readonly) NSDate *currentSessionActivationStartTime;

- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (id)debugInfo;
- (void)_observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_device:(id)a0 updatedValueForControl:(id)a1;
- (void)_startStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)_handlePlacementStepSkipped;
- (void)_postEvent:(id)a0 entity:(long long)a1 data:(id)a2;
- (void)_stopStream:(long long)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)captureStillImage:(id)a0 entity:(long long)a1 completion:(id /* block */)a2;
- (void)connectionInterrupted:(id)a0 forDevice:(id)a1;
- (id)controlWithName:(id)a0;
- (long long)currentPreferredAvailableTransport;
- (void)deferDevice:(char)a0;
- (void)device:(id)a0 updatedValueForControl:(id)a1;
- (void)didCaptureStillImage:(id)a0 entity:(long long)a1;
- (void)disableAutoTransportSwitch:(char)a0;
- (void)dispatchFrame:(struct opaqueCMSampleBuffer { } *)a0 entity:(long long)a1 completion:(id /* block */)a2;
- (void)enqueueReactionEffect:(id)a0 entity:(long long)a1;
- (void)handleAVCNegotiation:(long long)a0 data:(id)a1;
- (void)handleBatteryState:(id)a0;
- (void)handleDockedTrackingActive:(id)a0;
- (void)handleRemoteSystemNotificationControl:(id)a0;
- (void)handleSynchronizeAudioClockCompletion;
- (char)hasValidStreamState;
- (id)initWithDevice:(id)a0 provider:(id)a1;
- (void)logConnectionSwitch:(id)a0;
- (void)logRemoteSessionSummary:(id)a0;
- (void)notifyTransportError:(id)a0;
- (void)performConnectionChangeEventIfApplicable:(id)a0;
- (void)performConnectionDisconnectEventIfApplicable:(id)a0;
- (void)postEvent:(id)a0 entity:(long long)a1 data:(id)a2;
- (char)postEventAction:(unsigned long long)a0 args:(id)a1;
- (void)postEventOnAllEntities:(id)a0 data:(id)a1;
- (void)postValueChangeForControl:(id)a0;
- (void)registerStreamIntentForCaptureDevice:(id)a0 completion:(id /* block */)a1;
- (void)relayEvent:(id)a0;
- (void)relayUserDisconnect;
- (void)resetTransportDevice:(id)a0;
- (void)scheduleBatteryLevelNotification:(id)a0;
- (void)scheduleIncomingCallNotification:(id)a0;
- (void)scheduleSystemPressureNotification:(id)a0;
- (void)setValueForControl:(id)a0 completion:(id /* block */)a1;
- (char)setupCaptureDevices;
- (void)setupControls;
- (void)setupSidebandMessageNotificationHandler;
- (char)shouldSwitchConnection;
- (void)startStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)stopStream:(long long)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)synchronizeAudioClockWithSampleTime:(unsigned long long)a0 networkTime:(unsigned long long)a1 clockGrandMasterIdentifier:(unsigned long long)a2;
- (void)terminateCompleteForDevice:(id)a0;
- (void)unregisterStreamIntentForCaptureDevice:(id)a0;
- (char)validConnectionResetEventForData:(id)a0;

@end

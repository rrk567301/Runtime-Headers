@class NSUUID, NSString, NSArray, CMContinuityCaptureConfiguration, NSDate, CMContinuityCaptureState, AVCMediaStreamNegotiator, CMContinuityCaptureStateMachine, NSObject, NSMutableArray, CMContinuityCaptureDeviceCapabilities;
@protocol ContinuityCaptureTransportDeviceStream, ContinuityCaptureTransportDevice, CMContinuityCaptureCompositeDeviceDelegate, OS_dispatch_queue;

@interface CMContinuityCaptureDeviceBase : NSObject <CMContinuityCaptureDevice> {
    NSObject<OS_dispatch_queue> *_queue;
    long long _entity;
    CMContinuityCaptureDeviceCapabilities *_capabilities;
    id<CMContinuityCaptureCompositeDeviceDelegate> _compositeDelegate;
    NSMutableArray *_streamSessionLogs;
    _Atomic char _streaming;
    CMContinuityCaptureStateMachine *_stateMachine;
    CMContinuityCaptureStateMachine *_streamActionStateMachine;
    CMContinuityCaptureConfiguration *_activeConfiguration;
    id /* block */ _streamTimeoutBlock;
    unsigned long long _lastStreamNoOfFramesDispatched;
    unsigned long long _lastStreamNoOfHighLatencyFrames;
    NSDate *_lastStreamStartTime;
    NSDate *_lastStreamFirstFrameDispatchTime;
    AVCMediaStreamNegotiator *_avcStreamNegotiator;
    NSMutableArray *_pendingCompletionBlocks;
    id<ContinuityCaptureTransportDevice> _transportDevice;
    id<ContinuityCaptureTransportDeviceStream> _transportStream;
    char _avcStackStarted;
    char _terminated;
    id<ContinuityCaptureTransportDevice> _deviceStatusObserverDevice;
    unsigned long long _cameraCaptureStackStartTime;
    unsigned long long _avCaptureStackStartTime;
    _Atomic char _observingStateMachineState;
    _Atomic char _invalidated;
    _Atomic char _hasStreamIntent;
    id /* block */ _invalidFrameBlock;
    id /* block */ _invalidFrameTimeoutBlock;
    char _dispatchingInvalidFrames;
    char _invalidFrameNotificationScheduled;
    unsigned int _timeToWaitBeforeSendingInvalidFramesWhenConnectingInSec;
    unsigned int _maxInvalidFramesDurationWhenConnectingInSec;
    char _ignoreSendingInvalidFrames;
}

@property (readonly, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) long long entity;
@property (readonly, retain) CMContinuityCaptureDeviceCapabilities *capabilities;
@property (readonly, weak) id<CMContinuityCaptureCompositeDeviceDelegate> compositeDelegate;
@property (readonly, retain) NSArray *controls;
@property (readonly, retain) NSUUID *deviceID;
@property (readonly, retain) id<ContinuityCaptureTransportDeviceStream> transportStream;
@property (readonly) char streaming;
@property (readonly, retain) CMContinuityCaptureConfiguration *activeConfiguration;
@property (readonly, retain) AVCMediaStreamNegotiator *avcStreamNegotiator;
@property (readonly, retain) CMContinuityCaptureStateMachine *streamActionStateMachine;
@property (readonly, retain) CMContinuityCaptureState *stateMachineCurrentState;
@property (readonly, retain) id<ContinuityCaptureTransportDevice> transportDevice;
@property (readonly, nonatomic) unsigned long long currentSessionID;
@property (readonly, nonatomic) unsigned long long cameraCaptureStackStartTime;
@property (readonly, nonatomic) unsigned long long avCaptureStackStartTime;
@property (readonly, nonatomic) char invalidated;
@property (nonatomic, getter=hasStreamIntent) char streamIntent;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)defaultStateEntryTransitionActionForState:(id)a0 onEvent:(id)a1;
+ (char)defaultStateExitGuard:(id)a0 dstState:(id)a1 onEvent:(id)a2;
+ (void)defaultStateExitTransitionActionForState:(id)a0 onEvent:(id)a1;
+ (char)keepRemoteClientAliveForEvent:(id)a0;

- (void)dealloc;
- (void).cxx_destruct;
- (void)invalidate;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (id)debugInfo;
- (char)activeConnection;
- (void)setupStateMachine;
- (void)scheduleDeviceBusyNotification:(char)a0;
- (void)stateMachineClearDeferredEvents;
- (void)_startStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (id)_aggregateEventDuplicatesInAnyState:(id)a0 eventName:(id)a1;
- (id)_aggregateEventPairInAnyState:(id)a0 entryEventName:(id)a1 exitEventName:(id)a2;
- (id)_aggregateStreamEventsInInitState:(id)a0;
- (id)_aggregateStreamEventsInStreamState:(id)a0;
- (void)_handleAVCNegotiation:(long long)a0 data:(id)a1;
- (void)_stopStream:(long long)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (id)aggregateEvents:(id)a0;
- (void)captureStillImage:(id)a0 entity:(long long)a1 completion:(id /* block */)a2;
- (void)connectionInterrupted:(id)a0 forDevice:(id)a1;
- (void)didCaptureStillImage:(id)a0 entity:(long long)a1;
- (void)dispatchFrame:(struct opaqueCMSampleBuffer { } *)a0 entity:(long long)a1 completion:(id /* block */)a2;
- (void)enqueueReactionEffect:(id)a0 entity:(long long)a1;
- (void)forceDeviceRemoval;
- (void)handleAVCNegotiation:(long long)a0 data:(id)a1;
- (void)handleSynchronizeAudioClockCompletion;
- (id)initWithCapabilities:(id)a0 compositeDelegate:(id)a1 transportDevice:(id)a2 queue:(id)a3;
- (void)logStreamSessionSummary;
- (void)postActionCompletionForEventName:(id)a0 eventData:(id)a1 error:(id)a2;
- (char)postActionGuardOfType:(unsigned long long)a0 forEventName:(id)a1 option:(unsigned long long)a2;
- (void)postActionOfType:(unsigned long long)a0 forEvent:(id)a1 option:(unsigned long long)a2;
- (void)postDeferredEvent:(id)a0 data:(id)a1;
- (void)postEvent:(id)a0 entity:(long long)a1 data:(id)a2;
- (void)printFrameBufferLog:(long long)a0;
- (void)resetTransportDevice:(id)a0;
- (void)restartSendingInvalidFramesIfApplicable;
- (void)scheduleInvalidFramesNotification:(char)a0;
- (void)scheduleSendingInvalidFramesAfterTimeout:(char)a0;
- (void)setStreamStateTimeout:(char)a0 forTime:(unsigned int)a1;
- (void)setValueForControl:(id)a0 completion:(id /* block */)a1;
- (void)setupStreamActionStateMachine;
- (char)startAVConferenceStack:(unsigned long long)a0;
- (char)startCameraCaptureStack:(unsigned long long)a0;
- (void)startSendingInvalidFrames;
- (void)startStream:(id)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)startStreamCompletedWithError:(id)a0;
- (void)stateMachineNotifyComplete:(id)a0;
- (void)stateMachineReStartStreamOnEvent:(id)a0 option:(unsigned long long)a1;
- (void)stateMachineStartStreamOnEvent:(id)a0 option:(unsigned long long)a1;
- (void)stateMachineStopStreamOnEvent:(id)a0 option:(unsigned long long)a1;
- (void)stateMachineStreamSubstateReceiveData:(id)a0;
- (void)stateMachineStreamSubstateSendData:(id)a0;
- (char)stopCameraCaptureStack:(unsigned long long)a0;
- (void)stopCaptureStack:(unsigned long long)a0 completion:(id /* block */)a1;
- (void)stopSendingInvalidFrames;
- (void)stopStream:(long long)a0 option:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)streamStateMachineNotifyComplete:(id)a0;
- (void)synchronizeAudioClockWithSampleTime:(unsigned long long)a0 networkTime:(unsigned long long)a1 clockGrandMasterIdentifier:(unsigned long long)a2;
- (void)terminateComplete:(id /* block */)a0;
- (void)unconditionalTransitionForState:(id)a0 andDeferringEvent:(id)a1;

@end

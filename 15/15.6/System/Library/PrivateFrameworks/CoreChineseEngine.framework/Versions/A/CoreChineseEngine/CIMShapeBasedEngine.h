@class NSString, NSDictionary, CIMMecabraShapeBasedEngine, NSMutableString, NSCharacterSet, CIMCandidate;

@interface CIMShapeBasedEngine : CIMBaseEngine

@property (readonly, nonatomic) char characterBeforeCaretIsNumber;
@property (nonatomic) char leftSingleQuotationMarkInserted;
@property (nonatomic) char leftDoubleQuotationMarkInserted;
@property (retain, nonatomic) CIMMecabraShapeBasedEngine *mecabraEngine;
@property (readonly, nonatomic) unsigned long long mecabraCreationOptions;
@property (readonly, nonatomic) NSDictionary *mecabraCreationOptionsDictionary;
@property (readonly, nonatomic) unsigned long long analysisOptions;
@property (readonly, nonatomic) unsigned long long maxLengthOfInline;
@property (readonly, nonatomic) NSCharacterSet *inputCharacterSet;
@property (readonly, nonatomic) NSString *keyboardLayoutName;
@property (readonly, nonatomic) NSDictionary *keyMappings;
@property (readonly, nonatomic) char commitDirectlyWhenExactMatch;
@property (readonly, nonatomic) char canTypeNonMappedCharacters;
@property (readonly, nonatomic) char shouldShowAssociatedWords;
@property (readonly, nonatomic) NSCharacterSet *wildcardCharacterSet;
@property (readonly, nonatomic) char inlineContainsWildcard;
@property (readonly, nonatomic) char updateMarkedTextOnSelectionChange;
@property (nonatomic) char punctuationWindowIsTabbed;
@property (nonatomic) char showInputCode;
@property (retain, nonatomic) NSMutableString *inlineText;
@property (readonly, nonatomic) NSString *shownInlineText;
@property (retain, nonatomic) CIMCandidate *selectedMecabraCandidate;
@property (nonatomic) char shouldGroupWindowMovement;

- (void).cxx_destruct;
- (void)reset;
- (id)selectedCandidate;
- (void)updateCandidates;
- (void)updateSettings;
- (void)endSession;
- (void)setCandidates:(id)a0;
- (id)inputString;
- (char)moveDown;
- (char)moveUp;
- (char)moveLeft;
- (char)moveRight;
- (char)handleTab;
- (char)handleDelete;
- (char)handleNumberKey:(unsigned short)a0;
- (id)currentInlineText;
- (char)handleEvent:(id)a0 client:(id)a1;
- (id)makeCandidateController;
- (id)mecabraEnvironment;
- (id)candidateWithString:(id)a0;
- (void)commitCandidate;
- (char)handleCharacter;
- (char)handleSpaceForNormalInlineState;
- (char)inputModeShowsDynamicCandidates;
- (void)autoConvert;
- (id)candidateFromPreviousCandidateByAppending:(id)a0;
- (char)candidateIsPhonetic:(id)a0;
- (id)candidateListDictionaryWithSortingMethod:(id)a0;
- (char)candidateShouldShowInputCode:(id)a0;
- (id)candidateSurfaceAtIndex:(unsigned long long)a0;
- (void)checkSettings:(id)a0 withClient:(id)a1;
- (void)commitCandidate:(id)a0;
- (void)commitCandidateOrInline;
- (void)commitInline;
- (void)commitInlineForSpecialWindow;
- (void)commitInlineForSpecialWindow:(id)a0;
- (id)composedText;
- (char)consumeEventIfInlineNotEmpty;
- (char)consumeEventIfInlineNotEmptyOrCandidateWindowOpened;
- (void)didHandleCandidateSelected:(id)a0 candidateController:(id)a1;
- (void)didHandleCandidateSelectionChanged:(id)a0 candidateController:(id)a1;
- (id)enumeratedCandidates;
- (void)forgetSelectedWord;
- (id)getCharacterCodeForCharacter:(id)a0;
- (char)handleEnd;
- (char)handleEscape;
- (char)handleForwardDelete;
- (char)handleHome;
- (char)handleKeyEvent;
- (char)handleKeypadCharacter;
- (char)handlePunctuationAndSymbolsAndUppercaseLetters:(unsigned short)a0;
- (char)handleReturn;
- (char)handleSpace;
- (char)handleSpaceForAssociatedWordsShownInlineState;
- (char)handleSpaceForNormalInlineStateWithDynamicPrompt;
- (char)handleSpaceForNormalInlineStateWithNonDynamicPrompt;
- (char)inlineBeginsWithWildcard;
- (char)isInlineEmpty;
- (char)matchExactCandidate;
- (double)numberOfVisibleCandidatesAtOutsetForOrientation:(unsigned long long)a0;
- (id)punctuationListForKey:(unsigned short)a0;
- (id)readingStringFromReading:(id)a0;
- (char)sendsSelectionKeyEventsToCandidateWindow;
- (char)shouldFadeLongReadings;
- (char)shouldOptimizeLayoutForFixedSize;
- (void)showAssociatedWords:(id)a0;
- (void)showCandidateWindowIfNeeded;
- (void)showPunctationCandidates;
- (char)supportsSubstitutionCandidates;
- (void)unlearnCandidate:(id)a0;
- (void)updateMarkedText;
- (char)validateInlineText;

@end

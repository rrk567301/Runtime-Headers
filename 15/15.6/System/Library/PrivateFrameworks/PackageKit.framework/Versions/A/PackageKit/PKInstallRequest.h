@class NSSet, NSString, NSArray, NSData, NSFileHandle, NSDictionary, NSMachPort;

@interface PKInstallRequest : NSObject <NSSecureCoding> {
    NSArray *_packageSpecifiers;
    char _useForegroundPriorityForStaging;
    double _frameworkVersion;
    NSString *_clientProcessName;
    char _openScripts;
    char _internalBundleVersionChecking;
    NSString *_scriptTargetVolume;
    NSString *_loggingIdentifier;
    char _ignoreIndexBom;
    char _useAFSCByDefault;
    char _isRecursive;
    NSData *_appStoreReceiptData;
    NSData *_appStoreMetadata;
    long long _simulatedInstallMode;
    unsigned long long _spaceRequiredForInstall;
    char _clientBlocksRestart;
    int _restartAction;
    NSString *_appPlaceholderPath;
    NSArray *_lockApplicationsDuringInstall;
    NSString *_blacklistPropertyListPath;
    NSFileHandle *_translocationFileHandle;
    char _bypassSystemVolumeEnforcementChecker;
    long long _rosettaTranslationMode;
    char _isOSInstall;
    char _isSoftwareUpdateOSInstall;
    char _isOSInstaller;
    NSString *_masterBOMPath;
    unsigned long long _packageExtractorSpeed;
    char _isMDMManagedAppInstall;
    NSDictionary *_untrustedEnvironment;
    NSMachPort *_clientBootstrapPort;
    NSMachPort *_clientSecuritySessionPort;
    int _clientUID;
    int _clientGID;
    struct { unsigned int x0; struct *x1; } *_authorizationEnvironment;
    struct AuthorizationOpaqueRef { } *_defaultAuthorization;
    struct AuthorizationOpaqueRef { } *_overrideAuthorization;
    int _minTrustLevel;
    char _allowExpiredCertificates;
    char _allowExpiredRoots;
    char _didPassPreflight;
    char _hasValidTrustLevel;
    int _evaluatedTrustLevel;
    NSArray *_certificateChain;
    NSSet *_teamIdentifiers;
    struct __SecTrust { } *_trustRef;
    NSDictionary *_policyMetPackageURLsToDigests;
}

@property (class, readonly) char supportsSecureCoding;

@property (retain, nonatomic) NSString *responsibleHostedTeamIdentifier;
@property (readonly) NSArray *packages;
@property (readonly) NSArray *packageSpecifiers;
@property (retain) NSString *destinationPath;
@property long long installPhases;
@property (readonly) struct { unsigned int val[8]; } clientAuditToken;
@property char userConsentedInstall;
@property long long rosettaTranslationMode;

+ (id)requestWithPackages:(id)a0 destination:(id)a1;

- (void)dealloc;
- (id)description;
- (id)init;
- (char)isEqual:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (struct AuthorizationOpaqueRef { } *)authorization;
- (void)setAuthorization:(struct AuthorizationOpaqueRef { } *)a0;
- (char)_isStageRequest;
- (void)_setClientBlocksRestart:(char)a0;
- (void)_setInternalBundleVersionChecking:(char)a0;
- (void)_setLoggingIdentifier:(id)a0;
- (void)_setRestartAction:(int)a0;
- (void)_setSpaceRequiredForInstall:(unsigned long long)a0;
- (void)_setUseOpenScriptsDirectory:(char)a0;
- (char)evaluateTrustReturningError:(id *)a0;
- (id)initWithPackages:(id)a0 destination:(id)a1;
- (void)removePackageSpecifiers:(id)a0;
- (void)setMinimumRequiredTrustLevel:(int)a0;
- (int)trustLevelReturningCertificateChain:(id *)a0;
- (char)requiresAuthorization;
- (char)_isRequestCompatibleWithRights:(id)a0;
- (char)_useHFSPlusCompressionByDefault;
- (char)_ignoreIndexBom;
- (id)teamIdentifiers;
- (id)_appPlaceholderPath;
- (id)_appStoreMetadata;
- (id)_appStoreReceiptData;
- (int)_authLevel;
- (id)_authorizationAsExternalData;
- (char)_bypassReadOnlyEnforcementChecker;
- (char)_canInstallPackageSpecifier:(id)a0 error:(id *)a1;
- (void)_clearTrustEvaluation;
- (char)_clientBlocksRestart;
- (id)_clientBootstrapPort;
- (int)_clientGID;
- (id)_clientProcessName;
- (id)_clientSecuritySessionPort;
- (int)_clientUID;
- (char)_containsAppleSoftwareOnly;
- (struct AuthorizationOpaqueRef { } *)_createAuthorizationRefWithExternalFormData:(id)a0;
- (char)_evaluateTrustForPackage:(id)a0 verifyingPayload:(char)a1 returningError:(id *)a2;
- (id)_externalFormDataForAuthorizationRef:(struct AuthorizationOpaqueRef { } *)a0;
- (unsigned long long)_extractionSpeed;
- (char)_hasValidInstallPathForAnyIAPContent;
- (id)_initWithPackages:(id)a0 destination:(id)a1 withOutError:(id *)a2;
- (id)_installBlacklistPlistPath;
- (id)_installItems;
- (id)_installSandboxName;
- (char)_internalBundleVersionChecking;
- (char)_isDeeplyEqualToRequest:(id)a0;
- (char)_isMDMManagedAppInstall;
- (char)_isOSInstall;
- (char)_isOSInstaller;
- (char)_isRecursive;
- (char)_isRequestAppStorePackagesOnly;
- (char)_isRequestForMacAppStore;
- (char)_isRequestForTestFlight;
- (char)_isRequestFromSoftwareUpdate;
- (char)_isRequestTestFlightPackagesOnly;
- (char)_isSoftwareUpdateOSInstall;
- (char)_isValidAppStoreRequest:(char)a0;
- (id)_lockApplicationsDuringInstall;
- (id)_loggingIdentifier;
- (id)_masterBOMPath;
- (char)_performPreflightCheckIncludingSizing:(char)a0 error:(id *)a1;
- (id)_policyMetPackageURLsToDigests;
- (char)_privilegedRequest;
- (void)_resolveInstallPathsReplacingPriorResults:(char)a0;
- (int)_restartAction;
- (char)_restrictedRootEnabled;
- (id)_scriptTargetVolume;
- (void)_setAppPlaceholderPath:(id)a0;
- (void)_setAppStoreMetadata:(id)a0;
- (void)_setAppStoreReceiptData:(id)a0;
- (void)_setBypassReadOnlyEnforcementChecker:(char)a0;
- (void)_setClientBootstrapPort:(id)a0;
- (void)_setClientSecuritySessionPort:(id)a0;
- (void)_setClientUID:(int)a0 andGID:(int)a1;
- (void)_setExtractionSpeed:(unsigned long long)a0;
- (void)_setIgnoreIndexBom:(char)a0;
- (void)_setInstallBlacklistPlistPath:(id)a0;
- (void)_setInstallSandboxName:(id)a0;
- (void)_setIsMDMManagedAppInstall:(char)a0;
- (void)_setIsOSInstall:(char)a0;
- (void)_setIsOSInstaller:(char)a0;
- (void)_setIsRecursive:(char)a0;
- (void)_setIsSoftwareUpdateOSInstall:(char)a0;
- (void)_setIsStageRequest:(char)a0;
- (void)_setLockApplicationsDuringInstall:(id)a0;
- (void)_setMasterBOMPath:(id)a0;
- (void)_setPolicyMetPackageURLsToDigests:(id)a0;
- (void)_setScriptTargetVolume:(id)a0;
- (void)_setSimulatedInstallMode:(long long)a0;
- (void)_setSkipsVerifyOnUnsignedPackages:(char)a0;
- (void)_setTranslocationFileHandle:(id)a0;
- (void)_setUntrustedEnvironment:(id)a0;
- (void)_setUseForegroundPriorityForStaging:(char)a0;
- (void)_setUseHFSPlusCompressionByDefault:(char)a0;
- (unsigned long long)_spaceRequiredForInstall;
- (id)_untrustedEnvironment;
- (void)_updateWithSingleTrustLevel:(int)a0 certificateChain:(id)a1 trust:(struct __SecTrust { } *)a2;
- (char)_useForegroundPriorityForStaging;
- (char)_useOpenScriptsDirectory;
- (char)_validAttributesForSoftwareUpdate:(id)a0;
- (char)_validateAuthorizationReturningAcquiredRights:(id *)a0;
- (char)authorizeForRight:(const char *)a0 allowingInteraction:(char)a1;
- (char)checkLocalPackagesReturningError:(id *)a0;
- (char)didPassPreflightCheck;
- (char)performPreflightCheckReturningError:(id *)a0;
- (char)preauthorizeAllowingInteraction:(char)a0;
- (void)setAllowExpiredCertificates:(char)a0;
- (void)setAllowExpiredRoots:(char)a0;
- (void)setAuthorizationEnvironment:(struct { unsigned int x0; struct *x1; } *)a0;
- (unsigned long long)totalSizeRequired;
- (int)trustLevelReturningTrustRef:(struct __SecTrust **)a0;

@end

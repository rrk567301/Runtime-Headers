@class WKWebExtensionController, NSString, WBTabGroupManager, NSHashTable, WBSCoreAnalyticsExtensionsStatistics, NSMutableDictionary, NSURL, NSMutableSet, WBSWebExtensionNewTabOverridePreferencesManager;
@protocol WBSWebExtensionsControllerDelegate, WBSWebExtensionWindow;

@interface WBSWebExtensionsController : WBSExtensionsController <WKWebExtensionControllerDelegate> {
    NSHashTable *_extensionsWithWebRequestListeners;
    NSHashTable *_extensionsWithWebNavigationListeners;
    NSMutableDictionary *_extensionIdentifierToData;
    NSMutableDictionary *_nativeRequestIdentifiersToCompletionHandlers;
    NSMutableSet *_nativeRequestExtensions;
    NSURL *_settingsFileURL;
    NSMutableSet *_migratedWebNavigationExtensionIdentifiers;
}

@property (class, readonly) double pendingSiteAccessTimeoutInterval;

@property (readonly, nonatomic) WKWebExtensionController *webKitController;
@property (readonly) unsigned long long toolbarItemIdealPointSize;
@property (weak, nonatomic) id<WBSWebExtensionsControllerDelegate> delegate;
@property (readonly, nonatomic) id<WBSWebExtensionWindow> lastFocusedWindow;
@property (readonly, nonatomic) WBSWebExtensionNewTabOverridePreferencesManager *tabOverridePreferencesManager;
@property (readonly, nonatomic) WBTabGroupManager *tabGroupManager;
@property (readonly, nonatomic) NSString *profileName;
@property (readonly, nonatomic) char hasNamedProfiles;
@property (readonly, nonatomic) WBSCoreAnalyticsExtensionsStatistics *extensionStatisticsReport;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_composedIdentifierForStateOfExtensionWithBundleIdentifier:(id)a0 developerIdentifier:(id)a1;
+ (id)_extensionPointIdentifier;
+ (id)extensionURLScheme;
+ (id)_commandShortcutConflictsForExtension:(id)a0 sortedWebExtensions:(id)a1;
+ (id)_firstConflctForCommand:(id)a0 inSortedWebExtensions:(id)a1;
+ (char)extensionIsEnabledInAnyWebApp:(id)a0 developerIdentifier:(id)a1;

- (void).cxx_destruct;
- (void)didCloseTab:(id)a0 windowIsClosing:(char)a1;
- (void)didOpenTab:(id)a0;
- (void)didOpenWindow:(id)a0;
- (void)webExtensionController:(id)a0 connectUsingMessagePort:(id)a1 forExtensionContext:(id)a2 completionHandler:(id /* block */)a3;
- (void)webExtensionController:(id)a0 didUpdateAction:(id)a1 forExtensionContext:(id)a2;
- (id)webExtensionController:(id)a0 focusedWindowForExtensionContext:(id)a1;
- (void)webExtensionController:(id)a0 openNewTabUsingConfiguration:(id)a1 forExtensionContext:(id)a2 completionHandler:(id /* block */)a3;
- (id)webExtensionController:(id)a0 openWindowsForExtensionContext:(id)a1;
- (void)webExtensionController:(id)a0 promptForPermissionMatchPatterns:(id)a1 inTab:(id)a2 forExtensionContext:(id)a3 completionHandler:(id /* block */)a4;
- (void)webExtensionController:(id)a0 promptForPermissionToAccessURLs:(id)a1 inTab:(id)a2 forExtensionContext:(id)a3 completionHandler:(id /* block */)a4;
- (void)webExtensionController:(id)a0 promptForPermissions:(id)a1 inTab:(id)a2 forExtensionContext:(id)a3 completionHandler:(id /* block */)a4;
- (void)webExtensionController:(id)a0 sendMessage:(id)a1 toApplicationWithIdentifier:(id)a2 forExtensionContext:(id)a3 replyHandler:(id /* block */)a4;
- (id)_urlForExtensionSettings;
- (char)anyWebExtensionContentBlockerEnabled;
- (char)extensionIsEnabled:(id)a0;
- (id)_domainForDefaultSearchProvider;
- (char)test_isRunningExtensionTestMode;
- (id)_allWindowsForWebExtension:(id)a0;
- (void)_clearNewTabPreferenceIfNecessaryForRemovedExtensionWithComposedIdentifier:(id)a0;
- (void)_createNewTabInWindow:(id)a0 tabIndex:(id)a1 url:(id)a2 makeActive:(char)a3 completionHandler:(id /* block */)a4;
- (id)_deviceUUIDString;
- (id)_displayNameForExtension:(id)a0;
- (id)_displayVersionForExtension:(id)a0;
- (id)_extensionURLToLoadFromPersistentStateURL:(id)a0;
- (id)_findWindowWithID:(double)a0;
- (void)_finishedLoadingExtensions;
- (void)_grantRequestedPermissionsIfNecessaryForExtension:(id)a0;
- (void)_loadEnabledExtension:(id)a0;
- (id)_persistentStateURLForExtensionURL:(id)a0;
- (void)_pinTab:(id)a0;
- (void)_relateParentTab:(id)a0 toTab:(id)a1;
- (id)_safariShortVersion;
- (char)_shouldDisableExtensionIfAdditionalPermissionsAreRequired:(id)a0 previousExtensionState:(id)a1;
- (void)_showAccessRequestAlertForExtension:(id)a0 domains:(id)a1 callingAPIName:(id)a2 responseBlock:(id /* block */)a3;
- (void)_showPromptForExtensionDisabledBecauseItDoesNotSupportThisVersionOfSafariWithMessage:(id)a0 extensionIdentifier:(id)a1;
- (void)_unloadPreviouslyEnabledExtension:(id)a0;
- (void)_updateManagedPrivateBrowsingStateForAllExtensions;
- (void)_updateManagedWebsiteAccessForAllExtensions;
- (id)_updatedExtensionStateForCurrentPermissions:(id)a0 previousExtensionState:(id)a1;
- (id)_versionNumberForExtension:(id)a0;
- (id)_webViewConfiguration;
- (id)composedIdentifiersOfExtensionsWithAutomaticallyGrantedPermissions;
- (void)didActivateWindow:(id)a0;
- (void)didHighlightTabs:(id)a0;
- (void)didMoveTab:(id)a0 fromIndex:(unsigned long long)a1 toIndex:(unsigned long long)a2;
- (void)didMoveTab:(id)a0 fromWindowWithID:(double)a1 indexInOldWindow:(unsigned long long)a2;
- (void)didReplaceTab:(id)a0 newTab:(id)a1;
- (void)didSelectTab:(id)a0 previousTab:(id)a1;
- (void)disableUnpackedExtensionsIfNecessary;
- (id)extensionStateKeysToCopy;
- (void)fireOnUpdatedEventForTab:(id)a0 withChangedProperties:(unsigned long long)a1;
- (id)initWithProfileServerID:(id)a0 userContentController:(id)a1;
- (void)initializeWebKitControllerIfNeededFromSettings:(char)a0;
- (char)isTab:(id)a0 visibleToExtension:(id)a1;
- (char)isWindow:(id)a0 visibleToExtension:(id)a1;
- (void)loadPermissionsIfNecessaryForExtension:(id)a0;
- (void)loadSuitableDiscoveredExtensions;
- (char)showOptionsForExtension:(id)a0 requestingWebView:(id)a1;
- (id)webExtensionForBaseURIHost:(id)a0;
- (id)webExtensionForComposedIdentifier:(id)a0;
- (id)webExtensionForExtension:(id)a0;
- (id)webExtensionForExtensionIdentifier:(id)a0;
- (id)canonicalURLForWebExtensionURL:(id)a0;
- (void)_applyManagedExtensionPermissionsForWebExtension:(id)a0;
- (void)_automaticallyGrantPermissionsForTopLevelDomain:(id)a0;
- (void)_deleteStateForExtensionWithComposedIdentifier:(id)a0;
- (void)_deleteStorageForExtensionWithComposedIdentifier:(id)a0;
- (id)_displayShortNameForExtension:(id)a0;
- (char)_extensionShouldBeAutomaticallyEnabled:(id)a0;
- (char)_extensionShouldBeEnabled:(id)a0;
- (id)_filteredOriginsRemovingAllHostsPatterns:(id)a0 containedAllHostsPattern:(char *)a1;
- (void)_loadPermissionsFromStorageForWebExtension:(id)a0 completionHandler:(id /* block */)a1;
- (void)_migrateWebExtensionsEnabledInSafariToWebAppIfNecessary;
- (void)_permissionsMayHaveBeenChangedExternallyForExtension:(id)a0 previousExtensionState:(id)a1;
- (void)_savePermissionsToStorageAndPostDidChangeNotificationSoonForWebExtension:(id)a0 permissionsWereUpdatedDueToAnExternalChange:(char)a1;
- (void)_savePermissionsToStorageForWebExtension:(id)a0;
- (void)_savePermissionsToStorageIfNecessaryAndPostDidChangeNotificationForWebExtension:(id)a0;
- (void)_updateExtensionNewTabPageIfNecessary;
- (void)_updateExtensionStateIfPermissionsIncreased:(id)a0;
- (void)_updateExtensionStateIfThisVersionOfSafariIsNotSupported:(id)a0;
- (id)_urlForExtensionSettingsForProductionSafari;
- (id)_urlForWebKitExtensionsDirectory;
- (void)_webExtensionDataPermissionsWereGranted:(id)a0;
- (void)_webExtensionDataPermissionsWereRevokedOrRemoved:(id)a0;
- (void)_webExtensionEnabledStateInPrivateBrowsingChanged:(id)a0;
- (void)clearPermissionStateUsedToDetermineIfExtensionShouldBeDisabledOnUpgradeForExtension:(id)a0;
- (id)enabledExtensionsWithPrivateBrowsingEnabled:(char)a0;
- (id)installationDateForExtension:(id)a0;
- (id)lastSeenUniqueIdentiferForWebExtension:(id)a0;
- (void)removeOldExtensionStateForExtension:(id)a0;
- (void)savePermissionStateUsedToDetermineIfExtensionShouldBeDisabledOnUpgradeForWebExtension:(id)a0;
- (void)saveUniqueIdentifierToStorageForWebExtension:(id)a0;
- (void)sendMessage:(id)a0 toApplicationWithID:(id)a1 fromExtensionWithIdentifier:(id)a2 completionHandler:(id /* block */)a3;
- (void)setExtension:(id)a0 isEnabled:(char)a1 dueToUserGesture:(char)a2 skipSavingToStorage:(char)a3;
- (void)webExtensionController:(id)a0 sendMessage:(id)a1 toApplicationIdentifier:(id)a2 forExtensionContext:(id)a3 replyHandler:(id /* block */)a4;
- (id)webExtensionForBundleIdentifier:(id)a0;
- (id)webExtensionForURL:(id)a0;

@end

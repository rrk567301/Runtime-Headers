@class MRGroupSessionToken, NSString, NSArray, NSData, NSDictionary, _MRDeviceInfoMessageProtobuf;

@interface MRDeviceInfo : NSObject <NSCopying, NSSecureCoding>

@property (class, readonly) char supportsSecureCoding;

@property (readonly, nonatomic) NSString *effectiveID;
@property (readonly, nonatomic) _MRDeviceInfoMessageProtobuf *protobuf;
@property (readonly, copy, nonatomic) NSString *WHAIdentifier;
@property (readonly, nonatomic) char supportsImplicitChangeShuffleAndRepeatModeInSetPlaybackQueueCommandOptions;
@property (nonatomic) unsigned int lastSupportedClusterType;
@property (nonatomic) char hasLastSupportedClusterType;
@property (nonatomic) char supportsOutputContextSync;
@property (nonatomic) char hasSupportsOutputContextSync;
@property (nonatomic) unsigned long long lastSupportedProtocolMessageType;
@property (nonatomic) char hasLastSupportedProtocolMessageType;
@property (readonly, nonatomic) char hasPlaceholderGroupSession;
@property (readonly, nonatomic) unsigned int deviceSubtype;
@property (nonatomic) long long deviceClass;
@property (nonatomic) char hasDeviceClass;
@property (nonatomic) unsigned long long protocolVersion;
@property (nonatomic) char hasProtocolVersion;
@property (nonatomic) unsigned long long groupedDeviceCount;
@property (nonatomic) char hasGroupedDeviceCount;
@property (nonatomic) unsigned long long sharedQueueVersion;
@property (nonatomic) char hasSharedQueueVersion;
@property (nonatomic) unsigned long long groupLogicalDeviceCount;
@property (nonatomic) char hasGroupLogicalDeviceCount;
@property (nonatomic) char supportsSystemPairing;
@property (nonatomic) char hasSupportsSystemPairing;
@property (nonatomic) char supportsACL;
@property (nonatomic) char hasSupportsACL;
@property (nonatomic) char supportsSharedQueue;
@property (nonatomic) char hasSupportsSharedQueue;
@property (nonatomic) char supportsExtendedMotion;
@property (nonatomic) char hasSupportsExtendedMotion;
@property (nonatomic, getter=isTightSyncGroup) char tightSyncGroup;
@property (nonatomic) char hasTightSyncGroup;
@property (nonatomic, getter=isPairingAllowed) char pairingAllowed;
@property (nonatomic) char hasPairingAllowed;
@property (nonatomic, getter=isProxyGroupPlayer) char proxyGroupPlayer;
@property (nonatomic) char hasProxyGroupPlayer;
@property (nonatomic, getter=isConnected) char connected;
@property (nonatomic) char hasConnected;
@property (nonatomic, getter=isGroupLeader) char groupLeader;
@property (nonatomic) char hasGroupLeader;
@property (nonatomic, getter=isAirPlayActive) char airPlayActive;
@property (nonatomic) char hasAirPlayActive;
@property (nonatomic) char supportsMultiplayer;
@property (nonatomic) char hasSupportsMultiplayer;
@property (nonatomic) char parentGroupContainsDiscoverableGroupLeader;
@property (nonatomic) char hasParentGroupContainsDiscoverableGroupLeader;
@property (readonly, nonatomic) char effectiveParentGroupContainsDiscoverableGroupLeader;
@property (nonatomic) char groupContainsDiscoverableGroupLeader;
@property (nonatomic) char hasGroupContainsDiscoverableGroupLeader;
@property (nonatomic) char isEligibleForHostingGroupSessionExcludingAcknowledgements;
@property (nonatomic) char hasIsEligibleForHostingGroupSessionExcludingAcknowledgements;
@property (nonatomic) unsigned int clusterType;
@property (nonatomic) char hasClusterType;
@property (nonatomic, getter=isClusterAware) char clusterAware;
@property (nonatomic) char hasIsClusterAware;
@property (nonatomic) unsigned long long configuredClusterSize;
@property (nonatomic) char hasConfiguredClusterSize;
@property (nonatomic, getter=isClusterLeader) char clusterLeader;
@property (nonatomic) char hasIsClusterLeader;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *identifier;
@property (copy, nonatomic) NSString *localizedModelName;
@property (copy, nonatomic) NSString *buildVersion;
@property (copy, nonatomic) NSString *bundleIdentifier;
@property (copy, nonatomic) NSString *bundleVersion;
@property (copy, nonatomic) NSString *systemMediaApplication;
@property (copy, nonatomic) NSString *systemPodcastApplication;
@property (copy, nonatomic) NSString *systemBooksApplication;
@property (copy, nonatomic) NSString *deviceUID;
@property (copy, nonatomic) NSString *localReceiverPairingIdentity;
@property (copy, nonatomic) NSString *managedConfigurationDeviceIdentifier;
@property (copy, nonatomic) NSString *tightSyncUID;
@property (copy, nonatomic) NSString *groupUID;
@property (copy, nonatomic) NSString *airPlayGroupUID;
@property (copy, nonatomic) NSString *groupName;
@property (copy, nonatomic) NSString *senderDefaultGroupUID;
@property (copy, nonatomic) NSData *bluetoothAddress;
@property (copy, nonatomic) NSArray *groupedDevices;
@property (copy, nonatomic) NSArray *clusteredDevices;
@property (copy, nonatomic) NSArray *allClusteredDevices;
@property (copy, nonatomic) NSArray *airPlayReceivers;
@property (copy, nonatomic) NSString *linkAgent;
@property (copy, nonatomic) NSString *clusterID;
@property (copy, nonatomic) NSString *clusterLeaderID;
@property (copy, nonatomic) NSString *modelID;
@property (copy, nonatomic) NSString *routingContextID;
@property (copy, nonatomic) NSString *computerName;
@property (copy, nonatomic) MRGroupSessionToken *groupSessionToken;
@property (copy, nonatomic) MRDeviceInfo *leaderDeviceInfo;
@property (copy, nonatomic) NSString *activeSystemEndpointUID;
@property (readonly, copy, nonatomic) NSData *data;
@property (readonly, nonatomic) long long preferredEncoding;
@property (readonly, nonatomic) char hasPreferredEncoding;
@property (readonly, nonatomic) char isCompanion;
@property (readonly, nonatomic) char isGizmo;
@property (readonly, copy, nonatomic) NSString *parentGroupID;
@property (readonly, nonatomic) char supportsTwoHop;
@property (readonly, copy, nonatomic) NSDictionary *dictionaryRepresentation;
@property (readonly, copy, nonatomic) NSString *minimalDescription;
@property (readonly, nonatomic) MRDeviceInfo *skeleton;
@property (readonly, nonatomic) char containsLocalDevice;

+ (long long)deviceClass;
+ (id)dataFromDeviceInfos:(id)a0;
+ (id)deviceInfosFromData:(id)a0;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)description;
- (unsigned long long)hash;
- (char)isEqual:(id)a0;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)initWithData:(id)a0;
- (id)deltaDescriptionFromDeviceInfo:(id)a0;
- (char)containsDevice:(id)a0;
- (id)deltaDescriptionFromDeviceInfo:(id)a0 minimal:(char)a1;
- (id)initWithOutputDevice:(id)a0;
- (id)initWithOutputDeviceDescription:(id)a0;
- (id)initWithProtobuf:(id)a0;
- (char)isAwareOfCluster:(unsigned int)a0;
- (char)matchesUID:(id)a0;
- (id)minimalDeltaDescriptionFromDeviceInfo:(id)a0;
- (void)setPreferredEncoding:(long long)a0;

@end

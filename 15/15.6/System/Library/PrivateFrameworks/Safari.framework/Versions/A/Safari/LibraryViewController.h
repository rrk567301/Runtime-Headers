@class LibraryTableCellView, NSMutableDictionary, LibraryItem, NSMutableArray, NSBox, LibraryOutlineView, NSLayoutConstraint, NSString, LibraryItemHeader, NSMutableSet, LibraryItemTabGroup, NSArray, WBSFaviconRequestsController, WBTabGroupManager;
@protocol LibraryViewControllerDelegate;

@interface LibraryViewController : NSViewController <LibraryOutlineViewDelegate, LibraryTableCellViewDelegate, NSOutlineViewDataSource, NSOutlineViewDelegate, WBTabGroupManagerObserver, LibraryItemTabGroupDelegate, CustomKeyViewLoop, SidebarContentViewController> {
    NSMutableArray *_libraryItems;
    WBTabGroupManager *_tabGroupManager;
    NSMutableDictionary *_tabGroupToLibraryItemDictionary;
    NSMutableArray *_libraryTabGroupItems;
    LibraryItemHeader *_tabGroupsHeaderItem;
    unsigned long long _numberOfTabGroupItems;
    LibraryItemTabGroup *_localTabGroupItem;
    NSMutableArray *_unnamedTabGroupItems;
    char _ignoreSelectionDidChangeNotification;
    char _shouldDelayUpdatingTabGroups;
    char _shouldPauseTabGroupUpdates;
    LibraryTableCellView *_fromFriendsLibraryTableCellView;
    NSArray *_bottomLibraryItems;
    WBSFaviconRequestsController *_requestsController;
    char _ignoreTabGroupChange;
    char _selectingMultipleTabs;
    char _previouslySelectedMultipleTabs;
    char _shouldUseCachedExpansionStates;
    char _cachedTabGroupHeaderExpansionState;
    NSMutableSet *_cachedTabGroupsExpansionState;
    NSMutableSet *_tabGroupsUpdatingTabs;
    LibraryItem *_iCloudTabsLibraryItem;
    LibraryItem *_sharedWithYouLibraryItem;
}

@property (weak) LibraryOutlineView *outlineView;
@property (weak, nonatomic) LibraryOutlineView *bottomOutlineView;
@property (weak, nonatomic) NSLayoutConstraint *heightConstraint;
@property (weak, nonatomic) NSBox *separator;
@property (retain, nonatomic) NSString *tabGroupUUIDToSelectAndEditAfterSidebarUpdate;
@property (readonly, nonatomic) char isEditingSelectedGroupTitle;
@property (readonly, nonatomic) char isSelectedTabGroupTextFieldFirstResponder;
@property (nonatomic) double topMargin;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bookmarksTargetFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } readingListTargetFrame;
@property (weak, nonatomic) id<LibraryViewControllerDelegate> delegate;
@property (readonly, nonatomic) char expandedStateOfTabGroupHeader;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)saveSidebarWidth:(double)a0;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)copy:(id)a0;
- (char)outlineView:(id)a0 acceptDrop:(id)a1 item:(id)a2 childIndex:(long long)a3;
- (id)outlineView:(id)a0 child:(long long)a1 ofItem:(id)a2;
- (void)outlineView:(id)a0 draggingSession:(id)a1 endedAtPoint:(struct CGPoint { double x0; double x1; })a2 operation:(unsigned long long)a3;
- (void)outlineView:(id)a0 draggingSession:(id)a1 willBeginAtPoint:(struct CGPoint { double x0; double x1; })a2 forItems:(id)a3;
- (char)outlineView:(id)a0 isGroupItem:(id)a1;
- (char)outlineView:(id)a0 isItemExpandable:(id)a1;
- (long long)outlineView:(id)a0 numberOfChildrenOfItem:(id)a1;
- (id)outlineView:(id)a0 objectValueForTableColumn:(id)a1 byItem:(id)a2;
- (id)outlineView:(id)a0 pasteboardWriterForItem:(id)a1;
- (id)outlineView:(id)a0 rowViewForItem:(id)a1;
- (id)outlineView:(id)a0 selectionIndexesForProposedSelection:(id)a1;
- (char)outlineView:(id)a0 shouldExpandItem:(id)a1;
- (char)outlineView:(id)a0 shouldSelectItem:(id)a1;
- (char)outlineView:(id)a0 shouldShowOutlineCellForItem:(id)a1;
- (unsigned long long)outlineView:(id)a0 validateDrop:(id)a1 proposedItem:(id)a2 proposedChildIndex:(long long)a3;
- (id)outlineView:(id)a0 viewForTableColumn:(id)a1 item:(id)a2;
- (void)outlineViewItemDidCollapse:(id)a0;
- (void)outlineViewItemDidExpand:(id)a0;
- (void)outlineViewSelectionDidChange:(id)a0;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (id)deviceIdentifier;
- (void)_copySelection:(id)a0;
- (void)_selectWindowContentItemOfType:(long long)a0;
- (id)safari_keyViews;
- (long long)_expectedSelectedBottomRowIndex;
- (id)_selectedLibraryItemVerticalTab;
- (id /* block */)_tabOverviewHandlerForTabGroup:(id)a0;
- (void)updateTabGroups;
- (void)_appendTabsWithTitles:(id)a0 urls:(id)a1 toTabGroup:(id)a2;
- (void)_browserTabViewItemDidChangeIcon:(id)a0;
- (id)_browserWindowController;
- (void)_buildBottomLibraryItems;
- (void)_buildLibraryItems;
- (void)_buildTabGroupsHeaderItem;
- (void)_cacheExpandedStates;
- (char)_canCloseSelectedTabs:(id)a0;
- (char)_canPersistTabsAndTabGroups;
- (id /* block */)_closeOtherTabsHandler:(id)a0;
- (id /* block */)_closeTabHandlerForTabs:(id)a0;
- (void)_closeTabs:(id)a0;
- (id /* block */)_closeTabsBelowHandler:(id)a0;
- (id)_contextMenuBuilderForRow:(long long)a0;
- (id /* block */)_copyLinkForTabHandlerForTabs:(id)a0;
- (id /* block */)_copyLinksHandlerForTabGroup:(id)a0;
- (id /* block */)_createTabGroupFromThisWindowHandler:(id)a0;
- (id /* block */)_deleteHandlerForTabGroup:(id)a0;
- (void)_didUpdatePinnedTab:(id)a0;
- (unsigned long long)_dragOperationWithInfo:(id)a0 item:(id)a1 childIndex:(long long)a2;
- (id /* block */)_duplicateTabHandlerForTabs:(id)a0;
- (void)_getItemsToRemoveInsertAndMoveFromCurrentUUIDs:(id)a0 toUUIDs:(id)a1 outRemove:(id *)a2 outInsert:(id *)a3 outMove:(id *)a4;
- (void)_handleClickInOutlineView:(id)a0 atRow:(long long)a1;
- (unsigned long long)_indexOfHeaderItemOfType:(long long)a0;
- (void)_insertStartPagesIfNecessary;
- (char)_isLibraryItem:(id)a0 draggableAtIndex:(long long)a1;
- (char)_isSafariShowingFullHeightViewController;
- (char)_isTabGroupHeaderExpanded;
- (id /* block */)_moveTabToNewWindowHandler:(id)a0;
- (id /* block */)_moveToNewTabGroupHandler:(id)a0;
- (void)_reloadBottomOutlineView;
- (id /* block */)_renameHandlerForRow:(unsigned long long)a0;
- (void)_reselectTabGroup:(id)a0;
- (void)_rowClicked:(id)a0;
- (void)_selectTabIfNecessary;
- (void)_selectTabWithUUID:(id)a0 inTabGroupLibraryItem:(id)a1;
- (id)_selectedLibraryItemTabGroup;
- (id)_selectedTabGroupLibraryCellView;
- (char)_shouldNavigateToTabView:(long long)a0;
- (id /* block */)_showHideTabHandlerForLibraryItem:(id)a0;
- (void)_showTabOverview:(id)a0;
- (id /* block */)_sortByTitleHandler:(id)a0;
- (id /* block */)_sortByWebsiteHandler:(id)a0;
- (id)_tabGroupCellViewAtRow:(long long)a0;
- (id)_tabGroupForDraggingInfo:(id)a0;
- (void)_tabMultiselectionDidChange;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_targetFrameForItemType:(long long)a0;
- (void)_updateLocalTabGroupIconInCellView:(id)a0 libraryItem:(id)a1;
- (void)_updateOutlineViewItemsUnder:(id)a0 removing:(id)a1 inserting:(id)a2 moving:(id)a3;
- (void)_updateSeparator:(id)a0;
- (void)_updateTab:(id)a0 withParentTabGroupItem:(id)a1;
- (void)_updateTabGroupItem:(id)a0 withTabGroup:(id)a1;
- (void)_updateTabGroupsHeaderItem;
- (void)_updateTabTitles;
- (void)_updateTabTitlesFromBrowserWindowNotification:(id)a0;
- (void)_updateTabTrailingButtonsForLibraryItemTabGroup:(id)a0;
- (void)_updateTabsInTabGroupWithUUID:(id)a0;
- (char)_validPinnedTabsDragOperationWithTabs:(id)a0 isLocal:(char)a1 toTabGroup:(id)a2 withTabs:(id)a3 afterTab:(id)a4 withTabItem:(id)a5;
- (id)contextMenuForEvent:(id)a0;
- (void)didUpdateTabTitlesWithLibraryItemTabGroup:(id)a0 libraryItemVerticalTabs:(id)a1;
- (void)expandTabGroupHeader;
- (void)libraryTableCellViewTitleDidChange:(id)a0;
- (void)outlineView:(id)a0 didClickTableColumn:(id)a1 row:(long long)a2 event:(id)a3;
- (void)outlineView:(id)a0 didPressAndHoldToEditRowAtIndex:(long long)a1;
- (id)outlineView:(id)a0 menuForEvent:(id)a1 inRow:(long long)a2 tableColumn:(id)a3;
- (void)outlineView:(id)a0 selectRowAfterLongPress:(long long)a1;
- (char)outlineView:(id)a0 selectionShouldChangeFromMouseDownInRow:(long long)a1 tableColumn:(id)a2;
- (char)outlineView:(id)a0 shouldClickTableColumn:(id)a1 row:(long long)a2 event:(id)a3;
- (char)outlineView:(id)a0 shouldEditOnDoubleClick:(id)a1 inRow:(long long)a2 tableColumn:(id)a3;
- (char)outlineView:(id)a0 shouldEditOnSingleClick:(id)a1 inRow:(long long)a2 tableColumn:(id)a3;
- (char)outlineViewShouldChangeSelectionWhenContextMenuAppears:(id)a0;
- (char)outlineview:(id)a0 shouldHandleLongPressAsClick:(long long)a1;
- (void)selectBottomElementIfNecessary;
- (void)selectSharedWithYou;
- (void)selectTabGroupWithUUID:(id)a0;
- (char)shouldShowProfileTitleInLibraryItemTabGroup:(id)a0;
- (void)startEditingCellViewForTabGroupAfterSidebarUpdate;
- (void)tabGroupManager:(id)a0 didInsertProfileWithIdentifier:(id)a1;
- (void)tabGroupManager:(id)a0 didRemoveProfileWithIdentifier:(id)a1;
- (void)tabGroupManager:(id)a0 didUpdateProfileWithIdentifier:(id)a1 difference:(id)a2;
- (void)tabGroupManager:(id)a0 didUpdateTabGroupWithUUID:(id)a1;
- (void)tabGroupManager:(id)a0 didUpdateTabWithUUID:(id)a1 userDriven:(char)a2;
- (void)tabGroupManager:(id)a0 didUpdateTabsInTabGroupWithUUID:(id)a1;
- (void)tabGroupManagerDidFinishSetup:(id)a0;
- (void)tabGroupManagerDidUpdateTabGroups:(id)a0;
- (id)tabGroups;
- (void)toggleDisclosureButton:(id)a0;
- (void)updateLocalTabGroupTitle;
- (void)updateTabGroupTabs:(id)a0 inParentTabGroup:(id)a1;
- (void)updateTabSelectionIfNeeded;
- (void)wasInstalledBySidebarViewController:(id)a0;
- (void)willBeRemovedBySidebarViewController:(id)a0;

@end

@class NSPreviewRepresentingActivityItem, NSString, NSMutableDictionary, NSImage, NSMutableSet, NSWindow, NSMapTable, NSSharingServicePicker;

@interface BrowserShareManager : NSObject <BrowserSharingServiceInvocationDelegate, NSMenuDelegate, NSMenuItemValidation, NSSharingServiceDelegate, NSSharingServicePickerDelegate> {
    NSMutableDictionary *_browserSharingOperationMap;
    NSMutableSet *_activeInvocations;
    NSMapTable *_browserSharingServiceForServiceCache;
    NSPreviewRepresentingActivityItem *_collaborationActivityItem;
    NSSharingServicePicker *_sharingCollaborationServicePicker;
    char _isShowingSharingServicePicker;
}

@property (retain, nonatomic) NSSharingServicePicker *sharingServicePicker;
@property (retain, nonatomic) NSWindow *sourceWindow;
@property (copy, nonatomic) id /* block */ performWithItemsBlock;
@property (retain, nonatomic) NSImage *transitionImage;
@property (nonatomic) char includesQuickNoteInShareMenu;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedManager;

- (id)init;
- (void).cxx_destruct;
- (char)handleEvent:(id)a0;
- (void)sharingService:(id)a0 didFailToShareItems:(id)a1 error:(id)a2;
- (void)sharingService:(id)a0 didShareItems:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sharingService:(id)a0 sourceFrameOnScreenForShareItem:(id)a1;
- (id)sharingService:(id)a0 sourceWindowForShareItems:(id)a1 sharingContentScope:(long long *)a2;
- (id)sharingService:(id)a0 transitionImageForShareItem:(id)a1 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (id)sharingServicePicker:(id)a0 delegateForSharingService:(id)a1;
- (id)sharingServicePicker:(id)a0 sharingServicesForItems:(id)a1 mask:(unsigned long long)a2 proposedSharingServices:(id)a3;
- (char)validateMenuItem:(id)a0;
- (id)_addToDockGlyph;
- (id)_createShareMenuItemWithAction:(SEL)a0;
- (void)browserViewControllerWillClose:(id)a0;
- (void)_addBookmarkForUnifiedFieldURL;
- (unsigned long long)_addBrowserSharingOperation:(id)a0;
- (id)_addQuickNoteGlyph;
- (id)_addToBookmarksGlyph;
- (void)_addToDockForUnifiedFieldURL;
- (id)_addToDockSharingServiceForItems:(id)a0;
- (void)_addUnifiedFieldURLToReadingList;
- (id)_browserDocument;
- (id)_browserSharingServiceForService:(id)a0;
- (id)_browserSharingServiceForService:(id)a0 items:(id)a1;
- (id)_browserViewControllerForSharePopover;
- (char)_canShareThisPageViaEmail;
- (id)_convertActiveWebPageShareItemsIfNecessaryForSharingService:(id)a0 originalItems:(id)a1;
- (void)_copyLinkForUnifiedFieldURL;
- (id)_copyLinkGlyph;
- (id)_copyLinkSharingServiceForItems:(id)a0;
- (id)_currentBrowserViewController;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentTabContentViewFrameForSnapshot;
- (void)_didFinishUsingSharingService:(id)a0;
- (void)_finalizeJavaScriptForSharingServiceInvocation:(id)a0 arguments:(id)a1;
- (void)_getFinalizeArgumentsForReturnedItems:(id)a0 completion:(id /* block */)a1;
- (void)_handleSelectionOfSharingService:(id)a0;
- (void)_handleShareMenuItemWithPopoverPositioningView:(id)a0;
- (unsigned long long)_indexToInsertFirstSharingServiceThatSupportsPDF:(id)a0;
- (char)_isEmailLinkToThisPageMenuItemKeyEquivalent:(id)a0;
- (char)_isEmailThisPageMenuItemKeyEquivalent:(id)a0;
- (void)_mailLinkFromShareMenuKeyEquivalent:(id)a0;
- (void)_mailPageFromShareMenuKeyEquivalent:(id)a0;
- (void)_mailPageMailingLinkByDefault:(char)a0;
- (id)_openInBrowserServiceForItems:(id)a0;
- (void)_openInDefaultBrowserForUnifiedFieldURL;
- (void)_openUniversalLinkInAppForUnifiedFieldURL;
- (id)_openUniversalLinkInAppServiceForItems:(id)a0;
- (id)_pdfItemProviderForURL:(id)a0 browserViewController:(id)a1;
- (void)_performFromSharingServicePicker:(id)a0 withItems:(id)a1;
- (void)_performSharingService:(id)a0 withItems:(id)a1 window:(id)a2 serviceParameters:(id)a3 shouldRunJavaScriptIfAvailable:(char)a4;
- (void)_processJavaScriptFinalizeReturnedItems:(id)a0 forSharingService:(id)a1;
- (char)_removeSharingServiceWithName:(id)a0 fromArray:(id)a1;
- (char)_runJavaScriptForSharingService:(id)a0 items:(id)a1 serviceParameters:(id)a2;
- (id)_servicesThatSupportPDFForURL:(id)a0;
- (void)_shareMenuItemSelected:(id)a0;
- (void)_shareMenuItemSelectedFromUnifiedFieldMoreMenu:(id)a0;
- (char)_shareMenuShouldBeEnabled;
- (char)_sharingService:(id)a0 supportsPDFForURL:(id)a1;
- (id)_sharingServicePicker:(id)a0 sharingServicesForItems:(id)a1 proposedSharingServices:(id)a2;
- (id)_sharingServicesForSharingServicePickerForItems:(id)a0 proposedSharingServices:(id)a1;
- (id)_sourceWindowForSharePopover;
- (id)_titleForSharingService:(id)a0;
- (id)_urlForSharePopover;
- (id)_urlInSharedItems:(id)a0;
- (id)collaborationActivityItemForTabGroup:(id)a0 window:(id)a1;
- (id)createShareMenuItemForToolbarOverflowMenu;
- (id)createShareMenuItemForUnifiedFieldMoreMenu;
- (void)didRunJavaScriptForSharingExtensionWithID:(unsigned long long)a0 results:(id)a1;
- (id)emailServiceParametersDictionaryForService:(id)a0 uuid:(id)a1 pageTitle:(id)a2 emailURLByDefault:(char)a3 isWebArchiveAvailable:(char)a4 isReaderAvailable:(char)a5 isShowingReader:(char)a6;
- (void)initializeShareMenuItemInFileMenu:(id)a0;
- (void)performSharingService:(id)a0 withItems:(id)a1 window:(id)a2 defaultSubject:(id)a3;
- (void)performSharingService:(id)a0 withItems:(id)a1 window:(id)a2 serviceParameters:(id)a3;
- (void)sharingServiceInvocation:(id)a0 didShareItems:(id)a1;
- (id)sharingServiceInvocation:(id)a0 transitionImageWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (void)sharingServiceInvocationDidFail:(id)a0;
- (void)showCollaborationSharingServicePickerForTabGroup:(id)a0 window:(id)a1 atBottomOfView:(id)a2 positioningRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 performWithItemsHandler:(id /* block */)a4;
- (void)showSharingServicePickerForBrowserViewController:(id)a0 window:(id)a1 atBottomOfView:(id)a2 performWithItemsHandler:(id /* block */)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sourceFrameOnScreenForSharingServiceInvocation:(id)a0;
- (id)sourceWindowForSharingServiceInvocation:(id)a0 sharingContentScope:(long long *)a1;

@end

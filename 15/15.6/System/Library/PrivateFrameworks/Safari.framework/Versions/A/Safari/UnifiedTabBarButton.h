@class NSStackView, UnifiedTabBarItem, LayerView, NSImageView, RolloverImageButton, NSImage, NSString, NSLayoutConstraint, UnifiedTabBarVisualEffectView, NSArray, NSView, CABackdropLayer, NSTextField;
@protocol UnifiedTabBarButtonDelegate, UnifiedTabBarAccessibilityElementDelegate;

@interface UnifiedTabBarButton : NSView <NSAccessibilityRadioButton, RolloverTrackingButtonDelegate, NSSpringLoadingDestination> {
    NSView *_unifiedField;
    NSView *_unifiedFieldContainerView;
    LayerView *_backgroundView;
    NSView *_contentView;
    NSView *_iconContainerView;
    NSStackView *_stackView;
    NSImageView *_iconImageView;
    NSTextField *_titleTextField;
    NSTextField *_detailTextField;
    RolloverImageButton *_closeButton;
    NSImageView *_pinnedIndicator;
    NSLayoutConstraint *_smallTabIconWidthAnchor;
    NSLayoutConstraint *_largeTabIconWidthAnchor;
    UnifiedTabBarVisualEffectView *_visualEffectBackground;
    NSImageView *_visualEffectBackgroundHighlight;
    CABackdropLayer *_backdropLayer;
    char _dragging;
}

@property (weak, nonatomic) id<UnifiedTabBarButtonDelegate, UnifiedTabBarAccessibilityElementDelegate> delegate;
@property (readonly, nonatomic) long long tabBarStyle;
@property (retain, nonatomic) UnifiedTabBarItem *tabBarItem;
@property (nonatomic) long long state;
@property (retain, nonatomic) NSImage *icon;
@property (retain, nonatomic) NSImage *placeholderIcon;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *activeTitle;
@property (copy, nonatomic) NSString *placeholderTitle;
@property (copy, nonatomic) NSArray *accessoryViews;
@property (copy, nonatomic) NSString *backdropGroupName;
@property (nonatomic) char canShowCloseButton;
@property (nonatomic, getter=isHighlighted) char highlighted;
@property (nonatomic, getter=isPinned) char pinned;
@property (nonatomic, getter=isSelected) char selected;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)titleFont;
+ (double)titleWidthForButtonWidth:(double)a0;

- (void).cxx_destruct;
- (void)layout;
- (id)_backgroundColor;
- (char)_canShowCloseButton;
- (void)_closeButtonClicked:(id)a0;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)a0;
- (id)accessibilityChildren;
- (id)accessibilityHelp;
- (id)accessibilityIdentifier;
- (id)accessibilityLabel;
- (void)accessibilityPerformAction:(id)a0;
- (char)accessibilityPerformPress;
- (char)accessibilityPerformShowMenu;
- (id)accessibilitySubrole;
- (id)accessibilityTitle;
- (id)accessibilityValue;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (char)isAccessibilityElement;
- (id)menuForEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (char)mouseDownCanMoveWindow;
- (id)pinnedTabDragImageOfSize:(struct CGSize { double x0; double x1; })a0;
- (void)springLoadingActivated:(char)a0 draggingInfo:(id)a1;
- (unsigned long long)springLoadingEntered:(id)a0;
- (void)springLoadingHighlightChanged:(id)a0;
- (id)tabDragImageOfSize:(struct CGSize { double x0; double x1; })a0;
- (void)viewDidChangeEffectiveAppearance;
- (void)viewDidMoveToWindow;
- (void)endDragging;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_backgroundFrameForButtonFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_backdropLayerFrameForBackgroundView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)_isDraggableButton;
- (char)_keyWindowOrEditing;
- (id)_pinnedIndicator;
- (char)_pointInside:(struct CGPoint { double x0; double x1; })a0 margin:(double)a1;
- (void)_setUpCloseButtonForState;
- (char)_shouldDisplayOverlappingCloseButtonForEvent:(id)a0;
- (void)_updateActiveStateChange;
- (void)_updateTitleAndIcon;
- (void)_updateViewsForState;
- (double)_windowDragMargin;
- (void)addAnimationsForChangesFromState:(long long)a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)initWithTabBarStyle:(long long)a0;
- (char)pointInside:(struct CGPoint { double x0; double x1; })a0;
- (char)pointInsideWithMargins:(struct CGPoint { double x0; double x1; })a0;
- (void)startDragging;
- (void)updateBackgroundAppearance;
- (void)updateCloseButtonVisibility;
- (void)updateIconAppearance;

@end

@class WBTab, PerSitePreferencesPopoverManager, SidebarViewController, AutomationTouchBarProvider, NSWindow, NSAppearance, WBSFaviconRequestsController, AssistantCalloutPopoverViewController, LibrarySidebarNavigationViewController, NSLayoutConstraint, UnifiedFieldEditor, NSTextView, NSObject, WBProfile, SafariAppExtensionsController, NSUUID, PopupWindowUnifiedField, NSMenu, NSView, NSMutableArray, BackgroundLoadController, SafariWebExtensionsController, NSTimer, BrowserWindowContentSplitViewController, BookmarksSidebarTitleTextView, StatusMessage, BrowserTabGroupPersistentState, TabBarView, UnifiedField, BrowserTabViewItem, UnifiedTabBar, NSPopover, WKWebpagePreferences, CKShare, SearchProvidersController, BrowserWindowContentViewController, TipsCoordinator, FormTextStatusWatcher, AutomaticReadingListContentProvider, ToolbarController, NSDate, WBProfileWindow, NSColor, WBSFluidProgressController, CustomViewSnapshotCache, NSArray, WBWindowState, PopupWindowUnifiedFieldViewController, FavoritesPickerVisibilityManager, TabContentViewController, VisualTabPickerViewController, BrowserWindow, BrowserWindowPersistentState, NSString, TitlebarVisualEffectView, AssistantPopoverViewController, BrowserViewController, FavoritesBarView, OverlayStatusWindowController, WindowFunctionBarProvider, BrowserWindowTabViewController, TextFieldEditor, NSURL, WBSBrowserTabCompletionInfo, WBSSavedAccountContext, LockdownModeBarView, BackgroundColorView, NSMutableSet, ReadingListContentProvider, History, CertificateSheetViewController, NSAlert, PrivacyReportPopoverViewController, NSTitlebarAccessoryViewController, WebViewController, WBTabGroup, ActivityNoticeView;
@protocol MultipleTabClosingContext, OS_dispatch_queue, WBSWebExtensionTab, OneStepBookmarkingButtonController, WBSParsecGlobalFeedbackDispatcher, ReaderAppearanceViewControllerDelegate;

@interface BrowserWindowController : WindowController <ActivityNoticeViewDelegate, BackgroundLoadControllerDelegate, BrowserWindowContentSplitViewControllerDelegate, BrowserWindowTabViewControllerDelegate, CertificateSheetViewControllerDelegate, FavoritesPickerVisibilityController, FavoritesPickerVisibilityManagerDataSource, FormTextStatusWatcherDelegate, OverlayStatusWindowDelegate, TabBarViewDelegate, TabDraggingWindowDestination, ToolbarControllerDelegate, UnifiedTabBarDelegate, VisualTabPickerDelegate, WBProfileWindowDelegate, WBTabGroupManagerObserver, WBTabGroupSyncAgentSyncObserver, WindowFunctionBarProviderDataSource, WindowFunctionBarProviderDelegate, WindowOcclusionTrackerObserver, AssistantPopoverViewControllerDelegate, AssistantCalloutPopoverViewControllerDelegate, TipsObserver, BrowserContentLoaderDelegate, BrowserWindowDelegate, Command0Through9Receiver, ImageHopAnimationDelegate, NSMenuDelegate, NSMenuItemValidation, NSSplitViewDelegate, SearchableWKViewPlaybackControlsPresenter, StartPageBackgroundImageIdentifierProvider, UnifiedFieldDelegate, WBSFluidProgressControllerWindowDelegate, WBSUnifiedBarAnalyticsProviding, WBSWebExtensionWindow> {
    NSTextView *_fieldEditorWithoutAutomaticSubstitution;
    BookmarksSidebarTitleTextView *_bookmarksSidebarTitleTextView;
    struct RefPtr<Safari::UnifiedFieldCompletionController, WTF::RawPtrTraits<Safari::UnifiedFieldCompletionController>, WTF::DefaultRefDerefTraits<Safari::UnifiedFieldCompletionController>> { struct UnifiedFieldCompletionController *m_ptr; } _unifiedFieldCompletionController;
    NSURL *_completionListURLBeingActivated;
    id<OneStepBookmarkingButtonController> _oneStepBookmarkingButtonController;
    char _tabBarHiddenByJavaScript;
    char _readyToUpdateKeyboardLoop;
    char _windowWasLoaded;
    StatusMessage *_status;
    char _stopAndReloadButtonWillStop;
    char _hideToolbarOnEndSheet;
    NSTimer *_setInterpretsAllInputAsURLTimer;
    int _fullScreenState;
    double _topContentInsetBeforeEnteringFullScreen;
    NSMutableSet *_imageHopAnimationControllers;
    BrowserTabViewItem *_closingTabView;
    long long _windowType;
    SidebarViewController *_cachedSidebarViewController;
    double _sidebarWidth;
    BrowserWindowContentViewController *_windowContentViewController;
    BrowserWindowContentSplitViewController *_windowContentSplitViewController;
    PerSitePreferencesPopoverManager *_perSitePreferencesPopoverManager;
    char _deferDeterminingFirstResponderUntilNextRunLoop;
    unsigned long long _tabCreationCount;
    unsigned long long _selectedTabRespectingNewTabBehaviorCreationCount;
    unsigned long long _tabInsertionCount;
    char _unifiedFieldShouldRetainFirstResponderWhileLoadingPage;
    char _preventUnifiedFieldFromBecomingFirstResponder;
    NSTimer *_updateFirstResponderAfterTabSwitchTimer;
    NSArray *_tabsForGoBack;
    BrowserTabViewItem *_selectedTabForGoBack;
    BrowserWindowPersistentState *_pendingClosedState;
    BrowserTabGroupPersistentState *_tabGroupStateForReplacedTabs;
    NSArray *_tabsForGoForward;
    BrowserTabViewItem *_selectedTabForGoForward;
    NSArray *_mostRecentBackgroundLoadURLs;
    BackgroundLoadController *_backgroundLoadController;
    char _didSeeNavigationToBackgroundLoadURL;
    char _fluidProgressControllerNeedsUpdateForBackgroundLoadCommit;
    VisualTabPickerViewController *_visualTabPickerViewController;
    BackgroundColorView *_visualTabPickerToolbarBackgroundView;
    char _visualTabPickerPendingEntryAnimation;
    char _canToggleTabBarInVisualTabPicker;
    char _canChangeTopInsetInVisualTabPicker;
    char _visualTabPickerIsHidingTabBar;
    char _shouldFocusSelectedTabContentViewAfterVisualTabPickerCloses;
    char _titlebarBlurringDisabled;
    BackgroundColorView *_titlebarOpaqueBackgroundView;
    double _titlebarHeightInWindow;
    NSMutableArray *_titlebarViewControllerOrder;
    NSMutableSet *_titlebarViewControllersAddedWhileInFullScreen;
    NSMutableSet *_titlebarViewControllersRemovedWhileInFullScreen;
    char _wasShowingTabBarBeforeEnteringFullScreen;
    PopupWindowUnifiedFieldViewController *_popupWindowUnifiedFieldViewController;
    PopupWindowUnifiedField *_popupWindowUnifiedField;
    NSTitlebarAccessoryViewController *_favoritesBarViewController;
    NSTitlebarAccessoryViewController *_tabBarViewController;
    NSTitlebarAccessoryViewController *_lockdownModeBarViewController;
    long long _lockdownModeStatus;
    WKWebpagePreferences *_defaultWebpagePreferences;
    NSLayoutConstraint *_favoritesBarHeightConstraint;
    char _titlebarWasTransparent;
    char _titlebarBackgroundViewWasHidden;
    BrowserWindowController *_detachedBrowserWindowController;
    OverlayStatusWindowController *_overlayStatusWindowController;
    char _statusOverlaysAreEnabled;
    char _isAnimatingReaderTransition;
    NSTimer *_coalescedUpdatesTimer;
    double _lastCoalescedUpdateTime;
    unsigned long long _pendingCoalescedUpdates;
    unsigned long long _postponedUnifiedFieldUpdates;
    char _isPerformingCoalescedUpdates;
    char _isPostponingUnifiedFieldUpdates;
    char _isPostponingNotSecureWarningUpdates;
    FormTextStatusWatcher *_formTextStatusWatcherForClose;
    FormTextStatusWatcher *_formTextStatusWatcherForClosingMultipleTabs;
    id<MultipleTabClosingContext> _multipleTabClosingContext;
    char _didSendOpenEventToExtensions;
    char _didSendCloseEventToExtensions;
    long long _numberOfVisiblePopovers;
    NSMutableArray *_lastFiveWebSearchTimes;
    CertificateSheetViewController *_certificateSheetViewController;
    char _shouldIncludePinnedTabsInDeterminingTabBarVisibility;
    unsigned long long _tabIndexToSelectAfterPinnedTabsAreRestored;
    WindowFunctionBarProvider *_functionBarProvider;
    FavoritesPickerVisibilityManager *_favoritesPickerVisibilityManager;
    NSMutableSet *_functionBarTabViewItemsPendingReload;
    TextFieldEditor *_editorWithoutDFRAccessories;
    AutomationTouchBarProvider *_automationTouchBarProvider;
    WBSFaviconRequestsController *_requestsController;
    char _buttonsDisabledInAttachedSheet;
    BrowserTabViewItem *_tabForPendingWebExtensionLoad;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _windowFrameBeforeMaximization;
    char _maximizationCausedResize;
    PrivacyReportPopoverViewController *_privacyReportPopoverViewController;
    long long _batchTabManipulationEnabledCounter;
    char _privateBrowsingExplanationShownOnce;
    long long _updateTabsSuppressionCount;
    long long _ignoreTabGroupChangeNotificationsCount;
    char _updatingSelectedTabGroup;
    char _closingTabsWhileClosingWindow;
    char _creatingNewWindow;
    char _restoringWindow;
    char _didCompleteContentSetup;
    char _temporarilyHidingFavoritesBar;
    NSArray *_currentTabGroups;
    BrowserTabViewItem *_tabViewItemForTabGroupTabUpdate;
    TitlebarVisualEffectView *_titlebarBackgroundView;
    NSColor *_titlebarColor;
    NSColor *_deferTitlebarColor;
    NSColor *_deferredTitlebarColorWhileSwitchingTabs;
    double _startPageVerticalScroll;
    char _deferringTitlebarColorUpdate;
    char _updatingTitlebarColor;
    char _wasUnifiedFieldFirstResponder;
    NSLayoutConstraint *_activityNoticeTopConstraint;
    ActivityNoticeView *_currentlyPresentedNotice;
    NSTimer *_hideActivityNoticeTimer;
    NSObject<OS_dispatch_queue> *_updateTabTitlesQueue;
    id /* block */ _updateTabTitlesLastCancelBlock;
    char _actionTakenFromSidebar;
    NSString *_recentlyJoinedSharedTabGroupUUID;
    NSDate *_recentlyJoinedSharedTabGroupDate;
    History *_history;
    WBProfileWindow *_profileWindow;
    id _localMonitorForVisualTabPickerTransition;
    NSView *_magnifyEventsOriginatingView;
    char _shouldPrepareInteractiveVTPAnimation;
    NSView *_firstResponderBeforeLocking;
    char _wasShowingFullHeightViewControllerBeforeLocking;
    NSTimer *_assistantPresentationTimer;
    char _deferringTabSelectionStateUpdate;
    NSArray *_deferredSelectedTabViewItems;
    unsigned long long _continuousTabSwitchCount;
    id /* block */ _deferredTabLoadCompletionBlock;
}

@property (class, readonly, nonatomic) char hasEverShownWindow;

@property (retain, nonatomic) NSView *firstResponderViewBeforeFullScreenTransition;
@property (retain, nonatomic) ReadingListContentProvider *readingListContentProvider;
@property (retain, nonatomic) NSView *webContentSnapshotForSidebarAnimation;
@property (retain, nonatomic) NSView *backgroundSidebarAnimationView;
@property (retain, nonatomic) NSView *continuousBannerSidebarAnimationView;
@property (copy, nonatomic) id /* block */ completionHandlerForLastSheetEndingOnWindow;
@property (nonatomic, getter=isPopupWindowUnifiedFieldVisible) char popupWindowUnifiedFieldVisible;
@property (readonly, nonatomic) double _offsetToHideActivityNoticeViewAboveWindow;
@property (retain, nonatomic) AssistantCalloutPopoverViewController *assistantCalloutPopoverViewController;
@property (readonly, nonatomic) BrowserWindow *browserWindow;
@property (readonly, nonatomic) char windowIsClosing;
@property (readonly, nonatomic, getter=isClosed) char closed;
@property (nonatomic) char ignoresOrderFront;
@property (retain, nonatomic) TabBarView *tabBarView;
@property (readonly, nonatomic) char shouldShowTabBar;
@property (readonly, nonatomic) FavoritesBarView *favoritesBarView;
@property (readonly, nonatomic) UnifiedTabBar *unifiedTabBar;
@property (readonly, nonatomic) NSColor *titlebarColor;
@property (readonly, nonatomic) NSAppearance *titlebarAppearance;
@property (readonly, nonatomic) char useActiveToolbarAppearance;
@property (readonly, nonatomic) char showsStandaloneUnifiedTabBar;
@property (retain, nonatomic) LockdownModeBarView *lockdownModeBarView;
@property (readonly, nonatomic) char supportsLocking;
@property (readonly, nonatomic, getter=isLocked) char locked;
@property (readonly, nonatomic) BrowserWindowTabViewController *tabViewController;
@property (readonly, nonatomic) char areTabsBeingRearranged;
@property (readonly, nonatomic) UnifiedFieldEditor *unifiedFieldEditor;
@property (readonly, nonatomic) void *unifiedFieldCompletionController;
@property (readonly, nonatomic) struct Vector<WTF::RefPtr<Safari::CompletionListItem>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { void *x0; unsigned int x1; unsigned int x2; } unifiedFieldCompletionListItemsForCompletionListTool;
@property (retain, nonatomic) SearchProvidersController *searchProvidersController;
@property (nonatomic) char shouldUpdateFocusOnBackgroundLoadCommit;
@property (readonly, nonatomic) char shouldPreloadTopHit;
@property (readonly, nonatomic) WBSFluidProgressController *fluidProgressController;
@property (readonly, nonatomic) char sidebarAppearsAsOverlay;
@property (readonly, nonatomic) NSView *sidebarContainerView;
@property (readonly, nonatomic, getter=isSidebarVisible) char sidebarVisible;
@property (readonly, nonatomic) char canToggleSidebar;
@property (readonly, nonatomic) char canAnimateSidebar;
@property (nonatomic) char prefersSidebarVisible;
@property (nonatomic) char prefersSidebarVisibleWithStartPage;
@property (readonly, nonatomic, getter=isSwitchingTabs) char switchingTabs;
@property (readonly, nonatomic) unsigned long long browsingMode;
@property (readonly, nonatomic) char usesPrivateBrowsing;
@property (readonly, nonatomic) char canPersistTabsAndTabGroups;
@property (readonly, nonatomic) char shouldKeepWindowOpenForSelectedTabGroup;
@property (nonatomic) long long unifiedSidebarMode;
@property (readonly, nonatomic, getter=isRestoringWindow) char restoringWindow;
@property (readonly, nonatomic) NSString *privacyPreservingDescription;
@property (readonly, nonatomic) unsigned long long numberOfPinnedTabsInLocalTabGroup;
@property (readonly, nonatomic, getter=isPopupWindow) char popupWindow;
@property (readonly, nonatomic) char isShowingPopover;
@property (readonly, nonatomic) char isReaderInstalled;
@property (nonatomic) char forceEnableTitlebarBlurFilters;
@property (readonly, nonatomic) BrowserTabViewItem *onlyUnpinnedDisposableTab;
@property (retain, nonatomic) NSUUID *uuid;
@property (readonly, nonatomic, getter=isWindowMaximized) char windowMaximized;
@property (readonly, nonatomic, getter=isFrontmost) char frontmost;
@property (readonly, weak, getter=_parsecFeedbackDispatcher) id<WBSParsecGlobalFeedbackDispatcher> parsecFeedbackDispatcher;
@property (readonly, nonatomic) char isReplacingTabs;
@property (readonly, copy, nonatomic) NSString *deviceIdentifier;
@property (readonly, nonatomic) char isInDefaultProfile;
@property (readonly, copy, nonatomic) WBProfile *profile;
@property (readonly, copy, nonatomic) NSString *profileIdentifier;
@property (readonly, copy, nonatomic) NSString *automationSessionIdentifier;
@property (readonly, nonatomic) WBTabGroup *unnamedTabGroup;
@property (readonly, nonatomic) char shouldShowProfileTitle;
@property (readonly, nonatomic) char startPageShouldShowProfileTitle;
@property (readonly, nonatomic) char hasMultipleProfiles;
@property (readonly, nonatomic) char canSwitchToAnotherProfile;
@property (readonly, nonatomic) WBSSavedAccountContext *savedAccountContext;
@property (readonly, nonatomic) SafariAppExtensionsController *appExtensionsController;
@property (readonly, nonatomic) SafariWebExtensionsController *webExtensionsController;
@property (nonatomic, getter=isFetchingWindowRestorationArchive) char fetchingWindowRestorationArchive;
@property (readonly, nonatomic) LibrarySidebarNavigationViewController *unifiedSidebarViewController;
@property (readonly, nonatomic) WBTabGroup *unnamedTabGroupForCurrentBrowsingMode;
@property (readonly, nonatomic) char shouldEnableScribbleForCurrentBrowserView;
@property (readonly, nonatomic) char isCurrentBrowserViewScribbling;
@property (readonly, nonatomic) ToolbarController *toolbarController;
@property (readonly, nonatomic) UnifiedField *unifiedField;
@property (readonly, copy, nonatomic) NSString *unifiedFieldTextForRestoring;
@property (readonly, nonatomic) char unifiedFieldIsReflectingSearchTerms;
@property (readonly, nonatomic) char unifiedFieldIsFirstResponder;
@property (readonly, nonatomic) char unifiedFieldTextLooksLikeWebSearch;
@property (readonly, nonatomic) char nothingIsFirstResponder;
@property (readonly, nonatomic) char webContentIsFirstResponder;
@property (nonatomic) char blocksAutomaticUpdatesOfUnifiedField;
@property (nonatomic) char acceptsGenericIcon;
@property (readonly, nonatomic) int currentTabLoadingStatus;
@property (readonly, nonatomic) AssistantPopoverViewController *assistantPopoverViewController;
@property (readonly, nonatomic) NSArray *orderedTabViewItems;
@property (readonly, nonatomic) NSArray *orderedUnpinnedTabViewItems;
@property (readonly, nonatomic) NSArray *tabViewItemsToConsolidate;
@property (readonly, nonatomic) CustomViewSnapshotCache *customViewSnapshotCache;
@property (readonly, nonatomic) NSArray *selectedTabs;
@property (readonly, nonatomic) char isSelectingMultipleTabs;
@property (nonatomic) char disableTopContentInsetUpdateForSelectedTab;
@property (readonly, nonatomic) WebViewController *currentBrowserOrOverlayViewController;
@property (nonatomic) unsigned long long numberOfTabsToBeClosedBeforeClosingWindow;
@property (nonatomic) struct CGPoint { double x; double y; } lastMouseClickPosition;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } downloadHopStartPoint;
@property (readonly) char showUnifiedFieldOutline;
@property (readonly) char useCustomBorderForUnifiedField;
@property (weak, nonatomic) NSAlert *alertWithButtonsEnabledOnlyWhenKeyWindow;
@property (readonly, nonatomic) NSMenu *dynamicBackMenu;
@property (readonly, nonatomic) NSMenu *dynamicForwardMenu;
@property (readonly, nonatomic) char isClosingVisualTabPicker;
@property (readonly, nonatomic) TabContentViewController *currentTabContentViewController;
@property (readonly, nonatomic) BrowserViewController *currentBrowserViewController;
@property (readonly, nonatomic) BrowserViewController *currentBrowserViewControllerIgnoringVisualTabPickerVisibility;
@property (readonly, nonatomic) BrowserViewController *currentBrowserViewControllerIncludingBackgroundLoad;
@property (readonly, nonatomic) NSView *mainContentView;
@property (readonly, nonatomic) double topContentInset;
@property (readonly, retain, nonatomic) AutomaticReadingListContentProvider *automaticReadingListContentProvider;
@property (readonly, nonatomic) BrowserViewController *currentBrowserViewControllerForNavigationPurposes;
@property (readonly, nonatomic, getter=isCurrentTabPlayingAudio) char currentTabPlayingAudio;
@property (readonly, nonatomic) char currentTabHasActiveMediaCaptureDevice;
@property (readonly, nonatomic) char currentTabHasMediaCaptureDevice;
@property (readonly, nonatomic) char currentTabHasVideoCaptureDevice;
@property (readonly, nonatomic) char currentTabHasActiveDisplayCaptureDevice;
@property (readonly, copy, nonatomic) NSArray *tabInfosForUnifiedFieldCompletion;
@property (readonly, nonatomic) WBSBrowserTabCompletionInfo *selectedTabInfoForUnifiedFieldCompletion;
@property (readonly, copy, nonatomic) NSArray *cloudTabDevicesForUnifiedCompletion;
@property (readonly, copy, nonatomic) WBTabGroup *selectedTabGroup;
@property (readonly, copy, nonatomic) NSString *selectedTabGroupUUID;
@property (readonly, nonatomic) WBTab *selectedTabGroupTab;
@property (retain, nonatomic) WBWindowState *windowState;
@property (readonly, copy, nonatomic) NSArray *tabGroups;
@property (readonly, nonatomic) char isLocalTabGroupSelected;
@property (readonly, nonatomic) char tabsWillBeReusedWhenClosingWindow;
@property (readonly, nonatomic) char hasSingleEmptyOrStartPage;
@property (readonly, nonatomic) char isShowingFullHeightViewController;
@property (readonly, nonatomic) unsigned long long userFacingLocalTabCount;
@property (readonly, nonatomic) CKShare *cloudKitShareForSelectedTabGroup;
@property (readonly, nonatomic) History *history;
@property (readonly, nonatomic) TipsCoordinator *tipsCoordinator;
@property (readonly, nonatomic) NSString *displayNameModifiers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSPopover *assistantPopover;
@property (weak, nonatomic) id<ReaderAppearanceViewControllerDelegate> readerAppearanceDelegate;
@property (readonly, nonatomic) double currentZoomFactor;
@property (readonly, nonatomic) char isReaderAvailable;
@property (readonly, nonatomic) NSString *pageTitle;
@property (readonly, copy, nonatomic) NSArray *zoomFactors;
@property (readonly, nonatomic) double assistantPopoverMaxHeight;
@property (readonly, nonatomic) NSWindow *browserWindowControllerWindow;
@property (readonly, copy, nonatomic) NSURL *currentOrExpectedURL;
@property (readonly, nonatomic) unsigned long long hiddenElementCount;
@property (readonly, nonatomic) char hasEnteredScribbleModeOnSelectedTab;
@property (retain, nonatomic) NSPopover *assistantCalloutPopover;
@property (readonly, copy, nonatomic) NSString *startPageBackgroundImageIdentifier;
@property (readonly, nonatomic) char shouldReportUnifiedTabBarAnalytics;
@property (readonly, nonatomic) long long unifiedTabBarLayoutStyle;
@property (readonly, nonatomic) unsigned long long numberOfTabsInCurrentTabBar;
@property (readonly, nonatomic) char tabBarIsCurrentlyScrollable;
@property (readonly, nonatomic) char tabsShowOnlyIcons;
@property (readonly, nonatomic) char backgroundColorInTabBarEnabled;
@property (readonly, nonatomic) double idForWebExtensions;
@property (readonly, nonatomic) char isFocused;
@property (readonly, nonatomic) char isPrivate;
@property (readonly, nonatomic) char isPopupWindow;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } webExtensionWindowGeometry;
@property (readonly, copy, nonatomic) NSArray *webExtensionTabs;
@property (readonly, nonatomic) id<WBSWebExtensionTab> activeWebExtensionTab;

+ (id)windowControllers;
+ (char)restoreStateIsForPrivateWindow:(id)a0;
+ (id)_windowControllersForDocuments:(id)a0;
+ (id)_recoveredWindowUUIDFromExpectedWindowUUID:(id)a0;
+ (id)_windowStateForUUID:(id)a0;
+ (id)activeWindowController;
+ (id)allBrowserTabViewItemsFromAllWindows;
+ (id)browserWindowControllerForWindow:(id)a0;
+ (id)buildTranslationMenuItem;
+ (id)findFirstBrowserWindowControllerInProfile:(id)a0;
+ (id)hiddenEmptyBrowserWindowControllerWithBrowsingMode:(unsigned long long)a0 profileIdentifier:(id)a1 isPopupWindow:(char)a2;
+ (id)hiddenEmptyBrowserWindowControllerWithBrowsingMode:(unsigned long long)a0 profileIdentifier:(id)a1 isPopupWindow:(char)a2 restoringFromLastSession:(char)a3;
+ (id)openEmptyBrowserWindowController;
+ (id)openEmptyBrowserWindowControllerInProfile:(id)a0;
+ (id)openEmptyTestBrowserWindowController;
+ (id)orderedWindowControllers;
+ (id)profileIdentifierFromRestoreState:(id)a0;
+ (char)restoreStateIsForPrivateWindowWithUUID:(id)a0;
+ (id)windowControllerForIdForWebExtensions:(double)a0;
+ (id)windowControllerForUUID:(id)a0;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)cancel:(id)a0;
- (void)encodeRestorableStateWithCoder:(id)a0;
- (void)noResponderFor:(SEL)a0;
- (void)swipeWithEvent:(id)a0;
- (void)windowDidFailToEnterFullScreen:(id)a0;
- (id)destinationForTabDragOperation:(id)a0;
- (char)isTabBarVisible;
- (void)_moveTabToNewWindow:(id)a0;
- (unsigned long long)_numberOfUnpinnedTabs;
- (void)closeVisualTabPicker;
- (char)control:(id)a0 textView:(id)a1 doCommandBySelector:(SEL)a2;
- (void)controlTextDidChange:(id)a0;
- (void)controlTextDidEndEditing:(id)a0;
- (char)createNewTabForVisualTabPickerController:(id)a0;
- (char)creatingNewTabWillCloseVisualTabPickerController:(id)a0;
- (void)doCommandBySelector:(SEL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForVisualTabPickerController:(id)a0;
- (unsigned long long)indexOfTabViewItem:(id)a0;
- (void)invalidateRestorableState;
- (char)isInFullScreenMode;
- (void)loadWindow;
- (char)menuHasKeyEquivalent:(id)a0 forEvent:(id)a1 target:(id *)a2 action:(SEL *)a3;
- (void)menuNeedsUpdate:(id)a0;
- (unsigned long long)numberOfTabs;
- (id)previewRepresentableActivityItemsForWindow:(id)a0;
- (void)restoreStateWithCoder:(id)a0;
- (void)selectNextTab:(id)a0;
- (void)selectPreviousTab:(id)a0;
- (void)selectTabViewItem:(id)a0;
- (id)selectedTabViewItemForVisualTabPickerController:(id)a0;
- (void)setDocument:(id)a0;
- (void)setTabBarVisible:(char)a0;
- (char)shouldCloseDocument;
- (void)showWindow:(id)a0;
- (void)synchronizeWindowTitleWithDocumentName;
- (id)touchBar;
- (char)validateMenuItem:(id)a0;
- (char)validateUserInterfaceItem:(id)a0;
- (void)visualTabPickerController:(id)a0 selectTab:(id)a1;
- (void)visualTabPickerControllerDidBeginHiding:(id)a0;
- (void)visualTabPickerControllerDidEndHiding:(id)a0;
- (void)visualTabPickerControllerWillClose:(id)a0;
- (void)willStartExitAnimationForVisualTabPickerController:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })window:(id)a0 willPositionSheet:(id)a1 usingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (struct CGSize { double x0; double x1; })window:(id)a0 willUseFullScreenContentSize:(struct CGSize { double x0; double x1; })a1;
- (unsigned long long)window:(id)a0 willUseFullScreenPresentationOptions:(unsigned long long)a1;
- (void)windowDidBecomeKey:(id)a0;
- (void)windowDidBecomeMain:(id)a0;
- (void)windowDidChangeOcclusionState:(id)a0;
- (void)windowDidChangeScreen:(id)a0;
- (void)windowDidDeminiaturize:(id)a0;
- (void)windowDidEndLiveResize:(id)a0;
- (void)windowDidEndSheet:(id)a0;
- (void)windowDidEnterFullScreen:(id)a0;
- (void)windowDidExitFullScreen:(id)a0;
- (void)windowDidLoad;
- (void)windowDidMiniaturize:(id)a0;
- (void)windowDidMove:(id)a0;
- (void)windowDidResignKey:(id)a0;
- (void)windowDidResignMain:(id)a0;
- (void)windowDidResize:(id)a0;
- (id)windowNibName;
- (char)windowShouldClose:(id)a0;
- (void)windowWillBeginSheet:(id)a0;
- (void)windowWillClose:(id)a0;
- (void)windowWillEnterFullScreen:(id)a0;
- (void)windowWillExitFullScreen:(id)a0;
- (void)windowWillOrderOnScreen:(id)a0;
- (struct CGSize { double x0; double x1; })windowWillResize:(id)a0 toSize:(struct CGSize { double x0; double x1; })a1;
- (id)windowWillReturnFieldEditor:(id)a0 toObject:(id)a1;
- (void)windowWillStartLiveResize:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })windowWillUseStandardFrame:(id)a0 defaultFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)zoomIn:(id)a0;
- (void)zoomOut:(id)a0;
- (void)closeAssistant;
- (void)makeTextSmaller:(id)a0;
- (void)reloadFromOrigin:(id)a0;
- (void)stopLoading:(id)a0;
- (void)addBookmark:(id)a0;
- (void)searchForString:(id)a0;
- (id)activeTabForWebExtensionContext:(id)a0;
- (void)closeForWebExtensionContext:(id)a0 completionHandler:(id /* block */)a1;
- (void)focusForWebExtensionContext:(id)a0 completionHandler:(id /* block */)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForWebExtensionContext:(id)a0;
- (char)isPrivateForWebExtensionContext:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })screenFrameForWebExtensionContext:(id)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forWebExtensionContext:(id)a1 completionHandler:(id /* block */)a2;
- (void)setWindowState:(long long)a0 forWebExtensionContext:(id)a1 completionHandler:(id /* block */)a2;
- (id)tabsForWebExtensionContext:(id)a0;
- (long long)windowStateForWebExtensionContext:(id)a0;
- (long long)windowTypeForWebExtensionContext:(id)a0;
- (void)_updateFirstResponderIfNeeded;
- (void)performPrefetchingOfAssistantPegasusContentAfterChangingConsentState;
- (void)performWebSearch:(id)a0;
- (void)windowDidBecomeOccluded:(id)a0;
- (void)_popoverWillClose:(id)a0;
- (id)_bookmarkForBrowserTabViewItem:(id)a0;
- (char)_canAddBookmarksForSelectedTabs;
- (char)_canEnterQuickWebsiteSearchMode;
- (char)_makeUnifiedFieldFirstResponder;
- (id)_menuAppendingTabSwitchingMenuItems:(id)a0 withTabSectionTitle:(id)a1 toMenu:(id)a2;
- (id)_namedTabGroupsForActiveProfile;
- (void)_sendWillCloseEventToExtensions;
- (void)_setUpStatusBar;
- (void)_unmuteAllTabs:(id)a0;
- (void)_updateWindowControlAppearance:(id)a0;
- (id)browserDocument;
- (id)currentFluidProgressStateSource;
- (void)focusVisualTabPickerSearchField;
- (void)goBackInWindow:(id)a0;
- (void)goHome:(id)a0;
- (void)makeTextBigger:(id)a0;
- (void)showBookmarksAndRevealBookmark:(id)a0;
- (void)tabBarView:(id)a0 closeTabBarViewItem:(id)a1;
- (void)tabBarView:(id)a0 didMoveTabBarViewItems:(id)a1 toIndex:(unsigned long long)a2 isChangingPinnedness:(char)a3;
- (id)tabGroupForTab:(id)a0;
- (void)unifiedFieldDidChangePageTitle:(id)a0;
- (char)unifiedTabBar:(id)a0 acceptDrop:(id)a1 index:(unsigned long long)a2;
- (void)unifiedTabBar:(id)a0 didMoveTabBarViewItems:(id)a1 toIndex:(unsigned long long)a2 isChangingPinning:(char)a3;
- (void)updateCombinedSidebarTabGroupToolbarButtonForToolbarController:(id)a0;
- (void)updateWindowTitlebarBlurFilters;
- (char)_canAddBookmark;
- (char)_canCloseOtherTabsExcludingTab:(id)a0;
- (char)_isHomepageURL:(id)a0;
- (char)_shouldUpdateToolbarAppearances;
- (struct CGPoint { double x0; double x1; })_siteIconHopAnimationStartPoint;
- (id)_unifiedTabBarBackgroundColorForActiveTab:(char)a0 isVibrant:(char)a1 multiplier:(double)a2;
- (void)_updatePendingClosedWindowState;
- (void)_updateTabTitlesAsynchronously:(id)a0;
- (void)_updateTabTitlesNowUseFastPath:(char)a0;
- (void)_updateUsageTrackingInformation;
- (void)applyNewTabBehaviorToCurrentTab;
- (id)audioMenuForBrowserTabViewItem:(id)a0;
- (void)commitBackgroundLoad:(id)a0 withParentBrowserViewController:(id)a1 andSelect:(char)a2;
- (void)goForwardAndFlashToolbarButton:(id)a0;
- (char)tabBarView:(id)a0 acceptTabDrop:(id)a1 index:(unsigned long long)a2;
- (void)tabBarView:(id)a0 didBeginDraggingTab:(id)a1;
- (id)tabOrderManager;
- (void)toggleToolbarShowsTrackerCount:(id)a0;
- (id)unifiedFieldAudioIndicatorMenu:(id)a0;
- (char)unifiedTabBar:(id)a0 browserTabIconIsMonogramForUnifiedTabBarViewItem:(id)a1;
- (void)uninstallSidebarFromUserGesture;
- (char)validate_closeSelectedTabGroup:(id)a0;
- (void)_abortUnifiedFieldCompletion;
- (char)_acceptDrop:(id)a0 index:(unsigned long long)a1;
- (char)_acceptTabDrop:(id)a0 index:(unsigned long long)a1;
- (void)_addPlaceholderContentToTab:(id)a0;
- (void)_addTitlebarViewController:(id)a0;
- (char)_allowReloadMenuActions;
- (char)_allowsPinnedTabsInTabGroup:(id)a0;
- (char)_allowsScrollingPinnedTabs;
- (char)_alwaysShowTabBar;
- (void)_appExtensionPermissionsWereMigrated:(id)a0;
- (char)_appendSlashAndCollapseSelectionInUnifiedField;
- (void)_applyNewBrowserViewBehavior:(long long)a0 toBrowserViewController:(id)a1 usingReferenceBrowserViewController:(id)a2;
- (void)_applyTabSelectionStateUpdateForTab:(id)a0 previouslySelectedTab:(id)a1 selectedTabViewItems:(id)a2 completionHandler:(id /* block */)a3;
- (char)_areBarsOrBannersVisible;
- (id)_assistantPopoverAnchorView;
- (id)_attachedSheet;
- (void)_audioMenuTabMenuItemClicked:(id)a0;
- (char)_automaticallyHidesToolbar;
- (id)_automationTouchBarProviderCreatingIfNeeded;
- (id)_backListMenuForButton:(id)a0;
- (void)_backgroundImageFileModifiedRemotely:(id)a0;
- (id)_backgroundLoadConfigurationForNonSpeculativeLoadInCurrentWindow;
- (id)_backgroundLoadConfigurationForSpeculativeLoadInCurrentWindow;
- (id)_beginUniqueBackgroundLoadWithURLs:(id)a0 tabLabel:(id)a1 isSpeculative:(char)a2 identifier:(id)a3 httpReferrer:(id)a4 canAttemptUpgradingRequestURLToHTTPS:(char)a5;
- (id)_browserTabPersistentStateForTab:(id)a0;
- (id)_browserTabViewItemForUnifiedTabBarItem:(id)a0;
- (id)_browserTabViewItemWithBackgroundNavigationBackgroundLoad:(id)a0;
- (id)_browserTabViewItemsForUnifiedTabBarItems:(id)a0;
- (void)_browserTabsDidChange;
- (id)_browserViewControllerToInstallBookmarksOrHistoryView;
- (char)_canAcceptDragForTabDraggingInfo:(id)a0;
- (char)_canAcceptDropForTabViewItem:(id)a0;
- (char)_canAutoFill;
- (char)_canCloseOtherTabsExcludingTabs:(id)a0;
- (char)_canCloseSelectedUnpinnedTabs;
- (char)_canCloseTabFromMenuAndCloseButton:(id)a0;
- (char)_canCloseTabWithoutClosingWindow:(id)a0 includingLastUnpinnedTab:(char)a1;
- (char)_canCloseTabsToLeftOfTab:(id)a0;
- (char)_canCloseTabsToRightOfTab:(id)a0;
- (char)_canConsolidateTabGroupInWindowMerge:(id)a0;
- (char)_canDetachTabBarViewItem:(id)a0;
- (char)_canDragToPinTab:(id)a0;
- (char)_canGoBack;
- (char)_canGoForward;
- (char)_canGoHome;
- (char)_canGoToPreviousTabGroup;
- (char)_canInitiateTabGroupShare;
- (char)_canInitiateTabGroupShareFromShareButton;
- (char)_canPrintFromToolbar;
- (char)_canShowCloudTabsPopover;
- (char)_canShowPerSitePreferencesPopover;
- (char)_canShowPrivacyReportPopover;
- (char)_canShowSharingServicePicker;
- (char)_canShowTabHoverPreview;
- (char)_canShowVisualTabPicker;
- (char)_canToggleHistoryOrBookmarks;
- (char)_canTogglePinnedStateAllowedForTabViewItem:(id)a0;
- (char)_canTogglePinnedStateAllowedForTabViewItems:(id)a0;
- (char)_canToggleTabBarVisibility;
- (char)_canToggleWebInspector;
- (void)_cancelAllCoalescedUpdates;
- (void)_cancelCoalescedUpdate:(unsigned long long)a0;
- (void)_clearEditedUnifiedFieldStringForSelectedTab;
- (void)_clearStatus;
- (void)_closeCurrentTab;
- (void)_closeMultipleTabsAfterConfirmingClosingVideoWithPIPIfNecessary:(id)a0;
- (void)_closeMultipleTabsWithoutConfirming:(id)a0;
- (void)_closePageAfterChecks:(id)a0;
- (void)_closePageAfterConfirmPageUnloadWithPIPVideo:(id)a0;
- (void)_closePreviouslySelectedTabIfNecessaryAfterSwitchingTabs:(id)a0 wasShowingVisualTabPicker:(char)a1;
- (void)_closeSelectedTabs;
- (void)_closeSelectedTabsAfterPrompting;
- (void)_closeTabViewItem:(id)a0;
- (void)_closeTabWithoutConfirming:(id)a0 allowUndo:(char)a1;
- (void)_closeTabsAndMarkAsReusableWhileClosingWindow:(id)a0;
- (void)_closeTabsToLeftFromMenu:(id)a0;
- (void)_closeTabsToRightFromMenu:(id)a0;
- (void)_closeWindowAfterChecks;
- (void)_closeWindowIfNoUnpinnedTabsLeft;
- (void)_closeWindowIfPossible;
- (void)_coalescedUpdateTimerFired:(id)a0;
- (id)_completionIconForParsecCompletionListItem:(void *)a0;
- (void)_completionListHintDidChange:(id)a0;
- (void)_completionListSelectionDidChange:(id)a0;
- (void)_confirmClosingEditedTab:(id)a0;
- (void)_confirmClosingMultipleTabsIfAnyAreEdited:(id)a0;
- (void)_consentStateDidUpdateFromSettings;
- (id)_contactsForShareParticipants:(id)a0;
- (void)_copyLinkForTabFromMenu:(id)a0;
- (void)_createAndSetupTabWithTabGroupTab:(id)a0 atIndex:(unsigned long long)a1;
- (void)_createAssistantCalloutPopoverIfNecessary;
- (void)_createAssistantPopoverIfNecessary;
- (void)_createBrowserViewControllerAsynchronouslyInNewTabOfType:(long long)a0 respectingNewTabBehavior:(char)a1 tabCreationOptions:(unsigned long long)a2 completionHandler:(id /* block */)a3;
- (id)_createBrowserViewControllerInNewTabOfType:(long long)a0 respectingNewTabBehavior:(char)a1 andSelect:(char)a2;
- (void)_createTabBarWhenHidingVisualTabPickerIfNeeded;
- (id)_createTabViewItemWithTabGroupTab:(id)a0 atIndex:(unsigned long long)a1 options:(unsigned long long)a2;
- (id)_createTabWithBrowserViewController:(id)a0 atIndex:(unsigned long long)a1 options:(unsigned long long)a2;
- (char)_currentEventIsSelectTabKeyEvent;
- (id)_currentSearchString;
- (id)_currentSidebarViewController;
- (char)_currentTabIsOnlyTabPlayingAudio;
- (id)_currentTabPlacementHint;
- (id)_currentTitlebarAppearance;
- (char)_currentURLIsNativeContent;
- (char)_currentURLShouldUseNativeContentAppearenceInTitleBar;
- (char)_currentUrlIsBlankPage;
- (char)_currentViewControllerShowsNativeContent;
- (id)_defaultSearchProviderDisplayName;
- (void)_deferTitlebarColorUpdates;
- (id)_destinationWindowForDetachedTabBarViewItems:(id)a0 withActiveTabIndex:(unsigned long long)a1;
- (id)_detachedWindowImageForDraggedTabBarViewItem:(id)a0;
- (void)_didBeginDraggingTab:(id)a0;
- (void)_didChangeAccessibiltyOptions;
- (void)_didCompleteContentSetup;
- (void)_didCreateBrowserViewController:(id)a0 formerlySelectedBrowserViewController:(id)a1 respectingNewTabBehavior:(char)a2 selectingOnCreation:(char)a3;
- (void)_didFinishTransitionAnimationForWindow:(id)a0;
- (void)_didInsertTab;
- (void)_didMoveTabBarViewItem:(id)a0 toIndex:(unsigned long long)a1 isChangingPinnedness:(char)a2;
- (void)_didReplaceBrowserWKViewInTab:(id)a0 shouldUpdateFluidProgressController:(char)a1;
- (void)_didSelectNewTab:(id)a0 withLastSelectedTab:(id)a1;
- (void)_didUpdateTitlebarColor;
- (char)_displayCloseConfirmation;
- (char)_displayCloseWindowConfirmSheetForLocalTabGroupIfNecessary;
- (char)_displayCloseWindowConfirmSheetForPIPIfNecessary;
- (void)_downloadEntryStageDidChange:(id)a0;
- (struct CGPoint { double x0; double x1; })_downloadHopEndPoint;
- (id)_dragImageForBrowserTabViewItem:(id)a0 withBookmark:(id)a1;
- (unsigned long long)_dragOperationForTabDraggingInfo:(id)a0;
- (void)_endContinuousTabSwitchIfInProgress;
- (void)_endSendingMagnifyEventsToVisualTabPicker;
- (void)_ensureLocationBarIsVisibleIfWindowIsNotInFullScreen;
- (void)_enterQuickWebsiteSearchMode;
- (void)_exitQuickWebsiteSearchMode;
- (void)_extensionWasEnabledRemotely:(id)a0;
- (void)_extensionsWereInstalled:(id)a0;
- (id)_extractTabsForBackForwardAndGetSelectedTab:(id *)a0;
- (id)_favoritesBarContentTintColor;
- (id)_favoritesBarViewController;
- (void)_finishExitingFullScreen;
- (void)_finishLoadingTab:(id)a0 completionHandler:(id /* block */)a1;
- (void)_finishUpdatingTabTitles:(id)a0 wordsForTitles:(id)a1;
- (unsigned long long)_firstUnpinnedTabIndex;
- (id)_forwardListMenuForButton:(id)a0;
- (id)_functionBarProviderCreatingIfNeeded;
- (unsigned long long)_functionBarTabIndexFromRealTabIndex:(unsigned long long)a0;
- (unsigned long long)_functionBarTabIndexFromRealTabIndex:(unsigned long long)a0 realTabOffset:(unsigned long long)a1;
- (struct MutableMediaPlaybackAndMuteState { char x0; char x1; char x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; })_gatherTabAudioPlaybackAndMuteStateForTargetTab:(id)a0;
- (void)_goBackInWindowUsingPolicy:(long long)a0;
- (void)_goToPreviousOrNextTabGroupGoToPrevious:(char)a0;
- (id)_goToUnifiedFieldURLWithWindowPolicy:(long long)a0;
- (id)_goToUnifiedFieldURLWithWindowPolicy:(long long)a0 httpReferrer:(id)a1;
- (char)_handleDroppingURLs:(id)a0 onTabButtonWithIndex:(unsigned long long)a1;
- (char)_hasAttachedSheet;
- (char)_hasPinnedStartPage;
- (void)_hideActivityNoticeWithCompletionHandler:(id /* block */)a0;
- (void)_hideTitlebarViewController:(id)a0;
- (char)_hidesToolbarInFullScreen;
- (struct CGPoint { double x0; double x1; })_hopAnimationEndPointForDestination:(int)a0;
- (void)_insertFunctionBarTabItemForTabViewItem:(id)a0 atIndex:(unsigned long long)a1;
- (void)_insertTab:(id)a0 atIndex:(unsigned long long)a1 andSelect:(char)a2;
- (void)_insertTab:(id)a0 atIndex:(unsigned long long)a1 andSelect:(char)a2 asynchronously:(char)a3 completionHandler:(id /* block */)a4;
- (void)_insertTabFromOtherWindow:(id)a0 atIndex:(unsigned long long)a1 andSelect:(char)a2;
- (void)_insertTabViewItem:(id)a0 atIndex:(unsigned long long)a1;
- (void)_insertTitlebarViewController:(id)a0 atIndex:(unsigned long long)a1;
- (void)_invalidateCoalescedUpdatesTimer;
- (char)_isClosingLastUnpinnedTab:(id)a0;
- (char)_isLockdownModeBarVisible;
- (char)_isMenuItemInteractingWithMultipleTabs:(id)a0;
- (char)_isPinningAllowed;
- (char)_isReaderFirstResponder;
- (char)_isShowingBookmarksInCurrentBrowserView;
- (char)_isShowingHistoryInCurrentBrowserView;
- (char)_isShowingWebExtensionOverridePage;
- (char)_isTabEmptyOrStartPage:(id)a0;
- (char)_isTabEquivalentToNewlyCreatedTabRespectingNewTabBehavior:(id)a0;
- (char)_isTitlebarAccessoryViewControllerVisible:(id)a0;
- (char)_isToolbarBlurringEnabledInFullScreen;
- (char)_keepWindowOpenForTabGroup;
- (void)_keyWindowStateDidChange:(id)a0;
- (void)_loadTabURL:(id)a0 withWindowPolicy:(long long)a1;
- (id /* block */)_localTabGroupTitleProvider;
- (id)_localeIdentifierFromTranslationMenuItem:(id)a0;
- (id)_lockdownModeBarViewController;
- (char)_makeCurrentContentViewOfSelectedTabFirstResponderIfNecessary;
- (void)_makeFirstResponder:(id)a0;
- (char)_makeUnifiedFieldFirstResponderProgrammatically;
- (id)_mediaCaptureIndicatorPauseCaptureTitleMenuItemTitle;
- (id)_menuForBrowserTabViewItem:(id)a0 event:(id)a1;
- (id)_menuForBrowserTabViewItem:(id)a0 event:(id)a1 useVerticalLayout:(char)a2;
- (char)_moreThanOneTabShowing;
- (void)_moveTab:(id)a0 toIndex:(unsigned long long)a1 isChangingPinnedness:(char)a2;
- (void)_moveTabFromOtherWindow:(id)a0 toIndex:(unsigned long long)a1 andSelect:(char)a2 consolidatingTabViewItemsFromOtherWindows:(char)a3;
- (void)_moveTabGroupTabsToNewWindow:(id)a0;
- (void)_moveTabViewItem:(id)a0 toIndex:(unsigned long long)a1;
- (void)_moveTabViewItem:(id)a0 toIndex:(unsigned long long)a1 isChangingPinnedness:(char)a2;
- (void)_moveTabViewItemToReusableTabManager:(id)a0 previousTabPositions:(id)a1 skipSuspendingTab:(char)a2;
- (void)_moveTabViewItems:(id)a0 toIndex:(unsigned long long)a1 isChangingPinnedness:(char)a2;
- (void)_moveTabsToNewWindow:(id)a0;
- (id)_moveToTabGroupMenuItemForBrowserTabViewItem:(id)a0;
- (void)_mutableMediaPlayingStateDidChange:(id)a0;
- (void)_muteAllTabs:(id)a0;
- (char)_needsToMoveTabBetweenDocuments:(id)a0;
- (char)_needsUncoloredTitlebar;
- (long long)_newTabTypeRespectingVisualTabPickerVisibility:(long long)a0;
- (char)_newWindowShouldBeUnbuffered;
- (id)_nonVibrantTabColor:(double)a0;
- (void)_notifyPageAboutBarsStatesAfterMovingToNewWindow:(id)a0;
- (void)_notifyVoiceOverIfNeededThatMediaStateChangedInTabViewItem:(id)a0 notificationPayload:(id)a1;
- (unsigned long long)_numberOfTabsForDeterminingTabBarVisibility;
- (void)_openBookmarksInTabsForNewWindow;
- (id)_originatingViewForSharingServicePicker;
- (void)_overallAudioStateDidChange:(id)a0;
- (struct Page { struct WKRetainPtr<const void *> { void *x0; } x0; })_pageForSidebarAnimation;
- (void)_parentalControlsDidChange;
- (void)_performBatchTabInsertions:(id /* block */)a0;
- (void)_performCoalescedUpdateSoon:(unsigned long long)a0;
- (void)_performCoalescedUpdates;
- (void)_performPostponedUpdatesToNotSecureWarningStatusDueToTabSwitch;
- (void)_performTabBarDragOperationForTabViewItem:(id)a0 URL:(id)a1;
- (void)_performTabBarDragOperationForURLs:(id)a0 droppedAtIndex:(unsigned long long)a1 honorWindowPolicy:(char)a2;
- (void)_performUnifiedFieldAction:(id)a0;
- (void)_performUnifiedFieldActionWithWindowPolicy:(long long)a0;
- (void)_performWebSearchWithSearchString:(id)a0 windowPolicy:(long long)a1;
- (void)_performWebSearchWithWindowPolicy:(long long)a0;
- (void)_popoverWillShow:(id)a0;
- (void)_postponeUpdatesToNotSecureWarningStatusDueToTabSwitch;
- (void)_prepareBarsToEnterFullScreen;
- (void)_prepareBarsToExitFullScreen;
- (void)_presentAssistantPopover;
- (void)_presentAttributedSharedTabNoticeWithMessage:(id)a0 forParticipantWithRecordID:(id)a1 inSharedTabGroupWithUUID:(id)a2;
- (id)_profileIdentifierForTab:(id)a0;
- (long long)_readerButtonState;
- (unsigned long long)_realTabIndexFromFunctionBarTabIndex:(unsigned long long)a0;
- (unsigned long long)_realTabIndexFromFunctionBarTabIndex:(unsigned long long)a0 realTabOffset:(unsigned long long)a1;
- (void)_recentSearchesCleared:(id)a0;
- (void)_recordIgnoredSiriSuggestedSitesIfNeeded;
- (id)_reflectedURLForPossibleURL:(id)a0 ifPossibleURLMatchesUserTypedString:(id)a1;
- (void)_releaseBackTabsIfNecessary;
- (void)_releaseForwardTabsIfNecessary;
- (void)_releaseTabs:(id)a0 andSendWillCloseTabMessages:(char)a1;
- (void)_releaseTabsForBackForward;
- (void)_releaseTabsForGoingBack;
- (void)_reloadHonoringUnifiedField:(char)a0;
- (void)_relocateLocalTabGroupTabToPinnedFolderIfNeeded:(id)a0 atIndex:(unsigned long long)a1;
- (void)_removeAllTabCloseUndoActions;
- (void)_removeTitlebarViewController:(id)a0;
- (void)_reorderTabsToMatchingOrderingOfArray:(id)a0;
- (id)_replaceCurrentTabsWithExtractedTabs:(id)a0 selectedTab:(id)a1 getPreviouslySelectedTab:(id *)a2;
- (void)_replaceEmptyTabInNewWindowWithTabs:(id)a0;
- (void)_requireTitlebarUpdate;
- (long long)_resolveReaderButtonState;
- (void)_restoreDefaultToolbarAndUpdateLocalTabGroupTitle;
- (void)_restoreStateWithUUID:(id)a0;
- (void)_restoreTitlebarUpdatesDeferredByTabSwitching;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_restrictedFrameForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_revertEditsInUnifiedField;
- (id)_screenForWindow;
- (void)_searchButtonWasClicked;
- (id)_searchWebForString:(id)a0 withWindowPolicy:(long long)a1;
- (void)_selectNextTabInDirection:(int)a0;
- (void)_selectTab:(id)a0;
- (void)_selectTab:(id)a0 asynchronously:(char)a1 completionHandler:(id /* block */)a2;
- (void)_selectTabAsynchronouslyAtIndex:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (unsigned long long)_selectedFunctionBarTabIndex;
- (struct RefPtr<Safari::CompletionListItem, WTF::RawPtrTraits<Safari::CompletionListItem>, WTF::DefaultRefDerefTraits<Safari::CompletionListItem>> { struct CompletionListItem *x0; })_selectedParsecCompletionListItem;
- (void)_sendWillActivateEventToExtensions;
- (void)_sendWillDeactivateEventToExtensions;
- (void)_sendWillOpenEventToExtensionsIgnoringSuppression:(char)a0;
- (void)_setAssistantCalloutPopoverForContentOptions:(unsigned long long)a0;
- (void)_setAssistantUnifiedFieldToastForContentOptions:(unsigned long long)a0;
- (id)_setAutoresizingMasksForOrderedViews:(id)a0 toResizeOnly:(id)a1;
- (void)_setInterpretsAllInputAsURL;
- (void)_setLockdownModeBarVisible:(char)a0;
- (void)_setReaderButtonState:(long long)a0 animate:(char)a1;
- (void)_setSelectedTabs:(id)a0;
- (void)_setShouldAlwaysUseMediaCapturePreference:(id)a0 domain:(id)a1 shouldUse:(char)a2;
- (void)_setShouldDeferWKViewInWindowChanges:(char)a0;
- (void)_setShouldDisableFrameSizeUpdates:(char)a0;
- (void)_setSidebarVisibilityPreference:(char)a0;
- (void)_setStatusMessage:(id)a0;
- (void)_setTabBarVisible:(char)a0;
- (void)_setTitlebarBlurFiltersDisabled:(char)a0;
- (void)_setUnifiedFieldIcon:(id)a0;
- (char)_setUnifiedFieldNonURLText:(id)a0;
- (id)_setUpBackgroundTabAfterLastTabWithBrowserViewController:(id)a0;
- (void)_setUpLocationBar;
- (void)_setUpOverlayStatusWindowController;
- (void)_setUpPopupWindow;
- (void)_setUpTabBar;
- (id)_setUpTabWithBrowserViewController:(id)a0 atIndex:(unsigned long long)a1 options:(unsigned long long)a2;
- (char)_shouldBeTreatedAsStartPage;
- (char)_shouldBlockAutomaticUpdatesOfUnifiedFieldIfLoading;
- (char)_shouldExitQuickWebsiteSearchMode;
- (char)_shouldForceTitlebarBlurringDuringReaderAnimation:(id)a0;
- (char)_shouldHideTabBarAfterClosingBrowserTabViewItem:(id)a0;
- (char)_shouldHideTabBarForTabSwitcher:(id)a0;
- (char)_shouldHideTabBarWhenEnteringVisualTabPicker;
- (char)_shouldIncludeQuickNoteInShareMenu;
- (char)_shouldReloadTabAfterAutomaticallySwitchedTo:(id)a0;
- (char)_shouldSetUnifiedFieldAsFirstResponderImmediatelyAfterCurrentTabWasSelected;
- (char)_shouldShowFavoritesBar;
- (char)_shouldShowLockdownModeBar;
- (char)_shouldShowTabBarIgnoringVisualTabPicker;
- (char)_shouldShowWebsiteThemeColor;
- (char)_shouldUpdateFluidProgressForBrowserViewController:(id)a0;
- (char)_shouldUseOpenBookmarksInTabsNewWindowBehavior;
- (void)_showFavoritesBarIfNeeded;
- (void)_showLockdownModeBarIfNeeded;
- (void)_showPrivateBrowsingExplanationIfNeeded;
- (void)_showSidebar:(id)a0;
- (void)_showStartPage;
- (void)_showTabBarAndNewTabButtonWhenHidingVisualTabPickerIfNeeded;
- (void)_showTabBarAndUpdateCloseKeyEquivalentsIfNeeded;
- (void)_showTabSwitcherAndSidebarWhenHidingVisualTabPickerIfNeeded;
- (void)_showTitlebarViewController:(id)a0;
- (void)_sidebarWillClose:(id)a0;
- (void)_sidebarWillOpen:(id)a0;
- (void)_startDownloadHopAnimationFromPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_startHopAnimationFromPoint:(struct CGPoint { double x0; double x1; })a0 toDestination:(int)a1 withImage:(id)a2;
- (void)_startHopAnimationFromPoint:(struct CGPoint { double x0; double x1; })a0 withImage:(id)a1;
- (void)_startHopAnimationWithStartPoint:(struct CGPoint { double x0; double x1; })a0 endPoint:(struct CGPoint { double x0; double x1; })a1 image:(id)a2;
- (void)_startObservingContentLayoutRectChanges;
- (void)_startObservingSystemAppereanceChanges;
- (char)_startPageHasBackgroundImage;
- (void)_startPostponingCoalescedUnifiedFieldUpdates;
- (void)_startReadingListHopAnimationUsingStartPoint:(struct CGPoint { double x0; double x1; })a0 withImage:(id)a1;
- (void)_stopObservingContentLayoutRectChanges;
- (void)_stopObservingSystemAppereanceChanges;
- (void)_stopPostponingCoalescedUnifiedFieldUpdates;
- (char)_stopReloadButtonShouldBeVisible;
- (void)_stopSetInterpretsAllInputAsURLTimer;
- (void)_stopUpdateFirstResponderAfterTabSwitchTimer;
- (void)_suspendAndCloseTab:(id)a0;
- (void)_switchToGroupWithUUID:(id)a0 completionHandler:(id /* block */)a1;
- (char)_switchToRecentlyJoinedSharedTabGroupIfNeeded;
- (id)_tabBarBackgroundAppearance;
- (id)_tabBarViewController;
- (id)_tabContentViewOfCurrentTab;
- (id)_tabGroupThatCanBeConsolidated;
- (id)_tabGroupWithUUID:(id)a0;
- (id)_tabSwitchingMenuItemsForBrowserViewControllers:(id)a0;
- (id)_tabViewItemsFromSender:(id)a0;
- (id)_tabWithBrowserViewController:(id)a0 options:(unsigned long long)a1;
- (id)_tabsSortedByTitle;
- (id)_tabsSortedByWebsite;
- (void)_takeOffscreenToolbarSnapshotForVisualTabPickerAnimation;
- (id)_takePendingClosedWindowState;
- (void)_tellAppControllerWindowWillClose;
- (void)_tellUserThatAppIsHosed;
- (id)_titleForSharedWithYouMenuItemBasedOnViewVisibility;
- (void)_toggleFavoritesBarWithAnimation:(char)a0;
- (void)_toggleLocationBar:(id)a0 suppressToolbarConfigurationAutosave:(char)a1;
- (void)_toggleLocationBarWithoutSavingConfiguration;
- (void)_toggleLockdownModeBarWithAnimation:(char)a0;
- (void)_togglePerSitePreferencesPopoverRelativeToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)_toggleTabBarWithAnimation:(char)a0;
- (void)_toggleTitlebarViewController:(id)a0 toBeVisible:(char)a1;
- (void)_toggleTitlebarViewController:(id)a0 withAnimation:(char)a1 isShowing:(char)a2;
- (void)_toggleToolbarIgnoringCurrentEvent:(id)a0;
- (void)_toolbarsVisibilityDidChange;
- (double)_topContentInsetForTransitionFromFullScreen;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_translateBoundsOfViewForPerSitePreferencesPopover:(id)a0;
- (void)_translationAvailabilityDidChange:(id)a0;
- (void)_translationStateDidChange:(id)a0;
- (id)_tryGoToURLsInNewProcessUsingBackgroundLoad:(id)a0 withTabLabel:(id)a1 httpReferrer:(id)a2 canAttemptUpgradingRequestURLToHTTPS:(char)a3;
- (id)_tryMultipleURLs:(id)a0 windowPolicy:(long long)a1 httpReferrer:(id)a2 canAttemptUpgradingRequestURLToHTTPS:(char)a3;
- (void)_tryToCloseMultipleTabs:(id)a0;
- (void)_tryToCloseMultipleTabsWhenReady:(id)a0;
- (void *)_unifiedFieldCompletionController;
- (void)_unifiedFieldCompletionListDidHide:(id)a0;
- (void)_unifiedFieldCompletionListDidShow:(id)a0;
- (id)_unifiedFieldFallbackURLForAboutBlank;
- (char)_unifiedFieldIsEmpty;
- (char)_unifiedFieldIsReflectingCurrentURL;
- (char)_unifiedFieldIsReflectingURL:(id)a0;
- (char)_unifiedFieldIsReflectingUnifiedFieldURL;
- (char)_unifiedFieldIsShowing;
- (id)_unifiedFieldPlaceholderString;
- (id)_unifiedFieldPlaceholderStringForBrowserViewController:(id)a0;
- (id)_unifiedFieldText;
- (char)_unifiedFieldTextIsWorthyOfHonoringOnReload;
- (id)_unifiedFieldURL;
- (id)_unifiedFieldURLForBrowserViewController:(id)a0;
- (void)_unmuteAllTabsExcludingTabWithBrowserViewController:(id)a0;
- (id /* block */)_unnamedTabGroupTitleProvider;
- (id)_unpinnedTabs;
- (void)_unsuspendTab:(id)a0;
- (void)_updateAppearancesOfTitlebarViews:(id)a0;
- (void)_updateAudioIndicatorInUnifiedField;
- (void)_updateCloseKeyEquivalents;
- (void)_updateCloseKeyEquivalentsIfNeeded;
- (void)_updateCombinedSidebarTabGroupToolbarButtonWithSidebarVisible:(char)a0 animated:(char)a1;
- (void)_updateContentViewTopContentInset;
- (void)_updateDFRForMovingTabViewItem:(id)a0 fromIndex:(unsigned long long)a1 toIndex:(unsigned long long)a2 isChangingPinnedness:(char)a3;
- (void)_updateDocumentIsEdited;
- (void)_updateFavoritesBarLayoutIfNeeded;
- (void)_updateFirstResponderAfterTabSwitch;
- (void)_updateFunctionBarItems;
- (void)_updateFunctionBarTabThumbnailsNow;
- (void)_updateFunctionBarTabThumbnailsSoon;
- (void)_updateKeyboardLoopIfReady;
- (void)_updateLockdownModeBarLayoutIfNeeded;
- (char)_updateMuteCurrentTabMenuItemWithTabAudioState:(struct MutableMediaPlaybackAndMuteState { char x0; char x1; char x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; })a0;
- (char)_updateMuteOtherTabsMenuItemWithTabAudioState:(struct MutableMediaPlaybackAndMuteState { char x0; char x1; char x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; })a0;
- (void)_updateNotSecureWarningUI;
- (void)_updateOneStepBookmarkingButtonNow;
- (void)_updatePageTitleInUnifiedField;
- (void)_updatePinnedStateToTabViewItem:(id)a0 withUpdatedTab:(id)a1;
- (void)_updatePinnedTabIconsNow:(id)a0;
- (void)_updatePopUpWindowBlockedUI;
- (void)_updatePresenceForActiveUser;
- (char)_updateReaderButton:(int)a0;
- (void)_updateReduceMotionSettings;
- (void)_updateSecurityUI;
- (void)_updateSecurityUIVisibility;
- (void)_updateSelectedFunctionBarTabNow;
- (void)_updateSelectedFunctionBarTabSoon;
- (void)_updateSelectedTab;
- (void)_updateShareButtonNow;
- (void)_updateSidebarSeparator;
- (void)_updateStopReloadButtonNow;
- (void)_updateTabTitleForTabViewItems:(id)a0 useFastPath:(char)a1;
- (void)_updateThumbnailForTabViewItemSoon:(id)a0;
- (void)_updateTitlebarColor:(id)a0;
- (void)_updateTitlebarColor:(id)a0 pageIsPinned:(char)a1;
- (void)_updateTitlebarColor:(id)a0 pageIsPinned:(char)a1 forceUpdate:(char)a2;
- (void)_updateTitlebarColorAndUnifiedField:(id)a0;
- (void)_updateTitlebarColorFromWebView:(id)a0;
- (void)_updateTitlebarColorFromWebView:(id)a0 forceUpdate:(char)a1;
- (void)_updateTranslationUI;
- (void)_updateUIAfterProgrammaticUnifiedFieldTextChange;
- (void)_updateUnifiedFieldActiveAppearance;
- (void)_updateUnifiedFieldAppearance;
- (void)_updateUnifiedFieldAppearanceDueToFirstResponderChange;
- (void)_updateUnifiedFieldAuthenticationTextNow;
- (void)_updateUnifiedFieldAuthenticationTextSoon;
- (void)_updateUnifiedFieldBezelViewAppearance;
- (void)_updateUnifiedFieldBezelViewAppearance:(char)a0;
- (void)_updateUnifiedFieldIconNow;
- (void)_updateUnifiedFieldInputTypeCuesIfNeeded;
- (void)_updateUnifiedFieldTextNowIfDirty;
- (char)_updateUnifiedFieldTextNowIsSelectingNewTab:(char)a0;
- (void)_updateUnifiedFieldWritingDirection;
- (id)_updateUniqueBackgroundLoadURLs:(id)a0 isSpeculative:(char)a1 withTabLabel:(id)a2 identifier:(id)a3 httpReferrer:(id)a4 canAttemptUpgradingRequestURLToHTTPS:(char)a5;
- (void)_updateVideoViewer;
- (void)_updateVisualTabPickerButton;
- (void)_updateVisualTabPickerFrame;
- (void)_updateVisualTabPickerTabBarSnapshot;
- (void)_updateWKViewLayoutMode;
- (void)_updateWebAppTitlebarColor:(id)a0 pageIsPinned:(char)a1 forceUpdate:(char)a2;
- (void)_updateWebAppTitlebarColorFromWebView:(id)a0 forceUpdate:(char)a1;
- (void)_updateWindowTitleNow;
- (void)_updateWindowWithCurrentTabInfoUpdatingFluidProgressController:(char)a0 shouldUpdateKeyboardLoop:(char)a1 isSelectingNewTab:(char)a2;
- (void)_updateWindowWithNewSelectedTabInfoUpdatingFluidProgressController:(char)a0;
- (id)_urlStringForUnifiedFieldIcon;
- (unsigned long long)_validateDrop:(id)a0;
- (void)_visualTabPickerFadeOutToolbarBackground;
- (void)_visualTabPickerInsertToolbarBackground;
- (char)_visualTabPickerShouldAnimateSidebar;
- (void)_willInsertTab;
- (void)_willStartCreatingBrowserViewControllerRespectingNewTabBehavior:(char)a0 selectingOnCreation:(char)a1;
- (void)_willUnselectTab:(id)a0;
- (id)_windowContentView;
- (void)_windowDidResizeToEnterFullScreen;
- (void)_windowDidResizeToExitFullScreen;
- (char)_windowIsFullHeight;
- (id)_windowURL;
- (void)activityNoticeViewDidRequestDismissal:(id)a0;
- (void)addBookmarkFolder:(id)a0;
- (void)addBookmarkFromFunctionBarProvider:(id)a0;
- (void)addHistoryOperation:(id)a0 forBackgroundLoad:(id)a1;
- (void)addMediaPlaybackControlsView:(id)a0 forWKView:(id)a1;
- (char)anyToolbarsVisible;
- (void)applyTabBarVisibilityForLibraryViewController;
- (void)assistantPopoverViewControllerDidClearScribbleEdits;
- (void)assistantPopoverViewControllerDidClickFileScribbleRadar;
- (void)assistantPopoverViewControllerDidClickFindInPage;
- (void)assistantPopoverViewControllerDidClickReportScribbleIssue;
- (void)assistantPopoverViewControllerDidClickScribble;
- (void)assistantPopoverViewControllerDidClickWebsiteSettings;
- (void)assistantPopoverViewControllerDidClickZoomInButton;
- (void)assistantPopoverViewControllerDidClickZoomOutButton;
- (void)assistantPopoverViewControllerDidSelectZoomIndex:(unsigned long long)a0;
- (void)assistantPopoverViewControllerPresentReader;
- (char)assistantPopoverViewControllerShouldEnableZoomInButton;
- (char)assistantPopoverViewControllerShouldEnableZoomOutButton;
- (char)assistantPopoverViewControllerShouldShowReaderCustomization;
- (void)assistantPopoverViewControllerStartInWindowVideoMode;
- (void)attemptToShowFavoritesViewIfUnifiedFieldIsEmpty;
- (void)autoFill:(id)a0;
- (id)backMenuForBackForwardSegmentedControlInToolbarController:(id)a0;
- (id)backgroundAppearanceForUnifiedTabBar:(id)a0;
- (id)backgroundLoadBeingCommittedIntoBrowserViewController:(id)a0;
- (id)backgroundLoadBrowserViewControllerForTab:(id)a0;
- (id)backgroundLoadController:(id)a0 browserViewControllerForSettingUpBackgroundLoad:(id)a1;
- (id)backgroundLoadController:(id)a0 destinationTabViewItemForCommittingBackgroundLoad:(id)a1;
- (void)backgroundLoadController:(id)a0 didCancelBackgroundLoad:(id)a1 beingCommittedIntoTabViewItem:(id)a2;
- (void)backgroundLoadController:(id)a0 didCommitBackgroundLoad:(id)a1 intoTabViewItem:(id)a2;
- (void)backgroundLoadController:(id)a0 didDeferCommitOfBackgroundLoad:(id)a1;
- (void)backgroundLoadController:(id)a0 didReissueBackgroundLoad:(id)a1;
- (char)backgroundLoadController:(id)a0 handleBackgroundLoadDidPerformFirstVisuallyNonEmptyLayout:(id)a1;
- (void)backgroundLoadController:(id)a0 willCancelBackgroundLoad:(id)a1;
- (void)backgroundLoadController:(id)a0 willCommitBackgroundLoad:(id)a1 wasDeferred:(char)a2;
- (id)backgroundLoadForCurrentBrowserViewController;
- (id)backgroundLoadWithBrowserViewController:(id)a0;
- (id)backgroundLoadWithIdentifier:(id)a0;
- (void)beginBatchTabManipulation;
- (void)beginDownloadLocationRemoteViewControllerRequestUsingBlock:(id /* block */)a0;
- (void)beginVisualTabPickerTransitionWithEvent:(id)a0 originatingView:(id)a1;
- (id)bookmarkToDragFromSiteIconInUnifiedField:(id)a0;
- (char)bookmarksSidebarIsShowing;
- (id)browserTabViewItemsForVisualTabPickerController:(id)a0;
- (void)browserViewControllerBlockedFromKeyViewLoopDidChange:(id)a0;
- (void)browserViewControllerDidFirstMeaningfulPaint:(id)a0;
- (id)browserViewControllerIncludingBackgroundLoadForBrowserViewController:(id)a0;
- (void)browserWindow:(id)a0 didMakeFirstResponder:(id)a1;
- (void)browserWindow:(id)a0 shouldGoToURL:(id)a1;
- (id)browserWindow:(id)a0 shouldMakeFirstResponder:(id)a1;
- (void)browserWindowContentSplitViewControllerDidShowOrHideSidebar:(id)a0;
- (void)browserWindowContentSplitViewControllerWillHideOverlaySidebar:(id)a0;
- (void)browserWindowContentSplitViewControllerWillShowFullHeightViewController:(id)a0;
- (void)browserWindowContentSplitViewControllerWillShowOverlaySidebar:(id)a0;
- (void)browserWindowContentSplitViewControllerWillShowSidebar:(id)a0;
- (void)browserWindowTabViewController:(id)a0 didSelectTabViewItem:(id)a1;
- (void)browserWindowTabViewController:(id)a0 willSelectTabViewItem:(id)a1;
- (id)browserWindowTitleBarURL:(id)a0;
- (char)canAddBookmarkFromFunctionBarProvider:(id)a0;
- (char)canAutoFillFromFunctionBarProvider:(id)a0;
- (char)canCloseSelectedTab;
- (char)canFocusUnifiedFieldFromFunctionBarProvider:(id)a0;
- (char)canGoBackForToolbarController:(id)a0;
- (char)canGoBackFromFunctionBarProvider:(id)a0;
- (char)canGoForwardForToolbarController:(id)a0;
- (char)canGoForwardFromFunctionBarProvider:(id)a0;
- (char)canGoHomeFromFunctionBarProvider:(id)a0;
- (char)canHandleCommand0Through9ActionForIndex:(unsigned long long)a0;
- (char)canOpenNewTabFromFunctionBarProvider:(id)a0;
- (char)canReloadObeyingUnifiedField;
- (char)canShareFromFunctionBarProvider:(id)a0;
- (char)canShowStatusMessageInOverlayStatusWindow:(id)a0;
- (char)canShowTabHoverPreviewForTabBarView:(id)a0;
- (char)canShowTabHoverPreviewForUnifiedTabBar:(id)a0;
- (char)canShowUnifiedField;
- (char)canToggleFavoritesBarFromFunctionBarProvider:(id)a0;
- (char)canToggleHistoryFromFunctionBarProvider:(id)a0;
- (char)canToggleReaderFromFunctionBarProvider:(id)a0;
- (char)canToggleSidebarFromFunctionBarProvider:(id)a0;
- (char)canToggleVisualTabPickerFromFunctionBarProvider:(id)a0;
- (char)canToggleWebInspectorFromFunctionBarProvider:(id)a0;
- (void)cancelBackgroundLoad:(id)a0;
- (void)cancelBackgroundLoadSoonOrReissueLoadIfCommitted:(id)a0;
- (void)cancelClosingWindowDueToPageRefusingToUnload;
- (void)cancelCommittedBackgroundLoadAndReissueLoadSoon:(id)a0;
- (void)cancelFluidProgressForBrowserViewController:(id)a0;
- (void)cancelThumbnailSnapshotUpdateForTabContentViewController:(id)a0;
- (void)cancelVisualTabPickerPendingEntryAnimation;
- (void)certificateSheetViewControllerDidEndShowingCertificateSheet:(id)a0;
- (void)changePreferredLanguages:(id)a0;
- (void)changeTextEncoding:(id)a0;
- (char)checkIfBookmarksChangesAreAllowedPromptingIfNecessary;
- (void)clearFirstResponder;
- (void)closeAllTabPreviews;
- (void)closeCurrentTab:(id)a0;
- (void)closeFirstEmptyOrStartPage;
- (void)closeInactiveTabs:(id)a0;
- (char)closeKeyEquivalentClosesTab;
- (void)closeOtherTabsFromMenu:(id)a0;
- (void)closePlaceholdersAndDetachPinnedTabs;
- (void)closeProfileWindow:(id)a0;
- (void)closeSelectedTabGroup:(id)a0;
- (void)closeSelectedTabs:(id)a0;
- (void)closeTabFromMenu:(id)a0;
- (void)closeTabGroup:(id)a0;
- (void)closeTabGroupWhileRedoing:(id)a0;
- (void)closeTabOrWindowWithoutConfirming:(id)a0;
- (void)closeTabViewItemWithoutConfirming:(id)a0;
- (void)closeTabWithoutConfirmingWithUUID:(id)a0;
- (void)closeTabsAutomaticallyIfNecessaryEnsuringOcclusion:(char)a0;
- (void)closeTabsWhileClosingWindow:(id)a0;
- (void)closeWindowWithoutConfirming;
- (void)collectPageLayoutInformationForSidebarAnimationBeforeResize;
- (char)commitBackgroundLoad:(id)a0;
- (void)confirmClosingTabWithUnsavedCredentials:(id)a0 completionHandler:(id /* block */)a1;
- (void)consolidateTabViewItemsFromOtherWindows:(id)a0;
- (id)contentViewForOverlayStatusWindowController:(id)a0;
- (char)continuousPageViewIsHandlingPageTransitionOrLoadingPageItem;
- (id)createDefaultTabGroup;
- (id)createNewTabForWebExtensionsAtIndex:(unsigned long long)a0 withURL:(id)a1 shouldBeSelected:(char)a2;
- (void)createNewTabInTabBarView:(id)a0;
- (void)createTabGroupWithCurrentTabs:(id)a0;
- (void)createTabGroupWithCurrentTabsFromFileMenu:(id)a0;
- (void)createTabGroupWithCurrentTabsFromNewTabGroupButton:(id)a0;
- (void)createTabGroupWithCurrentTabsFromTabGroupPickerButton:(id)a0;
- (void)createTabGroupWithCurrentlySelectedTabsfromTabGroupPickerButton:(id)a0;
- (id)createTabGroupWithPreferredTitle:(id)a0;
- (char)currentTabHasDisplayCaptureDevice;
- (void)currentURLDidChangeInBrowserViewController:(id)a0;
- (void)currentWKViewDidSwipeSnapshotToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })currentWebViewSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })defaultFrame;
- (id)deselectPinnedTabIfNecessary;
- (void)didAddTabWithUUID:(id)a0 title:(id)a1 inSharedTabGroupWithUUID:(id)a2 byParticipantWithRecordID:(id)a3;
- (void)didBeginScrubbingTabsInFunctionBarWithProvider:(id)a0;
- (void)didChangeBackgroundImageInSharedTabGroupWithUUID:(id)a0 byParticipantWithRecordID:(id)a1;
- (void)didChangeFunctionBarItemsForProvider:(id)a0;
- (void)didChangeScopedFavoritesInSharedTabGroupWithUUID:(id)a0 byParticipantWithRecordID:(id)a1;
- (void)didClearBlockedWindowConfigurationCaches;
- (void)didCollectPageLayoutInformationForSidebarAnimationBeforeResize;
- (void)didEndScrubbingTabsInFunctionBarWithProvider:(id)a0;
- (void)didFinishSettingUpBackgroundNavigationInBrowserTabViewItem:(id)a0;
- (void)didFinishWebSearchInBrowserViewController:(id)a0 withDuration:(double)a1;
- (void)didForceContentRepaintAndCollectPageLayoutInformationForSidebarAnimationAfterResize:(id)a0;
- (void)didHideFavoritesPickerForFunctionBarProvider:(id)a0;
- (void)didNavigateInTabWithUUID:(id)a0 title:(id)a1 inSharedTabGroupWithUUID:(id)a2 byParticipantWithRecordID:(id)a3;
- (void)didRemoveTabWithUUID:(id)a0 title:(id)a1 inSharedTabGroupWithUUID:(id)a2 byParticipantWithRecordID:(id)a3;
- (void)didReplaceBrowserWKViewInTab:(id)a0;
- (void)didRestorePinnedTabsWithRestorationMode:(unsigned long long)a0;
- (void)didSelectTabViewItem;
- (void)didStartBrowserInitiatedLoadInBrowserViewController:(id)a0;
- (void)dismissFavoritesPickerFromVisibilityManager:(id)a0;
- (void)downloadFailedToHopToDockFromPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)dragBackgroundColorForUnifiedTabBar:(id)a0;
- (void)duplicateSelectedTabs:(id)a0;
- (void)duplicateTab:(id)a0;
- (id)duplicateTabViewItem:(id)a0;
- (void)enableNewTabGroupToolbarButton;
- (void)enableTabGroupPickerButton;
- (void)endBatchTabManipulation;
- (void)endRestoringWindow;
- (id)extensionEventTargetForBackgroundLoad:(id)a0;
- (void)fetchAssistantPegasusContent;
- (void)fetchAssistantPegasusContentIfNeeded;
- (id)findWBTabInLocalTabGroupWithUUID:(id)a0;
- (void)finishFluidProgressForBrowserViewController:(id)a0;
- (id)firstTabWithUnsavedCredentials;
- (void)fluidProgressRocketAnimationDidComplete;
- (void)focusContentView;
- (void)focusUnifiedFieldFromFunctionBarProvider:(id)a0;
- (void)forceCommittedBackgroundLoadToBeShown:(id)a0;
- (void)forceContentRepaintAndCollectPageLayoutInformationForSidebarAnimationAfterResize;
- (void)formTextStatusWasVerified:(id)a0;
- (id)forwardMenuForBackForwardSegmentedControlInToolbarController:(id)a0;
- (char)frameAutosaveIsAllowed;
- (void)frameRestrictionsChanged;
- (void)functionBarProvider:(id)a0 didSelectTabAtIndex:(unsigned long long)a1;
- (void)generateWebAppForCurrentPage:(id)a0;
- (void)goBackAndFlashToolbarButton:(id)a0;
- (void)goBackFromFunctionBarProvider:(id)a0;
- (void)goBackOrForwardFromSegmentedControl:(id)a0;
- (void)goForwardFromFunctionBarProvider:(id)a0;
- (void)goForwardInWindow:(id)a0;
- (void)goHomeFromFunctionBarProvider:(id)a0;
- (void)goToActivatedCompletionListURL:(id)a0 referrer:(id)a1 searchState:(id)a2 isPunchoutURL:(char)a3;
- (void)goToNextTabGroup:(id)a0;
- (void)goToPreviousTabGroup:(id)a0;
- (void)goToURLInNewProcessIfPossible:(id)a0 withTitle:(id)a1 windowPolicy:(long long)a2 tabPlacementHint:(id)a3;
- (void)goToUnifiedFieldURL:(id)a0;
- (void)handleClickInWindowNotHandledByAnyView;
- (void)handleCommand0Through9ActionForIndex:(unsigned long long)a0;
- (void)handlePerformSelectNextOrPreviousTabKeyEquivalentWithEvent:(id)a0 navigationDirection:(int)a1;
- (void)hideAllBannersForCurrentBrowserContentViewController;
- (void)hideFavoritesBarAfterReadingListAnimation:(id)a0;
- (void)hideOverlaySidebarIfNeeded;
- (id)highlightBackgroundColorForUnifiedTabBar:(id)a0;
- (void)imageHopAnimationDidFinish:(id)a0;
- (id)imageHopParentWindow;
- (id)initAsPopupWindow:(char)a0;
- (id)initWithBrowsingMode:(unsigned long long)a0 isPopupWindow:(char)a1;
- (void)insertInOrderedTabViewItems:(id)a0;
- (void)insertInOrderedTabViewItems:(id)a0 atIndex:(unsigned int)a1;
- (void)insertPreservedTab:(id)a0 atIndex:(unsigned long long)a1;
- (void)insertTabsWithStates:(id)a0 atIndex:(unsigned long long)a1;
- (void)insertUnpinnedTabIfNecessary;
- (void)installSidebarFromUserGesture;
- (void)installSidebarIfNecessary;
- (void)installSidebarWithAnimation:(char)a0;
- (void)installedBannersDidChangeInBrowserViewController:(id)a0;
- (void)internalTranslationRadar:(id)a0;
- (char)isAvailableForForcedLocationUsingWindowPolicy:(long long)a0;
- (char)isBackgroundLoadBrowserViewController:(id)a0;
- (char)isCreatingNewSelectedTabRespectingNewTabBehavior;
- (char)isDraggingTab:(id)a0;
- (char)isEnteringOrInFullScreenMode;
- (char)isFavoritesBarVisible;
- (char)isInContinuousMode;
- (char)isInSameProfileAsBrowserWindowController:(id)a0;
- (char)isInteractionBlockedByModalWindow;
- (char)isLocationBarVisible;
- (char)isReaderCurrentlyActive;
- (char)isShowingDownloadsPopover;
- (char)isShowingVisualTabPicker;
- (char)isSidebarAnimationInProgress;
- (char)isTabGroupSelected:(id)a0;
- (char)isTabInSelectedTabGroup:(id)a0;
- (char)isTogglingFullScreenMode;
- (char)isViewVisible:(unsigned long long)a0;
- (void)loadDidCommitInBrowserViewController:(id)a0;
- (void)loadDidFinishInBrowserViewController:(id)a0;
- (void)loadDidStartInBrowserViewController:(id)a0;
- (id)loadUsingBackgroundLoadForURL:(id)a0 inBrowserTabViewItem:(id)a1 copySessionStateAfterLoad:(char)a2;
- (void)loadWebExtensionURL:(id)a0 inBrowserTabViewItem:(id)a1;
- (void)loadingStatusDidChangeInBrowserViewController:(id)a0;
- (void)mainContentViewDidChangeInBrowserViewController:(id)a0;
- (void)mainDocumentDidFirstLayoutInBrowserViewController:(id)a0;
- (void)mainDocumentDidFirstMeaningfulPaintInBrowserViewController:(id)a0;
- (void)mainDocumentDidLoadInBrowserViewController:(id)a0;
- (id)makeBrowserViewControllerForBackgroundLoadController:(id)a0 configuration:(id)a1 urls:(id)a2;
- (id)makeBrowserViewControllerInTabAtIndex:(unsigned long long)a0 andSelect:(char)a1;
- (id)makeBrowserViewControllerInTabAtIndex:(unsigned long long)a0 configuration:(id)a1 andSelect:(char)a2;
- (id)makeBrowserViewControllerInTabOfType:(long long)a0 andSelect:(char)a1;
- (id)makeBrowserViewControllerInTabOfType:(long long)a0 configuration:(id)a1 andSelect:(char)a2;
- (id)makeBrowserViewControllerInTabOfType:(long long)a0 withWindowPolicy:(long long)a1 shouldSelectTab:(char)a2;
- (id)makeNewEmptyBrowserViewControllerInTab;
- (void)makeUnifiedFieldFirstResponderIfNeededForUnifiedTabBar:(id)a0;
- (void)makeUnifiedFieldOrWindowFirstResponder;
- (id)mediaAndDisplayCaptureIndicatorMenuForBrowserTabViewItem:(id)a0;
- (id)mediaPlaybackControlsViewForFunctionBarProvider:(id)a0;
- (id)menuForSidebarTabWithBrowserTabViewItem:(id)a0 event:(id)a1;
- (void)mouseDidExitVisualTabPickerButtonInToolbarController:(id)a0;
- (void)mouseDownInVisualTabPickerButtonInToolbarController:(id)a0;
- (void)moveBackgroundLoad:(id)a0 toWindowController:(id)a1;
- (void)moveCurrentTabToNewWindow:(id)a0;
- (void)moveSelectedTabsToNewWindow:(id)a0;
- (void)moveTab:(id)a0 toIndex:(unsigned long long)a1;
- (void)moveTabFromOtherWindow:(id)a0 toIndex:(unsigned long long)a1 andSelect:(char)a2;
- (void)moveTabGroupTabToNewWindow:(id)a0;
- (void)moveTabItem:(id)a0 toTabGroup:(id)a1 destinationWindowController:(id)a2;
- (void)moveTabToNewWindowFromMenu:(id)a0;
- (void)mutedStateDidChangeForTabViewItem:(id)a0;
- (void)newTabGroup:(id)a0;
- (void)newTabGroupFromFileMenu:(id)a0;
- (void)newTabGroupFromNewTabGroupButton:(id)a0;
- (void)newTabGroupFromTabGroupPickerButton:(id)a0;
- (void)newTabWithinWindow:(id)a0;
- (void)notSecureWarningStatusDidChangeInBrowserViewController:(id)a0;
- (unsigned long long)numberOfNonDisposableTabs;
- (void)openLocation:(id)a0;
- (char)openNewTab;
- (void)openNewTabAsynchronouslyInCurrentContext:(char)a0 completionHandler:(id /* block */)a1;
- (void)openNewTabFromFunctionBarProvider:(id)a0;
- (char)openNewTabInCurrentContext:(char)a0;
- (void)openNewTabsWithPasteboard:(id)a0;
- (void)openNewTabsWithStates:(id)a0;
- (void)openPreviewBrowserViewControllerInTab:(id)a0 andSelect:(char)a1;
- (void)pageTitleDidChangeInBrowserViewController:(id)a0;
- (void)pageTypeDidChangeForBrowserViewController:(id)a0;
- (void)pageTypeDidChangeInBrowserViewController:(id)a0;
- (id)parentWindowForOverlayStatusWindowController:(id)a0;
- (void)participants:(id)a0 didJoinSharedTabGroupWithUUID:(id)a1;
- (void)participants:(id)a0 didLeaveSharedTabGroupWithUUID:(id)a1;
- (void)performAutoFillFromFunctionBarProvider:(id)a0;
- (void)performBlockWhileFocusingUnifiedFieldProgrammatically:(id /* block */)a0;
- (void)performSearchWithQuery:(id)a0 usingQuickWebsiteSearchProvider:(id)a1;
- (void)performTasksAfterFirstPageLoadIfNeeded;
- (void)performWebSearchWithSearchString:(id)a0;
- (id)placeholderTextInEmptyUnpinnedRegionOfTabBarView:(id)a0;
- (void)prepareForWindowToEnterFullScreen;
- (void)prepareForWindowToExitFullScreen;
- (void)presentActivityNotice:(id)a0 completionHandler:(id /* block */)a1;
- (void)preserveTabToBeMovedToAnotherWindowLater:(id)a0;
- (void)printFromToolbar:(id)a0;
- (void)profileWindow:(id)a0 selectProfile:(id)a1;
- (void)profileWindow:(id)a0 selectTabGroup:(id)a1;
- (void)progressDidCancelInBrowserViewController:(id)a0;
- (void)progressDidFinishInBrowserViewController:(id)a0;
- (void)progressDidStartInBrowserViewController:(id)a0;
- (void)progressValueDidChangeInBrowserViewController:(id)a0;
- (long long)readerButtonStateForFunctionBarProvider:(id)a0;
- (void)readerDidActivateInBrowserViewController:(id)a0;
- (void)readerDidBecomeUnavailableUnexpectedlyInBrowserViewController:(id)a0;
- (void)readerDidDeactivateInBrowserViewController:(id)a0;
- (void)readerWillActivateInBrowserViewController:(id)a0;
- (void)readerWillDeactivateInBrowserViewController:(id)a0;
- (char)readingListSidebarIsShowing;
- (void)releaseTabsForGoingForward;
- (void)reloadAllTabs:(id)a0;
- (void)reloadIgnoringUnifiedField:(id)a0;
- (void)reloadObeyingUnifiedField:(id)a0;
- (void)reloadTabFromMenu:(id)a0;
- (void)reloadWithInvertedAdvancedPrivateBrowsingPrivacyProtectionsEnabledSetting:(id)a0;
- (void)reloadWithInvertedContentBlockersEnabledSetting:(id)a0;
- (void)reloadWithInvertedPrivateRelayEnabledSetting:(id)a0;
- (void)removeFromOrderedTabViewItemsAtIndex:(unsigned int)a0;
- (void)removeMediaPlaybackControlsViewForWKView:(id)a0;
- (void)replaceInOrderedTabViewItems:(id)a0 atIndex:(unsigned int)a1;
- (void)replaceTabsWithStates:(id)a0 allowGoBack:(char)a1 allowJavaScript:(char)a2 selectTabIndex:(unsigned long long)a3;
- (void)replaceTabsWithStates:(id)a0 options:(unsigned long long)a1 allowGoBack:(char)a2 selectTabIndex:(unsigned long long)a3;
- (void)reportAutoFillIssue:(id)a0;
- (void)resetFirstResponder;
- (void)resignUnifiedFieldFirstResponderForUnifiedTabBar:(id)a0;
- (id)restoreClosedTab:(id)a0 atIndex:(unsigned long long)a1 andSelect:(char)a2;
- (void)restoreStateAfterNavigatingAwayFromSidebarItemThatRequiresFullHeightViewController;
- (void)restoreTabStates:(id)a0 selectTabIndex:(unsigned long long)a1;
- (void)restoreTabStates:(id)a0 selectingTabWithIndexAfterPinnedTabsAreRestored:(unsigned long long)a1;
- (void)restoreTitlebarColorUpdates;
- (void)restoreUnifiedFieldText:(id)a0;
- (void)restoreWithBrowserWindowPersistentState:(id)a0;
- (void)safari_toggleSidebar:(id)a0;
- (void)saveTabGroupTabWithTabViewItem:(id)a0 shouldPersist:(char)a1 usingBlock:(id /* block */)a2;
- (void)searchForString:(id)a0 withWindowPolicy:(long long)a1;
- (void)searchVisualTabPickerWithString:(id)a0;
- (void)selectLocalTabGroup:(id)a0;
- (void)selectTabAtIndex:(unsigned long long)a0;
- (void)selectTabForBrowserViewController:(id)a0;
- (void)selectTabGroupForFocusMode:(id)a0;
- (void)selectTabGroupWithUUID:(id)a0 force:(char)a1 closeVisualPicker:(char)a2 fromSidebar:(char)a3 completionHandler:(id /* block */)a4;
- (void)selectTabGroupWithUUID:(id)a0 withOptions:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)selectTabViewItemFromSidebar:(id)a0;
- (void)selectTabViewItemWithTabGroupTabUUID:(id)a0;
- (void)selectTabViewItems:(id)a0;
- (void)selectTabViewItemsFromSidebar:(id)a0;
- (void)selectUnifiedField:(id)a0;
- (id)selectedTab;
- (id)selectedTabBarViewItemAfterClosingCurrentTabInTabBarView:(id)a0;
- (id)selectedTabBarViewItemAfterClosingCurrentTabInUnifiedTabBar:(id)a0;
- (unsigned long long)selectedTabIndex;
- (void)sessionStateDidChange;
- (void)setFavoritesBarVisible:(char)a0;
- (void)setFrameProgrammatically:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setLocationBarVisible:(char)a0;
- (void)setOverlayStatusBarEnabled:(char)a0;
- (void)setSelectedTabLastVisitTimeToNow;
- (void)setSidebarWidth:(double)a0;
- (void)setToolbarsVisible:(char)a0;
- (void)setUpVisualTabPickerView;
- (void)setView:(unsigned long long)a0 visible:(char)a1;
- (void)shareFromFunctionBarProvider:(id)a0;
- (char)shouldAllowUserCustomizationForToolbarController:(id)a0;
- (char)shouldAnimateTabSelection:(id)a0;
- (char)shouldAnimateTabSelectionInTabBarView:(id)a0;
- (char)shouldBlockUserInteractionAfterShowingAutomationAlert;
- (char)shouldOpenNewTabFromFileMenu;
- (char)shouldSuppressExtensionWindowEvents;
- (void)showBookmarksInSidebar;
- (void)showBookmarksSidebar:(id)a0;
- (void)showBookmarksWithExactSearchString:(id)a0;
- (void)showCertificateInformation:(id)a0;
- (void)showFavorites:(id)a0;
- (void)showFavoritesBarForReadingListAnimation:(id)a0;
- (void)showFavoritesPickerFromVisibilityManager:(id)a0;
- (void)showHistoryInBookmarksView:(id)a0;
- (void)showPopUpWindowBlockedUI;
- (void)showReadingListSidebar;
- (void)showSharingServicePicker:(id)a0;
- (void)showStartPage:(id)a0;
- (void)showTopSitesWall:(id)a0;
- (void)showVisualTabPicker;
- (void)showVisualTabPickerInteractive;
- (id)sidebarViewController;
- (double)sidebarWidth;
- (void)sortTabsByTitle:(id)a0;
- (void)sortTabsByWebsite:(id)a0;
- (void)startEditingSelectedGroupTitleSoon;
- (void)startFluidProgressForBrowserViewController:(id)a0;
- (void)startHopAnimationFromPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)startReadingListHopAnimationFromMouseLocation;
- (void)startReadingListHopAnimationUsingStartPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)startRestoringWindow;
- (void)startRocketEffectForBrowserViewController:(id)a0;
- (void)startSiteIconHopAnimationToDestination:(int)a0;
- (id)startSpawnedTabBackgroundLoadWithURL:(id)a0;
- (void)startTopHitBackgroundLoadWithURL:(id)a0 identifier:(id)a1;
- (void)statusDidChangeInBrowserViewController:(id)a0;
- (void)stopOrReload:(id)a0;
- (void)stopOrReloadOrShowReaderAppearanceCustomizationPopover:(id)a0;
- (void)switchToRecentlyAcceptedSharedTabGroupWithUUID:(id)a0 acceptedShareDate:(id)a1;
- (void)switchToTabViewIfNecessaryWithTabGroup:(id)a0;
- (void)switchToTabWithUUID:(id)a0 inTabGroupWithUUID:(id)a1 closePreviousTabIfNeeded:(char)a2;
- (void)syncPinnedTabs;
- (char)tabBarView:(id)a0 acceptDrop:(id)a1 index:(unsigned long long)a2;
- (id)tabBarView:(id)a0 bookmarkForTabBarViewItem:(id)a1;
- (char)tabBarView:(id)a0 canCloseTabBarViewItem:(id)a1;
- (char)tabBarView:(id)a0 canDetachTabBarViewItem:(id)a1;
- (char)tabBarView:(id)a0 canDragToPinTab:(id)a1;
- (id)tabBarView:(id)a0 destinationWindowForDetachedTabBarViewItems:(id)a1 withActiveTabIndex:(unsigned long long)a2;
- (id)tabBarView:(id)a0 detachedWindowImageForDraggedTabBarViewItem:(id)a1;
- (void)tabBarView:(id)a0 didFinishTransitionAnimationForWindow:(id)a1;
- (void)tabBarView:(id)a0 didMoveTabBarViewItem:(id)a1 toIndex:(unsigned long long)a2 isChangingPinnedness:(char)a3;
- (void)tabBarView:(id)a0 didUpdateSelectedTabs:(id)a1;
- (id)tabBarView:(id)a0 dragImageForTabBarViewItem:(id)a1 withBookmark:(id)a2;
- (id)tabBarView:(id)a0 menuForTabBarViewItem:(id)a1 event:(id)a2;
- (void)tabBarView:(id)a0 selectTabBarViewItem:(id)a1;
- (id)tabBarView:(id)a0 tabPreviewDataSourceForTabBarViewItem:(id)a1;
- (unsigned long long)tabBarView:(id)a0 validateDrop:(id)a1;
- (unsigned long long)tabBarView:(id)a0 validateTabDrop:(id)a1;
- (void)tabBarViewDidZoomIn:(id)a0;
- (void)tabContentViewControllerDidChangeCurrentViewController:(id)a0;
- (void)tabContentViewControllerWillChangeCurrentViewController:(id)a0;
- (void)tabDialogDidChangeInBrowserViewController:(id)a0 isHTTPAuthenticationDialog:(char)a1;
- (void)tabGroupManager:(id)a0 didUpdateProfileWithIdentifier:(id)a1 difference:(id)a2;
- (void)tabGroupManager:(id)a0 didUpdateTabGroupWithUUID:(id)a1;
- (void)tabGroupManager:(id)a0 didUpdateTabWithUUID:(id)a1 userDriven:(char)a2;
- (void)tabGroupManager:(id)a0 didUpdateTabsInTabGroupWithUUID:(id)a1;
- (void)tabGroupManager:(id)a0 willReplaceTabWithUUID:(id)a1 withTabWithUUID:(id)a2;
- (void)tabGroupManagerDidUpdateTabGroups:(id)a0;
- (id)tabPreviewDataSourceForTabBarViewItem:(id)a0;
- (void)toggleAlwaysShowTabBar:(id)a0;
- (void)toggleBookmarks:(id)a0;
- (void)toggleBookmarksEditView:(id)a0;
- (void)toggleBookmarksEditViewWithSidebarVisible:(char)a0 animated:(char)a1;
- (void)toggleBookmarksSidebar:(id)a0;
- (void)toggleCloudTabsPopover:(id)a0;
- (void)toggleDownloadsPopover:(id)a0;
- (void)toggleFavoritesBar:(id)a0;
- (void)toggleFavoritesBarFromFunctionBarProvider:(id)a0;
- (void)toggleHistoryFromFunctionBarProvider:(id)a0;
- (void)toggleHistoryInBookmarksView:(id)a0;
- (void)toggleHistoryInBookmarksViewWithSidebarVisible:(char)a0 animated:(char)a1;
- (void)toggleLocationBar:(id)a0;
- (void)toggleMaximizeWindowIfNeeded:(char)a0;
- (void)toggleMuteCurrentTab:(id)a0;
- (void)toggleMuteOtherTabs:(id)a0;
- (void)toggleMuteTabFromMenu:(id)a0;
- (void)togglePerSitePreferencesPopoverFromMenuItem;
- (void)togglePerSitePreferencesPopoverFromMenuItem:(id)a0;
- (void)togglePerSitePreferencesPopoverFromToolbarButton:(id)a0;
- (void)togglePinTabFromMenu:(id)a0;
- (void)togglePinnedStateForTab:(id)a0;
- (void)togglePrivacyReportPopoverFromToolbarButton:(id)a0;
- (void)toggleReader:(id)a0;
- (void)toggleReaderFromFunctionBarProvider:(id)a0;
- (void)toggleReadingListSidebar:(id)a0;
- (void)toggleResponsiveDesignMode:(id)a0;
- (void)toggleSharedWithYou:(id)a0;
- (void)toggleShowFrequentlyVisitedSites:(id)a0;
- (void)toggleSidebarFromFunctionBarProvider:(id)a0;
- (void)toggleVisualTabPicker:(id)a0;
- (void)toggleVisualTabPickerFromFunctionBarProvider:(id)a0;
- (void)toggleVisualTabPickerFromMenu:(id)a0;
- (void)toggleWebInspectorFromFunctionBarProvider:(id)a0;
- (void)toolbarController:(id)a0 selectTabForActiveContactWithIdentifier:(id)a1;
- (id)toolbarItemTargetForToolbarController:(id)a0;
- (id)toolbarTitlebarColorForUnifiedTabBar:(id)a0;
- (id)toolbarViewWindow;
- (void)translateWebpageToLocale:(id)a0;
- (void)translationFeedback:(id)a0;
- (char)trySwitchingToPinnedTabOnNavigationToURL:(id)a0;
- (void)tryToCloseOtherTabs:(id)a0;
- (void)tryToCloseOtherTabsWhenReady:(id)a0;
- (void)tryToCloseOtherTabsWhenReadyWithTabToActivate:(id)a0 tabsToKeepOpen:(id)a1;
- (void)tryToCloseTab:(id)a0;
- (void)tryToCloseTabIfPossibleWithoutWarning:(id)a0;
- (void)tryToCloseTabWhenReady:(id)a0;
- (void)tryToCloseWindowWhenReady;
- (char)tryToCommitBackgroundLoadDueToEventRequiringUserIntervention:(id)a0;
- (void)undoCloseTab:(id)a0 atIndex:(unsigned long long)a1;
- (id)unifiedField:(id)a0 contextMenuForEvent:(id)a1;
- (char)unifiedFieldAllowAssistant:(id)a0;
- (char)unifiedFieldAllowMoreMenu:(id)a0;
- (char)unifiedFieldAllowPrivacyReportPopover:(id)a0;
- (void)unifiedFieldAutocompleteSelectionDidChange:(id)a0;
- (void)unifiedFieldBecameFirstResponder:(id)a0;
- (char)unifiedFieldCanDragToReorder:(id)a0;
- (char)unifiedFieldCanShowPerSitePreferences:(id)a0;
- (void)unifiedFieldCloseActiveTab:(id)a0;
- (void)unifiedFieldDidMoveToWindow:(id)a0;
- (id)unifiedFieldFallbackURLForAboutBlank:(id)a0;
- (char)unifiedFieldIsInteractivelyClosingTabs:(id)a0;
- (void)unifiedFieldMarkedTextDidChange:(id)a0;
- (double)unifiedFieldMaxAvailableWidth:(id)a0;
- (void)unifiedFieldPerSitePreferencesContextMenuItemWasSelected:(id)a0;
- (void)unifiedFieldPerformAudioIndicatorAction:(id)a0;
- (void)unifiedFieldPerformRightmostButtonAction:(id)a0;
- (id)unifiedFieldReaderMenu:(id)a0;
- (id)unifiedFieldReloadMenu:(id)a0 isInMoreMenu:(char)a1;
- (void)unifiedFieldResignedFirstResponder:(id)a0;
- (void)unifiedFieldSearchButtonWasClicked:(id)a0;
- (char)unifiedFieldShouldAllowCloseButton:(id)a0;
- (char)unifiedFieldShouldAllowShareOption:(id)a0;
- (char)unifiedFieldShouldBehaveAsSingleTab:(id)a0;
- (char)unifiedFieldShouldCenter:(id)a0;
- (char)unifiedFieldShouldSelectAllAfterMouseDown:(id)a0;
- (char)unifiedFieldShouldUseActiveAppearance:(id)a0;
- (void)unifiedFieldStartDragging:(id)a0;
- (void)unifiedFieldStartDraggingWindow:(id)a0 withEvent:(id)a1;
- (void)unifiedFieldStartReordering:(id)a0 withEvent:(id)a1;
- (id)unifiedFieldTitlebarColor:(id)a0;
- (id)unifiedFieldTitlebarColorForPlaceholder:(id)a0;
- (void)unifiedFieldToggleAssistant;
- (id)unifiedFieldTranslationMenu:(id)a0;
- (void)unifiedFieldURLDidChangeInBrowserViewController:(id)a0;
- (void)unifiedFieldURLDropped:(id)a0;
- (void)unifiedFieldUpdateFaviconInsetsAndBacking:(id)a0;
- (void)unifiedFieldWasClicked:(id)a0;
- (double)unifiedFieldWidthForActiveTab:(id)a0;
- (char)unifiedTabBar:(id)a0 acceptTabDrop:(id)a1 index:(unsigned long long)a2;
- (void)unifiedTabBar:(id)a0 activateTabBarViewItem:(id)a1;
- (id)unifiedTabBar:(id)a0 backgroundColorForActiveTab:(char)a1 isVibrant:(char)a2;
- (id)unifiedTabBar:(id)a0 bookmarkForTabBarItem:(id)a1;
- (char)unifiedTabBar:(id)a0 canCloseTabBarItem:(id)a1;
- (char)unifiedTabBar:(id)a0 canDetachTabBarViewItem:(id)a1;
- (char)unifiedTabBar:(id)a0 canDragToPinTab:(id)a1;
- (void)unifiedTabBar:(id)a0 closeTabBarItem:(id)a1;
- (id)unifiedTabBar:(id)a0 destinationWindowForDetachedTabBarViewItems:(id)a1 withActiveTabIndex:(unsigned long long)a2;
- (void)unifiedTabBar:(id)a0 detachedWindowImageForDraggedTabBarViewItem:(id)a1 completion:(id /* block */)a2;
- (void)unifiedTabBar:(id)a0 didBeginDraggingTab:(id)a1;
- (void)unifiedTabBar:(id)a0 didFinishTransitionAnimationForWindow:(id)a1;
- (void)unifiedTabBar:(id)a0 didUpdateSelectedTabs:(id)a1;
- (id)unifiedTabBar:(id)a0 dragImageForUnifiedTabBarItem:(id)a1 withBookmark:(id)a2;
- (id)unifiedTabBar:(id)a0 draggableTabViewItemForTabBarViewItem:(id)a1;
- (id)unifiedTabBar:(id)a0 menuForTabBarViewItem:(id)a1 event:(id)a2;
- (char)unifiedTabBar:(id)a0 tabBarViewItem:(id)a1 canShowAccessoryViewWhenNarrow:(id)a2;
- (float)unifiedTabBar:(id)a0 tabBarViewItem:(id)a1 visibilityPriorityForAccessoryView:(id)a2;
- (id)unifiedTabBar:(id)a0 tabPreviewDataSourceForTabBarViewItem:(id)a1;
- (void)unifiedTabBar:(id)a0 unifiedFieldApplyFaviconBacking:(id)a1 insets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a2;
- (id)unifiedTabBar:(id)a0 unifiedFieldForUnifiedTabBarItem:(id)a1;
- (id)unifiedTabBar:(id)a0 unifiedFieldIconForUnifiedTabBarItem:(id)a1;
- (unsigned long long)unifiedTabBar:(id)a0 validateDrop:(id)a1;
- (unsigned long long)unifiedTabBar:(id)a0 validateTabDrop:(id)a1;
- (id)unifiedTabBarDelegateForToolbarController:(id)a0;
- (void)unifiedTabBarDidUpdateLayout:(id)a0;
- (char)unifiedTabBarIsInFrontmostWindow:(id)a0;
- (void)unifiedTabBarResignFirstResponder;
- (char)unifiedTabBarShouldOnlyShowActiveTab:(id)a0;
- (char)unifiedTabBarShouldUseBackgroundMaterial:(id)a0;
- (void)uninstallSidebarWithAnimation:(char)a0;
- (void)updateAllTabTitlesSoon;
- (void)updateFirstResponderOnPageLoadCommit;
- (void)updateFirstResponderOnPageLoadStart;
- (void)updateFirstResponderOnTransitionToContinuousReadingViewPage;
- (void)updateFluidProgressForBrowserViewController:(id)a0;
- (void)updateLoadingStatus;
- (void)updateLockedPrivateBrowsingIfNecessary;
- (void)updateOneStepBookmarkingButton;
- (void)updateOneStepBookmarkingButtonSoon;
- (void)updateReaderButtonNow;
- (void)updateReaderButtonSoon;
- (void)updateShareButtonSoon;
- (void)updateSidebarButtonNow;
- (void)updateSidebarButtonSoon;
- (void)updateSidebarVisibility;
- (void)updateStatusMessage;
- (void)updateStopReloadButtonSoon;
- (void)updateTabBarLayout;
- (void)updateTabGroupTabs;
- (void)updateTabTitlesSoon;
- (void)updateThumbnailSnapshotForTabContentViewController:(id)a0;
- (void)updateTitlebarColor;
- (void)updateToolbarTrackerCount;
- (void)updateUIComponentsForScribbleIfNeeded;
- (void)updateUnifiedFieldAssistantState;
- (void)updateUnifiedFieldIconSoon;
- (void)updateUnifiedFieldPlaceholderString;
- (void)updateUnifiedFieldTextSoon;
- (void)updateWindowState;
- (void)updateWindowStateIncludingTabStates:(char)a0;
- (void)updateWindowTitleSoon;
- (void)userDidScrollDownInBrowserViewController:(id)a0;
- (void)userDidScrollDownInStartPage:(double)a0;
- (void)userInteractedWithPageDuringSwipeGesture;
- (void)userPrivateWindowRestorationPolicyDidChange;
- (void)validateToolbarItemForExtension:(id)a0;
- (char)validate_showCertificateInformation:(id)a0;
- (char)validate_toggleResponsiveDesignMode:(id)a0;
- (void)viewOriginalWebpage:(id)a0;
- (char)visibilityManager:(id)a0 isBrowserContentViewControllerCurrentlyActive:(id)a1;
- (id)visibilityManagerInputContextForKeyboardMethodsBarVisibility:(id)a0;
- (char)visibilityManagerIsCurrentWindowMain:(id)a0;
- (char)visibilityManagerIsUnifiedFieldBeingEdited:(id)a0;
- (char)visibilityManagerIsWindowCurrentlySwitchingTabs:(id)a0;
- (char)visibilityManagerWantsStartPageInCompletionList:(id)a0;
- (void)visualTabPickerControllerDidCancelCloseAnimation:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visualTabPickerRootViewFrame;
- (id)webExtensionTabsForTabViewItems:(id)a0;
- (void)webSearchTipDidBecomeUnavailable;
- (void)willChangeFunctionBarItemsForProvider:(id)a0;
- (void)willCloseProfileWindow;
- (void)willLoadURLRequestForBrowserViewController:(id)a0;
- (void)willSelectTabViewItem:(id)a0;
- (void)willShowCustomizeToolbarSheet;
- (char)window:(id)a0 performKeyEquivalent:(id)a1;
- (char)window:(id)a0 willHandleKeyEvent:(id)a1;
- (char)window:(id)a0 willHandleMouseDownEvent:(id)a1;
- (char)window:(id)a0 willHandleMouseDraggedEvent:(id)a1;
- (void)windowDidBecomeVisible:(id)a0;
- (void)windowFunctionBarProvider:(id)a0 didSelectFavorite:(id)a1;
- (long long)windowPolicyForWindowShowingFullHeightViewController:(long long)a0;
- (long long)windowPolicyRespectingVisualTabPickerVisibility:(long long)a0;
- (char)windowShouldDeferFullScreenTransitions;
- (void)windowTitleNeedsUpdate;
- (void)zoomInOrOutFromSegmentedControl:(id)a0;
- (void)zoomToStandardSize:(id)a0;

@end

@class NSTextField, NSString, NSView, NSStackView, NSImage, NSMutableArray, NSImageView, NSLayoutConstraint, RolloverImageButton;
@protocol TabButtonDelegate, TabBarViewItem;

@interface TabButton : TabBarViewButton <NSAccessibilityRadioButton, RolloverTrackingButtonDelegate> {
    char _didEstablishTabBarViewItemBindings;
    NSView *_placeholderAccessoryViewForCentering;
    NSView *_mainContentClippingContainer;
    NSStackView *_mainContentContainer;
    NSStackView *_titleContainerView;
    NSTextField *_titleTextField;
    NSView *_focusRingView;
    RolloverImageButton *_closeButton;
    NSImageView *_iconView;
    char _isMouseOver;
    NSLayoutConstraint *_mainContentContainerWidthConstraint;
    NSLayoutConstraint *_mainContentContainerLeftConstraint;
    NSLayoutConstraint *_mainContentContainerRightConstraint;
    NSLayoutConstraint *_mainContentContainerHorizontalCenteringConstraint;
    NSLayoutConstraint *_titleContainerViewHorizontalCenteringConstraint;
    id _flagsChangedEventMonitor;
    char _deferringKeyStateChangeUpdateUntilVisible;
}

@property (weak, nonatomic) id<TabButtonDelegate> delegate;
@property (readonly) id<TabBarViewItem> tabBarViewItem;
@property (copy, nonatomic) NSString *title;
@property (nonatomic) long long alignment;
@property (copy, nonatomic) NSMutableArray *accessoryViews;
@property (nonatomic) char canShowCloseButton;
@property (nonatomic, getter=isPinned) char pinned;
@property (nonatomic, getter=isDragging) char dragging;
@property (nonatomic) char showIcon;
@property (retain, nonatomic) NSImage *image;
@property (nonatomic) double buttonWidthForTitleLayout;
@property (nonatomic) double mainContentContainerCenterOffset;
@property (nonatomic) double titleTextFieldCenterOffset;
@property (readonly, nonatomic, getter=isNarrowMode) char narrowMode;
@property (readonly, nonatomic) long long tabButtonLayoutMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)titleFont;
+ (long long)tabButtonLayoutModeForTabWidth:(double)a0;
+ (double)titleWidthForButtonWidth:(double)a0;

- (void)dealloc;
- (void).cxx_destruct;
- (void)setHidden:(char)a0;
- (id)_accessoryViewsIncludingPlaceholder;
- (char)_canShowCloseButton;
- (void)_closeButtonClicked:(id)a0;
- (void)_setUpAccessoryViewsIncludingPlaceholder;
- (char)_shouldShowCloseButton;
- (char)_shouldShowIconView;
- (void)_updateAccessibilityChildren;
- (void)_updateAccessibilityProperties;
- (void)_updateConstraints;
- (void)_updateTitleTextField;
- (void)_windowChangedKeyState;
- (char)acceptsFirstResponder;
- (id)accessibilityLabel;
- (char)accessibilityPerformPress;
- (char)accessibilityPerformShowMenu;
- (id)accessibilityValue;
- (char)becomeFirstResponder;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 tabBarViewItem:(id)a1;
- (void)keyDown:(id)a0;
- (id)menuForEvent:(id)a0;
- (char)mouseDownCanMoveWindow;
- (id)pinnedTabDragImageOfSize:(struct CGSize { double x0; double x1; })a0;
- (char)resignFirstResponder;
- (void)setActive:(char)a0;
- (void)setAlphaValue:(double)a0;
- (void)setForcesActiveWindowState:(char)a0;
- (id)tabDragImageOfSize:(struct CGSize { double x0; double x1; })a0;
- (void)updateLayer;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_mainContentContainerEdgeInsets;
- (void)_addFlagsChangedEventMonitorIfNecessary;
- (void)_addPositionAnimationOnView:(id)a0 fromPosition:(struct CGPoint { double x0; double x1; })a1;
- (char)_currentTabLayoutDisplaysCloseButton;
- (void)_establishTabBarViewItemBindingsIfNecessary;
- (void)_removeFlagsChangedEventMonitorIfNecessary;
- (void)_setUpTabButtonConstraints;
- (id)_tabDragImageOfSize:(struct CGSize { double x0; double x1; })a0;
- (id)_titleAttributedStringForDragAndDrop;
- (id)_titleColorForMainWindow:(char)a0 activeTab:(char)a1;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_titleContainerEdgeInsets;
- (void)_updateCloseButtonAndTitleContainerVisibilityForNarrowTab;
- (void)_updateKeyViewLoop;
- (void)_updateMainContentClipping;
- (void)prepareForOffscreenRendering;
- (void)rolloverTrackingButton:(id)a0 flagsDidChangeDuringMouseOver:(id)a1;
- (char)rolloverTrackingButtonCanBecomeKeyViewWhenHidden:(id)a0;
- (void)rolloverTrackingButtonDidBecomeFirstResponder:(id)a0;
- (void)rolloverTrackingButtonDidResignFirstResponder:(id)a0;
- (void)setTabButtonLayoutMode:(long long)a0 animatingLayout:(char)a1;
- (void)setTabButtonState:(unsigned long long)a0 animated:(char)a1;

@end

@class UnifiedTabBarLayoutConfiguration, NSIndexSet;

@interface UnifiedTabBarLayout : NSObject {
    unsigned long long _activeTabBarItemIndex;
    unsigned long long _dragSourceIndex;
    unsigned long long _dropIndex;
    unsigned long long _layoutOptions;
    NSIndexSet *_draggedIndices;
    unsigned long long _numberOfScrollingPinnedTabsForLayout;
    unsigned long long _numberOfVisiblePinnedTabsForLayout;
    unsigned long long _activeTabBarItemIndexForLayout;
    unsigned long long _scrollHintTabIndexForLayout;
    unsigned long long _firstAdjustedUnpinnedTabIndex;
    unsigned long long _lastAdjustedUnpinnedTabIndex;
    unsigned long long _firstVisibleUnpinnedTabIndex;
    unsigned long long _lastVisibleUnpinnedTabIndex;
    unsigned long long _firstVisibleUnpinnedTabIndexForAnimation;
    unsigned long long _lastVisibleUnpinnedTabIndexForAnimation;
    unsigned long long _unpinnedTabIndexWithHighestZPosition;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _tabBarBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _referenceTitlebarFrameForCentering;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedTabScrollingBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedActiveTabScrollingBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedInactiveTabScrollingBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _unpinnedInactiveTabAdjustingBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _adjustedActiveTabFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _scrollHintTabButtonFrame;
    double _interTabBarButtonSpacing;
    double _unpinnedInactiveTabAdjustingDistance;
    double _minimumSmallTabBarButtonWidth;
    double _pinnedTabBarButtonWidth;
    double _pinnedTabRegionWidth;
    double _pinningDragRegionWidth;
    double _pinnedTabSeparatorLeadingOrigin;
    double _overflowPinnedTabPopUpButtonLeadingOrigin;
    double _unpinnedTabContentWidth;
    double _unpinnedTabContentOffset;
    double _extraInterTabBarButtonSpacingForActiveTab;
    double _firstTabBarItemsXOffset;
    double _firstTabBarItemsYOffset;
    char _hasActiveTab;
    char _isActiveTabPinned;
    char _hasActiveUnpinnedTab;
    char _isActiveTabDragged;
    char _needsOverflowButton;
    char _isActivePinnedTabInOverflow;
    char _activeTabIsOutOfLeadingLayoutBounds;
    char _activeTabIsOutOfTrailingLayoutBounds;
    char _isRTLLayout;
    char _usesNarrowTabs;
    char _allowsScrollingPinnedTabs;
    char _isLayoutReady;
}

@property (readonly, copy, nonatomic) UnifiedTabBarLayoutConfiguration *configuration;
@property (readonly, nonatomic) unsigned long long numberOfTabs;
@property (readonly, nonatomic) unsigned long long numberOfPinnedTabs;
@property (readonly, nonatomic) unsigned long long numberOfUnpinnedTabs;
@property (readonly, nonatomic) unsigned long long numberOfTabsForLayout;
@property (readonly, nonatomic) unsigned long long numberOfPinnedTabsForLayout;
@property (readonly, nonatomic) unsigned long long numberOfUnpinnedTabsForLayout;
@property (readonly, nonatomic) char shouldUpdateScrollViewClipViewBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewClipViewBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewDocumentViewFrame;
@property (readonly, nonatomic) char scrolls;
@property (readonly, nonatomic) double pinningRegionWidth;
@property (readonly, nonatomic) double pinnedTabButtonWidth;
@property (readonly, nonatomic) char shouldShowPinnedTabSeparator;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } pinnedTabSeparatorFrameInTabContainer;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } pinnedTabRegionBackdropLayerFrameInTabContainer;
@property (readonly, nonatomic) double pinnedTabSeparatorAlpha;
@property (readonly, nonatomic) double pinnedTabSeparatorZPosition;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } overflowPinnedTabPopUpButtonFrameInTabContainer;
@property (readonly, nonatomic) double overflowPinnedTabPopUpButtonZPosition;
@property (readonly, nonatomic) char shouldShowOverflowPinnedTabPopUpButton;
@property (readonly, copy, nonatomic) NSIndexSet *overflowPinnedTabBarItemIndexes;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } activeTabFrameInTabContainer;
@property (readonly, nonatomic) double activeTabBarButtonWidth;
@property (readonly, nonatomic) long long activeButtonState;
@property (readonly, nonatomic) unsigned long long scrollHintTabIndex;
@property (readonly, nonatomic) double tabBarButtonWidth;
@property (readonly, nonatomic) long long buttonState;
@property (readonly, copy, nonatomic) NSIndexSet *visibleTabBarItemIndexes;
@property (readonly, copy, nonatomic) NSIndexSet *visibleTabBarItemIndexesForAnimation;

+ (id)preparedLayoutWithStyle:(long long)a0 configuration:(id)a1;

- (void).cxx_destruct;
- (id)initWithConfiguration:(id)a0;
- (void)prepareLayout;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedFrameForButtonAtIndex:(unsigned long long)a0;
- (double)_computePinnedTabBarButtonWidth;
- (void)_calculateAdjustedActiveTabMetrics;
- (void)_calculateMainTabMetrics;
- (void)_calculateOptimalTabLayout;
- (void)_calculatePinnedTabMetrics;
- (void)_calculateScrollingPinnedTabMetrics;
- (void)_calculateUnpinnedTabMetrics;
- (void)_calculateUpdatedLayoutBoundsOrigin;
- (void)_calculateVisibleUnpinnedTabIndexRange;
- (void)_calculateVisibleUnpinnedTabIndexRangeForAnimation;
- (double)_computeInterTabBarButtonSpacing;
- (double)_computeMinimumSmallTabBarButtonWidth;
- (double)_computeMinimumWidthNeededToDisplayNumberOfUnpinnedTabs:(unsigned long long)a0;
- (unsigned long long)_computeOptimalNumberOfVisiblePinnedTabs;
- (double)_computePinnedTabRegionWidthForNumberOfPinnedTabs:(unsigned long long)a0;
- (double)_computeRequiredWidthForMinimumNumberOfVisibleUnpinnedTabs;
- (double)_computeScrollableTabRegionWidth;
- (double)_computeTotalPinnedTabRegionWidthForNumberOfVisiblePinnedTabs:(unsigned long long)a0 needsOverflowButton:(char)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toTabContainerFromScrollView:(char)a1;
- (void)_didFailToAllocateEnoughSpaceForUnpinnedTabScrolling;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_scrollLayoutBoundsForButtonAtIndex:(unsigned long long)a0;
- (double)_tabDensityFactor;
- (double)_titlebarCenterXInTabContainer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_unadjustedFrameForButtonAtIndex:(unsigned long long)a0;
- (char)_useNextButtonFrameForTrailingButtonSeparatorAtIndex:(unsigned long long)a0;
- (id)_visibleTabBarIndexesWithFirstVisibleUnpinnedTabIndex:(unsigned long long)a0 lastVisibleUnpinnedTabIndex:(unsigned long long)a1;
- (char)canHighlightButtonAtIndex:(unsigned long long)a0;
- (unsigned long long)dragResultForDraggingLocation:(struct CGPoint { double x0; double x1; })a0 isDragToPinAllowed:(char)a1 getDropIndex:(unsigned long long *)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForButtonInTabContainerAtIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForButtonInsertedInTabContainerAtIndex:(unsigned long long)a0 isPinned:(char)a1;
- (char)isButtonHiddenAtIndex:(unsigned long long)a0;
- (id)removedTabBarItemIndexesForVisibleIndexes:(id)a0;
- (char)shouldScrollToRevealButtonAtIndex:(unsigned long long)a0;
- (long long)stateForButtonAtIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })unadjustedFrameForButtonInTabContainerAtIndex:(unsigned long long)a0;
- (double)unpinnedTabButtonWidth;
- (id)visibleTabBarItemIndexesForAnimationWithPreviouslyVisibleIndexes:(id)a0;
- (double)zPositionForButtonAtIndex:(unsigned long long)a0;

@end

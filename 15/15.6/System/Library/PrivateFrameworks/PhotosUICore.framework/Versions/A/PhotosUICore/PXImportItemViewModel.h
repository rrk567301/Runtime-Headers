@class NSData, NSString, NSDate, PXImportAssetCollection, PHImportAssetDataRequest, NSMutableDictionary, NSError, NSDictionary, NSTimeZone, CLLocation, NSNumber, PHImportAsset;
@protocol PXImportDisplayDelegate;

@interface PXImportItemViewModel : PXObservable <PXMetadataDetailsContentItem, PXDisplayAsset, NSCopying> {
    NSString *_collectionIdentifier;
}

@property (class, readonly, nonatomic) NSString *alreadyImportedGroupIdentifier;

@property (readonly, nonatomic) NSString *uuid;
@property (readonly, nonatomic) long long mediaType;
@property (readonly, nonatomic) unsigned long long mediaSubtypes;
@property (readonly, nonatomic) NSDate *creationDate;
@property (readonly, nonatomic) NSDate *localCreationDate;
@property (readonly, nonatomic, getter=isFavorite) char favorite;
@property (readonly, nonatomic) char representsBurst;
@property (readonly, nonatomic) char isInCloud;
@property (readonly, nonatomic) char isInSharedLibrary;
@property (readonly, nonatomic) char isEligibleForAutoPlayback;
@property (readonly, nonatomic) unsigned long long pixelWidth;
@property (readonly, nonatomic) unsigned long long pixelHeight;
@property (readonly, nonatomic) Class defaultImageProviderClass;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } preferredCropRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } acceptableCropRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } faceAreaRect;
@property (readonly, nonatomic) float audioScore;
@property (readonly, nonatomic) char hasPeopleSceneMidOrGreaterConfidence;
@property (readonly, nonatomic) long long originalFileSize;
@property (readonly, nonatomic) char isSpatialMedia;
@property (readonly, nonatomic) char isSpatialPresentation;
@property (readonly, nonatomic) double duration;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } livePhotoVideoDuration;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } livePhotoStillDisplayTime;
@property (readonly, nonatomic) long long playbackStyle;
@property (readonly, nonatomic) unsigned short playbackVariation;
@property (readonly, nonatomic) double aspectRatio;
@property (readonly, nonatomic) unsigned long long thumbnailVersion;
@property (readonly, nonatomic) NSNumber *hdrGain;
@property (readonly, nonatomic) unsigned long long burstSelectionTypes;
@property (readonly, nonatomic) NSNumber *focalLength;
@property (readonly, nonatomic) NSNumber *focalLengthIn35mm;
@property (readonly, nonatomic) NSString *localizedGeoDescription;
@property (readonly, nonatomic) NSDate *importDate;
@property (readonly, nonatomic) char isAutoPlaybackEligibilityEstimated;
@property (readonly, nonatomic) NSData *fetchColorNormalizationData;
@property (readonly, nonatomic) unsigned long long thumbnailIndex;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic, getter=px_isImage) char px_image;
@property (readonly, nonatomic, getter=px_isVideo) char px_video;
@property (readonly, nonatomic, getter=px_isAudio) char px_audio;
@property (readonly, nonatomic) unsigned long long px_type;
@property (readonly, nonatomic) unsigned long long px_originalType;
@property (readonly, nonatomic) unsigned long long px_fileType;
@property (readonly, nonatomic) unsigned long long px_originalFileType;
@property (readonly, nonatomic) NSString *px_title;
@property (readonly, nonatomic) NSString *px_assetDescription;
@property (readonly, nonatomic) char *px_isExtendedPropertiesProcessed;
@property (readonly, nonatomic) NSString *px_filename;
@property (readonly, nonatomic) NSNumber *px_filesize;
@property (readonly, nonatomic) NSDate *px_creationDate;
@property (readonly, nonatomic) NSDate *px_originalCreationDate;
@property (readonly, nonatomic) NSTimeZone *px_timeZone;
@property (readonly, nonatomic) NSTimeZone *px_originalTimeZone;
@property (readonly, nonatomic) struct PXIntSize_st { unsigned long long x0; unsigned long long x1; } px_resolution;
@property (readonly, nonatomic) char px_supportsImageProperties;
@property (readonly, nonatomic) unsigned short px_fetchCloudLocalState;
@property (readonly, nonatomic, getter=ipx_isFavorite) char px_favorite;
@property (readonly, nonatomic) NSString *px_burstUUID;
@property (readonly, nonatomic) NSNumber *px_duration;
@property (readonly, nonatomic) NSNumber *px_FPS;
@property (readonly, nonatomic) NSNumber *px_bitRate;
@property (readonly, nonatomic) NSNumber *px_sampleRate;
@property (readonly, nonatomic) NSString *px_codec;
@property (readonly, nonatomic) NSNumber *px_aperture;
@property (readonly, nonatomic) NSNumber *px_exposureBias;
@property (readonly, nonatomic) NSNumber *px_flash;
@property (readonly, nonatomic) NSNumber *px_focalLength;
@property (readonly, nonatomic) NSNumber *px_focalLengthIn35mm;
@property (readonly, nonatomic) NSNumber *px_digitalZoomRatio;
@property (readonly, nonatomic) NSNumber *px_ISORating;
@property (readonly, nonatomic) NSString *px_lensModel;
@property (readonly, nonatomic) NSString *px_make;
@property (readonly, nonatomic) NSString *px_model;
@property (readonly, nonatomic) NSString *px_formattedCameraModel;
@property (readonly, nonatomic) NSNumber *px_meteringMode;
@property (readonly, nonatomic) NSNumber *px_shutterSpeed;
@property (readonly, nonatomic) NSNumber *px_whiteBalance;
@property (readonly, nonatomic) unsigned int px_audioTrackFormat;
@property (readonly, nonatomic, getter=px_isInTrash) char px_inTrash;
@property (readonly, nonatomic, getter=px_isHidden) char px_hidden;
@property (readonly, nonatomic) char px_hasKeywords;
@property (readonly, nonatomic) char px_canUseLocation;
@property (readonly, nonatomic) NSString *px_uniformTypeIdentifier;
@property (readonly, nonatomic) char px_reverseLocationDataIsValid;
@property (readonly, nonatomic) CLLocation *px_originalLocation;
@property (readonly, nonatomic) char px_isLivePhoto;
@property (readonly, nonatomic) char px_isDepthEffect;
@property (readonly, nonatomic) char px_representsBurst;
@property (readonly, nonatomic) char px_isPanorama;
@property (readonly, nonatomic) char px_isSelfie;
@property (readonly, nonatomic) char px_isScreenshot;
@property (readonly, nonatomic) char px_isScreenRecording;
@property (readonly, nonatomic) char px_isSloMo;
@property (readonly, nonatomic) char px_isTimelapse;
@property (readonly, nonatomic) char px_shotWithNightMode;
@property (readonly, nonatomic) char px_isActionModeVideo;
@property (readonly, nonatomic) char px_isSpatialMedia;
@property (readonly, nonatomic) char px_isProRes;
@property (readonly, nonatomic) char px_isH264;
@property (readonly, nonatomic) char px_isHEVC;
@property (readonly, nonatomic) char px_isCinematicVideo;
@property (readonly, nonatomic) NSNumber *px_semanticStylePreset;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSMutableDictionary *imageRepresentationsBySize;
@property (retain, nonatomic) NSMutableDictionary *assetRequestsBySize;
@property (retain, nonatomic) NSMutableDictionary *thumbnailRequestsBySize;
@property (readonly, nonatomic) id uuid;
@property (readonly, nonatomic) NSString *fileName;
@property (readonly, nonatomic) NSDate *fileCreationDate;
@property (weak, nonatomic) id<PXImportDisplayDelegate> displayDelegate;
@property (readonly, nonatomic) PHImportAsset *importAsset;
@property (weak, nonatomic) PXImportAssetCollection *assetCollection;
@property (readonly, nonatomic) long long badgeType;
@property (readonly, nonatomic) NSString *uniformTypeIdentifier;
@property (readonly, nonatomic) char isPanoramicImage;
@property (readonly, nonatomic) NSString *kind;
@property (readonly, nonatomic) char isMediaAsset;
@property (readonly, nonatomic) char isNotYetImported;
@property (nonatomic) struct CGSize { double width; double height; } largeThumbnailSize;
@property (nonatomic) struct CGSize { double width; double height; } thumbnailSize;
@property (readonly, nonatomic) NSString *debugDisplayName;
@property (weak, nonatomic) PHImportAssetDataRequest *thumbnailRequest;
@property (retain, nonatomic) NSError *thumbnailError;
@property (nonatomic) double imageProcessingStartTime;
@property (nonatomic) double imageProcessingEndTime;
@property (readonly, nonatomic, getter=isSelected) char selected;
@property (readonly, nonatomic, getter=isSelectable) char selectable;
@property (readonly, nonatomic, getter=isDuplicate) char duplicate;
@property (readonly, nonatomic) long long state;
@property (readonly, nonatomic) long long thumbnailIndex;
@property (readonly, nonatomic) NSDate *importDate;
@property (readonly, nonatomic) NSString *deleteSession;
@property (readonly, nonatomic) char isDeleted;
@property (readonly, nonatomic) NSDictionary *imageRepresentations;

+ (id)dateFormatter;
+ (char)hasPanoramaImageDimensions:(struct CGSize { double x0; double x1; })a0;
+ (id)importAssetsFromModels:(id)a0;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)init;
- (char)isEqual:(id)a0;
- (void).cxx_destruct;
- (char)isHidden;
- (void)setState:(long long)a0;
- (id)groupIdentifier;
- (id)modificationDate;
- (id)accessibilityLabel;
- (void)setSelectable:(char)a0;
- (void)setSelected:(char)a0;
- (void)setImportDate:(id)a0;
- (void)setIsDeleted:(char)a0;
- (char)isAnimatedImage;
- (char)isLivePhoto;
- (char)canPlayLoopingVideo;
- (char)canPlayPhotoIris;
- (char)hasPhotoColorAdjustments;
- (id)initWithImportAsset:(id)a0;
- (char)isGuestAsset;
- (char)isPhotoIrisPlaceholder;
- (long long)originalFilesize;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })photoIrisStillDisplayTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })photoIrisVideoDuration;
- (void)addThumbnailRequest:(id)a0;
- (void)performChanges:(id /* block */)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bestCropRectForAspectRatio:(double)a0;
- (long long)isContentEqualTo:(id)a0;
- (id)mutableChangeObject;
- (id)assetDataRequestForRequestSize:(unsigned long long)a0;
- (void)addImageRepresentation:(id)a0;
- (id)initWithKind:(id)a0 selectable:(char)a1;
- (char)isEqualToImportItemViewModel:(id)a0;
- (char)isPartOfStack;
- (char)isTemporaryPlaceholder;
- (id)px_localizedGeoDescriptionForRTL:(char)a0;
- (void)removeAssetDataRequestForRequestSize:(unsigned long long)a0;
- (void)removeThumbnailRequest:(id)a0;
- (void)setAssetDataRequest:(id)a0 forRequestSize:(unsigned long long)a1;
- (void)setDeleteSession:(id)a0;
- (void)setDuplicate:(char)a0;
- (id)thumbnailRequestsForRequestSize:(unsigned long long)a0;

@end

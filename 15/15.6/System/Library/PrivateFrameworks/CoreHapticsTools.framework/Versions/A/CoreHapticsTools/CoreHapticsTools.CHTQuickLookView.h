@interface CoreHapticsTools.CHTQuickLookView : NSView {
    void /* unknown type, empty encoding */ document;
    void /* unknown type, empty encoding */ resolvedAudioEvents;
    void /* unknown type, empty encoding */ unresolvedAudioEvents;
    void /* unknown type, empty encoding */ group5;
    void /* unknown type, empty encoding */ group4;
    void /* unknown type, empty encoding */ group3;
    void /* unknown type, empty encoding */ topMargin;
    void /* unknown type, empty encoding */ leadingMargin;
    void /* unknown type, empty encoding */ preferredLeadingMargin;
    void /* unknown type, empty encoding */ bottomMargin;
    void /* unknown type, empty encoding */ trailingMargin;
    void /* unknown type, empty encoding */ _theme;
    void /* unknown type, empty encoding */ hapticTrackCount;
    void /* unknown type, empty encoding */ audioTrackCount;
    void /* unknown type, empty encoding */ preferredVisibleTrackCount;
    void /* unknown type, empty encoding */ _tracksRequested;
    void /* unknown type, empty encoding */ minTrackWidth;
    void /* unknown type, empty encoding */ maxTrackWidth;
    void /* unknown type, empty encoding */ preferredTrackWidth;
    void /* unknown type, empty encoding */ preferredTrackHeight;
    void /* unknown type, empty encoding */ trackBorderThickness;
    void /* unknown type, empty encoding */ trackBorderCornerRadius;
    void /* unknown type, empty encoding */ trackMarginFromText;
    void /* unknown type, empty encoding */ trackLabelWidth;
    void /* unknown type, empty encoding */ timelineThickness;
    void /* unknown type, empty encoding */ timelineDivisionLength;
    void /* unknown type, empty encoding */ timelineLabelSpacing;
    void /* unknown type, empty encoding */ sectionTitleSpacing;
    void /* unknown type, empty encoding */ trackSpacing;
    void /* unknown type, empty encoding */ preferredSectionSpacing;
    void /* unknown type, empty encoding */ sectionTitleFont;
    void /* unknown type, empty encoding */ smallTextFont;
    void /* unknown type, empty encoding */ backsplashView;
    void /* unknown type, empty encoding */ trackContainerView;
    void /* unknown type, empty encoding */ errorTitle;
    void /* unknown type, empty encoding */ errorMessage;
    void /* unknown type, empty encoding */ hapticSectionTitle;
    void /* unknown type, empty encoding */ audioSectionTitle;
    void /* unknown type, empty encoding */ missingAudioScrollView;
    void /* unknown type, empty encoding */ missingAudioTextView;
    void /* unknown type, empty encoding */ preferredContentSize;
    void /* unknown type, empty encoding */ missingAudioScrollViewContents;
    void /* unknown type, empty encoding */ documentView;
    void /* unknown type, empty encoding */ hapticSectionTitleWidth;
    void /* unknown type, empty encoding */ hapticIntensityView;
    void /* unknown type, empty encoding */ hapticIntensityLabel;
    void /* unknown type, empty encoding */ hapticSharpnessView;
    void /* unknown type, empty encoding */ hapticSharpnessLabel;
    void /* unknown type, empty encoding */ audioSectionTitleWidth;
    void /* unknown type, empty encoding */ audioContinuousView;
    void /* unknown type, empty encoding */ audioContinuousLabel;
    void /* unknown type, empty encoding */ audioCustomViews;
    void /* unknown type, empty encoding */ audioCustomLabels;
    void /* unknown type, empty encoding */ timelineView;
    void /* unknown type, empty encoding */ hapticIntensityLabelLocalizedText;
    void /* unknown type, empty encoding */ hapticSharpnessLabelLocalizedText;
    void /* unknown type, empty encoding */ audioContinuousLabelLocalizedText;
    void /* unknown type, empty encoding */ audioCustomLabelLocalizedText;
    void /* unknown type, empty encoding */ maxLabelWidth;
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (void)layout;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)updateConstraints;

@end

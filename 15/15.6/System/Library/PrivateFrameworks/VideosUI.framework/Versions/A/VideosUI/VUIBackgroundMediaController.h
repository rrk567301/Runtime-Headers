@class NSDate, VUIImageProxy, VUIImageView, VUIBackgroundPlayerViewController, VUIMediaInfoFetchController, VUIMediaInfo, TVPVideoView, NSLayoutConstraint, NSString, VUIPlayerControlsView, NSTimer, TVPStateMachine, NSViewController, NSNumber, NSArray, TVPPlayer;

@interface VUIBackgroundMediaController : VUIBaseViewController <VUIBackgroundMediaPlayback>

@property (retain, nonatomic) VUIImageView *alphaProxyImageView;
@property (retain, nonatomic) VUIImageProxy *alphaImageProxy;
@property (retain, nonatomic) NSViewController *playbackContainerController;
@property (retain, nonatomic) NSDate *playbackLoadingStartDate;
@property (retain, nonatomic) NSDate *playbackStartDate;
@property (weak, nonatomic) NSTimer *playbackLoadingTimer;
@property (weak, nonatomic) NSTimer *playbackDelayTimer;
@property (weak, nonatomic) NSTimer *imageDelayTimer;
@property (retain, nonatomic) VUIMediaInfo *pendingMediaInfo;
@property (nonatomic) unsigned long long pendingMediaInfoDirection;
@property (retain, nonatomic) NSNumber *pendingAnimated;
@property (retain, nonatomic) TVPStateMachine *stateMachine;
@property (retain, nonatomic) VUIMediaInfoFetchController *mediaInfoFetchController;
@property (nonatomic) unsigned long long state;
@property (nonatomic) unsigned long long imageAnimationOptions;
@property (nonatomic) double imageAnimationDuration;
@property (nonatomic) double imageTransitionInterval;
@property (nonatomic) char shouldAnimateOverlayView;
@property (retain, nonatomic) TVPVideoView *secondaryVideoView;
@property (weak, nonatomic) NSTimer *pauseStateTimeoutTimer;
@property (nonatomic) unsigned long long vpafPlaybackStartReason;
@property (nonatomic, getter=isAutomaticPlaybackStop) char automaticPlaybackStop;
@property (nonatomic) unsigned long long vpafPlaybackStopReason;
@property (nonatomic) char shouldPlayAfterAppBecomesActive;
@property (nonatomic) char shouldPlayAfterFullplaybackUIDidEnd;
@property (nonatomic) char hasViewAppeared;
@property (readonly, nonatomic, getter=isBackgrounded) char backgrounded;
@property (nonatomic) char didAVPlayerControllerEnterFullscreen;
@property (nonatomic) char didWeCreatePlayer;
@property (nonatomic) char observingPictureInPictureActive;
@property (copy, nonatomic) NSString *titleForLogging;
@property (nonatomic) unsigned long long deactivationReasons;
@property (nonatomic) char showsVideoControls;
@property (retain, nonatomic) NSNumber *elapsedTimeWhenStopped;
@property (nonatomic) unsigned long long ambientVideoRemainingRepeatLoopCount;
@property (retain, nonatomic) VUIBackgroundPlayerViewController *avPlayerViewController;
@property (nonatomic) char shouldPlayAfterAppBecomesVisible;
@property (nonatomic) float fullscreenTransitionVolumeAnimationChanges;
@property (retain, nonatomic) NSLayoutConstraint *proxyImageWidthConstraint;
@property (retain, nonatomic) NSLayoutConstraint *proxyImageHeightConstraint;
@property (retain, nonatomic) NSLayoutConstraint *proxyImageCenterXConstraint;
@property (retain, nonatomic) NSLayoutConstraint *proxyImageCenterYConstraint;
@property (nonatomic) char changedMuteStateAfterPlaybackStarted;
@property (retain, nonatomic) TVPPlayer *prefetchPlayer;
@property (retain, nonatomic) TVPPlayer *rampDownPlayer;
@property (retain, nonatomic) NSString *preferredAudioLanguageCode;
@property (retain, nonatomic) NSNumber *prefersAudioDescriptions;
@property (retain, nonatomic) VUIBackgroundPlayerViewController *prefetchPlayerViewController;
@property (nonatomic) unsigned long long lastMediaInfoIndex;
@property (nonatomic) char observingInitialMediaItemHasCompletedInitialLoading;
@property (retain, nonatomic) NSString *lastMediaEventActionType;
@property (retain, nonatomic) TVPPlayer *player;
@property (retain, nonatomic) VUIImageView *proxyImageView;
@property (weak, nonatomic) VUIPlayerControlsView *playerControlsView;
@property (nonatomic) char hidesDefaultPlayerControlsView;
@property (nonatomic) char showsSystemPlayerControls;
@property (nonatomic) struct CGPoint { double x; double y; } playerControlsPosition;
@property (retain, nonatomic) NSString *videoGravity;
@property (readonly, copy, nonatomic) VUIMediaInfo *currentMediaInfo;
@property (copy, nonatomic) NSArray *mediaInfos;
@property (nonatomic) unsigned long long mediaInfoIndex;
@property (readonly, nonatomic, getter=isForeground) char foreground;
@property (readonly, copy, nonatomic) NSString *name;
@property (nonatomic, getter=isPlaybackEnabled) char playbackEnabled;
@property (nonatomic) char forceAutoPlay;
@property (nonatomic) char autoPlayInSharePlay;
@property (nonatomic) char prefetchesVideoFrame;
@property (nonatomic) double videoAudioRampDuration;
@property (nonatomic) char recordPausedMediaEventAsStop;
@property (nonatomic, getter=isVideoFrameFallbackEnabled) char videoFrameFallbackEnabled;
@property (nonatomic) char allowsExternalPlayback;
@property (nonatomic) char showAlertOnPlaybackFail;
@property (nonatomic) char updatesNowPlayingInfoCenter;
@property (nonatomic) char stopsPlaybackWhenInactive;
@property (nonatomic) char loadsPlayerWithFullscreenPlayback;
@property (nonatomic, getter=shouldStopPlayerWhenViewDisappears) char stopPlayerWhenViewDisappears;
@property (nonatomic, getter=shouldStopPlayerWhenExitingFullScreen) char stopPlayerWhenExitingFullScreen;
@property (nonatomic) char exitsFullscreenWhenPlaybackEnds;
@property (nonatomic) char clearPreviousImageBeforeLoading;
@property (nonatomic) char animateImageChange;
@property (nonatomic) char animateVideoChange;
@property (nonatomic) unsigned long long imageContentMode;
@property (nonatomic) char popWhenPlayerStops;
@property (nonatomic, getter=isMuted) char muted;
@property (nonatomic) char mutePlaybackInBackground;
@property (nonatomic) char prefersAudioOverPictureInPicture;
@property (nonatomic) char shouldShowFullScreenButton;
@property (nonatomic) float backgroundVolume;
@property (nonatomic) float foregroundVolume;
@property (nonatomic) double volumeTransitionAnimationDuration;
@property (nonatomic) unsigned long long numberOfVolumeIncrements;
@property (nonatomic, getter=shouldStopWhenAnotherMediaControllerStarts) char stopWhenAnotherMediaControllerStarts;
@property (nonatomic) unsigned long long playbackStopDelayReasons;
@property (nonatomic) double playbackStopDelay;
@property (nonatomic) double playbackStartDelay;
@property (nonatomic) unsigned long long imageSwappingAnimationType;
@property (nonatomic) unsigned long long videoSwappingAnimationType;
@property (nonatomic, getter=shouldPauseAtEnd) char shouldPauseAtEnd;
@property (nonatomic, getter=shouldShowImageAndStopAfterPausingAtEnd) char shouldShowImageAndStopAfterPausingAtEnd;
@property (nonatomic) double imageTransitionAnimationDuration;
@property (nonatomic) double imageVideoTransitionAnimationDuration;
@property (nonatomic) char showsPlaybackControlsInForeground;
@property (nonatomic) char allowsPictureInPicturePlayback;
@property (nonatomic) struct NSEdgeInsets { double top; double left; double bottom; double right; } legibleContentInsets;
@property (nonatomic) char keepVideoGravityUnchangedByVideoControlsVisibility;
@property (nonatomic) char shouldDisableSubtitle;
@property (nonatomic, getter=isAutomaticPlaybackStart) char automaticPlaybackStart;
@property (nonatomic, getter=isPreloadPlaybackEnabled) char preloadPlaybackEnabled;
@property (nonatomic) char shouldDisableFastRewindByScrollWheel;
@property (nonatomic) char shouldIgnoreMainPlaybackNotifications;
@property (retain, nonatomic) NSString *playbackInitiatorForRTCReporting;

+ (void)initialize;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (id)initWithName:(id)a0;
- (void)pause;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)stop;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)play;
- (void)setUserInteractionEnabled:(char)a0;
- (id)notificationObject;
- (void)_registerStateMachineHandlers;
- (void)replay;
- (void)updateFrames;
- (void)_registerPlayerNotifications;
- (void)_unregisterPlayerNotifications;
- (char)_isCurrentMediaItemAmbientVideo;
- (void)vui_viewDidLoad;
- (void)_addAlphaProxyImageViewIfNeeded;
- (void)_addContentViewIfNeeded;
- (void)_addOverlayViewAnimatedIfNeeded:(char)a0 dismissAfter:(double)a1;
- (void)_addPlaybackViewControllerForPlayback:(char)a0 restoringAVPlayerViewController:(char)a1;
- (void)_addProxyImageView:(id)a0;
- (void)_animateTransitionFromView:(id)a0 toView:(id)a1 duration:(double)a2 direction:(unsigned long long)a3 completion:(id /* block */)a4;
- (void)_audioSessionSilentSecondaryAudioDidChange:(id)a0;
- (char)_autoPlayEnabled;
- (char)_canPause;
- (void)_cleanUpEverything;
- (void)_cleanUpEverythingPlaybackRelated;
- (void)_cleanUpPlaybackTimers;
- (void)_cleanUpRampDownPlayer;
- (void)_cleanupPrefetchPlayback;
- (void)_clearPreloadPlayback;
- (double)_computedPlaybackDelayInterval;
- (void)_configImageTransitionContextForBackgroundImage:(id)a0;
- (void)_configMirroredImageForBackgroundImage:(id)a0;
- (void)_configureAmbientVideoPlaybackIfNeeded;
- (void)_configureLegibleContentInsetFromState:(id)a0 toState:(id)a1;
- (void)_constrainToView:(id)a0;
- (id)_createPlayerViewControllerWithPlayer:(id)a0;
- (char)_currentMediaInfoContentMatchesMediaInfo:(id)a0;
- (char)_currentMediaInfoImagesMatchesNewMediaInfoImage:(id)a0;
- (void)_didPlayMediaItemToEnd:(id)a0;
- (void)_disablePlaybackWhenShowingFullScreenUIIfNeeded;
- (void)_disableSubtitleIfNeeded;
- (void)_enablePlaybackWhenFullScreenPlaybackEnd;
- (unsigned long long)_flippedDirection:(unsigned long long)a0 isRTL:(char)a1;
- (void)_handleApplicationDidChangeOcclusionStateNotification:(id)a0;
- (void)_handleViewDisappear;
- (char)_hasSecondaryView;
- (char)_isAmbientVideoMediaItem:(id)a0;
- (char)_isBackgroundVideoAudioPreferred;
- (char)_isMainPlayerPlaying;
- (void)_loadImage:(id /* block */)a0;
- (void)_mediaControllerStartedPlayback:(id)a0;
- (char)_mediaInfo:(id)a0 contentMatchesMediaInfo:(id)a1;
- (void)_performPlayerVolumeAnimatedUpdate:(char)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_playbackContainerViewFrame:(char)a0 hasSecondaryVideoView:(char)a1;
- (void)_playbackEngineDidFinishPlayback:(id)a0;
- (void)_playbackEngineWillStartPlayback:(id)a0;
- (void)_playbackErrorDidOccur:(id)a0;
- (void)_playbackStateChanged:(id)a0;
- (void)_playbackStateWillChange:(id)a0;
- (char)_playlist:(id)a0 contentMatchesPlaylist:(id)a1;
- (void)_populatePlayerWithMediaItemsIfNeeded:(id)a0;
- (void)_postDidStopPlaybackNotification;
- (void)_postWillStartPlaybackNotification:(char)a0;
- (void)_postWillStopPlaybackNotification;
- (void)_prefetchNextVideo;
- (void)_recordBgAutoPlayMediaEventForPlaybackState:(id)a0;
- (void)_registerAudioSessionNotification;
- (void)_registerForApplicationStateNotifications;
- (void)_registerPlaybackManagerNotification;
- (void)_removeOverlayView:(id)a0 animated:(char)a1;
- (void)_removePlaybackViewController;
- (void)_removeProxyImageView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_secondaryVideoViewFrame:(char)a0;
- (double)_secondaryVideoViewHeight;
- (void)_setAlphaImageProxy:(id)a0;
- (char)_shouldApplyLegibleContentInsetForState:(id)a0;
- (char)_shouldPausePlaybackDueToDeactivationReasons;
- (char)_shouldShowSecondaryView;
- (void)_showPlaybackIfPossible;
- (void)_startPreloadPlaybackIfNeeded;
- (void)_stateDidChangeFromState:(id)a0 toState:(id)a1 onEvent:(id)a2 context:(id)a3 userInfo:(id)a4;
- (void)_swapActiveMedia:(char)a0 animated:(char)a1 completion:(id /* block */)a2;
- (void)_transitionToNewImage:(id)a0 animated:(char)a1 direction:(unsigned long long)a2 completion:(id /* block */)a3;
- (void)_updateAVPlayerViewControllerWithAVPlayerForPlayer:(id)a0;
- (void)_updateControlConfiguration:(char)a0;
- (void)_updateCurrentPlaybackViewFrameForPlaybackInBackground:(char)a0 animated:(char)a1;
- (void)_updatePlayerMuteStateForAmbientVideo;
- (void)_updatePlayerMuteStateForBackgroundPlaybackWithReason:(id)a0;
- (void)_updatePlayerVolume:(id)a0;
- (void)_updateSmartRoutingEligibleForMuteState:(char)a0;
- (void)_updateVideoPlayerLegibleContentInsets:(char)a0;
- (void)_updateWithMediaInfo:(id)a0 withDirection:(unsigned long long)a1 imageVideoSwapBehavior:(unsigned long long)a2 animated:(char)a3;
- (void)appendMediaInfos:(id)a0;
- (id)createTransitionViewAtIndex:(unsigned long long)a0 oldView:(id)a1;
- (char)hasBackgroundVideo;
- (id)initWithName:(id)a0 mediaInfoFetchController:(id)a1;
- (void)loadAlphaImageProxy;
- (void)removeMediaInfoAtIndex:(unsigned long long)a0;
- (void)setControlsVisible:(char)a0;
- (void)setMediaInfo:(id)a0 atIndex:(unsigned long long)a1 animated:(char)a2;
- (void)setMediaInfoIndex:(unsigned long long)a0 forwardAnimation:(char)a1;
- (void)setMediaInfoIndex:(unsigned long long)a0 imageVideoSwapBehavior:(unsigned long long)a1 animated:(char)a2;
- (void)setMediaInfoIndex:(unsigned long long)a0 imageVideoSwapBehavior:(unsigned long long)a1 animated:(char)a2 forwardAnimation:(char)a3;
- (void)setMediaInfos:(id)a0 animated:(char)a1;
- (void)setMediaInfos:(id)a0 selectedIndex:(unsigned long long)a1 animated:(char)a2;
- (void)setPlaybackEnabled:(char)a0 imageVideoSwapBehavior:(unsigned long long)a1;
- (void)showAlphaImage:(char)a0 animated:(char)a1;
- (id)surrenderCurrentPlayer;
- (void)transitionToForeground:(char)a0 animated:(char)a1;
- (void)transitionToForeground:(char)a0 withPlaybackControls:(char)a1 animated:(char)a2;
- (void)transitionToForeground:(char)a0 withPlaybackControls:(char)a1 fullScreenPlayer:(char)a2 animated:(char)a3;
- (void)vui_loadView;
- (void)vui_viewDidLayoutSubviews;
- (void)vui_viewWillAppear:(char)a0;
- (void)vui_viewWillDisappear:(char)a0;

@end

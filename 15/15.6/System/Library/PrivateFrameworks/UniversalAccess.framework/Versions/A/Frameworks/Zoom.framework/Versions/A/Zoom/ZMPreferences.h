@class NSLock, NSTimer, NSMutableSet;

@interface ZMPreferences : NSObject {
    NSLock *_coalesceTimerLock;
    NSTimer *_coalesceSyncTimer;
    NSMutableSet *_coalesceSyncKeys;
}

@property (nonatomic) char notificationsDisabled;
@property (nonatomic) char isZoomApp;
@property (nonatomic) long long uaZoomMode;
@property (nonatomic) char useKeyboardZoom;
@property (nonatomic) char useScrollWheelZoom;
@property (nonatomic) long long scrollWheelModifiers;
@property (nonatomic) struct CGPoint { double x0; double x1; } windowPosition;
@property (nonatomic) struct CGSize { double x0; double x1; } windowSize;
@property (nonatomic) long long windowStyle;
@property (nonatomic) char followsKeyboardFocus;
@property (readonly, nonatomic) char windowStaysOnScreen;
@property (readonly, nonatomic) char cursorMovesInWindow;
@property (nonatomic) long long cursorType;
@property (nonatomic) double cursorOpacity;
@property (nonatomic) double cursorBackgroundColorRed;
@property (nonatomic) double cursorBackgroundColorGreen;
@property (nonatomic) double cursorBackgroundColorBlue;
@property (nonatomic) double cursorForegroundColorRed;
@property (nonatomic) double cursorForegroundColorGreen;
@property (nonatomic) double cursorForegroundColorBlue;
@property (nonatomic) double crosshairSize;
@property (nonatomic) double crosshairInset;
@property (nonatomic) double crosshairOpacity;
@property (nonatomic) double moveStepSize;
@property (nonatomic) double moveDuration;
@property (nonatomic) double resizeDuration;
@property (nonatomic) double resizeStepSize;
@property (nonatomic) double hotKeyZoomChange;
@property (nonatomic) double scrollZoomChange;
@property (nonatomic) long long splitScreenStyle;
@property (nonatomic) double zoomFactor;
@property (nonatomic) double desiredZoomFactor;
@property (nonatomic) double poroZoomFactor;
@property (nonatomic) char smoothing;
@property (nonatomic) char invertColors;
@property (nonatomic) double borderWidth;
@property (readonly, nonatomic) double refreshThreadHz;
@property (nonatomic) long long speakItemUnderMouseAfterDelayMode;
@property (nonatomic) double speakItemUnderMouseAfterDelayTime;
@property (nonatomic) char pressOnReleaseOffMode;
@property (nonatomic) char temporaryDetachModeEnabled;

+ (id)sharedManager;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)sync;
- (double)borderWidth;
- (void)postNotification;
- (struct CGSize { double x0; double x1; })windowSize;
- (void)setWindowSize:(struct CGSize { double x0; double x1; })a0;
- (double)zoomFactor;
- (void)setZoomFactor:(double)a0;
- (char)invertColors;
- (void)setInvertColors:(char)a0;
- (void)setCursorType:(long long)a0;
- (struct CGPoint { double x0; double x1; })windowPosition;
- (void)setSmoothing:(char)a0;
- (char)smoothing;
- (long long)cursorType;
- (double)refreshThreadHz;
- (void)setWindowStyle:(long long)a0;
- (char)useKeyboardZoom;
- (void)_sanityCheckPrefs;
- (void)_tryPostNotificationForKey:(id)a0;
- (void)coalesceSyncTimerTick:(id)a0;
- (double)crosshairInset;
- (double)crosshairOpacity;
- (double)crosshairSize;
- (double)cursorBackgroundColorBlue;
- (double)cursorBackgroundColorGreen;
- (double)cursorBackgroundColorRed;
- (double)cursorForegroundColorBlue;
- (double)cursorForegroundColorGreen;
- (double)cursorForegroundColorRed;
- (double)cursorOpacity;
- (double)desiredZoomFactor;
- (char)followsKeyboardFocus;
- (double)hotKeyZoomChange;
- (double)moveDuration;
- (double)moveStepSize;
- (double)poroZoomFactor;
- (void)postNotificationForKey:(id)a0;
- (void)postPendingNotifications;
- (char)pressOnReleaseOffMode;
- (double)resizeDuration;
- (double)resizeStepSize;
- (long long)scrollWheelModifiers;
- (double)scrollZoomChange;
- (void)setCrosshairInset:(double)a0;
- (void)setCrosshairOpacity:(double)a0;
- (void)setCrossshairSize:(double)a0;
- (void)setCursorBackgroundBlue:(double)a0;
- (void)setCursorBackgroundGreen:(double)a0;
- (void)setCursorBackgroundRed:(double)a0;
- (void)setCursorForegroundBlue:(double)a0;
- (void)setCursorForegroundGreen:(double)a0;
- (void)setCursorForegroundRed:(double)a0;
- (void)setCursorOpacity:(double)a0;
- (void)setDesiredZoomFactor:(double)a0;
- (void)setFollowsKeyboardFocus:(char)a0;
- (void)setPoroZoomFactor:(double)a0;
- (void)setPressOnReleaseOffMode:(char)a0;
- (void)setScrollWheelModifiers:(long long)a0;
- (void)setSpeakItemUnderMouseAfterDelayTime:(double)a0;
- (void)setSplitScreenStyle:(long long)a0;
- (void)setTemporaryDetachModeEnabled:(char)a0;
- (void)setUaZoomMode:(long long)a0;
- (void)setUseKeyboardZoom:(char)a0;
- (void)setUseScrollWheelZoom:(char)a0;
- (void)setWindowPosition:(struct CGPoint { double x0; double x1; })a0;
- (double)speakItemUnderMouseAfterDelayTime;
- (long long)splitScreenStyle;
- (char)temporaryDetachModeEnabled;
- (long long)uaZoomMode;
- (char)useScrollWheelZoom;
- (long long)windowStyle;

@end

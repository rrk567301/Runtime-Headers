@interface MIFileManager : NSObject

+ (id)defaultManager;
+ (id)_sanitizeFilePathForVarOrTmpSymlink:(id)a0 error:(id *)a1;

- (char)copyItemAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (char)removeItemAtURL:(id)a0 error:(id *)a1;
- (char)createSymbolicLinkAtURL:(id)a0 withDestinationURL:(id)a1 error:(id *)a2;
- (char)moveItemAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (id)enumerateURLsForItemsInDirectoryAtURL:(id)a0 ignoreSymlinks:(char)a1 withBlock:(id /* block */)a2;
- (char)bundleAtURLIsPlaceholder:(id)a0;
- (char)createDirectoryAtURL:(id)a0 withIntermediateDirectories:(char)a1 mode:(unsigned short)a2 class:(int)a3 error:(id *)a4;
- (char)createDirectoryAtURL:(id)a0 withIntermediateDirectories:(char)a1 mode:(unsigned short)a2 error:(id *)a3;
- (id)dataForExtendedAttributeNamed:(id)a0 length:(unsigned long long)a1 fromURL:(id)a2 error:(id *)a3;
- (unsigned long long)diskUsageForURL:(id)a0;
- (char)itemDoesNotExistAtURL:(id)a0;
- (char)markBundleAsPlaceholder:(id)a0 withError:(id *)a1;
- (char)setData:(id)a0 forExtendedAttributeNamed:(id)a1 onURL:(id)a2 error:(id *)a3;
- (char)_moveItemAtURL:(id)a0 toURL:(id)a1 failIfSrcMissing:(char)a2 error:(id *)a3;
- (id)_realPathForURL:(id)a0 allowNonExistentPathComponents:(char)a1;
- (char)_removeACLAtPath:(const char *)a0 isDir:(char)a1 error:(id *)a2;
- (char)_validateSymlink:(id)a0 withStartingDepth:(unsigned int)a1 andEndingDepth:(unsigned int *)a2;
- (char)copyItemIfExistsAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (id)createTemporaryDirectoryInDirectoryURL:(id)a0 error:(id *)a1;
- (char)dataProtectionClassOfItemAtURL:(id)a0 class:(int *)a1 error:(id *)a2;
- (id)destinationOfSymbolicLinkAtURL:(id)a0 error:(id *)a1;
- (char)itemExistsAtURL:(id)a0;
- (char)itemExistsAtURL:(id)a0 error:(id *)a1;
- (char)moveItemIfExistsAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (id)realPathForURL:(id)a0 ifChildOfURL:(id)a1;
- (char)removeItemAtURL:(id)a0 keepParent:(char)a1 error:(id *)a2;
- (char)setDataProtectionClassOfItemAtURL:(id)a0 toClass:(int)a1 ifPredicate:(id /* block */)a2 error:(id *)a3;
- (id)urlsForItemsInDirectoryAtURL:(id)a0 ignoringSymlinks:(char)a1 error:(id *)a2;
- (char)_bulkSetPropertiesForPath:(const char *)a0 existingFD:(int)a1 UID:(unsigned int)a2 GID:(unsigned int)a3 mode:(unsigned short)a4 flags:(unsigned int)a5 dataProtectionClass:(int)a6 removeACL:(char)a7 error:(id *)a8;
- (char)_copyItemAtURL:(id)a0 toURL:(id)a1 failIfSrcMissing:(char)a2 alwaysClone:(char)a3 ignoreErrors:(char)a4 error:(id *)a5;
- (id)_dataForExtendedAttributeNamed:(id)a0 length:(unsigned long long)a1 onURL:(id)a2 orFD:(int)a3 error:(id *)a4;
- (id)_insecureCachedAppIdentifierIfMarkedWithEAFlag:(const char *)a0 bundleURL:(id)a1 allowPlaceholders:(char)a2 error:(id *)a3;
- (char)_itemIsType:(unsigned short)a0 withDescription:(id)a1 atURL:(id)a2 error:(id *)a3;
- (char)_markEAFlag:(const char *)a0 forAppIdentifier:(id)a1 insecurelyCachedOnBundle:(id)a2 error:(id *)a3;
- (id)_realPathWhatExistsInPath:(id)a0 isDirectory:(char)a1;
- (char)_setData:(id)a0 forExtendedAttributeNamed:(id)a1 onURL:(id)a2 orFD:(int)a3 error:(id *)a4;
- (char)_stageURLByCopying:(id)a0 toItemName:(id)a1 inStagingDir:(id)a2 stagingMode:(int)a3 settingUID:(unsigned int)a4 gid:(unsigned int)a5 dataProtectionClass:(int)a6 hasSymlink:(char *)a7 error:(id *)a8;
- (id)aclTextFromURL:(id)a0 error:(id *)a1;
- (char)bulkSetPropertiesForPath:(const char *)a0 UID:(unsigned int)a1 GID:(unsigned int)a2 mode:(unsigned short)a3 flags:(unsigned int)a4 dataProtectionClass:(int)a5 removeACL:(char)a6 error:(id *)a7;
- (char)bulkSetPropertiesForPath:(const char *)a0 withOpenFD:(int)a1 UID:(unsigned int)a2 GID:(unsigned int)a3 mode:(unsigned short)a4 flags:(unsigned int)a5 dataProtectionClass:(int)a6 removeACL:(char)a7 error:(id *)a8;
- (char)captureStoreDataFromDirectory:(id)a0 toDirectory:(id)a1 doCopy:(char)a2 failureIsFatal:(char)a3 includeiTunesMetadata:(char)a4 withError:(id *)a5;
- (char)clearPlaceholderStatusForBundle:(id)a0 withError:(id *)a1;
- (char)copyItemAtURL:(id)a0 toURL:(id)a1 alwaysClone:(char)a2 error:(id *)a3;
- (char)copyItemIgnoringErrorsAtURL:(id)a0 toURL:(id)a1 error:(id *)a2;
- (id)dataForExtendedAttributeNamed:(id)a0 length:(unsigned long long)a1 fromFD:(int)a2 fdLocation:(id)a3 error:(id *)a4;
- (id)debugDescriptionForItemAtURL:(id)a0;
- (int)deviceForURLOrFirstAvailableParent:(id)a0 error:(id *)a1;
- (id)extendedAttributesFromURL:(id)a0 error:(id *)a1;
- (id)insecureCachedAppIdentifierIfAppClipForBundle:(id)a0 error:(id *)a1;
- (id)insecureCachedAppIdentifierIfValidatedByFreeProfileForBundle:(id)a0 error:(id *)a1;
- (id)installTypeFromExtendedAttributeOnBundle:(id)a0 error:(id *)a1;
- (char)itemDoesNotExistOrIsNotDirectoryAtURL:(id)a0;
- (char)itemIsDirectoryAtURL:(id)a0 error:(id *)a1;
- (char)itemIsFIFOAtURL:(id)a0 error:(id *)a1;
- (char)itemIsFileAtURL:(id)a0 error:(id *)a1;
- (char)itemIsSocketAtURL:(id)a0 error:(id *)a1;
- (char)itemIsSymlinkAtURL:(id)a0 error:(id *)a1;
- (void)logAccessPermissionsForURL:(id)a0;
- (id)modificationDateForURL:(id)a0 error:(id *)a1;
- (id)realPathForURL:(id)a0 allowNonExistentPathComponents:(char)a1 isDirectory:(char)a2 error:(id *)a3;
- (char)removeExtendedAttributeNamed:(id)a0 fromURL:(id)a1 error:(id *)a2;
- (char)secureRenameFromSourceURL:(id)a0 toDestinationURL:(id)a1 destinationStatus:(unsigned char)a2 error:(id *)a3;
- (char)setAppClipAppIdentifier:(id)a0 insecurelyCachedOnBundle:(id)a1 error:(id *)a2;
- (char)setData:(id)a0 forExtendedAttributeNamed:(id)a1 onFD:(int)a2 fdLocation:(id)a3 error:(id *)a4;
- (char)setInstallType:(id)a0 inExtendedAttributeOnBundle:(id)a1 error:(id *)a2;
- (char)setModificationDateToNowForURL:(id)a0 error:(id *)a1;
- (char)setOwnerOfURL:(id)a0 toUID:(unsigned int)a1 gid:(unsigned int)a2 error:(id *)a3;
- (char)setPermissionsForURL:(id)a0 toMode:(unsigned short)a1 error:(id *)a2;
- (char)setValidatedByFreeProfileAppIdentifier:(id)a0 insecurelyCachedOnBundle:(id)a1 error:(id *)a2;
- (char)stageURL:(id)a0 toItemName:(id)a1 inStagingDir:(id)a2 stagingMode:(int)a3 settingUID:(unsigned int)a4 gid:(unsigned int)a5 hasSymlink:(char *)a6 error:(id *)a7;
- (char)stageURLByMoving:(id)a0 toItemName:(id)a1 inStagingDir:(id)a2 settingUID:(unsigned int)a3 gid:(unsigned int)a4 dataProtectionClass:(int)a5 breakHardlinks:(char)a6 hasSymlink:(char *)a7 error:(id *)a8;
- (char)standardizeOwnershipAtURL:(id)a0 toUID:(unsigned int)a1 GID:(unsigned int)a2 removeACLs:(char)a3 setProtectionClass:(char)a4 foundSymlink:(char *)a5 error:(id *)a6;
- (id)traverseDirectoryAtURL:(id)a0 withBlock:(id /* block */)a1;
- (id)upToFirstFourBytesFromURL:(id)a0 error:(id *)a1;
- (char)validateSymlinksInURLDoNotEscapeURL:(id)a0 error:(id *)a1;

@end

@class NSDictionary, PAConfiguration;

@interface PASettings : HCSettings

@property (nonatomic) char personalMediaEnabled;
@property (retain, nonatomic) PAConfiguration *personalMediaConfiguration;
@property (retain, nonatomic) PAConfiguration *audiogramConfiguration;
@property (nonatomic) unsigned long long personalAudioAccommodationTypes;
@property (retain, nonatomic) NSDictionary *personalMediaEnabledByRouteUID;
@property (retain, nonatomic) NSDictionary *personalMediaConfigurationByRouteUID;
@property (retain, nonatomic) NSDictionary *audiogramConfigurationByRouteUID;
@property (retain, nonatomic) NSDictionary *accommodationTypesByRouteUID;
@property (nonatomic) unsigned long long currentEnrollmentProgress;
@property (nonatomic) char configurationCameFromEnrollment;
@property (nonatomic) char configurationCameFromUser;
@property (nonatomic) char shouldUpdateAccessory;
@property (retain, nonatomic) NSDictionary *transparencyCustomized;
@property (retain, nonatomic) NSDictionary *transparencyAmplification;
@property (retain, nonatomic) NSDictionary *transparencyBalance;
@property (retain, nonatomic) NSDictionary *transparencyTone;
@property (retain, nonatomic) NSDictionary *transparencyBeamforming;
@property (retain, nonatomic) NSDictionary *transparencyNoiseSupressor;
@property (nonatomic) char personalSoundVisible;
@property (nonatomic) char personalMediaDebugMode;
@property (nonatomic) char personalMediaAutomationSkipHeadphoneRequirement;
@property (retain, nonatomic) NSDictionary *sslEnabled;

+ (id)sharedInstance;

- (void)logMessage:(id)a0;
- (id)preferenceKeyForSelector:(SEL)a0;
- (id)keysToSync;
- (id)preferenceDomainForPreferenceKey:(id)a0;
- (char)shouldStoreLocally;
- (void)updateConfiguration:(struct { char x0; char x1; id x2; id x3; id x4; id x5; } *)a0 forRouteID:(id)a1;
- (void)setPersonalMediaEnabled:(char)a0 forRouteUID:(id)a1;
- (id)personalMediaConfigurationByRouteUID;
- (void)setShouldUpdateAccessory:(char)a0;
- (char)shouldUpdateAccessory;
- (id)transparencyAmplification;
- (double)transparencyAmplificationForAddress:(id)a0;
- (id)transparencyBalance;
- (double)transparencyBalanceForAddress:(id)a0;
- (id)transparencyBeamforming;
- (char)transparencyBeamformingForAddress:(id)a0;
- (id)transparencyCustomized;
- (char)transparencyCustomizedForAddress:(id)a0;
- (id)transparencyNoiseSupressor;
- (double)transparencyNoiseSupressorForAddress:(id)a0;
- (id)transparencyTone;
- (double)transparencyToneForAddress:(id)a0;
- (char)configurationCameFromEnrollment;
- (void)setTransparencyTone:(double)a0 forAddress:(id)a1;
- (id)accommodationTypesByRouteUID;
- (unsigned long long)accommodationTypesForRouteUID:(id)a0;
- (id)archivedDataFromConfiguration:(id)a0;
- (id)audiogramConfigurationByRouteUID;
- (id)audiogramConfigurationForRouteUID:(id)a0;
- (char)configurationCameFromUser;
- (id)configurationFromData:(id)a0;
- (unsigned long long)currentEnrollmentProgress;
- (char)personalMediaAutomationSkipHeadphoneRequirement;
- (id)personalMediaConfigurationForRouteUID:(id)a0;
- (char)personalMediaDebugMode;
- (id)personalMediaEnabledByRouteUID;
- (char)personalMediaEnabledForRouteUID:(id)a0;
- (char)personalSoundVisible;
- (id)sanitizedRouteUID:(id)a0;
- (void)setAccommodationTypes:(unsigned long long)a0 forRouteUID:(id)a1;
- (void)setAccommodationTypesByRouteUID:(id)a0;
- (void)setAudiogramConfiguration:(id)a0 forRouteUID:(id)a1;
- (void)setAudiogramConfigurationByRouteUID:(id)a0;
- (void)setConfigurationCameFromEnrollment:(char)a0;
- (void)setConfigurationCameFromUser:(char)a0;
- (void)setCurrentEnrollmentProgress:(unsigned long long)a0;
- (void)setPersonalMediaAutomationSkipHeadphoneRequirement:(char)a0;
- (void)setPersonalMediaConfiguration:(id)a0 forRouteUID:(id)a1;
- (void)setPersonalMediaConfigurationByRouteUID:(id)a0;
- (void)setPersonalMediaDebugMode:(char)a0;
- (void)setPersonalMediaEnabledByRouteUID:(id)a0;
- (void)setPersonalSoundVisible:(char)a0;
- (void)setSslEnabled:(id)a0;
- (void)setSslEnabled:(char)a0 forAddress:(id)a1;
- (void)setTransparencyAmplification:(id)a0;
- (void)setTransparencyAmplification:(double)a0 forAddress:(id)a1;
- (void)setTransparencyBalance:(id)a0;
- (void)setTransparencyBalance:(double)a0 forAddress:(id)a1;
- (void)setTransparencyBeamforming:(id)a0;
- (void)setTransparencyBeamforming:(char)a0 forAddress:(id)a1;
- (void)setTransparencyCustomized:(id)a0;
- (void)setTransparencyCustomized:(char)a0 forAddress:(id)a1;
- (void)setTransparencyNoiseSupressor:(id)a0;
- (void)setTransparencyNoiseSupressor:(double)a0 forAddress:(id)a1;
- (void)setTransparencyTone:(id)a0;
- (id)sslEnabled;
- (char)sslEnabledForAddress:(id)a0;
- (void)updateConfiguration:(struct { struct { unsigned char x0; unsigned char x1; } x0; float x1[8]; float x2[8]; } *)a0 forRouteUID:(id)a1;
- (id)valueForRouteUID:(id)a0 fromCombinedValue:(id)a1;

@end

@class CalUIDayViewGadgetController, NSDate, CalUIDayViewAllDayView, CalUIDayViewTimeLineView, NSDateFormatter, NowLabel, NSLayoutConstraint, NSString, NSTimer, NSArray, NSView, NSTextField, NSColor;
@protocol CalUIDayViewGadgetAppearanceDelegate, CalUIDayViewGadgetDataSource;

@interface CalUIDayViewGadget : NSView <CUIKSingleDayTimelineGeometryDelegate, CUIKSingleDayTimelineLayoutScreenUtils, CalUIBoxOccurrenceContentViewDelegate>

@property (retain, nonatomic) NSArray *dayViewOccurrences;
@property (retain, nonatomic) NSArray *dayViewGridLines;
@property (retain, nonatomic) NSArray *dayViewGridLabels;
@property (retain, nonatomic) NSDate *nextRefreshDate;
@property (retain, nonatomic) NSDate *displayStart;
@property (retain, nonatomic) NSDate *displayEnd;
@property (readonly, nonatomic) NSDateFormatter *dateFormatter;
@property (readonly, nonatomic) NSColor *transparentColor;
@property (retain, nonatomic) NSTimer *refreshTimer;
@property (retain, nonatomic) NSTimer *nowLineTimer;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } displayedRect;
@property (nonatomic) char allTimedEventsHaveFinished;
@property (retain, nonatomic) NSView *nowLine;
@property (retain, nonatomic) NowLabel *nowLabel;
@property (retain, nonatomic) NSTextField *noEventsLabel;
@property (readonly, nonatomic) char hasEventsToShow;
@property (readonly, nonatomic) double viewHeightInSeconds;
@property (readonly, nonatomic) double viewHeightInPixels;
@property (readonly, nonatomic) double allDayViewHeight;
@property (readonly, nonatomic) double timelineViewHeight;
@property (retain, nonatomic) CalUIDayViewAllDayView *allDayView;
@property (retain, nonatomic) CalUIDayViewTimeLineView *timelineView;
@property (retain, nonatomic) NSLayoutConstraint *timeLineHeightConstraint;
@property (retain, nonatomic) NSLayoutConstraint *allDaySeparatorHeightConstraint;
@property (weak, nonatomic) id<CalUIDayViewGadgetDataSource> dataSource;
@property (retain, nonatomic) id<CalUIDayViewGadgetAppearanceDelegate> appearanceDelegate;
@property (weak, nonatomic) CalUIDayViewGadgetController *controller;
@property (readonly, nonatomic) double hourHeight;
@property (readonly, nonatomic) double topPadding;
@property (readonly, nonatomic) double timeWidth;
@property (readonly, nonatomic) char originIsUpperLeft;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void).cxx_destruct;
- (void)layout;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (char)isFlipped;
- (id)titleFont;
- (void)updateConstraints;
- (char)wantsLayer;
- (id)endOfDay;
- (id)startOfDay;
- (void)dataChanged;
- (char)shouldReverseLayoutDirection;
- (double)RoundToScreenScale:(double)a0;
- (void)_updateDateFormatterWithFormat:(id)a0;
- (char)shouldOccurrenceShowTravelTime:(id)a0;
- (id)_addMarginToDate:(id)a0 shouldSearchBackward:(char)a1;
- (id)_allDaySeparatorColor;
- (double)_allDaySeparatorHeight;
- (void)_calculateDisplayBounds;
- (long long)_displayType;
- (void)_hideNowIndicator:(char)a0;
- (double)_hourLineWidth;
- (double)_hourLinesXPos;
- (char)_isHourHeightFixed;
- (char)_isHourTooCloseToNow:(id)a0;
- (char)_isPreviewEvent:(id)a0;
- (char)_liesOnHour:(id)a0;
- (void)_scheduleNowIndicatorUpdate;
- (void)_scheduleRefreshAfterDate:(id)a0;
- (void)_setDisplayTimesForNoEvents;
- (char)_shouldAlwaysDrawAllDayArea;
- (char)_shouldDisplayCurrentTime;
- (char)_shouldDisplayEvent:(id)a0 forTime:(id)a1;
- (char)_shouldDisplayPreviewEventsAsTentative;
- (char)_shouldDrawAllDaySeparator;
- (void)_updateNoEventsLabel;
- (void)_updateNowIndicator;
- (void)alignAllDayLabelToFirstOccurrence;
- (double)dateForPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)fontForEventOccurrencesWithWeight:(int)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 appearanceDelegate:(id)a1;
- (id)locationFont;
- (id)moreFont;
- (char)occurrenceWantsTentativeAppearance:(id)a0;
- (struct CGPoint { double x0; double x1; })pointForDate:(double)a0;
- (struct CGPoint { double x0; double x1; })pointForHourLabel:(id)a0;
- (char)shouldShowNewDotForOccurrence:(id)a0;
- (id)timeFont;
- (void)updateBackgroundColor;
- (double)viewHeightInPoints;
- (double)yValueInDayGridForDate:(id)a0;

@end

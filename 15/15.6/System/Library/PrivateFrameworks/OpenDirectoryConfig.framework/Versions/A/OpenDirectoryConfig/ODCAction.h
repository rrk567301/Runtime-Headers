@class NSError, NSString, ODNode, NSNumber, NSThread, NSDictionary, SFAuthorization, NSMutableArray, NSMutableSet, ODSession;

@interface ODCAction : NSObject {
    NSMutableSet *_actionsBeingObserved;
    NSNumber *_recoverable;
    char _userChangedUpdatesOnMainThread;
    ODSession *_odSession;
    char _remote;
    char _remoteauth_external;
    struct { char bytes[32]; } _remoteAuthExtForm;
}

@property (copy) id /* block */ executionBlock;
@property (retain) NSThread *originalThread;
@property (readonly, retain) NSMutableArray *beginCallbacks;
@property (readonly, retain) NSMutableArray *cancelCallbacks;
@property (readonly, retain) NSMutableArray *errorCallbacks;
@property (readonly, retain) NSMutableArray *finishCallbacks;
@property (readonly, retain) NSMutableArray *finishRecoveryCallbacks;
@property (getter=isCancelled) char cancelled;
@property (getter=isFinished) char finished;
@property double percentComplete;
@property (retain) NSString *progressStatus;
@property (getter=isRunning) char running;
@property char needsRecovery;
@property id beginTarget;
@property SEL beginSelector;
@property id cancelTarget;
@property SEL cancelSelector;
@property id finishTarget;
@property SEL finishSelector;
@property id errorTarget;
@property SEL errorSelector;
@property id finishRecoveryTarget;
@property SEL finishRecoverySelector;
@property (retain) NSString *description;
@property (retain) NSDictionary *userInfo;
@property (retain) ODCAction *recoveryAction;
@property (getter=isRecoverable) char recoverable;
@property (getter=isCanceled) char canceled;
@property (retain) NSDictionary *results;
@property (retain) NSError *error;
@property double timeoutInterval;
@property char updatesOnMainThread;
@property (retain) SFAuthorization *auth;
@property (retain) ODSession *odSession;
@property char localizeProgressStatus;
@property char legacyBinding;
@property (retain) ODNode *odConfigNode;
@property (retain) NSDictionary *rootDSE;

+ (id)action;
+ (id)calculateComputerPassword;
+ (id)calculateSuggestedComputerID;
+ (id)calculateSuggestedComputerIDWithHostName:(id)a0;
+ (id)errorForUserCancellation;
+ (id)localizedODCString:(id)a0;
+ (id)readCurrentADSettings:(id)a0 error:(id *)a1;
+ (id)sourceNodeOfCurrentUser:(id)a0;
+ (char)usesDefaultMultiThreading;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)finalize;
- (unsigned long long)hash;
- (id)init;
- (void)finish;
- (void)start;
- (void)cancel;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_setFinished:(id)a0;
- (void)runSynchronously;
- (void)_setRunning:(id)a0;
- (void)addErrorHandler:(id /* block */)a0;
- (void)_setCancelled:(id)a0;
- (void)recover;
- (void)finishRecovery;
- (void)_setResults:(id)a0;
- (char)openConfigNode:(id *)a0;
- (void)_setDescription:(id)a0;
- (void)_setPercentComplete:(id)a0;
- (void)addBeginHandler:(id /* block */)a0;
- (void)addBeginTarget:(id)a0 selector:(SEL)a1;
- (void)addCancelHandler:(id /* block */)a0;
- (void)addCancelTarget:(id)a0 selector:(SEL)a1;
- (void)addErrorTarget:(id)a0 selector:(SEL)a1;
- (void)addFinishHandler:(id /* block */)a0;
- (void)addFinishRecoveryHandler:(id /* block */)a0;
- (void)addFinishRecoveryTarget:(id)a0 selector:(SEL)a1;
- (void)addFinishTarget:(id)a0 selector:(SEL)a1;
- (id)addNodeToSearchPaths:(id)a0;
- (void)addObserversToAction:(id)a0;
- (void)appendTraceStringWithIndententation:(unsigned long long)a0 toString:(id)a1;
- (id)authenticateToRemoteHost:(id)a0 username:(id)a1 password:(id)a2;
- (id)authenticateWithLocalNodeAdminName:(id)a0 password:(id)a1;
- (void)cancelActionDueToTimeout;
- (void)destroyRemoteAdminAuth;
- (void)forceRecover;
- (void)performBeginCallbacks;
- (void)performCallbacks:(id)a0;
- (void)performCancelCallbacks;
- (void)performErrorCallbacks;
- (void)performFinishCallbacks;
- (void)performFinishRecoveryCallbacks;
- (void)postAuthSucceededNotification;
- (char)preflightAuthRights;
- (char)preflightAuthRightsWithUsername:(id)a0 password:(id)a1;
- (id)removeNodeFromSearchPaths:(id)a0;
- (void)removeObserversFromAction:(id)a0;
- (id)sendConfig:(id)a0 responseDict:(id *)a1 nodeName:(id)a2 customCallCode:(long long)a3;
- (void)setBeginTarget:(id)a0 selector:(SEL)a1;
- (void)setCancelTarget:(id)a0 selector:(SEL)a1;
- (void)setErrorTarget:(id)a0 selector:(SEL)a1;
- (void)setFinishRecoveryTarget:(id)a0 selector:(SEL)a1;
- (void)setFinishTarget:(id)a0 selector:(SEL)a1;
- (id)setPlugin:(id)a0 enabled:(char)a1;
- (void)setRemoteAuthExtForm:(struct { char x0[32]; } *)a0;
- (void)startExecution;
- (void)stopExecution;
- (void)threadedStartExecution;
- (id)traceString;
- (void)unthreadedFinish;
- (void)wakeUpRunLoop;
- (void)writeErrorToConsole;

@end

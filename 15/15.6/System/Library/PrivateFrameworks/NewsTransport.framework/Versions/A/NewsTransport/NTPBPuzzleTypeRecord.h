@class NSString, NSMutableArray, NTPBRecordBase;

@interface NTPBPuzzleTypeRecord : PBCodable <NSCopying> {
    struct { unsigned char behaviorFlags : 1; unsigned char minimumNewsVersion : 1; unsigned char isPublic : 1; } _has;
}

@property (readonly, nonatomic) char hasBase;
@property (retain, nonatomic) NTPBRecordBase *base;
@property (readonly, nonatomic) char hasName;
@property (retain, nonatomic) NSString *name;
@property (readonly, nonatomic) char hasEngineResourceID;
@property (retain, nonatomic) NSString *engineResourceID;
@property (readonly, nonatomic) char hasSuperfeedConfigResourceID;
@property (retain, nonatomic) NSString *superfeedConfigResourceID;
@property (retain, nonatomic) NSMutableArray *latestPuzzleIDs;
@property (retain, nonatomic) NSMutableArray *promotedPuzzleIDs;
@property (readonly, nonatomic) char hasLanguage;
@property (retain, nonatomic) NSString *language;
@property (retain, nonatomic) NSMutableArray *blockedStorefrontIDs;
@property (retain, nonatomic) NSMutableArray *allowedStorefrontIDs;
@property (nonatomic) char hasMinimumNewsVersion;
@property (nonatomic) long long minimumNewsVersion;
@property (readonly, nonatomic) char hasNameImageURL;
@property (retain, nonatomic) NSString *nameImageURL;
@property (readonly, nonatomic) char hasNameImageCompactURL;
@property (retain, nonatomic) NSString *nameImageCompactURL;
@property (readonly, nonatomic) char hasNameImageForDarkBackgroundURL;
@property (retain, nonatomic) NSString *nameImageForDarkBackgroundURL;
@property (readonly, nonatomic) char hasNameImageMaskURL;
@property (retain, nonatomic) NSString *nameImageMaskURL;
@property (readonly, nonatomic) char hasCoverImageURL;
@property (retain, nonatomic) NSString *coverImageURL;
@property (readonly, nonatomic) char hasFeedNavImageURL;
@property (retain, nonatomic) NSString *feedNavImageURL;
@property (readonly, nonatomic) char hasExploreTileImageURL;
@property (retain, nonatomic) NSString *exploreTileImageURL;
@property (readonly, nonatomic) char hasThemeConfiguration;
@property (retain, nonatomic) NSString *themeConfiguration;
@property (readonly, nonatomic) char hasImagesResourceID;
@property (retain, nonatomic) NSString *imagesResourceID;
@property (readonly, nonatomic) char hasNavigationChromeBackgroundImageURL;
@property (retain, nonatomic) NSString *navigationChromeBackgroundImageURL;
@property (readonly, nonatomic) char hasNavigationChromeBackgroundImageCompactURL;
@property (retain, nonatomic) NSString *navigationChromeBackgroundImageCompactURL;
@property (readonly, nonatomic) char hasNavigationChromeBackgroundImageLargeURL;
@property (retain, nonatomic) NSString *navigationChromeBackgroundImageLargeURL;
@property (readonly, nonatomic) char hasNavigationChromeBackgroundDarkModeImageURL;
@property (retain, nonatomic) NSString *navigationChromeBackgroundDarkModeImageURL;
@property (readonly, nonatomic) char hasNavigationChromeBackgroundDarkModeImageCompactURL;
@property (retain, nonatomic) NSString *navigationChromeBackgroundDarkModeImageCompactURL;
@property (readonly, nonatomic) char hasNavigationChromeBackgroundDarkModeImageLargeURL;
@property (retain, nonatomic) NSString *navigationChromeBackgroundDarkModeImageLargeURL;
@property (readonly, nonatomic) char hasKind;
@property (retain, nonatomic) NSString *kind;
@property (readonly, nonatomic) char hasNameCompact;
@property (retain, nonatomic) NSString *nameCompact;
@property (nonatomic) char hasBehaviorFlags;
@property (nonatomic) long long behaviorFlags;
@property (nonatomic) char hasIsPublic;
@property (nonatomic) char isPublic;

+ (Class)allowedStorefrontIDsType;
+ (Class)blockedStorefrontIDsType;
+ (Class)latestPuzzleIDsType;
+ (Class)promotedPuzzleIDsType;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)description;
- (unsigned long long)hash;
- (char)isEqual:(id)a0;
- (id)dictionaryRepresentation;
- (void)mergeFrom:(id)a0;
- (char)readFrom:(id)a0;
- (void)writeTo:(id)a0;
- (void)addAllowedStorefrontIDs:(id)a0;
- (void)addBlockedStorefrontIDs:(id)a0;
- (void)addLatestPuzzleIDs:(id)a0;
- (void)addPromotedPuzzleIDs:(id)a0;
- (id)allowedStorefrontIDsAtIndex:(unsigned long long)a0;
- (unsigned long long)allowedStorefrontIDsCount;
- (id)blockedStorefrontIDsAtIndex:(unsigned long long)a0;
- (unsigned long long)blockedStorefrontIDsCount;
- (void)clearAllowedStorefrontIDs;
- (void)clearBlockedStorefrontIDs;
- (void)clearLatestPuzzleIDs;
- (void)clearPromotedPuzzleIDs;
- (id)latestPuzzleIDsAtIndex:(unsigned long long)a0;
- (unsigned long long)latestPuzzleIDsCount;
- (id)promotedPuzzleIDsAtIndex:(unsigned long long)a0;
- (unsigned long long)promotedPuzzleIDsCount;

@end

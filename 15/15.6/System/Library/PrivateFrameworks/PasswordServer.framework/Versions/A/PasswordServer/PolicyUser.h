@interface PolicyUser : PolicyBase <PolicyAbstract> {
    struct PWAccessFeatures { unsigned char requiresAlpha : 1; unsigned char usingHardExpirationDate : 1; unsigned char usingExpirationDate : 1; unsigned char canModifyPasswordforSelf : 1; unsigned char usingHistory : 1; unsigned char newPasswordRequired : 1; unsigned char isAdminUser : 1; unsigned char isDisabled : 1; unsigned char isSessionKeyAgent : 1; unsigned char historyCount : 4; unsigned char passwordCannotBeName : 1; unsigned char passwordIsHash : 1; unsigned char requiresNumeric : 1; struct BSDTimeStructCopy { int tm_sec; int tm_min; int tm_hour; int tm_mday; int tm_mon; int tm_year; int tm_wday; int tm_yday; int tm_isdst; int tm_gmtoff; unsigned int tm_zone; } expirationDateGMT; struct BSDTimeStructCopy { int tm_sec; int tm_min; int tm_hour; int tm_mday; int tm_mon; int tm_year; int tm_wday; int tm_yday; int tm_isdst; int tm_gmtoff; unsigned int tm_zone; } hardExpireDateGMT; struct BSDTimeStructCopy { int tm_sec; int tm_min; int tm_hour; int tm_mday; int tm_mon; int tm_year; int tm_wday; int tm_yday; int tm_isdst; int tm_gmtoff; unsigned int tm_zone; } validAfterGMT; unsigned int maxMinutesUntilChangePassword; unsigned int maxMinutesUntilDisabled; unsigned int maxMinutesOfNonUse; unsigned short maxFailedLoginAttempts; unsigned short minChars; unsigned short maxChars; } mUserPolicy;
    struct PWMoreAccessFeatures { unsigned int minutesUntilFailedLoginReset; unsigned int notGuessablePattern; char userkey[64]; unsigned int logOffTime; unsigned int kickOffTime; unsigned char adminNoChangePasswords : 1; unsigned char requiresSymbol : 1; unsigned char unused : 1; unsigned char isComputerAccount : 1; unsigned char requiresMixedCase : 1; unsigned char doNotMerge : 1; unsigned char doNotReplicate : 1; unsigned char recordIsDead : 1; unsigned char adminClass : 3; unsigned char adminNoPromoteAdmins : 1; unsigned char adminNoClearState : 1; unsigned char adminNoDelete : 1; unsigned char adminNoCreate : 1; unsigned char adminNoSetPolicies : 1; } mMoreUserPolicy;
    unsigned long long mWarnOfExpirationMinutes;
    unsigned long long mWarnOfDisableMinutes;
    long long mProjectedPasswordExpireDate;
    long long mProjectedAccountDisableDate;
    long long mModDateOfPassword;
}

- (void)setPolicy:(struct PWAccessFeatures { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 4; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x13; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x14; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned short x19; unsigned short x20; unsigned short x21; } *)a0;
- (void)addMiscPolicies:(const char *)a0;
- (void)convertDictToStruct:(struct __CFDictionary { } *)a0;
- (struct __CFDictionary { } *)convertStructToDict;
- (struct __CFDictionary { } *)convertStructToDictWithState;
- (void)getPolicy:(struct PWAccessFeatures { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 4; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x13; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x14; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned short x19; unsigned short x20; unsigned short x21; } *)a0 extraPolicy:(struct PWMoreAccessFeatures { unsigned int x0; unsigned int x1; char x2[64]; unsigned int x3; unsigned int x4; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 3; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; } *)a1;
- (void)setPolicy:(struct PWAccessFeatures { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 4; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x13; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x14; struct BSDTimeStructCopy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; unsigned int x10; } x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned short x19; unsigned short x20; unsigned short x21; } *)a0 extraPolicy:(struct PWMoreAccessFeatures { unsigned int x0; unsigned int x1; char x2[64]; unsigned int x3; unsigned int x4; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 1; unsigned char x12 : 1; unsigned char x13 : 3; unsigned char x14 : 1; unsigned char x15 : 1; unsigned char x16 : 1; unsigned char x17 : 1; unsigned char x18 : 1; } *)a1;

@end

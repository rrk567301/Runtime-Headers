@class NSData, NSString, NSArray, PKFelicaPassProperties, NSSet, PKTransitPassProperties, NSDecimalNumber, NSNumber;

@interface PKPaymentApplication : NSObject <NSSecureCoding, NSCopying> {
    char _foundVehicleReport;
}

@property (class, readonly) char supportsSecureCoding;

@property (copy, nonatomic) NSData *_readerIdentifier;
@property (retain, nonatomic) NSSet *associatedReaders;
@property (copy, nonatomic, setter=setDPANIdentifier:) NSString *dpanIdentifier;
@property (copy, nonatomic, setter=setDPANSuffix:) NSString *dpanSuffix;
@property (copy, nonatomic, setter=setSanitizedDPAN:) NSString *sanitizedDPAN;
@property (copy, nonatomic) NSString *applicationIdentifier;
@property (copy, nonatomic) NSString *secureElementIdentifier;
@property (nonatomic) long long state;
@property (readonly, nonatomic) NSString *stateAsString;
@property (copy, nonatomic) NSString *suspendedReason;
@property (nonatomic) char supportsContactlessPayment;
@property (nonatomic) char supportsInAppPayment;
@property (nonatomic) char supportsMerchantTokens;
@property (nonatomic) char hasMerchantTokens;
@property (nonatomic) char hadMerchantTokens;
@property (copy, nonatomic, setter=setAPANIdentifier:) NSString *apanIdentifier;
@property (copy, nonatomic, setter=setAPANSuffix:) NSString *apanSuffix;
@property (copy, nonatomic) NSString *virtualCardIdentifier;
@property (copy, nonatomic, setter=setVirtualCardSuffix:) NSString *virtualCardSuffix;
@property (retain, nonatomic) NSNumber *supportsVirtualCardNumber;
@property (nonatomic) long long virtualCardVPANOrigin;
@property (retain, nonatomic) NSNumber *virtualCardRefreshTypeNumber;
@property (retain, nonatomic) NSNumber *supportsMultiTokens;
@property (nonatomic) char supportsBarcodePayment;
@property (nonatomic) char supportsOptionalAuthentication;
@property (copy, nonatomic) NSArray *supportedExpressModes;
@property (copy, nonatomic) NSArray *automaticSelectionCriteria;
@property (nonatomic) char supportsServiceMode;
@property (copy, nonatomic) NSString *appletCurrencyCode;
@property (nonatomic) char requiresDeferredAuthorization;
@property (nonatomic) long long paymentNetworkIdentifier;
@property (nonatomic) char inAppPINRequired;
@property (copy, nonatomic) NSDecimalNumber *inAppPINRequiredAmount;
@property (copy, nonatomic) NSString *inAppPINRequiredCurrency;
@property (nonatomic) unsigned long long paymentType;
@property (nonatomic) unsigned long long auxiliaryPaymentType;
@property (copy, nonatomic) NSString *displayName;
@property (nonatomic, getter=isAuxiliary) char auxiliary;
@property (nonatomic) long long contactlessPriority;
@property (nonatomic) long long inAppPriority;
@property (nonatomic) char supportsInstantFundsIn;
@property (nonatomic) unsigned long long fundingSourcePaymentType;
@property (nonatomic) char requiresConsentForDataRelease;
@property (copy, nonatomic) NSString *transactionSourceIdentifier;
@property (copy, nonatomic) NSString *appletDataFormat;
@property (copy, nonatomic) PKTransitPassProperties *transitProperties;
@property (copy, nonatomic) PKFelicaPassProperties *felicaProperties;
@property (readonly, nonatomic) char supportsTransit;
@property (readonly, nonatomic) char supportsSuica;
@property (readonly, nonatomic, getter=isParsedTransitApplication) char parsedTransitApplication;
@property (readonly, nonatomic) char generatesLocalTransactions;
@property (readonly, nonatomic) char supportsTransitHistory;
@property (readonly, nonatomic) NSString *stationCodeProvider;
@property (copy, nonatomic) NSArray *supportedInAppMerchantCountryCodes;
@property (copy, nonatomic) NSArray *unsupportedInAppMerchantCountryCodes;
@property (copy, nonatomic) NSArray *supportedTransitNetworkIdentifiers;
@property (nonatomic) unsigned long long supportedRadioTechnologies;
@property (copy, nonatomic) NSSet *subcredentials;
@property (nonatomic, getter=isShareable) char shareable;

+ (id)applicationWithProtobuf:(id)a0;
+ (char)paymentApplicationSupportsMerchantCapabilties:(unsigned long long)a0 paymentType:(unsigned long long)a1;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)description;
- (unsigned long long)hash;
- (char)isEqual:(id)a0;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)protobuf;
- (char)isRequiredForMerchantInCountry:(id)a0;
- (char)supportsExpress;
- (void)_createAndPopulateAutomaticSelectionCriteriaIfNecessary;
- (void)_createAndPopulateReaderIdentifierIfNecessary;
- (char)acceptedForNonWebPaymentWithSupportedNetworkIdentifiers:(id)a0 merchantCapabilities:(unsigned long long)a1 merchantCountryCode:(id)a2 paymentApplicationStates:(id)a3 paymentRequestType:(id)a4 isMultiTokensRequest:(char)a5 webService:(id)a6;
- (char)acceptedForNonWebPaymentWithSupportedNetworkIdentifiers:(id)a0 merchantCapabilities:(unsigned long long)a1 paymentMode:(long long)a2;
- (char)acceptedForWebPaymentWithSupportedNetworkIdentifiers:(id)a0 merchantCapabilities:(unsigned long long)a1 merchantCountryCode:(id)a2 paymentApplicationStates:(id)a3 webService:(id)a4 paymentMode:(long long)a5 isMultiTokensRequest:(char)a6;
- (id)asDictionary;
- (char)blockingSupportedUWBDueToHardware;
- (char)canProcessPayment:(id)a0;
- (char)firstApproachCompleted;
- (id)initWithPaymentApplicationDictionary:(id)a0 auxiliaryApplication:(char)a1;
- (char)isEqualToPaymentApplication:(id)a0;
- (id)networksSupportedAccordingToService:(id)a0;
- (id)paymentApplicationsIncludingAuxiliaryPaymentTypes;
- (char)supportsAutomaticSelectionForTCI:(id)a0;
- (char)supportsComboCard;
- (char)supportsDeviceAssessmentAccordingToService:(id)a0;
- (BOOL)supportsExpressForAutomaticSelectionCriteriaPassingTest:(id /* block */)a0;
- (char)supportsExpressForAutomaticSelectionTechnologyType:(long long)a0;
- (char)supportsExpressMode:(id)a0;
- (char)supportsMultiTokensWithImplicitlyEnabledNetworks:(id)a0;
- (char)supportsPartnerSpecificIdentifier;
- (char)supportsUWB;
- (char)supportsWebPaymentMode:(long long)a0 withExclusionList:(id)a1;
- (char)supportsWebPaymentMode:(long long)a0 withExclusionList:(id)a1 clientOSVersion:(id)a2;
- (id)torinoFeatureFromService:(id)a0;
- (unsigned long long)vpanRefreshTypeAccordingToService:(id)a0;

@end

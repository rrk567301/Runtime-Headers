@class HMBCloudDatabaseConfiguration, NSMutableDictionary, HMBLocalZone, NAFuture, HMBCloudDatabaseStateModel, HMBCloudCredentialsAvailabilityListener, CKContainerID, CKDatabase, NSSet, NSString, NSOperationQueue, HMBLocalDatabase, CKContainer;
@protocol HMBCloudDatabaseDelegate, NAScheduler, HMBCloudDatabaseDataSource;

@interface HMBCloudDatabase : HMFObject <HMBCloudPushObserver, HMFLogging> {
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _propertyLock;
}

@property (readonly, nonatomic) NSSet *privateZoneIDs;
@property (readonly, nonatomic) NSSet *sharedZoneIDs;
@property (readonly, nonatomic) NSSet *publicZoneIDs;
@property (readonly, nonatomic) id<HMBCloudDatabaseDataSource> dataSource;
@property (readonly, nonatomic) HMBLocalZone *stateZone;
@property (retain, nonatomic) HMBCloudDatabaseStateModel *privateDatabaseState;
@property (retain, nonatomic) HMBCloudDatabaseStateModel *sharedDatabaseState;
@property (retain, nonatomic) HMBCloudDatabaseStateModel *publicDatabaseState;
@property (readonly, nonatomic) NSMutableDictionary *zoneStateByZoneID;
@property (readonly, nonatomic) CKContainer *container;
@property (readonly, nonatomic) HMBCloudCredentialsAvailabilityListener *credentialsAvailabilityListener;
@property (readonly, nonatomic) id<NAScheduler> operationScheduler;
@property (readonly, nonatomic) CKDatabase *sharedDatabase;
@property (readonly, nonatomic) CKDatabase *privateDatabase;
@property (readonly, nonatomic) CKDatabase *publicDatabase;
@property (copy, nonatomic) id /* block */ cloudZoneFactory;
@property (readonly, nonatomic) NSOperationQueue *invitationOperationQueue;
@property (readonly, nonatomic) NSOperationQueue *databaseFetchOperationQueue;
@property (retain, nonatomic) NAFuture *initialCloudSyncFuture;
@property (weak, nonatomic) id<HMBCloudDatabaseDelegate> delegate;
@property (readonly, nonatomic) HMBLocalDatabase *localDatabase;
@property (readonly, nonatomic) CKContainerID *containerID;
@property (readonly, copy, nonatomic) HMBCloudDatabaseConfiguration *configuration;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)logCategory;

- (void).cxx_destruct;
- (id)shutdown;
- (id)acceptInvitation:(id)a0;
- (id)logIdentifier;
- (id)attributeDescriptions;
- (id)fetchParticipantWithLookupInfo:(id)a0;
- (char)needsZoneCreationForZoneWithID:(id)a0;
- (id)serverChangeTokenForZoneWithID:(id)a0;
- (id)synchronizeZoneStateForZoneIDs:(id)a0;
- (id)_acceptInvitation:(id)a0;
- (id)_openOrCreateZoneWithScope:(long long)a0 recordZoneID:(id)a1 delegate:(id)a2 shouldCreate:(char)a3 configuration:(id)a4 existingCloudZone:(id)a5 error:(id *)a6;
- (void)_performInitialCloudSync;
- (char)_retryCloudKitOperationAfterError:(id)a0 retryBlock:(id /* block */)a1;
- (id)_updateAPSRegistration:(char)a0;
- (id)_zonesWithScope:(long long)a0;
- (id)acceptInvitationWithShareMetadata:(id)a0;
- (void)addContainerOperation:(id)a0;
- (void)addDatabaseOperation:(id)a0 forScope:(long long)a1;
- (id)createPrivateZoneWithID:(id)a0;
- (id)databaseStateForDatabaseScope:(long long)a0;
- (id)fetchCurrentUserRecordForDatabase:(id)a0;
- (id)fetchShareMetadataForInvitation:(id)a0;
- (id)fetchSubscriptionsInDatabase:(id)a0;
- (id)fetchZonesWithIDs:(id)a0 inDatabase:(id)a1;
- (void)handleCreatedZoneIDs:(id)a0;
- (void)handleRemovedZoneIDs:(id)a0 userInitiated:(char)a1;
- (void)handleUpdatedZonesIDs:(id)a0;
- (void)handler:(id)a0 didReceiveCKNotification:(id)a1;
- (void)handler:(id)a0 didReceiveMessageWithUserInfo:(id)a1;
- (id)initWithLocalDatabase:(id)a0 configuration:(id)a1;
- (id)initWithLocalDatabase:(id)a0 stateZone:(id)a1 container:(id)a2 configuration:(id)a3 databaseStateModelsByScope:(id)a4 zoneStateModels:(id)a5 credentialsAvailabilityListener:(id)a6 dataSource:(id)a7;
- (void)notifyDelegateOfError:(id)a0 forOperation:(id)a1;
- (id)openExistingPrivateZoneWithID:(id)a0 configuration:(id)a1 delegate:(id)a2 error:(id *)a3;
- (id)openExistingSharedZoneWithID:(id)a0 configuration:(id)a1 delegate:(id)a2 error:(id *)a3;
- (id)openOrCreatePrivateZoneWithID:(id)a0 configuration:(id)a1 delegate:(id)a2 error:(id *)a3;
- (id)operationConfigurationWithProcessingOptions:(id)a0;
- (id)performCloudPullForScope:(long long)a0;
- (id)performCodeOperationWithServiceName:(id)a0 functionName:(id)a1 request:(id)a2 responseClass:(Class)a3;
- (id)performInitialCloudSync;
- (id)pushSubscriptionsForDatabase:(id)a0 subscriptionsToSave:(id)a1 subscriptionIDsToRemove:(id)a2;
- (id)registerPrivateSubscription:(id)a0;
- (id)registerPrivateSubscriptionForExternalRecordType:(id)a0;
- (id)registerSharedSubscriptionForExternalRecordType:(id)a0;
- (id)registerSubscription:(id)a0 forZoneWithID:(id)a1;
- (id)registerSubscriptionForExternalRecordType:(id)a0 databaseState:(id)a1;
- (id)removePrivateZoneWithID:(id)a0;
- (void)removeStateForZoneID:(id)a0;
- (id)removeZoneWithID:(id)a0;
- (char)reopenOrRecreatePrivateZone:(id)a0 error:(id *)a1;
- (char)retryCloudKitOperation:(id)a0 afterError:(id)a1 retryBlock:(id /* block */)a2;
- (void)retryStartupBlock:(id /* block */)a0;
- (id)subscriptionIDForCloudID:(id)a0 recordType:(id)a1;
- (id)subscriptionIDForZoneID:(id)a0 recordType:(id)a1;
- (id)subscriptionsForZoneWithID:(id)a0;
- (id)synchronizeSharedZones;
- (id)unregisterPrivateSubscriptionForExternalRecordType:(id)a0;
- (id)unregisterPrivateSubscriptionForSubscriptionID:(id)a0;
- (id)unregisterSharedSubscriptionForExternalRecordType:(id)a0;
- (id)unregisterSharedSubscriptionForSubscriptionID:(id)a0;
- (id)unregisterSubscription:(id)a0 forZoneWithID:(id)a1;
- (void)updateNeedsZoneDeletion:(char)a0 forZoneWithID:(id)a1;
- (void)updateRebuildStatus:(id)a0 forZoneWithID:(id)a1;
- (void)updateServerChangeToken:(id)a0 forDatabaseWithScope:(long long)a1;
- (void)updateServerChangeToken:(id)a0 forZoneWithID:(id)a1;
- (id)waitForAccountAvailability;

@end

@class NSString, NSMutableDictionary, NSURL, NSObject;
@protocol OS_dispatch_queue;

@interface NUGlobalSettings : NSObject {
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_settings;
}

@property (class) char renderJobDebug;
@property (class) char renderJobDisableResultCache;
@property (class) char renderJobDebugCaptureNodeGraphs;
@property (class) char renderJobDebugCaptureNodeCache;
@property (class) char renderJobDebugCaptureCanceledJobs;
@property (class) char renderJobDebugCapturePerfStatHistory;
@property (class) char renderJobDebugCaptureOnlyPerfStats;
@property (class) char renderJobDebugCapture5PercentOfJobs;
@property (class, retain) NSString *tempDir;
@property (class, readonly) char deviceDisableMetal;
@property (class) char devicePrintRenderer;
@property (class) long long deviceDefaultSampleMode;
@property (class) char resampleInSourceColorSpace;
@property (class) char rendererUseHalfFloat;
@property (class) char rendererClampToAlpha;
@property (class) char rendererUseP3Linear;
@property (class) long long rendererContextLargeMemoryTarget;
@property (class) long long rendererContextLowMemoryTarget;
@property (class) long long storagePoolNonPurgeableLimit;
@property (class) long long storagePoolPurgeableLimit;
@property (class) double storagePoolMigrationDelay;
@property (class) char surfaceStorageFactoryUsePool;
@property (class) char bufferStorageFactoryUsePool;
@property (class) char imageRenderJobUseSurfaceRenderer;
@property (class) char imageRenderJobUseTextureRenderer;
@property (class) double renderJSPipelineTimeout;
@property (class) long long imageTileSize;
@property (class) long long imageTileBorder;
@property (class) char imageSourceDisableRAW;
@property (class) char imageSourceDisableCacheImmediately;
@property (class) long long cacheNodeCacheSizeLimit;
@property (class) long long cacheNodeFilePermissions;
@property (class) double cacheNodeImageCompression;
@property (class, getter=isViewDebugEnabled) char viewDebugEnabled;
@property (class, retain) NSURL *cacheNodeDirectoryURL;
@property (class) char renderVideoLive;
@property (class) char platformHasWideColor;
@property (class, retain) NSURL *pipelineSourceURL;
@property (class) char imageLayerDebug;
@property (class) char displayDisableDeepColor;
@property (class) char displayForceDeepColor;
@property (class) char displayDisableColorMatching;
@property (class) char renderTransparencyOverBlack;
@property (class) char renderTransparencyOpaque;
@property (class) char logPeakRenderCIUsuage;
@property (class) char runNeutrinoSynchronously;
@property (class) char disableIOSurfacePortaitExport;
@property (class) char enableHDRSupport;
@property (class) char allAssetsCanUseHDRPipeline;
@property (class, readonly) double HLGOpticalScale;
@property (class) double maxGainMapHeadroom;
@property (class) char enableDash5;
@property (class) char enableFlexRange;
@property (class) char renderMeteorPlusAsHDR;
@property (class) char forceMeteorPlusPlus;
@property (class) char forceMeteorPlusLinear;
@property (class) char renderEDRAsPQ;
@property (class) char disablePacked10BitPixelFormats;
@property (class) double overrideDisplayHeadroom;
@property (class) double thresholdDisplayHeadroom;
@property (class) unsigned long long videoCompositorDebugMode;
@property (class) char forceSoftwareVideoEncoder;
@property (class) char alwaysRequireHardwareVideoEncoder;
@property (class, retain) NSString *debugRenderBlue;
@property (class, retain) NSString *debugRenderPurple;
@property (class, retain) NSString *debugRenderYellow;
@property (class) char disableMeteorGainMapGeneration;
@property (class) char forceMeteorGainMapGeneration;
@property (class, retain) NSString *meteorGainMapExposureCompensationMode;
@property (class) char enforceMinimumBitRateForExportedVideos;
@property (class) char enforceMinimumBitRateForCinematicVideos;
@property (class) char disableAuxiliaryImageCacheFromSource;
@property (class) double mediaViewRenderCoalescingInterval;
@property (class) char mediaViewDisableLivePhoto;
@property (class) char enableSpatialMediaEditing;
@property (class) long long maxPixelCountForCacheImmediately;
@property (class) char overrideCleanupHardwareCheck;
@property (class) char preserveSubjectsWhenInpainting;
@property (class) char inpaintSegmentationUsesConnectedComponents;
@property (class) char inpaintSegmentationUsesNonUniformScaling;
@property (class, retain) NSString *inpaintSegmentationInputTensorsDumpPath;
@property (class) char inpaintDumpsInputImages;
@property (class) double inpaintMinimumArea;
@property (class) double inpaintMaximumArea;
@property (class) long long inpaintSegmentationMaxInputSize;
@property (class) char shouldEnableStylesForProRaw;
@property (class) double semanticStyleInterpolationHalfWindowTime;
@property (class) char overrideSemanticStylesHardwareCheck;
@property (class) char semanticStyleDisableDeltaMap;
@property (class) char semanticStyleDisableResiduals;
@property (class) char semanticStyleForceResiduals;
@property (class) char semanticStyleUseDynamicConfig;
@property (class) char semanticStyleUseFasterSystemOrder;
@property (class) char semanticStyleAllowResidualsMismatch;
@property (class) char semanticStyleForceSyntheticNoise;
@property (class) char debugDumpStyleEngineInputs;
@property (class) double renderResourceEvictionDelay;
@property (class) double visionSessionEvictionDelay;
@property (class) long long debugSoftMemoryLimit;

+ (void)reset;
+ (id)globalSettings;
+ (void)setUpCacheNodeDirectoryWithComponent:(id)a0;

- (id)init;
- (void).cxx_destruct;
- (void)reset;
- (void)setSetting:(id)a0 forKey:(id)a1;
- (char)boolSettingForKey:(id)a0 defaultValue:(id /* block */)a1;
- (id)_settingForKey:(id)a0 defaultValue:(id /* block */)a1;
- (double)doubleSettingForKey:(id)a0 defaultValue:(id /* block */)a1;
- (long long)integerSettingForKey:(id)a0 defaultValue:(id /* block */)a1;
- (id)settingForKey:(id)a0 defaultValue:(id /* block */)a1;
- (id)stringSettingForKey:(id)a0 defaultValue:(id /* block */)a1;
- (id)urlSettingForKey:(id)a0 defaultValue:(id /* block */)a1;

@end

@class NSMutableDictionary, CPKSearchField, CPKCalculatedGeometry, CPKCharactersSectionView, NSButton, NSDictionary, CPKHorizontalPopupMenu, NSLayoutConstraint, NSString, NSOperationQueue, NSView, NSTextField, CPKCharactersTableView;
@protocol CPKCharactersViewDelegate, CPKCharactersViewDataSource;

@interface CPKCharactersView : NSView <NSTableViewDelegate, NSTableViewDataSource, CPKNavigationDelegate> {
    CPKCharactersTableView *_tableView;
    char _showSectionHeader;
    char _readyForLayout;
    char _layoutDone;
    long long _sectionCount;
    double *_sectionHeights;
    long long _accessoryViewCount;
    NSOperationQueue *_fontFallbackQueue;
    NSTextField *_messageField;
    double _topPosOnRestoreState;
    long long _topSectionOnResize;
    long long _topIndexOnResize;
    long long _topSectionOnScroll;
    NSDictionary *_restoringState;
    NSView *_verticalLabelView;
    NSView *_horizontalLabelView;
}

@property (readonly) NSMutableDictionary *sectionFonts;
@property char hasNavigationFocus;
@property (retain, nonatomic) NSButton *createEmojiButton;
@property (retain, nonatomic) NSLayoutConstraint *messageYConstraint;
@property (retain, nonatomic) CPKCharactersSectionView *stickersSection;
@property (retain, nonatomic) CPKCharactersSectionView *recentsSection;
@property (readonly) CPKCalculatedGeometry *geometryInfo;
@property (retain) CPKHorizontalPopupMenu *skinToneVariantsPopupMenu;
@property unsigned long long dataGeneration;
@property char isRTLLayout;
@property char waitingForConfirm;
@property char blockingDataReset;
@property char lastMouseOnData;
@property (copy) NSString *uniqueID;
@property id<CPKCharactersViewDelegate> delegate;
@property id<CPKCharactersViewDelegate> fallbackDelegate;
@property (readonly) id<CPKCharactersViewDataSource> dataSource;
@property (retain) id<CPKCharactersViewDataSource> nextDataSource;
@property double fontSize;
@property struct CGSize { double width; double height; } margin;
@property (nonatomic) char inactive;
@property (nonatomic) char doubleClickToConfirm;
@property (nonatomic) char drawMissingGlyphs;
@property (nonatomic) char createdForPopover;
@property (nonatomic) char inDetachedPopover;
@property (nonatomic) char isDisplayingSearch;
@property (readonly) long long selectedSection;
@property (readonly) long long selectedIndex;
@property (nonatomic) char supportsEmojiGeneration;
@property (retain) NSString *message;
@property (retain, nonatomic) NSString *createNewEmojiMessage;
@property (retain) NSDictionary *state;
@property (retain) NSView *topAccessoryView;
@property (retain, nonatomic) CPKSearchField *associatedSearchField;
@property id axLinkedObjectForCharacter;
@property (readonly, nonatomic) char skintonePopupOpened;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } currentScrollPosition;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (id)state;
- (void)setMessage:(id)a0;
- (void)setState:(id)a0;
- (void)_layout;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (long long)numberOfRowsInTableView:(id)a0;
- (void)setAccessibilityLabel:(id)a0;
- (double)tableView:(id)a0 heightOfRow:(long long)a1;
- (char)tableView:(id)a0 isGroupRow:(long long)a1;
- (id)tableView:(id)a0 rowViewForRow:(long long)a1;
- (char)tableView:(id)a0 shouldSelectRow:(long long)a1;
- (id)tableView:(id)a0 viewForTableColumn:(id)a1 row:(long long)a2;
- (void)tableViewColumnDidResize:(id)a0;
- (void)viewDidMoveToWindow;
- (void)viewWillStartLiveResize;
- (void)removeObservers;
- (long long)_sectionForRow:(long long)a0;
- (char)isCombinedPickerAndStandardView;
- (long long)_rowForSection:(long long)a0;
- (unsigned long long)contentTypeForIndex:(unsigned long long)a0 dataSource:(id)a1;
- (void)_adjustScrollDelegateOfTableView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_axDidDisplayOptionChanged;
- (void)_callHighlightIndex:(long long)a0 ofSection:(long long)a1 byMouse:(char)a2;
- (void)_confirmCharacter:(id)a0 withFont:(id)a1 byDrag:(char)a2;
- (void)_confirmCurrentSelection;
- (void)_confirmInlineAttachment:(struct CGImage { } *)a0 entity:(id)a1 byDrag:(char)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectToCGScreenRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)_delayedRetryUpdateLayoutWithParams:(id)a0;
- (id)_embeddedTableView;
- (id)_fallbackFontsForCharacter:(id)a0 ofSection:(long long)a1 fallbackType:(long long *)a2;
- (unsigned short)_glyphAtIndex:(long long)a0 ofSection:(long long)a1 usedFont:(id *)a2;
- (unsigned short)_glyphForCharacter:(id)a0 section:(unsigned long long)a1 withFonts:(id)a2 usedFont:(id *)a3;
- (double)_headerHeightForSection:(long long)a0;
- (void)_highlightAndShowIndex:(long long)a0 ofSection:(long long)a1 forceScroll:(char)a2;
- (long long)_lastDataSection;
- (id)_menuForCharacterAtIndex:(long long)a0 ofSection:(long long)a1;
- (void)_moveItemAtIndex:(long long)a0 ofSection:(long long)a1 toIndex:(long long)a2;
- (void)_privateInitWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_removeItemAtIndex:(long long)a0 ofSection:(long long)a1;
- (void)_scrollToPosition:(double)a0 allowAnimation:(char)a1;
- (void)_setFallbackFont:(id)a0 forCharacter:(id)a1 ofSection:(long long)a2;
- (void)_setupInitialFirstResponder;
- (char)_skipInvalidCellsFromIndex:(long long *)a0 atSection:(long long *)a1 skipForward:(char)a2;
- (id)_viewForSection:(long long)a0;
- (void)cacheView:(id)a0 forSection:(long long)a1;
- (id)cachedViewForSection:(long long)a0;
- (id)characterAtIndex:(long long)a0 ofSection:(long long)a1 withSpecificFont:(id *)a2;
- (void)clearAuxiliaryViews;
- (void)clearCachedSections;
- (void)createEmojiButtonPressed:(id)a0;
- (char)didCalculateSectionHeights;
- (void)didDeleteSticker:(id)a0;
- (char)didInitializeDataSource;
- (void)drawLabelsForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1 vertical:(char)a2 drawingHandler:(id /* block */)a3;
- (id)firstAXElementOfSection:(long long)a0;
- (char)foundCharacter:(id)a0 atIndex:(long long *)a1 ofSection:(long long *)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectAtIndex:(long long)a0 section:(long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectAtIndex:(long long)a0 withDrawingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1 ofSection:(long long)a2;
- (id)geometryForSectionIndex:(unsigned long long)a0;
- (void)highlightIndex:(long long)a0 ofSection:(long long)a1 byMouse:(char)a2;
- (char)index:(long long *)a0 ofSection:(long long *)a1 atPoint:(struct CGPoint { double x0; double x1; })a2 isOnHeader:(char *)a3;
- (char)layoutDataIsEmpty;
- (void)navigator:(id)a0 canSetActiveNavigationTarget:(char)a1 direction:(int)a2;
- (void)navigator:(id)a0 didNavigateTarget:(int)a1 direction:(int)a2;
- (void)navigatorDidCancelNavigation:(id)a0;
- (void)navigatorDidConfirmNavigation:(id)a0;
- (void)notifyDelegateOfStickerCountIfNecessary;
- (void)relayoutIfNecessary;
- (void)releaseDataSource;
- (void)scrollToIndex:(long long)a0 ofSection:(long long)a1;
- (id)sectionViewForIndex:(unsigned long long)a0;
- (void)stickerDatabaseDidUpdateItemCount:(id)a0;
- (void)updateLayoutWithNewDataSource:(id)a0 restoreScrollPos:(char)a1 fromEdge:(unsigned long long)a2;
- (Class)viewClassForSection:(long long)a0;

@end

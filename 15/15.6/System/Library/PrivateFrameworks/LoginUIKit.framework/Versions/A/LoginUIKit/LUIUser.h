@class NSURL, NSMutableDictionary, NSDate, NSDictionary, AVTStickerConfiguration, NSImage, NSString, NSAffineTransform, AVTAvatarPhysicalizedPose, NSRecursiveLock, ODNode, NSArray, AVTAvatarDescriptor, ODRecord;

@interface LUIUser : NSObject <LUIUserProtocol>

@property (retain) NSDictionary *attributes;
@property (retain) NSRecursiveLock *attributesLock;
@property (retain) NSMutableDictionary *additionalStorage;
@property char gatherMissingAttributes;
@property (retain) ODRecord *ODRecord;
@property (retain) NSRecursiveLock *ODRecordLock;
@property char usesComplexPassword;
@property char canResetPasswordWithAppleIDInitialized;
@property (readonly) char authenticationAllowed;
@property (readonly) NSArray *authenticationAuthority;
@property (readonly) double backOffSeconds;
@property (readonly) char canLogin;
@property (readonly) char canModifyPassword;
@property (readonly) NSString *guid;
@property (readonly) char hasComplexPassword;
@property char hasDuplicateLongName;
@property (readonly) char hasSACLAccess;
@property (readonly) char hasSecureToken;
@property (readonly) char hasShadowHash;
@property (readonly) char hasValidHome;
@property (readonly) NSString *homePathAFP;
@property (readonly) NSString *homePathNFS;
@property (readonly) NSURL *homeURL;
@property (readonly) NSArray *inputSources;
@property (readonly) char isAdminUser;
@property (readonly) char isContinuityUnlockEnabled;
@property (readonly) char isDirAdminUser;
@property (readonly) char isDisabled;
@property (readonly) char isFileVaultUser;
@property (readonly) char isFindMyMacUser;
@property (readonly) char isGuestUser;
@property (readonly) char isHidden;
@property (readonly) char isLocalUser;
@property (readonly) char isLoggedIn;
@property (readonly) char isManaged;
@property (readonly) char isMBSetupUser;
@property (readonly) char isMobileHomeUser;
@property (readonly) char isNetworkUser;
@property (readonly) char isOtherUser;
@property (readonly) char isPersonalRecoveryUser;
@property (readonly) char isPSSOUser;
@property (readonly) char isRootUser;
@property (readonly) char isSwitchUser;
@property (readonly) char isXcodeUser;
@property (readonly) NSString *longName;
@property (readonly) char migratedFromWindows;
@property (readonly) ODNode *mobileHomeUserNode;
@property (readonly) char newPasswordRequired;
@property (readonly) ODNode *node;
@property (readonly) NSString *password;
@property (readonly) NSString *passwordHint;
@property (readonly) NSDictionary *passwordPolicy;
@property (readonly) AVTAvatarDescriptor *avatarDescriptor;
@property (readonly) NSString *avatarBackgroundColorDescription;
@property (readonly) NSAffineTransform *avatarCropTransform;
@property (readonly) AVTAvatarPhysicalizedPose *avatarInitialPose;
@property (readonly) AVTStickerConfiguration *avatarStickerConfiguration;
@property (readonly) char hasAvatar;
@property (readonly) NSImage *picture;
@property (readonly) unsigned int primaryGroupID;
@property (getter=isSessionOwner) char sessionOwner;
@property (readonly) NSString *recordName;
@property (readonly) NSString *shortName;
@property (getter=isSmartCardUser) char smartCardUser;
@property (retain) NSDictionary *smartcardContextData;
@property (getter=isSuspended) char suspended;
@property (readonly) unsigned int uid;
@property (readonly) NSString *userShell;
@property (readonly) char usesBasicPassword;
@property (readonly) NSString *userListIdentifier;
@property (readonly) NSArray *appleIDs;
@property (readonly) NSString *appleIDLoginAccount;
@property (readonly) NSDate *appleIDVerifiedDate;
@property (readonly) char canResetPasswordWithAppleID;
@property (readonly) char isAppleIDLoginAccount;
@property (readonly) char familyControlsAllowsLogin;
@property (readonly) NSDate *familyControlsNextCurfewTime;
@property (readonly) NSString *identifier;
@property (readonly) NSString *name;
@property (readonly) NSString *toolTip;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)findMyMacUser;
+ (id)otherUser;
+ (id)switchUser;
+ (id)userWithAttributes:(id)a0;
+ (id)userWithODRecord:(id)a0;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (char)isEqual:(id)a0;
- (void).cxx_destruct;
- (id)_init;
- (id)initWithAttributes:(id)a0;
- (id)attributeForKey:(id)a0;
- (id)attributesForKey:(id)a0;
- (void)setAttribute:(id)a0 forKey:(id)a1;
- (long long)authenticate:(id)a0;
- (char)_attributesAreValid:(id)a0;
- (id)_avatarInfo;
- (char)_determineIfUserHasComplexPassword;
- (void)_gatherMissingUserAttributes;
- (void)_gatherUserInfoOnThread;
- (char)_hasAvatarInfo;
- (struct __CSIdentity { } *)_identityRef;
- (void)_loadODRecord;
- (id)_properUserAttributes:(id)a0;
- (void)_updateAttributes:(id)a0;
- (id)_userDispatchQueue;
- (long long)changePassword:(id)a0 toNewPassword:(id)a1 hint:(id)a2;
- (id)initWithODRecord:(id)a0;
- (char)minutesUntilPasswordExpires:(unsigned long long *)a0;
- (void)reloadAvatarInfo;
- (void)reloadODAttributes;
- (char)resetSecureTokenWithOldPassphrase:(id)a0 toNewPassphrase:(id)a1;
- (char)setCredentialsWithBootstrapToken:(id)a0;

@end

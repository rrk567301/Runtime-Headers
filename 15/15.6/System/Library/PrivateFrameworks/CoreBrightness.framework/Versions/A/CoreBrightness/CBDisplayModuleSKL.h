@class CBThermalBrightnessCap, NSString, CBRampManager, CBNVRAM, CBAurora, NSMutableDictionary, AABCHistograms, NSObject, NSMutableArray, CBEDR, CBDynamicSlider;
@protocol OS_os_log, OS_dispatch_source, CBBrightnessProxy, CBSliderMapping;

@interface CBDisplayModuleSKL : CBDisplayModule <CBHIDServiceProtocol> {
    id<CBBrightnessProxy> _brightnessControlProxy;
    NSObject<OS_os_log> *_logHandle;
    NSObject<OS_dispatch_source> *_delayedBrightnessCommitTimer;
    NSMutableDictionary *_properties;
    float _minNits;
    float _midNits;
    float _maxNits;
    float _maxNitsEDR;
    float _nitsSDRScaled;
    float _nitsSDR;
    float _factor;
    float _minLinearBrightness;
    float _maxLinearBrightness;
    float _nitsCap;
    float _brightnessScaler;
    unsigned long long _chargerState;
    char _chargerStateDimmingEnabled;
    char _snappingEnabled;
    float _snappingSDRBrightnessLimit;
    float _snappingLuxThreshold;
    char _ecoModeState;
    char _brightnessUpdatesDisabled;
    char _builtIn;
    char _running;
    char _supportsSDRBrightness;
    char _supportsEDR;
    float _SDRRefBrightness;
    CBRampManager *_rampManager;
    CBDynamicSlider *_dynamicSlider;
    CBEDR *_edr;
    float _appliedHeadroom;
    float _requestedHeadroom;
    float _lux;
    CBNVRAM *_nvram;
    unsigned long long _displayState;
    unsigned long long _displayStatePending;
    id<CBSliderMapping> _slider;
    NSMutableArray *_ALSServices;
    char _autoBrightnessState;
    char _autoBrightnessReady;
    NSObject<OS_dispatch_source> *_displayOnTimer;
    CBThermalBrightnessCap *_thermalMitigation;
    float _thermalMitigationMinCap;
    struct { BOOL supported; float ramp_down_disable_s; float lux_delta_percent; float ramp_up_s; float ramp_down_s; BOOL enabled; BOOL hdrEnabled; int lastNitsIndex; BOOL useHDRTables; float lastHDRChange; float lastLuxChange; float lastBrightnessChange; struct { int size; float *table; } D_SDR; struct { int size; float *table; } L_SDR; struct { int xSize; int ySize; float[68] *table; } A_SDR; struct { int size; float *table; } HDR_LUT_PT; struct { int size; float *table; } HDR_SCALE_DOWN; float factor; float factor_min; float factor_max; float cabalMin; float cabalMax; } _pcc;
    char _referenceMode;
    BOOL _blrEnabled;
    BOOL _harmonyEnabled;
    CBAurora *_aurora;
    float _auroraScaler;
    AABCHistograms *_analyticsHist;
    long long _analyticsPeriodicSender;
    char _isSnapping;
    char _firstABUpdate;
    float _lastUserBrightness;
    float _snappingTimestamp;
}

@property (readonly, nonatomic) unsigned long long displayID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (BOOL)setProperty:(id)a0 forKey:(id)a1;
- (void)start;
- (void)stop;
- (float)getDynamicSliderAdjustedSDRNits;
- (float)getUserBrightnessSloperExtended;
- (char)requestSDRBrightnessTransition:(float)a0;
- (float)getMaxPanelNits;
- (void)updateDynamicSliderChargerState;
- (char)addHIDALSService:(id)a0;
- (BOOL)addHIDServiceClient:(struct __IOHIDServiceClient { } *)a0;
- (void)autoBrightnessReady;
- (void)cancelDisplayOnTimer;
- (void)commitUserBrightness:(id)a0;
- (void)completeDisplayStateChange;
- (float)computeBrightnessCompensation;
- (void)configureEDRSecPerStop;
- (void)configurePCCDefaults;
- (void)configureSkyLightTimeouts;
- (id)copyPropertyForKey:(id)a0;
- (id)copyPropertyForKey:(id)a0 withParameter:(id)a1;
- (id)copyPropertyInternalForKey:(id)a0;
- (id)copyPropertyInternalForKey:(id)a0 withParameter:(id)a1;
- (char)displayBrightnessUpdate;
- (void)displayOnTimerTimeout;
- (char)displaySetBrightnessSmooth:(float)a0 continuous:(char)a1;
- (void)evaluateSnapping;
- (char)getAggregatedLux:(float *)a0;
- (float)getBrightnessLimit;
- (float)getBrightnessScalerCurrent;
- (char)getBrightnessScalerTarget:(float *)a0;
- (unsigned long long)getDeviceID;
- (float)getDynamicSliderAdjustedNits:(float)a0;
- (float)getIncrement;
- (float)getLinearBrightness;
- (float)getLinearBrightnessForNits:(float)a0;
- (float)getMaxNitsAdjusted;
- (float)getMaxNitsEDR;
- (float)getNitsForLinearBrightness:(float)a0;
- (float)getNitsForUserBrightness:(float)a0;
- (float)getPerceptualBrightness;
- (char)getRemainingRampLength:(float *)a0;
- (float)getSDRBrightnessCurrent;
- (char)getSDRBrightnessTarget:(float *)a0;
- (float)getSDRNitsCapped;
- (float)getUserBrightness;
- (float)getUserBrightnessForNits:(float)a0;
- (char)handleBrightnessCapOverride:(id)a0;
- (char)handleChargerStateChange:(id)a0;
- (char)handleDisplayPowerStateUpdate:(id)a0;
- (char)handleEcoModeStateChange:(id)a0;
- (BOOL)handleHIDEvent:(struct __IOHIDEvent { } *)a0 from:(struct __IOHIDServiceClient { } *)a1;
- (void)handleNotificationForKey:(id)a0 withProperty:(id)a1;
- (char)handlePowerDecrease;
- (char)handlePowerIncrease;
- (char)hasThermalMitigation;
- (id)initWithBrightnessControl:(id)a0 andQueue:(id)a1;
- (void)initialiseAurora;
- (void)initialiseDisplayConfiguration;
- (void)initialiseEDR;
- (void)initialiseSDR;
- (float)luminanceToPerceptual:(float)a0;
- (id)newDisplayInfo;
- (id)newStatusInfo;
- (float)perceptualToLuminance:(float)a0;
- (char)powerStateTransitionOngoing;
- (unsigned long long)powerStateTransitionSignalType;
- (void)processCapabilities;
- (char)rampAuroraScaler:(float)a0 withLength:(float)a1 properties:(id)a2;
- (char)rampBrightnessScaler:(float)a0 withLength:(float)a1 properties:(id)a2;
- (void)rampDynamicSlider:(float)a0 withLength:(float)a1;
- (void)rampEDRHedroom:(float)a0 withLength:(float)a1;
- (void)rampFactor:(float)a0 withLength:(float)a1;
- (void)rampManagerUpdateHandling;
- (char)rampNitsCap:(float)a0;
- (void)rampSDRBrightness:(float)a0 withLength:(float)a1 properties:(id)a2;
- (void)reevaluateDynamicSliderState;
- (void)reevaluateDynamicSliderStateImmediate;
- (BOOL)removeHIDServiceClient:(struct __IOHIDServiceClient { } *)a0;
- (char)requestAuroraScalerTransitionStop;
- (char)requestBrightnessScalerTransitionStop;
- (void)requestDisplayDim;
- (void)requestDisplayTurnOFF;
- (void)requestDisplayTurnON;
- (char)requestDynamicSliderImmediate:(float)a0;
- (char)requestDynamicSliderTransition:(float)a0 withLength:(float)a1;
- (char)requestDynamicSliderTransitionStop;
- (char)requestEDRHeadroomImmediate:(float)a0;
- (char)requestEDRHeadroomTransition:(float)a0 withLength:(float)a1;
- (char)requestEDRHeadroomTransitionStop;
- (char)requestFactorImmediate:(float)a0;
- (char)requestFactorTransition:(float)a0 withLength:(float)a1;
- (char)requestFactorTransitionStop;
- (char)requestSDRBrightnessTransition:(float)a0 withLength:(float)a1 properties:(id)a2;
- (char)requestSDRBrightnessTransitionStop;
- (void)sendDisplayBrightnessStateNotificationWithReason:(id)a0;
- (void)sendNotificationForKey:(id)a0 withValue:(id)a1;
- (BOOL)setPropertyInternal:(id)a0 forKey:(id)a1;
- (void)setupDisplayOnTimer;
- (void)storeBrightnessLevel;
- (id)stringForInitialNitsType:(unsigned long long)a0;
- (char)supportsDynamicSlider;
- (char)supportsEDR;
- (char)supportsSDRBrightness;
- (void)updateAmbient;
- (void)updateAutoBrightnessState:(char)a0;
- (void)updateBrightnessState;
- (void)updateContrastEnhancerState:(unsigned long long)a0;
- (void)updateDynamicSliderAmbient;
- (void)updateDynamicSliderAutoBrightness;
- (void)updateDynamicSliderScaler:(float)a0;
- (void)updateEDRAmbient;
- (char)updateSDRBrightness:(float)a0;
- (void)updateSDRNits:(float)a0;
- (char)updateUserBrightness:(float)a0 commit:(char)a1;

@end

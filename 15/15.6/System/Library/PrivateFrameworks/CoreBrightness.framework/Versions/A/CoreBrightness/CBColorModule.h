@class NSString, NSMutableDictionary, CBColorFilter, NSMutableArray, NSObject;
@protocol OS_dispatch_source, CBBrightnessProxy;

@interface CBColorModule : CBContainer <CBContainerProtocol, CBContainerModuleProtocol, CBHIDServiceProtocol, NightShiftSupportProtocol, CBStatusInfoProtocol> {
    NSMutableArray *_relevantServices;
    void *_callbackContext;
    struct { float XYZ[3]; struct { float x; float y; } xy; float CCT1; } _colorSample;
    double _illuminance;
    BOOL _clamshell;
    NSObject<OS_dispatch_source> *_rampTimer;
    NSString *_userName;
    NSMutableDictionary *_properties;
    struct { struct ColorEffects *cfx; BOOL blueReductionEnabled; float blueReductionFactor; BOOL nightModeSupported; BOOL fadeInProgress; BOOL enforceSlowRamps; float brightnessBoost; BOOL whitePointEnabled; double enablementTs; BOOL forceSnapping; BOOL harmonyHWSupported; BOOL harmonyNativeSupported; BOOL harmonySystemSupported; BOOL harmonyEnabled; BOOL harmonyActive; BOOL harmonyAvailable; BOOL whitepointAvailable; float harmonyStrength; float harmonyFixedStrength; BOOL presetDisableHarmony; } _colorStruct;
    BOOL _fadeInProgress;
    BOOL _endRamp;
    struct __IOHIDServiceClient { } *_dfr;
    struct { unsigned char firstTimerFire; NSObject<OS_dispatch_source> *logTimer; int periodS; } _reportContext;
    char _displayOn;
    CBColorFilter *_colorFilter;
    NSMutableDictionary *_aggregatedConfig;
    long long _analyticsPeriodicSender;
    unsigned long long _colorFilterModeOverride;
    NSMutableDictionary *_currentChromaticitySensitivity;
    id<CBBrightnessProxy> _brightnessControlProxy;
}

@property (readonly) unsigned long long moduleType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (BOOL)setProperty:(id)a0 forKey:(id)a1;
- (char)start;
- (void)updateAvailability;
- (void)stop;
- (char)BLRFactorPropertyHandler:(id)a0;
- (void)BLRFactorUpdate:(float)a0 withPeriod:(float)a1;
- (char)CALabShiftPropertyHandler:(id)a0;
- (char)CAStrengthPropertyHandler:(id)a0;
- (char)CAWeakestColorAdaptationModeAnimatedPropertyHandler:(id)a0;
- (char)CoreDisplayInitialisedPropertyHandler:(id)a0;
- (id)copyIdentifiers;
- (char)BLRCCTTargetPropertyHandler:(id)a0;
- (void)BLRFactorUpdate:(float)a0;
- (char)CAEnabledPropertyHandler:(id)a0;
- (char)CAModeMapping:(id)a0;
- (void)CAStrengthUpdate:(float)a0 withPeriod:(float)a1;
- (char)CAWeakestColorAdaptationModePropertyHandler:(id)a0;
- (void)initColorStruct;
- (float)absoluteDifferenceForCurrentColor:(struct { float x0; float x1; })a0 andDeltaError:(struct { float x0; float x1; })a1;
- (void)activateColorAdaptation;
- (BOOL)addHIDServiceClient:(struct __IOHIDServiceClient { } *)a0;
- (char)clamshellStatePropertyHandler:(id)a0;
- (char)colorFilterModeHandler:(id)a0;
- (void)colorRampRoutine:(const struct { float x0; float x1[9]; unsigned int x2; float x3; struct { float x0; float x1; } x4; int x5; double x6; } *)a0;
- (void)commitPowerLogReport:(struct ColorReport { struct { double x0[17]; int x1[17]; int x2; unsigned long long x3; } x0; struct { double x0[17]; int x1[17]; int x2; unsigned long long x3; } x1; struct { double x0[46]; int x1; unsigned long long x2; } x2; struct BlueReductionReport { double x0; double x1; double x2; BOOL x3; float x4; } x3; struct { double x0[10]; int x1; double x2; } x4; struct { double x0; double x1; double x2; double x3; float x4; float x5; } x5; int x6; } *)a0;
- (id)copyPreferenceForKey:(id)a0 user:(id)a1;
- (id)copyPreferenceInternalForKey:(id)a0 user:(id)a1;
- (id)copyPropertyForKey:(id)a0;
- (id)copyPropertyForKey:(id)a0 withParameter:(id)a1;
- (id)copyPropertyInternalForKey:(id)a0;
- (char)displayBrightnessFactorPropertyHandler:(id)a0;
- (void)displayBrightnessFactorUpdate:(float)a0;
- (BOOL)displayPresetHarmonyHandler:(id)a0;
- (BOOL)handleHIDEvent:(struct __IOHIDEvent { } *)a0 from:(struct __IOHIDServiceClient { } *)a1;
- (void)handleHIDEventInternal:(struct __IOHIDEvent { } *)a0 from:(struct __IOHIDServiceClient { } *)a1;
- (void)handleNotificationForKey:(id)a0 withProperty:(id)a1;
- (BOOL)hasExternalALS;
- (id)initDFRHarmony;
- (id)initDFRHarmonyWithSKL:(id)a0;
- (id)initMain;
- (id)initMainWithSKL:(id)a0;
- (void)initializeAggregatedConfig;
- (void)inputAmbientColorSample:(struct { float x0[3]; struct { float x0; float x1; } x1; float x2; } *)a0 force:(char)a1 trust:(char)a2;
- (char)isDFR;
- (id)newAdaptationModeMappingArray:(float *)a0 strengthNum:(int)a1;
- (id)newAdaptationModeMappingDictionary:(float *)a0 strengthNum:(int)a1;
- (id)newAggregatedConfigFromSerializedConfig:(id)a0;
- (id)newArrayFromDoubles:(double *)a0 size:(int)a1;
- (id)newArrayFromIntegers:(int *)a0 size:(int)a1;
- (id)newSerializedConfigFromAggregatedConfig:(id)a0;
- (void)notifyAndStoreAggregatedConfig;
- (char)parseAdaptationModeMappingArray:(id)a0 strengths:(float *)a1 strengthNum:(int)a2;
- (char)parseAdaptationModeMappingDictionary:(id)a0 strengths:(float *)a1 strengthNum:(int)a2;
- (void)processColorSample:(id)a0;
- (BOOL)removeHIDServiceClient:(struct __IOHIDServiceClient { } *)a0;
- (void)reportCommitWithStop:(char)a0;
- (void)reportInitialize;
- (void)reportResetTimerWithStop:(char)a0;
- (void)reportToCoreAnlytics:(struct ColorReport { struct { double x0[17]; int x1[17]; int x2; unsigned long long x3; } x0; struct { double x0[17]; int x1[17]; int x2; unsigned long long x3; } x1; struct { double x0[46]; int x1; unsigned long long x2; } x2; struct BlueReductionReport { double x0; double x1; double x2; BOOL x3; float x4; } x3; struct { double x0[10]; int x1; double x2; } x4; struct { double x0; double x1; double x2; double x3; float x4; float x5; } x5; int x6; } *)a0;
- (void)sendNotificationForKey:(id)a0 andValue:(id)a1;
- (char)setColorSensitivity:(float)a0 forALS:(struct __IOHIDServiceClient { } *)a1 withIlluminance:(float)a2;
- (void)setNightShiftFactorDictionary:(id)a0;
- (void)setPreference:(id)a0 forKey:(id)a1 user:(id)a2;
- (void)setPreferenceInternal:(id)a0 forKey:(id)a1 user:(id)a2;
- (BOOL)setPropertyInternal:(id)a0 forKey:(id)a1;
- (char)startNewTimerWithFreq:(float)a0;
- (void)switchToUser:(id)a0;
- (void)switchToUserInternal:(id)a0;
- (void)timerRoutine:(id)a0;
- (void)updateActivity;
- (void)updateAggregatedConfigWithObject:(id)a0 forKey:(id)a1;
- (void)updateClamshellState:(BOOL)a0;
- (void)updateColorFilterMode;
- (void)updateHarmonySupport;
- (void)updateSensorPolicy;
- (void)updateSensorSensitivity:(struct __IOHIDServiceClient { } *)a0 forValue:(struct __IOHIDEvent { } *)a1;
- (char)userSwitchPropertyHandler:(id)a0;

@end

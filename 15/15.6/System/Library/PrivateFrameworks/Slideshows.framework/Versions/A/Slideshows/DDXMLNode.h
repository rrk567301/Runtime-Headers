@interface DDXMLNode : NSObject <NSCopying> {
    struct _xmlKind { void *x0; int x1; } *genericPtr;
    struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *nsParentPtr;
}

+ (void)initialize;
+ (id)attributeWithName:(id)a0 URI:(id)a1 stringValue:(id)a2;
+ (id)attributeWithName:(id)a0 stringValue:(id)a1;
+ (id)commentWithStringValue:(id)a0;
+ (id)elementWithName:(id)a0;
+ (id)elementWithName:(id)a0 URI:(id)a1;
+ (id)elementWithName:(id)a0 children:(id)a1 attributes:(id)a2;
+ (id)elementWithName:(id)a0 stringValue:(id)a1;
+ (id)localNameForName:(id)a0;
+ (id)namespaceWithName:(id)a0 stringValue:(id)a1;
+ (id)prefixForName:(id)a0;
+ (id)processingInstructionWithName:(id)a0 stringValue:(id)a1;
+ (id)textWithStringValue:(id)a0;
+ (id)lastError;
+ (void)detachAttribute:(struct _xmlAttr { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlAttr *x6; struct _xmlAttr *x7; struct _xmlDoc *x8; struct _xmlNs *x9; int x10; void *x11; } *)a0 fromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
+ (void)detachChild:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a0 fromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
+ (void)detachChild:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a0 fromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1 andNullifyPointers:(char)a2;
+ (void)detachNamespace:(struct _xmlNs { struct _xmlNs *x0; int x1; char *x2; char *x3; void *x4; struct _xmlDoc *x5; } *)a0 fromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
+ (char)isXmlAttrPtr:(struct _xmlKind { void *x0; int x1; } *)a0;
+ (char)isXmlDocPtr:(struct _xmlKind { void *x0; int x1; } *)a0;
+ (char)isXmlDtdPtr:(struct _xmlKind { void *x0; int x1; } *)a0;
+ (char)isXmlNodePtr:(struct _xmlKind { void *x0; int x1; } *)a0;
+ (char)isXmlNsPtr:(struct _xmlKind { void *x0; int x1; } *)a0;
+ (void)nodeFree:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a0;
+ (id)nodeWithPrimitive:(struct _xmlKind { void *x0; int x1; } *)a0;
+ (id)nodeWithPrimitive:(struct _xmlKind { void *x0; int x1; } *)a0 nsParent:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
+ (void)recursiveStripDocPointersFromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a0;
+ (void)removeAllAttributesFromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a0;
+ (void)removeAllChildrenFromDoc:(struct _xmlDoc { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; int x9; int x10; struct _xmlDtd *x11; struct _xmlDtd *x12; struct _xmlNs *x13; char *x14; char *x15; void *x16; void *x17; char *x18; int x19; struct _xmlDict *x20; void *x21; int x22; int x23; } *)a0;
+ (void)removeAllChildrenFromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a0;
+ (void)removeAllNamespacesFromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a0;
+ (void)removeAttribute:(struct _xmlAttr { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlAttr *x6; struct _xmlAttr *x7; struct _xmlDoc *x8; struct _xmlNs *x9; int x10; void *x11; } *)a0 fromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
+ (void)removeChild:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a0 fromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
+ (void)removeNamespace:(struct _xmlNs { struct _xmlNs *x0; int x1; char *x2; char *x3; void *x4; struct _xmlDoc *x5; } *)a0 fromNode:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
+ (void)stripDocPointersFromAttr:(struct _xmlAttr { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlAttr *x6; struct _xmlAttr *x7; struct _xmlDoc *x8; struct _xmlNs *x9; int x10; void *x11; } *)a0;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)description;
- (id)name;
- (void)setName:(id)a0;
- (id)stringValue;
- (void)detach;
- (unsigned long long)index;
- (unsigned long long)level;
- (id)parent;
- (void)setStringValue:(id)a0;
- (void)setURI:(id)a0;
- (id)URI;
- (id)XMLString;
- (id)XMLStringWithOptions:(unsigned long long)a0;
- (id)XPath;
- (id)previousSibling;
- (id)childAtIndex:(unsigned long long)a0;
- (unsigned long long)childCount;
- (id)children;
- (unsigned long long)kind;
- (id)localName;
- (id)nextNode;
- (id)nextSibling;
- (id)nodesForXPath:(id)a0 error:(id *)a1;
- (id)prefix;
- (id)previousNode;
- (id)rootDocument;
- (char)hasParent;
- (id)initWithCheckedPrimitive:(struct _xmlKind { void *x0; int x1; } *)a0;
- (id)initWithCheckedPrimitive:(struct _xmlKind { void *x0; int x1; } *)a0 nsParent:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
- (id)initWithUncheckedPrimitive:(struct _xmlKind { void *x0; int x1; } *)a0;
- (id)initWithUncheckedPrimitive:(struct _xmlKind { void *x0; int x1; } *)a0 nsParent:(struct _xmlNode { void *x0; int x1; char *x2; struct _xmlNode *x3; struct _xmlNode *x4; struct _xmlNode *x5; struct _xmlNode *x6; struct _xmlNode *x7; struct _xmlDoc *x8; struct _xmlNs *x9; char *x10; struct _xmlAttr *x11; struct _xmlNs *x12; void *x13; unsigned short x14; unsigned short x15; } *)a1;
- (char)isXmlAttrPtr;
- (char)isXmlDocPtr;
- (char)isXmlDtdPtr;
- (char)isXmlNodePtr;
- (char)isXmlNsPtr;
- (void)nodeRelease;
- (void)nodeRetain;

@end

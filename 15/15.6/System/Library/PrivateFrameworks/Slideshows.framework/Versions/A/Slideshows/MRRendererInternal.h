@class NSMutableDictionary, NSDictionary, NSObject, NSMutableArray, MRLayerParallelizer, MRRenderArguments, NSConditionLock, NSString, MRLayerEffect, MRLayerNavigator, NSMutableSet, NSArray, MRContext, MRSlideFocusState, MRImage;
@protocol OS_dispatch_queue, MRLiveSlideshowDelegate, MRAsynchronousOperationsDelegate;

@interface MRRendererInternal : NSObject {
    MRContext *mContext;
    double mMasterStartTime;
    double mMasterDuration;
    int mMasterMode;
    NSObject<OS_dispatch_queue> *mRenderDispatchQueue;
    NSConditionLock *mFrameLock;
    double mTimeOffset;
    double mUnalteredTimeOffset;
    double mMasterClock;
    char mIsStalled;
    char mRenderingRequested;
    char mSlaveFrameMode;
    struct CGPoint { double x; double y; } mContextOffset;
    MRRenderArguments *mRenderArguments;
    struct CGImage { } *mSnapshotAsCGImage;
    NSConditionLock *mSnapshotAsCGImageLock;
    int mPreviousMode;
    double mModeChangeTime;
    NSMutableArray *mSelectedLayers;
    NSMutableDictionary *mLayerTrackings;
    NSMutableSet *mLayersCurrentlyTrackedIn;
    NSMutableDictionary *mGestureRecognizers;
    MRLayerEffect *mLayerCurrentlyTextEditing;
    NSString *mCurrentlyEditedTextElement;
    char mShouldPauseWhenStill;
    char mNeedsToResize;
    char mNeedsToTemporaryResize;
    char mNeedsToResumeOrPauseLayers;
    char mNeedsToSynchronizeTimeInLayers;
    char mNeedsToSynchronizeTimeInAudioMovies;
    struct CGSize { double width; double height; } mTemporarySize;
    double mMorphingStartTime;
    double mMorphingDuration;
    double mMorphingProgress;
    double mMorphingRotationAngle;
    char mMorphingHandlesRotation;
    MRImage *mSnapshotForMorphing;
    NSMutableArray *mActions;
    NSDictionary *mDefaultActions;
    NSString *mTransitionLayerPlugObjectID;
    MRLayerParallelizer *mSlideFocusLayer;
    MRLayerNavigator *mSlideFocusNavigator;
    MRLayerEffect *mSlideFocuser[3];
    unsigned long long mCurrentSlideFocuserIndex;
    MRSlideFocusState *mSlideFocusState;
    NSMutableDictionary *mAudioPlayerBuckets;
    NSArray *mAudioPlayerSortedBuckets;
    id<MRLiveSlideshowDelegate> mLiveSlideshowDelegate;
    id<MRAsynchronousOperationsDelegate> mAsynchronousOperationsDelegate;
    char mScreenBurnTest;
    unsigned long long mScreenBurnTestCurrentPass;
    MRImage *mScreenBurnTestAccumulationImage1;
    MRImage *mScreenBurnTestAccumulationImage2;
    NSMutableArray *mNavigatorHistoryBack;
    NSMutableArray *mNavigatorHistoryForth;
    char mHideTextWhileEditing;
    double mFrameTime[64];
    unsigned int mFrameTimeIndex;
    struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *mRenderingLogFile;
    double mPreviousLogTime;
    double mLastSavedLogTime;
    NSString *mCurrentIDs;
    MRImage *mCurrentIDsImage;
    NSString *mPreviousCurrentIDs;
    double mOuterTime;
    int mTimeSyncRequestCount;
    int mIsPlayingSyncRequestCount;
    char mOuterIsPlaying;
    char mInnerIsPlaying;
    unsigned long long mCountOfPreloadingImages;
    NSMutableArray *mTouchesForVisualFeedback;
    NSMutableArray *mHitZonesForVisualFeedback;
    char mUsesExternalDisplayLink;
}

@end

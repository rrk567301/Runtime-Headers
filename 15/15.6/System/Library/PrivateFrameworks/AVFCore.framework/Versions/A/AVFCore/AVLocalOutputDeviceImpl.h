@class NSString, NSArray, NSData, NSDictionary, NSNumber;
@protocol AVOutputDeviceImplSupport, AVOutputDeviceDelegate;

@interface AVLocalOutputDeviceImpl : NSObject <AVOutputDeviceImpl>

@property (weak) id<AVOutputDeviceImplSupport> implEventListener;
@property (weak) id<AVOutputDeviceDelegate> delegate;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, copy, nonatomic) NSString *ID;
@property (readonly, nonatomic) long long deviceType;
@property (readonly, nonatomic) long long deviceSubType;
@property (readonly, nonatomic) long long clusterType;
@property (readonly, nonatomic) long long configuredClusterSize;
@property (readonly, nonatomic) NSString *manufacturer;
@property (readonly, copy, nonatomic) NSString *modelID;
@property (readonly, nonatomic) NSString *serialNumber;
@property (readonly, nonatomic) NSString *firmwareVersion;
@property (readonly, copy, nonatomic) NSData *identifyingMACAddress;
@property (readonly, nonatomic) NSArray *clusteredDeviceDescriptions;
@property (readonly, nonatomic) char isClusterLeader;
@property (readonly, nonatomic) NSString *clusterID;
@property (readonly, nonatomic) char producesLowFidelityAudio;
@property (readonly, nonatomic, getter=isAppleAccessory) char appleAccessory;
@property (readonly, nonatomic, getter=isEligibleToBePredictedOutputDevice) char eligibleToBePredictedOutputDevice;
@property (readonly, nonatomic, getter=isActivatedForContinuityScreen) char activatedForContinuityScreen;
@property (readonly, nonatomic) NSNumber *batteryLevel;
@property (readonly, nonatomic) NSNumber *caseBatteryLevel;
@property (readonly, nonatomic) NSNumber *leftBatteryLevel;
@property (readonly, nonatomic) NSNumber *rightBatteryLevel;
@property (readonly, nonatomic) NSNumber *supportsDataOverACLProtocol;
@property (readonly, nonatomic) NSNumber *isInEar;
@property (readonly, nonatomic) NSDictionary *airPlayProperties;
@property (readonly, nonatomic, getter=isInUseByPairedDevice) char inUseByPairedDevice;
@property (readonly, copy, nonatomic) NSArray *connectedPairedDevices;
@property (readonly, nonatomic) unsigned long long deviceFeatures;
@property (readonly, nonatomic) char requiresAuthorization;
@property (readonly, nonatomic) char automaticallyAllowsConnectionsFromPeersInHomeGroup;
@property (readonly, nonatomic) char onlyAllowsConnectionsFromPeersInHomeGroup;
@property (readonly, nonatomic) char canAccessRemoteAssets;
@property (readonly, nonatomic) char canAccessAppleMusic;
@property (readonly, nonatomic) char canAccessiCloudMusicLibrary;
@property (readonly, nonatomic) char supportsBufferedAirPlay;
@property (readonly) float volume;
@property (readonly) char canSetVolume;
@property (readonly) char canMute;
@property (getter=isMuted) char muted;
@property (readonly) long long volumeControlType;
@property (readonly, nonatomic) char canBeGrouped;
@property (readonly, copy, nonatomic) NSString *groupID;
@property (readonly, copy, nonatomic) NSString *proposedGroupID;
@property (readonly, nonatomic) char canBeGroupLeader;
@property (readonly, nonatomic) char isGroupLeader;
@property (readonly, nonatomic) char participatesInGroupPlayback;
@property (readonly, nonatomic) char groupContainsGroupLeader;
@property (readonly, nonatomic) NSString *logicalDeviceID;
@property (readonly, nonatomic) char isLogicalDeviceLeader;
@property (readonly, nonatomic) char canCommunicateWithAllLogicalDeviceMembers;
@property (readonly, nonatomic) char canRelayCommunicationChannel;
@property (readonly, nonatomic) char canPlayEncryptedProgressiveDownloadAssets;
@property (readonly, nonatomic) char canFetchMediaDataFromSender;
@property (readonly, nonatomic) char presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
@property (readonly, nonatomic) char supportsBluetoothSharing;
@property (readonly, nonatomic) long long HAPConformance;
@property (readonly, nonatomic) char supportsHeadTrackedSpatialAudio;
@property (readonly, nonatomic) char allowsHeadTrackedSpatialAudio;
@property (readonly, nonatomic) NSString *headTrackedSpatialAudioMode;
@property (readonly, nonatomic, getter=isHeadTrackedSpatialAudioActive) char headTrackedSpatialAudioActive;
@property (readonly, nonatomic) NSArray *availableBluetoothListeningModes;
@property (readonly, nonatomic) NSString *currentBluetoothListeningMode;
@property (readonly, nonatomic) NSString *alternateTransportType;
@property (readonly, nonatomic) char supportsConversationDetection;
@property (readonly, nonatomic, getter=isConversationDetectionEnabled) char conversationDetectionEnabled;
@property (readonly, nonatomic) NSArray *OEMIcons;
@property (readonly, nonatomic) NSString *OEMIconLabel;
@property (readonly, nonatomic) char OEMIconVisible;
@property (readonly, nonatomic) NSArray *outputDeviceHIDs;
@property (readonly, nonatomic) char nightMode;
@property (readonly, nonatomic, getter=isNightModeSupported) char nightModeSupported;
@property (readonly, nonatomic) char rightHandDrive;
@property (readonly, nonatomic) NSArray *limitedUIElements;
@property (readonly, nonatomic) char limitedUI;
@property (readonly, nonatomic) char carOwnsScreen;
@property (readonly, nonatomic) char ownsTurnByTurnNavigation;
@property (readonly, nonatomic) char recognizingSpeech;
@property (readonly, nonatomic) NSArray *supportedFeatures;
@property (readonly, nonatomic) long long electronicTollCollection;
@property (readonly, nonatomic) long long navigationAidedDriving;
@property (readonly, nonatomic) long long transportType;
@property (readonly, nonatomic) NSData *MFiCertificateSerialNumber;
@property char siriForwardingEnabled;
@property (readonly, nonatomic) char carOwnsMainAudio;
@property (retain, nonatomic) NSDictionary *displayCornerMasks;
@property (readonly, nonatomic) long long voiceTriggerMode;
@property (readonly, nonatomic) long long authenticationType;
@property (readonly, nonatomic, getter=isActivated) char activated;
@property (readonly, nonatomic) NSArray *screens;
@property (readonly, nonatomic) NSDictionary *outputDeviceInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (char)isEqual:(id)a0;
- (void).cxx_destruct;
- (void)setVolume:(float)a0;
- (char)supportsScreenMirroringControls;
- (id)borrowScreenForClient:(id)a0 reason:(id)a1;
- (void)configureUsingBlock:(id /* block */)a0 options:(id)a1 completionHandler:(id /* block */)a2;
- (id)currentScreenViewAreaForScreenID:(id)a0;
- (void)decreaseVolumeByCount:(long long)a0;
- (void)increaseVolumeByCount:(long long)a0;
- (void)performHapticFeedbackForUUID:(id)a0 withHapticType:(id)a1 completionHandler:(id /* block */)a2;
- (void)requestCarUIForURL:(id)a0 withUUID:(id)a1;
- (id)requestTurnByTurnNavigationOwnership;
- (void)requestViewArea:(long long)a0 forScreenID:(id)a1;
- (void)setActivatedDeviceClusterMembersVolume:(float)a0 withRoomID:(id)a1;
- (char)setAllowsHeadTrackedSpatialAudio:(char)a0 error:(id *)a1;
- (char)setConversationDetectionEnabled:(char)a0 error:(id *)a1;
- (char)setCurrentBluetoothListeningMode:(id)a0 error:(id *)a1;
- (char)setHeadTrackedSpatialAudioMode:(id)a0 error:(id *)a1;
- (void)setMediaRemoteData:(id)a0 completionHandler:(id /* block */)a1;
- (void)setSecondDisplayEnabled:(char)a0;
- (void)setSecondDisplayMode:(id)a0 completionHandler:(id /* block */)a1;
- (void)suggestUIWithURLs:(id)a0 completionHandler:(id /* block */)a1;
- (char)supportsFitnessDataDestination;
- (void)takeScreenForClient:(id)a0 reason:(id)a1;
- (float)volumeForActivatedDeviceClusterMembersWithRoomID:(id)a0;

@end

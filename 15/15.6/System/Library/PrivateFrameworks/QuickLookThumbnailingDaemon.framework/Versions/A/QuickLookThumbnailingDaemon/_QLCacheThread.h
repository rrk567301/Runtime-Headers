@class NSLock, NSString, QLDiskCacheQueryOperation, QLCacheCleanUpDatabaseThread, QLMemoryCache, NSOperationQueue, NSURL, NSObject, QLServerThread, QLDiskCache;
@protocol OS_dispatch_source, OS_dispatch_queue, OS_os_transaction;

@interface _QLCacheThread : NSObject <QLDiskCacheDelegate> {
    NSOperationQueue *_memoryCacheQueryOperationQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
    NSObject<OS_dispatch_queue> *_writeCoalesceQueue;
    id /* block */ _writeBlocks[10];
    id /* block */ _cleanupBlocks[10];
    NSObject<OS_dispatch_source> *_drainTimer;
    NSObject<OS_os_transaction> *_writeTransaction;
}

@property (retain) NSObject<OS_dispatch_source> *lowDiskSpaceSource;
@property (retain) NSObject<OS_dispatch_queue> *lowDiskSpaceSourceQueue;
@property (retain) NSLock *modeLock;
@property (retain) QLDiskCacheQueryOperation *currentDiskCacheQueryOperation;
@property (retain) NSOperationQueue *diskCacheQueryOperationQueue;
@property char serverThreadIsIdle;
@property (readonly) unsigned long long currentMode;
@property unsigned long long missedCount;
@property unsigned long long hitCount;
@property char waitingForCleanup;
@property (retain) QLCacheCleanUpDatabaseThread *cleanUpDatabaseThread;
@property (weak) QLServerThread *serverThread;
@property (readonly) QLMemoryCache *memoryCache;
@property (readonly) QLDiskCache *diskCache;
@property (readonly) char lowDiskSpace;
@property (readonly) NSString *modeDescription;
@property (retain) NSURL *diskCacheURL;
@property (nonatomic) char shouldRemoveThumbnailsForDeletedFiles;

+ (long long)defaultCacheSize;

- (void).cxx_destruct;
- (void)reset;
- (id)cacheInfo;
- (void)startWriting;
- (char)isIdle;
- (void)exitImmediately;
- (void)forceCommit;
- (char)_shouldQuitResetingModeForMode:(unsigned long long)a0;
- (void)_willStartLowSpaceModeFromMode:(unsigned long long)a0;
- (void)enqueueWriting:(id /* block */)a0;
- (void)serverIsWorking;
- (char)_shouldQuitLowSpaceModeForMode:(unsigned long long)a0;
- (void)_willStartResetingModeFromMode:(unsigned long long)a0;
- (id)allThumbnailsForFileIdentifier:(id)a0;
- (void)_addThumbnailRequestIntoDiskCacheQueryQueue:(id)a0;
- (id)_allThumbnailsEnumerateWithEnumerator:(id)a0;
- (void)_cleanUpDatabaseDone;
- (char)_computeBaselineInThumbnailData:(id)a0 storingResultingPropertiesIfNeededIn:(id)a1;
- (void)_destroyDrainTimer;
- (void)_dispatchThumbnailRequestInServerThread:(id)a0;
- (void)_drainPendingBlocks;
- (void)_drainPendingBlocksNow;
- (void)_registerMachPortForLowDiskSpaceNotification;
- (void)_scheduleBlockDrain;
- (void)_scheduledDrainPendingBlocks;
- (void)_sendThumbnailData:(id)a0 forThumbnailRequest:(id)a1;
- (void)_setLowDiskSpace:(char)a0;
- (void)_setMode:(unsigned long long)a0;
- (char)_shouldQuitCleanUpDatabaseModeForMode:(unsigned long long)a0;
- (char)_shouldQuitClosedModeForMode:(unsigned long long)a0;
- (char)_shouldQuitPauseModeForMode:(unsigned long long)a0;
- (char)_shouldQuitWorkingModeForMode:(unsigned long long)a0;
- (void)_thumbnailHasBeenCancelled:(id)a0;
- (void)_unregisterMachPortForLowDiskSpaceNotification;
- (void)_unscheduleBlockDrain;
- (void)_updateLowDisk;
- (void)_updateMode;
- (void)_waitForEndOfDatabaseCleanup;
- (void)_willStartCleanUpDatabaseModeFromMode:(unsigned long long)a0;
- (void)_willStartClosedModeFromMode:(unsigned long long)a0;
- (void)_willStartPauseModeFromMode:(unsigned long long)a0;
- (void)_willStartWorkingModeFromMode:(unsigned long long)a0;
- (char)addNoThumbnailIntoCache:(id)a0;
- (char)addThumbnailIntoCache:(id)a0 bitmapFormat:(id)a1 bitmapData:(id)a2 metadata:(id)a3 flavor:(int)a4 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a5 badgeType:(unsigned long long)a6 externalGeneratorDataHash:(unsigned long long)a7;
- (char)addThumbnailRequest:(id)a0;
- (id)allThumbnailsForFPItemID:(id)a0;
- (id)allThumbnailsForIno:(unsigned long long)a0 fsid:(struct fsid { int x0[2]; })a1;
- (id)allThumbnailsInfo;
- (void)closeCache;
- (id)contentDescriptionForURL:(struct __CFURL { } *)a0;
- (void)databaseCorruptionDetected;
- (void)forceCommitAndClose;
- (unsigned long long)hitToSaveCount;
- (id)initWithServerThread:(id)a0 cacheSize:(long long)a1 location:(id)a2;
- (char)isCacheOpened;
- (char)itemIsMissingRemoteThumbnail:(id)a0;
- (id)itemsAfterFilteringOutItemsWithMissingThumbnails:(id)a0;
- (char)locked_removeCachedThumbnailsFromUninstalledFileProvidersWithIdentifiers:(id)a0;
- (char)locked_removeCachedThumbnailsFromUninstalledFileProvidersWithRemainingFileProviderIdentifiers:(id)a0;
- (void)noteRemoteThumbnailMissingForItems:(id)a0;
- (void)noteRemoteThumbnailPresentForItems:(id)a0;
- (void)openCache;
- (void)prepareToExit;
- (long long)purgeOnMountPoint:(id)a0 withUrgency:(int)a1 beforeDate:(id)a2;
- (long long)purgeableSpaceOnMountPoint:(id)a0 withUrgency:(int)a1 beforeDate:(id)a2;
- (void)serverIsIdle;
- (char)setLastHitDateOfAllCachedThumbnailsToDate:(id)a0;
- (void)stopWriting;
- (unsigned long long)thumbnailInMemoryToSaveCount;
- (void)updateMode;

@end

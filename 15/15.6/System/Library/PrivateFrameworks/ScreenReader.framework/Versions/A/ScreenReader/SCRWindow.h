@class AXFUIElement, NSString, SCRElementHistory, NSMutableArray;

@interface SCRWindow : SCRMapElement <SCRApplicationDirectChildProtocol, SCRElementHistoryVendor> {
    SCRElementHistory *_elementHistory;
    NSString *_windowType;
    struct { unsigned char isNew : 1; unsigned char ignoreSheet : 1; } _srwFlags;
}

@property (retain, nonatomic, setter=_setMinimizeUIElement:) AXFUIElement *_minimizeUIElement;
@property (retain, nonatomic, setter=_setZoomUIElement:) AXFUIElement *_zoomUIElement;
@property (retain, nonatomic, setter=_setFullscreenButtonUIElement:) AXFUIElement *_fullscreenButtonUIElement;
@property (retain, nonatomic, setter=_setToolbarButtonUIElement:) AXFUIElement *_toolbarButtonUIElement;
@property (retain, nonatomic, setter=_setTitleUIElement:) AXFUIElement *_titleUIElement;
@property (nonatomic, setter=_setRegisteredFocusedTabChangedNotification:) char _registeredFocusedTabChangedNotification;
@property (retain, nonatomic, setter=setCloseUIElement:) AXFUIElement *closeUIElement;
@property (readonly, nonatomic) char isFocusingIntoWindow;
@property (readonly, nonatomic) char isSystemDialogWindow;
@property (nonatomic) char hasOccludedContent;
@property (retain, nonatomic) NSMutableArray *trackedItems;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (char)isValid;
- (void).cxx_destruct;
- (char)close;
- (id)typeDescription;
- (id)title;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })enclosingBounds;
- (id)toolbar;
- (char)isMinimized;
- (char)minimize;
- (char)zoom;
- (void)setIsNew:(char)a0;
- (void)_removeWindowObservers;
- (char)isInteractive;
- (char)isModal;
- (id)containerDescription;
- (id)defaultActionName;
- (char)isMain;
- (void)setIsMain:(char)a0;
- (char)canClose;
- (char)closeWindowCallbackWithRequest:(id)a0;
- (char)interactRightWithEvent:(id)a0 request:(id)a1;
- (id)_elementHistory;
- (void)announceArrival;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })droppableBounds;
- (struct CGPoint { double x0; double x1; })enclosingOrigin;
- (id)highlightTarget;
- (id)prepareUIChildrenForNavigation:(id)a0;
- (void)setIgnoreSheet:(char)a0;
- (id)stringForCommand:(id)a0 withExtension:(id)a1;
- (void)_announceArrival;
- (char)_canNavigateToSheet;
- (id)_descriptionFromTopLeftCornerWithOrigin:(struct CGPoint { double x0; double x1; })a0 unit:(long long)a1;
- (id)_embeddedContentElementWithinBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_embeddedSearchElement;
- (void)_focusAgain;
- (id)_idealTrackedElementForUIElement:(id)a0;
- (char)_navigateToFirstOrLastElementWithCommandKey:(id)a0 event:(id)a1 request:(id)a2 isFirstElement:(char)a3;
- (void)_occlusionEnded:(id)a0;
- (void)_occlusionStarted:(id)a0;
- (void)_regenerateSystemSections;
- (void)_removeAllTrackedElements;
- (void)_removeTrackedElementsForKey:(id)a0;
- (char)_shouldIgnoreFirstImageInDialog:(id)a0;
- (void)_speakSelectionInSheet;
- (void)addElementToHistory:(id)a0;
- (void)addElementToHistory:(id)a0 event:(id)a1;
- (char)addSelectionDescriptionToRequest:(id)a0;
- (void)addToHistory;
- (void)addWindowChangedDescriptionToRequest:(id)a0;
- (id)allTrackedItemsInfoWithUpdate:(char)a0;
- (char)allowsEchoTitleChanges;
- (id)alternateOrderedChildrenForMappedChildren:(id)a0;
- (id)appProvidedSections;
- (char)bringWindowToFront;
- (id)buildDefaultChildrenWithUIElements:(id)a0;
- (void)buildSheetsWithChildrenUIElements:(id)a0;
- (char)canHandleTitleChange;
- (char)canNavigateToChildren;
- (char)closeWindowWithRequest:(id)a0;
- (id)containerIncludingScrollAreas:(char)a0;
- (void)describePositionChangeFromPosition:(id)a0;
- (id)descriptionForOrigin;
- (char)enableRepositionModeWithRequest:(id)a0;
- (char)enableResizeModeWithRequest:(id)a0 handleIndex:(unsigned long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })enclosingBoundsIncludesScrollArea:(char)a0;
- (void)flushCurrentScreen;
- (void)flushElementHistory;
- (char)focusInto:(id)a0 event:(id)a1;
- (long long)groupBehavior;
- (char)handleEvent:(id)a0 request:(id)a1;
- (void)handleFocusedTabChanged:(id)a0;
- (char)handleTaggedOperationWithEvent:(id)a0 request:(id)a1;
- (char)handleUntaggedOperationWithEvent:(id)a0 request:(id)a1;
- (id)initWithUIElement:(id)a0 parent:(id)a1;
- (char)interactDownWithEvent:(id)a0 request:(id)a1;
- (char)interactUpShiftWithEvent:(id)a0 request:(id)a1;
- (char)isContainerElement;
- (char)isDialogWindow;
- (char)isInsideIconContainer;
- (char)isTMControlWindow;
- (char)isVersionsUIControlWindow;
- (char)isWindowSheetEnabled;
- (char)isWritingToolsAffordanceWindow;
- (id)lastNavigatedValidUIElement;
- (char)moveFirstWithEvent:(id)a0 request:(id)a1 visibleOnly:(char)a2;
- (char)moveLastWithEvent:(id)a0 request:(id)a1 visibleOnly:(char)a2;
- (id)nameForGuide;
- (id)onlyChildForFocusingIntoInArray:(id)a0;
- (id)parentVendor;
- (char)performDefaultActionWithRequest:(id)a0 allowClick:(char)a1;
- (id)prepareChildrenArrayWithUIElements:(id)a0;
- (char)raiseWindowWithRequest:(id)a0;
- (id)removeLastUIElementFromHistory;
- (id)screenHistory;
- (void)setFocusedChild:(id)a0;
- (void)setIsEventHandler:(char)a0 isKeyboardHandler:(char)a1;
- (void)setIsInsideIconContainer:(char)a0;
- (void)setKeyboardChild:(id)a0;
- (void)setKeyboardChild:(id)a0 force:(char)a1;
- (void)setTrackedElement:(id)a0 key:(id)a1;
- (char)shouldAnnounceArrival;
- (char)shouldFocusOntoChild:(id)a0;
- (char)shouldNavigate;
- (char)shouldSpeakItemCountWhenFocusingIn;
- (char)shouldTrackKeyboardOnFocusInto;
- (char)showInGuide;
- (void)startNewScreen;
- (char)startWindowContentFeedback:(id)a0;
- (char)supportsPositionalPrecision;
- (id)tabChangedDescriptionForTab:(id)a0;
- (id)titleDescription;
- (id)trackedElementForKey:(id)a0;

@end

@class IMDaemonListener, NSLock, IMRemoteObject, NSProtocolChecker, NSRecursiveLock, NSMutableDictionary, NSString, IMDaemonQueryController, NSMutableArray, IMLocalObject, NSObject, NSArray;
@protocol OS_dispatch_queue, IMDaemonProtocol;

@interface _IMLegacyDaemonController : NSObject <IMDaemonControlling, IMDaemonControlling_Private>

@property (retain, nonatomic) IMRemoteObject<IMDaemonProtocol> *remoteObject;
@property (retain, nonatomic) NSMutableDictionary *listenerMap;
@property (retain, nonatomic) IMLocalObject *localObject;
@property (retain, nonatomic) IMDaemonListener *listener;
@property (retain, nonatomic) NSMutableArray *services;
@property (retain, nonatomic) NSProtocolChecker *protocol;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *listenerLockQueue;
@property (nonatomic) struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } ourl_lock; unsigned int ourl_count; } remoteDaemonLock;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *localObjectLockQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *daemonConnectionQueue;
@property (retain, nonatomic) NSRecursiveLock *connectionLock;
@property (nonatomic) struct __CFRunLoopSource { } *runLoopSource;
@property (retain, nonatomic) NSLock *blockingLock;
@property (nonatomic) char hasCheckedForDaemon;
@property (nonatomic) char preventReconnect;
@property (nonatomic) char inBlockingConnect;
@property (nonatomic) char acquiringDaemonConnection;
@property (nonatomic) char hasBeenSuspended;
@property (readonly, nonatomic, getter=isRequestingConnection) char requestingConnection;
@property (nonatomic) unsigned int gMyFZListenerCapabilities;
@property (nonatomic) unsigned int cachedCapabilities;
@property (nonatomic) unsigned int lastUpdatedCapabilities;
@property (setter=__setCapabilities:) unsigned int _capabilities;
@property (setter=_setAutoReconnect:) char _autoReconnect;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *remoteMessageQueue;
@property (readonly, nonatomic, getter=isConnected) char connected;
@property (readonly, nonatomic) id<IMDaemonProtocol> remoteDaemon;
@property (readonly, nonatomic) id<IMDaemonProtocol> synchronousRemoteDaemon;
@property (readonly, nonatomic) id<IMDaemonProtocol> synchronousReplyingRemoteDaemon;
@property (readonly, nonatomic) id<IMDaemonProtocol> replyingRemoteDaemon;
@property (readonly, nonatomic) IMDaemonQueryController *queryController;
@property (readonly, nonatomic) unsigned int capabilities;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, setter=_setServicesToAllow:) NSArray *_servicesToAllow;
@property (retain, setter=_setServicesToDeny:) NSArray *_servicesToDeny;
@property (retain, nonatomic, setter=_setListenerID:) NSString *listenerID;
@property (weak, nonatomic) id delegate;
@property (nonatomic, setter=_setBlocksConnectionAtResume:) char _blocksConnectionAtResume;
@property (readonly, nonatomic) char isConnecting;

+ (char)_applicationWillTerminate;
+ (void)_blockUntilSendQueueIsEmpty;
+ (void)_setApplicationWillTerminate;

- (void)dealloc;
- (void)forwardInvocation:(id)a0;
- (id)init;
- (id)methodSignatureForSelector:(SEL)a0;
- (void).cxx_destruct;
- (void)setQueryContext:(id)a0;
- (unsigned long long)processCapabilities;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillEnterForeground;
- (char)connectToDaemon;
- (void)_disconnectFromDaemonWithForce:(char)a0;
- (void)_agentDidLaunchNotification:(id)a0;
- (void)_blockUntilSendQueueIsEmpty;
- (void)_handleDaemonException:(id)a0;
- (void)_listenerSetUpdated;
- (void)_localObjectCleanup;
- (char)_makeConnectionWithLaunch:(char)a0 completionBlock:(id /* block */)a1;
- (void)_noteSetupComplete;
- (void)_remoteObjectCleanup;
- (void)_setCapabilities:(unsigned int)a0;
- (void)blockUntilConnected;
- (unsigned int)capabilitiesForListenerID:(id)a0;
- (char)connectToDaemonWithLaunch:(char)a0;
- (char)consumeQueryContext:(id)a0;
- (void)disconnectFromDaemon;
- (char)hasListenerForID:(id)a0;
- (void)localObjectDiedNotification:(id)a0;
- (char)localObjectExists;
- (void)remoteObjectDiedNotification:(id)a0;
- (char)remoteObjectExists;
- (char)removeListenerID:(id)a0;
- (void)unsetQueryContext:(id)a0;
- (void)killDaemon;
- (char)__isLocalObjectValidOnQueue:(id)a0;
- (char)__isRemoteObjectValid;
- (char)_acquiringDaemonConnection;
- (void)_connectToDaemonWithLaunch:(char)a0 capabilities:(unsigned int)a1;
- (double)_connectionTimeout;
- (id)_remoteObject;
- (char)addListenerID:(id)a0 capabilities:(unsigned int)a1;
- (char)connectToDaemonWithLaunch:(char)a0 capabilities:(unsigned int)a1 blockUntilConnected:(char)a2;
- (void)disconnectFromDaemonWithForce:(char)a0;
- (void)listener:(id)a0 setListenerCapabilities:(unsigned int)a1;
- (void)listener:(id)a0 setValue:(id)a1 ofPersistentProperty:(id)a2;
- (void)listener:(id)a0 setValue:(id)a1 ofProperty:(id)a2;
- (void)sendQueryWithReply:(char)a0 query:(id /* block */)a1;
- (char)setCapabilities:(unsigned int)a0 forListenerID:(id)a1;
- (void)setDaemonLogsOutWithoutStatusListeners:(char)a0;
- (void)setDaemonTerminatesWithoutListeners:(char)a0;

@end

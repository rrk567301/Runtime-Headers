@class NSString, IMAccount, NSDictionary, NSArray;

@interface IMServiceImpl : IMService <IMService>

@property (retain, nonatomic) NSString *name;
@property (retain, nonatomic) NSString *localizedName;
@property (retain, nonatomic) NSString *localizedShortName;
@property (retain, nonatomic) IMAccount *bestAccount;
@property (retain, nonatomic) NSDictionary *defaultSettings;
@property (retain, nonatomic) NSArray *emailDomains;
@property (retain, nonatomic) NSArray *siblingServiceNames;
@property (nonatomic) unsigned int screenNameSensitivity;
@property (nonatomic) char handleIDInsensitivityIsCarrierBased;
@property (nonatomic) unsigned long long caseInsensitivityByHandleType;
@property (retain, nonatomic) NSArray *abProperties;
@property (retain, nonatomic) NSDictionary *serviceProps;
@property (nonatomic) char hasLoadedServiceProperties;
@property (nonatomic) char supportsSMS;
@property (nonatomic) char shouldInternationalizeNumbers;
@property (nonatomic) char shouldDisableDeactivation;
@property (nonatomic) char ignoresNetworkConnectivity;
@property (nonatomic) char isPersistent;
@property (nonatomic) char isPlugInService;
@property (nonatomic) char allowsMultipleConnections;
@property (nonatomic) char isDiscontinued;
@property (nonatomic) char shouldReuseTypingIndicatorGUID;
@property (nonatomic) char supportsCrossAccountIDSMessaging;
@property (readonly, nonatomic) char _wantsInternationizedNumbers;
@property (readonly, nonatomic) char supportsDatabaseStorage;
@property (retain, nonatomic) NSDictionary *serviceDefaults;
@property (readonly, nonatomic) NSArray *accountIDs;
@property (retain, nonatomic) NSString *countryCode;
@property (readonly, nonatomic) char handlesChatInvites;
@property (readonly, nonatomic) NSString *shortName;
@property (readonly, nonatomic) NSString *internalName;
@property (retain, nonatomic) NSDictionary *serviceProperties;
@property (retain, nonatomic) NSDictionary *defaultAccountSettings;
@property (readonly, nonatomic) long long maxAttachmentSize;
@property (readonly, nonatomic) unsigned int IDSensitivity;
@property (readonly, nonatomic) NSArray *siblingServices;
@property (readonly, getter=isLegacyService) char legacyService;
@property (readonly, nonatomic, getter=isDiscontinued) char discontinued;
@property (readonly, nonatomic) NSArray *addressBookProperties;
@property (readonly, nonatomic) NSString *addressBookProperty;
@property (readonly, nonatomic) Class accountClass;
@property (readonly, nonatomic) char supportsRegistration;
@property (readonly, nonatomic) char supportsRelay;

+ (void)setServiceClass:(Class)a0;
+ (Class)serviceClass;
+ (id)connectedServices;
+ (id)serviceWithName:(id)a0;
+ (id)allServices;
+ (id)activeServices;
+ (char)iMessageEnabled;
+ (char)mmsEnabledforPhoneNumber:(id)a0 simID:(id)a1;
+ (char)_deviceIsAltAccount;
+ (char)_iMessageEnabledForMultipleSubscriptionsForSenderLastAddressedHandle:(id)a0 simID:(id)a1 previousService:(id)a2;
+ (char)_isLastAddressedHandleSubscriptionActive:(id)a0;
+ (char)_isSIMIdIDSRegisteredSIM:(id)a0;
+ (char)_isiMessageEnabledIfLastAddressedHandleIsNotActiveAnymore:(id)a0;
+ (id)_phoneNumberOnSubscriptionWithSIMID:(id)a0;
+ (char)_readMMSUserOverride;
+ (char)_shouldCheckIfLastAddressedHandleIsInSubscriptionsAnymoreButiMessageIsEnabledForAlias:(id)a0 previousService:(id)a1;
+ (id)allServicesNonBlocking;
+ (id)connectedServicesWithCapability:(unsigned long long)a0;
+ (char)hasAlias:(id)a0 onAccountForService:(id)a1;
+ (char)iMessageEnabledForSenderLastAddressedHandle:(id)a0 simID:(id)a1;
+ (char)iMessageEnabledForSenderLastAddressedHandle:(id)a0 simID:(id)a1 previousService:(id)a2;
+ (char)mmsEnabled;
+ (id)operationalServicesWithCapability:(unsigned long long)a0;
+ (id)serviceWithInternalName:(id)a0;
+ (id)servicesWithCapability:(unsigned long long)a0;
+ (id)servicesWithCapabilityName:(id)a0;
+ (char)smsEnabled;
+ (id)supportedCountryCodes;
+ (char)systemSupportsSMSSending;
+ (char)systemSupportsSendingAttachmentsOfTypes:(id)a0 error:(long long *)a1;

- (void)dealloc;
- (id)description;
- (void).cxx_destruct;
- (id)initWithName:(id)a0;
- (char)isEnabled;
- (unsigned long long)status;
- (void)disconnect;
- (id)infoForScreenName:(id)a0;
- (void)_blockUntilInitialSyncPerformed;
- (char)supportsForwardingAudioMessages;
- (id)idsServiceNames;
- (void)_calculateBestAccount;
- (void)_loadPropertiesIfNeeded;
- (id)_sorting;
- (void)_syncWithRemoteBuddies;
- (void)activeAccountsChanged:(id)a0;
- (id)canonicalFormOfID:(id)a0;
- (long long)chatResolutionPriority;
- (long long)compareNames:(id)a0;
- (void)defaultsChanged:(id)a0;
- (void)doneSetup;
- (char)equalID:(id)a0 andID:(id)a1;
- (char)groupsMergeDisplayNames;
- (id)infoForAllScreenNames;
- (id)infoForPreferredScreenNames;
- (char)initialSyncPerformed;
- (long long)maxChatParticipantsForHandle:(id)a0 simID:(id)a1;
- (id)myScreenNames;
- (id)normalizedFormOfID:(id)a0;
- (long long)serviceForSendingPriority;
- (void)statusChangedForAccount:(id)a0 from:(unsigned long long)a1 to:(unsigned long long)a2;
- (char)supportsAudioMessages;
- (char)supportsAuthorization;
- (char)supportsCanonicalHandles;
- (char)supportsCapability:(id)a0;
- (char)supportsGroupAttachments;
- (char)supportsIDStatusLookup;
- (char)supportsMessaging;
- (char)supportsMutatingGroupMembers;
- (char)supportsNetworkFallback;
- (char)supportsOfflineTransfers;
- (char)supportsOneSessionForAllAccounts;
- (char)supportsPhoneNumberMapping;
- (char)supportsReplication;
- (char)supportsReplicationCapability:(id)a0;
- (char)supportsShowingSatelliteMessageDownloadCount;
- (char)supportsStickers;
- (char)supportsTypingIndicators;

@end

@class NSMutableRLEArray, NSMutableDictionary, NSArray, NSData, NSMutableData, NSMutableAttributedString, NSMutableArray;

@interface NSDocFormatReader : NSObject <DocFormatAddressValidation> {
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSData *_primaryData;
    NSMutableData *_secondaryData;
    NSMutableData *_primaryIndex;
    NSMutableData *_secondaryIndex;
    NSMutableData *_tableOfContents;
    NSMutableDictionary *_contentsDictionary;
    NSData *_documentData;
    NSData *_tableData;
    NSData *_infoData;
    NSMutableArray *_fontNames;
    struct __CFArray { } *_predefinedOffsets;
    struct __CFDictionary { } *_predefinedAttributes;
    NSMutableRLEArray *_parAttributes;
    NSMutableRLEArray *_charAttributes;
    NSArray *_previousRowArray;
    NSMutableDictionary *_fontCache;
    unsigned long long _magicNumber;
    unsigned long long _versionNumber;
    unsigned long long _versionCode;
    unsigned long long _productNumber;
    unsigned long long _globalFlags;
    unsigned long long _charsetNumber;
    unsigned long long _bytesPerCharacter;
    unsigned int _stringEncoding;
    unsigned long long _lastModifier;
    unsigned long long _predefinedHeaderLength;
    long long _errorCode;
    long long _indexingLimit;
    long long _thumbnailLimit;
    double _defaultTabInterval;
    long long _firstEntryNumber;
    long long _textStart;
    long long _textLength;
    long long _predefinedInfoStart;
    long long _predefinedInfoEnd;
    long long _charInfoStart;
    long long _charInfoEnd;
    long long _parInfoStart;
    long long _parInfoEnd;
    long long _fontInfoStart;
    long long _fontInfoEnd;
    long long _docInfoStart;
    long long _docInfoEnd;
    long long _metaInfoStart;
    long long _metaInfoEnd;
    long long _textInfoStart;
    long long _textInfoEnd;
    char _removeRowInfo;
}

@property char includesTextListMarkers;

+ (id)defaultParagraphStyle;

- (void)dealloc;
- (void)finalize;
- (void)_parse;
- (id)attributedString;
- (void)_addContentsToDictionary:(long long)a0 depth:(long long)a1;
- (void)_parseText1Full;
- (void)_parseText1Fast;
- (void)_appendSanitizedTextBytes:(const char *)a0 length:(unsigned long long)a1 encoding:(unsigned int)a2 isSymbol:(char)a3 attributes:(id)a4;
- (void)_appendTextBytes:(const char *)a0 length:(unsigned long long)a1 encoding:(unsigned int)a2 attributes:(id)a3;
- (id)_attributes1ForPageOffset:(long long)a0 entryOffset:(long long)a1 baseAttributes:(id)a2;
- (id)_attributes2ForPageOffset:(long long)a0 entryOffset:(long long)a1 blockType:(int)a2 baseAttributes:(id)a3 depth:(long long)a4;
- (char)_colorComponentsForIndex:(long long)a0 redComponent:(long long *)a1 greenComponent:(long long *)a2 blueComponent:(long long *)a3;
- (void)_endTableRow:(id)a0;
- (void)_fixParagraphStyles;
- (id)_fontWithNumber:(long long)a0 size:(double)a1 bold:(char)a2 italic:(char)a3;
- (void)_parseCharacterAttributes;
- (void)_parseCharacterAttributes1;
- (void)_parseCharacterAttributes2;
- (void)_parseContentsDictionary;
- (void)_parseDocumentAttributes;
- (void)_parseDocumentAttributes1;
- (void)_parseDocumentAttributes2;
- (void)_parseFonts;
- (void)_parseFonts1;
- (void)_parseFonts2;
- (void)_parseGlobals;
- (void)_parseParagraphAttributes;
- (void)_parseParagraphAttributes1;
- (void)_parseParagraphAttributes2;
- (void)_parsePredefinedAttributes;
- (void)_parsePredefinedAttributes1;
- (void)_parsePredefinedAttributes2;
- (void)_parseSummaryInfo:(char)a0;
- (void)_parseText;
- (void)_parseText1;
- (void)_parseText2;
- (id)_predefinedAttributes2ForIndex:(unsigned long long)a0 depth:(long long)a1;
- (void)_removePrivateAttributes;
- (unsigned long long)_underlineStyleForArgument:(unsigned long long)a0;
- (id)attributesAtIndex:(unsigned long long)a0 effectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (id)documentAttributes;
- (id)initWithData:(id)a0 options:(id)a1;
- (id)initWithPath:(id)a0 options:(id)a1;
- (id)paragraphAttributesAtIndex:(unsigned long long)a0 effectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (id)predefinedAttributesForIndex:(unsigned long long)a0 depth:(long long)a1;
- (void)setMutableAttributedString:(id)a0;
- (char)validateAddress:(const char *)a0 numberOfBytes:(unsigned long long)a1;

@end

@class NSString, NSDictionary, NSArray, NSMutableDictionary;
@protocol GKPreferencesSupport, GKPreferencesDelegate;

@interface GKPreferences : NSObject

@property (class, readonly) GKPreferences *shared;

@property (weak, nonatomic) id<GKPreferencesDelegate> preferencesDelegate;
@property (readonly, nonatomic, getter=isStoreDemoModeEnabled) char storeDemoModeEnabled;
@property (readonly, nonatomic, getter=isAddingFriendsRestricted) char addingFriendsRestricted;
@property (readonly, nonatomic, getter=isMultiplayerGamingRestricted) char multiplayerGamingRestricted;
@property (readonly, nonatomic, getter=isAppInstallationRestricted) char appInstallationRestricted;
@property (readonly, nonatomic, getter=isAccountModificationRestricted) char accountModificationRestricted;
@property (readonly, nonatomic, getter=isGameCenterDisabled) char gameCenterDisabled;
@property (readonly, nonatomic, getter=isGameCenterRestricted) char gameCenterRestricted;
@property (readonly, nonatomic, getter=isCustomizedCommunicationRestricted) char customizedCommunicationRestricted;
@property (readonly, nonatomic, getter=isNearbyMultiplayerRestricted) char nearbyMultiplayerRestricted;
@property (readonly, nonatomic, getter=isProfileModificationRestricted) char profileModificationRestricted;
@property (readonly, nonatomic, getter=isProfilePrivacyModificationRestricted) char profilePrivacyModificationRestricted;
@property (readonly, nonatomic) unsigned long long multiplayerAllowedPlayerType;
@property (readonly, nonatomic, getter=isFriendsSharingRestricted) char friendsSharingRestricted;
@property (readonly, nonatomic, getter=isFriendRequestsRestricted) char friendRequestsRestricted;
@property (retain, nonatomic) id<GKPreferencesSupport> support;
@property (nonatomic) char _shouldSynchronizeOnNextRead;
@property (retain, nonatomic) NSDictionary *recentNumberOfPlayersPerGame;
@property (retain, nonatomic) NSDictionary *recentPickerSortPreferencePerGame;
@property (retain, nonatomic) NSDictionary *overrideValues;
@property (nonatomic) char supportLockdownMode;
@property (readonly, nonatomic) char lockedDown;
@property (nonatomic) long long environment;
@property (retain, nonatomic) NSString *storeBagURL;
@property (nonatomic) unsigned long long mescalSetupRetries;
@property (nonatomic) char networkManagerIgnoreCache;
@property (nonatomic) long long networkManagerStateOverride;
@property (nonatomic) NSString *networkManagerUserOverride;
@property (nonatomic) unsigned long long loginDisableThreshold;
@property (nonatomic) unsigned long long coreRecentUpperLimit;
@property (nonatomic) unsigned long long coreRecentMultiplier;
@property (nonatomic) char useTestProtocols;
@property (nonatomic) char enterSandbox;
@property (nonatomic) char forcePrivacyNotice;
@property (nonatomic) char forceDefaultNickname;
@property (nonatomic) char forceDefaultPrivacy;
@property (nonatomic) char forceFriendSuggestions;
@property (nonatomic) char forceDefaultContactsIntegrationConsent;
@property (nonatomic) char forceUnderage;
@property (nonatomic) double terminationInterval;
@property (nonatomic) double garbageCollectionInterval;
@property (nonatomic) double minimumCacheTTL;
@property (nonatomic) double cacheTTLOverride;
@property (nonatomic) double operationTimeout;
@property (nonatomic) double operationRetryDelay;
@property (nonatomic) unsigned long long operationRetryCount;
@property (nonatomic) double debugRequestTimeout;
@property (nonatomic, getter=isNotificationCenterEnabled) char notificationCenterEnabled;
@property (nonatomic) char notificationBadgesEnabled;
@property (nonatomic) char notificationSoundsEnabled;
@property (nonatomic) char notificationAlertsEnabled;
@property (copy, nonatomic) NSString *testRunID;
@property (nonatomic, getter=isClipGestureEnabled) char clipGestureEnabled;
@property (nonatomic) char forceRelay;
@property (nonatomic) char disableViceroyNearby;
@property (nonatomic) char preemptiveRelay;
@property (readonly, nonatomic) NSArray *forceEnabledTransportVersions;
@property (readonly, nonatomic) NSArray *forceDisabledTransportVersions;
@property (nonatomic) char multiplayerTransportOverrideV1Enabled;
@property (nonatomic) char multiplayerTransportOverrideV1Disabled;
@property (nonatomic) char multiplayerTransportOverrideV2Enabled;
@property (nonatomic) char multiplayerTransportOverrideV2Disabled;
@property (nonatomic) long long pushEnvironment;
@property (nonatomic) long long pipeliningSetting;
@property (nonatomic) char restrictToAutomatch;
@property (nonatomic) unsigned long long maximumInviteVersionSupported;
@property (nonatomic) unsigned long long recentNumberOfPlayers;
@property (nonatomic) unsigned long long maxPlayersP2P;
@property (nonatomic) unsigned long long maxPlayersHosted;
@property (nonatomic) unsigned long long maxPlayersTurnBased;
@property (nonatomic) unsigned long long maxGameStateSizeTurnBased;
@property (nonatomic) unsigned long long exchangeDataMaximumSize;
@property (nonatomic) unsigned long long exchangeMaxInitiatedExchangesPerPlayer;
@property (readonly, nonatomic) char HTTPShouldUsePipelining;
@property (readonly, nonatomic) unsigned long long maxDefaultPlayersP2P;
@property (readonly, nonatomic) unsigned long long maxDefaultPlayersHosted;
@property (readonly, nonatomic) unsigned long long maxDefaultPlayersTurnBased;
@property (readonly, nonatomic) unsigned long long maxDefaultGameStateSizeTurnBased;
@property (readonly, nonatomic) unsigned long long exchangeDataDefaultMaximumSize;
@property (readonly, nonatomic) unsigned long long exchangeDefaultMaxInitiatedExchangesPerPlayer;
@property (nonatomic) char useInternalHeader;
@property (nonatomic, getter=isWebKitInspectElementEnabled) char webKitInspectElementEnabled;
@property (nonatomic) char shouldAnnotateImageUsage;
@property (nonatomic) char shouldTrackAtlasImageUsage;
@property (nonatomic) char shouldUseTestIcons;
@property (nonatomic) char shouldLinkPlayerToICloud;
@property (nonatomic) char shouldLinkPlayerToTwitter;
@property (nonatomic) char shouldLinkPlayerToFacebook;
@property (readonly, nonatomic) char shouldDisallowInvitesFromStrangers;
@property (nonatomic) char shouldAllowNearbyMultiplayer;
@property (nonatomic) char shouldAddPlayerInfoToAddressBook;
@property (nonatomic) char notifyAboutScoreSubmissions;
@property (readonly, nonatomic) char shouldAllowSharing;
@property (readonly, nonatomic) char shouldAllowCustomCommunication;
@property (readonly, nonatomic) char multiplayerShouldAlwaysReloadCollectionView;
@property (nonatomic) unsigned long long maxRecentPlayersCount;
@property (nonatomic) double maxRecentPlayersTime;
@property (nonatomic) char accessPointIsOnAutomatically;
@property (nonatomic) char accessPointShowHighlights;
@property (nonatomic) long long accessPointLocation;
@property (nonatomic) char accessPointCustomTransition;
@property (nonatomic) char supportsChallenges;
@property (nonatomic) char dashboardDeepLinkEnabled;
@property (nonatomic) char multiplayerInGameOverlayEnabled;
@property (nonatomic) char multiplayerHealthCheckEnabled;
@property (nonatomic) char inboxContactsOnly;
@property (nonatomic) long long fakeFriendRequestCount;
@property (nonatomic) char activityFeedTestFeedOnly;
@property (nonatomic) double multiplayerActivityFeedMaxSessionDuration;
@property (readonly, nonatomic) char fastSyncTransportEnabled;
@property (readonly, nonatomic) char fetchFriendCodeInExtensionEnabled;
@property (readonly, nonatomic) char easySignInSheetEnabled;
@property (copy) NSMutableDictionary *handlers;
@property (readonly, nonatomic) char forceDeadlockFetchingUserRecordID;

+ (void)configureWithSupport:(id)a0;
+ (id)displayNameForEnvironment:(long long)a0;
+ (long long)environmentForString:(id)a0;
+ (id)hostNameForEnvironment:(long long)a0;
+ (char)restrictionEnabledForKey:(id)a0 applicationID:(id)a1 keyWasSet:(char *)a2;
+ (id)sharedWithSupport:(id)a0;

- (void).cxx_destruct;
- (void)invalidate;
- (void)synchronize;
- (void)setStringValue:(id)a0 forKey:(id)a1;
- (char)isInternalBuild;
- (void)setIntegerValue:(long long)a0 forKey:(id)a1;
- (id)stringValueForKey:(id)a0 defaultValue:(id)a1;
- (long long)integerValueForKey:(id)a0 defaultValue:(long long)a1;
- (long long)unsignedIntegerValueForKey:(id)a0 defaultValue:(long long)a1;
- (id)initWithSupport:(id)a0;
- (char)booleanValueForKey:(id)a0;
- (char)booleanValueForKey:(id)a0 defaultValue:(char)a1;
- (id)dictionaryValueForKey:(id)a0;
- (id)preferencesValueForKey:(id)a0;
- (void)applicationWillEnterBackground:(id)a0;
- (void)setUnsignedIntegerValue:(long long)a0 forKey:(id)a1;
- (void)_didWriteKey:(id)a0;
- (void)getMultiplayerAllowedPlayerTypeWithHandler:(id /* block */)a0;
- (id)initWithNotificationsAndSupport:(id)a0;
- (id)initWithoutNotificationsWithSupport:(id)a0;
- (void)multiplayerAllowedTypeReceivedWithNotification:(id)a0;
- (id)overrideValueForKey:(id)a0;
- (unsigned long long)recentNumberOfPlayersForBundleID:(id)a0;
- (long long)recentPlayerPickerSortPreferenceForBundleID:(id)a0;
- (void)removeOverrideForKey:(id)a0;
- (char)restrictionEnabledForKey:(id)a0;
- (char)restrictionEnabledForKey:(id)a0 applicationID:(id)a1;
- (void)setBooleanValue:(char)a0 forKey:(id)a1;
- (void)setDictionaryValue:(id)a0 forKey:(id)a1;
- (void)setForceDeadlockFetchingUserRecordID:(char)a0;
- (void)setInboxContactsOnly:(char)a0 refresh:(char)a1;
- (void)setMultiplayerShouldAlwaysReloadCollectionView:(char)a0;
- (void)setRecentNumberOfPlayers:(unsigned long long)a0 forBundleID:(id)a1;
- (void)setRecentPlayerPickerSortPreference:(long long)a0 forBundleID:(id)a1;
- (void)setTimeInterval:(double)a0 forKey:(id)a1;
- (double)timeIntervalForKey:(id)a0 defaultValue:(double)a1;
- (id)valueRestrictionForKey:(id)a0;

@end

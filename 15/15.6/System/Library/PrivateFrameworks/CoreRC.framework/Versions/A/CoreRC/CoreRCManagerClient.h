@class NSString, NSXPCConnection;

@interface CoreRCManagerClient : CoreRCManager <CoreRCXPCServiceIR, CoreRCXPCClientIR, CoreRCXPCServiceCECPrivate, CoreRCXPCServicePrivate, CoreRCXPCServiceCEC, CoreRCXPCClientCEC, CoreRCXPCService, CoreRCXPCClient> {
    NSXPCConnection *_connection;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (id)connection;
- (void)invalidate;
- (void)setDelegate:(id)a0;
- (void)connectionInterrupted;
- (void)fakeRemoveCECDeviceAsync:(id)a0 reply:(id /* block */)a1;
- (void)setCommandAsync:(unsigned long long)a0 target:(id)a1 source:(id)a2 forButtonCombination:(id)a3 delay:(double)a4 reply:(id /* block */)a5;
- (char)setProperty:(id)a0 forKey:(id)a1 ofBus:(id)a2 error:(id *)a3;
- (void)addDeviceOnBusAsync:(id)a0 withType:(unsigned long long)a1 matching:(id)a2 reply:(id /* block */)a3;
- (void)addDeviceOnBusAsync:(id)a0 withType:(unsigned long long)a1 matching:(id)a2 withSessionOwningDevice:(id)a3 reply:(id /* block */)a4;
- (void)bus:(id)a0 deviceHasBeenAdded:(id)a1;
- (void)bus:(id)a0 deviceHasBeenRemoved:(id)a1;
- (void)bus:(id)a0 deviceHasBeenUpdated:(id)a1;
- (void)busHasBeenAdded:(id)a0;
- (void)busHasBeenRemoved:(id)a0;
- (void)busHasBeenUpdated:(id)a0;
- (id)buses;
- (void)cecBus:(id)a0 activeSourceHasChangedTo:(id)a1 fromDevice:(id)a2;
- (void)cecDevice:(id)a0 activeSourceStatusHasChanged:(char)a1;
- (void)cecDevice:(id)a0 audioStatusReceived:(unsigned long long)a1 muteStatus:(char)a2;
- (void)cecDevice:(id)a0 deckControlCommandHasBeenReceived:(unsigned long long)a1 fromDevice:(id)a2;
- (void)cecDevice:(id)a0 deckControlPlayHasBeenReceived:(unsigned long long)a1 fromDevice:(id)a2;
- (void)cecDevice:(id)a0 deckControlStatusHasBeenUpdated:(unsigned long long)a1 fromDevice:(id)a2;
- (void)cecDevice:(id)a0 featureAbort:(id)a1;
- (void)cecDevice:(id)a0 receivedRequestAudioReturnChannelStatusChangeTo:(unsigned long long)a1 fromDevice:(id)a2;
- (void)cecDevice:(id)a0 receivedRequestSystemAudioModeStatusChangeTo:(unsigned long long)a1 fromDevice:(id)a2;
- (void)cecDevice:(id)a0 requestAudioReturnChannelStatusChangeTo:(unsigned long long)a1 didFinishWithResult:(char)a2 error:(id)a3;
- (void)cecDevice:(id)a0 requestSystemAudioModeStatusChangeTo:(unsigned long long)a1 didFinishWithResult:(char)a2 error:(id)a3;
- (void)cecDevice:(id)a0 standbyRequestHasBeenReceived:(id)a1;
- (void)cecDeviceShouldAssertActiveSource:(id)a0;
- (void)changeButtonCombinationAsync:(id)a0 delay:(double)a1 enabled:(char)a2 forDevice:(id)a3 reply:(id /* block */)a4;
- (void)clearAllStoredCommandsFromDeviceAsync:(id)a0 reply:(id /* block */)a1;
- (void)deleteDeviceAsync:(id)a0 fromBus:(id)a1 reply:(id /* block */)a2;
- (void)device:(id)a0 receivedHIDEvent:(id)a1 fromDevice:(id)a2;
- (void)endLearningWithDeviceAsync:(id)a0 reply:(id /* block */)a1;
- (id)extendedPropertyForKey:(id)a0 ofDevice:(id)a1 error:(id *)a2;
- (void)fakeCreateCECBusAsync:(unsigned short)a0 reply:(id /* block */)a1;
- (void)fakeCreateRemoteCECDeviceAsync:(id)a0 bus:(id)a1 logicalAddress:(unsigned char)a2 physicalAddress:(unsigned short)a3 reply:(id /* block */)a4;
- (void)fakeRemoveCECBusAsync:(id)a0 reply:(id /* block */)a1;
- (void)fakeSetCECBusLinkStateAsync:(id)a0 linkState:(char)a1 physicalAddress:(unsigned short)a2 reply:(id /* block */)a3;
- (void)fakeSetCECDeviceLogicalAddressAsync:(id)a0 logicalAddress:(unsigned char)a1 reply:(id /* block */)a2;
- (void)getExtendedPropertyAsyncForKey:(id)a0 ofDevice:(id)a1 reply:(id /* block */)a2;
- (void)getPropertyAsyncForKey:(id)a0 ofBus:(id)a1 reply:(id /* block */)a2;
- (void)learningSessionForDevice:(id)a0 commandProgress:(id)a1;
- (void)learningSessionForDevice:(id)a0 duplicateCommand:(unsigned long long)a1 target:(id)a2;
- (void)learningSessionForDevice:(id)a0 status:(unsigned long long)a1;
- (void)learningSessionForDeviceCommandDone:(id)a0;
- (void)mergeBus:(id)a0;
- (void)performActiveSourceAsync:(id)a0 withMenus:(char)a1 reply:(id /* block */)a2;
- (void)performDeckControlCommandAsync:(id)a0 controlMode:(unsigned long long)a1 targetDevice:(id)a2 reply:(id /* block */)a3;
- (void)performDeckControlPlayAsync:(id)a0 playMode:(unsigned long long)a1 targetDevice:(id)a2 reply:(id /* block */)a3;
- (void)performDeckControlRefreshStatusAsync:(id)a0 targetDevice:(id)a1 requestType:(unsigned long long)a2 reply:(id /* block */)a3;
- (void)performDeckControlSetDeckStatusAsync:(unsigned long long)a0 forDevice:(id)a1 reply:(id /* block */)a2;
- (void)performInactiveSourceAsync:(id)a0 reply:(id /* block */)a1;
- (void)performRefreshDevicesAsync:(id)a0 reply:(id /* block */)a1;
- (void)performRefreshProperties:(id)a0 ofDevice:(id)a1 withDeviceAsync:(id)a2 reply:(id /* block */)a3;
- (void)performRemoveDeviceWithTypeAsync:(unsigned long long)a0 bus:(id)a1 reply:(id /* block */)a2;
- (void)performRemoveFromBus:(id)a0 reply:(id /* block */)a1;
- (void)performRequestActiveSourceAsync:(id)a0 reply:(id /* block */)a1;
- (void)performRequestAudioReturnChannelStatusChangeTo:(unsigned long long)a0 withDeviceAsync:(id)a1 reply:(id /* block */)a2;
- (void)performRequestAudioStatusAsync:(id)a0 reply:(id /* block */)a1;
- (void)performRequestSystemAudioModeStatusChangeTo:(unsigned long long)a0 withDeviceAsync:(id)a1 reply:(id /* block */)a2;
- (void)performSetAudioMuteStatus:(char)a0 withDeviceAsync:(id)a1 reply:(id /* block */)a2;
- (void)performSetAudioReturnChannelControlEnabled:(char)a0 withDeviceAsync:(id)a1 reply:(id /* block */)a2;
- (void)performSetAudioVolumeStatus:(unsigned long long)a0 withDeviceAsync:(id)a1 reply:(id /* block */)a2;
- (void)performSetPowerStatus:(unsigned long long)a0 withDeviceAsync:(id)a1 reply:(id /* block */)a2;
- (void)performSetSupportedAudioFormats:(id)a0 withDeviceAsync:(id)a1 reply:(id /* block */)a2;
- (void)performSetSystemAudioControlEnabled:(char)a0 withDeviceAsync:(id)a1 reply:(id /* block */)a2;
- (void)performSetTrackAudioStatusEnabled:(char)a0 pressTimeout:(long long)a1 pollInterval:(long long)a2 withDeviceAsync:(id)a3 reply:(id /* block */)a4;
- (void)performStandbyAsync:(id)a0 targetDevice:(id)a1 reply:(id /* block */)a2;
- (void)performSystemAudioModeRequestAsync:(id)a0 withDesiredState:(unsigned long long)a1 reply:(id /* block */)a2;
- (id)propertyForKey:(id)a0 ofBus:(id)a1 error:(id *)a2;
- (void)queryBusesAsync:(id /* block */)a0;
- (void)queryLocalInstanceAsync:(id)a0 bus:(id)a1 reply:(id /* block */)a2;
- (void)queryLoggingAsync:(id /* block */)a0;
- (char)sendCommand:(unsigned long long)a0 fromDevice:(id)a1 toDevice:(id)a2 withDuration:(unsigned long long)a3 error:(id *)a4;
- (void)sendCommandAsync:(id)a0 fromDevice:(id)a1 reply:(id /* block */)a2;
- (void)sendCommandAsync:(unsigned long long)a0 fromDevice:(id)a1 toDevice:(id)a2 withDuration:(unsigned long long)a3 reply:(id /* block */)a4;
- (char)sendHIDEvent:(id)a0 fromDevice:(id)a1 toDevice:(id)a2 error:(id *)a3;
- (void)sendHIDEventAsync:(id)a0 fromDevice:(id)a1 toDevice:(id)a2 reply:(id /* block */)a3;
- (char)setExtendedProperty:(id)a0 forKey:(id)a1 ofDevice:(id)a2 error:(id *)a3;
- (void)setExtendedPropertyAsync:(id)a0 forKey:(id)a1 ofDevice:(id)a2 reply:(id /* block */)a3;
- (void)setLogging:(id)a0;
- (void)setLoggingAsync:(id)a0 reply:(id /* block */)a1;
- (void)setOSDNameAsync:(id)a0 forDevice:(id)a1 reply:(id /* block */)a2;
- (void)setOsdNameAsync:(id)a0 forBus:(id)a1 reply:(id /* block */)a2;
- (void)setPairStateAsync:(char)a0 forAppleRemote:(id)a1 reply:(id /* block */)a2;
- (void)setPropertyAsync:(id)a0 forKey:(id)a1 ofBus:(id)a2 reply:(id /* block */)a3;
- (void)setTvLanguageCodeAsync:(id)a0 forBus:(id)a1 reply:(id /* block */)a2;
- (void)startLearningCommandAsync:(unsigned long long)a0 withDevice:(id)a1 reply:(id /* block */)a2;
- (void)startLearningSessionWithDeviceAsync:(id)a0 forReason:(id)a1 reply:(id /* block */)a2;
- (void)synchBuses:(id)a0;
- (void)updateMappingWithSessionOwningDeviceAsync:(id)a0 forTargetDevice:(id)a1 reply:(id /* block */)a2;

@end

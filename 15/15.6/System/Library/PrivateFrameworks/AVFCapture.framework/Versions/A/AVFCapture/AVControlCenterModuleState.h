@class NSString, NSDictionary, NSURL, NSMutableDictionary, NSArray, NSObject;
@protocol OS_dispatch_queue;

@interface AVControlCenterModuleState : NSObject {
    NSString *_bundleID;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stateLock;
    char _holdingStateLock;
    char _centerStageSupported;
    long long _centerStageControlMode;
    char _centerStageEnabled;
    NSString *_centerStageControlModeKey;
    NSString *_centerStageEnabledKey;
    NSString *_centerStageUnavailableReasonsKey;
    char _backgroundBlurSupported;
    long long _backgroundBlurControlMode;
    char _backgroundBlurEnabled;
    NSString *_backgroundBlurControlModeKey;
    NSString *_backgroundBlurEnabledKey;
    NSString *_backgroundBlurUnavailableReasonsKey;
    float _backgroundBlurAperture;
    NSString *_backgroundBlurApertureKey;
    char _studioLightingSupported;
    long long _studioLightingControlMode;
    char _studioLightingEnabled;
    NSString *_studioLightingControlModeKey;
    NSString *_studioLightingEnabledKey;
    NSString *_studioLightingUnavailableReasonsKey;
    float _studioLightingIntensity;
    NSString *_studioLightingIntensityKey;
    char _reactionEffectsSupported;
    char _reactionsEnabled;
    NSString *_reactionsEnabledKey;
    char _gesturesEnabled;
    NSString *_gesturesEnabledKey;
    NSString *_gesturesEnabledDefaultKey;
    NSString *_reactionsUnavailableReasonsKey;
    NSString *_reactionTriggeredKey;
    NSMutableDictionary *_previousReactionStateByDeviceIdentifier;
    NSString *_reactionsInProgressKey;
    char _backgroundReplacementSupported;
    char _backgroundReplacementEnabled;
    NSString *_backgroundReplacementEnabledKey;
    NSString *_backgroundReplacementUnavailableReasonsKey;
    NSURL *_backgroundReplacementURL;
    NSString *_backgroundReplacementURLBookmarkKey;
    struct __CVBuffer { } *_backgroundReplacementPixelBuffer;
    int _backgroundReplacementPixelBufferFillWidth;
    int _backgroundReplacementPixelBufferFillHeight;
    char _auVoiceIOBypassVoiceProcessing;
    NSString *_auVoiceIOBypassVoiceProcessingKey;
    long long _microphoneMode;
    long long _activeMicrophoneMode;
    NSString *_microphoneModeKey;
    NSString *_activeMicrophoneModeKey;
    NSArray *_supportedMicrophoneModes;
    NSString *_supportedMicrophoneModesKey;
    NSArray *_hiddenMicrophoneModes;
    NSString *_hiddenMicrophoneModesKey;
    char _autoMicModeEnabled;
    NSString *_autoMicModeEnabledKey;
    NSString *_startPanningAtPointKey;
    NSString *_panWithTranslationKey;
    NSString *_manualFramingVideoZoomFactorKey;
    NSString *_performOneShotFramingKey;
    NSString *_resetFramingKey;
    NSString *_oneShotFramingCompletedKey;
    NSString *_resetFramingCompletedKey;
    NSString *_panningAnglesKey;
    NSString *_centerStageFieldOfViewRestrictedToWideKey;
    NSString *_manualFramingDeviceTypeKey;
    NSString *_dockedTrackingActiveKey;
    double _currentPanningAngleX;
    double _currentPanningAngleY;
    double _currentOriginalZoomFactor;
    long long _manualFramingDeviceType;
    NSDictionary *_zoomFactorConstantsByManualFramingDeviceType;
    char _deviceBasedModuleState;
    char _deviceSupportsManualFraming;
    char _observingManualFramingProprietaryDefaultKeys;
    char _observingDockedTrackingProprietaryDefaultKey;
    unsigned int _specialControlsCMIOStreamID;
    id /* block */ _cmioPropertylistenerBlock;
    NSObject<OS_dispatch_queue> *_cmioPropertyListenerQueue;
}

@property (readonly, getter=isActive) char active;
@property char centerStageSupported;
@property char backgroundBlurSupported;
@property char studioLightingSupported;
@property char reactionEffectsSupported;
@property char backgroundReplacementSupported;
@property (readonly) char micModesSupported;
@property (readonly, getter=isAutoMicrophoneModeSupported) char autoMicrophoneModeSupported;
@property (retain, nonatomic) NSURL *backgroundReplacementURL;
@property (readonly, nonatomic) char hasBackgroundReplacementBeenToggled;
@property (readonly) char manualFramingIsAtDefault;
@property char centerStageFieldOfViewRestrictedToWide;
@property long long manualFramingDeviceType;
@property (readonly) NSDictionary *zoomFactorConstantsByManualFramingDeviceType;
@property (readonly, getter=isDeviceBasedModuleState) char deviceBasedModuleState;
@property (readonly, getter=isDeviceBasedModuleStateUpdateToDate) char deviceBasedModuleStateUpdateToDate;

+ (unsigned int)_getPluginIDForBundleIdentifier:(struct __CFString { } *)a0;
+ (unsigned int)_getSpecialCMIOControlsSupportedStreamIDForUniqueDeviceID:(id)a0;
+ (id)moduleStateForBundleID:(id)a0;

- (void)dealloc;
- (void)startPanningAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (long long)microphoneMode;
- (char)setMicrophoneMode:(long long)a0;
- (double)_defaultOriginalVideoZoomFactor;
- (void)_checkManualFramingDefaultStateWithNewOriginalZoomFactor:(double)a0;
- (struct CGPoint { double x0; double x1; })_getDefaultManualFramingPanningAnglesForSpecialStream;
- (long long)_getManualFramingDeviceTypeForSpecialStream;
- (void)_handleBackPropagatedVideoZoomFactorUpdate:(id)a0;
- (void)_handlePanningAnglesUpdate:(id)a0;
- (void)_proprietaryDefaultChanged:(id)a0 keyPath:(id)a1 context:(void *)a2;
- (void)_restoreCenterStageEnabledStatesForForcedClients:(id)a0;
- (char)_setValueForSpecialCMIOSelector:(unsigned int)a0 value:(void *)a1;
- (long long)activeMicrophoneMode;
- (struct __CVBuffer { } *)backgroundReplacementPixelBufferFillingWidth:(int)a0 height:(int)a1;
- (void)cleanUpOrphanedSupportedMicModes;
- (void)cmioPropertyListener:(const struct CMIOObjectPropertyAddress { unsigned int x0; unsigned int x1; unsigned int x2; } *)a0 count:(unsigned long long)a1;
- (long long)controlModeForVideoEffect:(id)a0;
- (void)enableBlackenFrames:(char)a0 forDeviceUID:(id)a1;
- (float)getEffectIntensityDefaultForVideoEffect:(id)a0;
- (float)getEffectIntensityForVideoEffect:(id)a0;
- (struct AudioValueRange { double x0; double x1; })getEffectIntensityRangeForVideoEffect:(id)a0;
- (id)hiddenMicrophoneModes;
- (id)initForBundleID:(id)a0;
- (void)installCMIOPropertyListeners;
- (void)installProprietaryDefaultsHandlers;
- (void)invalidateDeviceBasedModuleStatesIfNeeded;
- (char)isAutoMicrophoneModeEnabled;
- (char)isEnabledForVideoEffect:(id)a0;
- (char)manualFramingEnabledForDevice:(id)a0;
- (double)manualFramingOriginalVideoZoomFactor;
- (void)panWithTranslation:(struct CGPoint { double x0; double x1; })a0;
- (void)performOneShotFraming;
- (void)performReactionEffect:(id)a0 forCaptureDeviceWithID:(id)a1;
- (void)removeCMIOPropertyListeners;
- (void)resetFraming;
- (char)setAutoMicrophoneModeEnabled:(char)a0;
- (char)setEffectIntensityForVideoEffect:(float)a0 forVideoEffect:(id)a1;
- (char)setEnabled:(char)a0 forVideoEffect:(id)a1;
- (void)setManualFramingOriginalZoomFactor:(double)a0 convertedZoomFactor:(double)a1;
- (void)setupDeviceBasedModuleStatesIfNeeded;
- (id)supportedMicrophoneModes;
- (char)supportsVideoEffect:(id)a0;
- (unsigned long long)unavailableReasonsForVideoEffect:(id)a0;
- (void)updateActiveReactions:(id)a0 currentRenderPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 requestedTriggers:(int)a2 forCaptureDeviceWithID:(id)a3;
- (void)updateCenterStageSupported:(char)a0 backgroundBlurSupported:(char)a1 studioLightingSupported:(char)a2 reactionEffectsSupported:(char)a3 backgroundReplacementSupported:(char)a4;
- (void)updateSpecialCMIOControlIDIfRequired;
- (char)voiceProcessingBypassed;

@end

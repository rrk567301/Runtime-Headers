@class UTType, NSString, NSArray, NSMutableDictionary, AVCaptureDeviceInputSource_Tundra, NSMutableSet, NSObject, FigCaptureTrie, AVCaptureDeviceFormat_Tundra;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface AVCaptureDALDevice : AVCaptureDevice_Tundra {
    NSString *_uniqueID;
    NSString *_creatorID;
    unsigned int _connectionID;
    unsigned long long _flags;
    unsigned int _specialDeviceType;
    NSArray *_formats;
    AVCaptureDeviceFormat_Tundra *_activeFormat;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _activeMinFrameDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _activeMinFrameDurationSetByClient;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _activeMaxFrameDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _activeMaxFrameDurationSetByClient;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _defaultActiveMinFrameDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _defaultActiveMaxFrameDuration;
    char _suspended;
    int _activelyProvidingInputCount;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _propertiesLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _internalLock;
    NSString *_localizedName;
    NSString *_modelID;
    NSString *_manufacturer;
    char _automaticallyAdjustsFeatureControls;
    NSObject<OS_dispatch_queue> *_transportPropertyObserverQueue;
    long long _transportPropertyObserverCount;
    NSObject<OS_dispatch_source> *_transportPropertyObserverTimer;
    long long _focusMode;
    long long _exposureMode;
    long long _whiteBalanceMode;
    struct CGPoint { double x; double y; } _focusPointOfInterest;
    struct CGPoint { double x; double y; } _exposurePointOfInterest;
    unsigned long long _DALTransportType;
    NSArray *_inputSources;
    AVCaptureDeviceInputSource_Tundra *_activeInputSource;
    struct OpaqueCMClock { } *_deviceClock;
    int _transportType;
    char _centerStageSupported;
    char _centerStageActive;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _centerStageRectOfInterest;
    char _centerStageEnabledObserverActive;
    char _centerStageFramingModeObserverActive;
    unsigned long long _centerStageUnavailableReasons;
    char _isSharedStyleCenterStage;
    char _sharedCenterStageEnabled;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sharedStateLock;
    char _backgroundBlurActive;
    char _backgroundBlurEnabledObserverActive;
    char _backgroundBlurSupported;
    unsigned long long _backgroundBlurUnavailableReasons;
    char _isSharedStyleBackgroundBlur;
    char _sharedBackgroundBlurEnabled;
    char _isSharedStyleBackgroundBlurAperture;
    char _backgroundBlurApertureSupported;
    float _sharedBackgroundBlurAperture;
    char _studioLightingActive;
    char _studioLightingEnabledObserverActive;
    char _studioLightingSupported;
    unsigned long long _studioLightingUnavailableReasons;
    char _isSharedStyleStudioLighting;
    char _sharedStudioLightingEnabled;
    char _isSharedStyleStudioLightingIntensity;
    char _studioLightingIntensitySupported;
    float _sharedStudioLightingIntensity;
    char _reactionEffectsActive;
    char _reactionEffectsEnabledObserverActive;
    char _reactionEffectsSupported;
    unsigned long long _reactionEffectsUnavailableReasons;
    char _isSharedStyleReactionEffects;
    char _sharedReactionEffectsEnabled;
    char _sharedGesturesEnabled;
    char _sharedSuppressedGesturesEnabled;
    NSArray *_sharedReactionsInProgress;
    char _sharedSuppressedGesture;
    char _backgroundReplacementActive;
    char _backgroundReplacementEnabledObserverActive;
    char _backgroundReplacementSupported;
    unsigned long long _backgroundReplacementUnavailableReasons;
    char _isSharedStyleBackgroundReplacement;
    char _sharedBackgroundReplacementEnabled;
    struct __CVBuffer { } *_sharedBackgroundReplacementPixelBuffer;
    char _transportLayerAttachmentsDeliveryEnabled;
    char _asyncStillCaptureEnabled;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _asyncStillCaptureLock;
    NSMutableDictionary *_stillCaptureHandlers;
    NSMutableSet *_connectedPhotoOutputs;
    NSArray *_supportedMetadataObjectTypes;
    NSArray *_requestedMetadataObjectTypes;
    FigCaptureTrie *_requestedBufferAttachmentsTrie;
    char _didUseTransportControls;
    double _videoZoomFactor;
    char _manualFramingSupported;
    long long _manualFramingDeviceType;
    double _displayVideoZoomFactorMultiplier;
    float _batteryLevel;
    long long _batteryState;
    long long _deskViewCameraMode;
    UTType *_hardwareUniformType;
    char _flashSupported;
    char _dockedTrackingActive;
    char _lostCMIODeviceOnError;
    NSString *_companionDeskViewDeviceUUID;
}

@property (nonatomic) char transportControlsSupported;
@property (nonatomic) long long transportControlsPlaybackMode;
@property (nonatomic) float transportControlsSpeed;
@property (nonatomic, getter=isAdjustingFocus) char adjustingFocus;
@property (nonatomic, getter=isAdjustingExposure) char adjustingExposure;
@property (nonatomic, getter=isAdjustingWhiteBalance) char adjustingWhiteBalance;

+ (void)initialize;
+ (id)devices;
+ (id)deviceWithUniqueID:(id)a0;
+ (void)_refreshDevices;
+ (char)allowsSuspendedPreferredCameras;
+ (void)updateUserPreferredCameraOverrideHistoryWithDevice:(id)a0 setOverride:(char)a1;
+ (id)_cameraHistoryDispatchQueue;
+ (id)_defaultDeviceWithDeviceType:(id)a0 mediaTypes:(id)a1 position:(long long)a2 cameraOverrideHistoryAllowed:(char)a3 cameraOverrideHistorySuspendedAllowed:(char)a4 wombatsMustBeMagic:(char)a5 userPreferredCameraHistorySuspendedAllowed:(char)a6 invalidSpecialDeviceTypes:(id)a7;
+ (void)_ensureDeviceList;
+ (void)_putDeviceIntoInputModeIfPossible:(unsigned int)a0;
+ (void)_refreshPreferredCameraProperties:(char)a0;
+ (void)_setUpCameraHistoryOnce;
+ (id)_userPreferredCameraHistoryKeyForClientPreferencesDomain:(id)a0;
+ (id)_userPreferredCameraOverrideHistoryKey;
+ (id)cameraInfoForCreatorID:(id)a0 uniqueID:(id)a1 specialDeviceType:(unsigned int)a2 centerStageSupported:(char)a3;
+ (id)defaultDeviceWithDeviceType:(id)a0 mediaType:(id)a1 position:(long long)a2;
+ (id)defaultDeviceWithMediaType:(id)a0;
+ (id)prioritizedDeviceList:(id)a0;
+ (void)setAllowsSuspendedPreferredCameras:(char)a0;
+ (void)setOnAllCMIOPlugInsTheUInt32Property:(unsigned int)a0 value:(unsigned int)a1;
+ (void)setUserPreferredCamera:(id)a0;
+ (void)setUserPreferredCamera:(id)a0 forClientPreferenceDomain:(id)a1;
+ (id)systemPreferredCamera;
+ (void)updateUserPreferredCameraOverride:(char)a0 cameraInfo:(id)a1;
+ (void)updateUserPreferredCameraOverrideHistoryEligibilityWithDevice:(id)a0 setEligibility:(char)a1;
+ (id)userPreferredCamera;

- (void)dealloc;
- (id)localizedName;
- (void)addObserver:(id)a0 forKeyPath:(id)a1 options:(unsigned long long)a2 context:(void *)a3;
- (char)isSuspended;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)removeObserver:(id)a0 forKeyPath:(id)a1;
- (id)uniqueID;
- (unsigned int)deviceID;
- (long long)activeColorSpace;
- (unsigned int)connectionID;
- (id)deviceType;
- (char)isConnected;
- (void)setActiveColorSpace:(long long)a0;
- (int)transportType;
- (void)setConnectionID:(unsigned int)a0;
- (id)manufacturer;
- (long long)exposureMode;
- (void)setExposureMode:(long long)a0;
- (id)formats;
- (id)modelID;
- (float)batteryLevel;
- (long long)batteryState;
- (id)inputSources;
- (id)activeFormat;
- (void)setActiveFormat:(id)a0;
- (void)setActiveVideoMaxFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (id)spatialCaptureDiscomfortReasons;
- (void)_refreshConnectionID:(unsigned int)a0 KVONotify:(char)a1;
- (void)_refreshPropertiesAndKVONotify:(char)a0;
- (void)rampToVideoZoomFactor:(double)a0 withRate:(float)a1;
- (void)setActiveVideoMinFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)stopUsingDevice;
- (char)supportsAVCaptureSessionPreset:(id)a0;
- (double)videoZoomFactor;
- (void)_addPropertyListeners;
- (unsigned long long)_backgroundBlurUnavailableReasons;
- (unsigned long long)_backgroundReplacementUnavailableReasons;
- (id)_cameraInfo;
- (char)_centerStageSupportedOnDevice;
- (unsigned long long)_centerStageUnavailableReasons;
- (void)_handleCapturedStillImage:(long long)a0 stillSampleBuffer:(struct opaqueCMSampleBuffer { } *)a1 error:(id)a2;
- (void)_handleDeviceIsAliveNotification:(id)a0;
- (char)_isActivelyProvidingInput;
- (void)_performReaction:(id)a0;
- (void)_postNotificationNamed:(id)a0;
- (unsigned long long)_reactionEffectsUnavailableReasons;
- (void)_refreshActiveFormatAndKVONotify:(char)a0;
- (void)_refreshAsyncStillCaptureConfigurations;
- (void)_refreshAsyncStillCaptureEnabled;
- (void)_refreshBackgroundBlurActiveWithEnabled:(char)a0 KVONotify:(char)a1;
- (void)_refreshBackgroundBlurUnavailableReasons;
- (void)_refreshBackgroundReplacementActiveWithEnabled:(char)a0 KVONotify:(char)a1;
- (void)_refreshBackgroundReplacementUnavailableReasons;
- (void)_refreshBatteryLevelAndKVONotify:(char)a0;
- (void)_refreshBatteryStateAndKVONotify:(char)a0;
- (char)_refreshCenterStageActiveAndKVONotify:(char)a0;
- (char)_refreshCenterStageFramingMode;
- (char)_refreshCenterStageRectOfInterestAndKVONotify:(char)a0;
- (void)_refreshCenterStageUnavailableReasons;
- (void)_refreshCreatorID;
- (void)_refreshDockedTrackingActive;
- (void)_refreshFormatsAndKVONotify:(char)a0;
- (void)_refreshInputSourcesAndKVONotify:(char)a0;
- (void)_refreshIsInUseByAnotherApplicationAndKVONotify:(char)a0;
- (void)_refreshLinkedDevicesAndKVONotify:(char)a0;
- (void)_refreshLocalizedNameAndKVONotify:(char)a0;
- (void)_refreshManualFramingDeviceTypeAndKVONotify:(char)a0;
- (void)_refreshManufacturerAndKVONotify:(char)a0;
- (void)_refreshMetadataEnablement;
- (void)_refreshModelIDAndKVONotify:(char)a0;
- (void)_refreshReactionEffectsActiveWithEnabled:(char)a0 KVONotify:(char)a1;
- (void)_refreshReactionEffectsUnavailableReasons;
- (void)_refreshStreamsAndKVONotify:(char)a0;
- (void)_refreshStudioLightActiveWithEnabled:(char)a0 KVONotify:(char)a1;
- (void)_refreshStudioLightingUnavailableReasons;
- (void)_refreshSuspendedAttributeAndKVONotify:(char)a0;
- (void)_refreshTransportTypeAndKVONotify:(char)a0;
- (void)_refreshVideoZoomFactorAndKVONotify:(char)a0;
- (void)_removePropertyListeners;
- (struct { long long x0; float x1; unsigned char x2; })_retrieveAVCDeviceValues;
- (struct { long long x0; float x1; unsigned char x2; })_retrieveRS422DeviceValues;
- (char)_retrieveTransportControlsSupported;
- (struct { long long x0; float x1; unsigned char x2; })_retrieveTransportValues;
- (char)_sendAVCDeviceOpcode:(unsigned char)a0 playbackMode:(unsigned char)a1;
- (void)_setActiveVideoMaxFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)_setActiveVideoMaxFrameDurationInternal:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)_setActiveVideoMinFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)_setActiveVideoMinFrameDurationInternal:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)_setBackgroundBlurAperture:(float)a0;
- (void)_setBackgroundBlurEnabled:(char)a0;
- (void)_setBackgroundReplacementEnabled:(char)a0;
- (void)_setBackgroundReplacementPixelBuffer:(struct __CVBuffer { } *)a0;
- (void)_setCMIOAsyncStillCaptureConfigurations:(id)a0;
- (void)_setCMIOAsyncStillCaptureEnabled:(char)a0;
- (void)_setCenterStageEnabled:(char)a0;
- (void)_setCenterStageFramingMode:(long long)a0;
- (void)_setCenterStageRectOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_setGesturesEnabled:(char)a0;
- (void)_setReactionEffectsEnabled:(char)a0;
- (void)_setStudioLightingEnabled:(char)a0;
- (void)_setStudioLightingIntensity:(float)a0;
- (void)_setSuppressedGesturesEnabled:(char)a0;
- (void)_sharedBackgroundBlurApertureChangedForStream:(unsigned int)a0;
- (void)_sharedBackgroundBlurEnabledChangedForStream:(unsigned int)a0;
- (void)_sharedBackgroundReplacementEnabledChangedForStream:(unsigned int)a0;
- (void)_sharedBackgroundReplacementPixelBufferChangedForStream:(unsigned int)a0;
- (void)_sharedCenterStageEnabledChangedForStream:(unsigned int)a0;
- (void)_sharedGesturesEnabledChangedForStream:(unsigned int)a0;
- (void)_sharedReactionEffectsEnabledChangedForStream:(unsigned int)a0;
- (void)_sharedReactionsInProgressChangedForStream:(unsigned int)a0;
- (void)_sharedStudioLightingEnabledChangedForStream:(unsigned int)a0;
- (void)_sharedStudioLightingIntensityChangedForStream:(unsigned int)a0;
- (void)_sharedSuppressedGestureForStream:(unsigned int)a0;
- (void)_sharedSuppressedGesturesEnabledChangedForStream:(unsigned int)a0;
- (void)_startupTransportPropertyObserverTimerForPlaybackMode:(long long)a0;
- (unsigned long long)_studioLightingUnavailableReasons;
- (id)activeInputSource;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMaxFrameDuration;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMaxFrameDurationDefault;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMaxFrameDurationForStream:(unsigned int)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMaxFrameDurationSetByClient;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMinFrameDuration;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMinFrameDurationDefault;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMinFrameDurationForStream:(unsigned int)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMinFrameDurationSetByClient;
- (void)addConnectedPhotoOutput:(id)a0;
- (id)applicationAnalytics;
- (char)arePerProcessVideoEffectsSupported;
- (char)asyncStillCaptureSupported;
- (char)automaticallyAdjustsFeatureControls;
- (id)availableStillImageFormats;
- (char)becomeDeviceMaster:(id *)a0;
- (char)canPerformReactionEffects;
- (void)cancelVideoZoomRamp;
- (void)captureStillImage:(long long)a0 photoSettings:(id)a1 completionHandler:(id /* block */)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })centerStageRectOfInterest;
- (id)companionDeskViewCamera;
- (unsigned int)connectionUnitComponentSubType;
- (struct opaqueCMSampleBuffer { } *)copyStillImageSampleBufferWithFormat:(id)a0 error:(id *)a1;
- (long long)deskViewCameraMode;
- (struct OpaqueCMClock { } *)deviceClock;
- (id)deviceFormatForStream:(unsigned int)a0 formatDescription:(struct opaqueCMFormatDescription { } *)a1 centerStageSupported:(char)a2 backgroundBlurSupported:(char)a3 backgroundBlurApertureSupported:(char)a4 studioLightingSupported:(char)a5 studioLightingIntensitySupported:(char)a6 reactionEffectsSupported:(char)a7 backgroundReplacementSupported:(char)a8 hasAutofocus:(char)a9;
- (long long)deviceSystem;
- (double)displayVideoZoomFactorMultiplier;
- (long long)focusMode;
- (id)hardwareUniformType;
- (char)hasFlash;
- (char)hasUltraWideCamera;
- (char)hasWideCamera;
- (id)initWithUniqueID:(id)a0 connectionID:(unsigned int)a1;
- (char)isBackgroundBlurActive;
- (char)isBackgroundReplacementActive;
- (char)isCenterStageActive;
- (char)isCenterStageRectOfInterestSupported;
- (char)isContinuityCamera;
- (char)isDeskViewCameraModeSupported:(long long)a0;
- (char)isDeviceConnected;
- (char)isDockedTrackingActive;
- (char)isExposureModeSupported:(long long)a0;
- (char)isFocusModeSupported:(long long)a0;
- (char)isHighResolutionCamera;
- (char)isInUseByAnotherApplication;
- (char)isManualFramingSupported;
- (char)isOnContinuityCamera;
- (char)isOverheadCameraModeSupported:(long long)a0;
- (char)isPortraitEffectActive;
- (char)isStudioLightActive;
- (char)isStudioLightingActive;
- (char)isTransportLayerAttachmentsDeliveryEnabled;
- (char)isWhiteBalanceModeSupported:(long long)a0;
- (long long)manualFramingDeviceType;
- (double)maxAvailableVideoZoomFactor;
- (long long)overheadCameraMode;
- (void)relinquishDeviceMaster;
- (void)removeConnectedPhotoOutput:(id)a0;
- (id)requestedBufferAttachmentsTrie;
- (id)requestedMetadataObjectTypes;
- (void)setActiveInputSource:(id)a0;
- (void)setActiveMaxExposureDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)setAutomaticallyAdjustsFeatureControls:(char)a0;
- (void)setCenterStageRectOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setDeskViewCameraMode:(long long)a0;
- (void)setExposurePointOfInterest:(struct CGPoint { double x0; double x1; })a0;
- (void)setFlashMode:(long long)a0;
- (void)setFocusMode:(long long)a0;
- (void)setFocusPointOfInterest:(struct CGPoint { double x0; double x1; })a0;
- (void)setOverheadCameraMode:(long long)a0;
- (void)setRequestedBufferAttachmentsTrie:(id)a0;
- (void)setRequestedMetadataObjectTypes:(id)a0;
- (void)setTorchMode:(long long)a0;
- (char)setTorchModeOnWithLevel:(float)a0 error:(id *)a1;
- (void)setTransportControlsPlaybackMode:(long long)a0 speed:(float)a1;
- (void)setTransportLayerAttachmentsDeliveryEnabled:(char)a0;
- (void)setVideoZoomFactor:(double)a0;
- (void)setWhiteBalanceMode:(long long)a0;
- (unsigned int)specialDeviceType;
- (char)startUsingDevice:(id *)a0;
- (unsigned long long)stereoCaptureStatus;
- (unsigned long long)stereoVideoCaptureStatus;
- (id)supportedFrameRateRangesForStream:(unsigned int)a0 formatDescription:(struct opaqueCMFormatDescription { } *)a1;
- (id)supportedMetadataObjectTypes;
- (void)updateActivelyProvidingInputCountForActiveUseState:(char)a0;
- (void)updateStreamingDeviceHistory;
- (void)updateUserPreferredCameraHistory;
- (void)updateUserPreferredCameraHistoryForKey:(id)a0;
- (void)updateUserPreferredCameraOverride:(char)a0;
- (void)updateUserPreferredCameraOverrideEligibility:(char)a0;
- (long long)whiteBalanceMode;
- (id)zoomFactorConstantsByManualFramingDeviceType;

@end

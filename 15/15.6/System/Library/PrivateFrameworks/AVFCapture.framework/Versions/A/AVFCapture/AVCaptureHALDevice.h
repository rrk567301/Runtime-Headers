@class NSString, NSArray, AVCaptureDeviceFormat_Tundra, AVCaptureDeviceInputSource_Tundra;

@interface AVCaptureHALDevice : AVCaptureDevice_Tundra {
    NSString *_uniqueID;
    unsigned int _connectionID;
    NSString *_localizedName;
    NSString *_modelID;
    NSString *_manufacturer;
    char _hidden;
    NSArray *_formats;
    AVCaptureDeviceFormat_Tundra *_activeFormat;
    NSArray *_inputSources;
    AVCaptureDeviceInputSource_Tundra *_activeInputSource;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _propertiesLock;
    struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *_physicalASBDs;
    struct OpaqueCMClock { } *_deviceClock;
    int _transportType;
}

+ (void)initialize;
+ (id)devices;
+ (id)deviceWithUniqueID:(id)a0;
+ (void)_refreshDevices;
+ (char)allowsSuspendedPreferredCameras;
+ (void)updateUserPreferredCameraOverrideHistoryWithDevice:(id)a0 setOverride:(char)a1;
+ (id)_deviceFormatWithASBD:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)a0 deviceChannelCount:(unsigned int)a1;
+ (void)_ensureDeviceList;
+ (id)cameraInfoForCreatorID:(id)a0 uniqueID:(id)a1 specialDeviceType:(unsigned int)a2 centerStageSupported:(char)a3;
+ (id)defaultDeviceWithDeviceType:(id)a0 mediaType:(id)a1 position:(long long)a2;
+ (id)defaultDeviceWithMediaType:(id)a0;
+ (void)setAllowsSuspendedPreferredCameras:(char)a0;
+ (void)setOnAllCMIOPlugInsTheUInt32Property:(unsigned int)a0 value:(unsigned int)a1;
+ (void)setUserPreferredCamera:(id)a0;
+ (void)setUserPreferredCamera:(id)a0 forClientPreferenceDomain:(id)a1;
+ (id)systemPreferredCamera;
+ (void)updateUserPreferredCameraOverride:(char)a0 cameraInfo:(id)a1;
+ (void)updateUserPreferredCameraOverrideHistoryWithDevice:(id)a0 setEligibility:(char)a1;
+ (id)userPreferredCamera;

- (void)dealloc;
- (id)init;
- (char)isHidden;
- (id)localizedName;
- (id)uniqueID;
- (unsigned int)deviceID;
- (unsigned int)connectionID;
- (id)deviceType;
- (char)isConnected;
- (int)transportType;
- (void)setConnectionID:(unsigned int)a0;
- (id)manufacturer;
- (id)formats;
- (id)modelID;
- (id)inputSources;
- (char)isAlive;
- (id)activeFormat;
- (void)setActiveFormat:(id)a0;
- (void)_refreshConnectionID:(unsigned int)a0 KVONotify:(char)a1;
- (void)_refreshPropertiesAndKVONotify:(char)a0;
- (void)stopUsingDevice;
- (char)supportsAVCaptureSessionPreset:(id)a0;
- (void)_addPropertyListeners;
- (unsigned int)_getDeviceChannelCount;
- (void)_handleDeviceIsAliveNotification:(id)a0;
- (void)_postNotificationNamed:(id)a0;
- (void)_refreshFormatsAndKVONotify:(char)a0;
- (void)_refreshInputSourcesAndKVONotify:(char)a0;
- (void)_removePropertyListeners;
- (id)activeInputSource;
- (char)becomeDeviceMaster:(id *)a0;
- (unsigned int)connectionUnitComponentSubType;
- (struct OpaqueCMClock { } *)deviceClock;
- (long long)deviceSystem;
- (id)initWithUniqueID:(id)a0 connectionID:(unsigned int)a1 isHidden:(char)a2;
- (char)isInUseByAnotherApplication;
- (void)relinquishDeviceMaster;
- (void)setActiveInputSource:(id)a0;
- (char)startUsingDevice:(id *)a0;

@end

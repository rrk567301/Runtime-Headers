@class MTLToolsObjectCache, NSString, MTLGPUBVHBuilder, NSDictionary, MTLArchitecture, MTLTargetDeviceArchitecture, NSArray;
@protocol MTLDeviceSPI;

@interface MTLToolsDevice : MTLToolsObject <MTLDeviceSPI> {
    id<MTLDeviceSPI> _deviceWrapper;
    MTLToolsObjectCache *functionHandleObjectCache;
    MTLToolsObjectCache *dynamicLibraryObjectCache;
    MTLToolsObjectCache *sourceLibraryObjectCache;
    MTLToolsObjectCache *functionObjectCache;
    MTLToolsObjectCache *depthStencilObjectCache;
    MTLToolsObjectCache *samplerObjectCache;
}

@property (readonly, getter=isLowPower) char lowPower;
@property (readonly, getter=isHeadless) char headless;
@property (readonly, getter=isDepth24Stencil8PixelFormatSupported) char depth24Stencil8PixelFormatSupported;
@property (readonly, getter=isIntegrated) char integrated;
@property (readonly) unsigned long long memorySize;
@property (readonly) unsigned long long recommendedMaxWorkingSetSize;
@property (readonly, getter=isRemovable) char removable;
@property (readonly) unsigned long long registryID;
@property (readonly) char hasUnifiedMemory;
@property (readonly) unsigned long long location;
@property (readonly) unsigned long long locationNumber;
@property (readonly) unsigned long long maxTransferRate;
@property (readonly, nonatomic) char supportsBufferlessClientStorageTexture;
@property (readonly, nonatomic) char supportsComputeMemoryBarrier;
@property (readonly, nonatomic) char supportsRenderMemoryBarrier;
@property (readonly, nonatomic) char supportsPartialRenderMemoryBarrier;
@property (readonly, nonatomic) char supportsArgumentBuffersTier2;
@property (readonly, nonatomic) char supportsReadWriteTextureArgumentsTier2;
@property (readonly, nonatomic) char supportsStreamingCodecSignaling;
@property (readonly, nonatomic) char supportsProgrammableSamplePositions;
@property (readonly, nonatomic) char supportsLargeFramebufferConfigs;
@property (readonly, nonatomic) char supportsCustomBorderColor;
@property (readonly, nonatomic) char supportsSamplerAddressModeClampToHalfBorder;
@property (readonly, nonatomic) char supportsBCTextureCompression;
@property (readonly, nonatomic) char supports3DBCTextures;
@property (readonly, nonatomic) char supportsRGBA10A2Gamma;
@property (readonly, nonatomic) char supportsBGR10A2;
@property (readonly, nonatomic) char supportsPrimitiveRestartOverride;
@property (readonly, nonatomic) char supportsGlobalVariableRelocation;
@property (readonly, nonatomic) char supportsGlobalVariableRelocationRender;
@property (readonly, nonatomic) char supportsGlobalVariableRelocationCompute;
@property (readonly, nonatomic) char supportsTLS;
@property (readonly, nonatomic) char supportsGlobalVariableBindings;
@property (readonly, nonatomic) char supportsGlobalVariableBindingInDylibs;
@property (readonly, nonatomic) char supports32bpcMSAATextures;
@property (readonly, nonatomic) char supports32BitMSAA;
@property (readonly, nonatomic) char supports32BitFloatFiltering;
@property (readonly, nonatomic) char supportsQueryTextureLOD;
@property (readonly, nonatomic) char supportsVertexAmplification;
@property (readonly, nonatomic) char supportsSamplerReductionMode;
@property (readonly, nonatomic) char supportsPlacementHeaps;
@property (readonly, nonatomic) char supportsOpenCLTextureWriteSwizzles;
@property (readonly, nonatomic) char supportsPullModelInterpolation;
@property (readonly, nonatomic) char supportsInt64;
@property (readonly, nonatomic) char supportsFixedLinePointFillDepthGradient;
@property (readonly, nonatomic) char supportsLateEvalEvent;
@property (readonly, nonatomic) char supportsNonZeroTextureWriteLOD;
@property (readonly, nonatomic) char supportsSharedTextureHandles;
@property (readonly, nonatomic) char supportsBufferPrefetchStatistics;
@property (readonly, nonatomic) char supportsLimitedYUVFormats;
@property (readonly, nonatomic) char supportsNonPrivateDepthStencilTextures;
@property (readonly, nonatomic) char supportsNonPrivateMSAATextures;
@property (readonly, nonatomic) char supportsSharedStorageHeapResources;
@property (readonly, nonatomic) char supportsSharedStorageTextures;
@property (readonly, nonatomic) char supportsLinearTextureFromSharedBuffer;
@property (readonly, nonatomic) char supportsPipelineLibraries;
@property (readonly, nonatomic) char supportsFragmentOnlyEncoders;
@property (readonly, nonatomic) char supportsBufferWithIOSurface;
@property (readonly, nonatomic) char supportsProgrammableBlending;
@property (readonly, nonatomic) char supportsRenderToLinearTextures;
@property (readonly, nonatomic) char supportsMemorylessRenderTargets;
@property (readonly, nonatomic) char supportsFastMathInfNaNPropagation;
@property (readonly, nonatomic) char supportsInvariantVertexPosition;
@property (readonly, nonatomic) char supportsShaderLODAverage;
@property (readonly, nonatomic) char supportsRelaxedTextureViewRequirements;
@property (readonly, nonatomic) char supportsSeparateDepthStencil;
@property (readonly, nonatomic) char supportsGPUStatistics;
@property (readonly, nonatomic) char supportsCompressedTextureViewSPI;
@property (readonly, nonatomic) char supportsRenderTargetTextureRotation;
@property (readonly, nonatomic) char supportsDynamicControlPointCount;
@property (readonly, nonatomic) char supportsIABHashForTools;
@property (readonly, nonatomic) char supportsBinaryArchives;
@property (readonly, nonatomic) char supportsBinaryLibraries;
@property (readonly, nonatomic) char supportsDeadlineProfile;
@property (readonly, nonatomic) char supportsFillTexture;
@property (readonly, nonatomic) char supportsSetThreadgroupPackingDisabled;
@property (readonly, nonatomic) char supportsASTCTextureCompression;
@property (readonly, nonatomic) char supportsExtendedYUVFormats;
@property (readonly, nonatomic) char supportsPublicXR10Formats;
@property (readonly, nonatomic) char supportsSRGBwrites;
@property (readonly, nonatomic) char supportsDepthClipMode;
@property (readonly, nonatomic) char supportsResourceHeaps;
@property (readonly, nonatomic) char supportsArgumentBuffers;
@property (readonly, nonatomic) char supportsPacked32TextureBufferWrites;
@property (readonly, nonatomic) char supports3DASTCTextures;
@property (readonly, nonatomic) char supportsExtendedXR10Formats;
@property (readonly, nonatomic) char supportsFragmentBufferWrites;
@property (readonly, nonatomic) char supportsCountingOcclusionQuery;
@property (readonly, nonatomic) char supportsBaseVertexInstanceDrawing;
@property (readonly, nonatomic) char supportsIndirectDrawAndDispatch;
@property (readonly, nonatomic) char supportsTessellation;
@property (readonly, nonatomic) char supportsReadWriteBufferArguments;
@property (readonly, nonatomic) char supportsArrayOfTextures;
@property (readonly, nonatomic) char supportsArrayOfSamplers;
@property (readonly, nonatomic) char supportsCombinedMSAAStoreAndResolveAction;
@property (readonly, nonatomic) char supportsMutableTier1ArgumentBuffers;
@property (readonly, nonatomic) char supportsSamplerCompareFunction;
@property (readonly, nonatomic) char supportsMSAADepthResolve;
@property (readonly, nonatomic) char supportsMSAAStencilResolve;
@property (readonly, nonatomic) char supportsMSAADepthResolveFilter;
@property (readonly, nonatomic) char supportsGFXIndirectCommandBuffers;
@property (readonly, nonatomic) char supportsCMPIndirectCommandBuffers;
@property (readonly, nonatomic) char supportsIndirectStageInRegion;
@property (readonly, nonatomic) char supportsIndirectTextures;
@property (readonly, nonatomic) char supportsNorm16BCubicFiltering;
@property (readonly, nonatomic) char supportsTextureOutOfBoundsReads;
@property (readonly, nonatomic) char supportsTextureSwizzle;
@property (readonly, nonatomic) char supportsAlphaYUVFormats;
@property (readonly, nonatomic) char supportsMemoryOrderAtomics;
@property (readonly, nonatomic) char supportsQuadGroup;
@property (readonly, nonatomic) char supportsRenderTextureWrites;
@property (readonly, nonatomic) char supportsImageBlocks;
@property (readonly, nonatomic) char supportsTileShaders;
@property (readonly, nonatomic) char supportsImageBlockSampleCoverageControl;
@property (readonly, nonatomic) char supportsNativeHardwareFP16;
@property (readonly, nonatomic) char supportsPostDepthCoverage;
@property (readonly, nonatomic) char supportsMipLevelsSmallerThanBlockSize;
@property (readonly, nonatomic) char supportsNonUniformThreadgroupSize;
@property (readonly, nonatomic) char supportsReadWriteTextureArguments;
@property (readonly, nonatomic) char supportsReadWriteTextureCubeArguments;
@property (readonly, nonatomic) char supportsTextureCubeArray;
@property (readonly, nonatomic) char supportsQuadShufflesAndBroadcast;
@property (readonly, nonatomic) char supportsConcurrentComputeDispatch;
@property (readonly, nonatomic) char supportsRenderPassWithoutRenderTarget;
@property (readonly, nonatomic) char supportsRasterOrderGroups;
@property (readonly, nonatomic) char supportsRasterOrderGroupsColorAttachment;
@property (readonly, nonatomic) char supportsDynamicAttributeStride;
@property (readonly, nonatomic) char supportsLinearTexture2DArray;
@property (readonly, nonatomic) char supportsNonSquareTileShaders;
@property (readonly, nonatomic) char supportsSeparateVisibilityAndShadingRate;
@property (readonly, nonatomic) char supports2DLinearTexArraySPI;
@property (readonly, nonatomic) char supportsLayeredRendering;
@property (readonly, nonatomic) char supportsViewportAndScissorArray;
@property (readonly, nonatomic) char supportsIndirectTessellation;
@property (readonly, nonatomic) char supportsMSAAStencilResolveFilter;
@property (readonly, nonatomic) char supportsStencilFeedback;
@property (readonly, nonatomic) char supportsFP32TessFactors;
@property (readonly, nonatomic) char supportsUnalignedVertexFetch;
@property (readonly, nonatomic) char supportsExtendedVertexFormats;
@property (readonly, nonatomic) char supportsResourceDetachBacking;
@property (readonly, nonatomic) char supportsBufferWithAddressRanges;
@property (readonly, nonatomic) char supportsHeapWithAddressRanges;
@property (readonly, nonatomic) char supportsSIMDGroup;
@property (readonly, nonatomic) char supportsShaderMinLODClamp;
@property (readonly, nonatomic) char supportsSIMDShufflesAndBroadcast;
@property (readonly, nonatomic) char supportsWritableArrayOfTextures;
@property (readonly, nonatomic) char supportsVariableRateRasterization;
@property (readonly, nonatomic) char supportsYCBCRFormats;
@property (readonly, nonatomic) char supportsYCBCRFormatsPQ;
@property (readonly, nonatomic) char supportsYCBCRFormats12;
@property (readonly, nonatomic) char supportsYCBCRFormatsXR;
@property (readonly, nonatomic) char supportsASTCHDRTextureCompression;
@property (readonly, nonatomic) char supportsSparseTextures;
@property (readonly, nonatomic) char supportsSparseHeaps;
@property (readonly, nonatomic) char supportsIndirectWritableTextures;
@property (readonly, nonatomic) char supportsFunctionPointers;
@property (readonly, nonatomic) char supportsDynamicLibraries;
@property (readonly, nonatomic) char supportsStatefulDynamicLibraries;
@property (readonly, nonatomic) char supportsRenderDynamicLibraries;
@property (readonly, nonatomic) char supportsFunctionPointersFromRender;
@property (readonly, nonatomic) char supportsSharedFunctionTables;
@property (readonly, nonatomic) char supportsRaytracingFromRender;
@property (readonly, nonatomic) char supportsPrimitiveMotionBlur;
@property (readonly, nonatomic) char supportsRayTracingExtendedVertexFormats;
@property (readonly, nonatomic) char supportsHeapAccelerationStructureAllocation;
@property (readonly, nonatomic) char supportsRayTracingPerPrimitiveData;
@property (readonly, nonatomic) char supportsRayTracingTraversalMetrics;
@property (readonly, nonatomic) char supportsRayTracingBuffersFromTables;
@property (readonly, nonatomic) char supportsRayTracingAccelerationStructureCPUDeserialization;
@property (readonly, nonatomic) char supportsRayTracingMultiLevelInstancing;
@property (readonly, nonatomic) char supportsRayTracingIndirectInstanceAccelerationStructureBuild;
@property (readonly, nonatomic) char supportsRayTracingGPUTableUpdateBuffers;
@property (readonly, nonatomic) char supportsRayTracingCurves;
@property (readonly, nonatomic) char supportsShaderBarycentricCoordinates;
@property (readonly, nonatomic) char supportsBlackOrWhiteSamplerBorderColors;
@property (readonly, nonatomic) char supportsMirrorClampToEdgeSamplerMode;
@property (readonly, nonatomic) char supportsSIMDReduction;
@property (readonly, nonatomic) char supportsDepthClipModeClampExtended;
@property (readonly, nonatomic) char supportsTexture2DMultisampleArray;
@property (readonly, nonatomic) char supportsForceSeamsOnCubemaps;
@property (readonly, nonatomic) char supportsFloat16BCubicFiltering;
@property (readonly, nonatomic) char supportsFloat16InfNanFiltering;
@property (readonly, nonatomic) char supportsRTZRounding;
@property (readonly, nonatomic) char supportsAnisoSampleFix;
@property (readonly, nonatomic) char supportsYCBCRPackedFormatsPQ;
@property (readonly, nonatomic) char supportsYCBCRPackedFormats12;
@property (readonly, nonatomic) char supportsYCBCRPackedFormatsXR;
@property (readonly, nonatomic) char supportsBufferBoundsChecking;
@property (readonly, nonatomic) char supportsForkJoin;
@property (readonly, nonatomic) char supportsDevicePartitioning;
@property (readonly, nonatomic) char supportsComputeCompressedTextureWrite;
@property (readonly, nonatomic) char supportsSIMDGroupMatrix;
@property (readonly, nonatomic) char supportsInterchangeTiled;
@property (readonly, nonatomic) char supportsQuadReduction;
@property (readonly, nonatomic) char supportsVirtualSubstreams;
@property (readonly, nonatomic) char supportsSIMDShuffleAndFill;
@property (readonly, nonatomic) char supportsBfloat16Format;
@property (readonly, nonatomic) char supportsSparseDepthAttachments;
@property (readonly, nonatomic) char supportsAtomicUlongVoidMinMax;
@property (readonly, nonatomic) char supportsLossyCompression;
@property (readonly, nonatomic) char supportsAtomicFloat;
@property (readonly, nonatomic) char supportsMeshShaders;
@property (readonly, nonatomic) char supportsFunctionPointersFromMesh;
@property (readonly, nonatomic) char supportsMeshShadersInICB;
@property (readonly, nonatomic) char supportsMeshRenderDynamicLibraries;
@property (readonly, nonatomic) char supportsBfloat16Buffers;
@property (readonly, nonatomic) char supportsCommandBufferJump;
@property (readonly, nonatomic) char supportsColorSpaceConversionMatrixSelection;
@property (readonly, nonatomic) char supportsPerPlaneCompression;
@property (readonly, nonatomic) char supportsConditionalLoadStore;
@property (readonly, nonatomic) char supportsStackOverflowErrorCode;
@property (readonly, nonatomic) char supportsRayTracingICBs;
@property (readonly, nonatomic) char supportsPerformanceStateAssertion;
@property (readonly, nonatomic) char supportsExplicitVisibilityGroups;
@property (readonly, nonatomic) char supportsRayTracingMatrixLayout;
@property (readonly, nonatomic) char supportsRayTracingDirectIntersectionResultAccess;
@property (readonly, nonatomic) char supportsRayTracingPerComponentMotionInterpolation;
@property (readonly, nonatomic) char supportsExtendedSamplerLODBiasRange;
@property (readonly, nonatomic) char supportsDeviceCoherency;
@property (readonly) unsigned long long bufferRobustnessSupport;
@property (readonly) unsigned long long deviceCreationFlags;
@property (getter=areGPUAssertionsEnabled, setter=setGPUAssertionsEnabled:) char gpuAssertionsEnabled;
@property (getter=areWritableHeapsEnabled, setter=setWritableHeapsEnabled:) char writableHeapsEnabled;
@property (nonatomic) unsigned long long commandBufferErrorOptions;
@property (readonly, getter=isBCTextureCompressionSupported) char BCTextureCompressionSupported;
@property (readonly) const struct MTLTargetDeviceArch { unsigned long long x0; unsigned int x1; char *x2; } *targetDeviceInfo;
@property (readonly) MTLTargetDeviceArchitecture *targetDeviceArchitecture;
@property char shaderDebugInfoCaching;
@property (readonly, getter=isSystemDefaultDevice) char systemDefaultDevice;
@property (readonly, getter=isASTCPixelFormatsSupported) char ASTCPixelFormatsSupported;
@property (readonly, getter=isFramebufferReadSupported) char framebufferReadSupported;
@property (readonly, getter=isMagicMipmapSupported) char magicMipmapSupported;
@property (readonly) unsigned long long halfFPConfig;
@property (readonly) unsigned long long singleFPConfig;
@property (readonly) unsigned long long doubleFPConfig;
@property (nonatomic) char metalAssertionsEnabled;
@property (readonly) unsigned long long featureProfile;
@property (readonly) const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; unsigned int x25; float x26; float x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; unsigned int x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; unsigned int x56; unsigned int x57; unsigned int x58; unsigned int x59; unsigned int x60; unsigned int x61; unsigned int x62; unsigned int x63; unsigned long long x64; } *limits;
@property (readonly) unsigned long long maxFramebufferStorageBits;
@property (readonly) unsigned long long linearTextureArrayAlignmentBytes;
@property (readonly) unsigned long long linearTextureArrayAlignmentSlice;
@property (readonly) unsigned long long maxTileBuffers;
@property (readonly) unsigned long long maxTileTextures;
@property (readonly) unsigned long long maxTileSamplers;
@property (readonly) unsigned long long maxTileInlineDataSize;
@property (readonly) unsigned long long minTilePixels;
@property (readonly) unsigned long long maxColorAttachments;
@property (readonly) unsigned long long maxVertexAttributes;
@property (readonly) unsigned long long maxVertexBuffers;
@property (readonly) unsigned long long maxVertexTextures;
@property (readonly) unsigned long long maxVertexSamplers;
@property (readonly) unsigned long long maxVertexInlineDataSize;
@property (readonly) unsigned long long maxInterpolants;
@property (readonly) unsigned long long maxFragmentBuffers;
@property (readonly) unsigned long long maxFragmentTextures;
@property (readonly) unsigned long long maxFragmentSamplers;
@property (readonly) unsigned long long maxFragmentInlineDataSize;
@property (readonly) unsigned long long maxComputeBuffers;
@property (readonly) unsigned long long maxComputeTextures;
@property (readonly) unsigned long long maxComputeSamplers;
@property (readonly) unsigned long long maxComputeInlineDataSize;
@property (readonly) unsigned long long maxComputeLocalMemorySizes;
@property (readonly) unsigned long long maxTotalComputeThreadsPerThreadgroup;
@property (readonly) unsigned long long maxComputeThreadgroupMemory;
@property (readonly) float maxLineWidth;
@property (readonly) float maxPointSize;
@property (readonly) unsigned long long maxVisibilityQueryOffset;
@property (readonly) unsigned long long minConstantBufferAlignmentBytes;
@property (readonly) unsigned long long minBufferNoCopyAlignmentBytes;
@property (readonly) unsigned long long maxTextureWidth1D;
@property (readonly) unsigned long long maxTextureWidth2D;
@property (readonly) unsigned long long maxTextureHeight2D;
@property (readonly) unsigned long long maxTextureWidth3D;
@property (readonly) unsigned long long maxTextureHeight3D;
@property (readonly) unsigned long long maxTextureDepth3D;
@property (readonly) unsigned long long maxTextureDimensionCube;
@property (readonly) unsigned long long maxTextureLayers;
@property (readonly) unsigned long long linearTextureAlignmentBytes;
@property (readonly) unsigned long long iosurfaceTextureAlignmentBytes;
@property (readonly) unsigned long long iosurfaceReadOnlyTextureAlignmentBytes;
@property (readonly) unsigned long long deviceLinearTextureAlignmentBytes;
@property (readonly) unsigned long long deviceLinearReadOnlyTextureAlignmentBytes;
@property (readonly) unsigned long long maxFunctionConstantIndices;
@property (readonly) unsigned long long maxComputeThreadgroupMemoryAlignmentBytes;
@property (readonly) unsigned long long maxInterpolatedComponents;
@property (readonly) unsigned long long maxTessellationFactor;
@property (readonly) unsigned long long maxIndirectBuffers;
@property (readonly) unsigned long long maxIndirectTextures;
@property (readonly) unsigned long long maxIndirectSamplers;
@property (readonly) unsigned long long maxIndirectSamplersPerDevice;
@property (readonly) unsigned long long maxFenceInstances;
@property (readonly) unsigned long long maxViewportCount;
@property (readonly) unsigned long long maxCustomSamplePositions;
@property (readonly) unsigned long long maxVertexAmplificationFactor;
@property (readonly) unsigned long long maxVertexAmplificationCount;
@property (readonly) unsigned long long maxTextureBufferWidth;
@property (readonly) unsigned long long maxComputeAttributes;
@property (readonly) unsigned long long maxIOCommandsInFlight;
@property (readonly) unsigned long long maxPredicatedNestingDepth;
@property (readonly) unsigned long long maxAccelerationStructureLevels;
@property (readonly) unsigned long long maxConstantBufferArguments;
@property (readonly) unsigned int acceleratorPort;
@property (readonly) char supportPriorityBand;
@property (readonly) unsigned long long sharedMemorySize;
@property (readonly) unsigned long long dedicatedMemorySize;
@property (readonly) unsigned long long currentCommandQueueCount;
@property (readonly) unsigned long long commandQueueLimit;
@property (readonly) struct IndirectArgumentBufferCapabilities { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned int x3 : 29; } indirectArgumentBufferCapabilities;
@property (readonly, getter=isQuadDataSharingSupported) char quadDataSharingSupported;
@property (readonly) unsigned long long sparseTexturesSupport;
@property (readonly, getter=isFloat32FilteringSupported) char float32FilteringSupported;
@property (readonly, getter=isMsaa32bSupported) char msaa32bSupported;
@property (readonly, getter=isRTZRoundingSupported) char RTZRoundingSupported;
@property (readonly) long long defaultTextureWriteRoundingMode;
@property (readonly, getter=isAnisoSampleFixSupported) char AnisoSampleFixSupported;
@property (readonly, getter=isFixedLinePointFillDepthGradientSupported) char FixedLinePointFillDepthGradientSupported;
@property (readonly) unsigned long long samplerReductionModeSupport;
@property (readonly, getter=isLargeMRTSupported) char largeMRTSupported;
@property (readonly) unsigned long long maxRasterizationRateLayerCount;
@property (readonly, getter=isRGB10A2GammaSupported) char RGB10A2GammaSupported;
@property (readonly, getter=isCustomBorderColorSupported) char CustomBorderColorSupported;
@property (readonly, getter=isClampToHalfBorderSupported) char ClampToHalfBorderSupported;
@property (readonly, getter=isPlacementHeapSupported) char placementHeapSupported;
@property (readonly) MTLGPUBVHBuilder *GPUBVHBuilder;
@property (readonly) char requiresRaytracingEmulation;
@property (readonly) unsigned long long latestSupportedGenericBVHVersion;
@property (copy, nonatomic) NSDictionary *pluginData;
@property (readonly) char requiresMeshShaderEmulation;
@property (readonly, nonatomic) long long currentPerformanceState;
@property (readonly) unsigned long long maxConcurrentExecutingCompilationTasks;
@property (readonly) unsigned long long maxAccelerationStructureTraversalDepth;
@property (readonly) char requiresBFloat16Emulation;
@property (readonly) NSString *name;
@property (readonly) MTLArchitecture *architecture;
@property (readonly) struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } maxThreadsPerThreadgroup;
@property (readonly) unsigned long long readWriteTextureSupport;
@property (readonly) unsigned long long argumentBuffersSupport;
@property (readonly, getter=areRasterOrderGroupsSupported) char rasterOrderGroupsSupported;
@property (readonly, getter=areBarycentricCoordsSupported) char barycentricCoordsSupported;
@property (readonly) unsigned long long currentAllocatedSize;
@property (readonly) unsigned long long maxThreadgroupMemoryLength;
@property (readonly) unsigned long long maxArgumentBufferSamplerCount;
@property (readonly, getter=areProgrammableSamplePositionsSupported) char programmableSamplePositionsSupported;
@property (readonly) unsigned long long peerGroupID;
@property (readonly) unsigned int peerIndex;
@property (readonly) unsigned int peerCount;
@property (readonly) unsigned long long sparseTileSizeInBytes;
@property (readonly) unsigned long long maxBufferLength;
@property (readonly) NSArray *counterSets;
@property (readonly) char supportsRaytracing;
@property char shouldMaximizeConcurrentCompilation;
@property (readonly) unsigned long long maximumConcurrentCompilationTaskCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)newTextureDescriptorFromIOSurface:(struct __IOSurface { } *)a0;
+ (id)newTextureDescriptorFromIOSurfaceProperties:(id)a0;

- (void)dealloc;
- (char)respondsToSelector:(SEL)a0;
- (void).cxx_destruct;
- (id)vendorName;
- (id)newCommandQueue;
- (id)newDynamicLibraryFromURL:(id)a0 error:(id *)a1;
- (id)newIndirectCommandBufferWithDescriptor:(id)a0 maxCommandCount:(unsigned long long)a1 options:(unsigned long long)a2;
- (void)newRenderPipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (char)supportsFamily:(long long)a0;
- (id)getDynamicLibraryForBaseObject:(id)a0;
- (id)newBufferWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 options:(unsigned long long)a2 gpuAddress:(unsigned long long)a3 deallocator:(id /* block */)a4;
- (id)newComputePipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (id)newDynamicLibraryWithURL:(id)a0 error:(id *)a1;
- (id)newLibraryWithDescriptor:(id)a0 error:(id *)a1;
- (id)newSharedTextureWithDescriptor:(id)a0;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })tileSizeWithSparsePageSize:(long long)a0 textureType:(unsigned long long)a1 pixelFormat:(unsigned long long)a2 sampleCount:(unsigned long long)a3;
- (id)_deviceWrapper;
- (char)_registerInterestNotification;
- (void)_removeRequested;
- (void)_setDeviceWrapper:(id)a0;
- (void)_wasRemoved;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })accelerationStructureSizesWithDescriptor:(id)a0;
- (void)allowLibrariesFromOtherPlatforms;
- (void)compilerPropagatesThreadPriority:(BOOL)a0;
- (void)convertSparsePixelRegions:(const struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; } *)a0 toTileRegions:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; } *)a1 withTileSize:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a2 alignmentMode:(unsigned long long)a3 numRegions:(unsigned long long)a4;
- (void)convertSparseTileRegions:(const struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; } *)a0 toPixelRegions:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; } *)a1 withTileSize:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a2 numRegions:(unsigned long long)a3;
- (id)copyIOSurfaceSharedTextureProperties:(id)a0;
- (unsigned long long)debugPipelineOptions:(unsigned long long)a0 includePipelinePerfStats:(char)a1;
- (void)deserializeInstanceAccelerationStructure:(id)a0 fromBytes:(const void *)a1 primitiveAccelerationStructures:(id)a2 withDescriptor:(id)a3;
- (id)deserializeInstanceAccelerationStructureFromBytes:(void *)a0 primitiveAccelerationStructures:(id)a1 withDescriptor:(id)a2;
- (void)deserializePrimitiveAccelerationStructure:(id)a0 fromBytes:(const void *)a1 withDescriptor:(id)a2;
- (id)deserializePrimitiveAccelerationStructureFromBytes:(void *)a0 withDescriptor:(id)a1;
- (char)deviceOrFeatureProfileSupportsFeatureSet:(unsigned long long)a0;
- (char)deviceSupportsFeatureSet:(unsigned long long)a0;
- (id)endCollectingPipelineDescriptors;
- (id)familyName;
- (struct MTLCompilerConnectionManager { } *)getCompilerConnectionManager:(int)a0;
- (void)getDefaultSamplePositions:(struct { float x0; float x1; } *)a0 count:(unsigned long long)a1;
- (id)getDepthStencilStateForBaseObject:(id)a0 descriptor:(id)a1;
- (id)getFunctionForBaseObject:(id)a0 library:(id)a1;
- (id)getMostCompatibleArchitecture:(id)a0;
- (id)getSamplerStateForBaseObject:(id)a0 descriptor:(id)a1;
- (void *)getShaderCacheKeys;
- (unsigned long long)getSupportedCommandBufferErrorOptions;
- (int)getSurfaceMode:(unsigned long long *)a0 width:(unsigned int *)a1 height:(unsigned int *)a2 forId:(unsigned int)a3;
- (struct { unsigned long long x0; unsigned long long x1; })heapAccelerationStructureSizeAndAlignWithDescriptor:(id)a0;
- (struct { unsigned long long x0; unsigned long long x1; })heapAccelerationStructureSizeAndAlignWithSize:(unsigned long long)a0;
- (struct { unsigned long long x0; unsigned long long x1; })heapBufferSizeAndAlignWithLength:(unsigned long long)a0 options:(unsigned long long)a1;
- (struct { unsigned long long x0; unsigned long long x1; })heapTextureSizeAndAlignWithDescriptor:(id)a0;
- (id)initWithBaseObject:(id)a0 parent:(id)a1;
- (char)isCompatibleWithAccelerationStructure:(struct { unsigned int x0; unsigned int x1; })a0;
- (char)isVendorSliceCompatibleWithDeploymentTarget:(unsigned int)a0 platform:(unsigned int)a1 sdkVersion:(unsigned int)a2 compilerPluginVersion:(unsigned int)a3;
- (struct { unsigned int x0; unsigned int x1; })libraryCacheStats;
- (id)loadDynamicLibrariesForComputeDescriptor:(id)a0 error:(id *)a1;
- (id)loadDynamicLibrariesForComputeDescriptor:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (id)loadDynamicLibrariesForFunction:(id)a0 insertLibraries:(id)a1 error:(id *)a2;
- (id)loadDynamicLibrariesForFunction:(id)a0 insertLibraries:(id)a1 options:(unsigned long long)a2 error:(id *)a3;
- (id)lookupRecompiledBinaryArchive:(id)a0;
- (char)mapShaderSampleBufferWithBuffer:(struct { unsigned int x0; unsigned int x1; unsigned int x2; } *)a0 capacity:(unsigned long long)a1 size:(unsigned long long)a2;
- (unsigned int)maximumComputeSubstreams;
- (unsigned long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)a0;
- (unsigned long long)minLinearTextureBaseAddressAlignmentForDescriptor:(id)a0;
- (unsigned long long)minLinearTexturePitchAlignmentForDescriptor:(id)a0 mustMatchExactly:(unsigned long long *)a1;
- (unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)a0;
- (unsigned long long)minimumTextureBufferAlignmentForPixelFormat:(unsigned long long)a0;
- (id)motionEstimatorCapabilities;
- (id)newAccelerationStructureWithBuffer:(id)a0 offset:(unsigned long long)a1;
- (id)newAccelerationStructureWithBuffer:(id)a0 offset:(unsigned long long)a1 resourceIndex:(unsigned long long)a2;
- (id)newAccelerationStructureWithDescriptor:(id)a0;
- (id)newAccelerationStructureWithSize:(unsigned long long)a0;
- (id)newAccelerationStructureWithSize:(unsigned long long)a0 resourceIndex:(unsigned long long)a1;
- (id)newAccelerationStructureWithSize:(unsigned long long)a0 withDescriptor:(id)a1;
- (id)newArgumentEncoderWithArguments:(id)a0;
- (id)newArgumentEncoderWithArguments:(id)a0 structType:(id *)a1;
- (id)newArgumentEncoderWithBufferBinding:(id)a0;
- (id)newArgumentEncoderWithLayout:(id)a0;
- (id)newBinaryArchiveWithDescriptor:(id)a0 error:(id *)a1;
- (id)newBinaryLibraryWithOptions:(unsigned long long)a0 url:(id)a1 error:(id *)a2;
- (id)newBufferWithBytes:(const void *)a0 length:(unsigned long long)a1 options:(unsigned long long)a2;
- (id)newBufferWithBytes:(const void *)a0 length:(unsigned long long)a1 options:(unsigned long long)a2 gpuAddress:(unsigned long long)a3;
- (id)newBufferWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 options:(unsigned long long)a2 deallocator:(id /* block */)a3;
- (id)newBufferWithDescriptor:(id)a0;
- (id)newBufferWithIOSurface:(struct __IOSurface { } *)a0;
- (id)newBufferWithLength:(unsigned long long)a0 options:(unsigned long long)a1;
- (id)newBufferWithLength:(unsigned long long)a0 options:(unsigned long long)a1 gpuAddress:(unsigned long long)a2;
- (id)newCommandQueueWithDescriptor:(id)a0;
- (id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)a0;
- (id)newComputePipelineDescriptorWithSerializedData:(id)a0 deserializationContext:(id)a1;
- (void)newComputePipelineStateWithDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newComputePipelineStateWithDescriptor:(id)a0 error:(id *)a1;
- (void)newComputePipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)newComputePipelineStateWithFunction:(id)a0 completionHandler:(id /* block */)a1;
- (id)newComputePipelineStateWithFunction:(id)a0 error:(id *)a1;
- (void)newComputePipelineStateWithFunction:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)newComputePipelineStateWithFunction:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (id)newComputePipelineStateWithImageFilterFunctionsSPI:(id)a0 imageFilterFunctionInfo:(const struct { BOOL x0; unsigned long long x1; struct *x2; } *)a1 error:(id *)a2;
- (id)newCounterSampleBufferWithDescriptor:(id)a0 error:(id *)a1;
- (id)newDagStringWithGraphs:(id)a0;
- (id)newDefaultLibrary;
- (id)newDefaultLibraryWithBundle:(id)a0 error:(id *)a1;
- (id)newDepthStencilStateWithDescriptor:(id)a0;
- (id)newDynamicLibrary:(id)a0 computeDescriptor:(id)a1 error:(id *)a2;
- (id)newDynamicLibrary:(id)a0 error:(id *)a1;
- (id)newDynamicLibraryWithDescriptor:(id)a0 error:(id *)a1;
- (id)newDynamicLibraryWithURL:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (id)newEvent;
- (id)newEventWithOptions:(long long)a0;
- (id)newFence;
- (id)newFunctionWithGLCoreIR:(void *)a0 functionType:(unsigned long long)a1;
- (id)newFunctionWithGLCoreIR:(void *)a0 inputsDescription:(id)a1 functionType:(unsigned long long)a2;
- (id)newFunctionWithGLESIR:(void *)a0 functionType:(unsigned long long)a1;
- (id)newFunctionWithGLESIR:(void *)a0 inputsDescription:(id)a1 functionType:(unsigned long long)a2;
- (id)newFunctionWithGLIR:(void *)a0 functionType:(unsigned long long)a1;
- (id)newFunctionWithGLIR:(void *)a0 inputsDescription:(id)a1 functionType:(unsigned long long)a2;
- (id)newGLDrawable;
- (id)newHeapWithDescriptor:(id)a0;
- (id)newIOCommandQueueWithDescriptor:(id)a0 error:(id *)a1;
- (id)newIOFileHandleWithURL:(id)a0 compressionMethod:(long long)a1 error:(id *)a2;
- (id)newIOFileHandleWithURL:(id)a0 error:(id *)a1;
- (id)newIOHandleWithURL:(id)a0 compressionMethod:(long long)a1 error:(id *)a2;
- (id)newIOHandleWithURL:(id)a0 compressionType:(long long)a1 error:(id *)a2;
- (id)newIOHandleWithURL:(id)a0 error:(id *)a1;
- (id)newIndirectArgumentBufferLayoutWithStructType:(id)a0;
- (id)newIndirectArgumentEncoderWithLayout:(id)a0;
- (id)newIndirectCommandBufferWithDescriptor:(id)a0 maxCount:(unsigned long long)a1 options:(unsigned long long)a2;
- (id)newIndirectComputeCommandEncoderWithBuffer:(id)a0;
- (id)newIndirectRenderCommandEncoderWithBuffer:(id)a0;
- (id)newIntersectionFunctionTableWithDescriptor:(id)a0;
- (id)newLateEvalEvent;
- (id)newLibraryWithCIFilters:(id)a0 imageFilterFunctionInfo:(const struct { BOOL x0; unsigned long long x1; struct *x2; } *)a1 error:(id *)a2;
- (id)newLibraryWithCIFiltersForComputePipeline:(id)a0 imageFilterFunctionInfo:(const struct { BOOL x0; unsigned long long x1; struct *x2; } *)a1 error:(id *)a2;
- (id)newLibraryWithDAG:(id)a0 functions:(id)a1 error:(id *)a2;
- (id)newLibraryWithData:(id)a0 error:(id *)a1;
- (void)newLibraryWithDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newLibraryWithDescriptorSPI:(id)a0 error:(id *)a1;
- (id)newLibraryWithFile:(id)a0 error:(id *)a1;
- (id)newLibraryWithImageFilterFunctionsSPI:(id)a0 imageFilterFunctionInfo:(const struct { BOOL x0; unsigned long long x1; struct *x2; } *)a1 error:(id *)a2;
- (void)newLibraryWithSource:(id)a0 options:(id)a1 completionHandler:(id /* block */)a2;
- (id)newLibraryWithSource:(id)a0 options:(id)a1 error:(id *)a2;
- (void)newLibraryWithStitchedDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newLibraryWithStitchedDescriptor:(id)a0 error:(id *)a1;
- (id)newLibraryWithStitchedDescriptorSPI:(id)a0 error:(id *)a1;
- (id)newLibraryWithURL:(id)a0 error:(id *)a1;
- (id)newLogStateWithDescriptor:(id)a0 error:(id *)a1;
- (id)newMotionEstimationPipelineWithDescriptor:(id)a0;
- (id)newPerformanceStateAssertion:(long long)a0 error:(id *)a1;
- (id)newPipelineLibraryWithFilePath:(id)a0 error:(id *)a1;
- (void)newPrecompiledComputePipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 pipelineCache:(id)a2 completionHandler:(id /* block */)a3;
- (void)newPrecompiledRenderPipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 pipelineCache:(id)a2 completionHandler:(id /* block */)a3;
- (id)newProfileWithExecutionSize:(unsigned long long)a0;
- (id)newRasterizationRateMapWithDescriptor:(id)a0;
- (id)newRemoteBufferView:(id)a0 parentBuffer:(id)a1;
- (id)newRemoteTextureView:(id)a0 parentTexture:(id)a1;
- (id)newRenderPipelineDescriptorWithSerializedData:(id)a0 deserializationContext:(id)a1;
- (void)newRenderPipelineStateWithDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newRenderPipelineStateWithDescriptor:(id)a0 error:(id *)a1;
- (id)newRenderPipelineStateWithDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (void)newRenderPipelineStateWithMeshDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newRenderPipelineStateWithMeshDescriptor:(id)a0 error:(id *)a1;
- (void)newRenderPipelineStateWithMeshDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)newRenderPipelineStateWithMeshDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (void)newRenderPipelineStateWithTileDescriptor:(id)a0 completionHandler:(id /* block */)a1;
- (id)newRenderPipelineStateWithTileDescriptor:(id)a0 error:(id *)a1;
- (void)newRenderPipelineStateWithTileDescriptor:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (id)newRenderPipelineStateWithTileDescriptor:(id)a0 options:(unsigned long long)a1 reflection:(id *)a2 error:(id *)a3;
- (id)newResidencySetWithDescriptor:(id)a0 error:(id *)a1;
- (id)newResourceGroupFromResources:(const id *)a0 count:(unsigned long long)a1;
- (id)newSamplerStateWithDescriptor:(id)a0;
- (id)newSharedEvent;
- (id)newSharedEventWithHandle:(id)a0;
- (id)newSharedEventWithMachPort:(unsigned int)a0;
- (id)newSharedEventWithOptions:(long long)a0;
- (id)newSharedTextureWithHandle:(id)a0;
- (id)newSharedTextureWithHandle:(id)a0 withResourceIndex:(unsigned long long)a1;
- (id)newStructTypeWithSerializedData:(id)a0;
- (id)newTextureLayoutWithDescriptor:(id)a0 isHeapOrBufferBacked:(char)a1;
- (id)newTextureWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 descriptor:(id)a2 deallocator:(id /* block */)a3;
- (id)newTextureWithDescriptor:(id)a0;
- (id)newTextureWithDescriptor:(id)a0 iosurface:(struct __IOSurface { } *)a1 plane:(unsigned long long)a2;
- (id)newTextureWithDescriptor:(id)a0 iosurface:(struct __IOSurface { } *)a1 plane:(unsigned long long)a2 slice:(unsigned long long)a3;
- (id)newTextureWithSurface:(unsigned long long)a0 buffer:(unsigned long long)a1;
- (id)newTiledTextureWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 deallocator:(id /* block */)a2 descriptor:(id)a3 offset:(unsigned long long)a4 bytesPerRow:(unsigned long long)a5;
- (id)newTiledTextureWithBytesNoCopy:(void *)a0 length:(unsigned long long)a1 descriptor:(id)a2 offset:(unsigned long long)a3 bytesPerRow:(unsigned long long)a4;
- (id)newUncachedIOFileHandleWithURL:(id)a0 compressionMethod:(long long)a1 error:(id *)a2;
- (id)newUncachedIOFileHandleWithURL:(id)a0 error:(id *)a1;
- (id)newUncachedIOHandleWithURL:(id)a0 compressionType:(long long)a1 error:(id *)a2;
- (id)newUncachedIOHandleWithURL:(id)a0 error:(id *)a1;
- (id)newVisibleFunctionTableWithDescriptor:(id)a0;
- (void)notifyExternalReferencesNonZeroOnDealloc:(id)a0;
- (struct { unsigned int x0; unsigned int x1; })pipelineCacheStats;
- (id)productName;
- (unsigned long long)requiredLinearTextureBytesPerRowForDescriptor:(id)a0;
- (char)reserveGPUAddressRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)reserveResourceIndicesForResourceType:(unsigned long long)a0 indices:(unsigned long long *)a1 indexCount:(unsigned long long)a2;
- (unsigned long long)resourcePatchingTypeForResourceType:(unsigned long long)a0;
- (void)sampleTimestamps:(unsigned long long *)a0 gpuTimestamp:(unsigned long long *)a1;
- (id)serializeRenderPipelineDescriptor:(id)a0;
- (id)serializeStructType:(id)a0;
- (char)setCompilerProcessesCount:(int)a0;
- (void)setupMPSFunctionTable:(struct MPSFunctionTable { } *)a0;
- (unsigned long long)sparseTileSizeInBytesForSparsePageSize:(long long)a0;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })sparseTileSizeWithTextureType:(unsigned long long)a0 pixelFormat:(unsigned long long)a1 sampleCount:(unsigned long long)a2;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })sparseTileSizeWithTextureType:(unsigned long long)a0 pixelFormat:(unsigned long long)a1 sampleCount:(unsigned long long)a2 sparsePageSize:(long long)a3;
- (void)startCollectingPipelineDescriptors;
- (char)supportsCounterSampling:(unsigned long long)a0;
- (char)supportsFeatureSet:(unsigned long long)a0;
- (char)supportsPrimitiveType:(unsigned long long)a0;
- (char)supportsRasterizationRateMapWithLayerCount:(unsigned long long)a0;
- (char)supportsSampleCount:(unsigned long long)a0;
- (char)supportsTextureSampleCount:(unsigned long long)a0;
- (char)supportsTextureWriteFPRoundingMode:(long long)a0;
- (char)supportsTextureWriteRoundingMode:(long long)a0;
- (char)supportsVertexAmplificationCount:(unsigned long long)a0;
- (void)unloadShaderCaches;
- (void)unmapShaderSampleBuffer;
- (id)unwrapMTLCommandBufferDescriptor:(id)a0 alwaysCopy:(char)a1;
- (id)unwrapMTLCompileOptions:(id)a0;
- (id)unwrapMTLComputePipelineDescriptor:(id)a0;
- (id)unwrapMTLDynamicLibraryDescriptorSPI:(id)a0;
- (id)unwrapMTLFunctionDescriptor:(id)a0;
- (id)unwrapMTLMeshRenderPipelineDescriptor:(id)a0;
- (id)unwrapMTLRelocations:(id)a0;
- (id)unwrapMTLRenderPipelineDescriptor:(id)a0;
- (id)unwrapMTLStitchedLibraryDescriptor:(id)a0;
- (id)unwrapMTLTileRenderPipelineDescriptor:(id)a0;
- (char)validateDynamicLibrary:(id)a0 state:(char)a1 error:(id *)a2;
- (char)validateDynamicLibraryDescriptor:(id)a0 error:(id *)a1;
- (char)validateDynamicLibraryURL:(id)a0 error:(id *)a1;
- (void)writeMeshShaderEmulatorDataStructureHeader:(struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; unsigned int x25; unsigned int x26; unsigned int x27; unsigned int x28[4]; } *)a0 meshShaderPSO:(id)a1 scalingFactor:(unsigned long long)a2;

@end

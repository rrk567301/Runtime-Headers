@class SFCertificateView, NSSecureTextField, NSPopUpButton, NSButton, NSScrollView, NSImageView, NSProgressIndicator, NSLayoutConstraint, NSString, CWDisplayedScanResult, NSTextView, NSData, NSView, NSTextField, NSError;

@interface CWJoinDialog_SL : NSWindowController <NSTextFieldDelegate> {
    char installerContext_;
    char _showingOpen;
    char _showingPassword;
    char _showingPSK;
    char _showingEnterprise;
    char _showingCertificateSelector;
    char _showingCertificate;
    char _shouldShowCertificate;
    char _showingAutomaticEAP;
    char _showingEAPTLS;
    char _certificatesAvailable;
    char _joinInProgress;
    SFCertificateView *certificateView;
    NSTextField *windowTitleLabel;
    NSScrollView *windowDescScrollView;
    NSTextView *windowDescTextView;
    NSLayoutConstraint *windowDescScrollViewHeightConstraint;
    NSButton *okButton;
    NSButton *cancelButton;
    NSView *usernameView;
    NSTextField *usernameField;
    NSView *passwordView;
    NSSecureTextField *passwordField;
    NSTextField *revealedPasswordField;
    NSView *pskView;
    NSSecureTextField *pskField;
    NSTextField *revealedPSKField;
    NSView *certificateSelectorView;
    NSPopUpButton *certificatePopUpButton;
    NSView *eapModeView;
    NSPopUpButton *eapModePopUpButton;
    NSButton *certificateDetailButton;
    NSScrollView *certificateDetailView;
    NSTextField *statusMessageLabel;
    NSButton *warningButton;
    NSProgressIndicator *progressIndicator;
    NSView *showPasswordView;
    NSButton *showPasswordCheckboxButton;
    NSButton *helpButton;
    NSImageView *imageView;
    NSTextField *pskHintText;
}

@property id delegate;
@property (copy) CWDisplayedScanResult *scanResult;
@property (copy) NSString *username;
@property (copy) NSString *password;
@property (copy) NSData *identityData;
@property char remember;
@property (copy) NSError *previousError;
@property (copy) NSString *previousPassword;
@property char supportsWiFiPasswordSharing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)joinDialogWithScanResult:(id)a0 remember:(char)a1;

- (void)dealloc;
- (void)close;
- (char)textView:(id)a0 clickedOnLink:(id)a1 atIndex:(unsigned long long)a2;
- (void)awakeFromNib;
- (void)controlTextDidChange:(id)a0;
- (void)windowDidLoad;
- (id)localizedStringForKey:(id)a0;
- (void)onCancelButton:(id)a0;
- (void)removeOpenView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (char)validateEntries;
- (void)__updateWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 complete:(id /* block */)a1;
- (char)eapCertificatesAvailable;
- (void)enterPasswordAndJoin:(id)a0;
- (id)errorStringForErrorCode:(long long)a0;
- (void)expandFrameForCertificateDetailView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)expandFrameForEnterpriseViews:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)expandFrameForOpenView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)expandFrameForPSKView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)expandFrameForPasswordView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (id)initWithScanResult:(id)a0 remember:(char)a1;
- (void)insertCertificateDetailView;
- (void)insertEnterpriseViews;
- (void)insertOpenView;
- (void)insertPSKView;
- (void)insertPasswordView;
- (void)onCertificateDetailButton:(id)a0;
- (void)onCertificatePopUpButton:(id)a0;
- (void)onEAPModePopUpButton:(id)a0;
- (void)onHelpButton:(id)a0;
- (void)onOKButton:(id)a0;
- (void)onShowPasswordCheckboxButton:(id)a0;
- (void)populateCertificates;
- (void)populateEAPModes;
- (void)removeCertificateDetailView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)removeEnterpriseViews:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)removePSKView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)removePasswordView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (void)resetSecurityEntries;
- (long long)securityTagForNetwork:(id)a0;
- (void)setSecurityTypeViewForTag:(long long)a0;
- (char)validateSecurityTypeForTag:(long long)a0;

@end

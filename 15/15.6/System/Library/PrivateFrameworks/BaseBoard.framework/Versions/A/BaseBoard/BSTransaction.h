@class NSError, NSString, NSArray, NSDate, NSSet, NSMutableDictionary, NSHashTable, BSAuditHistory, NSMutableSet, NSObject, NSMutableArray;
@protocol OS_dispatch_queue, OS_os_log;

@interface BSTransaction : NSObject <BSWatchdogProviding> {
    NSMutableArray *_parentTransactionRelationships;
    NSMutableSet *_lifeAssertions;
    char _aborted;
    char _interrupted;
    char _inSubclassBegin;
    NSDate *_startTime;
    NSMutableDictionary *_milestonesToHandlers;
    NSMutableArray *_childTransactionRelationships;
    NSMutableSet *_milestones;
    NSHashTable *_observers;
    unsigned long long _state;
    BSAuditHistory *_auditHistory;
    NSObject<OS_os_log> *_auditHistoryLog;
    char _disableDebugLogCheckForUnitTesting;
    char _debugLoggingEnabled;
    NSMutableSet *_debugLogCategories;
    NSString *_cachedDescriptionProem;
    NSMutableArray *_blockObservers;
    id /* block */ _completionBlock;
    char _cachedDefaultBasedAuditHistoryEnabled;
}

@property (nonatomic, getter=isAuditHistoryEnabled) char auditHistoryEnabled;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) NSSet *milestones;
@property (readonly, nonatomic) NSArray *childTransactions;
@property (readonly, nonatomic, getter=hasStarted) char started;
@property (readonly, nonatomic, getter=isRunning) char running;
@property (readonly, nonatomic, getter=isComplete) char complete;
@property (readonly, nonatomic, getter=isFinishedWorking) char finishedWorking;
@property (readonly, nonatomic, getter=isInterrupted) char interrupted;
@property (readonly, nonatomic, getter=isInterruptible) char interruptible;
@property (readonly, nonatomic, getter=isFailed) char failed;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) NSArray *allErrors;
@property (copy, nonatomic) id /* block */ completionBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)removeObserver:(id)a0;
- (void)addObserver:(id)a0;
- (void)interrupt;
- (void)begin;
- (void)_childTransactionDidFinishWork:(id)a0;
- (void)_failForTimeoutWithDescription:(id)a0;
- (char)_shouldComplete;
- (char)shouldWatchdog:(id *)a0;
- (double)watchdogTimeout;
- (char)_shouldFailForChildTransaction:(id)a0;
- (void)failWithReason:(id)a0;
- (char)isInterruptable;
- (void)_addAuditHistoryItem:(id)a0;
- (void)_addDebugLogCategory:(id)a0;
- (void)_begin;
- (char)_canBeInterrupted;
- (void)_childTransactionDidComplete:(id)a0;
- (id)_customizedDescriptionProperties;
- (id)_debugLogCategories;
- (char)_debugLoggingEnabled;
- (id)_descriptionProem;
- (void)_didAddChildTransaction:(id)a0;
- (void)_didBegin;
- (void)_didComplete;
- (void)_didFinishWork;
- (void)_didInterruptWithReason:(id)a0;
- (void)_didRemoveChildTransaction:(id)a0;
- (void)_didSatisfyMilestone:(id)a0;
- (void)_enumerateObserversWithBlock:(id /* block */)a0;
- (void)_evaluateCompletion;
- (void)_failWithReason:(id)a0 description:(id)a1;
- (void)_failWithReason:(id)a0 description:(id)a1 precipitatingError:(id)a2;
- (id)_graphNodeDebugName;
- (char)_isRootTransaction;
- (id)_loggingProem;
- (void)_removeDebugLogCategory:(id)a0;
- (char)_revertWithReason:(id)a0;
- (id)_stringForMilestones:(id)a0;
- (void)_willAddChildTransaction:(id)a0;
- (void)_willBegin;
- (void)_willComplete;
- (void)_willFailWithReason:(id)a0;
- (void)_willInterruptWithReason:(id)a0;
- (void)_willRemoveChildTransaction:(id)a0;
- (void)addChildTransaction:(id)a0;
- (void)addChildTransaction:(id)a0 withSchedulingPolicy:(unsigned long long)a1;
- (void)addMilestone:(id)a0;
- (void)addMilestones:(id)a0;
- (id)childTransactionsOfClass:(Class)a0;
- (void)evaluateMilestone:(id)a0 withEvaluator:(id /* block */)a1;
- (char)hasChildTransactionsOfClass:(Class)a0;
- (void)interruptWithReason:(id)a0;
- (char)isWaitingForMilestone:(id)a0;
- (void)listenForSatisfiedMilestone:(id)a0 withBlock:(id /* block */)a1;
- (void)registerBlockObserver:(id /* block */)a0;
- (void)removeAllChildTransactions;
- (void)removeAllChildTransactionsOfClass:(Class)a0;
- (void)removeAllMilestones;
- (void)removeChildTransaction:(id)a0;
- (char)removeMilestone:(id)a0;
- (char)removeMilestones:(id)a0;
- (void)satisfyMilestone:(id)a0;

@end

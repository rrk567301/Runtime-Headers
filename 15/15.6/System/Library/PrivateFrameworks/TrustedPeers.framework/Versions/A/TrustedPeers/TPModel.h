@class NSData, NSMutableDictionary;
@protocol TPDecrypter, TPModelDBAdapterProtocol;

@interface TPModel : NSObject

@property (retain, nonatomic) id<TPModelDBAdapterProtocol> dbAdapter;
@property (retain, nonatomic) id<TPDecrypter> decrypter;
@property (retain, nonatomic) NSData *recoverySigningPubKey;
@property (retain, nonatomic) NSData *recoveryEncryptionPubKey;
@property (retain, nonatomic) NSMutableDictionary *custodianRecoveryKeys;
@property char suppressInitialInfoLogging;

+ (id)pickClock:(id)a0;
+ (id)preapprovalsFromKeys:(id)a0;

- (void).cxx_destruct;
- (char)isRecoveryKeyEnrolledWithError:(id *)a0;
- (id)peerIDThatTrustsRecoveryKeys:(id)a0 canIntroducePeer:(id)a1 stableInfo:(id)a2 error:(id *)a3;
- (char)enumeratePeersUsingBlock:(id /* block */)a0 error:(id *)a1;
- (id)peerCountsByMachineIDWithError:(id *)a0;
- (char)validateVoucherForPeer:(id)a0 sponsor:(id)a1;
- (id)_iterateOverPeersWithBlock:(id /* block */)a0 error:(id *)a1;
- (id)actualPeerWithID:(id)a0 error:(id *)a1;
- (id)allCustodianRecoveryKeyPeerIDs;
- (id)allCustodianRecoveryKeys;
- (id)allMachineIDsWithError:(id *)a0;
- (id)allPeerIDs;
- (id)allPolicyVersionsWithError:(id *)a0;
- (id)allRegisteredPolicyVersionsWithError:(id *)a0;
- (id)allTrustedPeersWithCurrentRecoveryKeyWithError:(id *)a0;
- (char)anyTrustedPeerDistrustsOtherPeer:(id)a0 error:(id *)a1;
- (id)bestRecoveryKeyForStableInfo:(id)a0 vouchers:(id)a1 error:(id *)a2;
- (id)bestWalrusAcrossTrustedPeersWithError:(id *)a0;
- (id)bestWalrusForStableInfo:(id)a0 walrusStableChanges:(id)a1 error:(id *)a2;
- (id)bestWebAccessAcrossTrustedPeersWithError:(id *)a0;
- (id)bestWebAccessForStableInfo:(id)a0 webAccessStableChanges:(id)a1 error:(id *)a2;
- (id)calculateDynamicInfoForPeerWithID:(id)a0 addingPeerIDs:(id)a1 removingPeerIDs:(id)a2 preapprovedKeys:(id)a3 signingKeyPair:(id)a4 currentMachineIDs:(id)a5 error:(id *)a6;
- (id)calculateDynamicInfoFromModel:(id)a0 peer:(id)a1 peerPermanentInfo:(id)a2 peerStableInfo:(id)a3 startingDynamicInfo:(id)a4 addingPeerIDs:(id)a5 removingPeerIDs:(id)a6 preapprovedKeys:(id)a7 signingKeyPair:(id)a8 currentMachineIDs:(id)a9 sponsorPeerID:(id)a10 error:(id *)a11;
- (char)canIntroduceCandidate:(id)a0 withSponsor:(id)a1 toEpoch:(unsigned long long)a2 underPolicy:(id)a3 disposition:(id)a4;
- (char)canTrustCandidate:(id)a0 inEpoch:(unsigned long long)a1;
- (char)checkIntroductionForCandidate:(id)a0 stableInfo:(id)a1 withSponsorID:(id)a2 error:(id *)a3;
- (id)considerCandidateID:(id)a0 withSponsorID:(id)a1 sponsorPermanentInfo:(id)a2 toExpandIncludedPeerIDs:(id)a3 andExcludedPeerIDs:(id)a4 dispositions:(id)a5 currentMachineIDs:(id)a6 forEpoch:(unsigned long long)a7;
- (char)considerPolicyFromPeerID:(id)a0 stableInfo:(id)a1 secrets:(id)a2 newestPolicyDoc:(id *)a3 error:(id *)a4;
- (id)considerPreapprovalsSponsoredByPeer:(id)a0 toRecursivelyExpandIncludedPeerIDs:(id)a1 andExcludedPeerIDs:(id)a2 dispositions:(id)a3 currentMachineIDs:(id)a4 forEpoch:(unsigned long long)a5;
- (void)considerVouchersSponsoredByPeerID:(id)a0 sponsorPermanentInfo:(id)a1 toRecursivelyExpandIncludedPeerIDs:(id)a2 andExcludedPeerIDs:(id)a3 dispositions:(id)a4 currentMachineIDs:(id)a5 forEpoch:(unsigned long long)a6;
- (id)copyPeerWithNewDynamicInfo:(id)a0 forPeerWithID:(id)a1 error:(id *)a2;
- (id)copyPeerWithNewStableInfo:(id)a0 forPeerWithID:(id)a1 error:(id *)a2;
- (unsigned long long)countOfDistrustedRecoveryKeys;
- (unsigned long long)countTotalNumberOfRecoveryKeys;
- (unsigned long long)countTotalTrustedCustodians;
- (id)createDynamicInfoWithIncludedPeerIDs:(id)a0 excludedPeerIDs:(id)a1 dispositions:(id)a2 preapprovals:(id)a3 signingKeyPair:(id)a4 error:(id *)a5;
- (id)createStableInfoWithFrozenPolicyVersion:(id)a0 flexiblePolicyVersion:(id)a1 policySecrets:(id)a2 syncUserControllableViews:(int)a3 secureElementIdentity:(id)a4 walrusSetting:(id)a5 webAccess:(id)a6 deviceName:(id)a7 serialNumber:(id)a8 osVersion:(id)a9 signingKeyPair:(id)a10 recoverySigningPubKey:(id)a11 recoveryEncryptionPubKey:(id)a12 isInheritedAccount:(char)a13 error:(id *)a14;
- (id)createVoucherForCandidate:(id)a0 stableInfo:(id)a1 withSponsorID:(id)a2 reason:(unsigned long long)a3 signingKeyPair:(id)a4 error:(id *)a5;
- (char)currentStatePossiblyMissingDataWithError:(id *)a0;
- (id)custodianPeerWithID:(id)a0;
- (char)doesOctagonContainDistrustedRecoveryKeysWithError:(id *)a0;
- (id)dynamicInfoForJoiningPeerID:(id)a0 peerPermanentInfo:(id)a1 peerStableInfo:(id)a2 sponsorID:(id)a3 preapprovedKeys:(id)a4 signingKeyPair:(id)a5 currentMachineIDs:(id)a6 error:(id *)a7;
- (char)enumerateVouchersUsingBlock:(id /* block */)a0 error:(id *)a1;
- (id)filterPeerList:(id)a0 byMachineIDs:(id)a1 sponsorPeerID:(id)a2 dispositions:(id)a3;
- (id)filterPreapprovals:(id)a0 forExistingPeers:(id)a1;
- (id)findCustodianRecoveryKeyWithUUID:(id)a0;
- (id)getDynamicInfoForPeerWithID:(id)a0 error:(id *)a1;
- (id)getPeerIDsTrustedByPeerWithDynamicInfo:(id)a0 toAccessView:(id)a1 error:(id *)a2;
- (id)getPeerIDsTrustedByPeerWithID:(id)a0 toAccessView:(id)a1 error:(id *)a2;
- (id)getStableInfoForPeerWithID:(id)a0 error:(id *)a1;
- (id)getViewsForCRK:(id)a0 donorPermanentInfo:(id)a1 donorStableInfo:(id)a2 error:(id *)a3;
- (id)getViewsForPeer:(id)a0 stableInfo:(id)a1 error:(id *)a2;
- (char)hasAnyPeersWithError:(id *)a0;
- (char)hasPeerWithID:(id)a0 error:(id *)a1;
- (char)hasPotentiallyTrustedPeerPreapprovingKey:(id)a0 error:(id *)a1;
- (char)hasPotentiallyTrustedPeerTestingOnlyWithError:(id *)a0;
- (char)hasPotentiallyTrustedPeerWithSigningKey:(id)a0 error:(id *)a1;
- (id)initWithDecrypter:(id)a0 dbAdapter:(id)a1;
- (char)isCustodianRecoveryKeyTrusted:(id)a0 error:(id *)a1;
- (char)isRecoveryKeyExcluded:(id)a0 error:(id *)a1;
- (unsigned long long)latestEpochAmongPeerIDs:(id)a0 error:(id *)a1;
- (unsigned long long)maxClockWithError:(id *)a0;
- (unsigned long long)peerCountWithError:(id *)a0;
- (id)peerIDThatTrustsCustodianRecoveryKeys:(id)a0 canIntroducePeer:(id)a1 stableInfo:(id)a2 error:(id *)a3;
- (id)peerWithID:(id)a0 error:(id *)a1;
- (id)peersWithMachineID:(id)a0 error:(id *)a1;
- (id)policyForPeerIDs:(id)a0 candidatePeerID:(id)a1 candidateStableInfo:(id)a2 error:(id *)a3;
- (id)policyWithVersion:(unsigned long long)a0 error:(id *)a1;
- (id)possibleSponsorsForCustodianRecoveryKey:(id)a0 block:(id /* block */)a1 error:(id *)a2;
- (id)possibleSponsorsForRecoveryKey:(id)a0 block:(id /* block */)a1 error:(id *)a2;
- (id)recoveryEncryptionPublicKey;
- (id)recoveryKeyPeerID:(id)a0;
- (id)recoverySigningPublicKey;
- (id)recursivelyExpandIncludedPeerIDs:(id)a0 andExcludedPeerIDs:(id)a1 dispositions:(id)a2 withPeersTrustedBySponsorID:(id)a3 currentMachineIDs:(id)a4 forEpoch:(unsigned long long)a5;
- (void)registerCustodianRecoveryKey:(id)a0;
- (void)removeCustodianRecoveryKey:(id)a0;
- (void)removeRecoveryKey;
- (void)setRecoveryKeys:(id)a0;
- (unsigned long long)statusOfPeerWithID:(id)a0 error:(id *)a1;
- (unsigned long long)trustedPeerCountWithError:(id *)a0;
- (id)untrustedPeerIDsWithError:(id *)a0;
- (int)userViewSyncabilityConsensusAmongTrustedPeers:(id)a0 error:(id *)a1;
- (char)validatePeerWithPreApproval:(id)a0 sponsor:(id)a1;
- (id)vectorClockWithError:(id *)a0;
- (char)verifyVoucherSignature:(id)a0;
- (id)viablePeerCountsByModelIDWithError:(id *)a0;
- (unsigned long long)voucherCountWithError:(id *)a0;

@end

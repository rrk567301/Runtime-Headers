@class SiriSharedUICompactResultPlatterViewController, NSArray, SiriSharedUIContentPlatterViewController, NSString, SiriUINavigationController, SiriSharedUICompactHostingInstrumentationSupplement, SiriSharedUICompactResultViewController, NSMutableArray, SRUIFSpeechRecognitionHypothesis;
@protocol SiriUICompactViewControllerDelegate;

@interface SiriUICompactViewController : NSViewController <SiriUISnippetViewControllerDelegate, SiriSharedUICompactViewDelegate, SiriUINavigationControllerDelegate, SiriUIAceObjectViewControllerDelegate, SiriSharedUIStackableContentActionHandling, SiriSharedUIContentViewSizeProviding, SiriSharedUICompactViewModelChangeObserving> {
    NSMutableArray *_resultViewControllers;
    NSArray *_conversationViewControllers;
    SiriSharedUICompactHostingInstrumentationSupplement *_instrumentationSupplement;
    char _offerDismissal;
    double _keyWindowAssertionCount;
}

@property (copy, nonatomic, getter=_activeTranscriptItems, setter=_setActiveTranscriptItems:) NSArray *activeTranscriptItems;
@property (copy, nonatomic, getter=_activeConversationTranscriptItems, setter=_setActiveConversationTranscriptItems:) NSArray *activeConversationTranscriptItems;
@property (copy, nonatomic, getter=_serverUtterances, setter=_setServerUtterances:) NSArray *serverUtterances;
@property (copy, nonatomic, getter=_speechRecognitionHypothesis, setter=_setSpeechRecognitionHypothesis:) SRUIFSpeechRecognitionHypothesis *speechRecognitionHypothesis;
@property (readonly, nonatomic, getter=_navigationController) SiriUINavigationController *navigationController;
@property (readonly, nonatomic, getter=_resultViewController) SiriSharedUICompactResultViewController *resultViewController;
@property (retain, nonatomic, getter=_queuedNavigationContentViewController, setter=_setQueuedNavigationContentViewController:) SiriSharedUICompactResultPlatterViewController *queuedNavigationContentViewController;
@property (weak, nonatomic) SiriSharedUIContentPlatterViewController *topMostNavigationPlatterViewController;
@property (weak, nonatomic) id<SiriUICompactViewControllerDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)init;
- (void).cxx_destruct;
- (void)loadView;
- (struct CGSize { double x0; double x1; })preferredContentSize;
- (void)navigationController:(id)a0 willShowViewController:(id)a1 animated:(char)a2;
- (void)navigationController:(id)a0 didShowViewController:(id)a1 animated:(char)a2;
- (void)_aceObjectDidAppear:(id)a0;
- (id)_compactView;
- (void)_configureViewController:(id)a0 forAceObject:(id)a1;
- (void)_focusOnAccessibilityElementWithAppropriateDelay:(id)a0;
- (id)_instrumentationManager;
- (void)_pushQueuedNavigationContentViewController;
- (struct CGSize { double x0; double x1; })_sizeForResultController:(id)a0 thatFitsSize:(struct CGSize { double x0; double x1; })a1;
- (char)_updateActiveTranscriptItems:(id)a0;
- (void)_updateStackableContentDismissalOffering;
- (void)_updateTopMostNavigationPlatterForSnippetLayoutChange;
- (id)accessibilityChildrenOverrideForCompactView:(id)a0;
- (void)cancelRequestForSiriSnippetViewController:(id)a0;
- (void)compactView:(id)a0 didChangeEffectiveBottomContentInsetAnimatedWithContext:(id)a1;
- (void)compactView:(id)a0 didFinishEditingWithText:(id)a1 selectionResults:(id)a2 shouldStartNewRequest:(char)a3;
- (void)compactView:(id)a0 viewDidAppearForAceObject:(id)a1;
- (void)compactView:(id)a0 viewDidChangeWindow:(id)a1;
- (void)compactView:(id)a0 viewDidDisappearForAceObject:(id)a1;
- (void)compactViewDidUpdatePresentedContentHeight:(id)a0;
- (void)compactViewModelDidChange:(id)a0 withDiff:(unsigned long long)a1;
- (void)compactViewRequestsDismissalForPlatterCloseAction:(id)a0;
- (id)contentViewSizeProvider;
- (void)contentsDidChange;
- (void)didChangeWindowHeight:(char)a0;
- (void)didReceiveUpdateVisualResponseCommand:(id)a0;
- (void)handleDismissalAction;
- (struct CGSize { double x0; double x1; })maxSizeForSnippet;
- (double)maximumHeightForCompactView:(id)a0;
- (void)navigationController:(id)a0 didLayoutViewController:(id)a1;
- (id)parserSpeakableObjectProviderForCompactView:(id)a0;
- (id)persistentDataStoreForSiriViewController:(id)a0;
- (void)releaseKeyForSiriViewController:(id)a0;
- (void)setOffersDismissal:(char)a0;
- (void)siriDidUpdateASRWithRecognition:(id)a0;
- (void)siriSnippetViewController:(id)a0 pushSirilandSnippets:(id)a1;
- (void)siriSnippetViewController:(id)a0 setStatusViewHidden:(char)a1;
- (void)siriSnippetViewController:(id)a0 shouldPresentPicker:(id)a1 completion:(id /* block */)a2;
- (void)siriSnippetViewControllerViewDidLoad:(id)a0;
- (void)siriSnippetViewControllerWillBecomeFirstResponder:(id)a0;
- (void)siriViewController:(id)a0 addSelectionResponse:(id)a1;
- (id)siriViewController:(id)a0 disambiguationItemForListItem:(id)a1 disambiguationKey:(id)a2;
- (id)siriViewController:(id)a0 domainObjectForIdentifier:(id)a1;
- (id)siriViewController:(id)a0 filteredDisambiguationListItems:(id)a1;
- (id)siriViewController:(id)a0 listItemToPickInAutodisambiguationForListItems:(id)a1;
- (void)siriViewController:(id)a0 makeKeyWithCompletion:(id /* block */)a1;
- (void)siriViewController:(id)a0 openURL:(id)a1 completion:(id /* block */)a2;
- (void)siriViewController:(id)a0 performAceCommands:(id)a1;
- (void)siriViewController:(id)a0 setContentOffset:(double)a1;
- (void)siriViewController:(id)a0 setDomainObject:(id)a1 forIdentifier:(id)a2;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })siriViewControllerBackgroundInsets:(id)a0;
- (void)siriViewControllerDidPunchout;
- (id)siriViewControllerEffectiveBundleForCoreLocation:(id)a0;
- (double)siriViewControllerExpectedWidth:(id)a0;
- (void)siriViewControllerHeightDidChange:(id)a0;
- (void)siriViewControllerHeightDidChange:(id)a0 pinTopOfSnippet:(char)a1;
- (void)siriViewControllerRequestsBackwardNavigation:(id)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })siriViewControllerTranscriptInsets:(id)a0;
- (void)siriViewControllerViewDidAppear:(id)a0;
- (void)siriViewControllerViewDidDisappear:(id)a0;
- (struct CGSize { double x0; double x1; })siriViewControllerVisibleContentArea:(id)a0;
- (struct CGSize { double x0; double x1; })sizeForContentView:(id)a0 thatFitsSize:(struct CGSize { double x0; double x1; })a1;
- (void)tapToEditRequestedFromView:(id)a0;
- (int)viewRegionForPresentedAceObject:(id)a0;

@end

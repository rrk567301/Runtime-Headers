@class NSDictionary, SSRVoiceProfile, SiriUIBuddyAppleIntelligenceController, NSString, NSImageView, SiriUIBuddyChooseLanguageController, NSViewController, SiriUIBuddyChooseVoiceController, SiriUIBuddyImproveSiriController, SiriUIBuddySummarizationController, SiriUIBuddyEnableSiriController, SiriUIBuddyVoiceTriggerController, NSSet, OBTemplateView, NSLayoutConstraint, GMAnalyticsProvider, NSView, SiriUIBuddyVoiceTriggerOutroController, SiriUIBuddyVoiceTriggerIntroController, AFVoiceInfo, SiriUIRemoteDeviceBrowser;
@protocol SiriUIBuddyDelegate, UNNotificationOnboardingViewModel, SiriUIBuddySubviewController, MBSecondPartyHost;

@interface SiriUIBuddyController : NSViewController <SiriUIBuddyControllerEmptyProtocol, SiriUIRemoteDeviceBrowserDelegate> {
    GMAnalyticsProvider *_analyticsProvider;
    long long _state;
    NSViewController<SiriUIBuddySubviewController> *_currentPanelController;
    SiriUIBuddyAppleIntelligenceController *_appleIntelligenceController;
    SiriUIBuddySummarizationController *_summarizationController;
    SiriUIBuddyEnableSiriController *_enableSiriController;
    SiriUIBuddyChooseLanguageController *_chooseLanguageController;
    SiriUIBuddyChooseVoiceController *_chooseVoiceController;
    SiriUIBuddyVoiceTriggerController *_voiceTriggerController;
    SiriUIBuddyVoiceTriggerIntroController *_voiceTriggerIntroController;
    SiriUIBuddyVoiceTriggerOutroController *_voiceTriggerOutroController;
    SiriUIBuddyImproveSiriController *_improveSiriController;
    OBTemplateView *_templateView;
    long long _voiceTrainingIntroSubstate;
    char _buddyShouldShowGreymatter;
    char _buddyShouldShowSummarization;
    char _buddyShouldShowSiri;
    char _paneTransitioning;
}

@property (retain) NSDictionary *userInfo;
@property (weak) NSLayoutConstraint *viewHeightConstraint;
@property (readonly) char siriEnabled;
@property (readonly) char siriPreviouslyEnabled;
@property (readonly) char siriNewlyEnabled;
@property (readonly) char dataSharingPreviouslySpecified;
@property (retain, nonatomic) SSRVoiceProfile *voiceProfileForTraining;
@property (retain, nonatomic) SiriUIRemoteDeviceBrowser *remoteDeviceBrowser;
@property (retain, nonatomic) NSSet *connectedDeviceIdentifiers;
@property char enableSiri;
@property char skippedVoiceTrigger;
@property (retain) NSString *userChosenSiriLanguageCode;
@property (retain) AFVoiceInfo *userChosenVoice;
@property (retain) NSString *effectiveSiriLanguageCode;
@property (readonly) OBTemplateView *templateView;
@property (readonly) NSImageView *orbImageView;
@property (readonly) NSView *topContentOrbImageView;
@property (readonly) char isGMOnboardingFlow;
@property (readonly) char isGMVelvetRopeFlow;
@property (readonly, weak) id<MBSecondPartyHost> host;
@property (weak) id<SiriUIBuddyDelegate> delegate;
@property (weak) id<UNNotificationOnboardingViewModel> notificationOnboardingViewModel;
@property (readonly) char shouldPresentDisclosureForCompactVoiceTrigger;
@property (readonly) char needsExtraWideContent;

+ (void)initialize;
+ (id)_stateMachineDispatchQueue;

- (id)init;
- (void).cxx_destruct;
- (void)setState:(long long)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)loadView;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (void)viewWillAppear;
- (long long)initialState;
- (id)initWithHost:(id)a0 userInfo:(id)a1;
- (char)_isInitialState;
- (void)moveToNextPanel;
- (long long)_previousState:(long long)a0;
- (long long)nextStateFromPreSiriEnablement:(long long)a0;
- (id)_configurationRecognitionLanguageCodes;
- (id)_fetchUserContextVoiceProfileForTraining;
- (long long)_mbuaGetDataSharingOptInStatus;
- (char)_mbuaIsSiriEnabled;
- (char)_mbuaRandomVoice;
- (char)_mbuaRequiresVoiceSelection;
- (void)_mbuaSetEnablementLanguages:(id)a0;
- (long long)_nextState:(long long)a0;
- (void)_setTemplateViewNeedsExtraWideContent;
- (void)_setupDeviceBrowser;
- (id)_topContentViewWithImageView:(id)a0;
- (id)appleIntelligenceController;
- (id)chooseLanguageController;
- (id)chooseVoiceController;
- (void)currentPaneWillExit;
- (void)didCloseLid:(id)a0;
- (void)didOpenLid:(id)a0;
- (id)enableSiriController;
- (id)improveSiriController;
- (id)initWithHost:(id)a0 gmOnboardingFlow:(char)a1 gmVelvetRopeFlow:(char)a2;
- (id)initWithHost:(id)a0 shouldShowGreymatter:(char)a1 shouldShowSummarization:(char)a2 shouldShowSiri:(char)a3;
- (char)isInitialStateActive;
- (char)isMacBuddyFlow;
- (char)isSAEBuddy;
- (void)moveToPreviousPanel;
- (long long)previousStateFromEnableSiri:(long long)a0;
- (void)remoteDeviceBrowserDidChange:(id)a0 connectedDeviceIdentifiers:(id)a1;
- (void)resetTemplateView;
- (void)setCurrentPanelController:(id)a0;
- (void)setLoadingSpinnerHidden:(char)a0;
- (char)shouldShowIntelligence;
- (char)shouldShowSiriIsReady;
- (char)shouldShowState:(long long)a0 context:(struct { id x0; })a1;
- (char)shouldShowSummarization;
- (char)shouldShowTraningIntroWithContext:(struct { id x0; })a0 checkGMEnablementFlag:(char)a1;
- (char)shouldShowVTWithRestriction;
- (id)summarizationController;
- (id)topContentViewWithSymbol:(id)a0;
- (void)updateOnBoardingKitTemplate;
- (void)userEnabledGreymatter:(char)a0;
- (id)voiceTriggerController;
- (id)voiceTriggerIntroController;
- (id)voiceTriggerOutroController;

@end

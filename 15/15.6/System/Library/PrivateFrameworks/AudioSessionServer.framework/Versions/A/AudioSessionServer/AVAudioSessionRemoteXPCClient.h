@class AVAudioSessionXPCServer, NSXPCConnection, AVAudioSessionXPCClientRelay;
@protocol AVAudioSessionServerDelegate;

@interface AVAudioSessionRemoteXPCClient : NSObject <SessionManagerXPCProtocol> {
    AVAudioSessionXPCServer *_server;
    struct ProcessInfo { struct ProcessToken { unsigned int mValue; } token; NSXPCConnection *xpcConnection; AVAudioSessionXPCClientRelay *mClientRelay; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char __is_long_ : 1; unsigned char __size_ : 7; } ; char __padding_[0]; char __data_[23]; } __s; struct __long { struct { unsigned char __is_long_ : 1; unsigned long __cap_ : 63; } ; unsigned long long __size_; char *__data_; } __l; } __value_; } __r_; } mProcessName; } _clientProcess;
    AVAudioSessionXPCClientRelay *_clientRelay;
    id<AVAudioSessionServerDelegate> _serverDelegate;
    BOOL _invalidated;
    const char *_replyWatchdogFunctionName;
    struct time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000>>> { struct duration<long long, std::ratio<1, 1000000>> { long long __rep_; } __d_; } _replyWatchdogMinTimestamp;
    struct reply_watchdog_factory { BOOL mDebugging; int mDefaultTimeoutMS; struct function<void ()> { struct __value_func<void ()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } mTimeoutHandler; } _defaultReplyWatchdogFactory;
    struct reply_watchdog_factory { BOOL mDebugging; int mDefaultTimeoutMS; struct function<void ()> { struct __value_func<void ()> { struct type { unsigned char __lx[32]; } __buf_; void *__f_; } __f_; } mTimeoutHandler; } _longReplyWatchdogFactory;
}

- (void)dealloc;
- (void).cxx_destruct;
- (void)invalidate;
- (id).cxx_construct;
- (void)getProperties:(unsigned int)a0 properties:(id)a1 reply:(id /* block */)a2;
- (void)setApplicationProperty:(struct { unsigned int x0[8]; })a0 clientID:(unsigned int)a1 propertyID:(id)a2 propertyValue:(id)a3 reply:(id /* block */)a4;
- (void)stopIOController:(int)a0 session:(unsigned int)a1 reply:(id /* block */)a2;
- (void)muteInputForRecordingProcesses:(id /* block */)a0;
- (void)activateSession:(unsigned int)a0 options:(unsigned long long)a1 deviceInfo:(id)a2 requestID:(unsigned long long)a3 reply:(id /* block */)a4;
- (void)addMXNotificationListener:(unsigned int)a0 notificationName:(id)a1 reply:(id /* block */)a2;
- (void)allowAppToInitiatePlaybackTemporarilyFromBackground:(id)a0 reply:(id /* block */)a1;
- (void)availablePorts:(unsigned int)a0 state:(id)a1 reply:(id /* block */)a2;
- (void)beginOrEndControlObservation:(unsigned long long)a0 begin:(BOOL)a1 reply:(id /* block */)a2;
- (void)clientSessionDestroyed:(unsigned int)a0 reply:(id /* block */)a1;
- (void)configureSession:(unsigned int)a0 shouldBeActive:(char)a1 options:(unsigned long long)a2 state:(id)a3 reply:(id /* block */)a4;
- (void)confirmInterruption:(unsigned int)a0 allPlayersStoppedStatus:(int)a1 reply:(id /* block */)a2;
- (void)connectedPorts:(unsigned int)a0 reply:(id /* block */)a1;
- (void)createAudioApplicationForSpecification:(id)a0 reply:(id /* block */)a1;
- (void)createFakeDevice:(id)a0 controller:(unsigned int)a1 reply:(id /* block */)a2;
- (void)createProxyForSession:(unsigned int)a0 reply:(id /* block */)a1;
- (void)createSession:(unsigned long long)a0 clientProcessName:(id)a1 clientProcessBundleID:(id)a2 reply:(id /* block */)a3;
- (void)createSession:(unsigned long long)a0 clientProcessName:(id)a1 clientProcessBundleID:(id)a2 useCaseIdentifier:(unsigned int)a3 reply:(id /* block */)a4;
- (void)deactivateSession:(unsigned int)a0 options:(unsigned long long)a1 priority:(id)a2 requestID:(unsigned long long)a3 reply:(id /* block */)a4;
- (void)deactivateSession:(unsigned int)a0 options:(unsigned long long)a1 reply:(id /* block */)a2;
- (void)deactivateSession:(unsigned int)a0 priority:(long long)a1 reply:(id /* block */)a2;
- (void)destroyFakeDevice:(unsigned long long)a0 controller:(unsigned int)a1 reply:(id /* block */)a2;
- (void)destroyProxyForSession:(unsigned int)a0 reply:(id /* block */)a1;
- (void)fakeDeviceDescription:(unsigned long long)a0 reply:(id /* block */)a1;
- (void)fullStateForSession:(unsigned int)a0 reply:(id /* block */)a1;
- (void)getApplicationMessages:(struct { unsigned int x0[8]; })a0 clientID:(unsigned int)a1 reply:(id /* block */)a2;
- (void)getApplicationProperty:(struct { unsigned int x0[8]; })a0 clientID:(unsigned int)a1 propertyID:(id)a2 isMXProperty:(char)a3 reply:(id /* block */)a4;
- (void)getControlValue:(unsigned long long)a0 reply:(id /* block */)a1;
- (void)getDeferredMessages:(unsigned int)a0 reply:(id /* block */)a1;
- (void)getEnhanceDialogueLevelWithReply:(id /* block */)a0;
- (void)getIOControllerCurrentTime:(int)a0 session:(unsigned int)a1 reply:(id /* block */)a2;
- (void)getMXPropertyGenericPipe:(unsigned int)a0 propertyName:(id)a1 reply:(id /* block */)a2;
- (void)getProperty:(unsigned int)a0 propertyName:(id)a1 MXProperty:(char)a2 reply:(id /* block */)a3;
- (void)hardwarePropertyValueForObject:(unsigned long long)a0 keyOrAddress:(id)a1 qualifier:(id)a2 infoOnly:(char)a3 reply:(id /* block */)a4;
- (void)hardwareSystemStateWithReply:(id /* block */)a0;
- (void)otherAudioPlaying:(unsigned int)a0 reply:(id /* block */)a1;
- (void)pingWithReply:(id /* block */)a0;
- (void)platformSupportWithReply:(id /* block */)a0;
- (void)promptStyle:(unsigned int)a0 reply:(id /* block */)a1;
- (void)removeMXNotificationListener:(unsigned int)a0 notificationName:(id)a1 reply:(id /* block */)a2;
- (void)resetDefaultRoutePreference:(unsigned char)a0 transient:(char)a1 controller:(unsigned int)a2 reply:(id /* block */)a3;
- (void)secondaryAudioShouldBeSilencedHint:(unsigned int)a0 reply:(id /* block */)a1;
- (void)sessionIDs:(struct { unsigned int x0[8]; })a0 clientID:(unsigned int)a1 reply:(id /* block */)a2;
- (void)sessionTokensWithReply:(id /* block */)a0;
- (void)setControlValue:(unsigned long long)a0 value:(id)a1 controller:(unsigned int)a2 reply:(id /* block */)a3;
- (void)setDefaultRoutePreference:(id)a0 transient:(char)a1 controller:(unsigned int)a2 reply:(id /* block */)a3;
- (void)setEnhanceDialogueLevel:(id)a0 reply:(id /* block */)a1;
- (void)setEnhanceDialoguePreference:(id)a0 reply:(id /* block */)a1;
- (void)setHardwarePropertyValueForObject:(unsigned long long)a0 keyOrAddress:(id)a1 qualifier:(id)a2 value:(id)a3 controller:(unsigned int)a4 reply:(id /* block */)a5;
- (void)setMXPropertyOnAllSessions:(struct { unsigned int x0[8]; })a0 clientID:(unsigned int)a1 MXProperty:(id)a2 values:(id)a3 reply:(id /* block */)a4;
- (void)setProcessOwningIOResources:(unsigned int)a0 session:(unsigned int)a1 reply:(id /* block */)a2;
- (void)setProperties:(unsigned int)a0 values:(id)a1 MXProperties:(char)a2 batchStrategy:(int)a3 genericMXPipe:(char)a4 reply:(id /* block */)a5;
- (void)simulateActiveSession:(unsigned int)a0 state:(id)a1 reply:(id /* block */)a2;
- (void)sleepWithReply:(unsigned int)a0 reply:(id /* block */)a1;
- (void)startIOController:(int)a0 session:(unsigned int)a1 directions:(unsigned int)a2 startTime:(struct AudioTimeStamp { double x0; unsigned long long x1; double x2; unsigned long long x3; struct SMPTETime { short x0; short x1; unsigned int x2; unsigned int x3; unsigned int x4; short x5; short x6; short x7; short x8; } x4; unsigned int x5; unsigned int x6; })a3 flags:(unsigned long long)a4 reply:(id /* block */)a5;
- (void)toggleInputMuteForRecordingProcess:(id /* block */)a0;
- (void)transformControl:(unsigned long long)a0 value:(float)a1 toDB:(BOOL)a2 reply:(id /* block */)a3;
- (void)updateActiveIOController:(unsigned int)a0 state:(id)a1 reply:(id /* block */)a2;
- (void)updateApplicationProperty:(struct { unsigned int x0[8]; })a0 clientID:(unsigned int)a1 propertyID:(id)a2 propertyValue:(id)a3 context:(id)a4 reply:(id /* block */)a5;
- (void)updateMicrophonePermission:(long long)a0 reply:(id /* block */)a1;
- (void)updateRunningIODirections:(int)a0 session:(unsigned int)a1 directions:(unsigned int)a2 reply:(id /* block */)a3;
- (void)updateRunningIOStates:(unsigned int)a0 inputRunning:(char)a1 outputRunning:(char)a2 implicitCategory:(id)a3 deviceUIDs:(id)a4 reply:(id /* block */)a5;
- (id)clientRelay;
- (id)initWithServer:(id)a0 process:(struct ProcessInfo { struct ProcessToken { unsigned int x0; } x0; id x1; id x2; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x3; })a1 delegate:(id)a2;

@end

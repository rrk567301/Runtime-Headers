@class NSMutableDictionary, IDSUDPLink, NSDate, NSDictionary, NSObject, IDSNWLink, NSMutableArray, IDSGFTMetricsCollector, NSString, IDSGlobalLinkBlocks, IDSTCPLink, NSMutableSet, NSData, IDSServerMaterialExchangeController;
@protocol IDSGroupQUICMaterialExchangeProvider, IDSGlobalLinkP2PKeyNegotiatorProvider, OS_dispatch_source, IDSLinkDelegate;

@interface IDSGlobalLink : NSObject <IDSLink, IDSLinkDelegate, IDSStunCandidatePairDelegate, IDSServerMaterialExchangeDelegate, IDSGroupMaterialExchangeQUICHandler> {
    char _QUICForQREnabled;
    char _H2FallbackEnabled;
    char _QRIPv6Enabled;
    IDSUDPLink *_udpLink;
    IDSUDPLink *_udpLinkv6;
    IDSTCPLink *_tcpLink;
    IDSTCPLink *_tcpSSLLink;
    IDSNWLink *_nwLink;
    unsigned short _startPort;
    int _portRange;
    id /* block */ _connectReadyHandler;
    id /* block */ _disconnectCompletionHandler;
    long long _clientType;
    char _isAutoDisconnectSupportedForGFTService;
    char _allowOnlyOneQR;
    char _allowP2P;
    char _forceTCPFallbackOnWiFi;
    char _forceTCPFallbackOnCell;
    char _disallowWiFi;
    char _disallowCellular;
    char _preferCellularForCallSetup;
    char _forceIPv6;
    char _allowConcurrentQRSetup;
    struct tagIDSQRSendInfoList { } *_sendInfoList;
    unsigned short _linkIDCounter;
    char _linkIDForPlugin;
    double _natMappingTimeout;
    double _inviteSentTime;
    double _inviteRecvTime;
    unsigned int _acceptDelayU32;
    double _allocbindStartTime;
    double _allocbindEndTime;
    double _linkConnectTime;
    double _firstClientPacketTime;
    double _firstDataReceivedTime;
    char _reportClientPacketTime;
    char _reportDataReceivedTime;
    struct IDSNAT64PrefixCache_ { } *_nat64PrefixCache;
    NSMutableDictionary *_tokenToCandidatePairs;
    NSMutableDictionary *_linkIDToCandidatePairs;
    NSMutableDictionary *_channelToCandidatePairs;
    NSMutableDictionary *_transactionIDToRequestMetadata;
    NSMutableDictionary *_startTimeToStunReqID;
    NSMutableDictionary *_tokenToStunReqID;
    struct IDSSimpleUInt16List { unsigned long long listSize; unsigned long long itemCount; unsigned short *items; } _channelNumberList;
    struct IDSSimpleUInt16List { unsigned long long listSize; unsigned long long itemCount; unsigned short *items; } _reallocChannelList;
    NSMutableDictionary *_tokenToReallocBlocks;
    NSMutableDictionary *_reallocNewCandidatePairToOldCandidatePair;
    NSMutableDictionary *_unallocbindRequestToReason;
    NSObject<OS_dispatch_source> *_disconnectTimer;
    NSObject<OS_dispatch_source> *_activityTimer;
    NSMutableDictionary *_linkIDToReorderedPackets;
    NSMutableDictionary *_linkIDToRequestTimeStampAndRTT;
    NSMutableDictionary *_linkIDToHBCounter;
    NSMutableArray *_connectedLinkIDs;
    NSMutableArray *_activeProbingLinkIDs;
    NSMutableDictionary *_connectingCandidatePairSessionInfo;
    NSMutableArray *_interfaceAddressArray;
    NSMutableArray *_unusedLinkIDs;
    int _maxLinkID;
    char _isInitiator;
    int _nominateCount;
    NSMutableArray *_localCandidateList;
    NSMutableArray *_remoteCandidateList;
    NSMutableDictionary *_tokenToStunCheckPairs;
    char _enableSKE;
    NSData *_skeData;
    char _recvRemoteSKEData;
    char _delaySessionConnected;
    char _skeToRemoteComplete;
    double _skeStartTime;
    NSString *_acceptedRelaySessionID;
    NSMutableArray *_nonAcceptedQRSessions;
    char _isSessionAcceptedWithNoCandidatePair;
    long long _remoteCapabilityFlag;
    char _delayedConnData;
    int _localConnDataCounter;
    int _remoteConnDataCounter;
    NSMutableArray *_delayedCellInterfaces;
    char _hasPendingAllocation;
    NSMutableArray *_targetedAllocations;
    char _useSecureControlMessage;
    NSData *_controlMessageKey;
    char _basebandPacketLinkID;
    unsigned char _cellularSlicingFlags;
    unsigned short _basebandPacketChannelNumber;
    IDSGlobalLinkBlocks *_qraBlocks;
    NSMutableArray *_allocateTimeReportBlocks;
    char _hasPendingSelfAllocation;
    NSMutableArray *_selfAllocateRequestIDs;
    unsigned char _clientUUID[16];
    NSString *_idsSessionID;
    unsigned long long _totalBytesSent;
    unsigned long long _totalPacketsSent;
    unsigned long long _totalBytesReceived;
    unsigned long long _totalPacketsReceived;
    unsigned long long _previousBytesSent;
    unsigned long long _previousPacketsSent;
    unsigned long long _previousBytesReceived;
    unsigned long long _previousPacketsReceived;
    double _previousReportTime;
    double _calleeAcceptTime;
    double _delayQUICDisconnectionAfterInfo;
    char _isSecondOrLaterParticipant;
    char _shouldReportAcceptDelay;
    unsigned int _probingTimeout;
    short _remoteGlobalLinkVersion;
    char _reduceCellularUsage;
    char _reduceRelayLinkCreation;
    char _shouldProcessBasebandNotification;
    char _supportChannelData;
    char _islocalCellAttributeInexpensive;
    char _shouldAcceptIncomingMKMOverQR;
    char _shouldFallbackToTCPFirst;
    char _receivedAllocbindResponse;
    NSMutableDictionary *_retryCountPerLinkType;
    unsigned int _remoteDeviceVersion;
    char _isUPlusOneSession;
    unsigned int _localRelayInterfaceCounter;
    unsigned int _remoteRelayInterfaceCounter;
    double _remoteJoinedUPlusOneTime;
    NSMutableDictionary *_localRemoteRelayLinkIDToVirtualCandidatePairs;
    long long _delayFirstConnectionData;
    char _receivedRemoteDeviceVersion;
    id /* block */ _pendingCommandConnectionDataBlock;
    id /* block */ _pendingCommandRelayInterfaceInfoBlock;
    char _isLightweightParticipant;
    char _isShortMKIEnabled;
    NSDate *_timeBase;
    NSDictionary *_QRServerDataBlob;
    NSMutableDictionary *_pluginParticipantIDs;
    NSMutableDictionary *_pluginNameToPluginOptionsDict;
    NSMutableArray *_pluginControlDisconnectRecentTransactionIDs;
    NSData *_avcDataBlob;
    NSData *_idsContextBlob;
    IDSServerMaterialExchangeController *_serverMaterialExchangeController;
    id<IDSGroupQUICMaterialExchangeProvider> _quicMaterialExchangeProvider;
    IDSGFTMetricsCollector *_metricsCollector;
    NSDictionary *_allocationsToTransportScoreCards;
    NSMutableArray *_transportScoreCards;
    NSMutableDictionary *_putMaterialReqTxIdToCompletionBlock;
    char _shouldEnable0RTT;
    char _uplinkNackDisabled;
    NSDictionary *_qrSessionExperiments;
    NSDictionary *_qrChannelExperiments;
    NSDictionary *_qrExperiments;
    unsigned long long _clientUniquePID;
    NSMutableDictionary *_linkIDToStatsData;
    char _hasSetServerDesiredMaterials;
    char _isTLEEnabled;
    char _isGeckoEnabled;
    char _conversationShouldUseP2PTLEAccordingToServer;
    char _shouldOverrideServerTestOptionTLEDisabled;
    char _serverTestOptionTLEDisabled;
    char _forceTLE;
    char _forceP2PTLE;
    char _allowTLEOverCellular;
    char _allowTLEOverVRLinks;
    unsigned long long _nextP2PNegotiationAttempt;
    char _disableDirectDatapath;
    id<IDSGlobalLinkP2PKeyNegotiatorProvider> _p2pNegotiatorProvider;
    NSString *_groupID;
    NSMutableSet *_usedLinks;
    NSMutableSet *_usedLocalConnectionIDs;
    char _sharedSessionJoined;
    char _isReliableUnicastSession;
    char _isReliableUnicastClient;
    char _disablePureLinkFeature;
    char _sharedSessionHasJoined;
    char _ipDiscoveryDisabled;
    NSObject<OS_dispatch_source> *_networkAddressChangeTimer;
    NSString *_cellInterfaceName;
}

@property (retain) NSString *cbuuid;
@property (retain) NSString *deviceUniqueID;
@property (readonly, getter=linkTypeString) NSString *linkTypeString;
@property (readonly) unsigned long long state;
@property (readonly) unsigned long long headerOverhead;
@property (weak) id<IDSLinkDelegate> delegate;
@property (weak) id<IDSLinkDelegate> alternateDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)getGLClassWithOptions:(id)a0;

- (void)dealloc;
- (void).cxx_destruct;
- (void)invalidate;
- (id)_getLocalAttribute:(id)a0;
- (char)_postProcessAllocbindResponse:(id)a0 candidatePair:(id)a1 candidatePairToken:(id)a2;
- (long long)_sendStunMessage:(id)a0 candidatePair:(id)a1;
- (char)_shouldUseVRTLE;
- (void)receiveErrorIndicationWithCode:(unsigned int)a0;
- (char)remoteHostAwake;
- (void)setReceivedRemoteDeviceVersion:(char)a0;
- (id)_createInterfaceAddressArrayWithNWLink:(char)a0 wantsWiFi:(char)a1 wantsCellular:(char)a2;
- (char)_findTriedCandidatePairForSession:(id)a0 wantOnlyCell:(char)a1 wantOnlyNonCell:(char)a2;
- (id)_getAllocbindReportingDataBlob:(id)a0;
- (void)_removePacketNotificationFilter;
- (void)_sendSessionDisconnectedCommand;
- (char)_shouldUseQRTLE;
- (void)_updateSendStatsWithResult:(unsigned long long)a0 bytesSent:(long long)a1 packetsSent:(int)a2 linkID:(char)a3 delegatedLinkID:(char)a4 token:(id)a5 isClientData:(char)a6 sendTime:(double)a7 stunTransport:(long long)a8 packetBuffer:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a9;
- (unsigned long long)defaultLinkType;
- (long long)sendProtoMessage:(id)a0 candidatePair:(id)a1;
- (void)setPluginCache:(id)a0;
- (char)_IsExtIPDiscoveryNeeded:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a0 candidatePairList:(id)a1;
- (char)_addCandidate:(id)a0 isRemoteCandidate:(char)a1;
- (void)_addQRAAWDBlock:(id)a0 allocateRequestTime:(double)a1 inferredExternalRAT:(unsigned int)a2 stunTransport:(long long)a3 relayProviderType:(long long)a4 idsSessionID:(id)a5 reportingDataBlob:(id)a6 isInitiator:(char)a7 serverSoftwareVersion:(id)a8;
- (id)_addSocketAndInterfaceAddress:(unsigned long long)a0 wantsWiFi:(char)a1 wantsCellular:(char)a2;
- (id)_addSocketAndInterfaceAddressWithNWLink:(char)a0 wantsWiFi:(char)a1 wantsCellular:(char)a2;
- (void)_addStunCheckPair:(id)a0 isRemoteCandidate:(char)a1;
- (void)_addStunCheckPair:(id)a0 isRemoteCandidate:(char)a1 excludeLocalAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a2;
- (void)_attemptP2PNegotiationForSTUNMessage:(id)a0 candidatePair:(id)a1 completionHandler:(id /* block */)a2;
- (void)_buildQrExperiments;
- (void)_callDisconnectCompletionHandler:(id)a0;
- (void)_connectNWLink:(id)a0 disconnectAfterUse:(char)a1 connectedHandler:(id /* block */)a2;
- (void)_connectNWTCPLink:(id)a0 disconnectAfterUse:(char)a1 connectedHandler:(id /* block */)a2;
- (void)_connectWithSessionInfo:(id)a0 interfaceAddress:(id)a1 joinSession:(char)a2 allocbindFailover:(char)a3 completionHandler:(id /* block */)a4 withLocalInterfacePreference:(int)a5;
- (id)_convergeSharedSessions:(id)a0;
- (id)_createCommandData:(long long)a0 options:(id)a1 candidatePair:(id)a2;
- (id)_createIDSContextBlobMaterialProto:(id)a0;
- (id)_createInterfaceAddressArray:(unsigned long long)a0 wantsWiFi:(char)a1 wantsCellular:(char)a2;
- (void)_delayProcessingCellularInterfaces:(id)a0;
- (void)_destroyVirtualRelayLinksForCandidatePair:(id)a0 withReason:(unsigned char)a1;
- (void)_didReceiveRequestToPurgeRegistration;
- (void)_discardAllCandidatePairs:(char)a0;
- (void)_discardCandidatePairsWithOption:(char)a0 isReinitiating:(char)a1;
- (void)_discardKeyMaterialMessage:(long long)a0;
- (void)_discardNonAcceptedCandidatePairs;
- (void)_discardNonSlicedP2PCandidatePairs;
- (void)_discardSelfAllocateCandidatePairs;
- (void)_disconnectPluginConnectionsForParticipantID:(unsigned long long)a0 andPurgeRegistration:(char)a1;
- (void)_enableE2E;
- (id)_filterNonSlicedLocalCandidates:(id)a0;
- (id)_findCandidatePairWithRelaySessionID:(id)a0;
- (id)_findVirtualCandidatePair:(id)a0;
- (void)_generateTransportScoreCard;
- (void)_getAndProcessDatablobsFromReceivedMaterials:(id)a0;
- (id)_getCandidatePairsWithSessionID:(id)a0 inState:(unsigned long long)a1;
- (int)_getExpensiveLinkFlagsForCandidatePair:(id)a0;
- (unsigned int)_getExternalIPAddressRAT:(id)a0;
- (id)_getLink:(int)a0 stunTransport:(long long)a1;
- (void)_getNAT64PrefixForInterface:(int)a0 interfaceName:(id)a1 completionBlock:(id /* block */)a2;
- (unsigned char)_getNewLinkType:(id)a0 remoteInterface:(int *)a1;
- (void)_getP2PNegotiationForCandidatePair:(id)a0 completionBlock:(id /* block */)a1;
- (char)_getPacketBufferSendInfo:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a0 channelNumber:(unsigned short *)a1 transport:(long long *)a2;
- (long long)_getQRAllocateType;
- (id)_getRemoteAttribute:(id)a0;
- (char)_getSessionParticipants:(id)a0 relaySessionID:(id)a1 options:(id)a2;
- (char)_getSessionStreamInfo:(id)a0 relaySessionID:(id)a1 options:(id)a2;
- (void)_handleActivityTimer;
- (void)_handleAllocbindFailoverTimer:(id)a0 failoverTimerOnCandidatePair:(id)a1 onInterface:(int)a2;
- (void)_handleAllocbindFailoverTimerWithTransportScoreCards:(id)a0 failoverTimerOnCandidatePair:(id)a1 onInterface:(int)a2;
- (void)_handleDisconnect:(char)a0;
- (void)_handleDisconnectTimer;
- (void)_handleNewRATChange;
- (void)_handleNoRemotePacket;
- (char)_handleRemapping:(id)a0 errorCode:(unsigned short)a1 reconnectQUIC:(char)a2;
- (void)_handleSelfAllocationTimeout:(id)a0;
- (char)_hasActiveAllocbindFailoverTimerForSessionID:(id)a0;
- (char)_hasCandidatePairInState:(unsigned long long)a0 anotherState:(unsigned long long)a1 relayCandidatePairsOnly:(char)a2 excludeSelfAlloc:(char)a3;
- (char)_hasCandidatePairInState:(unsigned long long)a0 relayCandidatePairsOnly:(char)a1 excludeSelfAlloc:(char)a2;
- (char)_hasConnectedP2pLink;
- (char)_hasConnectingRelayCandidatePair;
- (char)_hasStunRequest:(id)a0;
- (char)_interfaceName:(id)a0 missingFrom:(id)a1;
- (id)_interfaceNameForInterfaceIndex:(unsigned int)a0;
- (id)_interfaceNameForInterfaceIndexIncludingVPN:(unsigned int)a0;
- (char)_isAcceptedRelaySessionForAllocationRequestID:(id)a0 acceptedRelaySessionID:(id)a1;
- (char)_isCLAT46Interface:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a0;
- (char)_isCellularInterfaceForCandidatePair:(id)a0 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a1;
- (char)_isExtIPDiscoveryDone;
- (char)_isInterfaceConstrainedWithInterfaceIndex:(unsigned int)a0;
- (char)_isInterfaceDelegatedWithInterfaceIndex:(unsigned int)a0;
- (char)_isInterfaceExpensiveWithInterfaceIndex:(unsigned int)a0;
- (char)_isSharedQRSession:(id)a0;
- (char)_isSlicedCellularInterfaceActive:(unsigned int)a0;
- (char)_isUsingSameRATCandidatePair:(id)a0 transportScoreCard:(id)a1;
- (void)_nominateCandidatePair:(id)a0;
- (void)_notifyCandidatePairConnected:(id)a0;
- (void)_notifyCandidatePairDisconnected:(id)a0 withReason:(unsigned char)a1;
- (void)_notifyDefaultUnderlyingLinkChanged:(id)a0 error:(long long)a1;
- (void)_notifyLinkDisconnectedWithError:(long long)a0 reason:(unsigned char)a1;
- (void)_notifyQRSessionConnected:(id)a0;
- (void)_notifySessionInfoReceived:(id)a0 relayGroupID:(id)a1 relaySessionID:(id)a2 status:(unsigned int)a3;
- (void)_parseActiveExperiments:(id)a0;
- (void)_parseClientUUID:(id)a0;
- (char)_postProcessQUICAllocbindResponse:(id)a0 candidatePair:(id)a1;
- (unsigned long long)_prepareOutgoingChannelData:(struct **)a0 arraySize:(int)a1 channelNumber:(unsigned short)a2 candidatePair:(id)a3 linkID:(char)a4 delegatedLinkID:(char *)a5 stunTransport:(long long)a6;
- (char)_processAllocbindResponse:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (char)_processBindingRequest:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (char)_processBindingResponse:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (char)_processChannelDataCommandMessage:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a0 remoteRelayLinkID:(unsigned short)a1 channelNumber:(unsigned short)a2 fromDeviceUniqueID:(id)a3 cbuuid:(id)a4 arrivalTime:(double)a5;
- (void)_processCommandConnected:(id)a0 candidatePairToken:(id)a1;
- (void)_processCommandConnectionData:(id)a0 candidatePairToken:(id)a1;
- (void)_processCommandDisconnected:(id)a0 candidatePairToken:(id)a1;
- (void)_processCommandHeartbeat:(id)a0 candidatePairToken:(id)a1 arrivalTime:(double)a2 remoteRelayLinkID:(unsigned short)a3;
- (void)_processCommandNominate:(id)a0 candidatePairToken:(id)a1;
- (void)_processCommandRelayInterfaceInfo:(id)a0 candidatePairToken:(id)a1;
- (char)_processDataIndication:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (void)_processDataOnReallocChannel:(unsigned short)a0 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a1 remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a2;
- (void)_processDelayedCellularInterfaces;
- (char)_processGoAwayIndication:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (char)_processIncomingIndicationData:(char *)a0 length:(int)a1 candidatePairToken:(id)a2 arrivalTime:(double)a3 remoteRelayLinkID:(unsigned short)a4;
- (char)_processNWLinkAllocbindResponse:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (void)_processNewLocalAddressList:(id)a0;
- (void)_processNewRemoteCandidates:(id)a0;
- (char)_processProtoPacket:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a0 fromDeviceUniqueID:(id)a1 cbuuid:(id)a2 arrivalTime:(double)a3 headerOverhead:(unsigned long long)a4;
- (char)_processQUICGoAwayIndication:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (char)_processQUICReallocIndication:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (char)_processQUICUnallocbindResponse:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (void)_processReallocChannelData:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a0 channelNumber:(unsigned short)a1 fromDeviceUniqueID:(id)a2 cbuuid:(id)a3 arrivalTime:(double)a4;
- (char)_processReallocIndication:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (char)_processRegisterAckResponse:(id)a0 candidatePairToken:(id)a1;
- (char)_processRegisterIndication:(id)a0 candidatePairToken:(id)a1;
- (char)_processRegisterResponse:(id)a0 candidatePairToken:(id)a1;
- (char)_processReliableUnicastRegistrationErrorResponse:(id)a0 packetBuffer:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a1 startTime:(double)a2 candidatePair:(id)a3;
- (void)_processRemoteCandidates:(id)a0;
- (void)_processRemoteLinkUUID:(id)a0 candidatePair:(id)a1;
- (char)_processRemovedLocalAddressList:(id)a0;
- (void)_processRemovedRemoteCandidates:(id)a0;
- (char)_processStunPacket:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a0 fromDeviceUniqueID:(id)a1 cbuuid:(id)a2 arrivalTime:(double)a3 headerOverhead:(unsigned long long)a4;
- (char)_processUnallocbindResponse:(id)a0 fromDevice:(id)a1 localIfIndex:(unsigned int)a2 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a4 candidatePairToken:(id)a5 arrivalTime:(double)a6;
- (void)_processXORMappedAddress:(id)a0 arrivalTime:(double)a1;
- (char)_qrLinkLimitExceededWithNewLinkType:(unsigned char)a0 cellularRelayLinkCount:(unsigned short)a1 wifiRelayLinkCount:(unsigned short)a2;
- (char)_qrMaterialExchangePutMaterial:(id)a0 completionHandler:(id /* block */)a1;
- (void)_receiveP2PNegotiationBlob:(id)a0 attemptID:(unsigned long long)a1 remoteIDSConnectionID:(unsigned int)a2 remoteAVCConnectionID:(unsigned int)a3 candidatePair:(id)a4 completionHandler:(id /* block */)a5;
- (void)_removeChannelFromChannelToCandidatePair:(id)a0;
- (void)_removeProtoRequest:(unsigned long long)a0 status:(unsigned int)a1;
- (void)_removeStunRequest:(id)a0;
- (void)_reportAWDAllocateTime;
- (void)_reportSessionSetupTime;
- (void)_requestNewTwoWayQRAllocation:(id)a0;
- (void)_requestNonUDPRelayAllocation:(long long)a0 relaySessionID:(id)a1;
- (char)_requestSelfAllocationForInterfaceAddress:(id)a0;
- (void)_resetRetryCountForCandidatePair:(id)a0;
- (void)_saveProtoRequest:(id)a0 token:(id)a1;
- (void)_saveStunRequest:(id)a0 startTime:(double)a1 token:(id)a2;
- (void)_selectBetterDefaultCandidatePair:(id)a0;
- (void)_selectStunTransport:(long long *)a0 andInterfaceAddress:(id *)a1 forRelaySessionID:(id)a2 preferIPv4:(char)a3 isValidSA:(char)a4;
- (void)_selectStunTransport:(long long *)a0 andInterfaceAddress:(id *)a1 forRelaySessionID:(id)a2 preferIPv4:(char)a3 wantOnlyCell:(char)a4 wantOnlyNonCell:(char)a5 isValidSA:(char)a6;
- (void)_sendAllocbindRequest:(id)a0 stunMessage:(id)a1 isRealloc:(char)a2 inResponseToNoSessionState:(char)a3;
- (void)_sendAllocbindRequestForExtIP:(id)a0 startTime:(double)a1;
- (void)_sendBindingRequest:(id)a0 stunMessage:(id)a1;
- (void)_sendChannelDataCommandMessage:(long long)a0 packetBuffer:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a1 options:(id)a2 candidatePairToken:(id)a3;
- (unsigned long long)_sendChannelDataPacketBuffer:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a0 candidatePair:(id)a1;
- (void)_sendCommandMessage:(long long)a0 stunMessage:(id)a1 options:(id)a2 candidatePairToken:(id)a3;
- (void)_sendConnectionDataWithRemovedAddressList:(id)a0;
- (char)_sendInfoRequest:(id)a0 relaySessionID:(id)a1;
- (void)_sendNowConnectionDataWithRemovedAddressList:(id)a0;
- (long long)_sendPacketBuffer:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a0 stunTransport:(long long)a1 token:(id)a2 linkID:(char)a3 delegatedLinkID:(char)a4;
- (long long)_sendProtoMessage:(id)a0 candidatePair:(id)a1;
- (void)_sendQUICAllocbindRequest:(id)a0 isRealloc:(char)a1 inResponseToNoSessionState:(char)a2 shouldConnectLinkFirst:(char)a3 isPendingInResponseToNoSessionState:(char)a4;
- (void)_sendQUICUnallocbindRequest:(id)a0 reason:(unsigned char)a1;
- (void)_sendRelayInterfaceInfo:(id)a0;
- (void)_sendSKEDataToSucceededCandidatePairs;
- (void)_sendSKEDataWithSelectedCandidatePair;
- (long long)_sendStunMessage:(id)a0 sourceIfIndex:(int)a1 source:(const struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a2 destination:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a3 stunTransport:(long long)a4 token:(id)a5 linkID:(char)a6 delegatedLinkID:(char)a7 MTULimit:(int)a8;
- (void)_sendUnallocbindRequest:(id)a0 stunMessage:(id)a1 reason:(unsigned char)a2;
- (void)_sendUnallocbindRequestTimeOut:(id)a0 stunMessage:(id)a1 reason:(unsigned char)a2;
- (void)_setCandidatePairConnected:(id)a0;
- (void)_setChannelToCandidatePair:(id)a0 localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a1 remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a2 channelNumber:(unsigned short)a3;
- (void)_setDefaultCandidatePairForNonFT;
- (void)_setFirstDefaultCandidatePair:(id)a0;
- (void)_setLinkMetricsAttributesForCandidatePair:(id)a0;
- (void)_setRemoteGlobalLinkVersionWithCommand:(long long)a0 receivedRemoteVersion:(char)a1 versionValue:(unsigned short)a2 receivedSKE:(char)a3;
- (char)_setupNewQRLinkIfNecessary:(id)a0;
- (void)_setupRelayConnectionForNetworkAddressChanges;
- (void)_setupRelayConnectionForNetworkAddressChangesHelper;
- (char)_shouldSkipCommand:(long long)a0 withCandidatePair:(id)a1 connectionDataCounter:(int)a2 relayInterfaceCounter:(int)a3;
- (char)_shouldUseP2PTLE;
- (char)_skipCommandMessage:(long long)a0 candidatePair:(id)a1 timeNow:(double)a2;
- (void)_startActivityTimer;
- (void)_startAllocbindFailoverTimerOnCandidatePair:(id)a0 delay:(int)a1;
- (void)_startDisconnectTimer;
- (void)_startExtIPDiscovery;
- (void)_startHB:(id)a0;
- (void)_startStunCheck:(id)a0;
- (double)_startTimeForProtoRequest:(unsigned long long)a0;
- (double)_startTimeForStunRequest:(id)a0;
- (void)_stopActivityTimer;
- (void)_stopAllocbindFailoverTimer:(id)a0;
- (void)_stopDisconnectTimer;
- (void)_stopProbingOnLinkID:(char)a0;
- (char)_synthesizeNAT64ForAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a0 withPrefix:(struct { int x0; unsigned char x1[12]; } *)a1 toAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14]; } *)a2;
- (id)_tokenForProtoRequest:(unsigned long long)a0;
- (id)_translateLinkTransportTypeWhenH2Enabled:(id)a0;
- (id)_transportInterfaceToString:(long long)a0;
- (void)_updateCandidatePair:(id)a0 newLocalPort:(unsigned short)a1;
- (void)_updateDefaultCandidatePair:(id)a0;
- (void)_updateInterfaceAddressesWithAddList:(id)a0 removeList:(id)a1;
- (void)_updateLinkIDForPlugin:(id)a0;
- (void)_updateNominatedCandidatePair:(id)a0;
- (void)candidatePair:(id)a0 didAddQREvent:(id)a1;
- (void)candidatePair:(id)a0 didReceiveGetMaterialResponse:(id)a1;
- (void)candidatePair:(id)a0 didReceiveMappedParticipantsDict:(id)a1 forLinkID:(char)a2;
- (void)candidatePair:(id)a0 didReceiveParticipantUpdate:(id)a1 status:(unsigned short)a2;
- (void)candidatePair:(id)a0 didReceivePluginControlEvent:(unsigned long long)a1 operation:(unsigned char)a2 transactionID:(id)a3;
- (void)candidatePair:(id)a0 didReceivePluginRegistration:(unsigned long long)a1 pluginName:(id)a2;
- (void)candidatePair:(id)a0 didReceivePluginUnregistration:(unsigned long long)a1 pluginName:(id)a2;
- (void)candidatePair:(id)a0 didReceivePutMaterialIndication:(id)a1;
- (void)candidatePair:(id)a0 didReceivePutMaterialResponse:(id)a1 forTxId:(unsigned long long)a2;
- (void)candidatePair:(id)a0 didReceiveSessionInfo:(id)a1 status:(unsigned int)a2;
- (void)candidatePair:(id)a0 didReceiveSessionStats:(id)a1 success:(char)a2;
- (void)candidatePair:(id)a0 didReceiveStunErrorResponse:(long long)a1 errorCode:(unsigned short)a2 didLocalExternalAddressChange:(char)a3;
- (void)candidatePair:(id)a0 protoRequestDidTimeOut:(unsigned long long)a1;
- (void)connectWithSessionInfo:(id)a0 interfaceAddress:(id)a1 joinSession:(char)a2 completionHandler:(id /* block */)a3 withLocalInterfacePreference:(int)a4;
- (id)copyLinkStatsDict;
- (unsigned long long)createAliasForParticipantID:(unsigned long long)a0 salt:(id)a1 relayGroupID:(id)a2;
- (id)createLinkCycleForCandidatePair:(id)a0;
- (void)currentCellularSignalStrength:(int *)a0 signalStrength:(int *)a1 signalGrade:(int *)a2;
- (void)didReceiveProtobufPacketForLinkID:(unsigned char)a0;
- (void)disconnectIdleQUICConnectionForCandidatePair:(id)a0;
- (void)disconnectWithCompletionHandler:(id /* block */)a0 isReinitiating:(char)a1;
- (void)dropIPPackets:(char)a0 payloadArray:(id)a1;
- (void)enableUPlusOneSessionForTransition:(char)a0;
- (void)flushLinkProbingStatus:(id)a0;
- (id)generateLinkReport:(double)a0 isCurrentLink:(char)a1;
- (long long)getAllocBindErrorCodeForSessionID:(id)a0;
- (id)getLocalAttribute:(id)a0;
- (id)getRemoteAttribute:(id)a0;
- (void)getSessionInfo:(id)a0 relaySessionID:(id)a1 requestType:(long long)a2 options:(id)a3;
- (void)handleCellularRATChange;
- (void)handleNetworkAddressChanges:(char)a0 hasIPv6AddressChange:(char)a1;
- (char)hasReachableInterface:(unsigned long long)a0;
- (id)initWithDeviceUniqueID:(id)a0 cbuuid:(id)a1;
- (void)link:(id)a0 didConnectForDeviceUniqueID:(id)a1 cbuuid:(id)a2;
- (void)link:(id)a0 didDisconnectForDeviceUniqueID:(id)a1 cbuuid:(id)a2;
- (void)link:(id)a0 didFailConnectionOfType:(id)a1;
- (void)link:(id)a0 didMitigateCollision:(char)a1;
- (char)link:(id)a0 didReceivePacket:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a1 fromDeviceUniqueID:(id)a2 cbuuid:(id)a3;
- (void)linkTransactionIDMismatchDetected:(id)a0;
- (void)manageDesignatedDestinations:(id)a0 relayGroupID:(id)a1 withType:(unsigned short)a2 sessionStateCounter:(unsigned int)a3;
- (unsigned long long)participantIDForAlias:(unsigned long long)a0 salt:(id)a1 relayGroupID:(id)a2;
- (char)qrMaterialExchangePutMaterial:(id)a0;
- (void)qrMaterialExchangePutMaterial:(id)a0 completionHandler:(id /* block */)a1;
- (void)queryLinkProbingStatus:(id)a0;
- (void)receiveBlockedIndicationWithReason:(unsigned int)a0;
- (void)receiveIdleClientErrorForCandidatePair:(id)a0;
- (void)receiveJoinNotificationFromAParticipant;
- (void)receiveKeyMaterials:(id)a0;
- (char)receiveNoSessionStateForCandidatePair:(id)a0 didLocalExternalAddressChange:(char)a1;
- (void)registerPluginWithOptions:(id)a0 relayGroupID:(id)a1;
- (void)removeParticipantIDs:(id)a0 relayGroupID:(id)a1 sessionStateCounter:(unsigned int)a2;
- (void)reportLinkEvent:(id)a0 linkID:(unsigned char)a1;
- (void)reportLinkMetricsForLinkID:(unsigned char)a0 lastPacketReceivedTime:(double)a1 lastPacketSentTime:(double)a2;
- (void)requestChildConnectionIDForLinkID:(char)a0 relayGroupID:(id)a1;
- (void)requestMaterialsForSession:(id)a0 participantIDs:(id)a1 materialType:(int)a2;
- (void)sendAllocbindRequest:(id)a0 isRealloc:(char)a1 inResponseToNoSessionState:(char)a2 reconnectQUIC:(char)a3;
- (void)sendConnectedLinkInfoToAVC;
- (void)sendKeyMaterialMessageData:(id)a0 relayGroupID:(id)a1 destinationURIs:(id)a2 completionHandler:(id /* block */)a3;
- (unsigned long long)sendPacketBuffer:(struct { char *x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; unsigned char x5; char x6; char x7; char x8; char x9; char x10; char x11; char x12; char x13; char x14; char x15; char x16; unsigned int x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x19; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6]; long long x3; char x4[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x0; unsigned short x1; int x2; unsigned short x3[12]; unsigned long long x4; unsigned char x5; unsigned short x6; unsigned char x7; char x8; char x9; unsigned short x10; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x11; char x12; char x13; int x14; unsigned short x15[4]; unsigned char x16; char x17; char x18; char x19; unsigned int x20; } x24[8]; char x25; char x26; int x27; double x28; unsigned char x29[16]; unsigned long long x30; unsigned long long x31; id x32; int x33; unsigned int x34; unsigned short x35; unsigned long long x36; char x37; unsigned char x38[0]; } *)a0 toDeviceUniqueID:(id)a1 cbuuid:(id)a2;
- (unsigned long long)sendPacketBufferArray:(struct **)a0 arraySize:(int)a1 toDeviceUniqueID:(id)a2 cbuuid:(id)a3;
- (void)sendProbingRequestWithoptions:(id)a0 candidatePairToken:(id)a1;
- (void)sendSKEData:(id)a0;
- (void)sendStatsRequest:(id)a0;
- (void)sendStatsRequestForClient:(id)a0;
- (long long)sendStunMessage:(id)a0 candidatePair:(id)a1;
- (void)setAcceptedRelaySession:(id)a0 options:(id)a1;
- (void)setAllowP2P:(char)a0;
- (void)setCellInterfaceName:(id)a0;
- (void)setClientUniquePID:(unsigned long long)a0;
- (void)setDefaultUnderlyingLink:(char)a0;
- (void)setForceTCPFallbackOnCell:(char)a0;
- (void)setForceTCPFallbackOnWiFi:(char)a0;
- (void)setHasPendingAllocation:(char)a0;
- (void)setIDSContextBlob:(id)a0;
- (void)setIsReliableUnicastSession:(char)a0 isClient:(char)a1;
- (void)setIsUPlusOneSession:(char)a0;
- (void)setPacketNotificationFilter:(char)a0 uniqueTag:(unsigned int)a1 isEnabled:(char)a2;
- (void)setParticipantType:(unsigned short)a0 relayGroupID:(id)a1 sessionStateCounter:(unsigned int)a2 withClientContextBlob:(id)a3 identifier:(unsigned long long)a4;
- (void)setRemoteDeviceVersion:(unsigned int)a0;
- (void)setServerDesiredMaterialsForSession:(id)a0 materials:(id)a1 signer:(id /* block */)a2;
- (void)setSharedSessionHasJoined:(char)a0;
- (void)setTimeBase:(id)a0;
- (void)setUpP2PQUICPodConnectionsForCandidatePair:(id)a0 attemptID:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)setWiFiAssistState:(char)a0;
- (void)startLinkProbing:(id)a0;
- (void)startWithOptions:(id)a0;
- (void)stopKeepAlive:(id)a0;
- (void)stopLinkProbing:(id)a0;
- (void)updateProtocolQualityOfService:(char)a0 isGood:(char)a1;
- (void)updateSessionParticipants:(id)a0 relaySessionID:(id)a1 participants:(id)a2;
- (void)updateURIToParticipantIDs:(id)a0 relaySessionID:(id)a1 sessionInfo:(id)a2;

@end

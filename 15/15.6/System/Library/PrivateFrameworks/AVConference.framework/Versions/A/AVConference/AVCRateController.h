@class VCRateControlTrafficMetricCollector, AVCStatisticsCollector, NSString, VCRateControlMediaController, VCRateSharingGroup, AVCRateControlFeedbackController, AVCBasebandCongestionDetector, VCRateControlServerBag, NSObject, VCNWConnectionCongestionDetector;
@protocol OS_nw_activity, VCRateControlAlgorithm, OS_dispatch_queue, AVCRateControllerDelegate;

@interface AVCRateController : NSObject <VCRateSharingClient> {
    struct OpaqueFigCFWeakReference { } *_rateControllerDelegateWeak;
    id<AVCRateControllerDelegate> _rateControllerDelegate;
    struct tagVCRateControlAlgorithmConfig { unsigned int serverBagProfileNumber; unsigned int *tierBitrates; int initialTierIndex; int maxTierIndex; int minTierIndex; int softMaxTierIndex[2]; int lowestNonEmergencyTierIndex; int lowestNonEmergencyTierIndexWiFi; int lowestEffectiveBWETierIndex; int lowestTierIndexReactToNoServerActivity; int rampUpTierNumber; int rampDownTierNumber; int rampUpAdditionalTierAtInitial; int rampDownAdditionalTierAtInitial; int rampDownBurstyLossThreshold; int lowestTierForBurstyLossRampDown; int lowestTierToEnableRateLimited; int audioOnlyNoRateLimitedTierThreshold; double rampDownNOWRDThreshold; double rampDownNOWRDAccThreshold; double rampDownAggressiveNOWRDThreshold; double rampDownAggressiveNOWRDAccThreshold; double rampDownConstantOWRDDuration; double rampDownOvershootDuration; double rampDownOvershootNextTierRatio; double rampUpFrozenDuration; double rampUpSettleDuration; double rampUpOWRDThreshold; double rampUpNOWRDThreshold; double rampUpNOWRDAccThreshold; double rampUpOverBandwidthCalmDuration; double rampUpBlockedTimeout; int rampUpOverBandwidthTierNumber; int rampDownLossEventThreshold; int rampDownLossEventBadTrendThreshold; double rampDownLossEventThresholdRatio; double rampDownLossEventWindowDuration; double rampDownLossEventNOWRDThreshold; double rampUpFrozenPLRThreshold; double rampUpRateLimitedRatio; double unstableRateLimitedDuration; double congestionWaitDuration; double owrdWindowDuration; double owrdShortWindowDuration; double minimumNOWRDTimeDifference; double owrdInitialRampUpReadyDuration; unsigned int owrdHistorySize; unsigned int owrdMininumHistorySize; unsigned int fastRampDownBitrateRange; unsigned int fastRampUpBitrateRange; unsigned int consecutiveRampDownThresholdForCongestion; double continuousRampUpTimeFactor[5]; char bytesInFlightAdaptationEnabled; char useContinuousAdaptationAlgorithm; char receivedBandwidthEstimationEnabled; char basebandAdaptationEnabled; char rateLimitedEnabled; char randomRampUpFrozenDurationEnabled; char oscillationAvoidanceEnabled; char fastRampUpEnabled; char blockRampUpInSaturatedNetworkEnabled; char blockRampUpInBluetoothCoexEnabled; char wifiEmergencyTiersEnabled; char burstyTrafficEnabled; char lowLatencyWANEnabled; char rampDownToActualSendBitrate; int rampDownToActualSendBitrateMinTier; char rampDownSuppressionEnabled; double rampDownSuppressionMinRTT; double rampDownSuppressionFactor; int fastRampUpHighestTier; double fastRampUpRTTRatio; int fastRampUpTierGap; double fastRampUpNetworkStableDuration; double networkSaturatedRTTToMinRTTRatio; double networkSaturatedOWRDToMinRTTRatio; int networkSaturatedPersistFeedbackNumber; double networkSaturatedRTTDecreasingThreshold; int oscillationAvoidanceTierChangeThreshold; int oscillationAvoidanceTiersHitThreshold; double oscillationAvoidanceDurationRatio; double oscillationAvoidanceDurationRatioAggressive; int stabilizationScheme; double rampDownNBDCDThreshold; double rampDownAggressiveNBDCDThreshold; double rampDownNormalizedQueuingDelayThreshold; double rampDownMediumQueuingDelayThreshold; double rampDownHighQueuingDelayThreshold; double rampDownEmergencyTierCoolDownTime; double rampDownWiFiEmergencyTierCoolDownTime; double rampDownNWConnectionAvgDelayThresholdMin; double rampDownNWConnectionAvgDelayThresholdMax; double rampDownContinuousTierSpeedFactor; double rampUpContinuousTierSpeedFactor; double rampUpNBDCDThreshold; double rampUpQueuingDelayThreshold; double rampUpNBDCDCoolDownTime; double rampUpAudioFractionCoolDownTime; double basebandRATSwitchCoolDownTime; double basebandAdaptationCrossTrafficRatio; double rampUpNetworkUnstableCoolDownTime; double autoResumeDurationAfterPaused; double pauseOffChannelHighRatio; double unpauseOffChannelLowRatio; char oscillationDetectionEnabled; double oscillationCoolDownTime; int oscillationDeviationTierNumber; int oscillationDeviationCountThreshold; char preventBasebandRampDownCloseToKeyFrame; int basebandRampDownSlowDownFactor; double networkUnstableRTTThreshold; double networkUnstablePLRThreshold; double packetLossRateThresholdInitial; double packetLossRateThresholdMin; double packetLossRateThresholdMax; double packetLossRateThresholdTarget; unsigned int rampUpUplinkBLERThreshold; unsigned int rampDownUplinkBLERThreshold; double rampUpUplinkBLERDuration; double rampDownUplinkBLERDuration; double rampDownECNCERatioLow; double rampDownECNCERatioMedium; double rampDownECNCERatioHigh; unsigned int rampDownECNBitrateHigh; unsigned int rampDownECNBitrateMedium; unsigned int rampDownECNBitrateLow; double ceRatioDurationToRTTFactor; double ceRatioDurationMin; double ceRatioDurationMax; int smartBrakeStrategy; struct tagVCRateControlCongestionLevel { struct tagVCRateControlCongestionLevelThresholds { double rampDown[5]; double blockRampUp[5]; } nowrdAcc; struct tagVCRateControlCongestionLevelThresholds { double rampDown[5]; double blockRampUp[5]; } bytesInFlight; } congestionLevel; } _algorithmConfigCache;
    char _didCacheAlgorithmConfig;
    unsigned int _actualBitrate;
    unsigned int _wifiTxMediaBitrate;
    unsigned int _wifiNonAVCTxMediaBitrate;
    unsigned int _initialBitrate;
    double _initialRampUpStartTime;
    char _initialRampUpDeltaReported;
    unsigned int _targetBitrateTier;
    unsigned int _previousTargetBitrateTier;
    unsigned int _rateChangeCounter;
    unsigned int _roundTripTimeMilliseconds;
    double _packetLossPercentage;
    double _packetLossPercentageVideo;
    double _packetLossPercentageAudio;
    double _sumPLR;
    double _sumPLRVideo;
    unsigned int _sumOverUtilizedBandwidth;
    unsigned int _sumUnderUtilizedBandwidth;
    unsigned int _sumOverShootSendBitrate;
    unsigned int _sumUnderShootSendBitrate;
    unsigned int _sumWorstRecentRTTInMillisecond;
    unsigned int _sumWorstRecentBurstLoss;
    unsigned int _sumExtraTargetBitrate;
    unsigned int _countPeriodicTaskUpdate;
    unsigned int _totalPacketsReceived;
    unsigned int _totalPacketsSent;
    unsigned int _totalBytesSent;
    unsigned int _totalBytesReceived;
    unsigned int _burstPacketLoss;
    unsigned int _owrd;
    char _isNetworkCongested;
    void *_logDump;
    void *_logFeedbackDump;
    void *_logBasebandDump;
    void *_logNWDump;
    void *_logBWEDump;
    char _isRateControlDumpFileEnabled;
    char _isBWEDumpFileEnabled;
    NSString *_dumpID;
    char _isPeriodicLoggingEnabled;
    char _isBasebandEnabled;
    char _isForSimulation;
    char _isUplink;
    char _useExternalThread;
    char _didConfigured;
    double _lastDefaultsReadTime;
    double _forceBBFlush;
    int _forcedTargetBitrate;
    int _forcedMaxBitrate;
    int _forcedTargetBitrateFromTestMonitor;
    int _forcedMaxBitrateFromTestMonitor;
    struct OpaqueFigCFWeakReference { } *_reportingAgentWeak;
    struct opaqueRTCReporting { } *_reportingAgentStrong;
    int _reportingModuleID;
    unsigned int _lastReportFlushedVideoPacketCount;
    unsigned int _lastReportFlushedAudioPacketCount;
    unsigned int _lastReportBasebandDropAudioPacketCount;
    unsigned int _lastReportBasebandDropVideoPacketCount;
    double _lastTimeTargetBitrateOvershootRecorded;
    double _lastTimeUnexpectedLowTargetBitrateRecorded;
    double _lastTimeUnexpectedRampUpFrozenRecorded;
    unsigned int _lastRecordedTargetBitrate;
    unsigned int _lastReportedBandwidthEstimation;
    unsigned int _totalSuddenBandwidthDropCount;
    unsigned int _totalMBLRampDownCount;
    double _lastTimeSustainedHighUplinkPacketLossReported;
    double _lastTimeSustainedHighDownlinkPacketLossReported;
    double _lastTimeServerStatsActivityRecorded;
    char _isNoServerStatsIdleActivityReported;
    unsigned int _remotePacketReceivedAudio;
    unsigned int _remotePacketReceivedVideo;
    unsigned int _remoteECT1ReceiveCount;
    unsigned int _remoteCEReceiveCount;
    VCRateControlServerBag *_serverBag;
    int _btNotificationHandlerIndex;
    NSObject<OS_nw_activity> *_parentNWActivity;
    NSObject<OS_nw_activity> *_noServerStatsUplinkNwActivity;
    NSObject<OS_nw_activity> *_noServerStatsDownlinkNwActivity;
    char _useNWConnectionNotification;
    char _useBTNotificationMonitor;
    char _isRegisteredForRateSharing;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _registrationLock;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _mutex;
    VCRateSharingGroup *_sharingGroup;
    char _isECNEnabled;
    char _isCongestedForReport;
    unsigned int _lastReportedRateControlAlgorithmStatsIndex;
    NSObject<OS_dispatch_queue> *_reportingQueue;
    struct OpaqueFigCFWeakReferenceHolder { } *_weakSelf;
    double _lastUpdatedTargetBitrate;
    char _basebandFlushCountIncreased;
    struct tagVCRateControlDataCollectionMessage { unsigned char state; double timestamp; double arrivalTime; unsigned int targetBitrate; unsigned int bitrate; BOOL basebandFlush; union { struct tagVCDataCollectionFeedback { double rateControlTime; double owrd; double nowrd; double nowrda; double roundTripTime; double roundTripTimeAverage; double roundTripTimeMinEnvelope; double audioPacketLossRate; double audioPacketLossRateShort; double videoPacketLossRate; double ecnCERatio; unsigned int bandwidthEstimate; } feedback; struct tagVCDataCollectionLocalRCEvent { unsigned int bytesInFlight; unsigned int bytesInFlightRollingAverage; } localRCEvent; struct tagVCDataCollectionNWConnection { unsigned long long nwConnectionTimestamp; unsigned char frequencyBand; unsigned char intermittentState; unsigned short estimatedIntermittentPeriod; unsigned short singleOutagePeriod; unsigned char btCoex; unsigned char radioCoex; unsigned char qualityScoreDelayRx; unsigned char qualityScoreDelayTx; unsigned char qualityScoreLossRx; unsigned char qualityScoreLossTx; unsigned char qualityScoreChannel; float offChannelTimeRatio; unsigned short wlanDutyCycle; unsigned int wifiObservedTxBitrate[6]; } nwConnection; struct tagVCDataCollectionBaseband { unsigned int radioTechnology; unsigned int flushableQueueDepth; unsigned int unflushableQueueDepth; unsigned int averageBitrate; unsigned int averageBitrateShort; unsigned int averageBitrateLong; unsigned int txBitrate; double averageQueueDepth; double expectedQueuingDelay; double bdcd; double normalizedBDCD; double normalizedDelay; } baseband; struct tagVCDataCollectionRCConfiguration { int algorithmVersion; unsigned int mode; unsigned int radioAccessTechnology; unsigned int remoteRadioAccessTechnology; unsigned int minTargetBitrate; unsigned int maxTargetBitrate; } configuration; } ; } _dataCollectionMessage;
    int _algorithmVersion;
    unsigned int _lastRecordedHighRTT;
    id<VCRateControlAlgorithm> _rateControlAlgorithm;
    char _isNetworkForcingECN;
    char _isNetworkForcingECNDefaultSet;
}

@property (retain, nonatomic) VCRateControlMediaController *mediaController;
@property (readonly, nonatomic) unsigned int targetBitrate;
@property (readonly, nonatomic) struct AVCRateControlConfig { unsigned int mode; unsigned int localRadioAccessTechnology; unsigned int remoteRadioAccessTechnology; unsigned int maxBitrate; unsigned int minBitrate; unsigned int initialBitrate; char isTrafficBursty; struct tagVCRateControlAlgorithmConfig *algorithmConfig; unsigned int featureFlags; } configuration;
@property (nonatomic) unsigned int targetBitrateCap;
@property (nonatomic) unsigned int estimatedBandwidthCap;
@property (nonatomic) unsigned int expectedBitrate;
@property (readonly) id reportingAgent;
@property (readonly, nonatomic) char isStarted;
@property (readonly, nonatomic) unsigned int nwNotificationProcessed;
@property (readonly, nonatomic) unsigned int maxTargetBitrate;
@property (readonly, nonatomic) unsigned int minTargetBitrate;
@property (readonly, nonatomic) struct tagVCRateControlAlgorithmConfig { unsigned int x0; unsigned int *x1; int x2; int x3; int x4; int x5[2]; int x6; int x7; int x8; int x9; int x10; int x11; int x12; int x13; int x14; int x15; int x16; int x17; double x18; double x19; double x20; double x21; double x22; double x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; int x32; int x33; int x34; double x35; double x36; double x37; double x38; double x39; double x40; double x41; double x42; double x43; double x44; double x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; double x51[5]; char x52; char x53; char x54; char x55; char x56; char x57; char x58; char x59; char x60; char x61; char x62; char x63; char x64; char x65; int x66; char x67; double x68; double x69; int x70; double x71; int x72; double x73; double x74; double x75; int x76; double x77; int x78; int x79; double x80; double x81; int x82; double x83; double x84; double x85; double x86; double x87; double x88; double x89; double x90; double x91; double x92; double x93; double x94; double x95; double x96; double x97; double x98; double x99; double x100; double x101; double x102; double x103; char x104; double x105; int x106; int x107; char x108; int x109; double x110; double x111; double x112; double x113; double x114; double x115; unsigned int x116; unsigned int x117; double x118; double x119; double x120; double x121; double x122; unsigned int x123; unsigned int x124; unsigned int x125; double x126; double x127; double x128; int x129; struct tagVCRateControlCongestionLevel { struct tagVCRateControlCongestionLevelThresholds { double x0[5]; double x1[5]; } x0; struct tagVCRateControlCongestionLevelThresholds { double x0[5]; double x1[5]; } x1; } x130; } algorithmConfig;
@property (readonly) VCRateControlTrafficMetricCollector *trafficMetricCollector;
@property (retain, nonatomic) AVCStatisticsCollector *statisticsCollector;
@property (retain, nonatomic) AVCRateControlFeedbackController *feedbackController;
@property (retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector;
@property (retain, nonatomic) VCNWConnectionCongestionDetector *nwConnectionCongestionDetector;
@property (nonatomic, getter=isPaused) char paused;
@property (readonly, nonatomic) struct tagAVCRateControlExperimentConfig { int x0; int x1; unsigned int x2; } rateControlExperimentConfig;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (char)start;
- (char)stop;
- (void)configure:(struct AVCRateControlConfig { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; char x6; struct tagVCRateControlAlgorithmConfig *x7; unsigned int x8; })a0;
- (void)resetStatsForPeriodicTaskReport;
- (void)accumulateStatsForPeriodicTaskUpdate;
- (void)cleanupNwActivity;
- (void)completeAndReleaseNwActivity:(id)a0 withReason:(int)a1;
- (void)configureWithOperatingMode:(int)a0 isLocalCellular:(char)a1 localCellTech:(int)a2 isRemoteCellular:(char)a3 remoteCellTech:(int)a4 bitrateCapKbps:(unsigned int)a5 isTrafficBursty:(char)a6 featureFlags:(unsigned int)a7;
- (void)createBasebandLogDumpFile;
- (void)createNWConnectionLogDumpFile;
- (void)deregisterForRateSharing;
- (void)deregisterPeriodicTask;
- (void)getRealTimeStats:(struct __CFDictionary { } *)a0;
- (void)getRealTimeStatsForLowLatency:(struct __CFDictionary { } *)a0;
- (void)getRealTimeStatsForServerBasedRxOnly:(struct __CFDictionary { } *)a0;
- (void)getRealTimeStatsForServerBasedTxOnly:(struct __CFDictionary { } *)a0;
- (void)initAndStartTrafficMetricCollector;
- (id)initWithDelegate:(id)a0 dumpID:(id)a1 isUplink:(char)a2 reportingAgent:(id)a3;
- (id)initWithDelegate:(id)a0 params:(const struct tagVCRateControlParams { id x0; char x1; char x2; id x3; id x4; char x5; id x6; char x7; id x8; } *)a1;
- (unsigned int)loadDefaultVCRCFeatureFlags:(unsigned int)a0;
- (void)periodicTask:(void *)a0;
- (void)printRateControllerHealthPrint;
- (unsigned int)radioAccessTechnologyFromAVConferenceCellTech:(int)a0 isCellular:(char)a1;
- (unsigned int)rateControlModeFromAVConferenceOperatingMode:(int)a0;
- (void)registerForRateSharing:(unsigned int)a0;
- (void)registerPeriodicTask;
- (void)releaseAllLogDumpFiles;
- (void)releaseLogDumpFile:(void **)a0;
- (void)setBtNotificationMonitor;
- (void)setShareProfile:(id)a0;

@end

@class NSString, NSArray, VCSystemAudioCaptureSession, VCSessionMediaStreamPresenceConfigurationProvider, NSMutableDictionary, VCVideoRule, VCRedundancyControllerAudio, NSMutableSet, VCAudioPowerSpectrumSource, VCRedundancyControllerVideo, VCSwitchManager;
@protocol VCSessionUplinkBandwidthAllocator;

@interface VCSessionParticipantLocal : VCSessionParticipant <VCVideoSink, VCVideoCaptureClient, VCIDSStreamIDGenerator, VCSessionUplinkBandwidthAllocatorClient> {
    NSArray *_uplinkBandwidthAllocators;
    id<VCSessionUplinkBandwidthAllocator> _uplinkBandwidthAllocator;
    unsigned int _currentVCMediaQueueSize;
    unsigned int _currentUplinkTargetBitrate;
    unsigned int _currentRateChangeCounter;
    unsigned int _lastSentAudioSampleTime;
    double _lastSentAudioHostTime;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _audioTimestampRWLock;
    unsigned char _lastAudioPriority;
    unsigned char _lastVideoPriority;
    _Atomic unsigned char _videoPriority;
    char _videoPriorityEnabled;
    char _shouldResize;
    char _enableRedundancy;
    char _isVCMediaQueueScheduledForServerBasedStreams;
    NSMutableSet *_localPublishedStreams;
    float _averageSilenceAudioPower;
    unsigned char _audioPriorityRampUp;
    unsigned char _audioPriorityDecaySlow;
    unsigned char _audioPriorityDecayFast;
    float _audioVoiceDetectionSensitivity;
    float _audioSilencePowerAverageMultiplier;
    unsigned char _forcedAudioPriorityValue;
    double _forcedAudioPriorityLastUpdateTime;
    char _forcedAudioPriorityEnabled;
    VCVideoRule *_videoRule;
    char _speechDetected;
    struct opaqueVCVoiceDetector { } *_voiceDetector;
    double _fecRatio;
    VCAudioPowerSpectrumSource *_powerSpectrumSource;
    int _currentVideoCaptureFrameRate;
    int _maxSupportedMultiwayCameraFrameRate;
    long long _maxSupportedMultiwayVideoResolution;
    unsigned char _remotePresentationState;
    char _isRemotePresentationLarge;
    int _videoCaptureSource;
    char _forceMinBitrate;
    unsigned int _minBitrate;
    NSMutableDictionary *_streamInputIDToCaptureSourceIDMap;
    VCSystemAudioCaptureSession *_systemAudioCaptureSession;
    char _isMixingSystemAudio;
    double _spatialAudioDisabledLastUpdateTime;
    NSMutableSet *_generatedStreamIDs;
    NSMutableSet *_generatedSSRCs;
    double _initTime;
    char _isVoiceProcessingEnabled;
    double _lastVideoEnabledChangedTime;
    char _isAudioPowerSpectrumEnabled;
    char _isOneToOneAuthenticationTagEnabled;
    char _forceL4SHighDataRate;
    char _isHigherAudioREDCutoverU1Enabled;
    VCSessionMediaStreamPresenceConfigurationProvider *_presenceProvider;
    long long _captionsToken;
}

@property (nonatomic) char encryptionInfoReceived;
@property (readonly, nonatomic) unsigned short connectionStatsStreamID;
@property (nonatomic) unsigned int uplinkBitrateCapWifi;
@property (nonatomic) unsigned int uplinkBitrateCapCell;
@property (nonatomic) char enableVADFiltering;
@property (copy, nonatomic) NSArray *peerSubscribedStreams;
@property (readonly, nonatomic) NSMutableSet *audioPayloadTypes;
@property (readonly, nonatomic) NSMutableSet *videoPayloadTypes;
@property (readonly, nonatomic) unsigned int currentUplinkTotalBitrate;
@property (nonatomic) int currentVideoCaptureFrameRate;
@property (readonly, nonatomic) struct __CFString { } *activeStreamKeys;
@property (readonly, nonatomic) struct _VCSessionParticipantLocalOneToOneSettings { VCRedundancyControllerAudio *audioRedundancyController; VCRedundancyControllerVideo *videoRedundancyController; NSMutableDictionary *streamInfo; VCSwitchManager *switchManager; unsigned int targetBitrate; unsigned int rateChangeCounter; char endToEndConnectionReceived; } oneToOneSettings;
@property (nonatomic) char isRemoteOnPeace;
@property (copy, nonatomic) NSArray *remoteParticipants;
@property (nonatomic, setter=setRetransmissionEnabled:) char isRetransmissionEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (char)isCameraEnabledWithMediaStates:(id)a0;
+ (char)negotiatorCipherSuite:(unsigned int *)a0 fromMediaStreamConfig:(id)a1;
+ (char)updateBandwidthAllocator:(id)a0 activeStream:(id)a1 peerSubscribedStreams:(id)a2 streamGroup:(id)a3;
+ (char)updateUplinkStreamsForPeerSubscribedStreams:(id)a0 streamGroup:(id)a1 uplinkBandwidthAllocator:(id)a2;

- (void)dealloc;
- (char)setState:(unsigned int)a0;
- (void)start;
- (void)stop;
- (void)setMuted:(char)a0;
- (char)isOneToOneModeEnabled;
- (void)setOneToOneModeEnabled:(char)a0;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; } *)a0;
- (void)captureSourcePositionDidChange:(char)a0;
- (void)didStopReacting;
- (void)reportCameraCompositionEnabled:(char)a0;
- (void)updateOneToOneBandwidthAllocationTable:(id)a0 mediaType:(unsigned char)a1 streamGroupID:(unsigned int)a2;
- (id)multiwayVideoStreamNegotiatorConfigForStreamConfig:(id)a0 isSubstream:(char)a1;
- (id)qualityTierTableForStreamToken:(long long)a0;
- (id)setupStreamRTP:(id)a0;
- (void)addCallInfoBlobToParticipantInfo:(id)a0;
- (char)addFeatureListStringsForVideoConfiguration:(id)a0 mediaType:(unsigned char)a1;
- (char)addMediaConfigurationsToLocalConfiguration:(id)a0;
- (char)addVideoConfigurationsToLocalConfiguration:(id)a0;
- (char)applyCachedMediaStreams:(id)a0 toMultiwayConfig:(id)a1;
- (char)applyCachedMediaStreamsWithStreamConfigurations:(id)a0 mediaNegotiatorConfig:(id)a1;
- (char)applyCachedStreamGroupMediaStreams:(id)a0 toMultiwayConfig:(id)a1;
- (id)applyMicReconfigurationForCameraTransition;
- (void)applyScreenEnabledSetting:(char)a0;
- (id)applyVideoEnabledSetting:(char)a0;
- (struct tagVCAudioIOConfiguration { unsigned int x0; unsigned int x1; int x2; int x3; unsigned int x4; unsigned char x5; char x6; id x7; int x8; unsigned int x9; unsigned int x10; char x11; unsigned long long x12; unsigned int x13; long long x14; long long x15; unsigned long long x16; char x17; char x18; struct tagVCAudioIODelegateContext { id x0; void /* function */ *x1; void *x2; long long x3; id x4; char x5; id x6; } x19; struct tagVCAudioIODelegateContext { id x0; void /* function */ *x1; void *x2; long long x3; id x4; char x5; id x6; } x20; id x21; char x22; char x23; })audioIOConfigWithDeviceRole:(int)a0 operatingMode:(int)a1;
- (id)audioRuleCollectionWithAudioStreamConfig:(id)a0;
- (void)avConferencePreviewError:(id)a0;
- (unsigned int)calculateUplinkTotalBitrateForMediaStreams:(id)a0;
- (void)cameraAvailabilityDidChange:(char)a0;
- (struct CGSize { double x0; double x1; })captureEncodingSize;
- (void)captureSource1080pAvailabilityDidChange:(char)a0;
- (void)captureSourceCenterStageEnabledDidChange:(char)a0;
- (int)captureSourceIDFromStreamGroupConfig:(id)a0;
- (int)captureSourceIDFromStreamGroupID:(unsigned int)a0;
- (void)captureSourcePortraitBlurEnabledDidChange:(char)a0;
- (void)checkAndReportThermalIncreaseAudioOnly:(int)a0;
- (char)checkSubscribedStreamsConsistency:(id)a0;
- (void)cleanupStreamInputs;
- (id)clientCaptureRule;
- (void)collectAudioChannelMetrics:(struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)a0;
- (void)collectVideoChannelMetrics:(struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)a0;
- (id)completeMediaStateChange;
- (char)completeStreamSetup:(id)a0 rtpCipherSuite:(long long)a1;
- (char)configureAudioIOWithDeviceRole:(int)a0 operatingMode:(int)a1;
- (char)configureMultiwayStreamGroups;
- (char)configureOneToOneAudioStreamsWithDeviceRole:(int)a0;
- (char)configureOneToOneVideoStreamsWithDeviceRole:(int)a0;
- (char)configureWithOneToOneParticipantConfig:(id)a0 shouldConfigureGFTStreams:(char)a1;
- (char)containsStreamWithSSRC:(unsigned int)a0;
- (id /* block */)copyOnVideoFrameBlock;
- (void)createOpaqueData;
- (char)createParticipantInfo;
- (void)deregisterForVideoCapture;
- (void)deregisterForVideoCaptureAndStopProcessingAllMediaRecorderRequests:(char)a0;
- (void)didReceiveCustomReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned char x0 : 5; unsigned char x1 : 1; unsigned char x2 : 2; unsigned char x3 : 8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x6[1]; } x0; struct tagRR_RTCP { unsigned int x0; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x1[1]; } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258]; } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10]; } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3]; } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x13; struct tagRTCP_PSFB_LOSSFB { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO { unsigned int x0; unsigned short x1; unsigned char x2; unsigned char x3; } x1; } x14; struct tagRTCP_PSFB_LTRACK { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; unsigned int x1; } x15; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_RTPFB_INDIVIDUAL_GNACK { unsigned short x0; unsigned short x1; } x1[256]; } x16; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x17; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x18; struct tagVCRTCPXR { unsigned int x0; unsigned int x1[0]; } x19; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned char x4 : 4; unsigned char x5 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x20; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned char x0 : 4; unsigned char x1 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x21; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20]; } x1; } x22; } x1; } *)a0 arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })a1;
- (void)didReceiveReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned char x0 : 5; unsigned char x1 : 1; unsigned char x2 : 2; unsigned char x3 : 8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x6[1]; } x0; struct tagRR_RTCP { unsigned int x0; struct tagRTCP_RRB { unsigned int x0; unsigned char x1 : 8; unsigned int x2 : 24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x1[1]; } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258]; } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10]; } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3]; } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x13; struct tagRTCP_PSFB_LOSSFB { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO { unsigned int x0; unsigned short x1; unsigned char x2; unsigned char x3; } x1; } x14; struct tagRTCP_PSFB_LTRACK { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; unsigned int x1; } x15; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_RTPFB_INDIVIDUAL_GNACK { unsigned short x0; unsigned short x1; } x1[256]; } x16; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x17; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x18; struct tagVCRTCPXR { unsigned int x0; unsigned int x1[0]; } x19; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned char x4 : 4; unsigned char x5 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x20; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned char x0 : 4; unsigned char x1 : 4; } x2; struct tagRTCP_CUSTOM_RECEPTION_REPORT { unsigned int x0; unsigned char x1 : 4; unsigned short x2 : 12; unsigned short x3; unsigned short x4; unsigned char x5; unsigned char x6; } x3[1]; } x21; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20]; } x1; } x22; } x1; } *)a0 arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })a1;
- (void)dispatchedHandleActiveConnectionChangeForStreamGroups:(id)a0;
- (void)dispatchedSetAudioEnabled:(char)a0;
- (void)dispatchedStartOneToOneStreams;
- (void)dispatchedUpdateUplinkTargetBitrate:(unsigned int)a0 rateChangeCounter:(unsigned int)a1;
- (void)dispatchedUpdateVCMediaQueueSize:(unsigned int)a0;
- (char)enableRedundancy:(char)a0;
- (id)featureListString:(id)a0 removingPayload:(int)a1 andPayload:(int)a2 mediaType:(unsigned char)a3;
- (char)featureListStringsRequiredForMediaType:(unsigned char)a0;
- (void)frameRateIsBeingThrottled:(int)a0 thermalLevelDidChange:(BOOL)a1 powerLevelDidChange:(BOOL)a2;
- (unsigned short)generateIDSStreamID;
- (void)generateKeyFrameWithStreamID:(id)a0 streamGroupID:(unsigned int)a1 firType:(int)a2;
- (unsigned int)generateSSRC;
- (struct tagVCNetworkStreamIdentifiers { unsigned int x0; unsigned short x1; unsigned short x2; unsigned short x3; })generateSSRC:(char)a0 streamID:(char)a1 repairStreamID:(char)a2 v2StreamID:(char)a3;
- (id)getAudioDumpName;
- (struct opaqueCMFormatDescription { } *)getAudioFormatDescriptionForStreamGroupID:(unsigned int)a0;
- (struct opaqueCMFormatDescription { } *)getCaptionsFormatDescription;
- (void)handleActiveConnectionChange:(id)a0;
- (id)initWithConfig:(id)a0 delegate:(id)a1;
- (char)initializeMediaNegotiator;
- (void)initializeMultiwayAudioStreamGroup:(id)a0 forLocalConfig:(id)a1;
- (void)initializeMultiwayVideoStreamGroup:(id)a0 forLocalConfig:(id)a1;
- (char)initializeOneToOneStreamGroup:(id)a0 forLocalConfig:(id)a1;
- (char)initializeStreamGroupsForLocalConfig:(id)a0;
- (char)isActiveMediaType:(unsigned int)a0;
- (char)isEnabledMediaType:(unsigned int)a0;
- (char)isHighPriorityAudioWithPower:(float)a0 voiceActive:(char)a1;
- (char)isOneToOneStreamGroup:(unsigned int)a0;
- (char)isParticipantIDBasedKeyLookupEnabled;
- (char)isRemotePresentationLarge:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)isStreamGroupActive:(id)a0;
- (void)logDashboardLinks;
- (void)logRemoteParticipantInfo:(id)a0;
- (int)maxCaptureCameraFrameRate;
- (long long)maxCaptureResolution;
- (unsigned int)mediaStateForMediaType:(unsigned int)a0;
- (id)microphoneOnlyBandwidthTable;
- (id)multiwayAudioStreamNegotiatorConfigForStreamConfig:(id)a0;
- (char)nativeParticipantSupportsStreamGroupID:(unsigned int)a0;
- (int)negotiateOneToOne:(id)a0;
- (id)newAudioSendGroupConfigWithStreamGroupID:(unsigned int)a0 streamGroupConfiguration:(id)a1;
- (id)newAudioStreamOneToOneConfigurationWithStreamGroupId:(unsigned int)a0;
- (id)newAudioStreamSendGroupWithConfig:(id)a0 streamGroupID:(unsigned int)a1;
- (id)newMediaNegotiatorAudioConfigurationForMediaType:(unsigned int)a0;
- (id)newStreamGroupNegotiationConfigForStreamGroup:(id)a0;
- (id)newStreamInfoWithAudioStreamWithConfiguration:(id)a0 idsDestination:(id)a1 isMultiway:(char)a2 streamGroupID:(unsigned int)a3 streamToken:(long long)a4;
- (id)newStreamInfoWithAudioStreamWithConfiguration:(id)a0 streamToken:(long long)a1 isMultiway:(char)a2 streamGroupID:(unsigned int)a3;
- (id)newStreamInfoWithVideoStreamWithConfiguration:(id)a0 idsDestination:(id)a1 groupID:(unsigned int)a2;
- (id)newStreamInfoWithVideoStreamWithConfiguration:(id)a0 streamGroupID:(unsigned int)a1 rtpCipherSuite:(long long)a2;
- (id)newUplinkBandwidthAllocators;
- (id)newVideoConfigurationForMediaType:(unsigned char)a0;
- (id)newVideoSendGroupConfigWithStreamGroupID:(unsigned int)a0 streamGroupConfiguration:(id)a1;
- (id)newVideoStreamOneToOneConfigurationWithStreamGroupId:(unsigned int)a0;
- (id)newVideoStreamWithConfig:(id)a0 groupID:(unsigned int)a1;
- (char)onVideoFrame:(struct opaqueCMSampleBuffer { } *)a0 frameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 attribute:(struct { char x0; char x1; int x2; char x3; char x4; int x5; unsigned char x6; })a2;
- (unsigned int)oneToOneAudioStreamRedundancyMode;
- (unsigned int)oneToOneVideoStreamRedundancyMode;
- (unsigned int)oneToOneVideoStreamRedundancyPercentage;
- (void)overrideVideoStreamConfigWithDefaults:(id)a0 streamGroupID:(unsigned int)a1;
- (char)prepareVideoFrame:(struct opaqueCMSampleBuffer { } *)a0;
- (id)processCachedParticipantData:(id)a0;
- (void)reactionDidStart:(id)a0;
- (char)reconfigureAudioIOForMode:(int)a0 error:(id *)a1;
- (char)reconfigureOneToOneAudioStream:(id)a0 error:(id *)a1;
- (void)redundancyController:(id)a0 redundancyIntervalDidChange:(double)a1;
- (void)redundancyController:(id)a0 redundancyPercentageDidChange:(unsigned int)a1;
- (void)redundancyController:(id)a0 redundancyVectorDidChange:(struct { unsigned short x0; struct { unsigned char x0; unsigned char x1; } x1[32]; })a1;
- (void)registerForVideoCapture:(int)a0;
- (unsigned int)remainderBitrateSplitForStreamToken:(long long)a0;
- (char)remoteParticipantsSupportStreamGroupID:(unsigned int)a0;
- (void)reportVideoEnabledStatsWithVideoEnabled:(char)a0;
- (void)resetOneToOneSettings;
- (void)resumeStreamsOnOneToOneModeSwitch;
- (void)serverDidDie;
- (void)setCellularUniqueTag:(unsigned int)a0;
- (void)setUpCaptions;
- (char)setupAudioStreamGroupWithStreamConfigs:(id)a0 negotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (char)setupAudioStreamsWithStreamConfiguration:(id)a0 streamGroupConfiguration:(id)a1;
- (char)setupAudioStreamsWithStreamConfigurations:(id)a0 mediaNegotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (char)setupCameraStreamGroupWithStreamConfigs:(id)a0 negotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (char)setupCaptionsStreamsWithStreamConfiguration:(id)a0 streamGroupConfiguration:(id)a1;
- (char)setupCaptionsStreamsWithStreamConfigurations:(id)a0 mediaNegotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (void)setupEncodingModeWithVideoStreamConfig:(id)a0;
- (void)setupOneToOneAudioStreamWithConfig:(id)a0 streamGroupID:(unsigned int)a1;
- (void)setupOneToOneEncryptionInfoWithConfiguration:(id)a0;
- (char)setupOneToOneVideoStreamWithConfig:(id)a0 streamGroupID:(unsigned int)a1;
- (char)setupStreamGroupMediaSync;
- (char)setupStreamGroupWithStreamGroupConfig:(id)a0 negotiatorConfig:(id)a1;
- (char)setupStreamGroupsWithConfig:(id)a0 negotiatorConfig:(id)a1;
- (char)setupStreamInputsWithConfig:(id)a0;
- (void)setupSystemAudioCapture;
- (char)setupVideoMediaStreamsWithStreamGroupConfiguration:(id)a0 streamGroupConfig:(id)a1 streamGroupID:(unsigned int)a2 mediaType:(unsigned int)a3;
- (char)setupVideoStreamsWithStreamConfiguration:(id)a0 streamGroupConfiguration:(id)a1;
- (char)setupVideoStreamsWithStreamConfigurations:(id)a0 mediaNegotiatorConfig:(id)a1 streamGroupConfiguration:(id)a2;
- (char)shouldCapStream:(long long)a0 cappedBitrate:(unsigned int *)a1;
- (char)shouldEnableUplinkRetransmissionForStreamGroupID:(unsigned int)a0;
- (void)sourceFrameRateDidChange:(unsigned int)a0;
- (id)startCameraStreamGroups;
- (id)startMicStreamGroups;
- (void)startMultiwayStreams;
- (void)startSystemAudioCapture;
- (void)startVoiceActivityDetection;
- (void)stopAudioIOCompletion;
- (void)stopSystemAudioCapture;
- (void)stopVideoCaptureClient;
- (void)stopVoiceActivityDetection;
- (void)streamGroup:(id)a0 didChangeState:(unsigned int)a1;
- (void)streamGroup:(id)a0 didRequestRedundancy:(char)a1;
- (void)streamGroup:(id)a0 didSuspendStreams:(char)a1;
- (void)streamGroupNegotiationVideoConfigForStreamGroup:(id)a0 streamConfig:(id)a1 mediaConfig:(id)a2;
- (id)supportedAudioRules;
- (void)suspendStreamsOnOneToOneModeSwitch;
- (void)thermalLevelDidChange:(int)a0;
- (id)u1VideoRuleCollectionsForMediaType:(unsigned char)a0;
- (void)updateActiveVoiceOnly;
- (void)updateAudioPriorityWithSampleBuffer:(struct opaqueVCAudioBufferList { } *)a0;
- (void)updateAudioSpectrumState;
- (void)updateCaptureSourceVideoFeatureStatus:(struct tagVCVideoCaptureFeatureStatus { char x0; char x1; char x2; char x3; char x4; char x5; })a0;
- (void)updateMediaSettingsWithConfig:(id)a0;
- (id)updateMediaState:(unsigned int)a0 forStreamGroups:(id)a1;
- (void)updateMediaStreamsForStreamGroup:(id)a0 uplinkBitrateCap:(unsigned int)a1 rateChangeCounter:(unsigned int)a2;
- (void)updateMultiwayBandwithAllocationTable:(id)a0 mediaType:(unsigned int)a1 streamGroupID:(unsigned int)a2 encoderGroupID:(unsigned int)a3 minNetworkBitrate:(unsigned int)a4 maxNetworkBitrate:(unsigned int)a5;
- (void)updatePayloadTypesWithAudioConfigs:(id)a0;
- (void)updatePayloadTypesWithVideoConfigs:(id)a0;
- (void)updatePeerSubscribedStreams:(id)a0 streamGroup:(id)a1;
- (void)updateRedundancyEnabledForPeerSubscribedStreams:(id)a0;
- (void)updateSupportedAudioRules:(id)a0;
- (void)updateTargetBitrateOneToOne:(unsigned int)a0 rateChangeCounter:(unsigned int)a1;
- (void)updateUplinkTargetBitrate:(unsigned int)a0 rateChangeCounter:(unsigned int)a1;
- (void)updateUplinkTargetBitrateForStreamGroups;
- (void)updateVCMediaQueueSize:(unsigned int)a0;
- (void)updateVideoPaused:(char)a0;
- (void)updateWindowState:(int)a0 isLocal:(char)a1 windowRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (char)v1FeatureListStringsSupportedForMediaType:(unsigned char)a0;
- (id)videoCallMicrophoneBandwidthTable;
- (char)webParticipantSupportsStreamGroupID:(unsigned int)a0;
- (char)wolfParticipantSupportsStreamGroupID:(unsigned int)a0;

@end

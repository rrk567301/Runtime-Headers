@class NSString, NSArray, VCSessionBandwidthAllocationTable, NSMutableDictionary, NSDictionary, VCPositionalInfo, VCSessionParticipantMediaStreamInfo, TimingCollection, NSNumber, NSObject;
@protocol OS_dispatch_source, OS_nw_activity;

@interface VCSessionParticipantRemote : VCSessionParticipant <VCSessionDownlinkBandwidthAllocatorClient> {
    char _remoteSystemAudioPaused;
    char _receivedFirstFrame;
    VCSessionBandwidthAllocationTable *_mediaTable;
    VCSessionBandwidthAllocationTable *_repairMediaTable;
    char _isVideoDegraded;
    char _isRedundancyRequested;
    char _isRemoteMediaStalled;
    struct tagVCAudioStreamGroupPriorityInfo { char isAudioActive; unsigned int audioActiveProbabilityThreshold; unsigned int audioInactiveProbabilityThreshold; unsigned int audioActiveAccumulationThreshold; unsigned int audioInactiveAccumulationThreshold; unsigned int audioActiveCount; unsigned int lastAudioPriority; unsigned int refreshCounter; } _mediaPriorityInfo;
    TimingCollection *_perfTimers;
    char _haveReportedPerfTimers;
    char _isMediaSuspended;
    char _oneToOneVideoEnabled;
    char _outOfProcessCodecsEnabled;
    int _thermalLevel;
    struct __CFDictionary { } *_mediaTypeToSpatialAudioMetadataEntryMap;
    NSObject<OS_nw_activity> *_nwActivity;
    NSObject<OS_nw_activity> *_participantPoorConnectionNwActivity;
    NSObject<OS_nw_activity> *_participantMediaStallNwActivity;
    double _lastVideoExpectationSwitch;
    char _isVideoExpected;
    char _isVideoJitterForPlayoutEnabled;
    char _remoteScreenEnabledStateChanged;
    NSMutableDictionary *_jbSynchronizerPerSyncGroupID;
    NSMutableDictionary *_remoteMediaStates;
    NSObject<OS_dispatch_source> *_remoteStreamGroupStateUpdateTimer;
    char _isEnhancedJBAdaptationsEnabled;
    char _shouldDisableMiddleTierMLEnhance;
    char _isCameraUsedForConnectionTiming;
    char _isConnectionTimingSourceDetected;
    char _isConnectionTimingReported;
}

@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *micStreamInfo;
@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *cameraStreamInfo;
@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *screenStreamInfo;
@property (readonly, nonatomic) NSNumber *optedInAudioStreamID;
@property (readonly, nonatomic) NSNumber *optedInVideoStreamID;
@property (nonatomic, getter=isRemoteVideoEnabled) char remoteVideoEnabled;
@property (nonatomic, getter=isRemoteAudioEnabled) char remoteAudioEnabled;
@property (nonatomic, getter=isRemoteScreenEnabled) char remoteScreenEnabled;
@property (nonatomic, getter=isScreenControlEnabled) char screenControlEnabled;
@property (nonatomic, getter=isRemoteVideoPaused) char remoteVideoPaused;
@property (nonatomic, getter=isRemoteAudioPaused) char remoteAudioPaused;
@property (readonly, nonatomic) char isVideoExpected;
@property (nonatomic) unsigned char videoQuality;
@property (nonatomic) unsigned int visibilityIndex;
@property (nonatomic) unsigned int prominenceIndex;
@property (readonly, nonatomic) unsigned int lastDisplayedFrameRTPTimestamp;
@property (nonatomic) struct _VCSessionParticipantCapabilities { char isPeace; unsigned int participantType; int controlChannelVersion; char supportsGFTSwitchToOneToOne; char supportsParticipantIDBasedKeyLookup; char isDawnburstOrLater; } capabilities;
@property (readonly, nonatomic) VCPositionalInfo *positionalInfo;
@property (readonly, nonatomic) NSDictionary *participantSpatialAudioSourceIDs;
@property (nonatomic) char isServerRTxEnabled;
@property (nonatomic) char enableMaxCameraBitrateVideoQualityNewTier;
@property (readonly) NSString *uuid;
@property (readonly) NSArray *mediaEntries;
@property (readonly) char isVisible;

+ (char)isDeviceLargeScreen;
+ (unsigned int)maxAudioNetworkBitrateForLocalInterfaceOnWiFi:(char)a0 isLowLatencyAudio:(char)a1;
+ (unsigned int)maxBdatQualityIndexForVideoQuality:(unsigned char)a0 isLocalOnWiFi:(char)a1;
+ (unsigned int)maxCameraQualityIndexForVideoQuality:(unsigned char)a0 isLocalOnWiFi:(char)a1 isRedundancyRequested:(char)a2 isSharingEnabled:(char)a3 enableNewTier:(char)a4;
+ (unsigned int)maxCameraQualityIndexForVideoQuality:(unsigned char)a0 useWiFiTable:(char)a1 isSharingEnabled:(char)a2 enableNewTier:(char)a3;
+ (unsigned int)maxCameraQualityIndexWithRedundancyForVideoQuality:(unsigned char)a0 useWiFiTable:(char)a1 enableNewTier:(char)a2;
+ (unsigned int)maxFdatQualityIndexForVideoQuality:(unsigned char)a0 isLocalOnWiFi:(char)a1;
+ (unsigned int)maxFtxtQualityIndexForVideoQuality:(unsigned char)a0 isLocalOnWiFi:(char)a1 isRedundancyRequested:(char)a2 isSharingEnabled:(char)a3;
+ (unsigned int)maxQualityIndexForStreamGroupID:(unsigned int)a0 videoQuality:(unsigned char)a1 isLocalOnWiFi:(char)a2 isRedundancyRequested:(char)a3 isSharingEnabled:(char)a4 enableNewTier:(char)a5;
+ (unsigned int)maxWebRTCCameraQualityIndexForVideoQuality:(unsigned char)a0 isLocalOnWiFi:(char)a1 isSharingEnabled:(char)a2 enableNewTier:(char)a3;

- (void)dealloc;
- (void)start;
- (void)stop;
- (void)setMuted:(char)a0;
- (void)setSharingEnabled:(char)a0;
- (void)setAudioPaused:(char)a0;
- (void)setVideoPaused:(char)a0;
- (char)isInCanvas;
- (void)setVideoDegraded:(char)a0;
- (void)updateThermalLevel:(int)a0;
- (void)didStopReacting;
- (void)dispatchedSetRemoteVideoPaused:(char)a0;
- (void)reportCameraCompositionEnabled:(char)a0;
- (char)shouldEnableMLEnhanceMiddleTier;
- (void)appendStreamGroupsMediaEntries:(id)a0;
- (void)dispatchedSetRemoteAudioPaused:(char)a0;
- (id)setupStreamRTP:(id)a0;
- (id)activeDownlinkStreamIDForStreamGroupID:(unsigned int)a0;
- (unsigned int)actualNetworkBitrateForStreamGroup:(unsigned int)a0;
- (unsigned int)actualNetworkBitrateWithAudioBitrates:(id)a0;
- (char)addOneToOneStreamConfigToMediaStreamInfo:(id)a0 negotiatorStreamGroupConfig:(id)a1;
- (void)appendOptedInStreamID:(id)a0 toOptInStreamsIDs:(id)a1 targetBandwidthEntry:(id)a2 forceSeamlessTransition:(char)a3;
- (void)appendStreamGroup:(id)a0 maxQualityIndex:(unsigned int)a1 mediaEntries:(id)a2;
- (id)applyVideoEnabledSetting:(char)a0;
- (id)audioGroup;
- (void)cancelAndReleaseFetchTimer;
- (unsigned char)cappedVideoQualityWithShouldLimitCameraQualityForPIP:(char)a0;
- (id)checkSubstreams:(id)a0 forLowerQualityIndex:(unsigned int)a1;
- (void)cleanupNwActivity;
- (void)cleanupSpatialAudio;
- (void)collectAudioChannelMetrics:(struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)a0;
- (void)collectVideoChannelMetrics:(struct { unsigned int x0; unsigned int x1[5]; unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)a0;
- (void)completeAndReleaseNwActivity:(id)a0 withReason:(int)a1;
- (char)configureAudioIOWithDeviceRole:(int)a0 operatingMode:(int)a1;
- (char)configureWithOneToOneParticipantConfig:(id)a0 operatingMode:(int)a1;
- (void)createAndResumeFetchTimer;
- (void)createJitterBufferTargetEstimatorSynchronizer:(struct tagVCJBTargetEstimatorSynchronizer **)a0 syncGroupID:(unsigned int)a1;
- (void)detectConnectionTimingSource;
- (void)didReceiveFirstFrameForStreamGroup:(id)a0;
- (void)dispatchedSetRemoteAudioEnabled:(char)a0;
- (void)dispatchedSetRemoteScreenEnabled:(char)a0;
- (void)dispatchedSetRemoteSystemAudioPaused:(char)a0;
- (void)dispatchedSetRemoteVideoEnabled:(char)a0;
- (void)dispatchedSetScreenControlEnabled:(char)a0;
- (void)dispatchedSetVideoReceiverFeedbackDelegate:(id)a0;
- (id)entryForStreamID:(id)a0;
- (id)getAudioDumpName;
- (id)getMajorVersionNumber;
- (id)initWithConfig:(id)a0 delegate:(id)a1;
- (void)initializeParticipantType;
- (char)isActiveMediaType:(unsigned int)a0;
- (char)isAudioActive;
- (char)isEnabledMediaType:(unsigned int)a0;
- (char)isMediaTypeExpected:(unsigned int)a0;
- (char)isParticipantDawnburstOrLater;
- (char)isParticipantIDBasedKeyLookupEnabled;
- (char)isParticipantPeace:(id)a0;
- (char)isScreenActive;
- (char)isSeamlessTransitionSupportedForStreamGroup:(id)a0;
- (char)isStreamGroupActive:(id)a0;
- (void)negotiateAudioRules:(id)a0;
- (void)networkQualityDidDegrade:(char)a0 isLocalNetworkQualityDegraded:(char)a1;
- (id)newCaptionsStreamGroupWithStreamGroupConfig:(id)a0;
- (id)newMediaStreamConfigWithStreamConfig:(id)a0 streamGroupConfig:(id)a1 maxIDSStreamIDCount:(unsigned int)a2;
- (id)newMediaStreamConfigWithStreamGroupConfig:(id)a0 streamConfig:(id)a1 rateControlConfig:(id)a2 multiwayConfig:(id)a3;
- (id)newMediaStreamInfoWithNegotiationConfig:(id)a0 streamToken:(long long)a1;
- (id)newMediaStreamWithNegotiationConfig:(id)a0 streamToken:(long long)a1;
- (id)newMultiwayConfigWithStreamGroupStreamConfig:(id)a0 maxIDSStreamIDCount:(unsigned int)a1 groupID:(unsigned int)a2;
- (id)newStreamGroupConfigWithNegotiationConfig:(id)a0;
- (id)newSupportedRemoteMediaTypeStatesDict:(id)a0;
- (id)newVideoStreamGroupWithStreamGroupConfig:(id)a0;
- (unsigned int)optedInNetworkBitrateForStreamGroup:(unsigned int)a0;
- (id)optedInStreamIDForStreamGroupID:(unsigned int)a0;
- (long long)participantMicrophoneToken;
- (long long)participantScreenToken;
- (char)processParticipantInfo;
- (void)pushEventToNwActivity:(long long)a0 started:(char)a1;
- (void)reactionDidStart:(id)a0;
- (id)recommendedStreamIDsForSelectedMediaEntries:(id)a0 forceSeamlessTransition:(char)a1;
- (void)redundancyController:(id)a0 redundancyIntervalDidChange:(double)a1;
- (void)redundancyController:(id)a0 redundancyPercentageDidChange:(unsigned int)a1;
- (unsigned int)remoteMediaStateForMediaType:(unsigned int)a0;
- (void)reportConnectionTiming;
- (void)reportConnectionTimingDispatchedWithStreamGroup:(id)a0;
- (void)reportConnectionTimingWithStreamGroupDispatched:(id)a0;
- (int)reportingResolutionForResolution:(long long)a0;
- (id)screenGroup;
- (void)setActiveStreamIDs:(id)a0;
- (void)setMediaRecorder:(id)a0;
- (void)setMediaSuspended:(char)a0 forStreamToken:(id)a1;
- (void)setRemoteMediaStalled:(char)a0;
- (void)setRemoteMediaState:(id)a0 forMediaType:(id)a1;
- (void)setRemoteMediaTypeStates:(id)a0;
- (void)setRemoteSystemAudioPaused:(char)a0;
- (void)setShouldEnableFaceZoom:(char)a0;
- (char)setShouldEnableMLEnhance:(char)a0 streamWithVideoResolution:(long long)a1 videoStreamGroup:(id)a2;
- (void)setStreamGroup:(unsigned int)a0 syncSourceStreamGroupID:(unsigned int)a1;
- (void)setTransitionToDisabled:(unsigned int)a0;
- (void)setTransitionToEnabled:(unsigned int)a0;
- (void)setTransitionToPaused:(unsigned int)a0;
- (void)setVideoReceiverFeedbackDelegate:(id)a0;
- (void)setVideoStreamDelegate:(id)a0 delegateFunctions:(const struct tagVCVideoStreamDelegateRealtimeInstanceVTable { void /* function */ *x0; } *)a1;
- (char)setupAudioStreamConfiguration:(id)a0 withStreamGroupConfig:(id)a1 streamGroupStreamConfig:(id)a2;
- (char)setupBandwidthAllocationTableForMediaStreamConfigs:(id)a0 streamGroupID:(unsigned int)a1 entryType:(unsigned char)a2;
- (void)setupJBTargetSynchronizers;
- (void)setupMediaStreamGroupConfig:(id)a0 withNegotiationConfig:(id)a1;
- (int)setupSpatialAudioWithMetadata:(void *)a0 spatialMetadataEntryMap:(struct __CFDictionary { } *)a1;
- (int)setupSpatialInfoForStreamGroupConfig:(id)a0;
- (char)setupStreamConfigWithCodecs:(id)a0 streamConfig:(id)a1 codecConfigs:(id)a2 featureStringsDict:(id)a3;
- (char)setupStreamGroupWithConfig:(id)a0;
- (char)setupStreamGroups;
- (char)setupVideoStreamConfiguration:(id)a0 withStreamGroupStreamConfig:(id)a1 codecConfigs:(id)a2 multiwayConfig:(id)a3 groupID:(unsigned int)a4;
- (char)shouldDisableMLEnhanceCommonFactors;
- (char)shouldEnableMLEnhanceHighTier;
- (char)shouldEnableMLEnhanceLowTier;
- (char)shouldEnableMLEnhanceOneToOne;
- (char)shouldEnablePacketRetransmissionForStreamGroupID:(unsigned int)a0;
- (char)shouldReportConnectionTimingWithStreamGroup:(id)a0;
- (char)shouldSetupStreamGroupWithID:(unsigned int)a0;
- (int)spatialChannelIndex:(unsigned int *)a0 spatialAudioSourceID:(unsigned long long *)a1 forMediaType:(unsigned int)a2;
- (void *)spatialMetadataEntryForMediaType:(unsigned int)a0;
- (id)startAudioIO;
- (id)startScreenGroup;
- (id)stopAudioStreams;
- (int)storeSpatialAudioMetadataEntry:(void *)a0 forMediaType:(unsigned int)a1;
- (char)supportsGFTSwitchToOneToOne;
- (char)supportsIDSParticipantIDBasedKeyIndexMatching;
- (char)supportsNegotiatedCoordinateSystem;
- (id)systemAudioStreamInfo;
- (id)updateActiveStateForStreamGroup:(id)a0;
- (void)updateAndHandleVideoMediaStall:(char)a0 isOneToOneStream:(char)a1;
- (void)updateAudioSpectrumState;
- (void)updateCameraUsedForConnectionTiming;
- (void)updateDownlinkBandwithAllocatorClientConfigurations:(id)a0;
- (id)updateMediaState:(unsigned int)a0 forStreamGroup:(id)a1;
- (void)updateOneToOneAudioPositionalInfo:(const struct tagVCSpatialAudioMetadataPositionalInfo { float x0; float x1; float x2; unsigned int x3; unsigned int x4; unsigned int x5; } *)a0;
- (void)updatePositionalInfo:(id)a0 shouldReapply:(char)a1;
- (void)updateScreenStreamConfigurationWithStreamGroupResult:(id)a0 multiwayConfig:(id)a1 screenStreamConfig:(id)a2;
- (void)updateShouldEnableFaceZoom;
- (void)updateShouldEnableMLEnhance;
- (void)updateShouldEnableMLEnhanceHighTierMultiway;
- (void)updateShouldEnableMLEnhanceLowTierMultiway;
- (void)updateShouldEnableMLEnhanceMiddleTierMultiway;
- (void)updateShouldEnableMLEnhanceOneToOne;
- (void)updateStreamConfigWithMLEnhance:(id)a0;
- (void)updateVideoMultiwayConfig:(id)a0 withStreamGroupStreamConfig:(id)a1;
- (void)validateMediaEntries:(id)a0;
- (id)videoGroup;

@end

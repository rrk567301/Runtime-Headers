@class NSMutableDictionary, NSBezierPath, NSURL, NSDate, NSDictionary, AXBrailleMap, NSString, NSAttributedString, NSMutableSet, NSArray, NSNumber, NSColor;

@interface AXFUIElement : NSObject <NSCopying> {
    struct __AXUIElement { } *_axElementRef;
    char _isValid;
    id _textAttributeCache;
}

@property (class, nonatomic, setter=_setIPCDisabled:) char _ipcDisabled;

@property (readonly, nonatomic) char shouldTryToUseMarkerBasedTextAPI;
@property (retain, nonatomic, setter=_setSupportedAttributes:) NSMutableSet *_supportedAttributes;
@property (retain, nonatomic, setter=_setSupportedParameterizedAttributes:) NSMutableSet *_supportedParameterizedAttributes;
@property (copy, nonatomic) NSString *_brailleRoleDescriptionCache;
@property (copy, nonatomic) NSString *_roleDescriptionCache;
@property (copy, nonatomic) NSString *_roleCache;
@property (copy, nonatomic) NSString *_subroleCache;
@property (retain, nonatomic) NSMutableDictionary *_lifespanCache;
@property (nonatomic) long long _lifespanCacheRefCount;
@property (retain, nonatomic) NSString *_lastKnownRole;
@property (nonatomic) long long nodeType;
@property (readonly, nonatomic) int actualPid;
@property (readonly, nonatomic) int presenterPid;
@property (readonly, copy, nonatomic) NSString *_accessibilityPreferredLanguage;
@property (copy, nonatomic) NSString *applicationIdentifier;
@property (nonatomic, getter=_isAccessibilityFullscreen, setter=_setAccessibilityFullscreen:) char _accessibilityFullscreen;
@property (readonly, nonatomic, getter=_isAccessibilityRequired) char _accessibilityRequired;
@property (readonly, nonatomic, getter=_isAccessibilityBusy) char _accessibilityBusy;
@property (readonly, nonatomic, getter=_isAccessibilityVisited) char _accessibilityVisited;
@property (readonly, nonatomic, getter=_hasAccessibilityPopup) char _accessibilityPopup;
@property (readonly, copy, nonatomic) NSString *_accessibilityPopupValue;
@property (readonly, nonatomic) NSNumber *_accessibilityBlockquoteLevel;
@property (readonly, nonatomic) NSNumber *_accessibilityPageIndex;
@property (readonly, nonatomic) NSNumber *_accessibilityTotalPages;
@property (nonatomic, setter=_setAccessibilityPosition:) struct CGPoint { double x0; double x1; } _accessibilityPosition;
@property (nonatomic, setter=_setAccessibilitySize:) struct CGSize { double x0; double x1; } _accessibilitySize;
@property (readonly, copy, nonatomic) NSString *_accessibilityInvalidStatus;
@property (readonly, copy, nonatomic) NSString *_accessibilityDatetimeValue;
@property (readonly, copy, nonatomic) NSString *_accessibilityARIACurrentStatus;
@property (readonly, copy, nonatomic) NSString *_accessibilityAccessKey;
@property (readonly, copy, nonatomic) NSString *_accessibilityKeyShortcuts;
@property (readonly, copy, nonatomic) NSString *_accessibilitySectionType;
@property (readonly, nonatomic) AXFUIElement *_accessibilityPreviousContentSibling;
@property (readonly, nonatomic) AXFUIElement *_accessibilityNextContentSibling;
@property (readonly, nonatomic) AXFUIElement *_accessibilityContentSiblingAbove;
@property (readonly, nonatomic) AXFUIElement *_accessibilityContentSiblingBelow;
@property (readonly, nonatomic) AXFUIElement *_accessibilityFirstContentSibling;
@property (readonly, nonatomic) AXFUIElement *_accessibilityLastContentSibling;
@property (readonly, nonatomic) AXFUIElement *_accessibilityRowHeader;
@property (readonly, copy, nonatomic) NSArray *_accessibilityOwns;
@property (readonly, copy, nonatomic) NSArray *_accessibilityLinkUIElements;
@property (readonly, copy, nonatomic) NSArray *_accessibilityStyleInfo;
@property (readonly, copy, nonatomic) NSAttributedString *_accessibilityAttributedDescription;
@property (readonly, copy, nonatomic) NSAttributedString *_accessibilityPageIndexDescription;
@property (readonly, copy, nonatomic) NSAttributedString *_accessibilityTotalPagesDescription;
@property (readonly, copy, nonatomic) NSArray *_accessibilitySpeechModule;
@property (readonly, nonatomic) char _supportsAccessibilityAttributedDescription;
@property (readonly, nonatomic) char _supportsAccessibilityMakeScreenVisibleRect;
@property (readonly, nonatomic) char _supportsAccessibilityNextContentSibling;
@property (readonly, nonatomic) char _supportsAccessibilityOwns;
@property (readonly, nonatomic) char _supportsAccessibilityPreviousContentSibling;
@property (readonly, nonatomic) char _supportsAccessibilityRowHeader;
@property (readonly, nonatomic) char _supportsAccessibilityHeaderForColumn;
@property (readonly, nonatomic) char _supportsAccessibilityHeaderForRow;
@property (readonly, nonatomic) char _supportsAccessibilityStyleInfo;
@property (readonly, nonatomic) NSDictionary *_accessibilityChartDescriptor;
@property (retain, nonatomic, setter=_setAccessibilityAudiographPlaybackStatus:) NSNumber *_accessibilityAudiographPlaybackStatus;
@property (nonatomic, setter=_setAccessibilityAudiographPlaybackProgress:) double _accessibilityAudiographPlaybackProgress;
@property (readonly, nonatomic) char _canSetAccessibilityFullscreen;
@property (readonly, nonatomic) char _canSetAccessibilityMakeScreenRectVisible;
@property (readonly, nonatomic) char _canSetAccessibilityPosition;
@property (readonly, nonatomic) char _canSetAccessibilitySize;
@property (readonly, nonatomic) NSNumber *_accessibilityDateTimeComponents;
@property (readonly, copy, nonatomic) NSString *_accessibilityDictationString;
@property (readonly, nonatomic) char accessibilitySupportsUIElementsForSearchPredicate;
@property (readonly, nonatomic) char _accessibilityHasOccludedContent;
@property (readonly, copy, nonatomic) NSString *_accessibilityEquivalenceTag;
@property (readonly, copy, nonatomic) NSString *_accessibilityComputedEquivalenceTag;
@property (readonly, copy, nonatomic) NSArray *_sharedFocusUIElements;
@property (readonly, nonatomic) char _hasSharedFocusUIElements;
@property (readonly, copy, nonatomic) NSArray *_linkedUIElements;
@property (readonly, nonatomic) char _accessibilityStartsMediaSession;
@property (readonly, nonatomic) unsigned long long _accessibilityContainerType;
@property (readonly, nonatomic, getter=_isAccessibilityAutoInteractable) char _accessibilityAutoInteractable;
@property (readonly, nonatomic) char _supportsAccessibilityAutoInteractable;
@property (readonly, nonatomic, getter=_isAccessibilityLiveTextElement) char _accessibilityIsLiveTextElement;
@property (readonly, copy, nonatomic) NSArray *_accessibilityAuditIssues;
@property (readonly, copy, nonatomic) NSString *_accessibilityClassName;
@property (readonly, nonatomic) AXFUIElement *_accessibilityUnignoredParent;
@property (readonly, nonatomic) NSArray *_accessibilityUnignoredChildren;
@property (readonly, nonatomic) char _accessibilityIsIgnored;
@property (readonly, nonatomic) unsigned long long _accessibilityAutomationType;
@property (readonly, nonatomic, getter=_isAccessibilityApplicationRunning) char _accessibilityApplicationRunning;
@property (readonly, nonatomic) NSNumber *_accessibilityDockWindowID;
@property (readonly, nonatomic) unsigned int _accessibilityWindowID;
@property (readonly, copy, nonatomic) NSString *_accessibilityDockItemStatusLabel;
@property (readonly, copy, nonatomic) NSString *_accessibilityDockItemScreenTimeStatus;
@property (readonly, nonatomic) NSNumber *_accessibilityDockItemProgress;
@property (readonly, nonatomic) AXFUIElement *_accessibilityShownStack;
@property (readonly, nonatomic) char _supportsAccessibilityShownStack;
@property (readonly, copy, nonatomic) NSString *_accessibilityCompletionText;
@property (readonly, copy, nonatomic) NSArray *_accessibilityReferencedTableCellUIElements;
@property (nonatomic) char _forcedToBeNonPromotableByBoolAttributes;
@property (readonly, nonatomic) char _accessibilityIsOpaqueElementProvider;
@property (readonly, nonatomic) char _accessibilityIsScrollAncestor;
@property (readonly, nonatomic) char _accessibilityChildrenContainerGroupingBehaviorHasOverridingParentDelegate;
@property (readonly, nonatomic) char _accessibilityParentDiscardsChildrenContainerGroupingBehavior;
@property (readonly, nonatomic) char isiOSElementInWebKitWebProcess;
@property (readonly, nonatomic) char isiOSPopoverDismissRegion;
@property (readonly, nonatomic) char _accessibilitySupportsNativeActivateAction;
@property (nonatomic, setter=_setiOSAssistiveTechnologyFocused:) char _iOSAssistiveTechnologyFocused;
@property (readonly, nonatomic) char accessibilityIsSwiftUIElement;
@property (readonly, nonatomic) NSArray *_accessibilityMathRootRadicand;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMathRootIndex;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMathFractionDenominator;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMathFractionNumerator;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMathBase;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMathSubscript;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMathSuperscript;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMathUnder;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMathOver;
@property (readonly, copy, nonatomic) NSString *_accessibilityMathFencedOpen;
@property (readonly, copy, nonatomic) NSString *_accessibilityMathFencedClosed;
@property (readonly, copy, nonatomic) NSArray *_accessibilityMathPrescripts;
@property (readonly, copy, nonatomic) NSArray *_accessibilityMathPostscripts;
@property (readonly, nonatomic) NSNumber *_accessibilityMathLineThickness;
@property (readonly, copy, nonatomic) NSString *_accessibilityMenuItemCmdChar;
@property (readonly, nonatomic) long long _accessibilityMenuItemCmdGlyph;
@property (readonly, nonatomic) long long _accessibilityMenuItemCmdModifiers;
@property (readonly, nonatomic) long long _accessibilityMenuItemCmdVirtualKey;
@property (readonly, copy, nonatomic) NSString *_accessibilityMenuItemMarkChar;
@property (readonly, nonatomic) AXFUIElement *_accessibilityMenuItemPrimaryUIElement;
@property (readonly, nonatomic) NSArray *accessibilityCustomRotors;
@property (readonly, nonatomic) NSArray *accessibilityCustomRotorNames;
@property (readonly, nonatomic) NSArray *accessibilityDeprecatedCustomChooserNames;
@property (readonly, nonatomic) float _accessibilityLoadingProgress;
@property (readonly, nonatomic, getter=_isAccessibilityLoaded) char _accessibilityLoaded;
@property (readonly, copy, nonatomic) NSString *_accessibilityExpandedText;
@property (readonly, copy, nonatomic) NSString *_accessibilityARIALive;
@property (readonly, nonatomic, getter=_isAccessibilityARIAAtomic) char _accessibilityARIAAtomic;
@property (readonly, copy, nonatomic) NSString *_accessibilityARIARelevant;
@property (readonly, nonatomic, getter=_isAccessibilityElementBusy) char _accessibilityElementBusy;
@property (readonly, nonatomic, getter=_isAccessibilityInlineGroup) char _accessibilityInlineGroup;
@property (readonly, copy, nonatomic) NSString *_accessibilityDomIdentifier;
@property (readonly, nonatomic) char _isAccessibilityGrabbed;
@property (readonly, nonatomic) char _supportsAccessibilityGrabbed;
@property (nonatomic, setter=_setAccessibilityPreventKeyboardDOMEventDispatch:) char _accessibilityPreventKeyboardDOMEventDispatch;
@property (nonatomic, setter=_setAccessibilityCaretBrowsingEnabled:) char _accessibilityCaretBrowsingEnabled;
@property (readonly, nonatomic) AXFUIElement *_accessibilityFocusableAncestor;
@property (readonly, nonatomic) AXFUIElement *_accessibilityEditableAncestor;
@property (readonly, nonatomic) AXFUIElement *_accessibilityHighestEditableAncestor;
@property (readonly, nonatomic) char _accessibilityValueAutofillAvailableAttribute;
@property (readonly, copy, nonatomic) NSArray *_accessibilityDOMClassList;
@property (readonly, weak, nonatomic) AXFUIElement *topmostUIAncestor;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } accessibilityFrame;
@property (readonly, nonatomic) NSBezierPath *accessibilityPath;
@property (nonatomic, getter=isAccessibilityFocused) char accessibilityFocused;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } accessibilityActivationPoint;
@property (readonly, nonatomic) AXFUIElement *accessibilityTopLevelUIElement;
@property (readonly, copy, nonatomic) NSURL *accessibilityURL;
@property (retain, nonatomic) id accessibilityValue;
@property (readonly, copy, nonatomic) NSString *accessibilityValueDescription;
@property (readonly, copy, nonatomic) NSArray *accessibilityVisibleChildren;
@property (readonly, copy, nonatomic) NSString *accessibilitySubrole;
@property (readonly, copy, nonatomic) NSString *accessibilityTitle;
@property (readonly, nonatomic) AXFUIElement *accessibilityTitleUIElement;
@property (readonly, nonatomic) unsigned long long accessibilityTraits;
@property (readonly, copy, nonatomic) NSArray *accessibilityNextContents;
@property (readonly, nonatomic) long long accessibilityOrientation;
@property (readonly, nonatomic) AXFUIElement *accessibilityOverflowButton;
@property (readonly, nonatomic) AXFUIElement *accessibilityParent;
@property (readonly, copy, nonatomic) NSString *accessibilityPlaceholderValue;
@property (readonly, copy, nonatomic) NSAttributedString *accessibilityPlaceholderAttributedValue;
@property (readonly, copy, nonatomic) NSArray *accessibilityPreviousContents;
@property (readonly, copy, nonatomic) NSString *accessibilityRole;
@property (readonly, copy, nonatomic) NSString *accessibilityRoleDescription;
@property (readonly, nonatomic) AXFUIElement *accessibilitySearchButton;
@property (readonly, nonatomic) AXFUIElement *accessibilitySearchMenu;
@property (nonatomic, getter=isAccessibilitySelected) char accessibilitySelected;
@property (copy, nonatomic) NSArray *accessibilitySelectedChildren;
@property (readonly, nonatomic) long long accessibilityAriaPositionInSet;
@property (readonly, nonatomic) long long accessibilityAriaSetSize;
@property (readonly, nonatomic) long long accessibilityAriaRowCount;
@property (readonly, nonatomic) long long accessibilityAriaRowIndex;
@property (readonly, nonatomic) long long accessibilityAriaColumnCount;
@property (readonly, nonatomic) long long accessibilityAriaColumnIndex;
@property (readonly, nonatomic) AXFUIElement *accessibilityAriaActiveElement;
@property (readonly, copy, nonatomic) NSArray *accessibilityServesAsTitleForUIElements;
@property (readonly, nonatomic) AXFUIElement *accessibilityShownMenu;
@property (readonly, nonatomic) id accessibilityMinValue;
@property (readonly, nonatomic) id accessibilityMaxValue;
@property (readonly, copy, nonatomic) NSArray *accessibilityLinkedUIElements;
@property (readonly, nonatomic) AXFUIElement *accessibilityWindow;
@property (readonly, copy, nonatomic) NSString *accessibilityIdentifier;
@property (readonly, copy, nonatomic) NSString *accessibilityHelp;
@property (readonly, copy, nonatomic) NSString *accessibilityFilename;
@property (nonatomic, getter=isAccessibilityExpanded) char accessibilityExpanded;
@property (readonly, nonatomic, getter=isAccessibilityEdited) char accessibilityEdited;
@property (readonly, nonatomic, getter=isAccessibilityEnabled) char accessibilityEnabled;
@property (readonly, nonatomic) char isAccessibilityEnabledAttributeSet;
@property (readonly, copy, nonatomic) NSArray *accessibilityChildren;
@property (readonly, copy, nonatomic) NSArray *accessibilityChildrenInNavigationOrder;
@property (readonly, nonatomic) NSNumber *accessibilityChildrenHash;
@property (readonly, nonatomic) char accessibilityShouldElementBeIgnoredForNavigation;
@property (readonly, nonatomic) AXFUIElement *accessibilityClearButton;
@property (readonly, nonatomic) AXFUIElement *accessibilityCancelButton;
@property (readonly, nonatomic, getter=isAccessibilityProtectedContent) char accessibilityProtectedContent;
@property (readonly, copy, nonatomic) NSArray *accessibilityContents;
@property (readonly, copy, nonatomic) NSString *accessibilityLabel;
@property (readonly, nonatomic, getter=isAccessibilityAlternateUIVisible) char accessibilityAlternateUIVisible;
@property (readonly, copy, nonatomic) NSArray *accessibilitySharedFocusElements;
@property (readonly, copy, nonatomic) NSString *accessibilityLanguage;
@property (readonly, nonatomic) double accessibilityFocusRingCornerRadius;
@property (readonly, copy, nonatomic) NSArray *imageData;
@property (readonly, copy, nonatomic) NSString *accessibilityEmbeddedImageDescription;
@property (readonly, copy, nonatomic) NSArray *accessibilityCustomContents;
@property (readonly, nonatomic) char accessibilityConfineToVisible;
@property (readonly, nonatomic) char isiOSElement;
@property (readonly, copy, nonatomic) NSString *accessibilityBrailleLabel;
@property (readonly, copy, nonatomic) NSString *accessibilityBrailleRoleDescription;
@property (readonly, copy, nonatomic) AXBrailleMap *accessibilityBrailleMap;
@property (readonly, copy, nonatomic) AXFUIElement *accessibilityBraille2DCanvasUIElement;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } accessibilityBraille2DRenderRegion;
@property (readonly, nonatomic) char isAccessibilityMacCatalystApplication;
@property (readonly, nonatomic) NSColor *accessibilityApplicationAccentColor;
@property (readonly, nonatomic) AXFUIElement *accessibilityApplicationFocusedUIElement;
@property (readonly, nonatomic) AXFUIElement *accessibilityMainWindow;
@property (readonly, nonatomic, getter=isAccessibilityHidden) char accessibilityHidden;
@property (nonatomic, getter=isAccessibilityFrontmost) char accessibilityFrontmost;
@property (readonly, nonatomic) AXFUIElement *accessibilityFocusedWindow;
@property (readonly, copy, nonatomic) NSArray *accessibilityWindows;
@property (readonly, nonatomic) AXFUIElement *accessibilityExtrasMenuBar;
@property (readonly, nonatomic) AXFUIElement *accessibilityMenuBar;
@property (nonatomic, getter=_isAccessibilityEnhancedUserInterface, setter=_setAccessibilityEnhancedUserInterface:) char _accessibilityEnhancedUserInterface;
@property (readonly, copy, nonatomic) NSArray *accessibilityColumnTitles;
@property (readonly, nonatomic, getter=isAccessibilityOrderedByRow) char accessibilityOrderedByRow;
@property (readonly, nonatomic) long long accessibilityHorizontalUnits;
@property (readonly, nonatomic) long long accessibilityVerticalUnits;
@property (readonly, copy, nonatomic) NSString *accessibilityHorizontalUnitDescription;
@property (readonly, copy, nonatomic) NSString *accessibilityVerticalUnitDescription;
@property (readonly, copy, nonatomic) NSArray *accessibilityHandles;
@property (readonly, copy, nonatomic) NSString *_accessibilitySizeDescription;
@property (readonly, nonatomic) char _supportsAccessibilitySizeDescription;
@property (readonly, nonatomic) id accessibilityWarningValue;
@property (readonly, nonatomic) id accessibilityCriticalValue;
@property (nonatomic, getter=isAccessibilityDisclosed) char accessibilityDisclosed;
@property (readonly, nonatomic) AXFUIElement *accessibilityDisclosedByRow;
@property (readonly, copy, nonatomic) NSArray *accessibilityDisclosedRows;
@property (readonly, nonatomic) long long accessibilityDisclosureLevel;
@property (readonly, copy, nonatomic) NSArray *accessibilityMarkerUIElements;
@property (readonly, nonatomic) id accessibilityMarkerValues;
@property (readonly, nonatomic) id accessibilityMarkerGroupUIElement;
@property (readonly, nonatomic) long long accessibilityUnits;
@property (readonly, copy, nonatomic) NSString *accessibilityUnitDescription;
@property (readonly, nonatomic) long long accessibilityRulerMarkerType;
@property (readonly, copy, nonatomic) NSString *accessibilityMarkerTypeDescription;
@property (readonly, nonatomic) AXFUIElement *accessibilityHorizontalScrollBar;
@property (readonly, nonatomic) AXFUIElement *accessibilityVerticalScrollBar;
@property (readonly, copy, nonatomic) NSArray *accessibilityAllowedValues;
@property (readonly, copy, nonatomic) NSArray *accessibilityLabelUIElements;
@property (readonly, nonatomic) float accessibilityLabelValue;
@property (readonly, copy, nonatomic) NSArray *accessibilitySplitters;
@property (readonly, nonatomic) AXFUIElement *accessibilityDecrementButton;
@property (readonly, nonatomic) AXFUIElement *accessibilityIncrementButton;
@property (readonly, nonatomic) AXFUIElement *_accessibilityFocusedApplication;
@property (readonly, copy, nonatomic) NSArray *accessibilityTabs;
@property (readonly, nonatomic) AXFUIElement *accessibilityHeader;
@property (readonly, nonatomic) long long accessibilityColumnCount;
@property (readonly, nonatomic) long long accessibilityRowCount;
@property (readonly, nonatomic) long long accessibilityIndex;
@property (readonly, copy, nonatomic) NSArray *accessibilityColumns;
@property (readonly, copy, nonatomic) NSArray *accessibilityRows;
@property (readonly, copy, nonatomic) NSArray *accessibilityVisibleRows;
@property (copy, nonatomic) NSArray *accessibilitySelectedRows;
@property (readonly, copy, nonatomic) NSArray *accessibilityVisibleColumns;
@property (readonly, copy, nonatomic) NSArray *accessibilitySelectedColumns;
@property (readonly, nonatomic) long long accessibilitySortDirection;
@property (readonly, copy, nonatomic) NSArray *accessibilityRowHeaderUIElements;
@property (copy, nonatomic) NSArray *accessibilitySelectedCells;
@property (readonly, copy, nonatomic) NSArray *accessibilityVisibleCells;
@property (readonly, copy, nonatomic) NSArray *accessibilityColumnHeaderUIElements;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilityRowIndexRange;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilityColumnIndexRange;
@property (readonly, nonatomic) long long accessibilityInsertionPointLineNumber;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilitySharedCharacterRange;
@property (readonly, copy, nonatomic) NSArray *accessibilitySharedTextUIElements;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilityVisibleCharacterRange;
@property (readonly, nonatomic) long long accessibilityNumberOfCharacters;
@property (readonly, copy, nonatomic) NSString *accessibilitySelectedText;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } accessibilitySelectedTextRange;
@property (copy, nonatomic) NSArray *accessibilitySelectedTextRanges;
@property (readonly, nonatomic) AXFUIElement *accessibilityToolbarButton;
@property (readonly, nonatomic, getter=isAccessibilityModal) char accessibilityModal;
@property (readonly, nonatomic) AXFUIElement *accessibilityProxy;
@property (nonatomic, getter=isAccessibilityMain) char accessibilityMain;
@property (readonly, nonatomic) AXFUIElement *accessibilityFullScreenButton;
@property (readonly, nonatomic) AXFUIElement *accessibilityGrowArea;
@property (readonly, copy, nonatomic) NSString *accessibilityDocument;
@property (readonly, nonatomic) AXFUIElement *accessibilityDefaultButton;
@property (readonly, nonatomic) AXFUIElement *accessibilityCloseButton;
@property (readonly, nonatomic) AXFUIElement *accessibilityZoomButton;
@property (readonly, nonatomic) AXFUIElement *accessibilityMinimizeButton;
@property (readonly, nonatomic, getter=isAccessibilityMinimized) char accessibilityMinimized;
@property (readonly, copy, nonatomic) NSArray *accessibilitySections;
@property (nonatomic) char disableBulkIPCRequests;
@property (readonly, nonatomic) char accessibilityValueAsBool;
@property (readonly, nonatomic) NSNumber *accessibilityValueAsNumber;
@property (readonly, nonatomic) float accessibilityValueAsFloat;
@property (readonly, nonatomic) long long accessibilityValueAsLong;
@property (readonly, nonatomic) long long accessibilityValueAsInteger;
@property (readonly, copy, nonatomic) NSString *accessibilityValueAsString;
@property (readonly, nonatomic) AXFUIElement *accessibilityValueAsElement;
@property (readonly, nonatomic) NSDate *accessibilityValueAsDate;
@property (readonly, nonatomic) float accessibilityMinValueAsFloat;
@property (readonly, nonatomic) float accessibilityMaxValueAsFloat;
@property (readonly, nonatomic) NSNumber *accessibilityMinValueAsNumber;
@property (readonly, nonatomic) NSNumber *accessibilityMaxValueAsNumber;
@property (readonly, nonatomic) long long accessibilityIndexAsLong;
@property (readonly, nonatomic) NSNumber *accessibilityIndexAsNumber;
@property (readonly, nonatomic) unsigned long long accessibilityIndexAsUnsignedInteger;
@property (readonly, nonatomic) AXFUIElement *accessibilityLinkedUIElementsAsElement;
@property (readonly, nonatomic) id accessibilitySelectedTextRangeAsObject;
@property (readonly, nonatomic) char supportsAccessibilityActivationPoint;
@property (readonly, nonatomic) char supportsAccessibilityAllowedValues;
@property (readonly, nonatomic) char supportsAccessibilityAlternateUIVisible;
@property (readonly, nonatomic) char supportsAccessibilityCellForColumnAndRow;
@property (readonly, nonatomic) char supportsAccessibilityChildren;
@property (readonly, nonatomic) char supportsAccessibilityChildrenInNavigationOrder;
@property (readonly, nonatomic) char supportsAccessibilityColumnIndexRange;
@property (readonly, nonatomic) char supportsAccessibilityContents;
@property (readonly, nonatomic) char supportsAccessibilityEnabled;
@property (readonly, nonatomic) char supportsAccessibilityExpanded;
@property (readonly, nonatomic) char supportsAccessibilityFilename;
@property (readonly, nonatomic) char supportsAccessibilityIndex;
@property (readonly, nonatomic) char supportsAccessibilityIndexForUIElement;
@property (readonly, nonatomic) char supportsAccessibilityInsertionPointLineNumber;
@property (readonly, nonatomic) char supportsAccessibilityLabel;
@property (readonly, nonatomic) char supportsAccessibilityLayoutPointForScreenPoint;
@property (readonly, nonatomic) char supportsAccessibilityLayoutSizeForScreenSize;
@property (readonly, nonatomic) char supportsAccessibilityLinkedUIElements;
@property (readonly, nonatomic) char supportsAccessibilityMaxValue;
@property (readonly, nonatomic) char supportsAccessibilityMinValue;
@property (readonly, nonatomic) char supportsAccessibilityOrderedByRow;
@property (readonly, nonatomic) char supportsAccessibilityOrientation;
@property (readonly, nonatomic) char supportsAccessibilityRole;
@property (readonly, nonatomic) char supportsAccessibilityRowCount;
@property (readonly, nonatomic) char supportsAccessibilitySelectedCells;
@property (readonly, nonatomic) char supportsAccessibilitySelectedChildren;
@property (readonly, nonatomic) char supportsAccessibilitySelectedRows;
@property (readonly, nonatomic) char supportsAccessibilitySharedCharacterRange;
@property (readonly, nonatomic) char supportsAccessibilitySharedFocusElements;
@property (readonly, nonatomic) char supportsAccessibilityStringForRange;
@property (readonly, nonatomic) char supportsAccessibilityTitle;
@property (readonly, nonatomic) char supportsAccessibilityValue;
@property (readonly, nonatomic) char supportsAccessibilityVisibleCells;
@property (readonly, nonatomic) char supportsAccessibilityVisibleCharacterRange;
@property (readonly, nonatomic) char supportsAccessibilityVisibleChildren;
@property (readonly, nonatomic) char supportsAccessibilityVisibleColumns;
@property (readonly, nonatomic) char supportsAccessibilityVisibleRows;
@property (readonly, nonatomic) char supportsAccessibilityScrollToShowDescendant;
@property (readonly, nonatomic) char supportsAccessibilityLineRangeForIndex;
@property (readonly, nonatomic) char supportsAccessibilityPreviousLineRangeForIndex;
@property (readonly, nonatomic) char supportsAccessibilityNextLineRangeForIndex;
@property (readonly, nonatomic) char supportsAccessibilityCustomContents;
@property (readonly, nonatomic) char supportsAccessibilityEmbeddedImageDescription;
@property (readonly, nonatomic) char supportsAccessibilityPlaceholderAttributedValue;
@property (readonly, nonatomic) char canSetAccessibilityDisclosed;
@property (readonly, nonatomic) char canSetAccessibilityFocused;
@property (readonly, nonatomic) char canSetAccessibilityMain;
@property (readonly, nonatomic) char canSetAccessibilitySelected;
@property (readonly, nonatomic) char canSetAccessibilitySelectedCells;
@property (readonly, nonatomic) char canSetAccessibilitySelectedChildren;
@property (readonly, nonatomic) char canSetAccessibilitySelectedRows;
@property (readonly, nonatomic) char canSetAccessibilitySelectedTextRange;
@property (readonly, nonatomic) char canSetAccessibilityValue;
@property (readonly, nonatomic) char canSetAccessibilityExpanded;
@property (retain, nonatomic) id lastSelectedTextMarkerRange;
@property (readonly, nonatomic) NSMutableDictionary *textAttributeCache;

+ (void)initialize;
+ (id)_deepestDescendent:(id)a0 containingPoint:(struct CGPoint { double x0; double x1; })a1 visitedSet:(id)a2;
+ (char)_shouldCreateInstanceForApplicationRef:(struct __AXUIElement { } *)a0 applicationProcessIdentifier:(int)a1 applicationProcessSerialNumber:(struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })a2 applicationIdentifier:(id)a3;
+ (id)_uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0 applicationElementRef:(struct __AXUIElement { } *)a1 includeIgnored:(char)a2;
+ (struct __AXUIElement { } *)_validateApplicationRef:(struct __AXUIElement { } *)a0 withPID:(int)a1;
+ (id)_validateIdentifier:(id)a0 withPSN:(struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })a1;
+ (int)_validatePID:(int)a0 withPSN:(struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })a1;
+ (struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })_validatePSN:(struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })a0 withPID:(int)a1;
+ (id)createApplication:(int)a0;
+ (id)currentTaskForThreadName:(id)a0;
+ (id)deepestUIElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0;
+ (void)invalidateThreadCache;
+ (id)systemWideElement;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0 includeIgnored:(char)a1;
+ (id)uiElementWithAXElementRef:(struct __AXUIElement { } *)a0;
+ (id)uiElementWithTransportRepresentation:(id)a0;
+ (id)unvalidatedUIElementWithApplicationPSN:(struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })a0;
+ (id)validatedUIElementWithApplicationElementRef:(struct __AXUIElement { } *)a0 applicationProcessIdentifier:(int)a1 applicationProcessSerialNumber:(struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })a2 applicationIdentifier:(id)a3;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)description;
- (unsigned long long)hash;
- (char)isEqual:(id)a0;
- (char)isValid;
- (void).cxx_destruct;
- (id)attributeNames;
- (char)performAction:(struct __CFString { } *)a0;
- (id)accessibilityCellForColumn:(long long)a0 row:(long long)a1;
- (void)_invalidate;
- (id)accessibilityAttributedStringForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityFrameForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct CGPoint { double x0; double x1; })accessibilityLayoutPointForScreenPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })accessibilityLayoutSizeForScreenSize:(struct CGSize { double x0; double x1; })a0;
- (id)accessibilityLineForIndex:(long long)a0;
- (char)accessibilityPerformCancel;
- (char)accessibilityPerformConfirm;
- (char)accessibilityPerformDecrement;
- (char)accessibilityPerformDelete;
- (char)accessibilityPerformIncrement;
- (char)accessibilityPerformPick;
- (char)accessibilityPerformPress;
- (char)accessibilityPerformRaise;
- (char)accessibilityPerformShowAlternateUI;
- (char)accessibilityPerformShowDefaultUI;
- (char)accessibilityPerformShowMenu;
- (id)accessibilityRTFForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityRangeForIndex:(long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityRangeForLine:(long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityRangeForPosition:(struct CGPoint { double x0; double x1; })a0;
- (char)accessibilityReplaceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withText:(id)a1;
- (struct CGPoint { double x0; double x1; })accessibilityScreenPointForLayoutPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })accessibilityScreenSizeForLayoutSize:(struct CGSize { double x0; double x1; })a0;
- (id)accessibilityStringForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityStyleRangeForIndex:(long long)a0;
- (char)hasAncestor:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleBounds;
- (id)fullDescription;
- (id)rawDescription;
- (unsigned long long)numberOfCharacters;
- (id)stringForTextMarkerRange:(id)a0;
- (id)accessibilityTextualContext;
- (id)_cellHashLabelWithElementsUsed:(id)a0;
- (id)uiElementForHierarchyIndexPath:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityLineRangeForIndex:(long long)a0;
- (char)isMockUIElement;
- (id)objectForAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withMarkerRange:(struct __AXTextMarkerRange { } *)a1;
- (char)supportsAction:(struct __CFString { } *)a0;
- (id)__accessibilityEndTextMarker;
- (unsigned long long)__accessibilityIndexForTextMarkerAsUnsignedInteger:(id)a0;
- (id)__accessibilityIntersectionWithSelectionRange;
- (id)__accessibilityLineTextMarkerRangeForTextMarker:(id)a0;
- (id)__accessibilityNextLineEndTextMarkerForTextMarker:(id)a0;
- (id)__accessibilityNextParagraphEndTextMarkerForTextMarker:(id)a0;
- (id)__accessibilityNextSentenceEndTextMarkerForTextMaker:(id)a0;
- (id)__accessibilityNextTextMarkerForTextMarker:(id)a0;
- (id)__accessibilityNextWordEndTextMarkerForTextMarker:(id)a0;
- (id)__accessibilityParagraphTextMarkerRangeForTextMarker:(id)a0;
- (id)__accessibilityPreviousLineStartTextMarkerForTextMarker:(id)a0;
- (id)__accessibilityPreviousParagraphStartTextMarkerForTextMarker:(id)a0;
- (id)__accessibilityPreviousSentenceStartTextMarkerForTextMarker:(id)a0;
- (id)__accessibilityPreviousTextMarkerForTextMarker:(id)a0;
- (id)__accessibilityPreviousWordStartTextMarkerForTextMarker:(id)a0;
- (id)__accessibilitySelectedTextMarkerRange;
- (id)__accessibilitySentenceTextMarkerRangeForTextMarker:(id)a0;
- (id)__accessibilityStartTextMarker;
- (id)__accessibilityTextMarkerForIndex:(unsigned long long)a0;
- (id)__accessibilityTextMarkerForPosition:(struct CGPoint { double x0; double x1; })a0;
- (id)__accessibilityTextMarkerRangeForLine:(long long)a0;
- (id)__accessibilityTextMarkerRangeForPosition:(struct CGPoint { double x0; double x1; })a0;
- (id)__accessibilityTextMarkerRangeForUIElement:(id)a0;
- (id)__accessibilityUIElementForTextMarker:(id)a0;
- (void)__setAccessibilitySelectedTextMarkerRange:(id)a0;
- (id)__textPositionForAttribute:(struct __CFString { } *)a0 axfPosition:(id)a1;
- (id)__textRangeForAttribute:(struct __CFString { } *)a0 axfPosition:(id)a1;
- (id)_accessibilityAXFTextMarkerRange;
- (id)_accessibilityAttributedStringForTextMarkerRange:(struct __AXTextMarkerRange { } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_accessibilityBoundsForTextMarkerRange:(struct __AXTextMarkerRange { } *)a0;
- (id)_accessibilityComputedEquivalenceTagComponents;
- (char)_accessibilityDataDetectorExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_accessibilityDataDetectorTypeAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_accessibilityElementsForSearchPredicate:(id)a0;
- (struct __AXTextMarker { } *)_accessibilityEndTextMarker;
- (id)_accessibilityFirstContainedElement;
- (id)_accessibilityFirstElementForFocus;
- (id)_accessibilityFocusedOpaqueElement;
- (unsigned long long)_accessibilityIndexForTextMarkerAsUnsignedInteger:(struct __AXTextMarker { } *)a0;
- (id)_accessibilityLastContainedElement;
- (struct __AXTextMarkerRange { } *)_accessibilityLeftLineTextMarkerRangeForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarkerRange { } *)_accessibilityLeftWordTextMarkerRangeForTextMarker:(struct __AXTextMarker { } *)a0;
- (id)_accessibilityLeftWordTextRangeWithAXFTextPosition:(id)a0;
- (unsigned long long)_accessibilityLengthForTextMarkerRange:(struct __AXTextMarkerRange { } *)a0;
- (long long)_accessibilityLineForTextMarker:(struct __AXTextMarker { } *)a0;
- (long long)_accessibilityLineForTextMarkerAsLong:(struct __AXTextMarker { } *)a0;
- (unsigned long long)_accessibilityLineForTextMarkerAsUnsignedInteger:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarkerRange { } *)_accessibilityLineTextMarkerRangeForTextMarker:(struct __AXTextMarker { } *)a0;
- (id)_accessibilityMoveiOSFocusToNextOpaqueChildUIElement;
- (id)_accessibilityMoveiOSFocusToPreviousOpaqueChildUIElement;
- (struct __AXTextMarker { } *)_accessibilityNextLineEndTextMarkerForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarker { } *)_accessibilityNextParagraphEndTextMarkerForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarker { } *)_accessibilityNextSentenceEndTextMarkerForTextMaker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarker { } *)_accessibilityNextTextMarkerForTextMaker:(struct __AXTextMarker { } *)a0;
- (id)_accessibilityNextWordEndTextMarkerForAXFTextPosition:(id)a0;
- (struct __AXTextMarker { } *)_accessibilityNextWordEndTextMarkerForTextMarker:(struct __AXTextMarker { } *)a0;
- (id)_accessibilityOpaqueElementParent;
- (struct __AXTextMarkerRange { } *)_accessibilityParagraphTextMarkerRangeForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarker { } *)_accessibilityPreviousLineStartTextMarkerForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarker { } *)_accessibilityPreviousParagraphStartTextMarkerForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarker { } *)_accessibilityPreviousSentenceStartTextMarkerForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarker { } *)_accessibilityPreviousTextMarkerForTextMaker:(struct __AXTextMarker { } *)a0;
- (id)_accessibilityPreviousWordStartTextMarkerForAXFTextPosition:(id)a0;
- (struct __AXTextMarker { } *)_accessibilityPreviousWordStartTextMarkerForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarkerRange { } *)_accessibilityRightLineTextMarkerRangeForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct __AXTextMarkerRange { } *)_accessibilityRightWordTextMarkerRangeForTextMarker:(struct __AXTextMarker { } *)a0;
- (id)_accessibilityRightWordTextRangeWithAXFTextPosition:(id)a0;
- (struct __AXTextMarkerRange { } *)_accessibilitySelectedTextMarkerRange;
- (struct __AXTextMarkerRange { } *)_accessibilitySentenceTextMarkerRangeForTextMarker:(struct __AXTextMarker { } *)a0;
- (id)_accessibilitySentenceTextRangeWithAXFTextPosition:(id)a0;
- (struct __AXTextMarker { } *)_accessibilityStartTextMarker;
- (id)_accessibilityStringForTextMarkerRange:(struct __AXTextMarkerRange { } *)a0;
- (struct __AXTextMarkerRange { } *)_accessibilityStyleTextMarkerRangeForTextMarker:(struct __AXTextMarker { } *)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_accessibilitySuggestionRange;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_accessibilityTextInputMarkedRange;
- (struct __AXTextMarkerRange { } *)_accessibilityTextInputMarkedTextMarkerRange;
- (struct __AXTextMarker { } *)_accessibilityTextMarkerForIndex:(unsigned long long)a0;
- (struct __AXTextMarker { } *)_accessibilityTextMarkerForPosition:(struct CGPoint { double x0; double x1; })a0;
- (struct __AXTextMarkerRange { } *)_accessibilityTextMarkerRangeForLine:(unsigned long long)a0;
- (struct __AXTextMarkerRange { } *)_accessibilityTextMarkerRangeForUIElement:(id)a0;
- (struct __AXTextMarkerRange { } *)_accessibilityTextMarkerRangeForUnorderedTextMarkers:(id)a0;
- (id)_accessibilityUIElementForTextInsertionAndDeletion;
- (id)_accessibilityUIElementForTextMarker:(struct __AXTextMarker { } *)a0;
- (id)_accessibilityUIElementsForRole:(struct __CFString { } *)a0;
- (id)_accessibilityValueDescriptionForScreenPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct __AXTextMarkerRange { } *)_accessibilityVisibleCharacterTextMarkerRange;
- (id)_accessibilityVisibleOpaqueElements;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_accessiblityTextInputElementRange;
- (struct __AXUIElement { } *)_axElementForIsEqual;
- (id)_basicSupportedAttributes;
- (char)_canSetAccessibilitySelectedTextMarkerRange;
- (id)_childrenForIndexing;
- (id)_closestWebAreaAncestor;
- (struct __CFArray { } *)_copyAttributeNames;
- (struct __CFArray { } *)_copyParameterizedAttributeNames;
- (char)_didAccessibilityShowDataDetectorMenuAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_fallbackCellForColumn:(long long)a0 row:(long long)a1;
- (id)_getCachedValueForAttribute:(id)a0 withType:(unsigned long long)a1 cacheHadEntry:(char *)a2;
- (id)_hashLabelWithElementsUsed:(id)a0;
- (char)_isAccessibilityTextMarkerValid:(struct __AXTextMarker { } *)a0;
- (char)_loadAccessibilityBundles;
- (id)_navigableElementWithinCriteriaBlock:(id /* block */)a0;
- (id)_nonPromotableAttributesCatalyst;
- (id)_nonPromotableAttributesMac;
- (void)_setAccessibilityAssistiveTechnologyFocusedElement:(id)a0;
- (void)_setAccessibilityScreenVisibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_setAccessibilitySelectedTextMarkerRange:(struct __AXTextMarkerRange { } *)a0;
- (void)_setAudiographRole:(id)a0;
- (void)_setAudiographRoleDescription:(id)a0;
- (id)_shouldMapAttributes;
- (char)_shouldTryToUseMarkerBasedTextAPI;
- (char)_supportsAccessibilityAttributedStringForTextMarkerRange;
- (char)_supportsAccessibilityDataDetectorExistsAtPoint;
- (char)_supportsAccessibilityEndTextMarker;
- (char)_supportsAccessibilityIndexForTextMarker;
- (char)_supportsAccessibilityIntersectionWithSelectionRange;
- (char)_supportsAccessibilityRangeForPosition;
- (char)_supportsAccessibilitySelectedTextMarkerRange;
- (char)_supportsAccessibilityStartTextMarker;
- (char)_supportsAccessibilityTextInputElementRange;
- (char)_supportsAccessibilityTextMarkerForPosition;
- (char)_supportsAccessibilityTextMarkerValid;
- (char)_supportsAccessibilityUIElementForTextInsertionAndDeletion;
- (char)_supportsAccessibilityValueDescriptionForScreenPoint;
- (id)_textRepresentation;
- (id)_uiElementArrayFromAXUIElementRefArray:(struct __CFArray { } *)a0;
- (void)_updateNodeTypeForChildrenCount:(unsigned long long)a0;
- (id)accessibilityAXFTextRangeForLine:(long long)a0;
- (id)accessibilityAttributedStringForAXFTextRange:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityBoundsForAXFTextRange:(id)a0;
- (id)accessibilityChildForNavigationOrderIndex:(unsigned long long)a0;
- (id)accessibilityHeaderForColumn:(long long)a0;
- (id)accessibilityHeaderForRow:(long long)a0;
- (long long)accessibilityLineForAXFTextPosition:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityNextLineRangeForIndex:(long long)a0;
- (void)accessibilityNotifyVoiceOverAnnouncementCompletion:(char)a0;
- (char)accessibilityPerformScrollToShowDescendant:(id)a0;
- (id)accessibilityPreviousAXFTextPositionForAXFPosition:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityPreviousLineRangeForIndex:(long long)a0;
- (id)accessibilitySelectedAXFTextRange;
- (id)accessibilitySharedTextElementForIndex:(long long)a0;
- (id)accessibilityStringForAXFTextRange:(id)a0;
- (id)accessibilityTextInputMarkedAXFTextRange;
- (id)accessibilityVisibleCharacterAXFTextRange;
- (id)actionNameAtIndex:(unsigned long long)a0;
- (id)actionNames;
- (void)addIfSupportedAXAttribute:(struct __CFString { } *)a0;
- (void)addSupportedAXAttribute:(struct __CFString { } *)a0;
- (id)ancestorMatchingBlock:(id /* block */)a0;
- (id)ancestorWithRole:(struct __CFString { } *)a0;
- (id)applicationElement;
- (int)applicationProcessIdentifier;
- (struct ProcessSerialNumber { unsigned int x0; unsigned int x1; })applicationProcessSerialNumber;
- (unsigned long long)arrayCountForAXAttribute:(struct __CFString { } *)a0;
- (id)arrayForAXAttribute:(struct __CFString { } *)a0;
- (id)attributedStringForTextMarkerRange:(id)a0;
- (struct __AXUIElement { } *)axElementRef;
- (char)boolForAXAttribute:(struct __CFString { } *)a0;
- (char)boolForParameterizedAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForTextMarkerRange:(id)a0;
- (void)cacheAllStaticAttributes;
- (unsigned long long)cachedNumberOfCharacters;
- (char)canSetAXAttribute:(struct __CFString { } *)a0;
- (id)childrenMatchingBlock:(id /* block */)a0;
- (void)clearTextAttributeCache;
- (struct CGColor { } *)colorForAXAttribute:(struct __CFString { } *)a0;
- (id)debugDescriptionForTextMarker:(id)a0;
- (id)debugDescriptionForTextMarkerRange:(id)a0;
- (void)debugNodeDescriptionForTextMarker:(id)a0;
- (void)debugNodeTreeDescriptionForTextMarker:(id)a0;
- (id)defaultActionName;
- (id)descendantMatchingBlock:(id /* block */)a0 depth:(long long)a1;
- (id)descendantWithMaximumDepth:(long long)a0 predicate:(id /* block */)a1;
- (id)descendantWithRole:(struct __CFString { } *)a0 depth:(long long)a1;
- (id)descriptionForAction:(id)a0;
- (void)disableLifespanCache;
- (double)doubleForAXAttribute:(struct __CFString { } *)a0;
- (void)enableLifespanCache;
- (id)firstAncestorWithinDistance:(long long)a0 matchingBlock:(id /* block */)a1;
- (id)firstDescendantWithinDistance:(long long)a0 matchingBlock:(id /* block */)a1;
- (float)floatForAXAttribute:(struct __CFString { } *)a0;
- (char)getValueForAXAttribute:(struct __CFString { } *)a0 valueType:(unsigned int)a1 value:(void *)a2;
- (char)getValueForAXAttribute:(struct __CFString { } *)a0 valueType:(unsigned int)a1 value:(void *)a2 axError:(int *)a3;
- (char)getValueForAXParameterizedAttribute:(struct __CFString { } *)a0 parameter:(void *)a1 valueType:(unsigned int)a2 value:(void *)a3;
- (char)getValueForAXParameterizedAttribute:(struct __CFString { } *)a0 parameter:(void *)a1 valueType:(unsigned int)a2 value:(void *)a3 axError:(int *)a4;
- (char)hasAXRole:(struct __CFString { } *)a0;
- (char)hasAXSubrole:(struct __CFString { } *)a0;
- (char)hasAllTraits:(unsigned long long)a0;
- (char)hasAnyTraits:(unsigned long long)a0;
- (char)hasEditableTextRole;
- (char)hasOnlyTraits:(unsigned long long)a0;
- (char)hasRoleChanged;
- (char)hasSharedTextElements;
- (char)hasValidRangeForAXAttribute:(struct __CFString { } *)a0;
- (id)hashLabel;
- (id)hierarchyIndexPath;
- (id)hierarchyIndexPathFromUIElement:(id)a0;
- (unsigned long long)indexOfUIElement:(id)a0;
- (id)initWithAXElementRef:(struct __AXUIElement { } *)a0;
- (long long)integerForAXAttribute:(struct __CFString { } *)a0;
- (long long)integerForParameterizedAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (char)isAncestorOfElement:(id)a0;
- (char)isApplicationSuspended;
- (char)isArrayEmptyForAXAttribute:(struct __CFString { } *)a0;
- (char)isImageDescriptionUIElement;
- (char)isImitationUIElement;
- (char)isLifespanCacheEnabled;
- (char)isPromotable;
- (char)isValidIgnoringCommunicationErrors;
- (unsigned long long)lengthForTextMarkerRange:(id)a0;
- (char)loadSearchResultToken:(id)a0 rotorIdentifier:(id)a1;
- (long long)longForAXAttribute:(struct __CFString { } *)a0;
- (long long)longForParameterizedAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (char)mayHaveDynamicallyChangingHashLabel;
- (id)navigableElementWithinContainerElement:(id)a0;
- (id)numberForAXAttribute:(struct __CFString { } *)a0;
- (id)numberForParameterizedAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (unsigned long long)numberOfSharedTextElements;
- (id)objectForAXAttribute:(struct __CFString { } *)a0;
- (id)objectForAXAttribute:(struct __CFString { } *)a0 expectedType:(unsigned long long)a1;
- (id)objectForAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1 expectedType:(unsigned long long)a2;
- (id)pageAncestorUIElement;
- (id)parameterizedAttributeNames;
- (unsigned long long)permutatedHashCode;
- (struct CGPoint { double x0; double x1; })pointForAXAttribute:(struct __CFString { } *)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeForAXAttribute:(struct __CFString { } *)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeForParameterizedAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForAXAttribute:(struct __CFString { } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForParameterizedAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (void)removeSupportedAXAttribute:(struct __CFString { } *)a0;
- (void)resetIsValid;
- (void)setAXAttribute:(struct __CFString { } *)a0 withArray:(id)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withBool:(char)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withFloat:(double)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withLong:(long long)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withNumber:(id)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withObject:(id)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withSize:(struct CGSize { double x0; double x1; })a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withString:(id)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withUIElement:(id)a1;
- (void)setAXAttribute:(struct __CFString { } *)a0 withUIElementArray:(id)a1;
- (void)setAccessibilitySelectedAXFTextRange:(id)a0;
- (void)setAccessibilityVisibleCharacterAXFTextRange:(id)a0;
- (id)sharedCharacterRange;
- (char)sharesTextWithUIElement:(id)a0;
- (char)shouldMap;
- (struct CGSize { double x0; double x1; })sizeForAXAttribute:(struct __CFString { } *)a0;
- (id)stringForAXAttribute:(struct __CFString { } *)a0;
- (id)stringForParameterizedAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (char)supportsAXAttribute:(struct __CFString { } *)a0;
- (char)supportsAXParameterizedAttribute:(struct __CFString { } *)a0;
- (char)supportsAccessibilityTextualContext;
- (struct __AXTextMarker { } *)textMarkerForAXAttribute:(struct __CFString { } *)a0;
- (struct __AXTextMarker { } *)textMarkerForParameterizedAXAttribute:(struct __CFString { } *)a0 parameterValue:(void *)a1;
- (struct __AXTextMarkerRange { } *)textMarkerRangeForAXAttribute:(struct __CFString { } *)a0;
- (struct __AXTextMarkerRange { } *)textMarkerRangeForParameterizedAXAttribute:(struct __CFString { } *)a0 parameterValue:(void *)a1;
- (id)totalContentRange;
- (id)transportRepresentation;
- (id)treeDescriptionWithDepthLimit:(long long)a0;
- (id)uiElementArrayForAXAttribute:(struct __CFString { } *)a0;
- (id)uiElementArrayForAXAttribute:(struct __CFString { } *)a0 atIndex:(unsigned long long)a1 length:(unsigned long long)a2;
- (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0;
- (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })a0 includeIgnored:(char)a1;
- (id)uiElementForAXAttribute:(struct __CFString { } *)a0;
- (id)uiElementForCustomRotorName:(id)a0;
- (id)uiElementForParameterizedAXAttribute:(struct __CFString { } *)a0 parameterValue:(void *)a1;
- (id)uiElementFromArrayForAXAttribute:(struct __CFString { } *)a0 atIndex:(unsigned long long)a1;
- (unsigned long long)unsignedIntegerForAXAttribute:(struct __CFString { } *)a0;
- (unsigned long long)unsignedIntegerForParameterizedAXAttribute:(struct __CFString { } *)a0 parameter:(void *)a1;
- (id)urlForAXAttribute:(struct __CFString { } *)a0;
- (id)valueArrayForAXAttributes:(id)a0;
- (double)visibleArea;

@end

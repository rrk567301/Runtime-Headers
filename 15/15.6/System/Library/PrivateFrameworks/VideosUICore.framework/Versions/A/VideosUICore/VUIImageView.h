@class NSString, NSArray, NSURL, NSImageSymbolConfiguration, NSColor, NSImage, NSImageView, VUIImageProxy;

@interface VUIImageView : NSView <VUINSTraitEnvironment> {
    char _rendersImageAsTemplates;
    NSImage *_image;
    NSImageView *_imageView;
    unsigned long long _imageContentMode;
    NSImage *_flatImage;
    NSImage *_flatHighlightImage;
    char _selected;
    double _cornerRadius;
    char _continuousCorners;
    struct CGSize { double width; double height; } _previousSize;
    char _handledSmartInvert;
}

@property (copy, nonatomic) id /* block */ completion;
@property (nonatomic, getter=isImageLoaded) char imageLoaded;
@property (retain, nonatomic) NSColor *imageViewOSXBackgroundColor;
@property (nonatomic, getter=isUserInteractionEnabled) char userInteractionEnabled;
@property (nonatomic) long long viewTag;
@property (retain, nonatomic) NSArray *lastSavedImageFilters;
@property (retain, nonatomic) NSImage *image;
@property (retain, nonatomic) NSImage *placeholderImage;
@property (retain, nonatomic) NSColor *placeholderColor;
@property (nonatomic) char shouldScaleToSize;
@property (nonatomic) double cornerRadius;
@property (nonatomic) char imageContainsShadow;
@property (nonatomic) char animatesShadowChanges;
@property (nonatomic) struct _VUICornerRadii { double topLeft; double topRight; double bottomLeft; double bottomRight; } shadowRadii;
@property (copy, nonatomic) id /* block */ shadowPathUpdater;
@property (nonatomic) char imageContainsCornerRadius;
@property (retain, nonatomic) NSColor *borderColor;
@property (nonatomic) double borderWidth;
@property (nonatomic) long long preferredVibrancy;
@property (retain, nonatomic) VUIImageProxy *imageProxy;
@property (readonly, nonatomic) NSURL *latestImageURL;
@property (copy, nonatomic) id /* block */ dynamicProxyProvider;
@property (nonatomic) long long tag;
@property (readonly, nonatomic) NSImageView *imageViewForAccessibility;
@property (retain, nonatomic, setter=_setTintColor:) NSColor *_tintColor;
@property (retain, nonatomic, setter=_setFocusedColor:) NSColor *_focusedColor;
@property (nonatomic, setter=_setImageShape:) long long _imageShape;
@property (nonatomic, setter=_setEnableEdgeAntialiasingOnSelected:) char _enableEdgeAntialiasingOnSelected;
@property (retain, nonatomic, setter=_setPreferredSymbolConfiguration:) NSImageSymbolConfiguration *preferredSymbolConfiguration;
@property (nonatomic, getter=isSymbolImage) char symbolImage;
@property (nonatomic, getter=isResourceImage) char resourceImage;
@property (nonatomic) struct CGSize { double width; double height; } resourceOrSymbolSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void).cxx_destruct;
- (void)setTag:(long long)a0;
- (void)layout;
- (id)backgroundColor;
- (long long)tag;
- (double)_cornerRadius;
- (id)_imageView;
- (void)_setCornerRadius:(double)a0;
- (void)_setImage:(id)a0;
- (id)accessibilityLabel;
- (id)accessibilityTitle;
- (struct CGSize { double x0; double x1; })fittingSize;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (char)isFlipped;
- (void)setAccessibilityLabel:(id)a0;
- (void)setBackgroundColor:(id)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)viewDidChangeEffectiveAppearance;
- (void)viewWillMoveToWindow:(id)a0;
- (void)_updateImageView;
- (void)_updateTintColor;
- (void)_updateCornerRadius;
- (void)_loadImage;
- (double)_continuousCornerRadius;
- (void)_setContinuousCornerRadius:(double)a0;
- (void)setImageProxy:(id)a0 completion:(id /* block */)a1;
- (void)setVuiBackgroundColor:(id)a0;
- (void)setVuiContentMode:(unsigned long long)a0;
- (void)setVuiUserInteractionEnabled:(char)a0;
- (id)vuiBackgroundColor;
- (unsigned long long)vuiContentMode;
- (char)vuiIsUserInteractionEnabled;
- (struct CGSize { double x0; double x1; })vui_layoutSubviews:(struct CGSize { double x0; double x1; })a0 computationOnly:(char)a1;
- (void)vui_willMoveToWindow:(id)a0;
- (id)_imageProxyWithSize:(struct CGSize { double x0; double x1; })a0 sizeComputationOnly:(char)a1;
- (void)_reloadImageForLayoutDirectionChange;
- (void)_updateFlatImageWithImage:(id)a0;
- (void)computeCornerRadii;
- (void)handleDisplayOptions;
- (void)registerSystemNotification;
- (void)setImageProxy:(id)a0 clearingExisting:(char)a1 completion:(id /* block */)a2;
- (void)unregisterSystemNotification;

@end

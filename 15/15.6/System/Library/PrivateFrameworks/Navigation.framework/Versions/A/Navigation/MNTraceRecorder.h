@class NSString, MNTrace, MNTracePreparedStatement, NSDate;

@interface MNTraceRecorder : NSObject <MNLocationRecorder> {
    long long _traceType;
    NSDate *_recordingCompassHeadingLastDate;
    char _corrupted;
    char _closed;
    MNTracePreparedStatement *_updateRecordingStartTimeStatement;
    MNTracePreparedStatement *_updateDirectionsStartTimeStatement;
    MNTracePreparedStatement *_updateNavigationStartTimeStatement;
    MNTracePreparedStatement *_updateNavigationEndTimeStatement;
    MNTracePreparedStatement *_recordEnvironmentInfoStatement;
    MNTracePreparedStatement *_recordDebugSettingStatement;
    MNTracePreparedStatement *_recordAudioSettingStatement;
    MNTracePreparedStatement *_recordStylesheetStatement;
    MNTracePreparedStatement *_recordLocationStatement;
    MNTracePreparedStatement *_recordLocationErrorStatement;
    MNTracePreparedStatement *_recordMatchInfoStatement;
    MNTracePreparedStatement *_recordDirectionsStatement;
    MNTracePreparedStatement *_recordETAUStatement;
    MNTracePreparedStatement *_recordRealtimeTransitUpdateRequest;
    MNTracePreparedStatement *_recordRealtimeTransitUpdateResponse;
    MNTracePreparedStatement *_recordRealtimeTransitUpdateResponseError;
    MNTracePreparedStatement *_recordVehicleSpeed;
    MNTracePreparedStatement *_recordVehicleHeading;
    MNTracePreparedStatement *_recordMotionData;
    MNTracePreparedStatement *_recordCompassHeading;
    MNTracePreparedStatement *_recordVirtualGarageVehicleState;
    MNTracePreparedStatement *_recordNavigationEvent;
    MNTracePreparedStatement *_recordNavigationUpdate;
    MNTracePreparedStatement *_recordRouteCreationActionStatement;
    unsigned long long _routeRequestCount;
    unsigned long long _etaTrafficUpdateCount;
    id /* block */ _errorHandler;
    char _lastPauseSpokenAudio;
    long long _lastVoiceGuidanceSetting;
    unsigned long long _lastLaneEventHash;
}

@property (readonly, nonatomic) NSString *tracePath;
@property (readonly, nonatomic) MNTrace *trace;
@property (retain, nonatomic) NSDate *recordingStartDate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)init;
- (void).cxx_destruct;
- (void)beginTransaction;
- (void)endTransaction;
- (void)setIsSimulation:(char)a0;
- (void)recordCompassHeading:(double)a0 magneticHeading:(double)a1 accuracy:(double)a2 timestamp:(id)a3;
- (void)recordError:(id)a0;
- (void)recordInitialCourse:(double)a0;
- (void)recordLocation:(id)a0 correctedLocation:(id)a1;
- (void)recordLocationUpdatePause;
- (void)recordLocationUpdateResume;
- (void)_dispatchWrite:(id /* block */)a0;
- (void)recordVehicleHeading:(double)a0 timestamp:(id)a1;
- (void)saveTraceWithCompletionHandler:(id /* block */)a0;
- (void)setRouteGenius:(char)a0;
- (void)_closeTraceDB;
- (void)_executeStatementForQuery:(id)a0 handler:(id /* block */)a1;
- (void)_initializeTraceDB;
- (char)_isTracePathValid:(id)a0;
- (void)_logError:(id)a0 resultCode:(int)a1;
- (void)_logSqliteErrorWithResult:(int)a0 file:(const char *)a1 line:(int)a2;
- (void)_prepareStatements;
- (char)_recordInfo;
- (void)_recordLocationEvent:(long long)a0 recordingTimestamp:(double)a1 coordinate:(struct CLLocationCoordinate2D { double x0; double x1; })a2 rawCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })a3 timestamp:(double)a4 horizontalAccuracy:(double)a5 verticalAccuracy:(double)a6 altitude:(double)a7 speed:(double)a8 speedAccuracy:(double)a9 course:(double)a10 rawCourse:(double)a11 type:(int)a12 courseAccuracy:(double)a13 correctedCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })a14 correctedCourse:(double)a15 matchType:(int)a16 activeTransportType:(int)a17 correctedLocation:(id)a18 speedLimit:(int)a19 shieldText:(id)a20 shieldType:(int)a21;
- (void)_recordLocationEvent:(long long)a0 recordingTimestamp:(double)a1 location:(id)a2 correctedLocation:(id)a3;
- (void)_recordLocationMatchInfoOnWriteQueue:(id)a0 forLocationID:(int)a1;
- (void)_recordNavigationUpdate:(long long)a0 parameters:(id)a1;
- (void)_updateForExistingTrace;
- (void)recordAudioSetting:(char)a0 voiceGuidance:(long long)a1;
- (void)recordDebugSetting:(id)a0 settingValue:(id)a1;
- (void)recordDepartWaypoint:(id)a0 legIndex:(unsigned long long)a1 departureReason:(unsigned long long)a2;
- (void)recordDirectionsRequest:(id)a0 response:(id)a1 error:(id)a2 waypoints:(id)a3 selectedRouteIndex:(unsigned long long)a4 requestTimestamp:(double)a5 responseTimestamp:(double)a6;
- (void)recordETAURequest:(id)a0 response:(id)a1 error:(id)a2 destinationName:(id)a3 requestTimestamp:(double)a4 responseTimestamp:(double)a5;
- (void)recordEnvironmentInfo:(id)a0 value:(id)a1;
- (void)recordLocation:(id)a0 rawLocation:(id)a1;
- (void)recordLocation:(id)a0 rawLocation:(id)a1 timestamp:(double)a2;
- (void)recordLocation:(id)a0 timestamp:(double)a1;
- (void)recordMiscInfo:(id)a0 value:(id)a1;
- (void)recordMotionUpdate:(unsigned long long)a0 exitType:(unsigned long long)a1 confidence:(unsigned long long)a2;
- (void)recordNavigationEvent:(long long)a0 description:(id)a1;
- (void)recordRouteChangeWithIndex:(unsigned long long)a0 directionsResponseID:(id)a1 etauResponseID:(id)a2 rerouteReason:(unsigned long long)a3;
- (void)recordRouteCreationAction:(unsigned long long)a0 request:(id)a1 response:(id)a2 error:(id)a3 anchorPoints:(id)a4 requestDate:(id)a5 responseDate:(id)a6;
- (void)recordSimulatedCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })a0 course:(double)a1 altitude:(double)a2 speed:(double)a3 timestamp:(double)a4 activeTransportType:(int)a5;
- (void)recordStylesheet:(id)a0 data:(id)a1;
- (void)recordTransitUpdateError:(id)a0;
- (void)recordTransitUpdateRequest:(id)a0 withTimestamp:(double)a1;
- (void)recordTransitUpdateResponse:(id)a0;
- (void)recordVehicleSpeed:(double)a0 timestamp:(id)a1;
- (void)recordVirtualGarageVehicleState:(id)a0 isDifferentVehicle:(char)a1;
- (void)resetLocationsForSimulation;
- (void)saveTraceSynchronously;
- (void)setNavigationEndDate:(id)a0;
- (void)setNavigationStartDate:(id)a0;
- (void)startWritingTraceToPath:(id)a0 traceType:(long long)a1 withErrorHandler:(id /* block */)a2;
- (double)timeSinceRecordingBegan;

@end

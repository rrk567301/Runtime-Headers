@class _FEFocusUpdateThrottle, _FEFocusUpdateRequest, _FEFocusGroupHistory, _FEFocusMovementAction, NSString, _FEFocusCastingController, _FETreeLock, _FEFocusLinearMovementCache, _FEFocusEnvironmentPreferenceCache, NSArray, NSNumber, NSHashTable, NSTimer, _FEFocusMovementPerformer;
@protocol _FEFocusEnvironment, _FEFocusRegionContainer, _FEFocusSystemDelegate, _FEFocusItemContainer, _FEFocusBehavior, _FEFocusItem;

@interface _FEFocusSystem : NSObject <_FEFocusMovementPerformerDelegate, _FEFocusEnvironmentInternal, _FEFocusEnvironmentPrivate> {
    _FEFocusUpdateRequest *_pendingFocusUpdateRequest;
    id<_FEFocusItem> _deferredFocusUpdateTarget;
    id<_FEFocusEnvironment> _appearingFocusEnvironment;
    id<_FEFocusEnvironment> _disappearingFocusEnvironment;
    NSHashTable *_focusItemAncestorCache;
    NSTimer *_hasSeenFocusedItemDidExpireTimer;
    struct { unsigned char hasReceivedTeardownNotification : 1; unsigned char shouldIgnoreFocusUpdateIfNeeded : 1; unsigned char isPendingFocusRestoration : 1; unsigned char isPostponingUpdates : 1; unsigned char hasSeenFocusedItem : 1; unsigned char isInsideUpdateFocusIfNeeded : 1; unsigned char delegateRespondsToTopEnvironment : 1; unsigned char delegateRespondsToPreferredFocusEnvironments : 1; unsigned char delegateRespondsToShouldRestoreFocusInContext : 1; unsigned char delegateRespondsToWillUpdateFocusInContext : 1; unsigned char delegateRespondsToDidUpdateFocusInContext : 1; unsigned char delegateRespondsToDidFinishUpdatingFocusInContext : 1; unsigned char delegateRespondsToWillMessageOldFocusNodes : 1; unsigned char delegateRespondsToWillMessageNewFocusNodes : 1; unsigned char delegateRespondsToEnvironmentDidUpdateFocusInContext : 1; unsigned char delegateRespondsToDidCancelFocusUpdateInContext : 1; unsigned char delegateRespondsToFocusItemContainer : 1; unsigned char delegateRespondsToClippingRect : 1; unsigned char delegateRespondsToDidUpdateDeferralTarget : 1; unsigned char delegateRespondsToHandleFailedMovementRequest : 1; unsigned char delegateRespondsToShouldReverseLayoutDirectionForEnvironment : 1; unsigned char delegateRespondsToShouldReverseLinearWrappingForEnvironment : 1; unsigned char delegateRespondsToIsScrollingScrollableContainer : 1; } _flags;
}

@property (class, readonly, copy, nonatomic, getter=_allFocusSystems) NSArray *allFocusSystems;

@property (nonatomic) char waitingForFocusMovementAction;
@property (retain, nonatomic) _FEFocusMovementAction *pendingFocusMovementAction;
@property (readonly, nonatomic) _FEFocusUpdateThrottle *updateThrottle;
@property (readonly, nonatomic) _FETreeLock *treeLock;
@property (readonly, weak, nonatomic, getter=_previousFocusedItem) id<_FEFocusItem> previousFocusedItem;
@property (readonly, weak, nonatomic, getter=_hostFocusSystem) _FEFocusSystem *hostFocusSystem;
@property (retain, nonatomic, getter=_focusCastingController, setter=_setFocusCastingController:) _FEFocusCastingController *focusCastingController;
@property (retain, nonatomic, getter=_focusMovementCache, setter=_setFocusMovementCache:) _FEFocusLinearMovementCache *focusMovementCache;
@property (readonly, nonatomic) _FEFocusMovementPerformer *_movementPerformer;
@property (readonly, nonatomic, getter=_focusGroupHistory) _FEFocusGroupHistory *focusGroupHistory;
@property (retain, nonatomic) id<_FEFocusBehavior> behavior;
@property (nonatomic, getter=_isEnabled, setter=_setEnabled:) char enabled;
@property (retain, nonatomic, getter=_overrideFocusDeferralBehavior, setter=_setOverrideFocusDeferralBehavior:) NSNumber *overrideFocusDeferralBehavior;
@property (readonly, nonatomic, getter=_disappearingFocusEnvironment) id<_FEFocusEnvironment> disappearingFocusEnvironment;
@property (readonly, nonatomic) _FEFocusEnvironmentPreferenceCache *_deepestPreferredFocusableItemCacheForCurrentUpdate;
@property (readonly, weak, nonatomic) id<_FEFocusEnvironment> _deepestPreferredFocusEnvironment;
@property (weak, nonatomic) id<_FEFocusSystemDelegate> delegate;
@property (readonly, weak, nonatomic) id<_FEFocusItem> _focusedItemOrDeferralTarget;
@property (readonly, weak, nonatomic) id<_FEFocusItem> focusedItem;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic, getter=_focusMapContainer) id<_FEFocusRegionContainer> focusMapContainer;
@property (nonatomic) char _areChildrenFocused;
@property (readonly, nonatomic, getter=_isFocusDirectionFlippedHorizontally) char focusDirectionFlippedHorizontally;
@property (readonly, nonatomic, getter=_isEligibleForFocusInteraction) char eligibleForFocusInteraction;
@property (readonly, nonatomic, getter=_isEligibleForFocusOcclusion) char eligibleForFocusOcclusion;
@property (readonly, nonatomic) long long _focusPreferredMovementStyle;
@property (readonly, copy, nonatomic) NSArray *_focusLinearMovementSequence;
@property (readonly, weak, nonatomic) id<_FEFocusEnvironment> _parentFocusEnvironment;
@property (readonly, nonatomic) id<_FEFocusItemContainer> _focusItemContainer;
@property (readonly, copy, nonatomic) NSArray *_preferredFocusEnvironments;
@property (readonly, copy, nonatomic) NSString *_focusGroupIdentifier;

+ (id)_focusSystemForEnvironment:(id)a0;
+ (char)environment:(id)a0 containsEnvironment:(id)a1;
+ (id)focusSystemForEnvironment:(id)a0;

- (id)init;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_clippingRectInCoordinateSpace:(id)a0;
- (id)_contextForUpdateToEnvironment:(id)a0;
- (void)_focusEnvironmentWillDisappear:(id)a0;
- (id)_topEnvironment;
- (char)_updateFocusWithContext:(id)a0 report:(id)a1;
- (void)_clearDeferredFocusUpdateTarget;
- (long long)_effectiveFocusDeferralBehavior;
- (void)_startDeferringFocusIfSupported;
- (void)_buildFocusItemAncestorCacheIfNecessary;
- (void)_cancelPendingFocusRestoration;
- (void)_clearFocusItemAncestorCache;
- (id)_configureFocusDeferralIfNecessaryForContext:(id)a0 report:(id)a1;
- (id)_contextForUpdateToEnvironment:(id)a0 allowsOverridingPreferedFocusEnvironments:(char)a1 allowsDeferral:(char)a2;
- (char)_debug_isEnvironmentEligibleForFocusUpdate:(id)a0 debugReport:(id)a1;
- (void)_didFinishUpdatingFocusInContext:(id)a0;
- (void)_didUpdateFocusInContext:(id)a0;
- (void)_dropFocusAndStartDeferring:(char)a0 suppressUpdate:(char)a1;
- (void)_enableWithoutFocusRestoration;
- (void)_focusBehaviorDidChange;
- (void)_focusEnvironmentDidAppear:(id)a0;
- (void)_focusEnvironmentDidBecomeVisible:(id)a0;
- (void)_focusEnvironmentWillBecomeInvisible:(id)a0;
- (id)_focusItemForValidation;
- (char)_focusSystemIsValid;
- (char)_focusedItemIsContainedInEnvironment:(id)a0 includeSelf:(char)a1;
- (char)_handleFailedFocusMovementRequest:(id)a0 withPerformer:(id)a1;
- (void)_handleFocusMovementAction:(id)a0;
- (void)_hasSeenFocusedItemDidExpire;
- (char)_hasValidItemForCurrentDeferralState;
- (char)_isEnvironmentEligibleForFocusUpdate:(id)a0 fallbackToEnvironment:(id *)a1 debugReport:(id)a2;
- (char)_isEnvironmentLocked:(id)a0;
- (char)_isScrollingScrollableContainer:(id)a0 targetContentOffset:(struct CGPoint { double x0; double x1; } *)a1;
- (void)_lockEnvironment:(id)a0;
- (void)_notifyEnvironment:(id)a0 didUpdateFocusInContext:(id)a1;
- (char)_performDeferredFocusUpdateIfAvailable;
- (char)_performFocusMovement:(id)a0;
- (void)_performWithoutFocusUpdates:(id /* block */)a0;
- (char)_postsFocusUpdateNotifications;
- (char)_prefersDeferralForFocusUpdateInContext:(id)a0;
- (char)_prefersFocusContainment;
- (void)_prepareForTeardown;
- (void)_reevaluateLockedEnvironments;
- (void)_requestFocusUpdate:(id)a0;
- (void)_resetFocusDeferral;
- (void)_sendDidUpdateFocusNotificationsInContext:(id)a0;
- (void)_sendNotificationsForFocusUpdateInContext:(id)a0 usingBlock:(id /* block */)a1;
- (void)_sendWillUpdateFocusNotificationsInContext:(id)a0;
- (void)_setDeferredFocusUpdateTarget:(id)a0;
- (void)_setNeedsFocusRestoration;
- (char)_shouldRestoreFocusInContext:(id)a0;
- (char)_shouldReverseLayoutDirectionForEnvironment:(id)a0;
- (char)_shouldReverseLinearWrappingForEnvironment:(id)a0;
- (char)_shouldUpdateFocusInContext:(id)a0;
- (id)_simulatedNonDeferredProgrammaticFocusUpdateToEnvironment:(id)a0;
- (void)_tickHasSeenFocusedItemTimer:(char)a0;
- (void)_uiktest_disableFocusDeferral;
- (void)_uiktest_disableThrottle;
- (void)_uiktest_setPreviousFocusedItem:(id)a0;
- (char)_uiktest_updateFocusToItem:(id)a0;
- (void)_unlockEnvironment:(id)a0;
- (char)_updateFocusImmediatelyToEnvironment:(id)a0;
- (char)_updateFocusImmediatelyToEnvironment:(id)a0 startDeferringOnLostFocus:(char)a1 suppressLostFocusUpdate:(char)a2;
- (char)_updateFocusImmediatelyWithContext:(id)a0;
- (void)_updateFocusUpdateThrottle;
- (void)_updateWantsTreeLocking;
- (id)_validatedAppearingFocusEnvironmentRequest;
- (id)_validatedPendingFocusUpdateRequest;
- (id)initWithFocusBehavior:(id)a0;
- (id)initWithFocusBehavior:(id)a0 enabled:(char)a1;
- (void)invalidateFocusItemContainer:(id)a0;
- (id)preferredFocusEnvironments;
- (void)requestFocusUpdateToEnvironment:(id)a0;
- (void)setNeedsFocusUpdate;
- (void)updateFocusIfNeeded;
- (char)_requiresFocusedItemToBeInHierarchy;

@end

@class NSString, NSSet, NSXPCConnection, NSXPCInterface, NSDictionary, NSObject, NSNumber;
@protocol TUScreenSharingRemoteControlProviderDelegate, TUConversationManagerDataSourceDelegate, TUConversationReactionsControllerDataSourceDelegate, TUConversationMediaControllerDataSourceDelegate, OS_dispatch_queue, TUConversationManagerXPCServer;

@interface TUConversationManagerXPCClient : NSObject <TUConversationManagerXPCClient, TUConversationManagerDataSource>

@property (class, readonly, copy, nonatomic) NSSet *conversationManagerAllowedClasses;
@property (class, retain, nonatomic) id<TUConversationManagerXPCServer> asynchronousServer;
@property (class, retain, nonatomic) id<TUConversationManagerXPCServer> synchronousServer;
@property (class, readonly, nonatomic) NSXPCInterface *conversationManagerClientXPCInterface;
@property (class, readonly, nonatomic) NSXPCInterface *conversationManagerServerXPCInterface;

@property (readonly, nonatomic) struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } accessorLock;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (nonatomic) char hasRequestedInitialState;
@property (nonatomic) char hasInitialState;
@property (nonatomic) int shouldConnectToken;
@property (nonatomic) char shouldConnectToHost;
@property (copy, nonatomic) NSDictionary *conversationsByGroupUUID;
@property (copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers;
@property (copy, nonatomic) NSNumber *sharePlayAvailable;
@property (copy, nonatomic) NSNumber *screenSharingAvailable;
@property (weak, nonatomic) id<TUScreenSharingRemoteControlProviderDelegate> remoteControlProviderDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property (readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property (readonly, copy, nonatomic) NSSet *activatedConversationLinks;
@property (nonatomic) char autoSharePlayEnabled;
@property (readonly, nonatomic) char isSharePlayAvailable;
@property (readonly, nonatomic) char isScreenSharingAvailable;
@property (weak, nonatomic) id<TUConversationManagerDataSourceDelegate> delegate;
@property (weak, nonatomic) id<TUConversationMediaControllerDataSourceDelegate> mediaDelegate;
@property (weak, nonatomic) id<TUConversationReactionsControllerDataSourceDelegate> reactionsDelegate;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)invalidate;
- (void)_requestInitialStateIfNecessary;
- (void)activateLink:(id)a0 completionHandler:(id /* block */)a1;
- (void)requestScreenSharingPickerForConversationUUID:(id)a0 withContentStyle:(long long)a1;
- (oneway void)updateConversationsByGroupUUID:(id)a0;
- (void)_invokeCompletionHandler:(id /* block */)a0;
- (void)_requestInitialStateWithCompletionHandler:(id /* block */)a0;
- (void)activateConversationNoticeWithActionURL:(id)a0 bundleIdentifier:(id)a1;
- (oneway void)activeParticipant:(id)a0 addedHighlightToConversation:(id)a1 highlightIdentifier:(id)a2 oldHighlightIdentifier:(id)a3 isFirstAdd:(char)a4;
- (oneway void)activeParticipant:(id)a0 removedHighlightFromConversation:(id)a1 highlightIdentifier:(id)a2;
- (void)addCollaborationDictionary:(id)a0 forConversationWithUUID:(id)a1 fromMe:(char)a2;
- (void)addCollaborationIdentifier:(id)a0 collaborationURL:(id)a1 cloudKitAppBundleIDs:(id)a2 forConversationUUID:(id)a3;
- (void)addDisclosedCollaborationInitiator:(id)a0 toConversationUUID:(id)a1;
- (void)addInvitedMemberHandles:(id)a0 toConversationLink:(id)a1 completionHandler:(id /* block */)a2;
- (void)addRemoteMembers:(id)a0 otherInvitedHandles:(id)a1 toConversation:(id)a2;
- (void)addRemoteMembers:(id)a0 toConversation:(id)a1;
- (void)addScreenSharingType:(unsigned long long)a0 forConversation:(id)a1;
- (oneway void)addedCollaborationDictionary:(id)a0 forConversation:(id)a1;
- (void)approvePendingMember:(id)a0 forConversation:(id)a1;
- (id)asynchronousServerWithErrorHandler:(id /* block */)a0;
- (void)buzzMember:(id)a0 conversation:(id)a1;
- (void)cancelOrDenyScreenShareRequest:(id)a0 forConversation:(id)a1;
- (void)checkLinkValidity:(id)a0 completionHandler:(id /* block */)a1;
- (void)clientInvalidatedWithBundleIdentifier:(id)a0 completionHandler:(id /* block */)a1;
- (oneway void)conversation:(id)a0 addedMembersLocally:(id)a1;
- (oneway void)conversation:(id)a0 appLaunchState:(unsigned long long)a1 forActivitySession:(id)a2;
- (oneway void)conversation:(id)a0 buzzedMember:(id)a1;
- (oneway void)conversation:(id)a0 collaborationStateChanged:(long long)a1 highlightIdentifier:(id)a2;
- (oneway void)conversation:(id)a0 didChangeSceneAssociationForActivitySession:(id)a1;
- (oneway void)conversation:(id)a0 didChangeStateForActivitySession:(id)a1;
- (oneway void)conversation:(id)a0 participant:(id)a1 addedNotice:(id)a2;
- (oneway void)conversation:(id)a0 participant:(id)a1 didReact:(id)a2;
- (oneway void)conversation:(id)a0 participantDidStopReacting:(id)a1;
- (oneway void)conversation:(id)a0 receivedActivitySessionEvent:(id)a1;
- (oneway void)conversation:(id)a0 screenSharingChangedForParticipant:(id)a1;
- (void)conversationUpdateMessagesGroupPhoto:(id)a0;
- (oneway void)conversationUpdatedMessagesGroupPhoto:(id)a0;
- (void)createActivitySession:(id)a0 onConversation:(id)a1;
- (void)endActivitySession:(id)a0 onConversation:(id)a1;
- (void)fetchInitialStateWithCompletionHandler:(id /* block */)a0;
- (void)fetchUpcomingNoticeWithCompletionHandler:(id /* block */)a0;
- (void)generateLinkForConversation:(id)a0 completionHandler:(id /* block */)a1;
- (void)generateLinkWithInvitedMemberHandles:(id)a0 linkLifetimeScope:(long long)a1 completionHandler:(id /* block */)a2;
- (void)getActiveLinksWithCreatedOnly:(char)a0 completionHandler:(id /* block */)a1;
- (void)getInactiveLinkWithCompletionHandler:(id /* block */)a0;
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(id /* block */)a0;
- (void)getMessagesGroupDetailsForConversationUUID:(id)a0 completionHandler:(id /* block */)a1;
- (oneway void)getMessagesGroupDetailsForMessagesGroupUUID:(id)a0 completionHandler:(id /* block */)a1;
- (void)getNeedsDisclosureOfCollaborationInitiator:(id)a0 forConversationUUID:(id)a1 completionHandler:(id /* block */)a2;
- (void)handleServerDisconnect;
- (void)invalidateLink:(id)a0 deleteReason:(long long)a1 completionHandler:(id /* block */)a2;
- (void)joinConversationWithRequest:(id)a0;
- (void)kickMember:(id)a0 conversation:(id)a1;
- (void)launchApplicationForActivitySessionUUID:(id)a0 authorizedExternally:(char)a1 forceBackground:(char)a2 completionHandler:(id /* block */)a3;
- (void)leaveActivitySession:(id)a0 onConversation:(id)a1;
- (void)leaveConversationWithUUID:(id)a0;
- (void)linkSyncStateIncludeLinks:(char)a0 WithCompletion:(id /* block */)a1;
- (void)markCollaborationWithIdentifierOpened:(id)a0 forConversationUUID:(id)a1;
- (oneway void)mediaPrioritiesChangedForConversation:(id)a0;
- (oneway void)participantsGrantedRemoteControlChanged:(id)a0;
- (oneway void)participantsRequestingRemoteControlChanged:(id)a0;
- (void)prepareConversationWithUUID:(id)a0 withHandoffContext:(id)a1;
- (void)presentDismissalAlertForActivitySession:(id)a0 onConversation:(id)a1;
- (oneway void)presenterAllowsRequestingControlChanged:(char)a0;
- (oneway void)receivedTrackedPendingMember:(id)a0 forConversationLink:(id)a1;
- (void)refreshActiveConversations;
- (void)registerMessagesGroupUUIDForConversationUUID:(id)a0;
- (void)registerWithCompletionHandler:(id /* block */)a0;
- (void)rejectPendingMember:(id)a0 forConversation:(id)a1;
- (void)relinquishControlWithCompletionHandler:(id /* block */)a0;
- (oneway void)remoteControlClientSideCursorUpdated:(char)a0;
- (oneway void)remoteControlDataReceivedFromPresenter:(id)a0;
- (oneway void)remoteControlProviderInvalidated;
- (oneway void)remoteControlRevokedWithError:(id)a0;
- (oneway void)remoteControlStateChanged:(long long)a0;
- (oneway void)remoteScreenShareAttributesChanged:(id)a0 isLocallySharing:(char)a1;
- (oneway void)remoteScreenShareEndedWithReason:(id)a0;
- (void)removeCollaborationIdentifier:(id)a0 forConversationUUID:(id)a1;
- (void)removeConversationNoticeWithUUID:(id)a0;
- (void)renewLink:(id)a0 expirationDate:(id)a1 reason:(unsigned long long)a2 completionHandler:(id /* block */)a3;
- (void)requestControlWithCompletionHandler:(id /* block */)a0;
- (void)requestParticipantToShareScreen:(id)a0 forConversation:(id)a1;
- (void)scheduleConversationLinkCheckInInitial:(char)a0;
- (oneway void)screenSharingAvailableChanged:(char)a0;
- (void)sendDataToPresenter:(id)a0 completionHandler:(id /* block */)a1;
- (void)setActivityAllowsRequestingControl:(char)a0 completionHandler:(id /* block */)a1;
- (void)setActivityAuthorization:(char)a0 forBundleIdentifier:(id)a1;
- (void)setControlGranted:(char)a0 forParticipants:(id)a1 completionHandler:(id /* block */)a2;
- (void)setDownlinkMuted:(char)a0 forRemoteParticipantsInConversation:(id)a1;
- (void)setGridDisplayMode:(unsigned long long)a0 conversation:(id)a1;
- (void)setIgnoreLetMeInRequests:(char)a0 forConversation:(id)a1;
- (void)setLinkName:(id)a0 forConversationLink:(id)a1 completionHandler:(id /* block */)a2;
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)a0 forConversationUUID:(id)a1;
- (void)setPresenterAllowsRequestingControl:(char)a0 completionHandler:(id /* block */)a1;
- (void)setProviderDelegate:(id)a0 completionHandler:(id /* block */)a1;
- (void)setScreenEnabled:(char)a0 withScreenShareAttributes:(id)a1 forConversationWithUUID:(id)a2;
- (void)setSharePlayHandedOff:(char)a0 onConversationWithUUID:(id)a1;
- (void)setSupportsMessagesGroupProviding:(char)a0;
- (void)setUsingAirplay:(char)a0 onActivitySession:(id)a1 onConversationWithUUID:(id)a2;
- (oneway void)sharePlayAvailableChanged:(char)a0;
- (void)startTrackingCollaborationWithIdentifier:(id)a0 collaborationURL:(id)a1 cloudKitAppBundleIDs:(id)a2 forConversationUUID:(id)a3 completionHandler:(id /* block */)a4;
- (id)synchronousServerWithErrorHandler:(id /* block */)a0;
- (oneway void)updateActivatedConversationLinks:(id)a0;
- (oneway void)updateActivityAuthorizedBundleIdentifierState:(id)a0;
- (void)updateConversationWithUUID:(id)a0 participantPresentationContexts:(id)a1;
- (oneway void)updateIncomingPendingConversationsByGroupUUID:(id)a0;
- (void)updateLocalParticipantToAVLessWithPresentationMode:(unsigned long long)a0 forConversationUUID:(id)a1;
- (void)updateMessagesGroupName:(id)a0 onConversation:(id)a1;

@end

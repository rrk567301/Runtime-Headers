@class NSArray, NSString, NSSet, TUCTCapabilityInfo;

@interface TUCallCapabilities : NSObject

@property (class, readonly, nonatomic) char areRelayCallingFeaturesEnabled;
@property (class, readonly, nonatomic) char supportsPrimaryCalling;
@property (class, readonly, nonatomic) char supportsBasebandCalling;
@property (class, readonly, nonatomic) int telephonyCallSupport;
@property (class, readonly, nonatomic) int faceTimeAudioCallSupport;
@property (class, readonly, nonatomic) int faceTimeVideoCallSupport;
@property (class, readonly, nonatomic) char supportsDisplayingTelephonyCalls;
@property (class, readonly, nonatomic) char supportsDisplayingFaceTimeAudioCalls;
@property (class, readonly, nonatomic) char supportsDisplayingFaceTimeVideoCalls;
@property (class, readonly, nonatomic, getter=isDirectTelephonyCallingCurrentlyAvailable) char directTelephonyCallingCurrentlyAvailable;
@property (class, readonly, nonatomic, getter=isDirectFaceTimeAudioCallingCurrentlyAvailable) char directFaceTimeAudioCallingCurrentlyAvailable;
@property (class, readonly, nonatomic, getter=isDirectFaceTimeVideoCallingCurrentlyAvailable) char directFaceTimeVideoCallingCurrentlyAvailable;
@property (class, readonly, nonatomic) char accountsMatchForSecondaryCalling;
@property (class, readonly, nonatomic) char accountsSupportSecondaryCalling;
@property (class, readonly, nonatomic) NSArray *cloudCallingDevices;
@property (class, readonly, nonatomic) char supportsRelayCalling;
@property (class, nonatomic, getter=isRelayCallingEnabled) char relayCallingEnabled;
@property (class, readonly, nonatomic) char supportsTelephonyRelayCalling;
@property (class, readonly, nonatomic) char supportsFaceTimeAudioRelayCalling;
@property (class, readonly, nonatomic) char supportsFaceTimeVideoRelayCalling;
@property (class, readonly, nonatomic) char supportsRelayingToOtherDevices;
@property (class, readonly, nonatomic) int relayCallingAvailability;
@property (class, readonly, nonatomic) NSString *outgoingRelayCallerID;
@property (class, readonly, copy, nonatomic) NSSet *senderIdentityCapabilities;
@property (class, readonly, nonatomic) char supportsSimultaneousVoiceAndData;
@property (class, readonly, nonatomic) char areCTCapabilitiesValid;
@property (class, readonly, nonatomic, getter=isCSCallingCurrentlyAvailable) char csCallingCurrentlyAvailable;
@property (class, readonly, nonatomic) char supportsWiFiCalling;
@property (class, readonly, nonatomic, getter=isWiFiCallingEnabled) char wiFiCallingEnabled;
@property (class, readonly, nonatomic, getter=isWiFiCallingRoamingEnabled) char wiFiCallingRoamingEnabled;
@property (class, readonly, nonatomic) TUCTCapabilityInfo *wiFiCallingCapabilityInfo;
@property (class, readonly, nonatomic, getter=isWiFiCallingCurrentlyAvailable) char wiFiCallingCurrentlyAvailable;
@property (class, readonly, nonatomic) char supportsWiFiEmergencyCalling;
@property (class, readonly, nonatomic) char supportsVoLTECalling;
@property (class, readonly, nonatomic, getter=isVoLTECallingEnabled) char voLTECallingEnabled;
@property (class, readonly, nonatomic) TUCTCapabilityInfo *voLTECallingCapabilityInfo;
@property (class, readonly, nonatomic, getter=isVoLTECallingCurrentlyAvailable) char voLTECallingCurrentlyAvailable;
@property (class, readonly, nonatomic) char supportsThumperCalling;
@property (class, readonly, nonatomic, getter=isThumperCallingAllowedForCurrentDevice) char thumperCallingAllowedForCurrentDevice;
@property (class, readonly, nonatomic, getter=isThumperCallingEnabled) char thumperCallingEnabled;
@property (class, readonly, nonatomic) TUCTCapabilityInfo *thumperCallingCapabilityInfo;
@property (class, readonly, nonatomic, getter=isThumperCallingCurrentlyAvailable) char thumperCallingCurrentlyAvailable;
@property (class, readonly, nonatomic) char supportsThumperCallingOverCellularData;
@property (class, readonly, nonatomic, getter=isThumperCallingAllowedOnDefaultPairedSecondaryDevice) char thumperCallingAllowedOnDefaultPairedSecondaryDevice;
@property (class, readonly, nonatomic, getter=isEmergencyCallbackModeEnabled) char emergencyCallbackModeEnabled;
@property (class, readonly, nonatomic, getter=isEmergencyCallbackPossible) char emergencyCallbackPossible;
@property (class, readonly, nonatomic) char supportsTelephonyCalls;
@property (class, readonly, nonatomic) char supportsFaceTimeAudioCalls;
@property (class, readonly, nonatomic) char supportsFaceTimeVideoCalls;
@property (class, readonly, nonatomic) char canAttemptTelephonyCallsWithoutCellularConnection;
@property (class, readonly, nonatomic) char canAttemptEmergencyCallsWithoutCellularConnection;

+ (id)debugDescription;
+ (id)client;
+ (void)removeDelegate:(id)a0;
+ (void)addDelegate:(id)a0 queue:(id)a1;
+ (void)_sendNotificationsAndCallbacksAfterRunningBlock:(id /* block */)a0;
+ (id)_senderIdentityCapabilitiesByUUID;
+ (char)canAttemptEmergencyCallsWithoutCellularConnectionWithUUID:(id)a0;
+ (char)canAttemptTelephonyCallsWithoutCellularConnectionWithSenderIdentityCapabilities:(id)a0;
+ (void)cancelPinRequestFromPrimaryDevice;
+ (void)endEmergencyCallbackMode;
+ (void)initializeCachedValues;
+ (void)invalidateAndRefreshThumperCallingProvisioningURL;
+ (void)invalidateAndRefreshWiFiCallingProvisioningURL;
+ (char)isFaceTimeAudioAvailable;
+ (char)isFaceTimeVideoAvailable;
+ (char)isRelayCallingEnabledForDeviceWithID:(id)a0;
+ (char)isSimultaneousVoiceAndDataSupportedForSIMWithUUID:(id)a0;
+ (char)isThumperCallingAllowedOnSecondaryDeviceWithID:(id)a0;
+ (void)requestPinFromPrimaryDevice;
+ (id)senderIdentityCapabilitiesWithUUID:(id)a0;
+ (void)setRelayCallingEnabled:(char)a0 forDeviceWithID:(id)a1;
+ (void)setThumperCallingAllowed:(char)a0 onSecondaryDeviceWithID:(id)a1;
+ (void)setThumperCallingAllowed:(char)a0 onSecondaryDeviceWithID:(id)a1 forSenderIdentityWithUUID:(id)a2;
+ (void)setThumperCallingAllowedOnDefaultPairedSecondaryDevice:(char)a0;
+ (void)setThumperCallingEnabled:(char)a0;
+ (void)setVoLTECallingEnabled:(char)a0;
+ (void)setWiFiCallingEnabled:(char)a0;
+ (void)setWiFiCallingRoamingEnabled:(char)a0;
+ (char)supportsHostingFaceTimeAudioCalls;
+ (char)supportsHostingFaceTimeVideoCalls;
+ (char)supportsHostingTelephonyCalls;

@end

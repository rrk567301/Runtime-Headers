@class TVPProgressiveJumpingScrubber, AVQueuePlayer, TVPPlayerReporter, TVPTimeRange, NSMutableArray, NSString, NSMutableSet, AVPlayerInterstitialEventMonitor, TVPMediaItemLoader, TVPChapter, TVPPlayerItem, TVPExternalImagePlayer, NSMutableDictionary, TVPPlaylist, NSArray, TVPInterstitialCollection, TVPInterstitial, AVPlayer, NSObject, TVPPlayerBookmarkMonitor, TVPChapterCollection, TVPDateRange, AVPlayerItem, TVPAudioOption, TVPSubtitleOption, TVPStateMachine, NSDate, TVPPlaybackState, NSNumber, NSHashTable;
@protocol TVPASyncPlaybackDelegate, TVPMediaItem, OS_dispatch_queue, TVPPlaybackDelegate;

@interface TVPPlayer : NSObject <AVPlayerPlaybackCoordinatorDelegate, AVPlayerItemDelegate, AVPlayerItemIntegratedTimelineSeekDelegate, AVPlayerItemMetadataCollectorPushDelegate, TVPAVFPlayback>

@property (nonatomic) char invalidated;
@property (retain, nonatomic) TVPStateMachine *stateMachine;
@property (retain, nonatomic) TVPPlaylist *playlistInternal;
@property (retain, nonatomic) TVPPlaybackState *postLoadingState;
@property (retain, nonatomic) TVPPlaybackState *postAVKitScanningState;
@property (retain, nonatomic) TVPMediaItemLoader *currentMediaItemLoader;
@property (retain, nonatomic) NSMutableDictionary *elapsedTimeObserverBlocks;
@property (retain, nonatomic) NSMutableDictionary *boundaryTimeObserverInfos;
@property (retain, nonatomic) id periodicTimeObserverToken;
@property (retain, nonatomic) id timeJumpPeriodicObserverToken;
@property (retain, nonatomic) id highFrequencyTimeObserverToken;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } startTime;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } startingSeekPrecision;
@property (retain, nonatomic) NSDate *startDate;
@property (retain, nonatomic) TVPPlayerBookmarkMonitor *bookmarkMonitor;
@property (retain, nonatomic) TVPPlayerReporter *playerReporter;
@property (nonatomic) long long numOutstandingSeeks;
@property (retain, nonatomic) NSHashTable *videoViewWeakReferences;
@property (retain, nonatomic) NSMutableSet *mediaItemLoaders;
@property (nonatomic) char handleRemoteCommandsWithoutUpdatingMediaRemote;
@property (nonatomic) char pausesOnRouteChange;
@property (nonatomic) char updatesBookmarks;
@property (nonatomic) char sendsPlayerReports;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } lastTimeSentToAVKitImageHandler;
@property (nonatomic) char pausesOnHDCPProtectionDown;
@property (nonatomic) double preferredForwardBufferDuration;
@property (nonatomic) struct CGSize { double width; double height; } preferredMaximumResolution;
@property (nonatomic) struct CGSize { double width; double height; } preferredMaximumResolutionForExpensiveNetworks;
@property (nonatomic) char prefersSDRVideo;
@property (nonatomic) char limitsBandwidthForCellularAccess;
@property (nonatomic) char allowsCellularUsage;
@property (nonatomic) char allowsConstrainedNetworkUsage;
@property (nonatomic) long long currentMediaItemVideoRange;
@property (nonatomic) long long currentMediaItemAudioFormat;
@property (nonatomic) long long currentMediaItemAudioChannels;
@property (copy, nonatomic) NSArray *pendingSelectedMediaArray;
@property (nonatomic) char wasMutedPriorToScreenRecording;
@property (nonatomic) char allowsExternalPlayback;
@property (retain, nonatomic) NSString *preferredAudioLanguageCode;
@property (nonatomic) char prefersAudioDescriptions;
@property (retain, nonatomic) NSString *reportingCategory;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *avAssetTrackInspectionQueue;
@property (retain, nonatomic) NSMutableDictionary *reportingValues;
@property (nonatomic) char loadingInitialItemInPlaylist;
@property (retain, nonatomic) TVPPlayerItem *currentPlayerItem;
@property (nonatomic) char modifyingAVPlayerRate;
@property (nonatomic) char modifyingAVPlayerQueue;
@property (nonatomic) char playerItemChangeIsHappening;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } timeBeingSeekedTo;
@property (retain, nonatomic) NSDate *dateBeingSeekedTo;
@property (retain, nonatomic) NSDate *playbackDateAtStartOfSeek;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } timeAtStartOfSeek;
@property (nonatomic) long long currentDirectionOfPlaylistChange;
@property (retain, nonatomic) id chapterBoundaryTimeObserverToken;
@property (retain, nonatomic) TVPExternalImagePlayer *externalImagePlayer;
@property (retain, nonatomic) TVPInterstitialCollection *currentInterstitialCollection;
@property (retain, nonatomic) id interstitialBoundaryTimeObserverToken;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } cachedElapsedCMTime;
@property (retain, nonatomic) TVPProgressiveJumpingScrubber *progressiveJumpingScrubber;
@property (retain, nonatomic) NSString *mediaItemChangeReason;
@property (retain, nonatomic) NSMutableArray *asyncDelegateOperations;
@property (retain, nonatomic) NSNumber *temporarySubtitleOverrideType;
@property (retain, nonatomic) TVPAudioOption *cachedSelectedAudioOption;
@property (retain, nonatomic) AVQueuePlayer *earlyAVQueuePlayer;
@property (retain, nonatomic) AVPlayerInterstitialEventMonitor *interstitialEventMonitor;
@property (nonatomic) char isPlayingInterstitial;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } cachedDuration;
@property (retain, nonatomic) NSArray *cachedLoadedTimeRanges;
@property (retain, nonatomic) NSArray *cachedSeekableTimeRanges;
@property (nonatomic) char currentMediaItemInitialLoadingComplete;
@property (nonatomic) char currentMediaItemHasVideoContent;
@property (nonatomic) char currentMediaItemIsStreaming;
@property (nonatomic) struct CGSize { double width; double height; } currentMediaItemPresentationSize;
@property (nonatomic) char currentMediaItemHasDates;
@property (retain, nonatomic) AVQueuePlayer *AVQueuePlayer;
@property (retain, nonatomic) TVPPlayerItem *playerItemFromCacheManager;
@property (nonatomic) char outputObscuredDueToInsufficientExternalProtection;
@property (nonatomic) double startPosition;
@property (retain, nonatomic) NSArray *chapterCollections;
@property (retain, nonatomic) TVPChapter *currentChapter;
@property (retain, nonatomic) TVPInterstitial *currentInterstitial;
@property (nonatomic) struct CGSize { double width; double height; } iFramePrefetchMaxSize;
@property (nonatomic) char asyncDelegateInProgress;
@property (nonatomic) char usesLegacyDelegateBehavior;
@property (nonatomic) char isLive;
@property (copy, nonatomic) id /* block */ highFrequencyElapsedTimeObserverBlock;
@property (nonatomic) char createsPlayerItemButDoesNotEnqueue;
@property (retain, nonatomic) AVPlayerItem *unqueuedPlayerItem;
@property (copy, nonatomic) id /* block */ AVKitExternalImageScanningUpdateBlock;
@property (nonatomic) char mediaRemoteUpdatingEnabled;
@property (nonatomic) char remainLoadingWhenSeekCompletes;
@property (nonatomic) char initialMediaItemHasCompletedInitialLoading;
@property (nonatomic) char haveEverEnqueuedPlayerItem;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) AVPlayer *avPlayer;
@property (readonly, nonatomic) NSString *name;
@property (weak, nonatomic) id<TVPPlaybackDelegate> delegate;
@property (weak, nonatomic) id<TVPASyncPlaybackDelegate> asyncDelegate;
@property (retain, nonatomic) TVPPlaylist *playlist;
@property (retain, nonatomic) NSObject<TVPMediaItem> *currentMediaItem;
@property (readonly, nonatomic) char currentMediaItemPreparedForLoading;
@property (readonly, nonatomic) TVPPlaybackState *state;
@property (nonatomic) long long errorBehavior;
@property (nonatomic) char interactive;
@property (readonly, nonatomic) double rate;
@property (nonatomic) double rateUsedForPlayback;
@property (nonatomic) char waitsAfterPreparingMediaItems;
@property (readonly, nonatomic) double elapsedTime;
@property (copy, nonatomic) NSDate *playbackDate;
@property (readonly, nonatomic) double duration;
@property (nonatomic) char muted;
@property (nonatomic) float volume;
@property (retain, nonatomic) TVPChapterCollection *currentChapterCollection;
@property (readonly, nonatomic) TVPTimeRange *bufferedTimeRange;
@property (readonly, nonatomic) TVPTimeRange *seekableTimeRange;
@property (readonly, nonatomic) TVPDateRange *seekableDateRange;
@property (readonly, nonatomic) double forwardPlaybackEndTime;
@property (readonly, nonatomic) double reversePlaybackEndTime;
@property (nonatomic) long long mediaItemEndAction;
@property (readonly, nonatomic) NSArray *audioOptions;
@property (retain, nonatomic) TVPAudioOption *selectedAudioOption;
@property (readonly, nonatomic) NSArray *subtitleOptions;
@property (retain, nonatomic) TVPSubtitleOption *selectedSubtitleOption;
@property (nonatomic) double maximumBitRate;
@property (nonatomic) char preventsSleepDuringVideoPlayback;
@property (nonatomic) char updatesMediaRemoteInfoAutomatically;
@property (nonatomic) char respondsToRemoteControlEvents;
@property (nonatomic) char limitReadAhead;

+ (void)initialize;
+ (char)automaticallyNotifiesObserversForKey:(id)a0;
+ (id)savedPreferredAudioLanguageCode;
+ (long long)_audioFormatForFormatDescription:(struct opaqueCMFormatDescription { } *)a0;
+ (id)_audioSelectionCriteriaForPreferredAudioLanguageCodes:(id)a0 prefersAudioDescriptions:(char)a1;
+ (void)_configureAutoSubtitlesForPlayer:(id)a0;
+ (void)_initConstants;
+ (id)_newAVQueuePlayer;
+ (void)_playerDidBecomeInactive:(id)a0;
+ (void)_playerWillBecomeActive:(id)a0;
+ (id)_stringForAudioFormat:(long long)a0;
+ (void)_updateAudioSelectionCriteriaForAVQueuePlayer:(id)a0 isInterstitialPlayer:(char)a1 preferredAudioLanguageCodes:(id)a2 prefersAudioDescriptions:(char)a3;
+ (float)decreasePlaybackRateFromRate:(float)a0 rateUsedForPlayback:(float)a1;
+ (float)increasePlaybackRateFromRate:(float)a0 rateUsedForPlayback:(float)a1;
+ (void)removeTemporaryDownloadDirectory;
+ (void)setShouldDeactivateAVAudioSession:(char)a0;
+ (char)shouldDeactivateAVAudioSession;
+ (long long)tvpVideoRangeForVideoDynamicRange:(int)a0;
+ (void)updateSupplementaryAvailableAudioLanguageCodes:(id)a0;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (id)initWithName:(id)a0;
- (void)invalidate;
- (void)pause;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)stop;
- (void)play;
- (id)accessLog;
- (id)errorLog;
- (long long)externalPlaybackType;
- (void)integratedTimeline:(id)a0 willSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 currentTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a2;
- (void)metadataCollector:(id)a0 didCollectDateRangeMetadataGroups:(id)a1 indexesOfNewGroups:(id)a2 indexesOfModifiedGroups:(id)a3;
- (id)playbackCoordinator:(id)a0 identifierForPlayerItem:(id)a1;
- (char)playerItem:(id)a0 shouldSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)a1 toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)a2 toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)a3;
- (void)setReportingValueWithNumber:(id)a0 forKey:(id)a1;
- (void)setReportingValueWithString:(id)a0 forKey:(id)a1;
- (id)timedMetadata;
- (char)seeking;
- (void)setElapsedTime:(double)a0;
- (void)_registerStateMachineHandlers;
- (void)togglePlayPause;
- (void)scanWithRate:(double)a0;
- (id)AVQueuePlayerCreateIfNecessary:(char)a0;
- (char)_beingUsedForIFrameOnlyPlayback;
- (char)_currentPlayerItemContainsDates;
- (void)_enqueueAsyncDelegateOperation:(id)a0;
- (void)_screenRecordingStateDidChange:(id)a0;
- (long long)currentScanMode;
- (id)_bitRateString:(double)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })_clampedSceneTimeForPlayerTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)_displayConfigurationDidChange:(id)a0;
- (void)_notifyListenersOfElapsedTimeChange:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 playbackDate:(id)a1 dueToTimeJump:(char)a2;
- (void)_setSelectedSubtitleOption:(id)a0 userOverridesSystemSubtitleSettings:(char)a1;
- (long long)loadingSubstate;
- (void)removeWeakReferenceToVideoView:(id)a0;
- (id)_activePlayer;
- (id)_activePlayerItem;
- (long long)_activePlayerTimeControlStatus;
- (void)_addBoundaryTimeObserversToAVQueuePlayer:(id)a0;
- (void)_addBoundaryTimeObserversToIntegratedTimeline:(id)a0;
- (void)_addHighFrequencyTimeObserverIfNecessary;
- (void)_addObserversForMediaItem:(id)a0;
- (void)_addObserversForMediaItemLoader:(id)a0;
- (void)_addObserversForPlayerItem:(id)a0;
- (void)_addObserversForPlaylist:(id)a0;
- (void)_addObserversToAVQueuePlayer:(id)a0;
- (void)_addObserversToInterstitialEventMonitor:(id)a0;
- (void)_addPeriodicTimeObserverToAVQueuePlayer:(id)a0;
- (void)_addPeriodicTimeObserverToIntegratedTimeline:(id)a0;
- (id)_assetTracksOfType:(id)a0 fromTracks:(id)a1;
- (void)_audioRouteChanged:(id)a0;
- (void)_avPlayer:(id)a0 timeControlStatusDidChangeTo:(long long)a1 oldStatusNum:(id)a2;
- (void)_avPlayerRateDidChange:(id)a0;
- (void)_avPlayerRateDidChangeTo:(float)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })_clampInfiniteTimeToSeekableRange:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })_clampedElapsedTimeForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)_configureSoundCheckForPlayerItem:(id)a0 tracks:(id)a1;
- (id)_currentDateFromPlayerItem:(id)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })_currentMediaItemForwardPlaybackEndTime;
- (void)_currentMediaItemMetadataDidChange:(id)a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })_currentMediaItemReversePlaybackEndTime;
- (void)_currentPlayerItemAccessLogDidChange:(id)a0;
- (void)_currentPlayerItemBufferEmptyDidChangeTo:(char)a0;
- (void)_currentPlayerItemBufferFullDidChangeTo:(char)a0;
- (char)_currentPlayerItemCanScanAtRate:(double)a0;
- (void)_currentPlayerItemDidChangeTo:(id)a0;
- (void)_currentPlayerItemDidFailToPlayToEnd:(id)a0;
- (void)_currentPlayerItemDidHitBeginningOrEnd:(id)a0;
- (void)_currentPlayerItemDidStall:(id)a0;
- (void)_currentPlayerItemErrorLogDidChange:(id)a0;
- (void)_currentPlayerItemHasVideoDidChangeTo:(char)a0;
- (void)_currentPlayerItemLikelyToKeepUpDidChangeTo:(char)a0;
- (void)_currentPlayerItemLoadedTimeRangesDidChangeTo:(id)a0;
- (void)_currentPlayerItemPresentationSizeDidChangeTo:(struct CGSize { double x0; double x1; })a0;
- (void)_currentPlayerItemReachedTimeToPauseBuffering:(id)a0;
- (void)_currentPlayerItemReachedTimeToPausePlayback:(id)a0;
- (void)_currentPlayerItemSeekableTimeRangesDidChangeTo:(id)a0;
- (void)_currentPlayerItemStatusDidChangeTo:(long long)a0 from:(long long)a1;
- (void)_currentPlayerItemTimedMetadataDidChange;
- (void)_currentPlayerItemTracksDidChangeTo:(id)a0 from:(id)a1;
- (void)_currentPlayerItemWillChange;
- (void)_currentTimeDidChangeTo:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (id)_descriptionForVideoRange:(long long)a0;
- (id)_descriptionForVideoResolutionClass:(long long)a0;
- (void)_durationDidChangeTo:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 isChangeFromTimeline:(char)a1;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })_estimatedCMTimeForPlaybackDate:(id)a0 referenceTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 referenceDate:(id)a2;
- (id)_estimatedPlaybackDateForCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)_externalPlaybackActiveDidChange;
- (char)_getStringForTitleLabel:(id *)a0 subtitleLabel:(id *)a1 forMediaItem:(id)a2;
- (char)_integratedTimelineEnabled;
- (void)_integratedTimelineSnapshotsOutOfSync:(id)a0;
- (char)_interstitialInProgress;
- (char)_isNetworkAvailable;
- (char)_isScreenBeingRecorded;
- (void)_logAccessLogEvents;
- (void)_logExternalPlaybackType;
- (void)_mediaItemLoader:(id)a0 stateDidChangeTo:(id)a1;
- (void)_notifyOfBoundaryCrossingBetweenPreviousTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 updatedTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)_notifyOfMediaSelectionOptionChanges;
- (void)_outputObscuredDidChangeTo:(char)a0;
- (void)_playerItemMediaSelectionDidChange:(id)a0;
- (void)_playerMutedDidChange;
- (void)_playlistCurrentMediaItemDidChangeWithContext:(id)a0;
- (void)_playlistCurrentMediaItemWillChangeWithContext:(id)a0;
- (void)_playlistEndActionDidChange;
- (void)_playlistNextMediaItemDidChangeWithContext:(id)a0;
- (void)_populateCurrentPlayerItemWithUpNextMetadata;
- (void)_postCurrentMediaItemDidChangeNotificationWithDirection:(id)a0 reason:(id)a1 didHitBeginningOfPlaylist:(char)a2 didHitEndOfPlaylist:(char)a3;
- (void)_postCurrentMediaItemWillChangeNotificationWithDirection:(id)a0 reason:(id)a1 didHitBeginningOfPlaylist:(char)a2 didHitEndOfPlaylist:(char)a3;
- (void)_preferVideoDescriptionsSettingDidChange;
- (void)_processNextAsyncDelegateOperation;
- (void)_removeBoundaryTimeObserversFromAVQueuePlayer:(id)a0;
- (void)_removeBoundaryTimeObserversFromIntegratedTimeline:(id)a0;
- (void)_removeHighFrequencyTimeObserverIfNecessary;
- (void)_removeObserversForMediaItem:(id)a0;
- (void)_removeObserversForMediaItemLoader:(id)a0;
- (void)_removeObserversForPlayerItem:(id)a0;
- (void)_removeObserversForPlaylist:(id)a0;
- (void)_removeObserversFromAVQueuePlayer:(id)a0;
- (void)_removeObserversFromInterstitialEventMonitor:(id)a0;
- (void)_removePeriodicTimeObserverFromAVQueuePlayer:(id)a0;
- (void)_removePeriodicTimeObserverFromIntegratedTimeline:(id)a0;
- (void)_resetAndReselectAudioOptions;
- (void)_selectMediaArray:(id)a0 withItem:(id)a1;
- (void)_setScrubPlayerItem:(id)a0 onPlayerItem:(id)a1;
- (void)_setState:(id)a0 updatedRate:(double)a1 notifyListeners:(char)a2;
- (void)_setState:(id)a0 updatedRate:(double)a1 reason:(id)a2 notifyListeners:(char)a3;
- (id)_soundCheckNormalizationForMediaItem:(id)a0;
- (id)_statesThatReturnAVPlayerTime;
- (id)_statesThatReturnSeekTime;
- (id)_statesThatReturnStartTime;
- (void)_subtitleSettingsDidChange;
- (void)_updateAVPlayerActionAtItemEnd;
- (void)_updateCurrentMediaItemAudioInfoForPlayerItem:(id)a0 tracks:(id)a1;
- (void)_updateCurrentMediaItemVideoRangeForTracks:(id)a0;
- (void)_updateDisplaysForAVPlayer:(id)a0;
- (void)_updateIsLiveForElapsedTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)_updateMediaRemoteManager;
- (void)_updateSelectedSubtitleForFilteredOptions:(id)a0;
- (void)_updateVideoViewsWithAVQueuePlayer:(id)a0;
- (int)_videoTrackIDFromTracks:(id)a0;
- (id)addBoundaryTimeObserverForDates:(id)a0 withHandler:(id /* block */)a1;
- (id)addBoundaryTimeObserverForTimes:(id)a0 withHandler:(id /* block */)a1;
- (id)addElapsedTimeObserver:(id /* block */)a0;
- (void)addWeakReferenceToVideoView:(id)a0;
- (void)avKitDidFinishScanning;
- (void)avKitSeekDidComplete;
- (id)beginCoordinatedPlaybackSuspensionWithReason:(id)a0;
- (double)cachedElapsedTime;
- (void)changeMediaInDirection:(long long)a0;
- (void)changeMediaInDirection:(long long)a0 reason:(id)a1;
- (void)changeMediaInDirection:(long long)a0 reason:(id)a1 ignoreDelegate:(char)a2;
- (void)changeToMediaAtIndex:(unsigned long long)a0 reason:(id)a1;
- (void)changeToMediaAtIndex:(unsigned long long)a0 reason:(id)a1 ignoreDelegate:(char)a2;
- (void)continueLoadingCurrentItem;
- (char)currentMediaItemSupportsScrubbingUsingPlayer;
- (void)decreasePlaybackRate;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })durationCMTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })elapsedCMTime;
- (void)endCoordinatedPlaybackSuspension:(id)a0;
- (void)increasePlaybackRate;
- (void)pauseIgnoringDelegate:(char)a0;
- (void)pauseWithAVKitCompletion:(id /* block */)a0;
- (void)pauseWithVolumeRampDuration:(double)a0;
- (void)playIgnoringDelegate:(char)a0;
- (void)playWithAVKitCompletion:(id /* block */)a0;
- (void)playWithVolumeRampDuration:(double)a0;
- (id)playbackErrorFromError:(id)a0 forMediaItem:(id)a1;
- (void)playerDidHitBeginningOrEnd;
- (void)removeBoundaryTimeObserverWithToken:(id)a0;
- (void)removeElapsedTimeObserverWithToken:(id)a0;
- (void)restartPlaybackWithState:(id)a0;
- (void)scanWithRate:(double)a0 withAVKitCompletion:(id /* block */)a1;
- (void)selectMediaArray:(id)a0;
- (id)selectedSubtitleOptionWithNoOffOrAutoOption;
- (void)setElapsedTime:(double)a0 orPlaybackDate:(id)a1 withAVKitCompletion:(id /* block */)a2;
- (void)setElapsedTime:(double)a0 precise:(char)a1;
- (void)setElapsedTime:(double)a0 seekPrecision:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1;
- (void)setElapsedTime:(double)a0 seekPrecision:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 ignoreDelegate:(char)a2;
- (void)setElapsedTime:(double)a0 seekPrecision:(struct { long long x0; int x1; unsigned int x2; long long x3; })a1 ignoreDelegate:(char)a2 withAVKitCompletion:(id /* block */)a3;
- (void)setPlaybackDate:(id)a0 withAVKitCompletion:(id /* block */)a1;
- (void)setPlaybackHUDString:(id)a0;
- (void)setSelectedSubtitleOption:(id)a0 setGlobalPreference:(char)a1;
- (void)skipToNextChapterInDirection:(long long)a0;
- (void)stopWithVolumeRampDuration:(double)a0;
- (void)updateAudioSelectionCriteria;
- (void)updateSubtitleOptions;

@end

@class NSArray, NSBundle, VFXMTLResourceManager, NSURL, NSObject;

@interface VFX.VFXScene : NSObject {
    void /* unknown type, empty encoding */ entityManager;
    void /* unknown type, empty encoding */ loadOptions;
    void /* unknown type, empty encoding */ loader;
    void /* unknown type, empty encoding */ templateRemapTable;
    void /* unknown type, empty encoding */ templateWasPrepared;
    void /* unknown type, empty encoding */ effects;
    void /* unknown type, empty encoding */ entityObjects;
    void /* unknown type, empty encoding */ _version;
    void /* unknown type, empty encoding */ isInsideRE;
    void /* unknown type, empty encoding */ isREAssetScene;
    void /* unknown type, empty encoding */ transientDrawCall;
    void /* unknown type, empty encoding */ hasSharedEntityManager;
    void /* unknown type, empty encoding */ metalBinaryArchiveURLs;
    void /* unknown type, empty encoding */ recordedMetalBinaryArchiveURL;
    void /* unknown type, empty encoding */ debugUIOptions;
}

@property (class, nonatomic, readonly) NSBundle *vfxAssetsFrameworkBundle;
@property (class, nonatomic, copy) NSArray *builtinEffectIdentifiers;

@property (nonatomic, retain) NSObject *assetManager;
@property (nonatomic, readonly) VFXMTLResourceManager *resourceManager;
@property (nonatomic, readonly) void *opaqueEntityManager;
@property (nonatomic, readonly) float deltaTime;
@property (nonatomic) float speedFactor;
@property (nonatomic) float time;
@property (nonatomic) char paused;
@property (nonatomic) char imGUIEnabled;
@property (nonatomic, weak) id sourceReplicationDelegate;
@property (nonatomic, weak) id destinationReplicationDelegate;
@property (nonatomic, copy) NSArray *effects;
@property (nonatomic, readonly) long long version;
@property (nonatomic, copy) NSArray *metalBinaryArchiveURLs;
@property (nonatomic, copy) NSURL *recordedMetalBinaryArchiveURL;
@property (nonatomic) void /* unknown type, empty encoding */ internalPixelFormat;
@property (nonatomic) void /* unknown type, empty encoding */ internalPixelFormatDepth;
@property (nonatomic) void /* unknown type, empty encoding */ useGammaBlending;
@property (nonatomic) char isPlaying;
@property (nonatomic) char isFrozen;
@property (nonatomic) float timeScale;
@property (nonatomic) char allowsCameraControl;
@property (nonatomic) char showStatistics;
@property (nonatomic) char additiveWritesToAlpha;
@property (nonatomic, readonly) NSArray *bindings;

+ (void)applicationDidEnterBackground;
+ (void)applicationWillEnterForeground;
+ (id)vfxLibraryURLFor:(id)a0;
+ (void)appendWithTrigger:(id)a0 event:(id)a1 view:(id)a2 inWorld:(id)a3;
+ (id)cloneAndSetupReplicationWithModelWorld:(id)a0;
+ (void)registerWithTriggerManager:(id)a0 inWorld:(id)a1;
+ (void)stopReplicationWithModel:(id)a0 runtime:(id)a1;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)clearCaches;
- (id)initWithIdentifier:(id)a0 error:(id *)a1;
- (id)initWithOptions:(id)a0;
- (void)endTransaction;
- (void)prepare;
- (long long)newObject;
- (void)performTransaction:(id /* block */)a0;
- (void)removeAllEffects;
- (void)removeEffect:(id)a0;
- (void)restart;
- (void)beginTransaction:(void *)a0;
- (char)isEnabled:(id)a0;
- (id)addEffectFrom:(id)a0 error:(id *)a1;
- (id)firstBindingWithName:(id)a0;
- (void)setWorld:(struct __CFXWorld { } *)a0;
- (void)enterBackground;
- (void)enterForeground;
- (void)updateWithDeltaTime:(double)a0;
- (id)bindingOf:(id)a0 named:(id)a1;
- (long long)drawCallCount;
- (id /* block */)recycleBuffersGetCompletion;
- (id)addEffectFromTemplate:(id)a0;
- (void)withPointerToValueAtPath:(id)a0 block:(id /* block */)a1;
- (id)addEffectWithEffectID:(int)a0;
- (void)addEntityObject:(id)a0;
- (long long)addLightWithType:(long long)a0;
- (char)beginImgUIFrameWithViewportSize:(struct CGSize { double x0; double x1; })a0 backingScaleFactor:(double)a1;
- (id)buildAccelerationStructureDescriptorsWithEntity:(long long)a0;
- (long long)createSkyboxWithParameters:(id)a0;
- (void)destroyObject:(long long)a0;
- (char)dipatchEventToImGui:(id)a0 view:(id)a1;
- (void)encodeAuthoringWithEncoder:(id)a0 colorFormat:(unsigned long long)a1 depthStencilFormat:(unsigned long long)a2 sampleCount:(long long)a3;
- (char)endImgUIFrame;
- (char)endImgUIFrameWithCommandBuffer:(id)a0 encoder:(id)a1 renderPassDescriptor:(id)a2;
- (long long)entityWithTag:(id)a0;
- (void)enumerateDrawCall:(id /* block */)a0;
- (void /* unknown type, empty encoding */)evaluateForceFieldsAtPosition:(id)a0 velocity:(SEL)a1 mass:(float)a2 charge:(float)a3 time:(float)a4 dt:(float)a5 categoryMask:(unsigned int)a6;
- (id)fetchEntityObjectWithTag:(id)a0;
- (id)initForEngineNamed:(id)a0;
- (id)initWithContentsOf:(id)a0 error:(id *)a1;
- (id)initWithContentsOf:(id)a0 options:(id)a1 error:(id *)a2;
- (void)initializeAssetManagerWithBundleURL:(id)a0;
- (void)invalidateCachedScriptParams;
- (char)isEventInImGUIWindow:(id)a0 view:(id)a1;
- (char)loadWithUrl:(id)a0 loadingForAuthoring:(char)a1 infoOut:(id)a2 presentationScene:(id)a3 error:(id *)a4;
- (id)makeDefaultCamera;
- (id)parameterOf:(id)a0 named:(id)a1;
- (void)remapEntityReferences:(id)a0;
- (void)removeEntityObject:(id)a0;
- (void)removeLightWithId:(long long)a0;
- (void)removeSkyboxes;
- (void)resolveObjectReferencesWithRemapTableWithWorld:(id)a0 objectsByIdentifier:(id)a1;
- (void)selectObject:(long long)a0 selected:(char)a1;
- (void)setDebugUIOptions:(unsigned long long)a0;
- (void)setDirectionalLightUniformOverridesOn:(long long)a0 world:(void *)a1 proj:(void *)a2;
- (void)setEnabled:(id)a0 enabled:(char)a1;
- (void)setLightParametersOn:(long long)a0 parameters:(id)a1;
- (void)setParameterOf:(id)a0 named:(id)a1 :(id)a2;
- (void)setShadowParametersOn:(long long)a0 castsShadows:(char)a1 tiles:(void *)a2 count:(long long)a3 depthBias:(float)a4;
- (void)setValue:(id)a0 atPath:(id)a1;
- (void)startRuntimeThread;
- (void)stopRuntimeThread;
- (id)textureForEntity:(long long)a0 isFallback:(BOOL *)a1 isDynamic:(BOOL *)a2;
- (void)triggerRenderWith:(id /* block */)a0 renderer:(unsigned long long)a1;
- (void)updateAtTime:(double)a0 deltaTime:(double)a1 frameIndex:(long long)a2;
- (void)updateForceField:(void *)a0 of:(long long)a1;
- (void)updateVFX2RenderOutputWithPointOfView:(id)a0 commandBuffer:(id)a1;
- (void)updateWorldTransform:(struct { void /* unknown type, empty encoding */ x0[4]; })a0 of:(long long)a1;
- (id)valueAtPath:(id)a0;
- (void)withPointerToParameterOf:(id)a0 named:(id)a1 block:(id /* block */)a2;

@end

@class VFXBillboardConstraint, NSOrderedSet, VFXAuthoringEnvironment, NSMutableIndexSet, NSMutableArray, VFXNode, NSLock;

@interface VFXManipulator : NSObject {
    VFXAuthoringEnvironment *_authoringEnvironment;
    NSOrderedSet *_targets;
    VFXNode *_node;
    struct { void /* unknown type, empty encoding */ columns[4]; } _xAxisToZAxisTransform;
    struct { void /* unknown type, empty encoding */ columns[4]; } _yAxisToZAxisTransform;
    struct { void /* unknown type, empty encoding */ columns[4]; } _xyPlaneToYZPlaneTransform;
    struct { void /* unknown type, empty encoding */ columns[4]; } _xyPlaneToXZPlaneTransform;
    unsigned short _selectedAxis;
    union { struct { void /* unknown type, empty encoding */ originalPosition; void /* unknown type, empty encoding */ axisDirection; void /* unknown type, empty encoding */ mouseDeltaVector; } axisMove; struct { void /* unknown type, empty encoding */ originalPosition; void /* unknown type, empty encoding */ planeNormal; void /* unknown type, empty encoding */ pointInPlane; void /* unknown type, empty encoding */ mouseDeltaVector; } planeMove; struct { float rotationSign; void /* unknown type, empty encoding */ originalRotation; } axisRotate; } _actionData;
    char _isMouseDown;
    unsigned long long _lastModifierFlags;
    unsigned short _action;
    struct CGPoint { double x; double y; } _originalMouseLocation;
    struct { void *positions; void *orientations; struct *originalLocalMatrix; void *scales; } _originalData;
    unsigned int _originalDataCount;
    struct { void /* unknown type, empty encoding */ columns[4]; } _worldInitialMatrix;
    struct { void /* unknown type, empty encoding */ columns[4]; } _worldMatrix;
    long long _snapToAlignCount;
    struct { float x0; void *x1; float x2; } *_snapToAlignOnX;
    struct { float x0; void *x1; float x2; } *_snapToAlignOnY;
    struct { float x0; void *x1; float x2; } *_snapToAlignOnZ;
    NSMutableIndexSet *_snapXIndexes;
    NSMutableIndexSet *_snapYIndexes;
    NSMutableIndexSet *_snapZIndexes;
    NSLock *_snapLock;
    VFXNode *_planarTranslationHandleXY;
    VFXNode *_planarTranslationHandleYZ;
    VFXNode *_planarTranslationHandleXZ;
    VFXNode *_planarTranslationHandles;
    VFXNode *_axis;
    VFXNode *_arcHandleXY;
    VFXNode *_arcHandleYZ;
    VFXNode *_arcHandleXZ;
    VFXNode *_arcHandles;
    VFXNode *_scaleNode;
    VFXNode *_screenSpaceRotation;
    VFXNode *_highlightNode;
    void /* unknown type, empty encoding */ _planarTranslationLayout;
    char _layoutLocked;
    VFXNode *_zArrow;
    VFXNode *_rotationHandles;
    VFXNode *_occluder;
    VFXNode *_translateHandles;
    VFXBillboardConstraint *_billboard;
    NSOrderedSet *_cloneSet;
    char _cloning;
    NSLock *_presentationItemsLock;
    NSMutableArray *_presentationNodeTransforms;
    unsigned long long _features;
    char _alternateMode;
}

@property (readonly) VFXAuthoringEnvironment *authoringEnvironment;
@property (readonly) struct { void /* unknown type, empty encoding */ x0[4]; } transform;
@property (readonly) VFXNode *manipulatorNode;
@property (retain, nonatomic) NSOrderedSet *targets;
@property (retain, nonatomic) VFXNode *target;
@property (nonatomic) long long xAlignment;
@property (nonatomic) long long yAlignment;
@property (nonatomic) long long zAlignment;
@property (nonatomic) char readonly;
@property (nonatomic) unsigned long long features;
@property (nonatomic) char hidden;

- (void)dealloc;
- (id)copy;
- (id)init;
- (id)hitTest:(struct { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; float x3; })a0;
- (char)isDragging;
- (char)mouseDown:(struct { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; float x3; })a0;
- (char)mouseDragged:(struct { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; float x3; })a0;
- (char)mouseMoved:(struct { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; float x3; })a0;
- (char)mouseUp:(struct { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; float x3; })a0;
- (id)world;
- (char)_applyWithEvent:(struct { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; float x3; })a0;
- (void)_deleteOriginalData;
- (unsigned long long)_effectiveFeatures;
- (void)_prepareSnapToAlignData:(id)a0 minOffset:(SEL)a1 maxOffset:(unsigned short)a2;
- (void)_saveOriginalData;
- (void)_setAuthoringEnvironment:(id)a0;
- (void /* unknown type, empty encoding */)_snapPositionToAlign:(id)a0 original:(SEL)a1 unit:(float)a2 axisMove:(BOOL)a3 rayStart:(BOOL *)a4 rayDir:(long long *)a5 didSnap:(void /* unknown type, empty encoding */)a6 snapIndexes:(void /* unknown type, empty encoding */)a7;
- (void)_updateActionWithEvent:(struct { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; float x3; })a0;
- (void)_updateCloneStateWithEvent:(struct { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; float x3; })a0;
- (void)clearSnapIndexes;
- (void)editingSpaceChanged;
- (long long)effectiveEditingSpace;
- (void)lockLayout;
- (void)prepareSnapToAlignData;
- (void)prepareSnapToAlignDataIfNeeded;
- (void)setAlternateMode:(char)a0;
- (id)setupClones;
- (void)setupNode;
- (id)snapGuideIndexesOnAxis:(unsigned long long)a0;
- (const struct { float x0; void *x1; float x2; } *)snapInfoAtIndex:(unsigned long long)a0 axis:(unsigned long long)a1;
- (void)unhighlightSelectedNode;
- (void)unlockLayout;
- (void)updateItemsPosition;
- (void)updateItemsRotation:(SEL)a0;
- (void)updateItemsScale:(float)a0;
- (void)updateManipulatorComponents;
- (void)updateManipulatorNode;
- (void)updateManipulatorPosition:(struct __CFXEngineContext { } *)a0;
- (void)validateClones;
- (void)_updateRuntimeItems;
- (void)addClonesToWorld;
- (void)clearRuntimeItems;
- (void)lockSnapGuides;
- (void)removeClonesFromWorld;
- (void)unlockSnapGuides;
- (void)updateTargetsTransforms;

@end

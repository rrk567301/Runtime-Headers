@class NSMutableDictionary, MTLRenderPassDescriptor, NSObject, RGCachedComputeCommandEncoder, VFXMTLShadable, NSMutableArray, VFXMTLResourceManager, VFXMTLMeshElement, NSString, VFXMTLRenderPipeline, VFXMTLMesh, CAMetalLayer, CFXVFXRenderTargetInfo;
@protocol MTLCommandBuffer, MTLDevice, OS_dispatch_group, MTLRasterizationRateMap, MTLSamplerState, OS_dispatch_queue, CAMetalDrawable, MTLDepthStencilState, MTLTexture, OS_dispatch_semaphore, VFXMTLRenderContextResourceManagerMonitor, VFXMTLRenderContextCommandBufferStatusMonitor, MTLBlitCommandEncoder, MTLBuffer, MTLRenderCommandEncoder, VFXTextureAttachmentProvider, MTLCommandQueue;

@interface VFXMTLRenderContext : NSObject <VFXBufferStream> {
    unsigned long long _currentFrameIndex;
    struct __CFXEngineStats { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; double x56; unsigned int x57; double x58; unsigned int x59; double x60; double x61; double x62; double x63; double x64[60]; unsigned int x65; double x66; double x67; } *__engineStats;
    struct { void /* unknown type, empty encoding */ columns[4]; } _screenTransform;
    long long _sampleCount;
    char _needSuperSampling;
    id<MTLDevice> _device;
    char _isValidationEnabled;
    int _profile;
    unsigned int _features;
    struct __CFXEngineContext { } *_engineContext;
    unsigned char _wantsWideGamut : 1;
    unsigned char _isOpaque : 1;
    unsigned char _forceAsyncShaderCompilation : 1;
    id<MTLCommandQueue> _ownedCommandQueue;
    NSObject<OS_dispatch_semaphore> *_inFlightSemaphore;
    struct atomic<int> { struct __cxx_atomic_impl<int, std::__cxx_atomic_base_impl<int>> { _Atomic int __a_value; } __a_; } _pendingGPUFrameCount;
    id<MTLTexture> _textureTarget;
    CAMetalLayer *_layerTarget;
    id<CAMetalDrawable> _drawable;
    float _targetedFrameInterval;
    char _shouldPresentWithTransaction;
    MTLRenderPassDescriptor *_currentRenderPassDescriptor;
    MTLRenderPassDescriptor *_originalRenderPassDescriptor;
    void /* unknown type, empty encoding */ _renderSize;
    id<MTLCommandBuffer> _currentCommandBuffer;
    id<MTLCommandBuffer> _resourceCommandBuffer;
    struct VFXMTLBlitCommandEncoder { id<MTLBlitCommandEncoder> _encoder; id<MTLCommandBuffer> _commandBuffer; } _resourceBlitEncoder;
    struct VFXMTLComputeCommandEncoder { RGCachedComputeCommandEncoder *_encoder; id<MTLCommandBuffer> _commandBuffer; struct VFXMTLBufferPool *_bufferPool; unsigned int _features; } _resourceComputeEncoder;
    struct { unsigned char renderSliceIndex; unsigned char eyeCount; unsigned char viewMapping; unsigned char multiVertexOutputStreamGenerator; BOOL isMainPass; } _renderPassParameters;
    struct { char vertexIndex; char fragmentIndex; } _currentStreamBufferIndices;
    struct VFXMTLBufferPool **_volatileBufferPools;
    void *_frameVolatileBufferPool;
    NSMutableArray *_volatileMeshes;
    NSMutableArray *_bufferPool;
    NSMutableArray *_usedVolatileMeshElements;
    NSMutableArray *_freeVolatileMeshElements;
    long long _maxInFlightFrameCount;
    struct VFXMTLBufferPool **_constantBufferPools;
    void *_frameConstantBufferPool;
    id<MTLDepthStencilState> _defaultDepthStencilState;
    id<MTLSamplerState> _defaultSamplerState;
    struct __CFXFXProgram *_background2DProgram[3];
    struct __CFXFXProgram *_backgroundCubeProgram[3];
    struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned char x1 : 1; unsigned char x2 : 1; struct __CFXFXProgramDelegate *x3; struct __CFString *x4[2]; struct __CFString *x5; struct __CFString *x6; struct __CFDictionary *x7; struct __CFSet *x8; void *x9; struct __CFDictionary *x10; void *x11; unsigned long long x12; unsigned int x13; } *_backgroundVideoProgram;
    struct __CFXRasterizerStates { } *_backgroundRasterizerStates;
    NSObject<OS_dispatch_queue> *_resourceQueue;
    NSObject<OS_dispatch_group> *_resourceGroup;
    char _shouldCaptureNextFrame;
    char _captureStarted;
    id<MTLBuffer> _shadowKernelBuffer;
    struct { struct __CFXFXPassInstance *passInstance; struct __CFXLightingSystem *lightingSystem; struct __CFXDynamicBatchingSystem *dynamicBatchingSystem; struct __CFXFXPass *pass; void *renderGraphPass; char passRequiresLighting; char isMainPass; struct __CFXTransformTree *transformTree; unsigned long long programHashCodeStoreKey; } _processingContext;
    unsigned int _seed;
    struct VFXWorldBuffer { struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } viewTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } inverseViewTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } projectionTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } viewProjectionTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } viewToCubeTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } lastFrameViewProjectionTransform; void /* unknown type, empty encoding */ ambientLightingColor; void /* unknown type, empty encoding */ fogColor; void /* unknown type, empty encoding */ fogParameters; void /* unknown type, empty encoding */ inverseResolution; float time; float sinTime; float cosTime; float random01; float motionBlurIntensity; float environmentIntensity; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } environmentTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } inverseProjectionTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } inverseViewProjectionTransform; void /* unknown type, empty encoding */ nearFar; void /* unknown type, empty encoding */ viewportSize; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } inverseTransposeViewTransform; void /* unknown type, empty encoding */ clusterScale; unsigned int frame; } _frameUniforms[16];
    struct { id<MTLBuffer> buffer; unsigned long long offset; } _worldUniforms;
    struct { struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } modelTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } lastFrameModelTransform; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } normalTransforms[16]; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } modelViewTransforms[16]; struct float4x4 { void /* unknown type, empty encoding */ columns[4]; } modelViewProjectionTransforms[16]; struct float2x3 { void /* unknown type, empty encoding */ columns[2]; } boundingBox; struct float2x3 { void /* unknown type, empty encoding */ columns[2]; } worldBoundingBox; struct __CFXNode *instanceNode; unsigned int flags; unsigned int *probeCacheIndex; } _nodeUniforms;
    struct { struct unordered_map<unsigned long long, VFXMTLLightSetData, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, VFXMTLLightSetData>>> { struct __hash_table<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>> { float __value_; } __p3_; } __table_; } frameLightingSetDatas; unsigned long long currentLightingHashKey; struct { long long count; struct __CFXLight *lights[8]; struct __CFXLightRuntimeData *lightsData[8]; } currentLightingDesc; struct { void /* unknown type, empty encoding */ columns[4]; } currentLightingSpace; struct { void /* unknown type, empty encoding */ columns[4]; } currentLightingSpaceShadow; BOOL needLightingSpaceTransformation; struct VFXMTLClusterSystem { void /* unknown type, empty encoding */ clustersCount; void /* unknown type, empty encoding */ tileSize; void /* unknown type, empty encoding */ selectedDebugClusterIndex; VFXMTLRenderPipeline *_debugClusterTilesPipeline; VFXMTLRenderPipeline *_debugLightIndicesBufferPipeline; VFXMTLRenderPipeline *_debugClusterSlicesPipeline; struct __CFXFXProgram *_debugProgram[7]; struct __CFXMesh *_debugShapes[7]; } clusterSystem; struct Info { struct { char *memory; id<MTLBuffer> buffer; unsigned long long offset; } clusterBuffer; id<MTLTexture> clusterTexture; id<MTLBuffer> lightIndicesBuffer; unsigned int lightIndicesBufferOffset; unsigned int lightIndicesBufferSize; void /* unknown type, empty encoding */ cellSize; void /* unknown type, empty encoding */ clusterScale; void /* unknown type, empty encoding */ cellPixelSize; void /* unknown type, empty encoding */ omniLightsRange; void /* unknown type, empty encoding */ spotLightsRange; void /* unknown type, empty encoding */ probeLightsRange; struct { char *memory; id<MTLBuffer> buffer; unsigned long long offset; } lightsBuffer; unsigned int lightsBufferLightCount; id<MTLTexture> shadowTexture; id<MTLTexture> iesOrGoboTextures[8]; id<MTLSamplerState> samplerStates[8]; id<MTLBuffer> areaBuffer; unsigned long long areaBufferOffset; unsigned long long areaBufferOffsets[8]; } clusterInfo; id<MTLTexture> reflectionProbesTextureArray; } _lighting;
    struct { struct { void /* unknown type, empty encoding */ columns[4]; } view_from_crworld[2]; struct { void /* unknown type, empty encoding */ columns[4]; } proj_from_crworld[2]; struct { void /* unknown type, empty encoding */ columns[4]; } proj_from_view[2]; struct { void /* unknown type, empty encoding */ columns[4]; } view_from_proj[2]; void /* unknown type, empty encoding */ crws_camera_pos[2]; void /* unknown type, empty encoding */ worldReferencePosition; void /* unknown type, empty encoding */ renderTargetSize; unsigned int viewportCount; unsigned int useVertexAmplification; void /* unknown type, empty encoding */ viewport_percents[2]; } _vfxCoreViewConstants;
    struct { double originX; double originY; double width; double height; double znear; double zfar; } _vfxCoreViewports[2];
    struct Cache { struct __CFXRasterizerStates *rasterizerStates; struct __CFXMesh *mesh; VFXMTLMesh *metalMesh; struct __CFXMeshElement *meshElement; VFXMTLMeshElement *metalMeshElement; struct __CFXFXProgram *program; struct __CFXMaterial *material; struct __CFXGeometry *geometry; VFXMTLShadable *metalShadable; struct __CFXCommonProfile *commonProfile; struct __CFXBlendStates *blendStates; unsigned char colorBufferWriteMask; unsigned char primitiveTopologyClass; struct __CFXNode *node; struct __CFXNode *pointOfView; struct __CFXDeformerStack *deformers; struct { void /* unknown type, empty encoding */ columns[4]; } viewTransform; struct { void /* unknown type, empty encoding */ columns[4]; } proj; unsigned long long vertexDescriptorHash; unsigned char tessellationPipelineStateHash; VFXMTLRenderPipeline *renderPipeline; } _cache;
    struct { unsigned long long hash; VFXMTLRenderPipeline *pipeline; } _compositeRendering[1];
    VFXMTLRenderPipeline *_downSamplePipeline;
    struct { unsigned long long pixelFormat; unsigned long long sampleCount; VFXMTLRenderPipeline *displayCubemapPipeline; VFXMTLRenderPipeline *displayTexture2DPipeline; VFXMTLRenderPipeline *displayDepth2DPipeline; VFXMTLRenderPipeline *displayDepthCubePipeline; } _debug;
    char _showsAuthoringEnvironment;
    struct { char collectEnabled; NSMutableDictionary *errors; } _compilationIssues;
    struct { unsigned int modelTransformBindingCount; unsigned int modelViewTransformBindingCount; unsigned int normalTransformBindingCount; unsigned int nodeOpacityBindingCount; } _counters;
    struct { unsigned long long passHash; struct __CFXMaterial *material; } _renderGraph;
    id<VFXTextureAttachmentProvider> _attachmentProvider;
    id _commandBufferScheduledHandlers;
    id _commandBufferCompletedHandlers;
    id _drawablePresentedHandlers;
    CFXVFXRenderTargetInfo *_renderTargetInfo;
    BOOL _depthOnly;
    unsigned short _commonProfileConditioner;
    unsigned int _renderMode;
}

@property (readonly, nonatomic) long long pendingGPUFrameCount;
@property (nonatomic) long long sampleCount;
@property (nonatomic) float superSamplingFactor;
@property (nonatomic) struct { void /* unknown type, empty encoding */ x0[4]; } screenTransform;
@property (nonatomic) char wantsWideGamut;
@property (nonatomic) char enableARMode;
@property (nonatomic) char shouldDelegateARCompositing;
@property (nonatomic) char isOpaque;
@property (readonly, nonatomic) long long currentFrameIndex;
@property (nonatomic) char showsAuthoringEnvironment;
@property (nonatomic) char canRecycleParticleBuffers;
@property (nonatomic) char requireLoadFinalTexture;
@property (nonatomic) char forceAsyncShaderCompilation;
@property (nonatomic) char collectsCompilationErrors;
@property (nonatomic) char simulateCommandBufferFailure;
@property (readonly, nonatomic) NSMutableDictionary *compilationErrors;
@property (retain, nonatomic) NSString *generatedTexturePath;
@property (readonly, nonatomic) unsigned int features;
@property (readonly, nonatomic) int profile;
@property (readonly, nonatomic) VFXMTLResourceManager *resourceManager;
@property (nonatomic) unsigned long long debugOptions;
@property (readonly, nonatomic) id<MTLRenderCommandEncoder> currentRenderCommandEncoder;
@property (readonly, nonatomic) MTLRenderPassDescriptor *currentRenderPassDescriptor;
@property (readonly, nonatomic) id<MTLCommandBuffer> currentCommandBuffer;
@property (readonly, nonatomic) id<MTLCommandBuffer> resourceCommandBuffer;
@property (readonly, nonatomic) struct VFXMTLComputeCommandEncoder { id x0; id x1; struct VFXMTLBufferPool *x2; unsigned int x3; } *resourceComputeEncoder;
@property (readonly, nonatomic) struct VFXMTLBlitCommandEncoder { id x0; id x1; } *resourceBlitEncoder;
@property (readonly, nonatomic) id<MTLDevice> device;
@property (readonly, nonatomic) struct __CFXEngineContext { } *engineContext;
@property (readonly, nonatomic) id<MTLTexture> textureTarget;
@property (readonly, nonatomic) CAMetalLayer *layerTarget;
@property (nonatomic) long long preferredFramesPerSecond;
@property (nonatomic) char shouldPresentAfterMinimumDuration;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *resourceQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_group> *resourceGroup;
@property (retain, nonatomic) MTLRenderPassDescriptor *clientRenderPassDescriptor;
@property (retain, nonatomic) id<MTLRenderCommandEncoder> clientRenderCommandEncoder;
@property (retain, nonatomic) id<MTLCommandBuffer> clientCommandBuffer;
@property (retain, nonatomic) id<MTLCommandQueue> clientCommandQueue;
@property (retain, nonatomic) id<MTLRasterizationRateMap> rasterizationRateMap;
@property (nonatomic) unsigned long long depthPixelFormat;
@property (readonly, nonatomic) id<MTLCommandQueue> commandQueue;
@property (readonly, nonatomic) void *frameConstantBufferPool;
@property (readonly, nonatomic) void *frameTexturePool;
@property (weak, nonatomic) id<VFXMTLRenderContextResourceManagerMonitor> resourceManagerMonitor;
@property (weak, nonatomic) id<VFXMTLRenderContextCommandBufferStatusMonitor> commandBufferStatusMonitor;
@property (readonly, nonatomic) CFXVFXRenderTargetInfo *renderTargetInfo;
@property (retain, nonatomic) id<VFXTextureAttachmentProvider> attachmentProvider;
@property (readonly, nonatomic) struct VFXMTLRenderCommandEncoder { unsigned int x0; unsigned char x1; id x2; id x3; struct VFXMTLBufferPool *x4; BOOL x5; } *renderEncoder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)registerBindings;

- (void)dealloc;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)pushDebugGroup:(id)a0;
- (void)popDebugGroup;
- (long long)renderMode;
- (struct __CFXEngineStats { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; double x56; unsigned int x57; double x58; unsigned int x59; double x60; double x61; double x62; double x63; double x64[60]; unsigned int x65; double x66; double x67; } *)stats;
- (void /* unknown type, empty encoding */)renderSize;
- (void)writeBytes:(const void *)a0 length:(unsigned long long)a1;
- (float)renderTime;
- (void)_drawShadowMaps;
- (void)_allowGPUBackgroundExecution;
- (void)_clearUnusedBindingPoints;
- (void)_createResourceCommandBufferIfNeeded;
- (void)_drawPBRTextures;
- (void)_executeDrawCommand:(struct { struct __CFXFXProgram *x0; struct __CFXMaterial *x1; struct __CFXGeometry *x2; struct __CFXNode *x3; struct __CFXMesh *x4; struct __CFXMeshElement *x5; struct { unsigned char x0[8]; } x6; struct __CFXFXPass *x7; unsigned int *x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; unsigned char x14 : 3; })a0;
- (void)_logLightingInformation;
- (id)_newMTLBufferFromPoolWithLength:(unsigned long long)a0;
- (void)_prepareMaterialTextures:(struct __CFXMaterial { } *)a0;
- (void)_recycleMTLBufferToPool:(id)a0;
- (void)_reduceStatsOfConstantBuffer:(id)a0;
- (void)_updateProjectionMatrixForOrthographicSkyboxRenderingIfNeeded:(struct { void /* unknown type, empty encoding */ x0[4]; } *)a0;
- (float)_zFarForSkyboxRenderingProjectionMatrix:(const struct { void /* unknown type, empty encoding */ x0[4]; } *)a0 defaultZFar:(float)a1;
- (void)resetVolatileMeshElements;
- (void)resetVolatileMeshes;
- (id)buffer:(int)a0 :(id)a1 :(long long *)a2 :(long long *)a3;
- (const char *)constantData:(int)a0;
- (char)constantOffsetAndSize:(int)a0 :(id)a1 :(long long *)a2 :(long long *)a3;
- (char)depthOnly;
- (char)isDrawingBlur;
- (id)sampler:(int)a0 :(id)a1;
- (id)texture:(int)a0 :(id)a1;
- (void)viewports:(const void **)a0 :(long long *)a1;
- (void)_drawMeshElement:(id)a0 instanceCount:(unsigned long long)a1;
- (char)renderInGBuffer;
- (void)_VFXWorldRendererMainPassCustomPostProcessSupportDrawSceneBackgroundUsingEncoder:(id)a0 commandBuffer:(id)a1 renderPassDescriptor:(id)a2;
- (void)stopProcessingRendererElements:(char)a0;
- (void)_clearRenderCaches;
- (void *)_clusterInfo;
- (void)_drawFullScreenTexture:(id)a0;
- (void)_drawPatchForMeshElement:(id)a0 instanceCount:(unsigned long long)a1;
- (id)_finalRenderTexture;
- (id)_reflectionProbeArrayTexture;
- (void)_setMeshBuffers:(id)a0;
- (void)_setReflectionProbeArrayTexture:(id)a0;
- (void)_setWorldBufferAtVertexIndex:(long long)a0 fragmentIndex:(long long)a1;
- (void)addCommandBufferCompletedHandler:(id /* block */)a0;
- (void)addCommandBufferScheduledHandler:(id /* block */)a0;
- (void)addDrawablePresentedHandler:(id /* block */)a0;
- (void)beginFrame:(id)a0;
- (void)beginRenderPass:(id)a0 renderEncoder:(void *)a1;
- (void)beginRenderPass:(id)a0 renderEncoder:(void *)a1 parameters:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; })a2;
- (void)captureNextFrame;
- (struct __CFXMeshElement { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned int x1; unsigned int x2; struct __CFXMeshElement *x3; unsigned char x4; unsigned char x5; unsigned char x6; struct { char x0; struct __CFData *x1; unsigned int x2; unsigned int *x3; struct *x4; unsigned short x5; unsigned char x6; BOOL x7; } x7; void *x8; float x9; float x10; float x11; void *x12; struct __CFXMeshSource *x13; void /* unknown type, empty encoding */ x14[2]; struct *x15; unsigned int x16; } *)createVolatileMeshElementOfType:(char)a0 primitiveCount:(long long)a1 bytesPerIndex:(long long)a2;
- (unsigned long long)cubeArrayTypeIfSupported;
- (char)debugKeyDown:(id)a0;
- (void)drawFullScreenQuadForPass:(struct __CFXFXPass { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __CFString *x1; int x2; int x3; BOOL x4; struct __CFXFXRenderGraph *x5; struct __CFString *x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; BOOL x10; struct __CFXFXProgram *x11; struct __CFXMaterial *x12; struct __CFXBlendStates *x13; struct __CFXRasterizerStates *x14; struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x15; unsigned char x16; unsigned int x17; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 1; unsigned char x35 : 1; unsigned char x36 : 1; unsigned char x37 : 1; unsigned char x38 : 1; unsigned char x39 : 1; unsigned char x40 : 1; unsigned char x41 : 1; unsigned char x42 : 1; unsigned char x43 : 1; unsigned char x44 : 1; unsigned char x45 : 1; struct __CFXRendererElement *x46; unsigned long long x47; unsigned long long x48; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void /* function */ *x4; void /* function */ *x5; void /* function */ *x6; void /* function */ *x7; void *x8; } x49; struct { struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x0[8]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x1; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 1; } x50; struct CGPoint { double x0; double x1; } x51; float x52[9]; struct *x53; unsigned int x54; struct __CFXNode *x55; struct __CFXNode *x56; struct __CFArray *x57; struct __CFXNode *x58; unsigned char x59; struct __CFString *x60; struct __CFString *x61; struct __CFString *x62; struct __CFXFXPassInput **x63; long long x64; long long x65; struct __CFDictionary *x66; id /* block */ x67; id /* block */ x68; struct __CFDictionary *x69; void *x70; } *)a0;
- (void)drawRenderElement:(struct __CFXRendererElement { unsigned int x0; struct __CFXNode *x1; union { struct __CFXRendererElementAttributes { struct __CFXGeometry *x0; struct __CFXMesh *x1; struct __CFXMaterial *x2; struct __CFXFXRenderGraph *x3; void *x4; } x0; struct __CFXRendererElementHandler { struct { } x0; id /* block */ x1; } x1; } x2; struct { unsigned char x0[8]; } x3; int x4; unsigned int x5; unsigned char x6 : 3; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; unsigned char x11 : 3; unsigned char x12 : 1; unsigned char x13 : 3; unsigned char x14 : 1; unsigned char x15 : 1; } *)a0 withPass:(struct __CFXFXPass { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __CFString *x1; int x2; int x3; BOOL x4; struct __CFXFXRenderGraph *x5; struct __CFString *x6; struct __CFString *x7; struct __CFString *x8; struct __CFString *x9; BOOL x10; struct __CFXFXProgram *x11; struct __CFXMaterial *x12; struct __CFXBlendStates *x13; struct __CFXRasterizerStates *x14; struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x15; unsigned char x16; unsigned int x17; unsigned char x18 : 1; unsigned char x19 : 1; unsigned char x20 : 1; unsigned char x21 : 1; unsigned char x22 : 1; unsigned char x23 : 1; unsigned char x24 : 1; unsigned char x25 : 1; unsigned char x26 : 1; unsigned char x27 : 1; unsigned char x28 : 1; unsigned char x29 : 1; unsigned char x30 : 1; unsigned char x31 : 1; unsigned char x32 : 1; unsigned char x33 : 1; unsigned char x34 : 1; unsigned char x35 : 1; unsigned char x36 : 1; unsigned char x37 : 1; unsigned char x38 : 1; unsigned char x39 : 1; unsigned char x40 : 1; unsigned char x41 : 1; unsigned char x42 : 1; unsigned char x43 : 1; unsigned char x44 : 1; unsigned char x45 : 1; struct __CFXRendererElement *x46; unsigned long long x47; unsigned long long x48; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void /* function */ *x4; void /* function */ *x5; void /* function */ *x6; void /* function */ *x7; void *x8; } x49; struct { struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x0[8]; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9[4]; } x1; unsigned char x2 : 3; unsigned char x3 : 1; unsigned char x4 : 1; } x50; struct CGPoint { double x0; double x1; } x51; float x52[9]; struct *x53; unsigned int x54; struct __CFXNode *x55; struct __CFXNode *x56; struct __CFArray *x57; struct __CFXNode *x58; unsigned char x59; struct __CFString *x60; struct __CFString *x61; struct __CFString *x62; struct __CFXFXPassInput **x63; long long x64; long long x65; struct __CFDictionary *x66; id /* block */ x67; id /* block */ x68; struct __CFDictionary *x69; void *x70; } *)a1;
- (void)drawWireframeOverlayForElements:(struct { unsigned short x0; unsigned short x1; } *)a0 range:(struct { long long x0; long long x1; })a1 store:(struct __CFXRendererElementStore { } *)a2 passInstance:(struct __CFXFXPassInstance { struct __CFXFXPass *x0; long long x1; struct __CFXFXPassInstance *x2; unsigned char x3; unsigned char x4; BOOL x5; unsigned char x6; unsigned char x7; struct __CFXArray *x8[16]; struct __CFXCullingContext { struct __CFXEnginePipeline *x0; struct { struct { } x0[6]; } x1[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x2[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x3[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x4[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x5[16]; struct { struct { } x0[6]; } x6[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x7[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x8[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x9[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x10[16]; void /* unknown type, empty encoding */ x11[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x12[16]; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; BOOL x17; struct __CFXFXPass *x18; void *x19; struct __CFXNode *x20; struct __CFXNode *x21; struct __CFXNode *x22; BOOL x23; BOOL x24; BOOL x25; BOOL x26; BOOL x27; BOOL x28; BOOL x29; unsigned char x30; unsigned long long x31; unsigned long long x32; void *x33; struct __CFXWorld *x34; struct __CFXEngineContext *x35; double x36; double x37; struct { } x38; struct { void /* unknown type, empty encoding */ x0[4]; } x39; struct { void /* unknown type, empty encoding */ x0[4]; } x40; struct { struct *x0; unsigned int x1; unsigned int x2; } x41[16]; BOOL x42; void /* function */ *x43; } x9; struct __CFXNode *x10; unsigned short x11; unsigned int x12; } *)a3;
- (void)endFrameWaitingUntilCompleted:(char)a0 status:(unsigned long long *)a1 error:(id *)a2;
- (void)endFrameWorldSpecifics;
- (void)endRenderPass;
- (unsigned long long)getCurrentPassHash;
- (struct __CFXMaterial { } *)getCurrentPassMaterial;
- (id)initWithDevice:(id)a0 engineContext:(struct __CFXEngineContext { } *)a1;
- (id)irradianceTextureForMaterialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; union { struct __CFXImage *x0; struct __CFXImageProxy *x1; struct __CFXTexture *x2; void *x3; void *x4; struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x5; void *x6; } x1; void *x2; long long x3; void *x4; unsigned char x5 : 8; unsigned char x6 : 1; unsigned char x7 : 4; char x8; struct __CFXTextureSampler *x9; struct *x10; float x11; int x12; void *x13; } *)a0;
- (char)isLayeredRendering;
- (char)mapVolatileMesh:(struct __CFXMesh { } *)a0 verticesCount:(long long)a1;
- (char)outputsNormal;
- (void)processRendererElements:(struct { unsigned short x0; unsigned short x1; } *)a0 count:(unsigned int)a1 engineIterationContext:(struct { struct __CFXEnginePipeline *x0; struct __CFXEngineContext *x1; struct __CFXFXPassInstance *x2; void *x3; unsigned long long x4; struct __CFXNode *x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } *)a2;
- (id)radianceTextureForMaterialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; union { struct __CFXImage *x0; struct __CFXImageProxy *x1; struct __CFXTexture *x2; void *x3; void *x4; struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x5; void *x6; } x1; void *x2; long long x3; void *x4; unsigned char x5 : 8; unsigned char x6 : 1; unsigned char x7 : 4; char x8; struct __CFXTextureSampler *x9; struct *x10; float x11; int x12; void *x13; } *)a0;
- (void)renderBackground:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; union { struct __CFXImage *x0; struct __CFXImageProxy *x1; struct __CFXTexture *x2; void *x3; void *x4; struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x5; void *x6; } x1; void *x2; long long x3; void *x4; unsigned char x5 : 8; unsigned char x6 : 1; unsigned char x7 : 4; char x8; struct __CFXTextureSampler *x9; struct *x10; float x11; int x12; void *x13; } *)a0 engineContext:(struct __CFXEngineContext { } *)a1 passInstance:(struct __CFXFXPassInstance { struct __CFXFXPass *x0; long long x1; struct __CFXFXPassInstance *x2; unsigned char x3; unsigned char x4; BOOL x5; unsigned char x6; unsigned char x7; struct __CFXArray *x8[16]; struct __CFXCullingContext { struct __CFXEnginePipeline *x0; struct { struct { } x0[6]; } x1[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x2[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x3[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x4[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x5[16]; struct { struct { } x0[6]; } x6[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x7[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x8[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x9[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x10[16]; void /* unknown type, empty encoding */ x11[16]; struct { void /* unknown type, empty encoding */ x0[4]; } x12[16]; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; BOOL x17; struct __CFXFXPass *x18; void *x19; struct __CFXNode *x20; struct __CFXNode *x21; struct __CFXNode *x22; BOOL x23; BOOL x24; BOOL x25; BOOL x26; BOOL x27; BOOL x28; BOOL x29; unsigned char x30; unsigned long long x31; unsigned long long x32; void *x33; struct __CFXWorld *x34; struct __CFXEngineContext *x35; double x36; double x37; struct { } x38; struct { void /* unknown type, empty encoding */ x0[4]; } x39; struct { void /* unknown type, empty encoding */ x0[4]; } x40; struct { struct *x0; unsigned int x1; unsigned int x2; } x41[16]; BOOL x42; void /* function */ *x43; } x9; struct __CFXNode *x10; unsigned short x11; unsigned int x12; } *)a2;
- (void)renderMesh:(struct __CFXMesh { } *)a0 meshElement:(struct __CFXMeshElement { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned int x1; unsigned int x2; struct __CFXMeshElement *x3; unsigned char x4; unsigned char x5; unsigned char x6; struct { char x0; struct __CFData *x1; unsigned int x2; unsigned int *x3; struct *x4; unsigned short x5; unsigned char x6; BOOL x7; } x7; void *x8; float x9; float x10; float x11; void *x12; struct __CFXMeshSource *x13; void /* unknown type, empty encoding */ x14[2]; struct *x15; unsigned int x16; } *)a1 withProgram:(struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned char x1 : 1; unsigned char x2 : 1; struct __CFXFXProgramDelegate *x3; struct __CFString *x4[2]; struct __CFString *x5; struct __CFString *x6; struct __CFDictionary *x7; struct __CFSet *x8; void *x9; struct __CFDictionary *x10; void *x11; unsigned long long x12; unsigned int x13; } *)a2 engineContext:(struct __CFXEngineContext { } *)a3 transform:(struct { void /* unknown type, empty encoding */ x0[4]; })a4 color:(const struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } *)a5 rasterizerStates:(struct __CFXRasterizerStates { } *)a6 blendState:(struct __CFXBlendStates { } *)a7 texture:(struct __CFXImage { } *)a8 depthBias:(char)a9;
- (void)renderVideoBackground:(struct __CFXImageProxy { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; } x1; void *x2; unsigned char x3; } *)a0 engineContext:(struct __CFXEngineContext { } *)a1 materialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; union { struct __CFXImage *x0; struct __CFXImageProxy *x1; struct __CFXTexture *x2; void *x3; void *x4; struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x5; void *x6; } x1; void *x2; long long x3; void *x4; unsigned char x5 : 8; unsigned char x6 : 1; unsigned char x7 : 4; char x8; struct __CFXTextureSampler *x9; struct *x10; float x11; int x12; void *x13; } *)a2;
- (void)setCurrentPassHash:(unsigned long long)a0;
- (void)setCurrentPassMaterial:(struct __CFXMaterial { } *)a0;
- (void)setRasterizerStates:(struct __CFXRasterizerStates { } *)a0;
- (void)setRenderPassParameters:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; })a0;
- (void)startProcessingRendererElementsWithEngineIterationContext:(struct { struct __CFXEnginePipeline *x0; struct __CFXEngineContext *x1; struct __CFXFXPassInstance *x2; void *x3; unsigned long long x4; struct __CFXNode *x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } *)a0;
- (char)supportsMTLFeatureSet:(unsigned long long)a0;
- (id)textureForMaterialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; union { struct __CFXImage *x0; struct __CFXImageProxy *x1; struct __CFXTexture *x2; void *x3; void *x4; struct CFXColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } x5; void *x6; } x1; void *x2; long long x3; void *x4; unsigned char x5 : 8; unsigned char x6 : 1; unsigned char x7 : 4; char x8; struct __CFXTextureSampler *x9; struct *x10; float x11; int x12; void *x13; } *)a0;
- (void)unmapVolatileMesh:(struct __CFXMesh { } *)a0 modifiedVerticesCount:(long long)a1;
- (void)unmapVolatileMeshElement:(struct __CFXMeshElement { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __CFString *x2; struct __CFString *x3; struct __CFDictionary *x4; struct __CFXWorld *x5; long long x6; } x0; unsigned int x1; unsigned int x2; struct __CFXMeshElement *x3; unsigned char x4; unsigned char x5; unsigned char x6; struct { char x0; struct __CFData *x1; unsigned int x2; unsigned int *x3; struct *x4; unsigned short x5; unsigned char x6; BOOL x7; } x7; void *x8; float x9; float x10; float x11; void *x12; struct __CFXMeshSource *x13; void /* unknown type, empty encoding */ x14[2]; struct *x15; unsigned int x16; } *)a0;

@end

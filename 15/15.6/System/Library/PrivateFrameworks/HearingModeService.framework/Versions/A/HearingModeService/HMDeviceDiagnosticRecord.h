@class NSString, NSNumber, NSDate;

@interface HMDeviceDiagnosticRecord : NSObject <NSSecureCoding> {
    NSString *_firmwareVersion;
    unsigned int _productID;
    unsigned int _hpActiveNotificationCount;
    NSDate *_hpActiveNotificationFirstTimestamp;
    unsigned int _hpPlacardCount;
    NSDate *_hpPlacardFirstTimestamp;
    unsigned int _htCleaningAlertCount;
    NSDate *_htCleaningAlertFirstTimestamp;
}

@property (class, readonly) char supportsSecureCoding;

@property (retain, nonatomic) NSDate *firstTimeUseTimestampLeft;
@property (retain, nonatomic) NSDate *firstTimeUseTimestampRight;
@property (nonatomic) unsigned int bottomMicFaultCountLeft;
@property (nonatomic) unsigned int bottomMicFaultCountRight;
@property (nonatomic) unsigned int diagnosticMeasurementsCount;
@property (nonatomic) unsigned int freqAccuracyFaultCountLeft;
@property (nonatomic) unsigned int freqAccuracyFaultCountRight;
@property (nonatomic) unsigned int frontVentFaultCountLeft;
@property (nonatomic) unsigned int frontVentFaultCountRight;
@property (nonatomic) unsigned int innerMicFaultCountLeft;
@property (nonatomic) unsigned int innerMicFaultCountRight;
@property (nonatomic) unsigned int rearVentFaultCountLeft;
@property (nonatomic) unsigned int rearVentFaultCountRight;
@property (nonatomic) unsigned int speakerFaultCountLeft;
@property (nonatomic) unsigned int speakerFaultCountRight;
@property (nonatomic) unsigned int topMicFaultCountLeft;
@property (nonatomic) unsigned int topMicFaultCountRight;
@property (nonatomic) unsigned int totalHarmonicDistortionFaultCountLeft;
@property (nonatomic) unsigned int totalHarmonicDistortionFaultCountRight;
@property (nonatomic) char isNewPairing;
@property (readonly, copy, nonatomic) NSString *bluetoothAddress;
@property (readonly, copy, nonatomic) NSString *bluetoothUUID;
@property (readonly, nonatomic) int ancLossTypeLeft;
@property (readonly, nonatomic) int ancLossTypeRight;
@property (readonly, nonatomic) NSNumber *ancCleanLossScoreLeft;
@property (readonly, nonatomic) NSNumber *ancCleanLossScoreRight;
@property (readonly, nonatomic) NSNumber *ancFullLossScoreLeft;
@property (readonly, nonatomic) NSNumber *ancFullLossScoreRight;
@property (readonly, nonatomic) NSNumber *ancSevereLossScoreLeft;
@property (readonly, nonatomic) NSNumber *ancSevereLossScoreRight;
@property (readonly, nonatomic) NSNumber *daysSinceLastMeasurementLeft;
@property (readonly, nonatomic) NSNumber *daysSinceLastMeasurementRight;
@property (readonly, nonatomic) NSNumber *daysSinceLastHarmonicMeasurementLeft;
@property (readonly, nonatomic) NSNumber *daysSinceLastHarmonicMeasurementRight;
@property (readonly, nonatomic) int errMicStatusLeft;
@property (readonly, nonatomic) int errMicStatusRight;
@property (readonly, nonatomic) int frequencyAccuracyLeft;
@property (readonly, nonatomic) int frequencyAccuracyRight;
@property (readonly, nonatomic) int frontVentStatusLeft;
@property (readonly, nonatomic) int frontVentStatusRight;
@property (readonly, nonatomic) int generalSystemStatusLeft;
@property (readonly, nonatomic) int generalSystemStatusRight;
@property (readonly, nonatomic) NSDate *lastMeasurementTimestampLeft;
@property (readonly, nonatomic) NSDate *lastMeasurementTimestampRight;
@property (readonly, nonatomic) int latestMeasurementResultLeft;
@property (readonly, nonatomic) int latestMeasurementResultRight;
@property (readonly, nonatomic) int rearVentStatusLeft;
@property (readonly, nonatomic) int rearVentStatusRight;
@property (readonly, nonatomic) int refMicStatusLeft;
@property (readonly, nonatomic) int refMicStatusRight;
@property (readonly, nonatomic) int speakerStatusLeft;
@property (readonly, nonatomic) int speakerStatusRight;
@property (readonly, nonatomic) int totalHarmonicDistortionLeft;
@property (readonly, nonatomic) int totalHarmonicDistortionRight;
@property (readonly, nonatomic) int vceMicStatusLeft;
@property (readonly, nonatomic) int vceMicStatusRight;
@property (readonly, nonatomic) NSNumber *version;

+ (int)getHMDiagnosticMeasurementStatusForValue:(unsigned char)a0;
+ (int)getHMDiagnosticStatusForValue:(unsigned char)a0;

- (id)description;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)descriptionWithLevel:(int)a0;
- (char)_isComponentDiagnosticSupported;
- (void)submitMetricsForOcclusionPolicy;
- (unsigned int)_getMinimumRequiredPayloadLength;
- (char)_hasValidMeasurementForSide:(id)a0;
- (char)_isANCScoreSupported;
- (char)_isDate:(id)a0 lesserThanOrEqualToMonths:(unsigned char)a1;
- (char)_isFirstTimeOfUseSupported;
- (long long)_minutesSinceTimestamp:(id)a0;
- (void)_prefsLoadOcclusionStats;
- (void)_prefsResetOcclusionStatsForFeatureID:(int)a0 type:(int)a1;
- (void)_prefsSaveOcclusionStats;
- (void)_resetAllOcclusionStats;
- (void)_submitMetricsForOcclusionIndicationType:(int)a0 action:(int)a1 previousIndicationCount:(unsigned int)a2 timeSinceFirstIndicationMins:(long long)a3;
- (void)_updateLeftSideFaultCountWithCloudRecord:(id)a0;
- (void)_updateRightSideFaultCountWithCloudRecord:(id)a0;
- (int)computeOcclusionResultForHearingProtection;
- (int)computeOcclusionResultForHearingTest;
- (id)getCloudRecordForCurrentFaultCount;
- (id)getOnDemandRetestReason;
- (char)hasMeasurementChangedForSide:(id)a0 withRecord:(id)a1;
- (id)initWithHMDeviceRecord:(id)a0 isNewPairing:(char)a1;
- (char)isDeviceUsedFor3MonthsOrLess;
- (char)isOcclusionDetectionSupported;
- (id)measurementInvalidReason;
- (void)occlusionIndicationShownForFeatureID:(int)a0 type:(int)a1 action:(int)a2;
- (void)resetFaultCounts;
- (char)updateFaultCountsFromCloudRecord:(id)a0;
- (void)updateWithANCLossScores:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; })a0;
- (void)updateWithDiagnosticData:(id)a0;
- (void)updateWithMeasurementData:(id)a0;
- (void)updateWithMeasurementDataLegacyVersion:(id)a0;
- (void)updateWithMeasurementResultLeft:(unsigned int)a0;
- (void)updateWithMeasurementResultRight:(unsigned int)a0;

@end

@class TIProactiveTrigger, NSString, NSUUID, NSArray, NSNumber;

@interface TIKeyboardCandidate : NSObject <NSCopying, NSSecureCoding, TIKeyboardCandidateCoding>

@property (class, copy, nonatomic) NSString *keyboardCandidateInputStringUsedWithAutofillExtraThatSignifiesOTPExtra;
@property (class, readonly) char supportsSecureCoding;

@property (nonatomic, getter=confidence) int confidence;
@property (nonatomic) unsigned int sourceMask;
@property (readonly, nonatomic) NSString *shortDescription;
@property (readonly, nonatomic) unsigned long long learningFlagsMask;
@property (readonly, nonatomic) NSString *candidate;
@property (readonly, nonatomic) NSString *latinCandidate;
@property (readonly, nonatomic) NSString *input;
@property (readonly, nonatomic) NSString *rawInput;
@property (copy, nonatomic) NSString *label;
@property (copy, nonatomic) NSString *alternativeText;
@property (copy, nonatomic) NSString *annotationText;
@property (readonly, nonatomic) NSString *applicationKey;
@property (readonly, nonatomic) NSString *applicationBundleId;
@property (readonly, nonatomic) NSString *altDSID;
@property (nonatomic) char isMeCardCandidate;
@property (readonly, nonatomic) NSUUID *stickerIdentifier;
@property (readonly, nonatomic) unsigned long long wordOriginFeedbackID;
@property (readonly, nonatomic) unsigned long long deleteCount;
@property (readonly, nonatomic) long long cursorMovement;
@property (readonly, nonatomic) char isForShortcutConversion;
@property (readonly, nonatomic) char isAutocorrection;
@property (readonly, nonatomic, getter=isContinuousPathConversion) char continuousPathConversion;
@property (readonly, nonatomic) char shouldAccept;
@property (readonly, nonatomic) char shouldInsertSpaceAfterSelection;
@property (nonatomic) unsigned int slotID;
@property (nonatomic) double secureCandidateWidth;
@property (nonatomic) unsigned long long secureCandidateHash;
@property (nonatomic) unsigned long long customInfoType;
@property (nonatomic) char isSendCurrentLocation;
@property (nonatomic) char isSecureCandidateDoubleLines;
@property (copy, nonatomic) NSArray *supplementalItemIdentifiers;
@property (nonatomic) unsigned short supplementalItemPrefix;
@property (readonly, nonatomic) NSString *inputWithoutSupplementalItemPrefix;
@property (readonly, nonatomic) char isAutocorrectionIgnoringCaseAndSupplementalItemPrefix;
@property (readonly, nonatomic) char isAutocorrectionIgnoringCaseAndDiacriticsAndSupplementalItemPrefix;
@property (readonly, nonatomic, getter=isSupplementalItemCandidate) char supplementalItemCandidate;
@property (readonly, nonatomic, getter=isExtensionCandidate) char extensionCandidate;
@property (readonly, nonatomic, getter=isEmojiCandidate) char emojiCandidate;
@property (readonly, nonatomic, getter=isStickerCandidate) char stickerCandidate;
@property (readonly, nonatomic, getter=isCompletionCandidate) char completionCandidate;
@property (readonly, nonatomic, getter=isInlineCompletionCandidate) char inlineCompletionCandidate;
@property (readonly, nonatomic, getter=isFullwidthCandidate) char fullwidthCandidate;
@property (readonly, nonatomic, getter=isFacemarkCandidate) char facemarkCandidate;
@property (readonly, nonatomic, getter=isPunctuationCompletionCandidate) char punctuationCompletionCandidate;
@property (readonly, nonatomic, getter=isPunctuationKeyCandidate) char punctuationKeyCandidate;
@property (readonly, nonatomic, getter=isOTAWordListCandidate) char OTAWordListCandidate;
@property (readonly, nonatomic, getter=isRegionalCandidate) char regionalCandidate;
@property (readonly, nonatomic, getter=isResponseKitCandidate) char responseKitCandidate;
@property (readonly, nonatomic, getter=isBilingualCandidate) char bilingualCandidate;
@property (readonly, nonatomic, getter=isAsIsCandidate) char asIsCandidate;
@property (readonly, nonatomic, getter=isWubixingConvertedByPinyin) char wubixingConvertedByPinyin;
@property (readonly, nonatomic, getter=isPrefixMatched) char prefixMatched;
@property (readonly, nonatomic, getter=isTransliterationCandidate) char transliterationCandidate;
@property (readonly, nonatomic, getter=isPartialCandidate) char partialCandidate;
@property (readonly, nonatomic, getter=isInlineCandidate) char inlineCandidate;
@property (readonly, nonatomic, getter=isMecabraCandidate) char mecabraCandidate;
@property (readonly, nonatomic) unsigned long long candidateProperty;
@property (retain, nonatomic) TIKeyboardCandidate *smartReplySourceCandidate;
@property (readonly, copy, nonatomic) NSString *responseKitCategory;
@property (readonly, nonatomic, getter=isSecureContentCandidate) char secureContentCandidate;
@property (readonly, nonatomic) TIProactiveTrigger *proactiveTrigger;
@property (nonatomic) unsigned long long indexForMetrics;
@property (readonly, nonatomic) char isAddress;
@property (readonly, nonatomic) unsigned int usageTrackingMask;
@property (nonatomic) unsigned int typingEngine;
@property (readonly, nonatomic, getter=isToucanInlineCompletionCandidate) char toucanInlineCompletionCandidate;
@property (copy, nonatomic) NSNumber *staticLinguisticLikelihood;
@property (nonatomic) char isAlternativeInput;
@property (nonatomic) char shouldHintAtAlternativeInput;
@property (copy, nonatomic) NSString *lexiconLocale;
@property (nonatomic) char isOneTimeCodeThatRequiresAuthentication;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)init;
- (char)isEqual:(id)a0;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)candidateByReplacingWithCandidate:(id)a0;
- (id)candidateByReplacingWithCandidate:(id)a0 input:(id)a1;
- (id)candidateByReplacingWithCandidate:(id)a0 input:(id)a1 rawInput:(id)a2;
- (id)candidateByReplacingWithSourceMask:(unsigned int)a0;
- (void)encodeWithCandidateResultSetCoder:(id)a0;
- (id)initWithCandidateResultSetCoder:(id)a0;
- (char)isNotAutocorrectedSinceTopCandidateVulgar;
- (char)isPunctuation;

@end

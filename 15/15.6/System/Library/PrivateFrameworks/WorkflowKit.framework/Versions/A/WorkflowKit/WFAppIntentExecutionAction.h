@class NSMutableDictionary, LNAppIntentConnectionPolicy, LNFullyQualifiedActionIdentifier, NSDictionary, NSObject, LNActionConfigurationContext, LNActionMetadata, LNUndoContext, NSString, LNAttribution, NSSet, LNActionExecutorOptions, LNSystemContext, LNConnectionPolicySignals, LNConnection, INAppIntentDescriptor;
@protocol OS_dispatch_queue;

@interface WFAppIntentExecutionAction : WFAction <LNActionExecutorDelegate, WFLinkActionProtocol, WFStandaloneShortcutAction, WFDynamicEnumerationDataSource> {
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _connectionLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _policyLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _signalsLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _actionArchivingQueueLock;
    NSDictionary *_outputDictionary;
    NSObject<OS_dispatch_queue> *_actionArchivingQueue;
}

@property (readonly, nonatomic) LNActionMetadata *metadata;
@property (readonly, nonatomic) INAppIntentDescriptor *appIntentDescriptor;
@property (readonly, nonatomic) LNConnection *connection;
@property (readonly, nonatomic) LNAppIntentConnectionPolicy *connectionPolicy;
@property (readonly, nonatomic) LNConnectionPolicySignals *connectionPolicySignals;
@property (copy, nonatomic) NSSet *fetchingDisplayRepresentationParameterKeys;
@property (readonly, nonatomic) NSMutableDictionary *dependentParameterIdentifiers;
@property (readonly, nonatomic) long long runKind;
@property (readonly, nonatomic) LNActionExecutorOptions *executorOptions;
@property (retain, nonatomic) LNSystemContext *linkSystemContext;
@property (readonly, nonatomic) NSString *displayableAppBundleIdentifier;
@property (copy, nonatomic) NSString *preferredExtensionBundleIdentifier;
@property (nonatomic) long long authenticationPolicy;
@property (readonly, nonatomic) LNActionConfigurationContext *actionConfigurationContext;
@property (nonatomic) char didRunOpensIntent;
@property (retain, nonatomic) LNAttribution *attribution;
@property (readonly, nonatomic) char actionIsExecutedFromAnotherDevice;
@property (readonly, nonatomic) char shouldSkipLoadingDefaultValue;
@property (retain, nonatomic) LNUndoContext *undoContext;
@property (retain, nonatomic) NSMutableDictionary *parameterIdentifiersNeedingValues;
@property (readonly, nonatomic) LNFullyQualifiedActionIdentifier *fullyQualifiedLinkActionIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *associatedAppBundleIdentifier;

- (void).cxx_destruct;
- (id)bundleIdentifier;
- (id)outputDictionary;
- (id)appDescriptor;
- (id)displayableAppDescriptor;
- (char)isProgressIndeterminate;
- (void)executor:(id)a0 needsValueWithRequest:(id)a1;
- (void)executor:(id)a0 environmentForViewSnippetWithCompletion:(id /* block */)a1;
- (void)executor:(id)a0 needsActionConfirmationWithRequest:(id)a1;
- (void)executor:(id)a0 needsAppProtectionUnlockWithCompletionHandler:(id /* block */)a1;
- (void)executor:(id)a0 needsConfirmationWithRequest:(id)a1;
- (void)executor:(id)a0 needsContinueInAppWithRequest:(id)a1;
- (void)executor:(id)a0 needsDisambiguationWithRequest:(id)a1;
- (void)executor:(id)a0 preferredContentSizeForViewSnippetWithCompletion:(id /* block */)a1;
- (char)executor:(id)a0 shouldRunShowOutputAction:(id)a1;
- (void)executorWillLaunchApplicationInForeground:(id)a0;
- (char)progressIsPersistentInSystemApertureForExecutor:(id)a0;
- (unsigned short)runSource;
- (void)finishRunningWithError:(id)a0;
- (void)generateShortcutRepresentation:(id /* block */)a0;
- (id)parameterMetadataForIdentifier:(id)a0;
- (id)defaultSerializedRepresentationForEnumeration:(id)a0;
- (id)enumeration:(id)a0 accessoryImageForPossibleState:(id)a1;
- (id)enumeration:(id)a0 localizedLabelForPossibleState:(id)a1;
- (id)enumeration:(id)a0 localizedSubtitleLabelForPossibleState:(id)a1;
- (char)enumeration:(id)a0 shouldStripSenstitiveContentFromValue:(id)a1;
- (char)enumerationShouldAlwaysReloadPossibleStates:(id)a0;
- (void)generateStandaloneShortcutRepresentation:(id /* block */)a0;
- (void)loadDefaultSerializedRepresentationForEnumeration:(id)a0 completionHandler:(id /* block */)a1;
- (void)loadPossibleStatesForEnumeration:(id)a0 searchTerm:(id)a1 completionHandler:(id /* block */)a2;
- (id)localizedDefaultOutputNameWithContext:(id)a0;
- (char)populatesInputFromInputParameter;
- (char)requiresUnlock;
- (char)shouldLoadDefaultStateAsynchronouslyForEnumeration:(id)a0;
- (char)visibleForUse:(long long)a0;
- (id)copyWithSerializedParameters:(id)a0;
- (void)getLinkActionForArchivingFallingBackToDefaultValue:(char)a0 completionHandler:(id /* block */)a1;
- (id)externalMetricsActionIdentifier;
- (id)sessionKitSessionInvocationType;
- (id)externalMetricsBundleIdentifier;
- (char)shouldLocalizeValueForSelector:(SEL)a0;
- (id)actionArchivingQueue;
- (id)alertForLinkActionConfirmationWithActionMetadata:(id)a0 dialogString:(id)a1 request:(id)a2;
- (void)alertForLinkActionConfirmationWithParameterMetadata:(id)a0 dialogString:(id)a1 request:(id)a2 completionHandler:(id /* block */)a3;
- (id)alertForLinkConfirmationDialogRequest:(id)a0 preferredStyle:(long long)a1 handler:(id /* block */)a2;
- (void)askForParameterValueForParameterName:(id)a0 request:(id)a1 dialogString:(id)a2;
- (id)backingActionIdentifiers;
- (void)completeLoadingPossibleStatesForEnumerationParameter:(id)a0 result:(id)a1 error:(id)a2 completionHandler:(id /* block */)a3;
- (void)configureParameter:(id)a0;
- (void)confirmActionWithRequest:(id)a0 dialogString:(id)a1;
- (void)confirmContinueInAppWithRequest:(id)a0 dialogString:(id)a1;
- (void)confirmParameterValueForParameterName:(id)a0 request:(id)a1 dialogString:(id)a2;
- (id)copyForProcessing;
- (id)createStateForParameter:(id)a0 fromSerializedRepresentation:(id)a1;
- (id)defaultSerializedRepresentationForEnumeration:(id)a0 result:(id)a1;
- (void)disambiguateParameterForParameterName:(id)a0 request:(id)a1 dialogString:(id)a2;
- (id)entityMetadataForIdentifier:(id)a0;
- (void)fetchMissingDisplayRepresentationValuesWithCompletionHandler:(id /* block */)a0;
- (void)getLinkActionForArchivingWithCompletionHandler:(id /* block */)a0;
- (void)getLinkActionWithProcessedParameters:(id)a0 completionHandler:(id /* block */)a1;
- (void)getLinkActionWithProcessedParameters:(id)a0 forFocusConfiguration:(char)a1 completionHandler:(id /* block */)a2;
- (void)getLinkActionWithProcessedParameters:(id)a0 forFocusConfiguration:(char)a1 fallingBackToDefaultValue:(char)a2 completionHandler:(id /* block */)a3;
- (void)getValueForParameterData:(id)a0 ofProcessedParameters:(id)a1 completionHandler:(id /* block */)a2;
- (void)getValueForParameterData:(id)a0 ofProcessedParameters:(id)a1 fallingBackToDefaultValue:(char)a2 completionHandler:(id /* block */)a3;
- (id)initWithIdentifier:(id)a0 metadata:(id)a1 definition:(id)a2 serializedParameters:(id)a3 appIntentDescriptor:(id)a4 fullyQualifiedActionIdentifier:(id)a5;
- (char)isApprovedForPublicShortcutsDrawer;
- (id)linkActionWithParameters:(id)a0;
- (void)loadDefaultResultForEnumeration:(id)a0 completionHandler:(id /* block */)a1;
- (void)loadDynamicResultForEnumeration:(id)a0 searchTerm:(id)a1 completionHandler:(id /* block */)a2;
- (void)loadDynamicResultForEnumeration:(id)a0 searchTerm:(id)a1 optionsProviderReference:(id)a2 completionHandler:(id /* block */)a3;
- (void)loadPossibleStatesForEnumeration:(id)a0 searchTerm:(id)a1 optionsProviderReference:(id)a2 completionHandler:(id /* block */)a3;
- (char)mightSuppressRunningProgress;
- (id)parametersNeedingDisplayRepresentation;
- (id)postProcessToolKitProcessedValue:(id)a0 forParameter:(id)a1;
- (void)processEncodedValue:(id)a0 withToolKitInvocation:(id)a1 forParameter:(id)a2 completionHandler:(id /* block */)a3;
- (void)processValueForParameter:(id)a0 withToolKitInvocation:(id)a1 completionHandler:(id /* block */)a2;
- (char)shouldAskForValuesWhileProcessingParameterStates;
- (char)shouldStripSensitiveContentFromParameterSerialization;
- (void)showChronoControlIfPossibleForIntent:(id)a0 completionHandler:(id /* block */)a1;
- (char)skipExecutingInSiri;
- (Class)toolkitValueClassForParameter:(id)a0;
- (id)valueForParameterData:(id)a0 withParameterState:(id)a1;
- (char)valueShouldStripSensitiveContent:(id)a0;
- (void)willBeginProcessingParameterStates;

@end

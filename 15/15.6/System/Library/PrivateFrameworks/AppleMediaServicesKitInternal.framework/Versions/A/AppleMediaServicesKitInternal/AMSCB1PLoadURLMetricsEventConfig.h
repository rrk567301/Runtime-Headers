@interface AMSCB1PLoadURLMetricsEventConfig : AMSCB1PBridgeDependent {
    struct optional<AMSCore::LoadURLMetricsEventConfig> { union { char __null_state_; struct LoadURLMetricsEventConfig { struct expected<double, AMSCore::Error> { struct __conditional_no_unique_address<true, std::__expected_base<double, AMSCore::Error>::__repr> { struct __repr { struct __conditional_no_unique_address<false, std::__expected_base<double, AMSCore::Error>::__union_t> { union __union_t { double __val_; struct Error { void /* function */ **_vptr$exception; struct __libcpp_refstring { char *__imp_; } __imp_; struct error_code { int __val_; struct error_category *__cat_; } __ec_; struct map<std::string, AMSCore::Any, std::less<void>, std::allocator<std::pair<const std::string, AMSCore::Any>>> { struct __tree<std::__value_type<std::string, AMSCore::Any>, std::__map_value_compare<std::string, std::__value_type<std::string, AMSCore::Any>, std::less<void>>, std::allocator<std::__value_type<std::string, AMSCore::Any>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, AMSCore::Any>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, AMSCore::Any>, std::less<void>>> { unsigned long long __value_; } __pair3_; } __tree_; } mUserInfo; struct shared_ptr<AMSCore::Error> { struct Error *__ptr_; struct __shared_weak_count *__cntrl_; } mCause; } __unex_; } __v; } __union_; BOOL __has_val_; } __v; } __repr_; } cachedResponseSamplingRate; double samplingRate; struct duration<long long, std::ratio<1, 1000>> { long long __rep_; } sessionDuration; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char __is_long_ : 1; unsigned char __size_ : 7; } ; char __padding_[0]; char __data_[23]; } __s; struct __long { struct { unsigned char __is_long_ : 1; unsigned long __cap_ : 63; } ; unsigned long long __size_; char *__data_; } __l; } __value_; } __r_; } topic; } __val_; } ; BOOL __engaged_; } _config;
}

- (void).cxx_destruct;
- (id).cxx_construct;

@end

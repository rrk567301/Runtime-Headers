@class NSView, NSString, NSArray, NSDate, ABAddressBook, ABSimilarRecordMerger, NSSecureTextField, ABAccountStatus, ABWorkQueue, ABAccountPersistence;

@interface PHXSource : NSObject <ABAccountPersistenceDelegate, ABWorkQueueDelegate, NSCopying> {
    char _addressBookWasSetManually;
    NSView *configurationView;
    NSSecureTextField *passwordField;
    ABAccountPersistence *_persistence;
    NSDate *_lastRefreshDate;
    char _busy;
    char _supportsDistributionLists;
    char _meCardHasChanged;
    char _shouldSendStatusChangeNotifications;
    char _isSetupComplete;
    NSArray *_allocationBacktrace;
}

@property (getter=isUnloaded) char unloaded;
@property char primitiveEnabled;
@property (retain, nonatomic) ABAddressBook *addressBook;
@property char enabled;
@property (readonly) char shouldSyncWithServer;
@property (readonly, copy, nonatomic) NSString *path;
@property (copy) NSString *name;
@property (readonly) NSString *displayName;
@property (copy) NSString *subname;
@property (readonly, copy) NSString *uid;
@property (readonly) int searchMethod;
@property (readonly) NSView *configurationView;
@property char hasChanges;
@property char canCreateGroups;
@property char canCreatePeople;
@property (readonly) char canDeletePeople;
@property (readonly) ABWorkQueue *workQueue;
@property (retain) NSArray *personConstraints;
@property double periodicRefreshInterval;
@property double pushRefreshInterval;
@property (retain) NSDate *lastPushSubscription;
@property (readonly) char supportsDataMigration;
@property (readonly) char isDeletable;
@property (retain) ABAccountStatus *currentStatus;
@property (retain) ABSimilarRecordMerger *similarRecordMerger;
@property char shouldMergeServerContactsAtNextSync;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sources;
+ (id)syncLog;
+ (id)testConnection:(id)a0;
+ (char)_userCanConfigure;
+ (char)accountExistsForMailWithRootFolderId:(id)a0 userName:(id)a1 serverAddress:(id)a2;
+ (char)accountExistsForiCalWithRootFolderId:(id)a0 userName:(id)a1 serverAddress:(id)a2;
+ (Class)accountPersistenceClass;
+ (int)addKeychainItemForPassword:(id)a0 user:(id)a1 service:(id)a2 access:(struct __SecAccess { } *)a3;
+ (id)addressBookInitOptions;
+ (id)allSources;
+ (char)autocompletionProvidedForClassName:(id)a0;
+ (id)autocompletionSources;
+ (id)autodiscoverSettings:(id)a0;
+ (id)autodiscoveryFutureWithSettings:(id)a0;
+ (char)autodiscoverySupportedForClassName:(id)a0;
+ (id)availablePluginClasses;
+ (int)backingStoreType;
+ (void)cancelAutodiscovery;
+ (void)cancelTestConnection;
+ (id)contactsBySource:(id)a0;
+ (id)customizationPolicy;
+ (id)defaultPersonConstraints;
+ (Class)defaultPersonConstraintsClass;
+ (id)defaultSource;
+ (id)displayNameForClassName:(id)a0;
+ (id)exchangeSourcesWithRootFolderId:(id)a0;
+ (id)exchangeSourcesWithUsername:(id)a0 host:(id)a1;
+ (id)existingSourceWithUID:(id)a0;
+ (id)infoForClassName:(id)a0;
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)localSource;
+ (Class)localSourceClass;
+ (id)localSourcePersistence;
+ (id)makeSearchPolicyWithAccount:(id)a0;
+ (id)migrationLog;
+ (id)passwordForConfiguration:(id)a0;
+ (id)passwordForUser:(id)a0 server:(id)a1 port:(unsigned short)a2 protocol:(void *)a3 error:(id *)a4;
+ (id)passwordForUser:(id)a0 service:(id)a1 error:(id *)a2;
+ (id)persistenceBackendWithAccountComponents:(id)a0;
+ (id)persistenceWithAccountComponents:(id)a0;
+ (id)persistenceWithUID:(id)a0 account:(id)a1;
+ (id)persistentPathForUID:(id)a0;
+ (void)postAccountDidChangeNotificationsWithUID:(id)a0;
+ (id)recordForUniqueId:(id)a0;
+ (id)recordsMatchingSearchElement:(id)a0;
+ (char)removePasswordForUser:(id)a0 server:(id)a1 port:(unsigned short)a2 protocol:(void *)a3 error:(id *)a4;
+ (char)removePasswordForUser:(id)a0 service:(id)a1 error:(id *)a2;
+ (id)searchForString:(id)a0 delegate:(id)a1 callback:(SEL)a2;
+ (Class)searchOperationClass;
+ (id)serverAddressPlaceholderForClassName:(id)a0;
+ (char)setPassword:(id)a0 forConfiguration:(id)a1;
+ (char)setPassword:(id)a0 forUser:(id)a1 server:(id)a2 port:(unsigned short)a3 protocol:(void *)a4 access:(struct __SecAccess { } *)a5 error:(id *)a6;
+ (char)setPassword:(id)a0 forUser:(id)a1 service:(id)a2 access:(struct __SecAccess { } *)a3 error:(id *)a4;
+ (char)setPassword:(id)a0 forUser:(id)a1 service:(id)a2 error:(id *)a3;
+ (char)setupAssistantCreationAllowedForClassName:(id)a0;
+ (id)sourceAtPath:(id)a0;
+ (Class)sourceClassForClassName:(id)a0;
+ (id)sourceForContact:(id)a0;
+ (id)sourceForObject:(id)a0;
+ (id)sourcesForManagedObjects:(id)a0;
+ (id)sourcesOfType:(id)a0;
+ (id)testConnectionFuture:(id)a0;
+ (char)testConnectionSupportedForClassName:(id)a0;
+ (id)uncachedSourceForClassName:(id)a0 uid:(id)a1 account:(id)a2;
+ (int)updateKeychainItemForPassword:(id)a0 user:(id)a1 service:(id)a2;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (long long)compare:(id)a0;
- (id)password;
- (void)setPassword:(id)a0;
- (id)valueForUndefinedKey:(id)a0;
- (id)children;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)unload;
- (char)isBusy;
- (void)setBusy:(char)a0;
- (id)persistence;
- (void)awakeFromInsert;
- (id)accountType;
- (char)isSearchable;
- (void)setSearchable:(char)a0;
- (int)sourceType;
- (void)updateStatus:(id)a0;
- (id)persistentStoreURL;
- (void)_preheatGroups:(id)a0;
- (char)canRenameGroup:(id)a0;
- (double)minimumIntervalBetweenRefreshes;
- (char)canRemoveGroup:(id)a0;
- (id)imagesFolderURL;
- (void)openInternetAccountsPreferences;
- (void)sendStatusDidChangeNotification;
- (char)setLastSyncDateWithAddressBook:(id)a0;
- (void)willDeleteRecordsWithUniqueIDs:(id)a0;
- (void)_exportSummaryOfDatabaseContents;
- (void)_firstMergeCompleted;
- (char)_isMigrating;
- (id)_localRecordsForMergingInAddressBook:(id)a0;
- (id)_mergeSimilarRecords:(id)a0;
- (void)_persistValues;
- (void)_persistValuesAndPostDidChangeNotifcation:(char)a0;
- (id)_persistentStoreURL;
- (void)_prepareRecordMergerForSyncWithAddressBook:(id)a0;
- (char)_shouldCreateWorkQueue;
- (void)_sourceShouldRefresh;
- (void)_sourceShouldRefreshImmediately:(char)a0;
- (char)_userCanConfigure;
- (void)abWorkQueue:(id)a0 operationCountDidChange:(unsigned long long)a1;
- (id)acAccountTypeIdentifier;
- (id)acParentAccountTypeIdentifier;
- (void)addressBook:(id)a0 didDeleteRecords:(id)a1;
- (void)addressBook:(id)a0 didInsertRecords:(id)a1;
- (void)addressBook:(id)a0 didUpdateRecords:(id)a1;
- (void)addressBook:(id)a0 willDeleteRecords:(id)a1;
- (void)addressBook:(id)a0 willInsertRecords:(id)a1;
- (void)addressBook:(id)a0 willRemoveRecordsWithUniqueIDs:(id)a1;
- (void)addressBook:(id)a0 willUpdateRecords:(id)a1;
- (id)addressBookInitOptions;
- (void)addressBookSaved:(id)a0;
- (void)anAddressBookDidSave:(id)a0;
- (void)anAddressBookWillSave:(id)a0;
- (void)applyChanges:(id)a0;
- (void)applyChangesAndRefresh:(char)a0;
- (void)assertIsUnloaded;
- (void)awakeFromLoad;
- (void)beginPhotoUpdatesForPeople:(id)a0 completionHandler:(id /* block */)a1;
- (char)canEditGroup:(id)a0;
- (char)canEditPerson:(id)a0;
- (id)constraintsForRecordClass:(Class)a0;
- (int)containmentPersonality;
- (id)databaseChangeNotificationName;
- (id)delegateInfos;
- (void)deletePersistentValues;
- (void)didImportPeople:(id)a0 intoGroup:(id)a1;
- (void)displayNameChanged;
- (void)finalizeAccountSetup;
- (void)finalizeAccountSetupWithDictionary:(id)a0;
- (void)generateMetadataWithChangedObjectsInContext:(id)a0;
- (void)handlePushNotification:(id)a0;
- (char)includeSubscribedGroupsInChildItems;
- (id)initWithUID:(id)a0 path:(id)a1 persistence:(id)a2;
- (id)initWithUID:(id)a0 persistence:(id)a1;
- (id)labelsConstraint;
- (void)loadConfigurationView;
- (id)makeAddressBookAtPath;
- (id)managedAddressBooks;
- (void)meDidChange:(id)a0;
- (void)migrationLog:(id)a0;
- (void)mocDidSave:(id)a0;
- (void)mocWillSave:(id)a0;
- (void)myDatabaseChangedExternally:(id)a0;
- (id)persistentRepresentation;
- (char)record:(id)a0 validateValue:(id *)a1 forProperty:(id)a2 error:(id *)a3;
- (id)recordIDsThatBelongToMe:(id)a0;
- (void)releaseTopLevelObjects;
- (void)removeGroup:(id)a0;
- (void)renewPushSubscriptionAtURL:(id)a0;
- (void)sanityCheckNotificationRecords:(id)a0 notification:(id)a1;
- (void)searchForTerms:(id)a0 delegate:(id)a1;
- (id)searchOperationWithString:(id)a0 delegate:(id)a1;
- (id)searchOperationWithTerms:(id)a0 delegate:(id)a1;
- (id)secureServiceName;
- (id)secureUserName;
- (void)setShowProgressIndicator:(char)a0;
- (char)shouldOfferRemoveContacts:(id)a0 fromGroup:(id)a1;
- (char)shouldSendStatusDidChangeNotifications;
- (char)shouldUnload;
- (long long)sortOrderForGroup:(id)a0;
- (void)sourceDidSelect:(id)a0;
- (id)sourceIcon;
- (void)sourceShouldRefresh:(id)a0;
- (void)startObservingAddressBookSaveNotifications;
- (void)stopObservingAddressBookSaveNotifications;
- (char)supportsDistributionLists;
- (void)updateProgressIndicatorsForOperationCount:(unsigned long long)a0;
- (void)willUnload;
- (void)workQueueOperationCountDidChange:(unsigned long long)a0;

@end

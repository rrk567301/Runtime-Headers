@class NSCache, KHThemeProvider, UXBarButtonItem, NSPopUpButton, NSMutableString, NSMenu, NSProgress, NSProgressIndicator, NSString, NSSet, KHThemeProviderConfig, NSArray, KHThemeCatalog, KHFilterControl;
@protocol KHThemeChooserViewControllerDelegate;

@interface KHThemeChooserViewController : UXCollectionViewController <KHThemeCatalogDelegate, KHFilterControlDelegate, UXCollectionViewDataSource, UXCollectionViewDelegate> {
    NSMutableString *_searchString;
    NSString *_selectedCategory;
    char _viewWillAppear;
    NSPopUpButton *_categoryPopup;
    NSMenu *_languageMenu;
    KHFilterControl *_filterControl;
    NSArray *_availableFilters;
    NSString *_currentProductCode;
    NSProgressIndicator *_navbarProgressIndicator;
    UXBarButtonItem *_openThemeButtonItem;
    double _cancelButtonLastHitTime;
    double _createWithThemeButtonLastHitTime;
    KHThemeProviderConfig *_selectedThemeProviderConfig;
    struct CGSize { double width; double height; } _calculatedContentSize;
    double _calculatedInteritemMargin;
    double _calculatedEdgeMargin;
    double _collectionViewWidth;
    char _ignoreSelectionChanges;
    char _stopAcceptingEvents;
    id /* block */ _waitingForTransitionCompletionBlock;
    NSCache *_generatedPreviews;
    NSProgress *_scanProgress;
}

@property (readonly, nonatomic) UXBarButtonItem *selectButtonItem;
@property (readonly, nonatomic) UXBarButtonItem *navBarProgressIndicatorBarButtonItem;
@property (readonly, nonatomic) NSArray *filterToolbarItems;
@property (readonly, nonatomic) KHThemeProvider *selectedThemeProvider;
@property (copy, nonatomic) NSSet *productCodes;
@property (copy, nonatomic) KHThemeCatalog *themeCatalog;
@property (copy, nonatomic) NSString *applyButtonTitle;
@property (nonatomic) char shouldExpectExplicitTransition;
@property (nonatomic) char downloadThemeIfNotLocal;
@property (nonatomic) char activityIndicatorVisible;
@property (readonly, nonatomic) UXBarButtonItem *cancelButtonItem;
@property (weak, nonatomic) id<KHThemeChooserViewControllerDelegate> delegate;
@property (copy, nonatomic) id /* block */ filter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (double)collectionView:(id)a0 layout:(id)a1 minimumInteritemSpacingForSectionAtIndex:(long long)a2;
- (void)_configureAccessibility;
- (void)cancelOperation:(id)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })collectionView:(id)a0 layout:(id)a1 insetForSectionAtIndex:(long long)a2;
- (struct CGSize { double x0; double x1; })collectionView:(id)a0 layout:(id)a1 sizeForItemAtIndexPath:(id)a2;
- (long long)collectionView:(id)a0 numberOfItemsInSection:(long long)a1;
- (void)keyDown:(id)a0;
- (void)reloadData;
- (void)viewDidAppear;
- (void)viewDidLoad;
- (void)viewWillAppear;
- (void)viewWillDisappear;
- (void)viewWillLayout;
- (void)_cancel:(id)a0;
- (void)collectionView:(id)a0 didSelectItemAtIndexPath:(id)a1;
- (id)collectionView:(id)a0 cellForItemAtIndexPath:(id)a1;
- (void)reachabilityChanged:(id)a0;
- (void)_prepareForAnimationInContext:(id)a0 completion:(id /* block */)a1;
- (void)_updateContentInsetFromLayoutGuides;
- (void)collectionView:(id)a0 itemWasDoubleClickedAtIndexPath:(id)a1 withEvent:(id)a2;
- (void)didUpdateLayoutGuides;
- (void)_resetTimeoutsForActionButtons:(char)a0;
- (void)_cancelAllInProgressDownloads;
- (void)_configureCurrentProductForFilter:(id /* block */)a0;
- (void)_createWithThemeProvider:(id)a0;
- (void)_hydrateThemeFilterOptions;
- (void)_languageFilterDidChange:(id)a0;
- (id)_providerAtIndexPath:(id)a0;
- (void)_reprioritizeQueue;
- (void)_resetSizeCalculations;
- (void)_resetTimeoutsForActionButtons;
- (void)_restoreSelectionWithFocus:(char)a0;
- (void)_runCalculations;
- (void)_runCalculationsIfNeeded;
- (void)_saveSelectionForProvider:(id)a0;
- (void)_scanForNewCatalogs;
- (void)_selectCategory:(id)a0;
- (void)_setupLanguageMenuFilter;
- (void)_setupToolbar;
- (void)_startCatalogLoad;
- (void)_stopCatalogLoad;
- (void)_teardownAccessibility;
- (void)_utilizeThemeFromOpenDialog:(id)a0;
- (void)filterControl:(id)a0 didSelectItemAtIndex:(long long)a1;
- (id)initWithProductCodes:(id)a0 andCategory:(id)a1;
- (void)resetTimeoutsForActionButtons;
- (char)selectThemeProviderWithThemeIdentifier:(id)a0;
- (char)selectThemeProviderWithThemePreviewIdentifier:(id)a0;
- (void)themeCatalog:(id)a0 changedCategory:(id)a1 completedThemeConfigurations:(id)a2;
- (void)themeCatalog:(id)a0 changedFilterToCompletedThemeConfigurations:(id)a1;
- (void)themeCatalog:(id)a0 readyThemeConfigurations:(id)a1 indicies:(id)a2;
- (void)themeCatalog:(id)a0 themeProviderConfigFailedToLoad:(id)a1 error:(id)a2;
- (void)themeCatalogDidBeginLoading:(id)a0 withCompletedThemeConfigurations:(id)a1;
- (void)themeCatalogDidFinishLoading:(id)a0;
- (void)themeCatalogLoadWasCancelled:(id)a0;

@end

@class NSRecursiveLock, NSString, NSArray, NSMutableDictionary, NSSet, NSLock, KHColor;

@interface KHTreatment : KHModel <KHJSONGeneratorProtocol> {
    NSString *_name;
    long long _categoryId;
    long long _hidden;
    NSString *_upperLeftInset;
    NSString *_upperRightInset;
    NSString *_lowerLeftInset;
    NSString *_lowerRightInset;
    double _upperLeftRadius;
    double _upperRightRadius;
    double _lowerLeftRadius;
    double _lowerRightRadius;
    double _upperScaleThreshold;
    double _upperScaleFactor;
    double _lowerScaleThreshold;
    double _lowerScaleFactor;
    long long _oval;
    long long _selectionStyle;
    long long _sequence;
    NSString *_conversionName;
    char _useIntegralBounds;
    NSString *_onlineRepresentation;
    struct { double x; double y; char isRelativeX; char isRelativeY; } _upperLeftInsetPoint;
    struct { double x; double y; char isRelativeX; char isRelativeY; } _upperRightInsetPoint;
    struct { double x; double y; char isRelativeX; char isRelativeY; } _lowerLeftInsetPoint;
    struct { double x; double y; char isRelativeX; char isRelativeY; } _lowerRightInsetPoint;
    NSArray *_backgroundLayers;
    NSArray *_foregroundLayers;
    NSLock *_layersLock;
    NSMutableDictionary *_assetCache;
    NSMutableDictionary *_thumbnailCache;
    NSMutableDictionary *_backgroundBehaviorTraitMap;
    NSArray *_behaviorBindings;
    NSString *_traitString;
    NSSet *_traits;
    NSRecursiveLock *_traitsLock;
    KHColor *_averageColor;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)treatmentWithName:(id)a0 fromDatabase:(id)a1;
+ (id)allTreatmentsFromDatabase:(id)a0;
+ (id)generateModelFromJSON:(id)a0 inDatabase:(id)a1 bundlePath:(id)a2;
+ (id)missingThemeBackgroundTreatmentFromDatabase:(id)a0;
+ (id)modifyModelFromJSON:(id)a0 inDatabase:(id)a1 bundlePath:(id)a2;
+ (void)preloadTreatmentsForFrames:(id)a0;
+ (id)treatmentForKey:(long long)a0 fromDatabase:(id)a1;
+ (id)treatmentWithConversionName:(id)a0 fromDatabase:(id)a1;

- (void)dealloc;
- (id)init;
- (id)name;
- (void)setHidden:(long long)a0;
- (void)setName:(id)a0;
- (void)remove;
- (long long)sequence;
- (void)setSequence:(long long)a0;
- (void)unload;
- (id)accessibilityRoleDescription;
- (id)fillColor;
- (long long)selectionStyle;
- (void)setSelectionStyle:(long long)a0;
- (id)traits;
- (long long)hidden;
- (void)encodeWithDictionary:(id)a0;
- (id)behaviors;
- (long long)categoryId;
- (id)primaryTextColor;
- (id)secondaryTextColor;
- (id)treeDescription;
- (id)backgroundLayers;
- (id)allAssets;
- (void)setCategoryId:(long long)a0;
- (id)JSONRepresentation;
- (id)allLayers;
- (char)isOval;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })backgroundRectForFrame:(id)a0 atScale:(double)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })foregroundRectForFrame:(id)a0 atScale:(double)a1;
- (id)lowerRightInset;
- (struct { double x0; char x1; double x2; char x3; double x4; char x5; double x6; char x7; })safeRectMarginForFrame:(id)a0 atScale:(double)a1;
- (double)upperLeftRadius;
- (char)hasLayerOfType:(unsigned long long)a0;
- (double)lowerLeftRadius;
- (void)setTraitString:(id)a0;
- (id)upperRightInset;
- (struct CGPath { } *)_createPathForFrame:(id)a0 atScale:(double)a1;
- (void)_drawLayersInSequenceForPaths:(id)a0 inContext:(struct CGContext { } *)a1 layers:(id)a2 environment:(id)a3 scale:(double)a4;
- (id)_thumbnailOfType:(unsigned long long)a0 forceDynamic:(char)a1;
- (void)accumulateBackgroundBehaviorForTraitName:(id)a0 key:(id)a1 keyType:(unsigned long long)a2 value:(id)a3 valueType:(id)a4;
- (void)addBackgroundLayer:(id)a0;
- (void)addForegroundLayer:(id)a0;
- (id)averageColor;
- (double)backgroundColorAverage;
- (id)backgroundDrawingLayers;
- (char)backgroundLayersAreMaskingContent;
- (id)behaviorBindings;
- (id)brandingFillColor;
- (void)cacheCategoryId:(long long)a0;
- (void)cacheConversionName:(id)a0;
- (void)cacheHidden:(long long)a0;
- (void)cacheLowerLeftInset:(id)a0;
- (void)cacheLowerLeftRadius:(double)a0;
- (void)cacheLowerRightInset:(id)a0;
- (void)cacheLowerRightRadius:(double)a0;
- (void)cacheLowerScaleFactor:(double)a0;
- (void)cacheLowerScaleThreshold:(double)a0;
- (void)cacheName:(id)a0;
- (void)cacheOnlineRepresentation:(id)a0;
- (void)cacheOval:(long long)a0;
- (void)cacheSelectionStyle:(long long)a0;
- (void)cacheSequence:(long long)a0;
- (void)cacheTraitString:(id)a0;
- (void)cacheUpperLeftInset:(id)a0;
- (void)cacheUpperLeftRadius:(double)a0;
- (void)cacheUpperRightInset:(id)a0;
- (void)cacheUpperRightRadius:(double)a0;
- (void)cacheUpperScaleFactor:(double)a0;
- (void)cacheUpperScaleThreshold:(double)a0;
- (void)cacheUseIntegralBounds:(char)a0;
- (void)clearThumbnailCacheOfType:(unsigned long long)a0;
- (id)colorBehaviorForAttributeKey:(id)a0;
- (id)contentMaskAsset;
- (id)conversionName;
- (void)createAccumulatedBackgroundBehaviors;
- (struct CGPath { } *)createClippingPathForFrame:(id)a0 atScale:(double)a1 treatmentFactor:(double)a2;
- (struct CGPath { } *)createClippingPathForFrame:(id)a0 atScale:(double)a1 treatmentFactor:(double)a2 inset:(struct { double x0; double x1; char x2; char x3; })a3;
- (void)createThumbnailAssetOfType:(unsigned long long)a0;
- (id)deepCopyInDatabase:(id)a0;
- (void)drawAllLayersInSequenceForPaths:(id)a0 inContext:(struct CGContext { } *)a1 environment:(id)a2 scale:(double)a3;
- (void)drawBackgroundLayersInContext:(struct CGContext { } *)a0 environment:(id)a1 forFrame:(id)a2 scale:(double)a3;
- (void)drawBackgroundLayersInContext:(struct CGContext { } *)a0 environment:(id)a1 forPath:(struct CGPath { } *)a2 scale:(double)a3;
- (void)drawForegroundLayersInContext:(struct CGContext { } *)a0 environment:(id)a1 forFrame:(id)a2 scale:(double)a3;
- (void)drawForegroundLayersInContext:(struct CGContext { } *)a0 environment:(id)a1 forPath:(struct CGPath { } *)a2 scale:(double)a3;
- (void)drawLayers:(id)a0 inContext:(struct CGContext { } *)a1 environment:(id)a2 forPath:(struct CGPath { } *)a3 scale:(double)a4 scaleFactor:(double)a5;
- (void)drawLayers:(id)a0 inContext:(struct CGContext { } *)a1 environment:(id)a2 forPath:(struct CGPath { } *)a3 scale:(double)a4 scaleFactor:(double)a5 flipped:(char)a6;
- (void)evaluateBindings;
- (void)flushLayers;
- (id)foregroundDrawingLayers;
- (id)foregroundLayers;
- (id)frameTreatmentFillColor;
- (char)isSimilarToModel:(id)a0 skippingFields:(id)a1 differences:(id *)a2;
- (void)loadBehaviorBindingsForTarget:(id)a0;
- (void)loadTraits;
- (id)lowerLeftInset;
- (double)lowerRightRadius;
- (double)lowerScaleFactor;
- (double)lowerScaleThreshold;
- (id)modelsUsingTreatment;
- (id)onlineRepresentation;
- (long long)oval;
- (id)overrideImageOfType:(unsigned long long)a0;
- (void)pasteAppliedBehavior:(id)a0;
- (struct { double x0; char x1; double x2; char x3; double x4; char x5; double x6; char x7; })safeRectMarginForPath:(struct CGPath { } *)a0 atScale:(double)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionRectForFrame:(id)a0 scale:(double)a1;
- (void)setBehaviorBindings:(id)a0;
- (void)setConversionName:(id)a0;
- (void)setLowerLeftInset:(id)a0;
- (void)setLowerLeftRadius:(double)a0;
- (void)setLowerRightInset:(id)a0;
- (void)setLowerRightRadius:(double)a0;
- (void)setLowerScaleFactor:(double)a0;
- (void)setLowerScaleThreshold:(double)a0;
- (void)setOnlineRepresentation:(id)a0;
- (void)setOval:(long long)a0;
- (void)setUpperLeftInset:(id)a0;
- (void)setUpperLeftRadius:(double)a0;
- (void)setUpperRightInset:(id)a0;
- (void)setUpperRightRadius:(double)a0;
- (void)setUpperScaleFactor:(double)a0;
- (void)setUpperScaleThreshold:(double)a0;
- (void)setUseIntegralBounds:(char)a0;
- (long long)sortByDefault:(id)a0;
- (long long)sortById:(id)a0;
- (id)stringFromLayerAttributeAssetId:(long long)a0;
- (id)stringFromTreatmentLayers:(id)a0;
- (id)thumbnailAssetOfType:(unsigned long long)a0;
- (id)thumbnailAssetPathOfType:(unsigned long long)a0;
- (id)thumbnailAssetPathOfType:(unsigned long long)a0 backingScaleFactor:(double)a1;
- (id)thumbnailOfType:(unsigned long long)a0;
- (id)traitString;
- (id)treatmentFrameLayersWithContentEntityClass:(id)a0;
- (id)treatmentLayersForLayerClass:(unsigned long long)a0;
- (double)treatmentScaleFactorForFrame:(id)a0;
- (id)upperLeftInset;
- (double)upperRightRadius;
- (double)upperScaleFactor;
- (double)upperScaleThreshold;
- (char)useIntegralBounds;

@end

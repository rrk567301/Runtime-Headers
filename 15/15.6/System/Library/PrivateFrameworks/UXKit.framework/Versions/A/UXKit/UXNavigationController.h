@class NSGestureRecognizer, _UXContainerView, NSDictionary, UXTransitionController, NSMutableArray, UXNavigationBar, NSLayoutConstraint, NSString, UXView, NSVisualEffectView, UXViewController, NSArray, _UXViewControllerOneToOneTransitionContext, UXToolbar, _UXWindowState;
@protocol _UXAccessoryBarContainer, UXNavigationControllerDelegate;

@interface UXNavigationController : UXViewController <UXToolbarDelegatePrivate, NSMenuDelegate> {
    NSMutableArray *_navigationRequests;
    NSMutableArray *_targetViewControllers;
    NSMutableArray *_currentViewControllers;
    UXNavigationBar *_navigationBar;
    UXToolbar *_accessoryBar;
    UXToolbar *_toolbar;
    UXToolbar *_subtoolbar;
    UXToolbar *_scopeBar;
    struct { unsigned char willShowViewController : 1; unsigned char didShowViewController : 1; unsigned char interactionControllerForAnimationController : 1; unsigned char animationControllerForOperation : 1; unsigned char shouldBeginInteractivePopFromViewControllerToViewController : 1; unsigned char shouldPopFromViewControllerToViewController : 1; } _delegateFlags;
    char _isPerformingToolbarsChanges;
    struct { char toolbarItems; char subtoolbarItems; char scopeBarItems; char positions; char visibility; char appearance; } _toolbarsNeedUpdateFlags;
}

@property (class, nonatomic) char useIndividualNSToolbarItems;
@property (class, nonatomic) char useNSSearchToolbarItem;
@property (class, nonatomic) char allowToolbarCustomization;

@property (retain, nonatomic) Class navigationBarClass;
@property (retain, nonatomic) Class toolbarClass;
@property (retain, nonatomic) _UXWindowState *windowState;
@property (retain, nonatomic) _UXContainerView *containerView;
@property (retain, nonatomic) NSMutableArray *addedConstraints;
@property (retain, nonatomic) NSLayoutConstraint *topConstraint;
@property (retain, nonatomic) NSLayoutConstraint *bottomConstraint;
@property (retain, nonatomic) NSLayoutConstraint *navigationBarTopConstraint;
@property (retain, nonatomic) NSArray *navigationBarConstraints;
@property (retain, nonatomic) NSLayoutConstraint *toolbarVerticalConstraint;
@property (retain, nonatomic) NSLayoutConstraint *toolbarLeadingConstraint;
@property (retain, nonatomic) NSLayoutConstraint *topViewControllerLeftConstraint;
@property (retain, nonatomic) NSArray *topViewControllerOtherConstraints;
@property (retain, nonatomic) _UXViewControllerOneToOneTransitionContext *currentTransitionContext;
@property (nonatomic) long long currentOperation;
@property (retain, nonatomic) UXTransitionController *defaultTransitionController;
@property (retain, nonatomic) UXViewController *observedViewController;
@property (retain, nonatomic) UXViewController *provisionalPreviousViewController;
@property (nonatomic, getter=isNavigationBarDetached) char navigationBarDetached;
@property (nonatomic, getter=isBackButtonMenuEnabled) char backButtonMenuEnabled;
@property (readonly, nonatomic) UXView *toolbarExtendedBackgroundView;
@property (nonatomic) char shouldAnimateToolbarUpdates;
@property (copy, nonatomic) id /* block */ testingTransitionAnimationCompletionHandler;
@property (retain, nonatomic) NSVisualEffectView *toolbarVisualEffectsView;
@property (retain, nonatomic) NSVisualEffectView *subtoolbarVisualEffectsView;
@property (retain, nonatomic) NSVisualEffectView *scopeBarVisualEffectsView;
@property (copy, nonatomic) NSArray *toolbarDefaultItemIdentifiers;
@property (copy, nonatomic) NSArray *toolbarAllowedItemIdentifiers;
@property (copy, nonatomic) NSDictionary *toolbarItemByIdentifier;
@property (nonatomic, getter=_isFullScreenMode, setter=_setFullScreenMode:) char _fullScreenMode;
@property (nonatomic, getter=_isLocked, setter=_setLocked:) char _locked;
@property (readonly, nonatomic) double _leadingContentInset;
@property (readonly, nonatomic) long long _toolbarPosition;
@property (readonly, nonatomic) long long _subtoolbarPosition;
@property (nonatomic, setter=_setDefaultPushTransition:) unsigned long long _defaultPushTransition;
@property (nonatomic, setter=_setDefaultPopTransition:) unsigned long long _defaultPopTransition;
@property (readonly, nonatomic, getter=isAccessoryBarHidden) char accessoryBarHidden;
@property (readonly, nonatomic) UXToolbar *accessoryBar;
@property (weak, nonatomic) id<_UXAccessoryBarContainer> accessoryBarContainer;
@property (nonatomic, setter=_setHidesBackTitles:) char _hidesBackTitles;
@property (readonly, nonatomic) UXViewController *currentTopViewController;
@property (readonly, nonatomic) char isTransitioning;
@property (readonly, nonatomic) char isInteractive;
@property (copy, nonatomic) NSArray *viewControllers;
@property (nonatomic, getter=isNavigationBarHidden) char navigationBarHidden;
@property (readonly, nonatomic) UXNavigationBar *navigationBar;
@property (nonatomic, getter=isToolbarHidden) char toolbarHidden;
@property (readonly, nonatomic) UXToolbar *toolbar;
@property (readonly, nonatomic) UXToolbar *subtoolbar;
@property (nonatomic, getter=isSubtoolbarHidden) char subtoolbarHidden;
@property (readonly, nonatomic) UXToolbar *scopeBar;
@property (nonatomic, getter=isScopeBarHidden) char scopeBarHidden;
@property (weak, nonatomic) id<UXNavigationControllerDelegate> delegate;
@property (readonly, nonatomic) NSGestureRecognizer *interactivePopGestureRecognizer;
@property (readonly, nonatomic) NSGestureRecognizer *interactivePopEventTracker;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)keyPathsForValuesAffectingPreferredContentSize;
+ (id)topViewControllerObservationKeyPathsByContext;

- (void)dealloc;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)addChildViewController:(id)a0;
- (void)keyDown:(id)a0;
- (void)menuNeedsUpdate:(id)a0;
- (void)moveToBeginningOfDocument:(id)a0;
- (struct CGSize { double x0; double x1; })preferredContentSize;
- (void)scrollWheel:(id)a0;
- (void)updateViewConstraints;
- (void)viewDidAppear;
- (void)viewDidLayout;
- (void)viewDidLoad;
- (void)viewWillAppear;
- (void)viewWillLayout;
- (char)wantsForwardedScrollEventsForAxis:(long long)a0;
- (id)initWithRootViewController:(id)a0;
- (id)popViewControllerAnimated:(char)a0;
- (void)pushViewController:(id)a0 animated:(char)a1;
- (void)setViewControllers:(id)a0 animated:(char)a1;
- (id)topViewController;
- (id)popToRootViewControllerAnimated:(char)a0;
- (id)popToViewController:(id)a0 animated:(char)a1;
- (void)setNavigationBarHidden:(char)a0 animated:(char)a1;
- (id)transitionCoordinator;
- (long long)positionForBar:(id)a0;
- (void)_setViewControllers:(id)a0 animated:(char)a1;
- (id)initWithNavigationBarClass:(Class)a0 toolbarClass:(Class)a1;
- (void)setEdgesForExtendedLayout:(unsigned long long)a0;
- (void)setToolbarHidden:(char)a0 animated:(char)a1;
- (id)visibleViewController;
- (void)__back:(id)a0;
- (void)_pushViewController:(id)a0 transition:(unsigned long long)a1;
- (void)invalidateIntrinsicLayoutInsets;
- (void)_addBackBarItemFromNavigationItem:(id)a0 toNavigationItem:(id)a1;
- (void)_addConstraintsForContainedView:(id)a0 leftInset:(double)a1;
- (id)_backItemWithTitle:(id)a0 target:(id)a1 action:(SEL)a2;
- (void)_beginObservingCurrentTopViewController;
- (void)_beginTransitionWithContext:(id)a0 operation:(long long)a1;
- (id)_checkinPopNavigationRequest:(id)a0;
- (void)_checkinPushNavigationRequest:(id)a0;
- (void)_checkinSetNavigationRequest:(id)a0;
- (id)_contextForTransitionOperation:(long long)a0 fromViewController:(id)a1 toViewController:(id)a2 transition:(unsigned long long)a3;
- (id)_customAnimationControllerForOperation:(long long)a0 fromViewController:(id)a1 toViewController:(id)a2 transition:(unsigned long long)a3;
- (id)_customInteractionControllerForAnimationController:(id)a0 transition:(unsigned long long)a1;
- (id)_dequeueNavigationRequest;
- (void)_endObservingCurrentTopViewController;
- (void)_handleInteractiveUpdateWithEvent:(id)a0;
- (char)_hasNoNavigationRequests;
- (double)_hiddenToolbarOffset;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_intrinsicLayoutInsetsForChildViewController:(id)a0;
- (void)_invalidateIntrinsicLayoutInsetsForViewController:(id)a0;
- (void)_invalidateScopeBarItems;
- (void)_invalidateSubtoolbarItems;
- (void)_invalidateToolbarItems;
- (void)_invalidateToolbarsAppearance;
- (void)_invalidateToolbarsPositions;
- (void)_invalidateToolbarsVisibility;
- (double)_leftContentInset;
- (double)_navigationBarVerticalOffset;
- (id)_performNavigationRequest:(id)a0;
- (id)_performOrEnqueueNavigationRequest:(id)a0;
- (id)_popToViewController:(id)a0 transition:(unsigned long long)a1;
- (void)_prepareForAnimationInContext:(id)a0 completion:(id /* block */)a1;
- (void)_prepareViewController:(id)a0 forAnimationInContext:(id)a1 completion:(id /* block */)a2;
- (void)_removeAllNavigationRequests;
- (void)_removeConstraintsForContainedView:(id)a0;
- (char)_requiresWindowForTransitionPreparation;
- (void)_setAccessoryBarHidden:(char)a0;
- (void)_setLeadingContentInset:(double)a0 forViewController:(id)a1;
- (void)_setToolbarHidden:(char)a0 subtoolbarHidden:(char)a1 scopeBarHidden:(char)a2 animated:(char)a3 duration:(double)a4 animateSubtree:(char)a5;
- (void)_setToolbarPosition:(long long)a0 subtoolbarPosition:(long long)a1;
- (void)_setToolbarsNeedUpdate;
- (void)_setupLayoutGuidesForViewController:(id)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_toolbarLayoutInsetsForChildViewController:(id)a0;
- (char)_toolbarNeedsVerticalOffsetUpdate;
- (double)_toolbarVerticalOffset;
- (char)_toolbarsNeedUpdate;
- (void)_updateToolbarAppearanceUsingTopViewController:(id)a0 animated:(char)a1 duration:(double)a2;
- (void)_updateToolbarVisibilityUsingTopViewController:(id)a0 animated:(char)a1 duration:(double)a2 animateSubtree:(char)a3;
- (void)_updateToolbarsIfNeeded;
- (void)_updateToolbarsPositionsUsingTopViewController:(id)a0;
- (id)_verticalToolbarLayoutConstraint;
- (double)_visibleToolbarOffset;
- (id)contentRepresentingViewController;
- (id)currentTransitionCoordinator;
- (void)detachNavigationBar;
- (void)goBackWithMenuItem:(id)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })intrinsicLayoutInsets;
- (id)nextResponderForToolbar:(id)a0;
- (void)performToolbarsChanges:(id /* block */)a0;
- (id)preferredFirstResponder;
- (void)testing_installTransitionAnimationCompletionHandler:(id /* block */)a0;
- (void)testing_notifyTransitionAnimationDidComplete;

@end

@class ICAuthorHighlightsUpdater, NSDate, ICTextController, ICPaperTextAttachmentManager, ICMPasswordEntryViewController, ICTableColumnTextView, ICSearchResultRegexMatchFinder, NSPopover, NSResponder, ICCalculatePreviewBehaviorMenu, ICCalculateRecognitionController, ICCalculateScrubberController, NSManagedObjectID, ICAttachmentInsertionController, ICMTextStylesCollectionView, _TtC11NotesEditor24ICMSystemPaperLinkHelper, ICLinkAcceleratorController, ICMHashtagDebugViewController, NSTextField, ICTextViewScrollState, ICInvitation, ICNoteUserActivityState, NSClickGestureRecognizer, ICTTTextStorage, NSImageView, ICLayoutManager, ICHashtagController, NSArray, ICMNoteEditorTouchBarController, NSMenu, ICAuthorHighlightsController, ICSelectorDelayer, NSView, ICVisualAssetImportController, NSString, ICActivityStreamSelection, NSMenuItem, ICMacBaseTextView, ICMacTextView, ICMLinkSuggestionsController, ICNAEventReporter, NSViewController, ICMInvitationViewController, NSMutableDictionary, ICNote, ICMentionsController, ICManagedObjectContextChangeController, ICMUnsupportedNoteView;
@protocol ICAuxiliaryStyling;

@interface ICMNoteEditorController : ICNoteEditorBaseViewController <ICAttachmentInsertionDelegate, ICMacTextViewEditorDelegate, ICAttachmentViewDelegate, ICMTextStylesCollectionViewDelegate, NSCollectionViewDelegate, NSMenuDelegate, NSUserActivityDelegate, NSOpenSavePanelDelegate, NSPopoverDelegate, ICMHashtagDebugViewControllerDelegate, NotesEditor.ICMSystemPaperLinkDelegate, ICManagedObjectContextChangeControllerDelegate, ICLinkEditorDelegate, ICLinkAcceleratorControllerDelegate, ICAuxiliaryTextViewHosting, ICTextFindingDataSource, ICMZoomControllerDelegate, NSTextViewDelegate, NSUserInterfaceValidations>

@property (readonly, nonatomic) ICLayoutManager *layoutManager;
@property (retain, nonatomic) NSArray *lastSelectedRanges;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } lastSelectedRange;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } lastCompletedSelectedRange;
@property (retain, nonatomic) ICPaperTextAttachmentManager *paperTextAttachmentManager;
@property (retain, nonatomic) ICAttachmentInsertionController *attachmentInsertionController;
@property (retain, nonatomic) ICVisualAssetImportController *visualAssetImportController;
@property (retain, nonatomic) ICMacTextView *textView;
@property (weak, nonatomic) NSTextField *dateLabel;
@property (weak, nonatomic) NSImageView *dateLabelImageView;
@property (weak, nonatomic) NSView *dateLabelContainer;
@property (nonatomic) char isShowingPasswordScreen;
@property (nonatomic) char isFadingOutPasswordScreen;
@property (weak, nonatomic) NSImageView *passwordChangeTempImageView;
@property (retain, nonatomic) NSArray *passwordChangeSelectedRanges;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } passwordChangeDocumentVisibleRect;
@property (nonatomic) long long passwordChangeLocalZoomFactorIndex;
@property (nonatomic) char shouldBeginEditingAfterNoteUnlock;
@property (nonatomic) char isSettingNote;
@property (nonatomic) char isReloadingNote;
@property (nonatomic) char didEditNote;
@property (readonly, nonatomic) char isSingleAttachmentSelected;
@property (readonly, nonatomic) NSArray *selectedAttachments;
@property (readonly, nonatomic) char isInMainWindow;
@property (readonly, nonatomic) char canEditChecklistItems;
@property (readonly, nonatomic) char canCheckAll;
@property (readonly, nonatomic) char canUncheckAll;
@property (readonly, nonatomic) char canMoveCheckedChecklistItemsToBottom;
@property (readonly, nonatomic) char canRemoveCheckedChecklistItems;
@property (readonly, nonatomic) char canMoveSelectedListItemUp;
@property (readonly, nonatomic) char canMoveSelectedListItemDown;
@property (nonatomic) char hasLinksAvailable;
@property (nonatomic) char isConvertToTag;
@property (retain) ICNoteUserActivityState *noteUserActivityState;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } savedVisibleRect;
@property (weak, nonatomic) NSMenu *indentItemMenu;
@property (retain, nonatomic) ICSelectorDelayer *updateNoteUserActivityStateDelayer;
@property (retain, nonatomic) ICSelectorDelayer *updateTouchBarDelayer;
@property (retain, nonatomic) NSMenuItem *checklistMenuItem;
@property (retain, nonatomic) NSMenuItem *moveChecklistMenuItem;
@property (retain, nonatomic) NSMenuItem *toggleTodoDoneMenuItem;
@property (retain, nonatomic) NSMenuItem *tableMenuItem;
@property (retain, nonatomic) NSMenuItem *linkMenuItem;
@property (retain, nonatomic) NSMenuItem *openLinkMenuItem;
@property (retain, nonatomic) NSMenuItem *openLinkInNewWindowMenuItem;
@property (retain, nonatomic) NSMenuItem *scrubMenuItem;
@property (retain, nonatomic) NSMenuItem *editChecklistMenuItem;
@property (retain, nonatomic) NSMenuItem *convertToTextMenuItem;
@property (retain, nonatomic) NSMenuItem *convertToTagMenuItem;
@property (retain, nonatomic) NSMenuItem *convertLinkToAttachmentMenuItem;
@property (retain, nonatomic) NSMenuItem *addToTagsMenuItem;
@property (retain, nonatomic) NSView *styleView;
@property (weak, nonatomic) ICMTextStylesCollectionView *styleCollectionView;
@property (retain, nonatomic) ICCalculatePreviewBehaviorMenu *calculatePreviewBehaviorMenu;
@property (retain, nonatomic) ICMNoteEditorTouchBarController *touchBarController;
@property (readonly, nonatomic) ICSearchResultRegexMatchFinder *displayedSearchRegexFinder;
@property (retain, nonatomic) ICSearchResultRegexMatchFinder *searchRegexFinder;
@property (readonly, nonatomic) NSString *indentLeftKeyboardShortcut;
@property (readonly, nonatomic) NSString *indentRightKeyboardShortcut;
@property (nonatomic) char isValidatingRequestor;
@property (weak, nonatomic) ICMacBaseTextView *previousTextViewToResignFirstResponder;
@property (weak, nonatomic) ICMacBaseTextView *firstResponderBeforeStyleMenu;
@property (retain, nonatomic) ICAuthorHighlightsController *authorHighlightsController;
@property (retain, nonatomic) ICAuthorHighlightsUpdater *authorHighlightsUpdater;
@property (readonly, nonatomic) NSClickGestureRecognizer *releaseActivityStreamSelectionClickGestureRecognizer;
@property (retain, nonatomic) ICMHashtagDebugViewController *hastagDebugViewController;
@property (retain, nonatomic) _TtC11NotesEditor24ICMSystemPaperLinkHelper *paperLinkHelper;
@property (retain, nonatomic) NSViewController *linkPopoverViewController;
@property (retain, nonatomic) ICManagedObjectContextChangeController *inlineAttachmentChangeController;
@property (retain, nonatomic) ICManagedObjectContextChangeController *noteChangeController;
@property (retain, nonatomic) ICMUnsupportedNoteView *unsupportedNoteView;
@property (retain, nonatomic) NSClickGestureRecognizer *unsupportedNoteClickGestureRecognizer;
@property (copy, nonatomic) NSDate *noteLastModificationDate;
@property (readonly, nonatomic) ICTextController *icaxTextController;
@property (readonly, nonatomic) ICTTTextStorage *icaxTextStorage;
@property (readonly, nonatomic) char icaxUserHasInteractedWithCurrentNote;
@property (retain, nonatomic) ICInvitation *invitation;
@property (readonly, nonatomic) char hasListOrFixedWidthSelection;
@property (readonly, nonatomic) long long currentWritingDirection;
@property (readonly, nonatomic) char canToggleTodo;
@property (readonly, nonatomic) char canAddTable;
@property (readonly, nonatomic) char canAddPhoto;
@property (nonatomic) char isTogglingCurrentNoteLock;
@property (readonly, nonatomic) char wantsNoteUndoManager;
@property (readonly, nonatomic) char isChecklistSelected;
@property (readonly, nonatomic) char isEditingTableCell;
@property (readonly, nonatomic) char canMoveSelectedListItem;
@property (readonly, nonatomic) char canScrubNumber;
@property (readonly, nonatomic) long long uniqueCollapsibleSectionAffordanceExposures;
@property (readonly, nonatomic) long long uniqueCollapsibleSectionAffordanceUsages;
@property (nonatomic) char ignoreSetNote;
@property (readonly, nonatomic) char isFrozen;
@property (retain, nonatomic) ICActivityStreamSelection *activityStreamSelection;
@property (retain, nonatomic) ICHashtagController *hashtagController;
@property (retain, nonatomic) ICMentionsController *mentionsController;
@property (retain, nonatomic) ICLinkAcceleratorController *linkAcceleratorController;
@property (retain, nonatomic) ICCalculateRecognitionController *calculateRecognitionController;
@property (retain, nonatomic) ICCalculateScrubberController *calculateScrubberController;
@property (retain, nonatomic) ICMLinkSuggestionsController *linkSuggestionsController;
@property (retain, nonatomic) ICNAEventReporter *eventReporter;
@property (nonatomic) char shouldCallUpdateTouchBarItemsAfterAppearing;
@property (nonatomic) char doNotAdvanceInsertionPointAfterInsertingAttachment;
@property (retain, nonatomic) NSPopover *stylePopover;
@property (retain, nonatomic) NSMenuItem *attributionSidebarMenuItem;
@property (retain, nonatomic) NSMenuItem *paragraphStylesMenuItem;
@property (retain, nonatomic) NSMenuItem *fontMenuItem;
@property (retain, nonatomic) ICMPasswordEntryViewController *passwordViewController;
@property (retain, nonatomic) ICMInvitationViewController *invitationViewController;
@property (retain, nonatomic) ICTextController *textController;
@property (readonly, nonatomic) ICTextViewScrollState *currentScrollState;
@property (retain, nonatomic) NSMutableDictionary *scrollStates;
@property (retain, nonatomic) ICTableColumnTextView *tableColumnTextView;
@property (readonly, nonatomic) char passwordViewControllerViewIsInHierarchy;
@property (readonly, copy, nonatomic) NSImageView *snapshotImageView;
@property (readonly, nonatomic) unsigned long long selectedTagsCount;
@property (copy, nonatomic) NSManagedObjectID *noteViewEventSourceObjectID;
@property (readonly, nonatomic) char canRecordAudio;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long blockQuoteMenuItemState;
@property (readonly, nonatomic) long long currrentEmphasisType;
@property (readonly) char shouldShowFloatingSuggestions;
@property (readonly, nonatomic) long long writingDirection;
@property (readonly, nonatomic) char languageHasSpaces;
@property (readonly, nonatomic) ICTTTextStorage *textStorage;
@property (readonly, nonatomic) NSString *searchString;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } lastSelectedRangeForAccelerator;
@property (readonly, nonatomic) ICNote *note;
@property (readonly, nonatomic) NSView *acceleratorHostingView;
@property (readonly, nonatomic) NSViewController *acceleratorHostingViewController;
@property (weak, nonatomic) NSResponder *auxiliaryResponder;
@property (weak, nonatomic) id<ICAuxiliaryStyling> auxiliaryStylingController;

+ (id)editorControllerWithIdentifier:(long long)a0 options:(unsigned long long)a1;
+ (id)keyPathsForValuesAffectingCanAddPhoto;
+ (id)keyPathsForValuesAffectingCanAddTable;
+ (id)keyPathsForValuesAffectingCanIndent;
+ (id)keyPathsForValuesAffectingCanIndentOrCanOutdent;
+ (id)keyPathsForValuesAffectingCanOutdent;
+ (id)keyPathsForValuesAffectingCanRecordAudio;
+ (id)keyPathsForValuesAffectingCanStyleText;
+ (id)keyPathsForValuesAffectingCanToggleTodo;
+ (id)keyPathsForValuesAffectingCurrentWritingDirection;
+ (id)keyPathsForValuesAffectingDfrBIUEnabled;
+ (id)keyPathsForValuesAffectingDisplayedSearchRegexFinder;
+ (id)keyPathsForValuesAffectingIsEditingTableCell;
+ (id)keyPathsForValuesAffectingIsFrozen;
+ (id)keyPathsForValuesAffectingIsSingleAttachmentSelected;
+ (id)keyPathsForValuesAffectingTextViewIsEditable;
+ (id)keyPathsForValuesAffectingTextViewIsFirstResponder;

- (void)dealloc;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (void)addLink:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)userActivity:(id)a0 didReceiveInputStream:(id)a1 outputStream:(id)a2;
- (void)userActivityWillSave:(id)a0;
- (void)setTimestamp:(id)a0;
- (void)indent:(id)a0;
- (void)popoverDidShow:(id)a0;
- (id)textView:(id)a0 menu:(id)a1 forEvent:(id)a2 atIndex:(unsigned long long)a3;
- (void)awakeFromNib;
- (void)commonInit;
- (void)keyDown:(id)a0;
- (char)menuHasKeyEquivalent:(id)a0 forEvent:(id)a1 target:(id *)a2 action:(SEL *)a3;
- (void)menuWillOpen:(id)a0;
- (void)mouseDown:(id)a0;
- (char)panel:(id)a0 validateURL:(id)a1 error:(id *)a2;
- (void)popoverDidClose:(id)a0;
- (void)popoverWillShow:(id)a0;
- (void)setTextStyle:(id)a0;
- (void)textDidBeginEditing:(id)a0;
- (void)textDidChange:(id)a0;
- (void)textDidEndEditing:(id)a0;
- (char)textShouldBeginEditing:(id)a0;
- (id)textView:(id)a0 URLForContentsOfTextAttachment:(id)a1 atIndex:(unsigned long long)a2;
- (id)textView:(id)a0 didCheckTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 types:(unsigned long long)a2 options:(id)a3 results:(id)a4 orthography:(id)a5 wordCount:(long long)a6;
- (char)textView:(id)a0 shouldChangeTextInRanges:(id)a1 replacementStrings:(id)a2;
- (id)textView:(id)a0 shouldChangeTypingAttributes:(id)a1 toAttributes:(id)a2;
- (id)textView:(id)a0 willDisplayToolTip:(id)a1 forCharacterAtIndex:(unsigned long long)a2;
- (id)textView:(id)a0 willShowSharingServicePicker:(id)a1 forItems:(id)a2;
- (id)textView:(id)a0 writingToolsIgnoredRangesInEnclosingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)textViewWritingToolsDidEnd:(id)a0;
- (void)textViewWritingToolsWillBegin:(id)a0;
- (id)touchBar;
- (id)undoManager;
- (void)updateUserActivityState:(id)a0;
- (id)validRequestorForSendType:(id)a0 returnType:(id)a1;
- (char)validateUserInterfaceItem:(id)a0;
- (void)viewDidAppear;
- (void)viewDidDisappear;
- (void)viewWillAppear;
- (void)viewWillDisappear;
- (void)setNote:(id)a0;
- (char)canZoomIn;
- (char)canZoomOut;
- (void)outdent:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionRect;
- (void)updateTouchBar;
- (void)boundsDidChange:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })visibleRange;
- (void)printOperationDidRun:(id)a0 success:(char)a1 contextInfo:(void *)a2;
- (id)zoomController;
- (void)openLink:(id)a0;
- (char)canIndent;
- (void)showPhotosBrowser:(id)a0;
- (void)fetchAll;
- (void)zoomOut;
- (void)applicationWillTerminate;
- (void)zoomIn;
- (void)didZoom:(id)a0;
- (void)textViewDidChange:(id)a0;
- (void)alwaysShowLightContentDidChange:(id)a0;
- (void)attachmentInsertionController:(id)a0 didAddAttachment:(id)a1 atRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)attachmentInsertionController:(id)a0 didAddInlineAttachment:(id)a1 atRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 textStorage:(id)a3;
- (void)attachmentInsertionController:(id)a0 willAddAttachment:(id)a1 atRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)didSelectCalculatePreviewBehavior:(id)a0;
- (void)insertBulletedList:(id)a0;
- (void)insertDashedList:(id)a0;
- (void)insertOrderedList:(id)a0;
- (id)managedObjectContextChangeController:(id)a0 managedObjectIDsToUpdateForUpdatedManagedObjects:(id)a1;
- (void)managedObjectContextChangeController:(id)a0 performUpdatesForManagedObjectIDs:(id)a1;
- (char)managedObjectContextChangeControllerShouldUpdateImmediately:(id)a0;
- (void)updateAppearanceIfNecessary;
- (void)zoomResetToGlobalDefault;
- (id)initWithIdentifier:(long long)a0 options:(unsigned long long)a1;
- (void)eventReporterLostSession:(id)a0;
- (void)disableBoldface;
- (void)enableUnderline;
- (void)insertTodoList:(id)a0;
- (void)toggleUnderline;
- (void)warnUserAttachmentLimitExceeded;
- (void)attachmentView:(id)a0 shouldShowAudioDetailViewForAttachment:(id)a1 animated:(char)a2;
- (char)canConvertToTag;
- (void)noteWillAppear:(id)a0;
- (void)toggleForceLightContentPerNote:(id)a0;
- (void)toggleTodoDone:(id)a0;
- (void)acceleratorOriginNeedsUpdate;
- (long long)addApproachForCurrentEventAndSender:(id)a0;
- (void)addDrawing:(id)a0;
- (void)addSystemPaperLink:(id)a0;
- (void)addSystemPaperLink:(id)a0 atEnd:(char)a1;
- (void)addTable:(id)a0;
- (void)addToTags:(id)a0;
- (void)announceCurrentIndentationLevelForAccessibility;
- (void)applyEmphasisColor:(id)a0;
- (void)applySavedScrollStateAfterReload;
- (void)attachmentBrickDidChangeSize;
- (void)attachmentsExceeded:(id)a0;
- (void)attemptToAddNewNote:(id)a0;
- (void)beginEditingAndAddTodoAtEndOfNote:(id)a0;
- (void)beginEditingAtEndOfDocument:(id)a0;
- (void)calculateDocumentControllerDidUpdateHighlights:(id)a0;
- (char)canAddToTags;
- (char)canConvertToText;
- (char)canIndentByDelta:(long long)a0;
- (char)canOutdent;
- (char)canRenameAttachmentForAttachmentOrSelectionIfNil:(id)a0;
- (char)canSelectBlockQuoteInCollectionView:(id)a0;
- (char)canStyleText;
- (char)canStyleTextForFomatter:(char)a0;
- (char)canZoomReset;
- (void)cancelTextViewSearchField;
- (void)checkAllChecklistItems:(id)a0;
- (void)closeLinkMenu;
- (void)closeLinkMenuIfNecessary;
- (void)closeStylePopoverIfNecessary;
- (void)convertLinkToAttachment:(id)a0;
- (void)convertToTag:(id)a0;
- (void)convertToText:(id)a0;
- (id)createEmphasisMenuItemWithTitle:(id)a0 color:(id)a1 tag:(unsigned long long)a2;
- (void)createLink:(id)a0 title:(id)a1 textSelection:(id)a2 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 addApproach:(long long)a4;
- (void)createNoteLinkAttachment:(id)a0 textSelection:(id)a1 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 addApproach:(long long)a3;
- (id)createSharingServicePicker;
- (id)createSharingServicePickerWithNote:(id)a0 anchorView:(id)a1;
- (char)deleteEmptyNoteForAppTermination;
- (void)deleteHashtag:(id)a0;
- (char)dfrBIUEnabled;
- (void)didAddAttachmentForNoteNotification:(id)a0;
- (void)didDeleteAttachmentForNoteNotification:(id)a0;
- (void)didInvokePasteWithAttributedString:(id)a0;
- (void)didSelectNoteSuggestionWithIdentifier:(id)a0 title:(id)a1;
- (void)disableItalics;
- (void)disableStrikethrough;
- (void)disableUnderline;
- (void)dismissAutoCompleteUI;
- (void)dismissTouchBarStylePopoverIfNecessary;
- (void)enableBoldface;
- (void)enableItalics;
- (void)enableStrikethrough;
- (void)exportNoteAsPDF:(id)a0;
- (id)findMenuItemForAction:(SEL)a0 inMenu:(id)a1;
- (void)freezeView;
- (void)getTodoSelected:(char *)a0 andAtLeastOneTodoUnchecked:(char *)a1;
- (void)globalZoomIndexDidChange:(id)a0;
- (void)hashtagDebugViewController:(id)a0 didEnterHashtagText:(id)a1;
- (void)hideAcceleratorIfNecessary:(id)a0;
- (void)highlightSearchMatchesForRegexFinder:(id)a0;
- (void)insertAddToTagsMenuItemIntoMenu:(id)a0;
- (void)insertAudioAttachment:(id)a0;
- (void)insertAudioAttachmentMenuItemIntoMenu:(id)a0;
- (void)insertConvertLinkToAttachmentMenuItemIntoMenuIfNecessary:(id)a0;
- (void)insertConvertToTagMenuItemIntoMenu:(id)a0;
- (void)insertConvertToTextMenuItemIntoMenu:(id)a0;
- (void)insertDebugHashtag:(id)a0;
- (void)insertDebugItemsInMenu:(id)a0 textView:(id)a1 atIndex:(unsigned long long)a2;
- (void)insertDrawingFromPasteboard:(id)a0;
- (void)insertFile:(id)a0;
- (void)insertForceLightContentIntoMenuIfNecessary:(id)a0;
- (void)insertImageFromPasteboard:(id)a0;
- (void)insertLinkMenuItemIntoMenu:(id)a0;
- (void)insertParagraphStylesMenuItemIntoMenu:(id)a0;
- (void)insertPhotoFromService:(id)a0;
- (void)insertScanFromPasteboard:(id)a0;
- (void)insertScrubMenuItemIntoMenu:(id)a0;
- (void)insertToggleAttributionSidebarMenuItemIntoMenu:(id)a0;
- (void)inspectAttachment:(id)a0;
- (void)invalidateCanIndentOrOutdent;
- (char)isAutoCompletionViewVisible;
- (void)linkEditorWillDismiss;
- (void)mergeRelatedOperationsDidEnd:(id)a0;
- (void)moveCheckedChecklistItemsToBottom:(id)a0;
- (void)moveSelectedListItemDown:(id)a0;
- (void)moveSelectedListItemUp:(id)a0;
- (void)movieWillPlay:(id)a0;
- (id)newPrintController;
- (void)noteDecryptedStatusDidChange:(id)a0;
- (void)noteDidAppear:(id)a0;
- (void)noteDidChangeCalculatePreviewBehaviorNotification:(id)a0;
- (void)noteDidDeauthenticateAfterMerge:(id)a0;
- (void)noteDidDisappear:(id)a0;
- (void)noteShouldShowAsLightContentDidChange:(id)a0;
- (void)noteWillBeDeleted:(id)a0;
- (void)noteWillDisappear:(id)a0;
- (void)notesContextRefreshNotification:(id)a0;
- (void)notifyZoomToViewIfPossible:(id)a0 withZoomController:(id)a1;
- (void)openLinkInNewWindow:(id)a0;
- (void)openLinkWithSender:(id)a0 openNewWindow:(char)a1;
- (void)performArrowDown;
- (void)performArrowUp;
- (void)performEscapeKey;
- (void)prepareForLocalOrGlobalZoom;
- (void)presentRecordingStoppedAlertForNoteIfNeeded:(id)a0;
- (void)printNote:(id)a0;
- (void)releaseActivityStreamSelectionClickGestureRecognizerAction:(id)a0;
- (void)reloadCurrentNote;
- (void)removeAndClearPasswordScreen;
- (void)removeCheckedChecklistItems:(id)a0;
- (void)removeLinksFromTextSelection:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)removeTimestamp:(id)a0;
- (void)renameAttachment:(id)a0;
- (void)replaceFontMenuItemInMenu:(id)a0;
- (void)requestTouchBarUpdate;
- (void)resetCollapsibleSectionAffordanceUsageData;
- (void)returnToNoteBrowserIfPossible:(id)a0;
- (void)saveScrollStateBeforeReload;
- (void)saveScrollStateForCurrentNoteIfNecessary;
- (void)scrollToFirstSearchMatchIfNecessaryForSearchResult:(id)a0;
- (void)scrollToHighlights;
- (void)selectItemFromAutoCompletionMenu;
- (unsigned long long)selectedBIUS;
- (id)selectedStyles;
- (void)setTextStyleForCurrentSelection:(unsigned int)a0;
- (void)setupTextView:(id)a0;
- (void)setupWindowObserversForLinkAccelerator;
- (void)showEmphasisColorPicker;
- (void)showInsertAttachmentOpenSheet:(id)a0;
- (void)showLinkMenu:(id)a0;
- (void)showOrHidePasswordScreenIfNecessaryAnimated:(char)a0;
- (void)showRecentlyDeletedRecoverMessage;
- (void)showRecentlyDeletedRecoverMessageIfNecessaryOrPerformBlock:(id /* block */)a0;
- (void)showScrubber:(id)a0;
- (void)showStyleMenu:(id)a0;
- (void)submitNoteEditEventIfNecessary;
- (void)tableCellFirstResponderChanged;
- (void)textStorageDiscardStyler;
- (char)textStylesCollectionView:(id)a0 canSelectNamedTextStyle:(id)a1;
- (char)textStylesCollectionView:(id)a0 canSelectStyleBIUS:(unsigned long long)a1;
- (void)textStylesCollectionView:(id)a0 shouldApplyNamedStyle:(id)a1;
- (void)textStylesCollectionView:(id)a0 shouldApplyStyleBIUS:(unsigned long long)a1;
- (id)textStylesCollectionViewSelectedNamedStylesIndexSet:(id)a0;
- (unsigned long long)textStylesCollectionViewSelectedStyleBIUS:(id)a0;
- (void)textViewDidEndFixUpAfterEditing:(id)a0;
- (void)textViewDidMouseDownWhileNotEditable:(id)a0;
- (char)textViewIsEditable;
- (char)textViewIsFirstResponder;
- (void)textViewSelectionDidChange:(id)a0 stillSelecting:(char)a1;
- (void)textViewWillBecomeFirstResponder:(id)a0;
- (void)textViewWillResignFirstResponder:(id)a0;
- (void)toggleBlockQuote;
- (void)toggleBlockQuote:(id)a0;
- (void)toggleBoldface;
- (void)toggleCompatibilityBanner:(id)a0;
- (void)toggleEmphasis;
- (void)toggleEmphasisWithType:(long long)a0;
- (void)toggleItalics;
- (void)toggleStrikethrough;
- (void)toggleStyleBIUS:(unsigned long long)a0;
- (void)toggleTodoStyle:(id)a0;
- (void)unCheckAllChecklistItems:(id)a0;
- (void)unfreezeViewIfNecessaryAnimated:(char)a0;
- (void)updateAuthorHighlightsIfNeeded;
- (void)updateChecklistButtonAccessibilityForSelection;
- (void)updateEditableIfNeeded;
- (void)updateLastOpenedDate;
- (void)updateLastViewedMetadata;
- (void)updateLastViewedMetadataAfterDelay;
- (void)updateLinkAvailability:(char)a0;
- (void)updateNoteEditorViewAccessibilityChildren;
- (void)updateNoteUserActivityState;
- (void)updatePencilKitPaperStyleType;
- (void)updateTextStorage;
- (void)updateTextViewTypingAttributesForSettingTextStyleInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)updateTextViewTypingAttributesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 forSelectionChange:(char)a1;
- (void)updateTextViewTypingAttributesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 forSelectionChange:(char)a1 forSettingTextStyle:(char)a2;
- (void)updateUnsupportedNoteView;
- (void)userActivitiesToExcludeWithCompletion:(id /* block */)a0;
- (void)warnUserAttachmentSizeExceededWithAttachmentCount:(unsigned long long)a0;
- (void)warnUserNoteLengthExceeded;
- (void)willAddAttachmentForNoteNotification:(id)a0;

@end

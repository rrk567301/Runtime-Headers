@class ICMFilePromiseHelper, ICTrackedParagraph, ICMNoteEditorDateView, NSClickGestureRecognizer, NSObject, ICNAFindResultExposureReporter, ICSharedScrollClampingController, ICMSidebarController, CALayer, NSTextRange, NSLayoutConstraint, ICMNoteEditorCompatibilityBannerView, NSTextFinder, ICMPrintPanelAccessoryController, ICMAttributionsViewController, NSPressGestureRecognizer, NSArray, NSNumber, NSString;
@protocol ICMacTextViewEditorDelegate, NSTextFinderClient, ICAttachmentViewDelegate;

@interface ICMacTextView : ICMacBaseTextView <ICNoteMergeObserver, QLPreviewPanelDataSource, NSLayoutManagerDelegate, ICTextControllerDelegate, ICMFilePromiseHelperDelegate, NSGestureRecognizerDelegate, NSMenuItemValidation, ICTTTextStorageScrollClampingDelegate> {
    struct _NSRange { unsigned long long location; unsigned long long length; } _smartDeleteRange;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } savedVisibleRect;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } savedSelectedRange;
@property (nonatomic) char isEndingLiveResize;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } visibleCharacterRangeBeforeResize;
@property (retain, nonatomic) NSTextRange *visibleTextRangeBeforeResize;
@property (nonatomic) struct CGSize { double width; double height; } previousValueOfDocumentSizeInPage;
@property (copy, nonatomic) NSNumber *previousValueOfWrappingToFit;
@property (retain, nonatomic) NSArray *quickLookAttachments;
@property (retain, nonatomic) NSClickGestureRecognizer *clickBetweenAttachmentViewsGestureRecognizer;
@property (retain, nonatomic) NSPressGestureRecognizer *checklistDragLongPressGestureRecognizer;
@property (retain, nonatomic) NSArray *dragAttachments;
@property (retain, nonatomic) NSLayoutConstraint *baselineConstraint;
@property (readonly, nonatomic) NSObject<NSTextFinderClient> *textFinderClient;
@property (retain, nonatomic) ICNAFindResultExposureReporter *findResultReporter;
@property (retain, nonatomic) ICMFilePromiseHelper *filePromiseHelper;
@property (nonatomic) char isDraggingChecklistItem;
@property (retain, nonatomic) ICTrackedParagraph *draggedChecklistTrackedParagraph;
@property (retain, nonatomic) ICTrackedParagraph *trackedParagraphCurrentlyUnderDraggedChecklist;
@property (nonatomic) char isDraggingOverChecklistItem;
@property (nonatomic) char isDraggingChecklistFromDifferentNote;
@property (retain, nonatomic) CALayer *checklistDragInsertionLayer;
@property (weak, nonatomic) ICMacTextView *originatingChecklistDragTextview;
@property (nonatomic) char isHitTestingForDragging;
@property (retain, nonatomic) NSArray *compatBannerLayoutContraints;
@property (copy, nonatomic) id /* block */ observeAttributionsDispatchBlock;
@property (nonatomic) char suppressAccessibilitySelectedTextChangedNotifications;
@property (weak, nonatomic) id<ICMacTextViewEditorDelegate> editorDelegate;
@property (weak, nonatomic) id<ICAttachmentViewDelegate> attachmentViewDelegate;
@property (retain, nonatomic) ICMNoteEditorDateView *dateView;
@property (retain, nonatomic) ICMNoteEditorCompatibilityBannerView *compatibilityBannerView;
@property (readonly, nonatomic) char isFindBarVisible;
@property (readonly, nonatomic) char isFindBarFirstResponder;
@property (nonatomic) char matchFrameToClipView;
@property (nonatomic) char shouldLockScrollWhenFixupAfterEditingAtEndOfRunLoop;
@property (readonly, nonatomic) NSTextFinder *textFinder;
@property (nonatomic) struct CGSize { double width; double height; } originalPrintingSize;
@property (retain, nonatomic) ICMPrintPanelAccessoryController *printPanelAccessoryController;
@property (retain, nonatomic) ICSharedScrollClampingController *scrollClampingController;
@property (readonly, nonatomic) ICMSidebarController *attributionSidebarController;
@property (readonly, nonatomic) ICMAttributionsViewController *attributionsViewController;
@property (readonly, copy, nonatomic) NSString *toggleAttributionSidebarHiddenMenuItemTitle;
@property (readonly, nonatomic) char isCompatibilityBannerShowing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (void)enablePaperKitAttachmentViews;

- (void)dealloc;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (void)layout;
- (id)accessibilityActionDescription:(id)a0;
- (void)deleteBackward:(id)a0;
- (char)knowsPageRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a0;
- (void)toggleAutomaticTextReplacement:(id)a0;
- (void)delete:(id)a0;
- (unsigned long long)_insertionCharacterIndexForDrag:(id)a0;
- (id)acceptableDragTypes;
- (char)acceptsPreviewPanelControl:(id)a0;
- (id)accessibilityActionNames;
- (id)accessibilityAttributedStringForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)accessibilityChildren;
- (id)accessibilityElementForAttachment:(id)a0;
- (void)accessibilityPerformAction:(id)a0;
- (char)accessibilityPerformShowMenu;
- (void)accessibilityPostNotification:(id)a0 withNotificationElement:(id)a1;
- (void)adjustPageHeightNew:(double *)a0 top:(double)a1 bottom:(double)a2 limit:(double)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustScroll:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)becomeFirstResponder;
- (void)beginPreviewPanelControl:(id)a0;
- (void)changeFont:(id)a0;
- (void)copy:(id)a0;
- (void)cursorUpdate:(id)a0;
- (void)cut:(id)a0;
- (void)deleteWordBackward:(id)a0;
- (void)didBeginWritingToolsSession:(id)a0 contexts:(id)a1;
- (void)didEndWritingToolsSession:(id)a0 accepted:(char)a1;
- (void)doCommandBySelector:(SEL)a0;
- (id)dragImageForSelectionWithEvent:(id)a0 origin:(struct CGPoint { double x0; double x1; } *)a1;
- (unsigned long long)dragOperationForDraggingInfo:(id)a0 type:(id)a1;
- (char)dragSelectionWithEvent:(id)a0 offset:(struct CGSize { double x0; double x1; })a1 slideBack:(char)a2;
- (void)draggingEnded:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (unsigned long long)draggingUpdated:(id)a0;
- (void)drawDragInsertionIndicatorWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)endPreviewPanelControl:(id)a0;
- (id)firstResponderWhenDeactivated;
- (char)gestureRecognizer:(id)a0 shouldAttemptToRecognizeWithEvent:(id)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 textContainer:(id)a1;
- (void)insertBacktab:(id)a0;
- (void)insertNewline:(id)a0;
- (void)insertTab:(id)a0;
- (void)insertTabIgnoringFieldEditor:(id)a0;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)insertTextPlaceholderAtLocation:(id)a0 length:(double)a1 animated:(char)a2 completion:(id /* block */)a3;
- (void)keyDown:(id)a0;
- (void)layoutManager:(id)a0 didCompleteLayoutForTextContainer:(id)a1 atEnd:(char)a2;
- (void)makeBaseWritingDirectionLeftToRight:(id)a0;
- (void)makeBaseWritingDirectionNatural:(id)a0;
- (void)makeBaseWritingDirectionRightToLeft:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseDragged:(id)a0;
- (void)mouseMoved:(id)a0;
- (void)moveLeft:(id)a0;
- (void)moveRight:(id)a0;
- (void)moveWordLeft:(id)a0;
- (void)moveWordRight:(id)a0;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)a0;
- (char)performDragOperation:(id)a0;
- (void)performTextFinderAction:(id)a0;
- (id)previewPanel:(id)a0 previewItemAtIndex:(long long)a1;
- (char)readSelectionFromPasteboard:(id)a0 type:(id)a1;
- (id)readablePasteboardTypes;
- (id)rectsForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)removeTextPlaceholderAnimated:(char)a0 completion:(id /* block */)a1;
- (char)resignFirstResponder;
- (void)setEditable:(char)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setSelectedRanges:(id)a0 affinity:(unsigned long long)a1 stillSelecting:(char)a2;
- (void)setTextContainer:(id)a0;
- (id)sharingServicePicker:(id)a0 sharingServicesForItems:(id)a1 mask:(unsigned long long)a2 proposedSharingServices:(id)a3;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })smartDeleteRangeForProposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)toggleAutomaticDashSubstitution:(id)a0;
- (void)toggleAutomaticDataDetection:(id)a0;
- (void)toggleAutomaticLinkDetection:(id)a0;
- (void)toggleAutomaticQuoteSubstitution:(id)a0;
- (void)toggleAutomaticSpellingCorrection:(id)a0;
- (void)toggleContinuousSpellChecking:(id)a0;
- (void)toggleGrammarChecking:(id)a0;
- (void)toggleQuickLookPreviewPanel:(id)a0;
- (void)toggleSmartInsertDelete:(id)a0;
- (void)underline:(id)a0;
- (void)updateTextTouchBarItems;
- (unsigned long long)validModesForFontPanel:(id)a0;
- (char)validateMenuItem:(id)a0;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (id)writablePasteboardTypes;
- (char)writeSelectionToPasteboard:(id)a0 type:(id)a1;
- (void)writingToolsSession:(id)a0 didReceiveAction:(long long)a1;
- (char)supportsAttachments;
- (void)unclampTextView;
- (void)clampTextView;
- (void)didEndPostLayoutFixupAfterEditing;
- (void)strikethrough:(id)a0;
- (void)textControllerDidHandleSpecialCaseEditing:(id)a0;
- (void)textStorageDidPerformMerge:(id)a0;
- (void)textStorageWillPerformMerge:(id)a0;
- (void)willBeginPostLayoutFixupAfterEditing;
- (void)beginQuickLook:(id)a0;
- (id)filePathsForSelectedAttachments;
- (void)textViewWillBeginChecklistDrag:(id)a0;
- (void)toggleAttributionSidebarHidden:(id)a0;
- (void)_icaxAddParticipantEditHighlightsToString:(id)a0 forRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)_icaxAddPrettifiedMathematicalSymbolsToString:(id)a0 forRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)_icaxAddStyleAttributesToString:(id)a0 forRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)_icaxAddTodoProxyAttachmentElementsToString:(id)a0 forRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)_icaxAllTodoButtonCells;
- (id)_icaxParagraphStringForTodoInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)_icaxProxyAttachmentElementForTodo:(id)a0;
- (void)addChecklistDragLongPressGestureRecognizer;
- (void)addClickBetweenAttachmentViewsGestureRecognizer;
- (id)attachmentForViewIfExists:(id)a0;
- (id)attachmentViewForViewIfExists:(id)a0;
- (void)attachmentWasDeleted:(id)a0;
- (void)beginDragForChecklistButton:(id)a0;
- (void)beginDragForTrackedChecklistParagraph:(id)a0;
- (void)beginEditingNewNoteForAccessibilityIfNecessary;
- (char)canDragChecklistAtPoint:(struct CGPoint { double x0; double x1; })a0 outTrackedParagraph:(id *)a1;
- (void)commonMacTextViewInit;
- (void)customDeleteBackwardWithBlock:(id /* block */)a0;
- (void)customDeleteWordBackwardWithBlock:(id /* block */)a0;
- (void)didClickBetweenAttachments:(id)a0;
- (void)didLongPressForChecklistDrag:(id)a0;
- (void)didMoveInDirection:(unsigned long long)a0 previousSelectedRanges:(id)a1;
- (void)drawChecklistDragInsertionIndicatorForTrackedTodoParagraph:(id)a0 drawAbove:(char)a1;
- (void)emphasis:(id)a0;
- (void)filePromiseHelper:(id)a0 didRecieveFiles:(id)a1 dropPoint:(struct CGPoint { double x0; double x1; })a2;
- (void)filePromiseHelperDidCancel:(id)a0;
- (void)handleChecklistDragForDraggingInfo:(id)a0 dragOperation:(unsigned long long)a1 resultValue:(char *)a2 operationHandled:(char *)a3;
- (void)hideCompatibilityBanner;
- (id)icTextLayoutManager;
- (id)icaxFirstAttachmentInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)icaxPostSilentValueChangedNotification;
- (char)icaxTodoItemProxyElementWasPressed:(id)a0;
- (char)icaxToggleTodoWithAnnouncementForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)insertAttachmentFromData:(id)a0 fileName:(id)a1 dropPoint:(struct CGPoint { double x0; double x1; })a2;
- (void)insertAttachmentsFromURLs:(id)a0 dropPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)insertAttachmentsFromURLs:(id)a0 insertionIndex:(unsigned long long)a1;
- (char)isBetweenAttachmentsForWindowLocation:(struct CGPoint { double x0; double x1; })a0 outCharIndex:(unsigned long long *)a1;
- (char)isFilePromiseDrag:(id)a0;
- (char)isUnsupportedDrag:(id)a0;
- (void)loadUserTextViewOptions;
- (char)needToWriteFilePathsToPasteboard;
- (char)needToWriteFilePromisesToPasteboard;
- (void)openPKAttachmentIfPossible:(id)a0;
- (id)preferredPasteboardTypeFromArray:(id)a0 restrictedToTypesFromArray:(id)a1 fromPasteboard:(id)a2;
- (void)prepareForCrossWindowChecklistDrop;
- (id)quickLookableAttachmentsFromAttachments:(id)a0;
- (void)removeFromTextStorage;
- (void)resetScrollLockingFlags;
- (void)setCurrentTodoItemCompleted:(char)a0;
- (void)setSelectedRangeToEndOfTodoTrackedParagraph:(id)a0;
- (void)setupTextViewDateField;
- (void)setupTextViewLayout;
- (void)showCompatibilityBanner;
- (void)speakAccessibilityAutoListItemIfNecessary;
- (void)toggleAutomaticListInsertion:(id)a0;
- (void)toggleAutomaticTagDetection:(id)a0;
- (unsigned long long)totalSelectionLength;
- (void)updateAttributionsSidebar;
- (void)updateCompatibilityBannerForNote:(id)a0;
- (void)updateQuickLookAttachments;
- (void)updateQuickLookAttachmentsIfNecessary;
- (void)updateTextViewDateFieldConstraint;
- (id)visibleTopLevelAttachmentsInNote;
- (void)writeAttachmentFilePathsToPasteboard:(id)a0;
- (void)writeFilePromisesToPasteboard:(id)a0;

@end

@class ICTTMergeableStringVersionedDocument, ICTTMergeableStringUndoGroup, NSDate, ICOutlineController, ICTTMergeableAttributedString, NSObject, NSMutableArray, NSMutableAttributedString, NSSet, NSUndoManager, NSString, NSMutableSet, NSNumber, NSArray, NSUUID;
@protocol ICTTTextStorageStyler, ICTTTextUndoTarget, ICTTTextStorageDelegate;

@interface ICTTTextStorage : NSTextStorage <ICTTMergeableStringDelegate, ICTTTextUndoTarget> {
    unsigned long long _temporaryAttributeEditing;
}

@property (nonatomic) unsigned long long attributeOptions;
@property (retain, nonatomic) NSMutableArray *undoCommands;
@property (retain, nonatomic) ICTTMergeableStringUndoGroup *coalescingUndoGroup;
@property (nonatomic) unsigned long long editingCount;
@property (nonatomic) char isEditingTemporaryAttributes;
@property (nonatomic) char isFixing;
@property (nonatomic) char isApplyingUndoCommand;
@property (nonatomic) char pendingFixupAfterEditing;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } beforeEndEditedRange;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } ttEditedRange;
@property (nonatomic) unsigned long long ttEditedMask;
@property (nonatomic) long long ttChangeInLength;
@property (nonatomic) char delayedFixupAfterEditingWantsUndoCommand;
@property (retain, nonatomic) NSMutableSet *textLayoutManagerReferences;
@property (nonatomic) long long skipTimestampUpdatesCount;
@property (copy, nonatomic) NSDate *now;
@property (nonatomic) char directlyEditing;
@property (nonatomic) char previouslyHadMarkedText;
@property (nonatomic) char hasUserEditSinceFixupAfterEditing;
@property (retain, nonatomic) NSMutableAttributedString *attributedString;
@property (readonly, nonatomic) NSObject<ICTTTextUndoTarget> *undoTarget;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } lastUndoEditRange;
@property (copy, nonatomic) NSNumber *currentTimestamp;
@property (readonly, nonatomic, getter=isForTextKit2) char forTextKit2;
@property (weak) id<ICTTTextStorageDelegate> delegate;
@property (weak, nonatomic) ICOutlineController *outlineController;
@property (retain, nonatomic) NSUndoManager *undoManager;
@property (weak) NSObject<ICTTTextUndoTarget> *overrideUndoTarget;
@property (nonatomic) char wantsUndoCommands;
@property (nonatomic) char shouldInhibitAddingExtraNewlinesAtEndDuringFixup;
@property (nonatomic) char alwaysEnumerateTrailingParagraph;
@property (readonly, copy, nonatomic) NSSet *textLayoutManagers;
@property (readonly, copy, nonatomic) NSSet *textViews;
@property (readonly, nonatomic) NSMutableAttributedString *highlightsAttributedString;
@property (readonly, nonatomic) char hasAnyTextViewWithDarkAppearance;
@property (retain, nonatomic) id<ICTTTextStorageStyler> styler;
@property (readonly, nonatomic) NSMutableArray *deletedRanges;
@property (readonly, copy, nonatomic) NSUUID *replicaID;
@property (readonly, nonatomic) ICTTMergeableAttributedString *mergeableString;
@property (readonly, nonatomic) ICTTMergeableStringVersionedDocument *document;
@property (nonatomic) char convertAttributes;
@property (nonatomic) char shouldConvertTablesToTabs;
@property (copy, nonatomic) NSArray *pasteboardTypes;
@property (nonatomic) char retainOriginalFormatting;
@property (nonatomic) char filterSubstringAttributes;
@property (nonatomic) char filterPastedAttributes;
@property (nonatomic) char filterSubstringAttributesForPlainText;
@property (nonatomic) char disableUndoCoalesceBreaking;
@property (nonatomic) char isPausingUndoActions;
@property (nonatomic) char isPerformingAccessibilityUndoableTextInsertion;
@property (nonatomic) char isHandlingTextCheckingResults;
@property (nonatomic) char isTypingOrMarkingText;
@property (nonatomic) char isSelectingText;
@property (nonatomic) char hasEditedCharactersAfterTextSelection;
@property (nonatomic) char isDragging;
@property (nonatomic) char isDropping;
@property (nonatomic) char isResettingBaseWritingDirection;
@property (nonatomic) char isReadingSelectionFromPasteboard;
@property (nonatomic) char isEditingViaWritingTools;
@property (nonatomic) char isUndoCoalescingForWritingTools;
@property (nonatomic) char isEditingPlaceholderForWritingTools;
@property (retain, nonatomic) NSUUID *writingToolsSessionUUID;
@property (nonatomic) char isMarkingTextForHeadingRename;
@property (nonatomic) char mustZoomTextBeforeReplacingCharactersInRange;
@property (nonatomic) char isChangingNoteContentFontByFontPanel;
@property (nonatomic) char isChangingTypingAttributeFontByFontPanel;
@property (nonatomic) char isPastingStyle;
@property (nonatomic) char isDroppingChecklistItem;
@property (nonatomic) char isDroppingChecklistItemInsideChecklist;
@property (nonatomic) char isDroppingLastChecklistItem;
@property (nonatomic) char isDeletingBackwards;
@property (nonatomic) char isEndingEditing;
@property (nonatomic) char isZombie;
@property (readonly, nonatomic) char wantsTimestampUpdates;
@property (readonly, nonatomic) char isSkippingTimestampUpdates;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)bulletTextAttributesWithTextFont:(id)a0 paragraphStyle:(id)a1 zoomFactor:(double)a2;
+ (id)filteredAttributedSubstring:(id)a0 fromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 forPlainText:(char)a2 forStandardizedText:(char)a3 fixAttachments:(char)a4 insertListMarkers:(char)a5;
+ (void)fixAttachmentsForRenderingInAttributedString:(id)a0 forPlainText:(char)a1 forStandardizedText:(char)a2;
+ (double)listItemGlyphPointSizeForUnorderedListStyle:(unsigned int)a0 zoomFactor:(double)a1;
+ (id)removeDataDetectorLinksForAttributedString:(id)a0;
+ (id)removeTextAttachmentsForAttributedString:(id)a0 translateICTTFont:(char)a1;
+ (id)standardizedAttributedStringFromAttributedString:(id)a0 withStyler:(id)a1 fixAttachments:(char)a2 translateICTTFont:(char)a3 context:(id)a4;

- (unsigned long long)length;
- (id)string;
- (void).cxx_destruct;
- (id)attribute:(id)a0 atIndex:(unsigned long long)a1 effectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2;
- (id)attribute:(id)a0 atIndex:(unsigned long long)a1 longestEffectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (id)attributedSubstringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)attributesAtIndex:(unsigned long long)a0 effectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (id)attributesAtIndex:(unsigned long long)a0 longestEffectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)beginEditing;
- (void)endEditing;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withAttributedString:(id)a1;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withString:(id)a1;
- (void)setAttributes:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)dataFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 documentAttributes:(id)a1 error:(id *)a2;
- (void)edited:(unsigned long long)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 changeInLength:(long long)a2;
- (void)addTextLayoutManager:(id)a0;
- (void)breakUndoCoalescing;
- (char)isEditing;
- (void)removeTextLayoutManager:(id)a0;
- (id)initWithDocument:(id)a0;
- (void)restoreSelection:(id)a0;
- (void)addUndoCommand:(id)a0;
- (unsigned long long)mergeWithDocument:(id)a0;
- (id)editAtIndex:(unsigned long long)a0;
- (void)enumerateEditsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 usingBlock:(id /* block */)a1;
- (id)initWithData:(id)a0 replicaID:(id)a1;
- (void)redactAuthorAttributionsToCurrentUser;
- (void)replaceWithDocument:(id)a0;
- (void)setTimestamp:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)_icaxUnfilteredAttributedString;
- (void)executeDelayedFixupAfterEditing;
- (void)forceFixupAfterEditingIfDelayed;
- (void)resetHighlightsAttributedString;
- (void)applyUndoGroup:(id)a0;
- (void)applyUndoWithBlock:(id /* block */)a0;
- (void)beginSkippingTimestampUpdates;
- (void)beginTemporaryAttributeEditing;
- (void)beginTemporaryAttributes;
- (void)convertNSTablesToTabs:(id)a0;
- (id)copyDataForUTI:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 persistenceHelper:(id)a2;
- (id)customPasteboardDataFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 persistenceHelper:(id)a1;
- (void)editWithAttributeOptions:(unsigned long long)a0 usingBlock:(id /* block */)a1;
- (void)editedAttributeRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)editedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 changeInLength:(long long)a1;
- (void)endSkippingTimestampUpdates;
- (void)endTemporaryAttributeEditing;
- (void)endTemporaryAttributes;
- (id)filteredAttributedStringForUTI:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)filteredAttributedSubstringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)filteredAttributedSubstringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 insertListMarkers:(char)a1;
- (void)fixupAfterEditing;
- (void)fixupAfterEditingDelayedToEndOfRunLoop;
- (char)hasNamedStyle:(unsigned int)a0 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)initWithAttributedString:(id)a0 replicaID:(id)a1;
- (id)initWithAttributedString:(id)a0 replicaID:(id)a1 sourceZoomController:(id)a2 keepSourceZoomController:(char)a3 existingStyler:(id)a4;
- (char)isDeletingContentAttachmentWithReplacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 replacementLength:(unsigned long long)a1;
- (char)isDeletingDictationAttachmentWithReplacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 replacementLength:(unsigned long long)a1;
- (char)isEditingOrConvertingMarkedText:(char)a0;
- (char)isRightToLeftAtIndex:(long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })logicalRangeForLocation:(unsigned long long)a0;
- (char)mergeableStringIsEqualAfterSerialization:(id)a0;
- (id)newCoalescingUndoGroup;
- (id)paragraphUUIDsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)plainTextParagraphsFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)preReplaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withStringLength:(unsigned long long)a1;
- (void)refreshAllAttributes;
- (void)resetTTEdits;
- (void)resetUndoManager;
- (void)restoreAttributedString:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })safeCharacterRangeForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)saveSelectionDuringBlock:(id /* block */)a0;
- (void)saveSelectionDuringBlock:(id /* block */)a0 affinity:(unsigned long long)a1;
- (id)savedSelectionWithSelectionAffinity:(unsigned long long)a0;
- (char)shouldBreakUndoCoalescingWithReplacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 replacementLength:(unsigned long long)a1;
- (id)standardizedAttributedStringFixingTextAttachmentsForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 context:(id)a1;
- (id)standardizedAttributedStringFixingTextAttachmentsForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 styler:(id)a1 context:(id)a2;
- (id)standardizedAttributedStringFixingTextAttachmentsInContext:(id)a0;
- (void)styleTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (char)textViewHasMarkedText:(id)a0;
- (char)validateIndex:(unsigned long long)a0 effectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;

@end

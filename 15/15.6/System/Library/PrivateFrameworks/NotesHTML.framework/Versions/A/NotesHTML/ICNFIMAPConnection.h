@class NSString, NSRecursiveLock, NSArray, ICNFMCInvocationQueue, NSMutableDictionary, NSMutableSet, ICNFIMAPGateway, ICNFIMAPMailbox;
@protocol ICNFIMAPAccount;

@interface ICNFIMAPConnection : ICNFMCConnection {
    NSRecursiveLock *_imapConnectionLock;
    NSRecursiveLock *_separatorCharLock;
    unsigned long long _capabilityFlags;
    long long _connectionState;
    NSMutableSet *_capabilities;
    NSString *_separatorChar;
    NSString *_selectedMailbox;
    ICNFIMAPMailbox *_selectedIMAPMailbox;
    char _selectedMailboxIsReadOnly;
    unsigned long long _commandNumber;
    unsigned int _readBufferSize;
    double _expirationTime;
    ICNFMCInvocationQueue *_streamEventQueue;
    NSMutableDictionary *_unhandledTaggedResponses;
    unsigned long long _fetchSizeNextReadingIndex;
    double _fetchSizeRollingAverage;
    char _fetchSizeFirstTime;
    char _fetchSizeFilledHistory;
    double _fetchSizeRecentTimes[8];
    NSRecursiveLock *_validatingLock;
    ICNFIMAPGateway *_gateway;
    unsigned long long _lastIdleSequenceNumber;
    unsigned long long _lastIdleSessionNumber;
    char _createsGateway;
    char _executingInternalReconnect;
}

@property char sentID;
@property (weak) id<ICNFIMAPAccount> account;
@property (retain) ICNFIMAPGateway *gateway;
@property (retain, nonatomic) ICNFIMAPMailbox *selectedIMAPMailbox;
@property (nonatomic) char isValidating;
@property char canStartIdle;
@property (readonly, nonatomic) char isIdle;
@property (readonly, copy, nonatomic) NSString *displayName;
@property (readonly, nonatomic) long long connectionState;
@property (readonly, nonatomic) long long currentConnectionState;
@property (readonly, nonatomic) char isDisconnected;
@property (readonly, nonatomic) char shouldExecuteOperationsImmediately;
@property (readonly, copy) NSArray *capabilities;
@property (copy) NSString *separatorChar;
@property (nonatomic) unsigned int readBufferSize;

+ (void)initialize;
+ (char)automaticallyNotifiesObserversForKey:(id)a0;
+ (id)capabilityNameForCapability:(unsigned long long)a0;
+ (char)_defaultsToBackground;
+ (void)_setReadSizeParameters;
+ (id)keyPathsForValuesAffecting_gateway;
+ (unsigned int)minimumFetchChunkSize;

- (void)dealloc;
- (id)debugDescription;
- (id)description;
- (id)init;
- (void).cxx_destruct;
- (void)disconnect;
- (void)quit;
- (char)_reconnect;
- (void)_setupConnection;
- (char)authenticate;
- (void)_transitionToState:(long long)a0;
- (char)supportsCapability:(unsigned long long)a0;
- (id)authenticationMechanisms;
- (id)_authenticateWithPlainTextSchemes;
- (char)_completeConnectionWithResult:(char)a0;
- (id)_gateway;
- (char)_readLineIntoData:(id)a0 error:(id *)a1;
- (char)_startTLS;
- (char)_writeData:(id)a0 dontLogBytesInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 error:(id *)a2;
- (void)discoverAccountSettings;
- (char)isValidAllowNetworking:(char)a0;
- (char)sendIDIfNeeded;
- (char)supportsPlainTextSchemes;
- (void)_addToCapabilities:(id)a0;
- (void)_clearCapabilities;
- (id)_copyNextTaggedOrContinuationResponseForCommand:(id)a0;
- (id)_copyNextTaggedOrContinuationResponseForCommand:(id)a0 exists:(unsigned long long *)a1 receivedExists:(char *)a2;
- (void)_fetchCapabilitiesIfNeeded;
- (void)_fetchSeparatorCharIfNeeded;
- (void)_handleBytesAvailable;
- (char)_isTemporaryError:(id)a0;
- (char)_readBytesIntoData:(id)a0 desiredLength:(long long)a1 error:(id *)a2;
- (char)_readDataWithRemainingByteCount:(long long)a0 intoData:(id)a1 error:(id *)a2;
- (char)_sendCommand:(id)a0 response:(id *)a1;
- (void)_socketDiedError:(id *)a0;
- (void)_transitionToState:(long long)a0 selectedMailbox:(id)a1 readOnly:(char)a2;
- (void)disconnectAndNotify:(char)a0;
- (char)executeAggregateStatus:(id)a0;
- (char)executeAppend:(id)a0;
- (char)executeAuthenticate:(id)a0;
- (char)executeCapability:(id)a0;
- (char)executeDone:(id)a0;
- (char)executeFetch:(id)a0;
- (char)executeID:(id)a0;
- (char)executeIdle:(id)a0;
- (char)executeListOrLSub:(id)a0;
- (char)executeLogin:(id)a0;
- (char)executeLogout:(id)a0;
- (char)executeNamespace:(id)a0;
- (char)executeNoop:(id)a0;
- (char)executeStartTLS:(id)a0;
- (char)executeStatus:(id)a0;
- (char)executeUIDExpunge:(id)a0;
- (char)executeUIDStore:(id)a0;
- (char)executeUnselect:(id)a0;
- (id)mailboxNameIfSelected:(char)a0;
- (id)separatorCharIfAvailable;
- (char)startIdle;
- (char)executeUIDCopy:(id)a0;
- (id)initWithPendingGateway:(char)a0 account:(id)a1;
- (char)_authenticateWithSaslClient:(id)a0;
- (id)_copyNextServerResponse:(id *)a0;
- (char)_correctMailboxIsSelectedForOperation:(id)a0;
- (id)_errorForResponse:(id)a0 operation:(id)a1;
- (id)_getErrorFromFailedAuthenticationResponse:(id)a0 forOperation:(id)a1 usingSASL:(char)a2;
- (char)_isFetchResponseValid:(id)a0;
- (char)_recordMailboxResponse:(id)a0 forOperation:(id)a1;
- (char)_recordMailboxResponse:(id)a0 forOperation:(id)a1 exists:(unsigned long long *)a2 fromIDLE:(char)a3;
- (void)_recordResponse:(id)a0 forOperation:(id)a1;
- (char)_recordUntaggedResponse:(id)a0 forOperation:(id)a1;
- (char)_recordUntaggedResponse:(id)a0 forOperation:(id)a1 exists:(unsigned long long *)a2 receivedExists:(char *)a3 fromIDLE:(char)a4;
- (id)_responseFromSendingOperation:(id)a0 receivedExists:(char *)a1;
- (id)_responseFromSendingOperation:(id)a0 tryCreate:(char *)a1 receivedExists:(char *)a2;
- (void)_setError:(id)a0 forCommand:(id)a1;
- (void)_setSelectedMailbox:(id)a0;
- (id)_stateStringIncludingPII:(char)a0;
- (char)_tryToStartValidating;
- (char)executeClientOperation:(id)a0;
- (char)executeSelectOperation:(id)a0;
- (char)executeSubscribeOperation:(id)a0;
- (char)executeUIDSearch:(id)a0;
- (char)needsSelectForMailboxName:(id)a0 gateway:(id)a1;
- (char)prepareAndExecuteOperation:(id)a0 outWrongState:(char *)a1;
- (void)resetTimingHistory;
- (void)setReadBufferSizeFromElapsedTime:(double)a0 bytesRead:(unsigned int)a1;
- (void)updateCanStartIdle:(char)a0;
- (double)updatedRecentAverageWithNewValue:(double)a0;

@end

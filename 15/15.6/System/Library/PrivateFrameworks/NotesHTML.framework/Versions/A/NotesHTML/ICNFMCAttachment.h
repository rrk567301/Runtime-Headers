@class NSProgress, NSURL, NSNumber, StationeryCompositeImage, NSDate, NSArray, NSDictionary, NSPort, NSImage, NSString, ICNFMCMimePart, ICNFMCMimeBody, NSData, NSFileWrapper, NSError, NSBlockOperation;

@interface ICNFMCAttachment : NSObject <NSURLSessionDownloadDelegate> {
    unsigned long long _approximateSize;
    NSImage *_iconImage;
    ICNFMCMimePart *_mimePart;
    id _currentDataLock;
    NSData *_currentData;
    NSData *_originalData;
    id _archiveFileWrapperLock;
    char _isMailDropImageThumbnail;
    char _isAutoArchiveAttachment;
}

@property (nonatomic) unsigned long long approximateSize;
@property (retain, nonatomic) NSData *currentData;
@property (nonatomic) struct CGSize { double width; double height; } resizedImageSize;
@property (retain, nonatomic) NSBlockOperation *fileReadingOperation;
@property (retain, nonatomic) NSFileWrapper *fileWrapper;
@property (nonatomic) unsigned short finderFlags;
@property (nonatomic) char hasResourceForkData;
@property (retain, nonatomic) NSImage *iconImage;
@property (nonatomic) long long imageByteCountFromHeaders;
@property (nonatomic) struct CGSize { double width; double height; } imageSizeFromHeaders;
@property (retain, nonatomic) ICNFMCMimeBody *mimeBody;
@property (retain, nonatomic) NSData *originalData;
@property (copy, nonatomic) NSString *originalFilename;
@property (retain, nonatomic) StationeryCompositeImage *stationeryCompositeImage;
@property (readonly, nonatomic) NSPort *downloadPort;
@property (readonly, nonatomic) ICNFMCAttachment *attachmentWithCurrentData;
@property (nonatomic) char isAutoArchiveAttachment;
@property (readonly, nonatomic) char isRemotelyAccessed;
@property (readonly, copy, nonatomic) NSString *remoteAccessMimeType;
@property (readonly, nonatomic) char hasPendingBackgroundRead;
@property (readonly, nonatomic) char isDataDownloaded;
@property (retain, nonatomic) NSProgress *downloadProgress;
@property (retain, nonatomic) NSDate *downloadURLExpiration;
@property (retain, nonatomic) NSError *downloadError;
@property (copy, nonatomic) NSString *cloudKitRecordName;
@property (nonatomic) char isMailDropImageArchive;
@property (nonatomic) char isMailDropImageThumbnail;
@property (nonatomic) char isMailDropIndividualImage;
@property (retain, nonatomic) NSURL *remoteURL;
@property (retain, nonatomic) NSURL *downloadURL;
@property (retain, nonatomic) NSURL *downloadDirectory;
@property (copy, nonatomic) NSString *savedPath;
@property (retain, nonatomic) NSString *filenameForSaving;
@property (copy, nonatomic) NSString *filename;
@property (readonly, copy, nonatomic) NSString *filenameWithoutHiddenExtension;
@property (retain, nonatomic) NSNumber *filePermissions;
@property (retain, nonatomic) NSNumber *fileSize;
@property (readonly, nonatomic) char isFullSize;
@property (retain, nonatomic) ICNFMCMimePart *mimePart;
@property (copy, nonatomic) NSString *messageID;
@property (copy, nonatomic) NSString *contentID;
@property (nonatomic) char isUnreferencedAttachment;
@property (readonly, copy, nonatomic) NSString *typeIdentifier;
@property (copy, nonatomic) NSString *mimeType;
@property (nonatomic) unsigned int type;
@property (nonatomic) unsigned int creator;
@property (copy, nonatomic) NSString *extension;
@property (nonatomic) char shouldHideExtension;
@property (copy, nonatomic) NSString *mailSpecialHandlingType;
@property (nonatomic) char isPartOfStationery;
@property (readonly, nonatomic) char isStationeryCompositeImage;
@property (copy, nonatomic) NSArray *whereFroms;
@property (copy, nonatomic) NSDictionary *quarantineProperties;
@property (readonly, nonatomic) char couldConfuseWindowsClients;
@property (readonly, nonatomic) char isVideoOrAudio;
@property (readonly, nonatomic) char isPDF;
@property (nonatomic) char isCalendarInvitation;
@property (readonly, nonatomic) char isImage;
@property (readonly, nonatomic) char isScalable;
@property (readonly, nonatomic) char isDirectory;
@property (readonly, copy, nonatomic) NSString *symbolicLinkDestinationForFileWrapper;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_backgroundFileReadingQueue;
+ (char)automaticallyNotifiesObserversOfOriginalData;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (id)initWithData:(id)a0;
- (void)URLSession:(id)a0 task:(id)a1 didCompleteWithError:(id)a2;
- (id)initWithFileWrapper:(id)a0;
- (id)initWithFileURL:(id)a0;
- (void)URLSession:(id)a0 downloadTask:(id)a1 didFinishDownloadingToURL:(id)a2;
- (void)URLSession:(id)a0 downloadTask:(id)a1 didWriteData:(long long)a2 totalBytesWritten:(long long)a3 totalBytesExpectedToWrite:(long long)a4;
- (char)_isExpired;
- (id)_privateImageMetadataDescriptors;
- (id)_freshFileWrapper;
- (void)_mcAttachmentCommonInit;
- (void)_setupFileWrapper:(id)a0;
- (id)appleDoubleDataWithFilename:(const char *)a0 length:(unsigned long long)a1;
- (id)appleSingleDataWithFilename:(const char *)a0 length:(unsigned long long)a1;
- (void)discardIconImage;
- (id)initWithMailInternalData:(id)a0;
- (id)initWithRemoteURL:(id)a0;
- (void)isImage:(char *)a0 isPDF:(char *)a1 bestMimeType:(id *)a2;
- (void)revertToOriginalData;
- (void)setFileNameForResizedImage:(id)a0;
- (void)_configureWithMimePart;
- (id)_dataWithCleanedImageMetadata;
- (void)_downloadFinished;
- (void)_finishedCoordinatedFileReadingWithURL:(id)a0;
- (char)_hasPrivateImageMetadata;
- (void)_setCurrentDataIfNil:(id)a0;
- (void)_takeInfoFromMessageAttachment:(id)a0 saveOriginalData:(char)a1 cleanImageMetadata:(char)a2;
- (unsigned long long)approximateSizeOfWrapper;
- (id)beginBackgroundFileReading;
- (char)createEmptyAttachmentAtPath:(id)a0;
- (id)dataForFetchLevel:(long long)a0;
- (id)fileWrapperForFetchLevel:(long long)a0;
- (id)getCompressedDataAndArchiveType:(long long *)a0 error:(id *)a1;
- (id)initWithHeaderURL:(id)a0;
- (id)initWithStationeryCompositeImage:(id)a0;
- (void)setDataForResizedImage:(id)a0;
- (void)setFromHeadersImageSize:(struct CGSize { double x0; double x1; })a0 byteCount:(long long)a1;
- (void)setSizeForResizedImage:(struct CGSize { double x0; double x1; })a0;
- (void)takeNewDataFromPath:(id)a0;

@end

@interface DMManager : NSObject {
    id _instPriv;
}

@property (readonly, nonatomic) id SK_DM_delegate;

+ (void)initialize;
+ (id)sharedManager;
+ (char)daemonRunning;
+ (id)sharedManagerForThread;
+ (char)systemResourcesSufficient;

- (void)dealloc;
- (id)init;
- (id)delegate;
- (void)setDelegate:(id)a0;
- (void)setLanguage:(id)a0;
- (struct __DADisk { } *)copyRootDisk:(int *)a0;
- (char)isAPFSVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isCoreStorageCompositeLogicalVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isSolidStateDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (void)setDefaultDASession:(struct __DASession { } *)a0;
- (void)done;
- (struct AuthorizationOpaqueRef { } *)authorization;
- (void)setAuthorization:(struct AuthorizationOpaqueRef { } *)a0;
- (id)volumeUUIDForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isMountedVolume:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)mountDisk:(struct __DADisk { } *)a0 entireDisk:(char)a1 atPath:(id)a2 readOnly:(char)a3 otherArguments:(id)a4;
- (id)mountPointForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)unmountDisk:(struct __DADisk { } *)a0 entireDisk:(char)a1 force:(char)a2;
- (id)volumeNameForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isInternalDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyDiskForPath:(id)a0 error:(int *)a1;
- (id)DMAppleRAIDParentUUIDForUUID:(id)a0 error:(int *)a1;
- (struct __DADisk { } *)DMAppleRAIDUUIDLookup:(id)a0;
- (id)ioContentToHuman:(id)a0 context:(id)a1 error:(int *)a2;
- (char)isFileCasePreservingDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)partitionChildrenForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)DMAppleRAIDMemberRebuildProgress:(id)a0 error:(int *)a1;
- (id)DMAppleRAIDUUIDForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyNextDiskInMapForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isEqualDisks:(struct __DADisk { } *)a0 anotherDisk:(struct __DADisk { } *)a1 error:(int *)a2;
- (id)opticalDeviceTypeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (int)_ensureRecoveryPartitionForVolume:(struct __DADisk { } *)a0 macOSXDiskImageFile:(id)a1 macOSXDiskImageChunkListFile:(id)a2 diagnosticsDiskImageFile:(id)a3 diagnosticsDiskImageChunkListFile:(id)a4 verifyImage:(char)a5 repairDonor:(char)a6 diagnosticsMachineBlacklist:(char)a7;
- (int)_setLegacyDiskForBootPreference:(struct __DADisk { } *)a0 driveHint:(struct __DADisk { } *)a1 nextOnly:(char)a2;
- (int)_setNetBootPreference:(unsigned int)a0 server:(id)a1 interface:(id)a2 nextOnly:(char)a3;
- (int)_setWindowsUEFIDiskForBootPreference:(struct __DADisk { } *)a0 driveHint:(struct __DADisk { } *)a1 nextOnly:(char)a2 winUEFIInstaller:(char)a3;
- (char)authorizationInteraction;
- (id)bayNameForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)blockSizeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)busSpecificKeysForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)canRepairPermissions:(struct __DADisk { } *)a0 error:(int *)a1;
- (void)cancelCurrentOperationWithShortExpertName:(id)a0;
- (int)checkAbilityToMakeBootable:(struct __DADisk { } *)a0 onAnyMachine:(char)a1 atAll:(char *)a2 yesButDestructively:(char *)a3;
- (int)checkAbilityToMakeBootable_actualsimplepartition_:(struct __DADisk { } *)a0 onAnyMachine:(char)a1 atAll:(char *)a2 yesButDestructively:(char *)a3;
- (int)checkBootabilityOnThisMachine:(struct __DADisk { } *)a0 isBootable:(char *)a1;
- (int)checkBootabilityOnThisMachine_actualsimplepartition_:(struct __DADisk { } *)a0 isBootable:(char *)a1;
- (char)checkClientDelegate;
- (int)checkLegacyBootSupport:(char *)a0;
- (int)checkLegacyBootabilityForNonOpticalPartition:(struct __DADisk { } *)a0 isLegacyBootable:(char *)a1 os:(id *)a2;
- (int)checkLegacyBootabilityForNonOpticalWholeDisk:(struct __DADisk { } *)a0 isLegacyBootable:(char *)a1 os:(id *)a2;
- (int)checkLegacyBootabilityForOpticalWholeDisk:(struct __DADisk { } *)a0 isLegacyBootable:(char *)a1 os:(id *)a2;
- (int)checkMacOSXBootability:(struct __DADisk { } *)a0 isBootable:(char *)a1;
- (int)checkOpticalDiscBootability:(struct __DADisk { } *)a0 isBootable:(char *)a1;
- (int)checkPrebootContentForMacOSAPFSVolume:(struct DMUDSPrivRec { unsigned long long x0; long long x1; char x2[150]; } *)a0 isValidForBoot:(char *)a1;
- (int)checkUEFIWindowsBootSupport:(char *)a0;
- (int)checkWindowsUEFIBootabilityForNonOpticalPartition:(struct __DADisk { } *)a0 isWindowsUEFIBootable:(char *)a1 os:(id *)a2;
- (int)checkWindowsUEFIBootabilityForOpticalWholeDisk:(struct __DADisk { } *)a0 isWindowsUEFIBootable:(char *)a1 os:(id *)a2;
- (id)childrenForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)clientConforms:(id)a0 error:(int *)a1;
- (int)clientInfos:(id *)a0;
- (id)conversionProgressForCoreStorageDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)conversionProgressForLogicalVolume:(id)a0 error:(int *)a1;
- (id)conversionProgressForLogicalVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)conversionStateForLogicalVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyBooterDiskForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyDiskForArgumentName:(id)a0 timeout:(double)a1 complete:(char *)a2;
- (int)copyDiskForBootPreference:(struct __DADisk **)a0;
- (struct __DADisk { } *)copyDiskForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyDiskForDiskUUID:(id)a0 error:(int *)a1;
- (struct __DADisk { } *)copyDiskForMountPoint:(id)a0 error:(int *)a1;
- (struct __DADisk { } *)copyDiskForPartitionIdentifier:(id)a0 forWholeDisk:(struct __DADisk { } *)a1 error:(int *)a2;
- (struct __DADisk { } *)copyDiskForPathNoFollow:(id)a0 error:(int *)a1;
- (struct __DADisk { } *)copyDiskForVolumeName:(id)a0 error:(int *)a1;
- (struct __DADisk { } *)copyDiskForVolumeUUID:(id)a0 error:(int *)a1;
- (struct __DADisk { } *)copyFirstDiskInMapForWholeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyLastDiskInMapForWholeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyPreviousDiskInMapForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyRecoveryDiskForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)copyWholeDiskForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)coreStorageStatusSummaryForDisk:(struct __DADisk { } *)a0 orForCSUUID:(id)a1 error:(int *)a2;
- (int)cryptoMigrationPlanForLOG:(struct DMUDSPrivRec { unsigned long long x0; long long x1; char x2[150]; } *)a0 transform:(id)a1 currentOldSS:(id *)a2 supported:(char *)a3 planScript:(id *)a4 plannedNewSS:(id *)a5 plannedChangeSS:(char *)a6 plannedChangeLOG:(char *)a7;
- (int)cryptoStateForDisk:(struct __DADisk { } *)a0 options:(id)a1 details:(id *)a2;
- (void)cryptoStatusForLOG:(struct DMUDSPrivRec { unsigned long long x0; long long x1; char x2[150]; } *)a0 inSS:(id)a1 yesInfoFileVaulted:(char *)a2 yesInfoFullyEncrypted:(char *)a3 yesInfoBusy:(char *)a4 yesInfoDirection:(char *)a5 yesInfoLocked:(char *)a6 nonNilInfoProgress:(id *)a7 apfsDataVolSubCase:(char *)a8;
- (int)decryptDisk:(struct __DADisk { } *)a0 options:(id)a1 details:(id *)a2;
- (struct __DASession { } *)defaultDASession;
- (id)descriptionForDisk:(struct __DADisk { } *)a0;
- (id)deviceNameForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)deviceNodeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)deviceTreePathForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)directChildrenForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)diskForPath:(id)a0 error:(int *)a1;
- (id)diskIdentifierForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)diskUUIDForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)disks;
- (id)dmManagerPrivVars;
- (char)doMountDisk:(struct __DADisk { } *)a0 atPath:(id)a1 readOnly:(char)a2 otherArguments:(id)a3 timeout:(double)a4 errorDict:(id *)a5;
- (char)ejectDisk:(struct __DADisk { } *)a0;
- (char)ejectDisk:(struct __DADisk { } *)a0 errorDict:(id *)a1;
- (int)ejectDiskOnly:(struct __DADisk { } *)a0 errorDict:(id *)a1;
- (int)encryptDisk:(struct __DADisk { } *)a0 user:(id)a1 passdata:(id)a2 hint:(id)a3 options:(id)a4 details:(id *)a5;
- (int)ensureRecoveryPartitionForVolume:(struct __DADisk { } *)a0 macOSXDiskImageFile:(id)a1 macOSXDiskImageChunkListFile:(id)a2 diagnosticsDiskImageFile:(id)a3 diagnosticsDiskImageChunkListFile:(id)a4 verifyImage:(char)a5 repairDonor:(char)a6 bless:(char)a7;
- (int)ensureRecoveryPartitionForVolume:(struct __DADisk { } *)a0 macOSXDiskImageFile:(id)a1 macOSXDiskImageChunkListFile:(id)a2 diagnosticsDiskImageFile:(id)a3 diagnosticsDiskImageChunkListFile:(id)a4 verifyImage:(char)a5 repairDonor:(char)a6 diagnosticsMachineBlacklistInhibit:(char)a7;
- (int)ensureRecoveryPartitionForVolume:(struct __DADisk { } *)a0 macOSXDiskImageFile:(id)a1 macOSXDiskImageChunkListFile:(id)a2 verifyImage:(char)a3 repairDonor:(char)a4;
- (int)ensureRecoveryPartitionForVolume:(struct __DADisk { } *)a0 macOSXDiskImageFile:(id)a1 macOSXDiskImageChunkListFile:(id)a2 verifyImage:(char)a3 repairDonor:(char)a4 bless:(char)a5;
- (int)ensureRecoveryPartitionForVolume:(struct __DADisk { } *)a0 macOSXDiskImageFile:(id)a1 verifyImage:(char)a2 repairDonor:(char)a3;
- (id)filesystemForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (int)findBooterDiskContainingBaseSystemForDisk:(struct __DADisk { } *)a0;
- (int)getDiskForBootPreference:(struct __DADisk **)a0;
- (int)getNetBootPreference:(unsigned int *)a0 withServer:(id *)a1 forInterface:(id *)a2;
- (id)initWithSK_DM_Delegate:(id)a0;
- (id)ioContentOfDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)ioContentToHuman:(id)a0 error:(int *)a1;
- (id)ioKitNameForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)ioKitSizeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAESHardwareDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAPFSContainerReferenceDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAPFSContainerSchemeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAPFSPhysicalStoreDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAPFSSnapshotDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAppleDiskImage:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAppleRAIDDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAppleRAIDMemberDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAppleRAIDSetDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAppleRAIDSpareDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isAppleRAIDUUID:(id)a0 error:(int *)a1;
- (char)isBooterDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isBooterPartitionDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isCD:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isChildDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isChildOfWholeDisk:(struct __DADisk { } *)a0 wholeDisk:(struct __DADisk { } *)a1 error:(int *)a2;
- (char)isCoreStorageEncryptedLogicalVolumeDisk:(struct __DADisk { } *)a0 locked:(char *)a1 type:(id *)a2 error:(int *)a3;
- (char)isCoreStorageLogicalVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isCoreStoragePhysicalVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isDVD:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isDisallowedCoreStorageOperationsForLogicalVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (int)isDiskSuitableForDecryption:(struct __DADisk { } *)a0 options:(id)a1 suitable:(char *)a2 details:(id *)a3;
- (int)isDiskSuitableForEncryption:(struct __DADisk { } *)a0 options:(id)a1 suitable:(char *)a2 details:(id *)a3;
- (char)isEjectableDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isErasableOpticalMedia:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isFileCaseSensitiveDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isFirstDiskInMap:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isIPodDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isJournaledDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isLastDiskInMap:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isLeafDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isLiveResizablePartitionForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isModificationSuccessLikelyForPartitionMap:(struct __DADisk { } *)a0 why:(id *)a1 error:(int *)a2;
- (char)isMountableVolume:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isNetworkDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isOSInternalDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isOnSameWholeDiskAsRoot:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isOpenDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isOpticalDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isPartitionDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isRecoveryBooterPartitionDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isRecoveryDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isRemovableDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isRemovableMediaOrExternalDeviceDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isRootVolume:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isSiblingDisks:(struct __DADisk { } *)a0 anotherDisk:(struct __DADisk { } *)a1 reflexive:(char)a2 error:(int *)a3;
- (int)isSuitableTransformForLOG:(struct DMUDSPrivRec { unsigned long long x0; long long x1; char x2[150]; } *)a0 transform:(id)a1 suitable:(char *)a2 plan:(id *)a3 details:(id)a4;
- (char)isSystemImage:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isUnrecognizedCoreStoragePhysicalVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isUserDataVolume:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isVirtualWholeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isVolumeNameCasePreservingDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isVolumeNameCaseSensitiveDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isWholeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isWritableDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isWritableMedia:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isWritableVolume:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isXsanComponentDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)isXsanFilesystemDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (int)makeBootable:(struct __DADisk { } *)a0 filesystem:(id)a1 newDisk:(struct __DADisk **)a2;
- (int)makeLegacyBootable:(struct __DADisk { } *)a0 partitionDataRuns:(id)a1 MBRHeaderDataRun:(id)a2 setActive:(unsigned char)a3 updateBootIni:(char)a4 options:(id)a5;
- (int)makeVolumeCaseSensitive:(struct __DADisk { } *)a0;
- (char)mapLayoutMatching:(struct __DADisk { } *)a0 matchScheme:(int)a1 matchPartitions:(id)a2 error:(int *)a3;
- (id)mediaNameForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)mediaTypeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (int)modifyJournalOnDisk:(struct __DADisk { } *)a0 enableJournaling:(char)a1 force:(char)a2;
- (int)modifyOwnershipForDisk:(struct __DADisk { } *)a0 enableOwnership:(char)a1;
- (char)mountDisk:(struct __DADisk { } *)a0 entireDisk:(char)a1 atPath:(id)a2 readOnly:(char)a3 otherArguments:(id)a4 errorDict:(id *)a5;
- (char)mountDisk:(struct __DADisk { } *)a0 entireDisk:(char)a1 atPath:(id)a2 readOnly:(char)a3 otherArguments:(id)a4 timeout:(double)a5 errorDict:(id *)a6;
- (int)mountEFISystemPartition:(struct __DADisk { } *)a0 options:(id)a1 espDisk:(struct __DADisk **)a2 espMountPoint:(id *)a3;
- (int)moveJournalInternal:(struct __DADisk { } *)a0;
- (char)needsRebootToBeginCoreStorageConversion:(struct __DADisk { } *)a0 checkRoot:(char)a1 error:(int *)a2;
- (struct __DASession { } *)obtainedClientDASession:(struct __DADisk { } *)a0;
- (id)opticalMediaTypeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)opticalMediaUserVisibleNameForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)optimizationProgressForCoreStorageDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)optimizationProgressForLogicalVolume:(id)a0 error:(int *)a1;
- (id)optimizationProgressForLogicalVolumeDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)partitionIdentifierForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (int)partitionMapSchemeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)permissionsEnabledForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)physicalDisksForDisk:(struct __DADisk { } *)a0 storageSystemName:(id *)a1 error:(int *)a2;
- (int)preBootEnvironment;
- (id)protocolForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)rawDeviceNodeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)rawDisks;
- (id)rawTopLevelDisks;
- (int)recoveryPartitionInfoForVolume:(struct __DADisk { } *)a0 what:(id)a1 info:(id *)a2;
- (int)renameDisk:(struct __DADisk { } *)a0 toName:(id)a1;
- (int)renameDisk:(struct __DADisk { } *)a0 toName:(id)a1 errorDict:(id *)a2;
- (int)replaceDiagnosticsForVolume:(struct __DADisk { } *)a0 diagnosticsDiskImageFile:(id)a1 diagnosticsChunkListFile:(id)a2 verifyImage:(char)a3 allowGrowth:(char)a4 diagnosticsMachineBlacklistInhibit:(char)a5;
- (struct __DADisk { } *)rootDisk:(int *)a0;
- (void)setAuthorizationInteraction:(char)a0;
- (void)setClientDelegate:(id)a0;
- (int)setDiskForBootPreference:(struct __DADisk { } *)a0 atFolderLocation:(id)a1 isOS9:(char)a2;
- (int)setDiskForBootPreference:(struct __DADisk { } *)a0 atFolderLocation:(id)a1 personalize:(char)a2;
- (int)setLegacyDiskForBootPreference:(struct __DADisk { } *)a0 withDriveHint:(struct __DADisk { } *)a1;
- (int)setLegacyDiskForNextOnlyBootPreference:(struct __DADisk { } *)a0 withDriveHint:(struct __DADisk { } *)a1;
- (int)setNVRAM:(id)a0 forKey:(id)a1;
- (int)setNetBootPreference:(unsigned int)a0 withServer:(id)a1 forInterface:(id)a2;
- (int)setNextOnlyNetBootPreference:(unsigned int)a0 withServer:(id)a1 forInterface:(id)a2;
- (int)setUserID:(id)a0 groupID:(id)a1;
- (int)setWindowsInstallerUEFIDiskForNextOnlyBootPreference:(struct __DADisk { } *)a0 withDriveHint:(struct __DADisk { } *)a1;
- (int)setWindowsUEFIDiskForBootPreference:(struct __DADisk { } *)a0 withDriveHint:(struct __DADisk { } *)a1;
- (int)setWindowsUEFIDiskForNextOnlyBootPreference:(struct __DADisk { } *)a0 withDriveHint:(struct __DADisk { } *)a1;
- (id)smartStatusForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (void)stopDiskManagementLog;
- (void)stopInstanceAsNeeded;
- (unsigned int)supportedNetBootProtocols;
- (double)timeoutHint:(id)a0;
- (id)topLevelDisks;
- (id)totalSizeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)unmountDisk:(struct __DADisk { } *)a0 entireDisk:(char)a1 force:(char)a2 errorDict:(id *)a3;
- (char)unmountDisk:(struct __DADisk { } *)a0 entireDisk:(char)a1 force:(char)a2 timeout:(double)a3 errorDict:(id *)a4;
- (int)unmountDisksDeepForPartitionMap:(struct __DADisk { } *)a0 force:(char)a1 timeout:(double)a2;
- (int)unmountEFISystemPartition:(struct __DADisk { } *)a0 options:(id)a1;
- (char)unmountVolumePath:(id)a0 force:(char)a1 errorDict:(id *)a2;
- (int)upgradeDisk:(struct __DADisk { } *)a0 enablePermissions:(char)a1;
- (id)uuidForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)volumeAllocationBlockSizeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)volumeFreeSpaceForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (int)volumeInfoForUnmountedDisk:(struct __DADisk { } *)a0 info:(id *)a1;
- (id)volumeTotalSizeForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (struct __DADisk { } *)wholeDiskForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)wholeDiskHasOS9Drivers:(struct __DADisk { } *)a0 error:(int *)a1;
- (id)wholeDiskIdentifierForDisk:(struct __DADisk { } *)a0 error:(int *)a1;
- (char)wholeDiskSupportsLowLevelFormat:(struct __DADisk { } *)a0 error:(int *)a1;

@end

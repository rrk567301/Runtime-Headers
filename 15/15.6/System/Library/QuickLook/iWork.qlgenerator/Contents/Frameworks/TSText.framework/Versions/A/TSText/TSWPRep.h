@class _TtC6TSText22TSWPSecondaryHighlight, TSWPStorage, TSUColor, TSWPSelection, TSDLayout, CALayer, NSMutableArray, TSWPSearchReference, NSString, CAShapeLayer, NSArray, NSView, NSNumber;
@protocol TSWPLayoutTarget;

@interface TSWPRep : TSDContainerRep <CAAnimationDelegate> {
    double _listLevelIndents[9];
    CALayer *_textLayers[2];
    CAShapeLayer *_caretLayer;
    CAShapeLayer *_selectionHighlightLayer;
    CAShapeLayer *_markHighlightLayer;
    CAShapeLayer *_smartFieldHighlightLayer;
    _TtC6TSText22TSWPSecondaryHighlight *_defaultSecondaryHighlight;
    NSMutableArray *_secondaryHighlights;
    char _caretAnimationDisabled;
    char _suppressCaret;
    struct _NSRange { unsigned long long location; unsigned long long length; } _suppressedMisspellingRange;
    char _updatingHighlights;
    char _selectionChanged;
    char _markChanged;
    unsigned long long _newSelectionFlags;
    char _repFieldsAreActive;
    char _hudStateDirty;
    char _invalidateHUDState;
    TSWPSelection *_dropSelection;
    char _isShowingCommentKnobs;
    char _tornDown;
    char _searchHitsAreInvalid;
}

@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } transformToConvertNaturalToScaledRoot;
@property (retain, nonatomic) NSArray *searchReferences;
@property (retain, nonatomic) CAShapeLayer *floatingCaretLayer;
@property (nonatomic) char dragAndDropCaretLayerIsForCaret;
@property (copy, nonatomic) TSWPSelection *lastSelection;
@property (nonatomic) char platformViewOverRenderableNeedsUpdate;
@property (retain, nonatomic) NSView *platformViewOverRenderable;
@property (retain, nonatomic) TSUColor *overrideCaretColor;
@property (retain, nonatomic) NSNumber *prefersHDR;
@property (retain, nonatomic) TSWPSearchReference *primaryFindResultSearchReference;
@property (nonatomic) char findIsShowing;
@property (readonly, weak, nonatomic) TSDLayout<TSWPLayoutTarget> *layout;
@property (readonly, nonatomic) char textIsVertical;
@property (readonly, nonatomic) TSWPStorage *storage;
@property (readonly, nonatomic) NSArray *columns;
@property (readonly, nonatomic) TSWPSelection *selection;
@property (nonatomic, getter=isSelectionHighlightSuppressed) char suppressSelectionHighlight;
@property (nonatomic) char suppressSelectionControls;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } dragRange;
@property (readonly, nonatomic) char isBeingEdited;
@property (nonatomic) char useKeyboardWhenEditing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (char)shouldUseOSLoupeSession;

- (void)dealloc;
- (void).cxx_destruct;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)drawInContext:(struct CGContext { } *)a0;
- (void)viewDidAppear;
- (Class)layerClass;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRect;
- (void)willBeRemoved;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })columnRectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (char)directlyManagesLayerContent;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })glyphRectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 includingLabel:(char)a1;
- (char)p_doesRep:(id)a0 containCharIndex:(unsigned long long)a1 isStart:(char)a2;
- (id)smartFieldAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)textLayer;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; double x2; double x3; double x4; char x5; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x6; })wordMetricsAtCharIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForCharIndex:(unsigned long long)a0 caretAffinity:(long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForCharIndex:(unsigned long long)a0 leadingEdge:(char)a1 caretAffinity:(long long)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForSelection:(id)a0;
- (unsigned long long)charCountOfGlyphStartingAtCharIndex:(unsigned long long)a0;
- (id)closestColumnForPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)columnForCharIndex:(unsigned long long)a0;
- (void)drawInLayerContext:(struct CGContext { } *)a0;
- (void)drawRubyInContext:(struct CGContext { } *)a0 rubyFieldStart:(unsigned long long)a1 rubyGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (id)footnoteMarkAttachmentAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)footnoteReferenceAttachmentAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)gesturesDidEnd;
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })glyphRectForRubyFieldAtCharIndex:(unsigned long long)a0 glyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)initWithLayout:(id)a0 canvas:(id)a1;
- (char)isOverflowing;
- (char)isPointInSelectedArea:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })labelRectForCharIndex:(unsigned long long)a0;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x2; double x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; double x5; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x6; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x7; })lineMetricsAtCharIndex:(unsigned long long)a0;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x2; double x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; double x5; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x6; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x7; })lineMetricsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })naturalBoundsRectForHyperlinkField:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_caretRectForSelection:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_convertNaturalRectToRotated:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 repAngle:(double)a1;
- (void)p_drawTextInLayer:(id)a0 context:(struct CGContext { } *)a1 limitSelection:(id)a2 rubyGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 renderMode:(unsigned long long)a4 suppressInvisibles:(char)a5;
- (id)p_hyperlinkAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })p_pinPoint:(struct CGPoint { double x0; double x1; })a0 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)p_teardown;
- (void)p_updateLayersForInsertionPointSelection:(id)a0;
- (void)performBlockOnTextLayers:(id /* block */)a0;
- (struct CGPoint { double x0; double x1; })pinToClosestColumn:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })pinToNaturalBounds:(struct CGPoint { double x0; double x1; })a0 andLastLineFragment:(char)a1;
- (id)rubyFieldAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)textBackgroundLayer;
- (unsigned int)fontTraitsForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 includingLabel:(char)a1;
- (void)recursivelyDrawInContext:(struct CGContext { } *)a0 limitSelection:(id)a1 suppressInvisibles:(char)a2;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfDropCapAdornmentAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (char)containsStartOfSelection:(id)a0;
- (void)displayedAnnotationDidHide;
- (char)i_allowCaretForSelection:(id)a0;
- (struct CGPath { } *)newPathForSelection:(id)a0;
- (void)p_drawInContext:(struct CGContext { } *)a0 limitSelection:(id)a1 suppressInvisibles:(char)a2;
- (char)p_hasRenderableTextComments;
- (char)p_hasRenderableTextCommentsLookingForHighlights:(char)a0;
- (char)p_hasRenderableTextHighlights;
- (void)p_invalidateLayersAndPlatformViewIfNecessary;
- (char)p_invalidatePlatformViewOverChildRenderables;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x2; double x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; double x5; struct TSWPFontHeightInfo { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; } x6; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x7; })p_lineMetricsAtPoint:(struct CGPoint { double x0; double x1; })a0 hitTestMode:(int)a1;
- (void)p_refreshPlatformViewOverChildRenderables;
- (void)p_registerNotifications;
- (id)p_selectionTintColor;
- (void)p_unregisterNotifications;
- (void)p_updatePinsForSelection:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForSelection:(id)a0 includeRuby:(char)a1 includePaginatedAttachments:(char)a2;

@end

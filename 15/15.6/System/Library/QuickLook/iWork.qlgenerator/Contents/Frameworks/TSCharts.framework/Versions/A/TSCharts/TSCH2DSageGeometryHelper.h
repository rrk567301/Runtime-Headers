@interface TSCH2DSageGeometryHelper : TSCHSageGeometryHelper {
    double _verticalAxisOverhang;
    double _horizontalAxisOverhang;
    double _rightAxisWidthChange;
    double _bottomAxisHeightChange;
    double _topAxisHeightChange;
    struct CGSize { double width; double height; } _bottomLeftChartTitleOverhang;
    struct CGSize { double width; double height; } _topRightChartTitleOverhang;
    struct CGSize { double width; double height; } _bottomLeftValueAxisTitleOverhang;
    struct CGSize { double width; double height; } _topRightValueAxisTitleOverhang;
    struct CGSize { double width; double height; } _bottomLeftCategoryAxisTitleOverhang;
    struct CGSize { double width; double height; } _topRightCategoryAxisTitleOverhang;
    struct CGSize { double width; double height; } _bottomLeftValueAxisY2TitleOverhang;
    struct CGSize { double width; double height; } _topRightValueAxisY2TitleOverhang;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _chartBodyBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _explodedBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _chartTitleBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _valueAxisTitleBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _categoryAxisTitleBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _valueAxisY2TitleBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _topLegendBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _leftLegendBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _bottomLegendBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _rightLegendBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _topAxisLabelsBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _leftAxisLabelsBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _bottomAxisLabelsBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _rightAxisLabelsBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _topAxisBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _leftAxisBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _bottomAxisBounds;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _rightAxisBounds;
    struct CGPoint { double x; double y; } _explodedBodyShift;
    struct CGPoint { double x; double y; } _outsideLabelsChartTitleShift;
    char _chartLayoutValid;
    char _chartExplodedSizeValid;
    char _chartAxisSizeValid;
    char _chartAxisLabelsSizeValid;
    char _chartTitleSizeValid;
    char _valueAxisTitleSizeValid;
    char _categoryAxisTitleSizeValid;
    char _valueAxisY2TitleSizeValid;
    char _chartLegendSizeValid;
    char _chartValueElementsGeometryValid;
}

+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })computeSageChartAreaBoundsForChartInfo:(id)a0 geometryRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 returningContainingViewportSize:(id *)a2;

- (char)isVertical;
- (char)isArea;
- (char)isLine;
- (char)aspectRatioLocked;
- (struct CGSize { double x0; double x1; })measureText:(id)a0 withParagraphStyle:(id)a1;
- (id)p_model;
- (double)_bottomAxisOuterWidth;
- (double)_horizontalAxisLabelsHeight;
- (double)_leftAxisOuterWidth;
- (double)_rightAxisOuterWidth;
- (double)_seriesSymbolWidth;
- (double)_topAxisOuterWidth;
- (double)_verticalAxisLabelsWidth:(BOOL)a0;
- (char)bottomAxisLabelsVisible;
- (void)calculateCategoryAxisTitleSize;
- (void)calculateChartAxisLabelsSize;
- (void)calculateChartAxisSize;
- (void)calculateChartBodySize;
- (char)calculateChartExplodedSize;
- (void)calculateChartTitleSize;
- (void)calculateValueAxisTitleSize;
- (void)calculateValueAxisY2TitleSize;
- (double)chartTitlePadding;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })computeSageLayoutCBBForSpiceDoc:(char)a0;
- (double)distanceFromXAxisUsingParagraphStyle:(id)a0;
- (double)distanceFromYAxisUsingParagraphStyle:(id)a0;
- (double)fontHeight:(id)a0;
- (char)isScatter;
- (char)leftAxisLabelsVisible;
- (char)p_labelsVisible:(id)a0;
- (double)p_widthFromTicksAndStrokeForAxis:(id)a0;
- (char)rightAxisLabelsVisible;
- (double)seriesCategoryLabelsHorizontalGutter;
- (double)seriesCategoryLabelsVerticalGutter;
- (char)topAxisLabelsVisible;
- (double)xAxisLabelHeight;
- (double)xAxisTitlePadding;
- (double)yAxisLabelHeight:(char)a0;
- (double)yAxisTitlePadding:(char)a0;

@end

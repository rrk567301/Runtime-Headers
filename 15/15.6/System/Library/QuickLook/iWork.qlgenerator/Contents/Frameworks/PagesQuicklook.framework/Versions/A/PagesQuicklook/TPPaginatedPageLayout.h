@class TSURetainedPointerKeyDictionary, NSArray, NSSet, TPBodyLayout, NSMutableSet, TSDFill, TPFootnoteContainerLayout;
@protocol TSWPHeaderFooterProvider, NSFastEnumeration, TPMasterDrawableProvider, TPSectionTemplateDrawableProvider;

@interface TPPaginatedPageLayout : TPPageLayout <TSDWrapInvalidationParent> {
    id<TSWPHeaderFooterProvider> _headerFooterProvider;
    unsigned long long _pageNumber;
    unsigned long long _pageCount;
    char _shouldHeaderFooterBeVisible;
    char _childLayoutsValid;
    TSURetainedPointerKeyDictionary *_oldChildLayouts;
    id<TPSectionTemplateDrawableProvider> _sectionTemplateDrawableProvider;
    unsigned long long _contentFlags;
    int _inInvalidationClusterCount;
    char _childTextLayoutsNeedInvalidationForExteriorWrap;
    NSMutableSet *_anchoredDrawableLayouts;
    id<NSFastEnumeration> _childTextLayoutsForExteriorWrapCache;
    int _childTextLayoutCacheHits;
}

@property (nonatomic, getter=isValidating) char validating;
@property (retain, nonatomic) TSDFill *backgroundFill;
@property (readonly, weak, nonatomic) TPBodyLayout *bodyLayout;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bodyRect;
@property (readonly, nonatomic) char allowsBody;
@property (readonly, nonatomic) char allowsFootnotes;
@property (readonly, nonatomic) char canHavePreviousPageFootnotes;
@property (readonly, nonatomic) unsigned long long pageIndex;
@property (readonly, nonatomic) id<NSFastEnumeration> childTextLayoutsForExteriorWrap;
@property (readonly, nonatomic) char marginsAreMirrored;
@property (readonly, nonatomic) NSArray *floatingDrawableLayouts;
@property (readonly, nonatomic) NSSet *anchoredDrawableLayouts;
@property (readonly, nonatomic) TPFootnoteContainerLayout *footnoteContainerLayout;
@property (readonly, nonatomic) unsigned long long pageNumber;
@property (readonly, nonatomic) unsigned long long pageCount;
@property (readonly, weak, nonatomic) id<TPMasterDrawableProvider> masterDrawableProvider;
@property (nonatomic) char overrideAllowFootnotes;

- (void)dealloc;
- (void).cxx_destruct;
- (unsigned long long)columnCount;
- (void)insertChild:(id)a0 atIndex:(unsigned long long)a1;
- (void)setChildren:(id)a0;
- (id)pageLayout;
- (void)validate;
- (id)layoutMargins;
- (void)replaceChild:(id)a0 with:(id)a1;
- (char)hasHeaders;
- (void)parentDidChange;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })nonAutosizedFrameForTextLayout:(id)a0;
- (char)shrinkTextToFit;
- (int)verticalAlignmentForTextLayout:(id)a0;
- (void)addAttachmentLayout:(id)a0;
- (char)alwaysStartsNewTarget;
- (unsigned long long)autosizeFlagsForTextLayout:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })autosizedFrameForTextLayout:(id)a0 textSize:(struct CGSize { double x0; double x1; })a1;
- (char)columnsAreLeftToRight;
- (id)computeLayoutGeometry;
- (id)dependentsOfTextLayout:(id)a0;
- (double)gapForColumnIndex:(unsigned long long)a0 bodyWidth:(double)a1;
- (void)invalidateForAutosizingTextLayout:(id)a0;
- (void)invalidatePosition;
- (void)invalidateSize;
- (int)naturalAlignmentForTextLayout:(id)a0;
- (unsigned long long)pageCountForAttachment:(id)a0;
- (unsigned long long)pageNumberForAttachment:(id)a0;
- (Class)repClassForTextLayout:(id)a0;
- (char)textIsVertical;
- (void)updateChildrenFromInfo;
- (double)widthForColumnIndex:(unsigned long long)a0 bodyWidth:(double)a1;
- (void)wrappableChildInvalidated:(id)a0;
- (id)additionalDependenciesForChildLayout:(id)a0;
- (id)dependentLayouts;
- (char)isRootLayoutForInspectorGeometry;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (struct CGSize { double x0; double x1; })maximumFrameSizeForChild:(id)a0;
- (void)parentWillChangeTo:(id)a0;
- (char)providesGuidesForChildLayouts;
- (char)shouldProvideGuidesDuringExclusiveAlignmentOperation;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })adjustedInsetsForTarget:(id)a0;
- (char)descendersCannotClip;
- (double)maxAutoGrowBlockHeightForTextLayout:(id)a0;
- (double)maxAutoGrowLineWidthForTextLayout:(id)a0;
- (double)positionForColumnIndex:(unsigned long long)a0 bodyWidth:(double)a1 target:(id)a2 outWidth:(double *)a3 outGap:(double *)a4;
- (id)headerFooterProvider;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })footnoteContainerFrameWithSize:(struct CGSize { double x0; double x1; })a0;
- (void)invalidateFootnoteSeparatorLine;
- (id)sectionTemplateDrawableProvider;
- (char)allowIntersectionOfChildLayout:(id)a0;
- (id)p_insertFootnoteContainerLayout;
- (char)allowsHeaderFooter;
- (Class)backgroundFillOwningInfoClass;
- (void)beginResizeWrapInvalidationCluster;
- (double)blockHeightAvailableForFootnotes;
- (void)endResizeWrapInvalidationCluster;
- (void)evacuateOldChildLayoutCache;
- (id)existingAttachmentLayoutForInfo:(id)a0;
- (char)hasFooters;
- (char)headerFooterProviderValid;
- (void)inflateFootnotesInFootnoteContainer:(id)a0;
- (void)invalidateBodyAndMarginLayouts;
- (void)invalidateFootnoteContainers;
- (void)invalidateHeaderFooterLayouts;
- (void)invalidateHeaderFooterLayoutsCache;
- (void)invalidateLayoutsForPageCountChange;
- (char)isReadyForBodyLayout;
- (char)isRootLevelForInlineGeometry;
- (id)layoutForChildInfo:(id)a0;
- (id)layoutsCausingWrapOnTextLayoutTarget:(id)a0 ignoreIntersection:(char)a1;
- (id)layoutsForChildInfo:(id)a0;
- (void)p_addLayoutIfAttached:(id)a0;
- (void)p_addLayoutsForInfos:(id)a0 toArray:(id)a1;
- (id)p_childLayoutInParentLayout:(id)a0 forChildInfo:(id)a1;
- (void)p_clearChildTextLayoutCache;
- (id)p_existingChildLayoutForInfo:(id)a0;
- (id)p_generateChildTextLayoutsForExteriorWrap;
- (id)p_insertBodyLayout;
- (id)p_insertChildLayoutForInfo:(id)a0;
- (id)p_insertValidatedChildLayoutForInfo:(id)a0;
- (id)p_insertValidatedFloatingLayouts;
- (id)p_insertValidatedMasterLayouts;
- (char)p_isHeaderFooterLayout:(id)a0;
- (id)p_orderedChildInfos;
- (void)p_populateOldChildLayoutsWithLayouts:(id)a0;
- (void)p_removeInlineLayoutsFromPageLayout;
- (void)p_removeNoLongerInlineLayoutsFromBodyLayout;
- (struct pair<double, double> { double x0; double x1; })p_sideMargins;
- (void)p_sortChildLayouts;
- (void)p_updateFromLayoutInfoProvider;
- (void)p_validateTextLayoutsForExteriorWrapAffectedByAnchoredAttachments;
- (id)primaryLayoutForInfo:(id)a0;
- (void)processWidowAndInflation;
- (void)rebuildChildLayoutsOnNextValidationForcingTextLayoutOnTopLevelObjects:(char)a0;
- (void)setNeedsInflation;
- (char)shouldHeaderFooterBeVisible:(long long)a0;

@end

@class TNUIState, NSString, TSKTreeNodeDeprecated, NSPredicate, NSArray, TNTheme, TNHyperlinkController, NSMutableArray, TSSStylesheet;

@interface TNDocumentRoot : TSADocumentRoot <TSTResolverContainerNameProvider, TSTFormsSheetProvider> {
    NSString *_paperID;
    struct CGSize { double width; double height; } _pageSize;
}

@property (class, readonly, nonatomic) NSPredicate *sheetDisplayPredicate;
@property (class, readonly, nonatomic) char platformSupportsForms;

@property (retain, nonatomic) TNUIState *uiState;
@property (retain, nonatomic) NSMutableArray *mutableSheets;
@property (retain, nonatomic) TSSStylesheet *stylesheet;
@property (retain, nonatomic) TSKTreeNodeDeprecated *deprecatedSidebarOrder;
@property (readonly, nonatomic) TNTheme *theme;
@property (readonly, copy, nonatomic) NSArray *sheets;
@property (readonly, copy, nonatomic) NSArray *visibleSheets;
@property (readonly, nonatomic) unsigned long long tableCount;
@property (copy, nonatomic) NSString *printerID;
@property (copy, nonatomic) NSString *paperID;
@property (nonatomic) struct CGSize { double x0; double x1; } pageSize;
@property (nonatomic, getter=isPrintingAllSheets) char printingAllSheets;
@property (copy, nonatomic) NSArray *selectedQuickCalcFunctions;
@property (nonatomic) char removedAllQuickCalcFunctions;
@property (readonly, nonatomic, getter=isPrintPreviewSupported) char printPreviewSupported;
@property (retain, nonatomic) TNHyperlinkController *tn_hyperlinkController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGSize { double x0; double x1; })previewImageMaxSizeForType:(unsigned long long)a0;
+ (struct CGSize { double x0; double x1; })previewImageSizeForType:(unsigned long long)a0;
+ (char)shouldShowImportedDataNotificationsOnOpen;

- (void).cxx_destruct;
- (id)initWithContext:(id)a0;
- (void)setTheme:(id)a0;
- (id)activeSheet;
- (id)childEnumerator;
- (void)documentDidLoad;
- (void)initializeForImport;
- (char)isMultiPageForQuickLook;
- (void)setThemeForTemplateImport:(id)a0;
- (void)saveToArchiver:(id)a0;
- (id)UIStateForChart:(id)a0;
- (id)freehandDrawingToolkitUIState;
- (char)isPendingTableNameUniquification;
- (void)loadFromUnarchiver:(id)a0;
- (id)nameForResolverContainer:(id)a0;
- (id)resolverContainerForName:(id)a0 caseSensitive:(char)a1;
- (id)resolverContainerNameForResolver:(id)a0;
- (id)resolverContainerNamesMatchingPrefix:(id)a0;
- (id)resolverMatchingName:(id)a0;
- (id)resolverMatchingName:(id)a0 contextContainerName:(id)a1;
- (id)resolverMatchingName:(id)a0 contextResolver:(id)a1;
- (id)resolversMatchingPrefix:(id)a0;
- (void)setStylesheetForUpgradeToSingleStylesheet:(id)a0;
- (void)setUIState:(id)a0 forChart:(id)a1;
- (char)shouldShowFloatingCommentInfo:(id)a0;
- (unsigned long long)writingDirectionForStorage;
- (char)_tableInfoIsEligibleForBuilder:(struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; })a0;
- (id)nearestDisplayableSheetToSheet:(id)a0;
- (id)p_resolverContainerForResolver:(id)a0;
- (void)prepareNewDocumentWithTemplateIdentifier:(id)a0 bundle:(id)a1 documentLocale:(id)a2;
- (void)removeAllSheets;
- (id)_formSheetForTable:(struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; })a0;
- (void)addSheet:(id)a0 dolcContext:(id)a1;
- (char)containsForms;
- (id)createDeprecatedSidebarOrder;
- (id)formSheetForTable:(struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; })a0;
- (id)formSheetsForTable:(struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; })a0;
- (void)initializeHardCodedBlankDocument;
- (void)insertSheet:(id)a0 sheetIndex:(unsigned long long)a1 forPasteOrUndoDelete:(char)a2 context:(id)a3;
- (char)isTableLinkedToAForm:(struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; })a0;
- (void)moveSheetFromIndex:(unsigned long long)a0 toIndex:(unsigned long long)a1;
- (int)naturalAlignmentAtCharIndex:(unsigned long long)a0 inTextStorage:(id)a1;
- (struct CGSize { double x0; double x1; })p_adjustCapturedContentSize:(struct CGSize { double x0; double x1; })a0 toAspectRatio:(struct CGSize { double x0; double x1; })a1;
- (id)p_chartsWantingDeferredUpgrade;
- (void)p_clearDeprecatedSidebarOrder;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_contentFrameToCaptureForSheet:(id)a0;
- (void)p_createDeprecatedSidebarOrderIfNecessaryFromSaveToArchiver;
- (double)p_imageBorderForSize:(struct CGSize { double x0; double x1; })a0;
- (id)p_previewImageForSheet:(id)a0 withImageSize:(struct CGSize { double x0; double x1; })a1;
- (id)p_previewImageWithImageSize:(struct CGSize { double x0; double x1; })a0;
- (unsigned long long)p_tableCountForSheet:(id)a0;
- (void)performDeferredUpgradeImportOperationsOnNewThreadForCharts:(id)a0;
- (void)performDeferredUpgradeImportOperationsRequiringCalcEngine;
- (char)prepareAndValidateSidecarViewStateRootWithVersionUUIDMismatch:(id)a0 sidecarDocumentRevision:(id)a1 originalDocumentViewStateRoot:(id)a2;
- (id)previewImageForSize:(struct CGSize { double x0; double x1; })a0;
- (void)removeSheet:(id)a0;
- (void)setImportedPaperID:(id)a0 printerID:(id)a1;
- (void)setStylesheet:(id)a0 andThemeForImport:(id)a1;
- (void)sheet:(id)a0 insertedDrawable:(id)a1;
- (void)sheet:(id)a0 removedDrawable:(id)a1;
- (id)sheetForName:(id)a0 caseSensitive:(char)a1;
- (char)shouldAllowDrawableInGroups:(id)a0;
- (void)tableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a0 changedToTableUID:(const struct TSKUIDStruct { unsigned long long x0; unsigned long long x1; } *)a1;
- (id)uniqueNameForNewSheetWithName:(id)a0;
- (id)uniqueNameForSheet:(id)a0 appendNewTag:(char)a1;
- (id)uniqueNameForSheetName:(id)a0 forRenamingSheet:(id)a1;
- (id)uniqueNameForSheetName:(id)a0 forRenamingSheet:(id)a1 appendNewTag:(char)a2;
- (id)untitledSheetName;
- (void)upgradeStylesheetForSheetStyles:(id)a0;
- (char)validName:(id)a0 forRenamingSheet:(id)a1;
- (char)validNameForNewSheet:(id)a0;
- (int)verticalAlignmentForTextStorage:(id)a0;

@end

@class NSString, TSDMovieFingerprint, NSURL, TSPData, TSDMediaStyle;

@interface TSDMovieInfo : TSDMediaInfo <TSDMixing, TSDCompatibilityAwareMediaContainer, TSDPlayableInfo> {
    TSPData *mMovieData;
    TSPData *mImportedAuxiliaryMovieData;
    NSString *mImportedAuxiliaryMovieDataOriginalFilename;
    char mAudioOnly;
    TSPData *mAudioOnlyImageData;
    double mStartTime;
    double mEndTime;
    double mPosterTime;
    float mVolume;
    NSURL *mMovieRemoteURL;
    TSDMovieFingerprint *mFingerprint;
    TSPData *mPosterImageData;
    char mPosterImageGeneratedWithAlphaSupport;
    struct CGSize { double width; double height; } mNaturalSize;
    char mPlaysAcrossSlides;
    char mNativeAudioRecording;
    TSDMediaStyle *mStyle;
}

@property (retain, nonatomic) TSPData *movieData;
@property (retain, nonatomic) NSURL *movieRemoteURL;
@property (retain, nonatomic) TSPData *importedAuxiliaryMovieData;
@property (copy, nonatomic) NSString *importedAuxiliaryMovieDataOriginalFilename;
@property (copy, nonatomic) TSDMovieFingerprint *fingerprint;
@property (retain, nonatomic) TSPData *audioOnlyImageData;
@property (nonatomic) double posterTime;
@property (retain, nonatomic) TSPData *posterImageData;
@property (nonatomic) char playsAcrossSlides;
@property (nonatomic, getter=isAudioOnly) char audioOnly;
@property (nonatomic, getter=isStreaming) char streaming;
@property (nonatomic, getter=isNativeAudioRecording) char nativeAudioRecording;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) char supportsStartTimeAndEndTime;
@property (nonatomic) double startTime;
@property (nonatomic) double endTime;
@property (readonly, nonatomic) char supportsLooping;
@property (readonly, nonatomic) char supportsLoopingBackAndForth;
@property (nonatomic) long long loopOption;
@property (nonatomic) float volume;

+ (double)defaultPosterTimeForDuration:(double)a0;
+ (id)presetKinds;

- (void).cxx_destruct;
- (id)style;
- (id)fileType;
- (void)setStyle:(id)a0;
- (id)typeName;
- (void)acceptVisitor:(id)a0;
- (char)containsProperty:(int)a0;
- (char)needsDownload;
- (id)objectForProperty:(int)a0;
- (Class)layoutClass;
- (float)floatValueForProperty:(int)a0;
- (Class)repClass;
- (id)initWithContext:(id)a0 geometry:(id)a1 style:(id)a2;
- (void)p_setPropertiesFromLoadedAsset:(id)a0;
- (id)animationFilters;
- (char)canChangeWrapType;
- (char)canResetMediaSize;
- (double)doubleValueForProperty:(int)a0;
- (id)generateEmptyPosterImageForContext:(id)a0;
- (id)initWithContext:(id)a0 geometry:(id)a1 style:(id)a2 movieData:(id)a3 loadedAsset:(id)a4;
- (id)initWithContext:(id)a0 geometry:(id)a1 style:(id)a2 movieRemoteURL:(id)a3 loadedAsset:(id)a4;
- (int)intValueForProperty:(int)a0;
- (id)makeAVAsset;
- (id)makeAVAssetWithOptions:(id)a0;
- (id)mixedObjectWithFraction:(double)a0 ofObject:(id)a1;
- (id)presetKind;
- (struct CGSize { double x0; double x1; })rawDataSize;
- (Class)styleClass;
- (id)styleIdentifierTemplateForNewPreset;
- (char)supportsAttachedComments;
- (char)supportsHyperlinks;
- (id)synchronouslyGenerateDefaultPosterImageForContext:(id)a0;
- (void)takePropertiesFromReplacedMediaInfo:(id)a0;
- (void)saveToArchiver:(id)a0;
- (char)allowsCaption;
- (char)allowsTitle;
- (char)isAllowedInGroups;
- (void)loadFromArchive:(const void *)a0 unarchiver:(id)a1;
- (long long)mixingTypeWithObject:(id)a0 context:(id)a1;
- (id)pastedPropertyMapForStyle:(id)a0 tailLineEndInfo:(int)a1;
- (void)saveToArchive:(void *)a0 archiver:(id)a1;
- (char)shouldShowInPrint;
- (id)fileDisplayName;
- (char)canCopyData;
- (id)fileDataForDragging;
- (id)promisedDataForType:(id)a0;
- (id)typesToPromiseWhenCopyingSingleDrawable;
- (char)validatedLoadFromUnarchiver:(id)a0;
- (char)wantsStandardTypesInAdditionToTypesToPromiseWhenCopyingSingleDrawable;
- (char)canBeMediaPlaceholder;
- (char)canBeReplaced;
- (void)i_setPosterImageData:(id)a0;
- (id)p_makePosterImageDataWithAVAsset:(id)a0 inContext:(id)a1 time:(double)a2;
- (id)promisedTSPDataForType:(id)a0;
- (char)supportsStyleInspecting;
- (id)synchronouslyGenerateNewPosterImageForAsset:(id)a0 time:(double)a1;
- (char)willRenderContentViaImager;

@end

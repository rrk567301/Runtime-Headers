@class NSString, _GCDeviceConfiguration, NSArray, NSSet, GCDeviceBattery, GCDeviceLight, GCSystemGesturesState, NSMapTable;
@protocol _GCDeviceBatteryComponent, NSObject, _GCDeviceLightComponent, _GCDefaultLogicalDeviceDelegate, _GCDeviceSystemGestureComponent, _GCPhysicalDevice, _GCDeviceManager, _GCDevicePlayerIndexIndicatorComponent, _GCDeviceGameIntentComponent, GCSSettingsStoreService, _GCDeviceAdaptiveTriggersComponent, _GCDeviceSettingsComponent, _GCDeviceMotionComponent, NSCopying, NSSecureCoding;

@interface _GCDefaultLogicalDevice : NSObject <_GCDriverClientHapticInterfaceProvider, _GCDeviceSyntheticControllerProviding, _GCDeviceSystemGestureComponent, _GCDeviceSettingsComponent, _GCDeviceControllerProviding, GCPlayerIndicatorXPCProxyServerEndpointDelegate, GCLightXPCProxyServerEndpointDelegate, GCAdaptiveTriggersXPCProxyServerEndpointDelegate, GCMotionXPCProxyServerEndpointDelegate, GCBatteryXPCProxyServerEndpointDelegate, GCSettingsXPCProxyServerEndpointDelegate, GCGameIntentXPCProxyServerEndpointDelegate, GCSystemGestureXPCProxyServerEndpointDelegate, GCApplicationStateObserver, _GCLogicalDevice> {
    NSMapTable *_clients;
    id<_GCDevicePlayerIndexIndicatorComponent> _devicePlayerIndicatorComponent;
    long long _indicatedPlayerIndex;
    NSMapTable *_clientPlayerIndicatorEndpoints;
    id<_GCDeviceAdaptiveTriggersComponent> _deviceAdaptiveTriggersComponent;
    NSArray *_adaptiveTriggerStatuses;
    NSMapTable *_pidToAdaptiveTriggersComponent;
    NSMapTable *_clientAdaptiveTriggersEndpoints;
    id<_GCDeviceLightComponent> _deviceLightComponent;
    GCDeviceLight *_light;
    char _lightClientOverrideEnabled;
    char _lightUserOverrideEnabled;
    NSMapTable *_clientLightEndpoints;
    id<_GCDeviceMotionComponent> _deviceMotionComponent;
    char _motionSensorsActive;
    NSMapTable *_clientMotionEndpoints;
    id<_GCDeviceBatteryComponent> _deviceBatteryComponent;
    GCDeviceBattery *_battery;
    NSMapTable *_clientBatteryEndpoints;
    id<GCSSettingsStoreService> _settingsStore;
    id<_GCDeviceSettingsComponent> _deviceSettingsComponent;
    NSMapTable *_clientSettingsEndpoints;
    id<_GCDeviceGameIntentComponent> _deviceGameIntentComponent;
    NSMapTable *_clientGameIntentEndpoints;
    id<_GCDeviceSystemGestureComponent> _deviceSystemGestureComponent;
    GCSystemGesturesState *_activeSystemGesturesState;
    NSMapTable *_pidToSystemGesturesState;
    NSMapTable *_clientSystemGestureEndpoints;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) GCSystemGesturesState *activeSystemGesturesState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) int activeApplicationPID;
@property (weak, nonatomic) id<_GCDefaultLogicalDeviceDelegate> delegate;
@property (readonly, nonatomic) _GCDeviceConfiguration *configuration;
@property (readonly, nonatomic) id<_GCPhysicalDevice> underlyingDevice;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSSet *underlyingDevices;
@property (readonly, copy) id<NSObject, NSCopying, NSSecureCoding> identifier;
@property (readonly, weak) id<_GCDeviceManager> manager;
@property (readonly) NSSet *components;

- (void)dealloc;
- (char)conformsToProtocol:(id)a0;
- (id)init;
- (id)propertyForKey:(id)a0;
- (void).cxx_destruct;
- (id)redactedDescription;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)activateLogical;
- (id)persistentIdentifierForSettings;
- (char)_addClient:(id)a0;
- (id)_makeControllerGamepadEventSource;
- (void)_removeClient:(id)a0;
- (void)adaptiveTriggersXPCProxyServerEndpoint:(id)a0 didReceiveAdaptiveTriggersChange:(id)a1 forIndex:(int)a2;
- (void)applicationBackgrounded:(int)a0;
- (void)applicationForegrounded:(int)a0;
- (void)deactivateLogical;
- (void)gameIntentXPCProxyServerEndpoint:(id)a0 didReceiveGameIntent:(long long)a1;
- (id)hapticDriver;
- (id)initWithPhysicalDevice:(id)a0 configuration:(id)a1 manager:(id)a2;
- (void)lightXPCProxyServerEndpoint:(id)a0 didReceiveLightChange:(id)a1;
- (id)makeControllerForClient:(id)a0;
- (id)makeSyntheticController;
- (void)motionXPCProxyServerEndpoint:(id)a0 didReceiveSensorsActiveChange:(char)a1;
- (void)playerIndicatorXPCProxyServerEndpoint:(id)a0 didReceivePlayerIndexChange:(long long)a1;
- (void)settingsDidChange;
- (void)stopObservingClientStateChanges:(id)a0;
- (void)stopObservingClientStateChangesForAllClients;
- (void)systemGestureXPCProxyServerEndpoint:(id)a0 didSetSystemGestureStateForInput:(id)a1 enabled:(char)a2;
- (void)systemGestureXPCProxyServerEndpoint:(id)a0 disableSystemGestureForInput:(id)a1;
- (void)systemGestureXPCProxyServerEndpoint:(id)a0 enableSystemGestureForInput:(id)a1;
- (void)updateLightForActiveClient;

@end

@class QLPreviewView, NSString, NSView, QLPreviewOverlayController, CALayer, QLPreviewPanel;
@protocol QLPreviewItem;

@interface QLInlinePreviewController : NSObject <QLPreviewOverlayDataSource, QLPreviewViewDelegate> {
    id<QLPreviewItem> _inlinePreviewItem;
    NSView *_hostingView;
    QLPreviewOverlayController *_overlayController;
    int _mode;
    int _iconFlavor;
    int _state;
    char _observing;
    char _playAfterLoading;
    unsigned long long _pageAfterLoading;
    double _backingScaleFactor;
}

@property (readonly) char useLayers;
@property int inlinePreviewState;
@property char lazyLoading;
@property (weak, nonatomic) NSView *hostingView;
@property (weak) CALayer *hostingLayer;
@property (retain) id<QLPreviewItem> inlinePreviewItem;
@property (weak) id delegate;
@property (weak, nonatomic) QLPreviewPanel *sharingPreviewPanel;
@property char autoplay;
@property char crossfade;
@property char playing;
@property (readonly) int status;
@property (readonly) char shouldKeepThumbnail;
@property (readonly) CALayer *contentLayer;
@property (readonly) QLPreviewView *previewView;
@property char hostingLayerIsInWindowServer;
@property double backingScaleFactor;
@property (readonly) NSView *overlayParentView;
@property (readonly) CALayer *overlayParentLayer;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } overlayFrame;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } rolloverFrame;
@property (readonly) char showControls;
@property (readonly) char shouldAlwaysHandleMultiClicks;
@property (readonly) char needsPlayControl;
@property (readonly) char needsTimeControl;
@property (readonly) float progress;
@property (readonly) char needsPageControl;
@property (readonly) unsigned long long numberOfPages;
@property unsigned long long currentPage;
@property (readonly) double rolloverActivationDelay;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (double)inlinePreviewMinimumSupportedSize;
+ (unsigned long long)inlinePreviewTrackingAreaOptions;
+ (int)specialInlinePreviewModeForPreviewItem:(id)a0;
+ (void)checkScreenTimePolicyByCategory;
+ (void)_postScreentimeChangedNotification;
+ (void)_schedulePostScreentimeChangedNotification;
+ (void)_setupScreentimeObserver;
+ (id)blockableApplicationIDs;
+ (id)blockableCategories;
+ (void)checkScreenTimePolicyByApplicationID;
+ (id)keyPathsForValuesAffectingNumberOfPages;
+ (id)screentimeBundleForUTI:(id)a0;
+ (id)screentimeCategoryForUTI:(id)a0;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_startObserving;
- (void)_stopObserving;
- (void)mouseEntered;
- (char)mouseDownAtPoint:(struct CGPoint { double x0; double x1; })a0 clickCount:(long long)a1;
- (char)mouseDownAtPoint:(struct CGPoint { double x0; double x1; })a0 clickCount:(long long)a1 dequeue:(char)a2;
- (void)mouseExited;
- (void)updatePreviewFrame;
- (void)previewView:(id)a0 didShowPreviewItem:(id)a1;
- (void)previewView:(id)a0 willLoadPreviewItem:(id)a1;
- (void)previewView:(id)a0 willShowPreviewItem:(id)a1;
- (char)_shouldCrossfade;
- (void)_inlinePreviewDidChangePlaying:(char)a0;
- (char)_boolValueFromObject:(id)a0;
- (void)_closeInlinePreview;
- (void)_createInlinePreviewIfNeeded;
- (void)_inlinePreviewDidChangePage:(unsigned long long)a0;
- (unsigned long long)_integerValueFromObject:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_itemFrame;
- (void)_openInlinePreview;
- (void)_setInlinePreviewVisible:(char)a0 animate:(char)a1;
- (char)_shouldKeepThumbnail;
- (char)_shouldOpenInlinePreview;
- (char)_shouldShowInlinePreviewContentOfPreviewView:(id)a0;
- (char)_shouldShowInlinePreviewControlsOfPreviewView:(id)a0;
- (void)_updateInlinePreview;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentFrameForPreviewView:(id)a0;
- (int)flavorForPreviewView:(id)a0;
- (char)isPreviewHostedInWindowServer:(id)a0;
- (char)isPreviewViewVisible:(id)a0;
- (char)mouseDownAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)overlayControllerForPreviewView:(id)a0;
- (void)overlayParentViewFrameDidChangeNotification:(id)a0;
- (void)previewView:(id)a0 didFailDuringPreviewOfItem:(id)a1;
- (void)previewView:(id)a0 didFailLoadingPreviewItem:(id)a1;
- (char)previewView:(id)a0 shouldBypassLoadingOfPreviewItem:(id)a1;
- (double)previewViewBackingScaleFactor:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rolloverFrameForPreviewView:(id)a0;
- (char)screentimeAllowControls;
- (void)sharedPreviewView:(id)a0 didStartSharingWithPreviewPanel:(id)a1;
- (void)sharedPreviewView:(id)a0 didStopSharingWithPreviewPanel:(id)a1;
- (void)sharedPreviewView:(id)a0 failedToStartSharingWithPreviewPanel:(id)a1;
- (char)sharedPreviewView:(id)a0 shouldHaveContinuousTransitionWithPreviewView:(id)a1;
- (void)sharedPreviewView:(id)a0 willStartSharingWithPreviewPanel:(id)a1;
- (void)sharedPreviewView:(id)a0 willStopSharingWithPreviewPanel:(id)a1;
- (char)shouldAlwaysHandleMultiClicksForPreviewView:(id)a0;
- (void)updateControlsForScreentime:(id)a0;

@end

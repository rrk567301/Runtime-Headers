@class NSString, CAScrollLayer, NSArray, CALayer, QLScrollController, QLDrawingLayer, NSMutableArray, QLPreviewHighlightItemLayer, NSMapTable;

@interface QLIndexSheetView : NSView <QLScrollControllerDelegate, QLScrollable, QLDrawingLayerDelegate, QLThumbnailLayerDelegate, CAAnimationDelegate> {
    char _transitioning;
    NSArray *_previewItems;
    QLScrollController *_scrollController;
    NSMutableArray *_thumbnailLayers;
    NSMapTable *_visibleThumbnailLayers;
    NSMutableArray *_cachedThumbnailLayers;
    CALayer *_rootLayer;
    CALayer *_maskedLayer;
    CAScrollLayer *_scrollLayer;
    QLDrawingLayer *_maskLayer;
    QLPreviewHighlightItemLayer *_overlayLayer;
    long long _columns;
    long long _rows;
    long long _topRow;
    long long _itemIndex;
    double _margin;
    struct CGImage { } *_placeholderImageRef;
    char _hasDarkBackground;
}

@property int status;
@property (readonly) struct CGImage { } *thumbnailPlaceholderImage;
@property (weak) id delegate;
@property long long maxColumns;
@property long long maxRows;
@property char hasDarkBackground;
@property (readonly) char canGoToNextPage;
@property (readonly) char canGoToPreviousPage;
@property (readonly) char hasMultiplePages;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } indexSheetFrame;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property double verticalScrollValue;
@property (readonly) double verticalKnobProportion;
@property double horizontalScrollValue;

+ (char)automaticallyNotifiesObserversOfVerticalScrollValue;

- (void)dealloc;
- (void).cxx_destruct;
- (unsigned int)_CAViewFlags;
- (double)_animationDuration;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)a0;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (char)accessibilityIsIgnored;
- (id)actionForLayer:(id)a0 forKey:(id)a1;
- (void)animationDidStop:(id)a0 finished:(char)a1;
- (double)animationDuration;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)isOpaque;
- (void)keyDown:(id)a0;
- (void)mouseDown:(id)a0;
- (char)mouseDownCanMoveWindow;
- (void)mouseMoved:(id)a0;
- (void)mouseUp:(id)a0;
- (void)resizeWithOldSuperviewSize:(struct CGSize { double x0; double x1; })a0;
- (void)scrollWheel:(id)a0;
- (void)viewDidChangeEffectiveAppearance;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillStartLiveResize;
- (char)_setupLayers;
- (void)goToNextPage:(id)a0;
- (void)goToPreviousPage:(id)a0;
- (double)_topMargin;
- (double)_maxScrollValue;
- (void)_updateRollover;
- (double)_bottomMargin;
- (void)_endTransitionWithLayer:(id)a0;
- (void)_goDown:(char)a0;
- (void)_goUp:(char)a0;
- (id)_highlightedLayer;
- (double)_horizontalIntercellSpace;
- (long long)_indexOfDocumentAtRow:(long long)a0 column:(long long)a1;
- (char)_isRowVisible:(long long)a0;
- (void)_layoutThumbnailLayers;
- (long long)_maxCachedThumbnails;
- (long long)_numberOfVisibleRows;
- (char)_scrollRowToVisible:(long long)a0 animate:(char)a1;
- (void)_selectDocumentAtIndex:(long long)a0;
- (void)_selectDocumentFromLayer:(id)a0;
- (void)_setHighlightedLayer:(id)a0 animate:(char)a1 update:(char)a2;
- (void)_setScrollValue:(double)a0 animate:(char)a1;
- (char)_setTopRow:(long long)a0 animate:(char)a1;
- (id)_setupOverlayLayer;
- (double)_sideMargin;
- (void)_snapToTopRow;
- (void)_startTransitionWithItemAtIndex:(long long)a0 usingTransitionLayer:(id)a1 atFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (id)_thumbnailLayerAtIndex:(long long)a0;
- (id)_thumbnailLayerHitTest:(struct CGPoint { double x0; double x1; })a0;
- (void)_thumnailDidUpdate:(id)a0;
- (void)_updateInternalLayerFrames;
- (void)_updateInvisibleLayers;
- (void)_updateLayoutForResize;
- (void)_updateRolloverAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_updateScrollWithAnimation:(char)a0;
- (void)_updateThumbnailLayers;
- (void)_updateThumbnails;
- (void)_updateVisibleLayers;
- (double)_verticalIntercellSpace;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_visibleRows;
- (void)activateForItemAtIndex:(long long)a0 usingTransitionLayer:(id)a1 atFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)deactivateForItemAtIndex:(long long)a0 usingTransitionLayer:(id)a1 atFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)drawDrawingLayer:(id)a0 inContext:(struct CGContext { } *)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForPreviewItemURL:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameOfDocumentAtIndex:(long long)a0;
- (void)hideContentsBeforeAnimation;
- (long long)highlightedItemIndex;
- (id)imageForPreviewItemURL:(id)a0;
- (void)invalidateContentsOfThumbnailLayerForIndex:(unsigned long long)a0;
- (void)makeItemAtIndexVisible:(long long)a0;
- (double)scrollController:(id)a0 pageScrollPercentageForScroller:(id)a1;
- (void)scrollController:(id)a0 scrollerDidEndTracking:(id)a1;
- (void)setPreviewItems:(id)a0 withVisibleIndex:(long long)a1;
- (id)titleForThumbnailLayer:(id)a0;

@end

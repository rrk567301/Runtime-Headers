@class QLControlsController, QLPreviewPageNavigationView, QLFullscreenControlsPanel, QLPreviewPanelController, QLPreviewScroller, NSMutableArray, NSString, QLFadeWindowEffect, NSTimer, QLTimeSlider, NSWindow, NSView, QLScaleWindowEffect, NSTrackingArea, NSScreen;

@interface QLFullscreenController : NSResponder <QLIndexSheetDelegate, QLControlsDelegate> {
    QLControlsController *_controlsController;
    NSView *_fullscreenView;
    NSWindow *_backgroundFullscreenWindow;
    NSWindow *_pageNavigationWindow;
    QLPreviewPageNavigationView *_pageNavigationView;
    QLFullscreenControlsPanel *_controlsPanel;
    NSView *_controlsView;
    QLTimeSlider *_timeSlider;
    QLPreviewScroller *_scroller;
    NSTimer *_fadeTimer;
    QLFadeWindowEffect *_fadeEffect;
    QLScaleWindowEffect *_sizeEffect;
    NSTrackingArea *_mouseEnterTrackingArea;
    char _listeningToMouseMovements;
    char _showControls;
    char _fitToScreen;
    char _withPanel;
    char _startSlideshow;
    unsigned long long _originalPresentationOptions;
    unsigned int _displaySleepAssertionID;
    char _displaySleepDisabled;
}

@property int status;
@property struct CGPoint { double x; double y; } controlsCenterPosition;
@property struct CGPoint { double x; double y; } controlsOrigin;
@property (retain) NSView *screenshotView;
@property char observingPlaying;
@property (retain) NSMutableArray *timeSliderConstraints;
@property (retain) NSScreen *screenOnEntry;
@property char hasViewControls;
@property (weak) QLPreviewPanelController *panelController;
@property (readonly) NSWindow *fullscreenWindow;
@property char showControls;
@property char fitToScreen;
@property double previewOpacity;
@property (readonly) unsigned long long indexSheetMaxColumns;
@property (readonly) unsigned long long indexSheetMaxRows;
@property (readonly) char indexSheetHasDarkBackground;
@property (readonly) char indexSheetShowsControls;
@property (readonly) NSView *indexSheetHostingView;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } indexSheetFrame;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (id)forwardingTargetForSelector:(SEL)a0;
- (id)init;
- (char)respondsToSelector:(SEL)a0;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)flagsChanged:(id)a0;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void)mouseMoved:(id)a0;
- (void)scrollWheel:(id)a0;
- (char)worksWhenModal;
- (void)_updateControls;
- (void)_setupControls;
- (id)_accessibilityControls;
- (void)_disableDisplaySleep;
- (void)_enableDisplaySleep;
- (void)_enteredFullscreen;
- (void)_exitedFullscreen;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_fullscreenWindowFrameFromScreen:(id)a0;
- (void)_getSCScreenshot:(char)a0 withHDR:(char)a1 completion:(id /* block */)a2;
- (void)_hideControlsPanel;
- (void)_moveContentToFullscreenWindowAndBeginAnimation:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 effect:(int)a1 fromPanel:(char)a2 fullscreenContentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 fullscreenWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a4;
- (void)_moveFullscreenViewToView:(id)a0;
- (void)_moveFullscreenViewToView:(id)a0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 showControls:(char)a2 fitToScreen:(char)a3 coalesceFlushes:(char)a4;
- (id)_newBackgroundFullscreenWindowWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGImage { } *)_newCGSContentScreenshot:(char)a0;
- (id)_newFullscreenWindowWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_newWindowWillAppear:(id)a0;
- (void)_pauseDisableDisplaySleep;
- (id)_scaleEffectForItemFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fullscreenFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 fullscreenContentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 withPanel:(char)a3 transitionWindows:(id *)a4;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_scaledFrameForWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 matchingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 scalable:(char)a3;
- (void)_scheduleHideControlsPanel;
- (void)_screenshotViewForFullscreenView:(id)a0 entering:(char)a1 completion:(id /* block */)a2;
- (id)_screenshotViewForFullscreenView:(id)a0 entering:(char)a1 withScreenshot:(struct CGImage { } *)a2 hasHDR:(char)a3;
- (void)_setActivatePageNavigator:(char)a0;
- (void)_setFitToScreen:(char)a0 animate:(char)a1;
- (void)_setShowPageNavigator:(char)a0;
- (void)_showControlsPanel;
- (void)_startListeningToMouseMovement;
- (void)_startObservingPlaying;
- (void)_stopControlsFade;
- (void)_stopListeningToMouseMovement;
- (void)_stopObservingPlaying;
- (void)_unpauseDisableDisplaySleep;
- (void)controlsController:(id)a0 didLayoutWithWidth:(double)a1 oldWidth:(double)a2;
- (struct CGImage { } *)copyIndexSheetTransitionImageWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 transitionFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (void)enterFullscreenForView:(id)a0 withEffect:(int)a1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 fromPanel:(char)a3 startSlideshow:(char)a4;
- (void)exitFullscreenWithEffect:(int)a0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 toPanel:(char)a2;
- (void)fadeControlsPanel:(id)a0;
- (void)indexSheetDidActivate:(id)a0;
- (void)indexSheetDidDeactivate:(id)a0;
- (void)indexSheetWillActivate:(id)a0;
- (void)indexSheetWillDeactivate:(id)a0;
- (void)prepareToExitFullscreen;
- (void)screenParametersDidChange:(id)a0;
- (void)updateControlsPanelWithWidth:(double)a0 animate:(char)a1 keepCentered:(char)a2;

@end

@class NSDateComponents, NSDate, NSDictionary, NSObject, CNWallpaper, CNContactKeyVector, CNWallpaperMetadata, NSString, NSSet, SGRecordId, CNActivityAlert, NSArray, NSData, CNSensitiveContentConfiguration, NSUUID;
@protocol OS_os_log, CNKeyDescriptor;

@interface CNContact : NSObject <CNSuggested, CNContactAugmentation, NSItemProviderReading, NSItemProviderWriting, NSCopying, NSMutableCopying, NSSecureCoding> {
    int _iOSLegacyIdentifier;
    unsigned long long _flags;
    NSString *_namePrefix;
    NSString *_givenName;
    NSString *_middleName;
    NSString *_familyName;
    NSString *_nameSuffix;
    NSString *_previousFamilyName;
    NSString *_nickname;
    NSString *_phoneticGivenName;
    NSString *_phoneticMiddleName;
    NSString *_phoneticFamilyName;
    NSString *_phoneticOrganizationName;
    NSString *_explicitDisplayName;
    NSArray *_addressingGrammars;
    NSArray *_addressingGrammarsEncrypted;
    NSString *_sortingGivenName;
    NSString *_sortingFamilyName;
    NSString *_organizationName;
    NSString *_departmentName;
    NSString *_jobTitle;
    NSDateComponents *_birthday;
    NSDateComponents *_nonGregorianBirthday;
    NSDate *_creationDate;
    NSDate *_modificationDate;
    NSString *_note;
    NSData *_imageData;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cropRect;
    NSString *_cropRectID;
    NSData *_cropRectHash;
    NSData *_thumbnailImageData;
    NSData *_fullscreenImageData;
    NSData *_syncImageData;
    char _imageDataAvailable;
    NSString *_linkIdentifier;
    char _preferredForName;
    char _preferredForImage;
    NSString *_phonemeData;
    long long _contactType;
    long long _displayNameOrder;
    long long _sharedPhotoDisplayPreference;
    char _isUsingSharedPhoto;
    NSArray *_phoneNumbers;
    NSArray *_emailAddresses;
    NSArray *_urlAddresses;
    NSArray *_dates;
    NSArray *_instantMessageAddresses;
    NSArray *_contactRelations;
    NSArray *_socialProfiles;
    NSArray *_postalAddresses;
    NSArray *_calendarURIs;
    NSString *_cardDAVUID;
    NSString *_externalIdentifier;
    NSData *_externalRepresentation;
    NSString *_externalModificationTag;
    NSString *_externalUUID;
    NSString *_externalImageURI;
    CNActivityAlert *_callAlert;
    CNActivityAlert *_textAlert;
    CNContact *_snapshot;
    NSArray *_linkedContacts;
    NSString *_accountIdentifier;
    CNContactKeyVector *_availableKeyDescriptor;
    NSString *_mapsData;
    NSString *_searchIndex;
    NSString *_preferredLikenessSource;
    NSString *_preferredApplePersonaIdentifier;
    NSString *_ISOCountryCode;
    NSString *_downtimeWhitelist;
    NSString *_imageType;
    NSData *_imageHash;
    NSData *_memojiMetadata;
    CNWallpaper *_wallpaper;
    CNWallpaperMetadata *_wallpaperMetadata;
    NSData *_watchWallpaperImageData;
    NSString *_wallpaperURI;
    CNSensitiveContentConfiguration *_sensitiveContentConfiguration;
    NSDate *_imageSyncFailedTime;
    NSDate *_wallpaperSyncFailedTime;
}

@property (class, readonly, copy) NSArray *readableTypeIdentifiersForItemProvider;
@property (class, readonly, copy) NSArray *writableTypeIdentifiersForItemProvider;
@property (class, readonly, nonatomic) NSObject<OS_os_log> *os_log;
@property (class, readonly) id<CNKeyDescriptor> descriptorForAllImageDataKeys;
@property (class, readonly) char supportsSecureCoding;

@property (readonly, copy) NSString *nameTitle;
@property (readonly, copy) NSString *firstName;
@property (readonly, copy) NSString *lastName;
@property (readonly, copy) NSString *maidenName;
@property (readonly, copy) NSString *phoneticFirstName;
@property (readonly, copy) NSString *phoneticLastName;
@property (readonly, copy) NSString *companyName;
@property (readonly, copy) NSArray *relatedNames;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSArray *writableTypeIdentifiersForItemProvider;
@property (readonly, nonatomic) char hasSuggestedProperties;
@property (readonly, nonatomic, getter=isSuggested) char suggested;
@property (readonly, nonatomic) SGRecordId *suggestionRecordId;
@property (readonly, nonatomic) NSString *suggestionFoundInBundleId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic, getter=isSuggestedMe) char suggestedMe;
@property (nonatomic, readonly) NSUUID *id;
@property (readonly) unsigned long long _availableKeyEncodingStrategy;
@property (readonly, copy) NSDate *imageSyncFailedTime;
@property (readonly, copy) NSDate *wallpaperSyncFailedTime;
@property (readonly, copy) NSString *internalIdentifier;
@property (readonly, copy) NSArray *calendarURIs;
@property (readonly, copy) NSString *cardDAVUID;
@property (readonly, copy) NSDictionary *activityAlerts;
@property (readonly, copy) NSString *storeIdentifier;
@property (readonly, copy) NSDictionary *storeInfo;
@property (readonly, copy) NSString *searchIndex;
@property (readonly, copy) NSString *accountIdentifier;
@property (readonly, nonatomic) id<CNKeyDescriptor> availableKeyDescriptor;
@property (readonly, nonatomic) NSSet *availableKeys;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropRect;
@property (readonly, copy) NSString *cropRectID;
@property (readonly, copy) NSData *cropRectHash;
@property (readonly, copy) CNActivityAlert *callAlert;
@property (readonly, copy) CNActivityAlert *textAlert;
@property (readonly) int iOSLegacyIdentifier;
@property (readonly, copy) NSString *externalURI;
@property (readonly, copy) NSString *externalIdentifier;
@property (readonly, copy) NSData *externalRepresentation;
@property (readonly, copy) NSString *externalModificationTag;
@property (readonly, copy) NSString *externalUUID;
@property (readonly, copy) NSString *externalImageURI;
@property (readonly, copy) NSString *fullName;
@property (readonly, copy) NSString *phoneticFullName;
@property (readonly, copy) NSString *linkIdentifier;
@property (readonly, copy) NSString *phonemeData;
@property (readonly, copy) NSString *sortingGivenName;
@property (readonly, copy) NSString *sortingFamilyName;
@property (readonly, copy) NSString *sectionForSortingByGivenName;
@property (readonly, copy) NSString *sectionForSortingByFamilyName;
@property (readonly, copy) NSString *phoneticCompanyName;
@property (readonly, copy) NSString *pronunciationGivenName;
@property (readonly, copy) NSString *pronunciationFamilyName;
@property (readonly, copy) NSArray *addressingGrammars;
@property (readonly, copy) NSArray *addressingGrammarsEncrypted;
@property (readonly, copy) NSArray *termsOfAddress;
@property (readonly, copy) NSDate *creationDate;
@property (readonly, copy) NSDate *modificationDate;
@property (readonly) long long displayNameOrder;
@property (readonly, copy) NSString *stringForIndexing;
@property (readonly, nonatomic, getter=isPreferredForName) char preferredForName;
@property (readonly, nonatomic, getter=isPreferredForImage) char preferredForImage;
@property (readonly, copy) NSString *preferredLikenessSource;
@property (readonly, copy) NSString *preferredApplePersonaIdentifier;
@property (readonly, copy) NSString *preferredChannel;
@property (readonly, copy) NSString *downtimeWhitelist;
@property (readonly, copy) NSString *imageType;
@property (readonly, copy) NSData *imageHash;
@property (readonly, copy) NSData *memojiMetadata;
@property (readonly, copy) CNWallpaper *wallpaper;
@property (readonly, copy) NSData *watchWallpaperImageData;
@property (readonly, copy) NSString *wallpaperURI;
@property (readonly) long long sharedPhotoDisplayPreference;
@property (readonly) char isUsingSharedPhoto;
@property (readonly, copy) NSData *imageBackgroundColorsData;
@property (readonly, copy) CNSensitiveContentConfiguration *sensitiveContentConfiguration;
@property (readonly, nonatomic, getter=isUnified) char unified;
@property (readonly, nonatomic) char hasBeenPersisted;
@property (readonly, copy, nonatomic) NSArray *linkedContacts;
@property (readonly, copy, nonatomic) NSArray *mainStoreLinkedContacts;
@property (readonly, copy) NSString *mapsData;
@property (readonly, copy) NSData *fullscreenImageData;
@property (readonly, copy) NSData *syncImageData;
@property (readonly, copy) NSString *identifier;
@property (readonly) long long contactType;
@property (readonly, copy) NSString *namePrefix;
@property (readonly, copy) NSString *givenName;
@property (readonly, copy) NSString *middleName;
@property (readonly, copy) NSString *familyName;
@property (readonly, copy) NSString *previousFamilyName;
@property (readonly, copy) NSString *nameSuffix;
@property (readonly, copy) NSString *nickname;
@property (readonly, copy) NSString *organizationName;
@property (readonly, copy) NSString *departmentName;
@property (readonly, copy) NSString *jobTitle;
@property (readonly, copy) NSString *phoneticGivenName;
@property (readonly, copy) NSString *phoneticMiddleName;
@property (readonly, copy) NSString *phoneticFamilyName;
@property (readonly, copy) NSString *phoneticOrganizationName;
@property (readonly, copy) NSString *note;
@property (readonly, copy) NSData *imageData;
@property (readonly, copy) NSData *thumbnailImageData;
@property (readonly) char imageDataAvailable;
@property (readonly, copy) NSArray *phoneNumbers;
@property (readonly, copy) NSArray *emailAddresses;
@property (readonly, copy) NSArray *postalAddresses;
@property (readonly, copy) NSArray *urlAddresses;
@property (readonly, copy) NSArray *contactRelations;
@property (readonly, copy) NSArray *socialProfiles;
@property (readonly, copy) NSArray *instantMessageAddresses;
@property (readonly, copy) NSDateComponents *birthday;
@property (readonly, copy) NSDateComponents *nonGregorianBirthday;
@property (readonly, copy) NSArray *dates;

+ (id)objectWithItemProviderData:(id)a0 typeIdentifier:(id)a1 error:(id *)a2;
+ (id)predicateForContactsWithIdentifiers:(id)a0;
+ (id)contact;
+ (id)predicateForContactsMatchingEmailAddress:(id)a0;
+ (id)predicateForContactsMatchingPhoneNumber:(id)a0;
+ (id)localizedStringForKey:(id)a0;
+ (id)predicateForContactsMatchingName:(id)a0;
+ (id)contactWithIdentifier:(id)a0;
+ (id)identifierProvider;
+ (id)makeIdentifier;
+ (id)makeIdentifierString;
+ (id)unifyContacts:(id)a0;
+ (id)_contactWithContact:(id)a0 createNewInstance:(char)a1 propertyDescriptions:(id)a2;
+ (id)_shortHashForName:(id)a0;
+ (char)_shouldRedactDescription;
+ (id)alwaysFetchedKeys;
+ (id /* block */)comparatorForNameSortOrder:(long long)a0;
+ (id)contactFromSuggestion:(id)a0;
+ (id)contactIdentifierFromSuggestionID:(id)a0;
+ (id)contactWithArchivedData:(id)a0 error:(id *)a1;
+ (id)contactWithContact:(id)a0;
+ (id)contactWithDisplayName:(id)a0 emailOrPhoneNumber:(id)a1;
+ (id)contactWithDisplayName:(id)a0 handleStrings:(id)a1;
+ (id)contactWithIdentifierOnly:(id)a0;
+ (id)contactWithVCardData:(id)a0 error:(id *)a1;
+ (id)debugDescriptionForName:(id)a0;
+ (id)descriptorForAllComparatorKeys;
+ (id)descriptorForKeyDescriptors:(id)a0 description:(id)a1;
+ (id)descriptorWithKeyDescriptors:(id)a0 description:(id)a1;
+ (id)emptyContact;
+ (void)freezeIfInstancetypeIsImmutable:(id)a0;
+ (BOOL)isContactUTIType:(id)a0;
+ (BOOL)isVCardDataUTIType:(id)a0;
+ (id)makeContactAndMergeValuesFromAvailableKeysInContact:(id)a0;
+ (id)newContactWithPropertyKeys:(id)a0 withValuesFromContact:(id)a1;
+ (id)predicateForAllContacts;
+ (id)predicateForContactMatchingEKParticipantWithName:(id)a0 emailAddress:(id)a1 URL:(id)a2 predicateDescription:(id)a3;
+ (id)predicateForContactMatchingEmailAddress:(id)a0;
+ (id)predicateForContactMatchingMapString:(id)a0;
+ (id)predicateForContactMatchingPhoneNumber:(id)a0;
+ (id)predicateForContactMatchingPhoneNumberWithDigits:(id)a0 countryCode:(id)a1;
+ (id)predicateForContactMatchingURLString:(id)a0;
+ (id)predicateForContactsInContainerWithIdentifier:(id)a0;
+ (id)predicateForContactsInGroupWithIdentifier:(id)a0;
+ (id)predicateForContactsLinkedToContact:(id)a0;
+ (id)predicateForContactsLinkedToContactWithIdentifier:(id)a0;
+ (id)predicateForContactsMatchingCoreDataPredicate:(id)a0;
+ (id)predicateForContactsMatchingEmailAddress:(id)a0 groupIdentifiers:(id)a1 limitToOneResult:(char)a2;
+ (id)predicateForContactsMatchingExternalUUIDs:(id)a0;
+ (id)predicateForContactsMatchingFullTextSearch:(id)a0 containerIdentifiers:(id)a1 groupIdentifiers:(id)a2;
+ (id)predicateForContactsMatchingHandleStrings:(id)a0;
+ (id)predicateForContactsMatchingHandleStrings:(id)a0 inContainersWithIdentifiers:(id)a1;
+ (id)predicateForContactsMatchingInstantMessageAddress:(id)a0;
+ (id)predicateForContactsMatchingName:(id)a0 options:(unsigned long long)a1;
+ (id)predicateForContactsMatchingPhoneNumber:(id)a0 prefixHint:(id)a1;
+ (id)predicateForContactsMatchingPhoneNumber:(id)a0 prefixHint:(id)a1 groupIdentifiers:(id)a2 limitToOneResult:(char)a3;
+ (id)predicateForContactsMatchingPostalAddress:(id)a0;
+ (id)predicateForContactsMatchingSocialProfile:(id)a0;
+ (id)predicateForContactsMatchingString:(id)a0 accountIdentifier:(id)a1 containerIdentifier:(id)a2 groupIdentifier:(id)a3;
+ (id)predicateForContactsMissingBackgroundColors;
+ (id)predicateForContactsWithOrganizationName:(id)a0;
+ (id)predicateForContactsWithWallpaperMetadata;
+ (id)predicateForFaultFulfillmentForLegacyIdentifier:(unsigned int)a0 identifier:(id)a1;
+ (id)predicateForLegacyIdentifier:(unsigned int)a0;
+ (id)predicateForMeContact;
+ (id)predicateForPreferredNameInContainersWithIdentifiers:(id)a0 groupsWithIdentifiers:(id)a1;
+ (id)predicateForPreferredNameInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
+ (id)predicateForSuggestionIdentifier:(unsigned long long)a0;
+ (id /* block */)preferredImageComparator;
+ (id)previewURLForContact:(id)a0;
+ (id)storeInfoFromCoder:(id)a0 storeIdentifier:(id)a1 key:(id)a2;
+ (id)suggestionIDFromContactIdentifier:(id)a0;
+ (void)you_used_a_property_that_you_didnt_request_when_you_fetched_the_contact;

- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)init;
- (char)isEqual:(id)a0;
- (id)mutableCopyWithZone:(struct _NSZone { } *)a0;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)initWithIdentifier:(id)a0;
- (unsigned long long)flags;
- (char)hasChanges;
- (id)loadDataWithTypeIdentifier:(id)a0 forItemProviderCompletionHandler:(id /* block */)a1;
- (id)snapshot;
- (char)isKeyAvailable:(id)a0;
- (id)shortDebugDescription;
- (char)areKeysAvailable:(id)a0;
- (char)isEqualIgnoringIdentifiers:(id)a0;
- (char)areAllPropertiesEqualToContactIgnoringIdentifiers:(id)a0;
- (id)copyWithSelfAsSnapshot;
- (char)isProperty:(id)a0 equalToOtherIgnoreIdentifiers:(id)a1;
- (id)linkedIdentifierMap;
- (void)_appendNameInBuilder:(id)a0;
- (id)allLinkedIdentifiers;
- (char)areAllAvailableKeysEqualToContact:(id)a0 ignoringIdentifiers:(char)a1;
- (char)areAllPropertiesButContactIdentifierEqualToContact:(id)a0;
- (id)areKeysAvailable:(id)a0 useIgnorableKeys:(char)a1 findMissingKeys:(char)a2;
- (void)assertKeyIsAvailable:(id)a0;
- (void)assertKeysAreAvailable:(id)a0;
- (id)copyWithCachedExternalData;
- (id)copyWithCuratingAllSuggestions;
- (id)copyWithDistinctIdentifier;
- (id)copyWithPropertyKeys:(id)a0;
- (id)diffToSnapshotAndReturnError:(id *)a0;
- (id)explicitDisplayName;
- (id)initWithIdentifier:(id)a0 availableKeyDescriptor:(id)a1;
- (id)initWithIdentifier:(id)a0 persisted:(char)a1;
- (char)isImplicitAugmentation;
- (char)isUnifiedWithContactWithIdentifier:(id)a0;
- (char)isUnifiedWithContactsWithIdentifiers:(id)a0;
- (id)keyVector;
- (id)linkedContactsFromStoreWithIdentifier:(id)a0;
- (char)preferredForImage;
- (char)preferredForName;
- (id)selfOrMutableCopy;

@end

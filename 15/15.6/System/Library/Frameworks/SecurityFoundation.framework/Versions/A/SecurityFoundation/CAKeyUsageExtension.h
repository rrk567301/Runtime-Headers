@interface CAKeyUsageExtension : NSObject {
    int _caKeyUsageExtensionIsEnabled;
    int _caKeyUsageExtensionIsCritical;
    int _caKeyUsageExtensionSignature;
    int _caKeyUsageExtensionNonRepudiation;
    int _caKeyUsageExtensionKeyEncipherment;
    int _caKeyUsageExtensionDataEncipherment;
    int _caKeyUsageExtensionKeyAgreement;
    int _caKeyUsageExtensionCertSigning;
    int _caKeyUsageExtensionCRLSigning;
    int _caKeyUsageExtensionEncipherOnly;
    int _caKeyUsageExtensionDecipherOnly;
    int _caCertAuthorityKeyUsageExtensionIsEnabled;
    int _caCertAuthorityKeyUsageExtensionIsCritical;
    int _caCertAuthorityKeyUsageExtensionSignature;
    int _caCertAuthorityKeyUsageExtensionNonRepudiation;
    int _caCertAuthorityKeyUsageExtensionKeyEncipherment;
    int _caCertAuthorityKeyUsageExtensionDataEncipherment;
    int _caCertAuthorityKeyUsageExtensionKeyAgreement;
    int _caCertAuthorityKeyUsageExtensionCertSigning;
    int _caCertAuthorityKeyUsageExtensionCRLSigning;
    int _caCertAuthorityKeyUsageExtensionEncipherOnly;
    int _caCertAuthorityKeyUsageExtensionDecipherOnly;
    int _caUserKeyUsageExtensionIsEnabled;
    int _caUserKeyUsageExtensionIsCritical;
    int _caUserKeyUsageExtensionSignature;
    int _caUserKeyUsageExtensionNonRepudiation;
    int _caUserKeyUsageExtensionKeyEncipherment;
    int _caUserKeyUsageExtensionDataEncipherment;
    int _caUserKeyUsageExtensionKeyAgreement;
    int _caUserKeyUsageExtensionCertSigning;
    int _caUserKeyUsageExtensionCRLSigning;
    int _caUserKeyUsageExtensionEncipherOnly;
    int _caUserKeyUsageExtensionDecipherOnly;
    char _caDoneCAKeyUsageExts;
}

- (int)_isEnabled;
- (char)_validate;
- (void)_saveUserKeyUsageExtPanelValues;
- (void)_setIsCritical:(id)a0;
- (void)_setToSSLServer;
- (void)_setToVPNServer;
- (void)_setToSSLClient;
- (void)_setToVPNClient;
- (int)_signatureUsage;
- (int)_certSigningUsage;
- (int)_crlSigningUsage;
- (int)_dataEnciphermentUsage;
- (int)_decipherOnlyUsage;
- (char)_doneCAKeyUsageExt;
- (int)_encipherOnlyUsage;
- (void)_fillInValuesInExtension:(struct __CE_DataAndType { int x0; union { struct __CE_AuthorityKeyID { int x0; struct cssm_data { unsigned long long x0; char *x1; } x1; int x2; struct __CE_GeneralNames *x3; int x4; struct cssm_data { unsigned long long x0; char *x1; } x5; } x0; struct cssm_data { unsigned long long x0; char *x1; } x1; unsigned short x2; struct __CE_GeneralNames { unsigned int x0; struct __CE_GeneralName *x1; } x3; struct __CE_GeneralNames { unsigned int x0; struct __CE_GeneralName *x1; } x4; struct __CE_ExtendedKeyUsage { unsigned int x0; struct cssm_data *x1; } x5; struct __CE_BasicConstraints { int x0; int x1; unsigned int x2; } x6; struct __CE_CertPolicies { unsigned int x0; struct __CE_PolicyInformation *x1; } x7; unsigned short x8; unsigned int x9; unsigned int x10; unsigned int x11; struct __CE_CRLDistPointsSyntax { unsigned int x0; struct __CE_CRLDistributionPoint *x1; } x12; struct __CE_IssuingDistributionPoint { struct __CE_DistributionPointName *x0; int x1; int x2; int x3; int x4; int x5; unsigned char x6; int x7; int x8; } x13; struct __CE_AuthorityInfoAccess { unsigned int x0; struct __CE_AccessDescription *x1; } x14; struct __CE_QC_Statements { unsigned int x0; struct __CE_QC_Statement *x1; } x15; struct __CE_NameConstraints { struct __CE_GeneralSubtrees *x0; struct __CE_GeneralSubtrees *x1; } x16; struct __CE_PolicyMappings { unsigned int x0; struct __CE_PolicyMapping *x1; } x17; struct __CE_PolicyConstraints { int x0; unsigned int x1; int x2; unsigned int x3; } x18; unsigned int x19; struct cssm_data { unsigned long long x0; char *x1; } x20; } x1; int x2; } *)a0 isCACertBeingCreated:(char)a1 extensionIsPresent:(char *)a2;
- (int)_isCritical;
- (int)_keyAgreementUsage;
- (int)_keyEnciphermentUsage;
- (int)_nonRepudiationUsage;
- (void)_saveCAKeyUsageExtPanelValues;
- (void)_setCRLSigningUsage:(id)a0;
- (void)_setCertAuthorityCertSigning:(char)a0;
- (void)_setCertAuthorityIsEnabled:(char)a0;
- (void)_setCertAuthoritySignature:(char)a0;
- (void)_setCertSigningUsage:(id)a0;
- (void)_setDataEnciphermentUsage:(id)a0;
- (void)_setDecipherOnlyUsage:(id)a0;
- (void)_setDoneCAKeyUsageExt:(char)a0;
- (void)_setEnabledCriticalDigitalSignature;
- (void)_setEncipherOnlyUsage:(id)a0;
- (void)_setIsEnabled:(id)a0;
- (void)_setKeyAgreementUsage:(id)a0;
- (void)_setKeyEnciphermentUsage:(id)a0;
- (void)_setNonRepudiationUsage:(id)a0;
- (void)_setSignatureUsage:(id)a0;
- (void)_setToCodeSigning;
- (void)_setToDefaults;
- (void)_setToSMIME;
- (void)_setUserSignature:(char)a0;
- (void)_updateKeyUsageExtPanelToCAValues;
- (void)_updateKeyUsageExtPanelToUserValues;

@end

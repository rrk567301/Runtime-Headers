@interface SFCertificateData : NSObject {
    id _reserved_SFCertificateData;
}

+ (long long)logLevel;
+ (char)isRoot:(struct __SecCertificate { } *)a0;
+ (void)_releaseSharedOidParser;
+ (id)_sharedOidParser;
+ (int)createTrustWithCertificates:(id)a0 policy:(void *)a1 trust:(struct __SecTrust **)a2;
+ (char)isCA:(struct __SecCertificate { } *)a0;
+ (char)isCRLStatusCode:(int)a0;
+ (char)isOCSPStatusCode:(int)a0;
+ (char)isPolicySpecificStatusCode:(int)a0;
+ (char)isRevocationStatusCode:(int)a0;
+ (id)policyValuesForTrust:(struct __SecTrust { } *)a0;
+ (void)setLogLevel:(long long)a0;
+ (id)statusStringForCode:(int)a0 domain:(unsigned int)a1;
+ (unsigned int)trustDomainForKeychain:(struct __SecKeychain { } *)a0;
+ (id)trustPolicies;

- (void)dealloc;
- (unsigned long long)hash;
- (id)init;
- (char)isEqual:(id)a0;
- (struct cssm_data { unsigned long long x0; char *x1; } *)data;
- (id)initWithData:(struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)setData:(struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (id)expirationDate;
- (void)setCertificate:(struct __SecCertificate { } *)a0;
- (struct cssm_x509_name { unsigned int x0; struct cssm_x509_rdn *x1; } *)subject;
- (struct __SecCertificate { } *)certificate;
- (id)initWithCertificate:(struct __SecCertificate { } *)a0;
- (id)initWithTrust:(struct __SecTrust { } *)a0;
- (id)labelAtIndex:(unsigned long long)a0;
- (void)setLeaf:(char)a0;
- (id)statusString;
- (struct cssm_data { unsigned long long x0; char *x1; } *)certData;
- (id)contentAtIndex:(unsigned long long)a0;
- (char)expired;
- (void)parseExtension:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)saveTrustValues;
- (void)setTrustDomain:(unsigned int)a0;
- (void)setTrustValues:(id)a0;
- (id)authorityString;
- (unsigned long long)certIssuerIndex;
- (id)fieldDataForOid:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0 inCert:(const struct cssm_data { unsigned long long x0; char *x1; } *)a1 auxData:(id *)a2;
- (void)parseKeyHeader:(const struct cssm_keyheader { unsigned int x0; struct cssm_guid { unsigned int x0; unsigned short x1; unsigned short x2; unsigned char x3[8]; } x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; struct cssm_date { unsigned char x0[4]; unsigned char x1[2]; unsigned char x2[2]; } x9; struct cssm_date { unsigned char x0[4]; unsigned char x1[2]; unsigned char x2[2]; } x10; unsigned int x11; unsigned int x12; unsigned int x13; } *)a0;
- (void)addFieldIndex:(int)a0 forKey:(id)a1;
- (unsigned long long)certExpirationDateIndex;
- (unsigned long long)certSerialNumberIndex;
- (int)certStatus;
- (int)certStatusFromDomainTrustSettings:(unsigned int)a0 isMixed:(char *)a1 hasBasic:(char *)a2 names:(id *)a3;
- (id)certTitle;
- (unsigned long long)certTitleIndex;
- (char)certificate:(struct __SecCertificate { } *)a0 isEqualTo:(struct __SecCertificate { } *)a1;
- (long long)clHandle;
- (struct __SecPolicy { } *)copyPolicyForOid:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (int)evalStatus;
- (id)evaluateStatus;
- (char)existsInKeychain:(void *)a0;
- (char)existsInKeychain:(void *)a0 path:(id *)a1;
- (id)expirationString;
- (id)extensionLabelString;
- (id)fieldDataForOid:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (id)firstValidDate;
- (char)ignorableStatusCode:(int)a0;
- (long long)indentAtIndex:(unsigned long long)a0;
- (id)initWithCertData:(struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (id)initWithCertificate:(struct __SecCertificate { } *)a0 trust:(struct __SecTrust { } *)a1 parse:(char)a2;
- (char)isAuthorityCertificate;
- (char)isEqualToSFCertificateData:(id)a0;
- (char)isLeafCertificate;
- (char)isRootCertificate;
- (struct cssm_x509_name { unsigned int x0; struct cssm_x509_rdn *x1; } *)issuer;
- (struct __SecKeychain { } *)keychain;
- (void)minimalParseCert:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (unsigned long long)numCertFields;
- (unsigned long long)numLines;
- (id)oidParser;
- (int)parseAccessDescription:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0 index:(int)a1;
- (void)parseAlternativeName:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseAuthorityKeyId:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseBasicConstraints:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseCert:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseCertPolicies:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (int)parseCrlDistributionPoints:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseDistributionPoint:(const struct __CE_CRLDistributionPoint { struct __CE_DistributionPointName *x0; int x1; unsigned char x2; struct __CE_GeneralNames *x3; } *)a0;
- (int)parseEmbeddedSCTs:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (int)parseEntrustVersInfo:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseExtKeyUsage:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (int)parseExtensionCommon:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0 expect:(char)a1;
- (void)parseField:(const struct cssm_field { struct cssm_data { unsigned long long x0; char *x1; } x0; struct cssm_data { unsigned long long x0; char *x1; } x1; } *)a0 atIndex:(unsigned int)a1;
- (void)parseGeneralNames:(struct __CE_GeneralNames { unsigned int x0; struct __CE_GeneralName *x1; } *)a0 indent:(int)a1;
- (void)parseGeneralNamesSequence:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0 indent:(int)a1;
- (int)parseGeneralSubtree:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0 index:(int)a1;
- (int)parseInfoAccess:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0 forAuthority:(char)a1;
- (int)parseInhibitAnyPolicy:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseKeyUsage:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (int)parseNameConstraints:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseNetscapeCertType:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (int)parsePolicyConstraints:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (int)parsePrintableBERSequence:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0 label:(id)a1 indent:(int)a2;
- (int)parsePrivateKeyUsagePeriod:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)parseRelativeDistinguishedName:(const struct cssm_data { unsigned long long x0; char *x1; } *)a0 indent:(int)a1;
- (void)parseX509Name:(const struct cssm_x509_name { unsigned int x0; struct cssm_x509_rdn *x1; } *)a0 setTitle:(char)a1 indent:(int)a2;
- (id)pemEncodedTextData;
- (id)policies;
- (id)policyNames;
- (id)policyString;
- (id)policyValues;
- (void)saveTrustValuesInDomain:(unsigned int)a0;
- (void)saveUserTrustValues;
- (void)setCertData:(struct cssm_data { unsigned long long x0; char *x1; } *)a0;
- (void)setPolicies:(id)a0;
- (void)setTrust:(struct __SecTrust { } *)a0;
- (id)tabDelimitedTextData;
- (struct __SecTrust { } *)trust;
- (char)trustChanged;
- (unsigned int)trustDomain;
- (id)trustValues;
- (id)trustValuesForDomain:(unsigned int)a0;
- (id)trustValuesForDomain:(unsigned int)a0 cached:(char)a1;
- (id)userIdentityFieldIndexes;

@end

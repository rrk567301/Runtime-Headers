@class NSString, _PGDisplayNub, _PGDisplay, PGRootFIFO, PGChildFIFO, NSMutableDictionary, NSObject, PGMemoryMap, PGIOSurfaceHostDevice, PGMapping, PGEFIDisplay;
@protocol MTLDevice, OS_dispatch_source, MTLCommandQueue, OS_dispatch_queue;

@interface _PGDevice : NSObject <PGDevice> {
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _signalMutex;
    struct condition_variable { struct _opaque_pthread_cond_t { long long __sig; char __opaque[40]; } __cv_; } _signalCond;
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _taskMutex;
    struct condition_variable { struct _opaque_pthread_cond_t { long long __sig; char __opaque[40]; } __cv_; } _taskFifoDeleted;
    unsigned long long _displayPortBusyMask;
    struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int __a_value; } __a_; } _interruptDisplay;
    _PGDisplayNub *_displayNub[8];
    _PGDisplay *_displayClient[8];
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _displayMutex;
    struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int __a_value; } __a_; } _interruptStamp;
    void *_stampMemory;
    struct recursive_mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _rootTaskMutex;
    unsigned int _rootPageNumber;
    struct PGTask_s { } *_rootTask;
    void *_rootTaskBase;
    void *_readPage;
    PGMapping *_rootNodeMapping;
    void *_rootNode;
    BOOL _tearingDownRoot;
    struct { unsigned int enabled; unsigned int basePage; unsigned int length; unsigned int start; unsigned long long virtualOffset; unsigned int read; unsigned int written; unsigned int faultOffset; } _fifo;
    PGRootFIFO *_rootFIFO;
    PGMapping *_rootFIFOMapping;
    NSObject<OS_dispatch_queue> *_fifoQueue;
    PGChildFIFO *_childFIFOs[64];
    struct atomic<unsigned long long> { struct __cxx_atomic_impl<unsigned long long, std::__cxx_atomic_base_impl<unsigned long long>> { _Atomic unsigned long long __a_value; } __a_; } _interruptFaultMask;
    NSMutableDictionary *_tasks;
    id /* block */ _raiseInterrupt;
    id /* block */ _createTask;
    id /* block */ _destroyTask;
    id /* block */ _mapMemory;
    id /* block */ _unmapMemory;
    id /* block */ _readMemory;
    id /* block */ _addTraceRange;
    id /* block */ _removeTraceRange;
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _rootTaskAllocatorMutex;
    struct MTLRangeAllocator { struct MTLRangeAllocatorElement *elements; unsigned int numElements; unsigned long long capacity; unsigned long long capacityIncrement; unsigned long long defaultAlignmentMask; } _rootTaskAllocator;
    struct APVFeatures { BOOL valid; BOOL unsupported; BOOL objectTables; BOOL efiDisplay; BOOL displayDoorbell; BOOL mapperIOSurfaces; BOOL synchronizeAndDiscardResources; BOOL displayMapperSurface; BOOL discardResources; BOOL displaySleep; BOOL supportsRGhAPresents; BOOL synchronizeDiscardChildResources; BOOL dualPlaneTextures; BOOL displaySetProperties; BOOL displayDimensionFloats; BOOL metalHeaps; BOOL bufferFromIOSurface; unsigned int maxFIFOCount; unsigned int s8ByteCountForD32S8; BOOL supportsSharedTextures; BOOL supportsInfoEncoder; BOOL supportsDefaultRasterSampleCount; BOOL supportsVertexAmplification; BOOL supportsSunburstDisplay; BOOL supportsProgrammableSamplePositions; BOOL supportsVariableRasterizationRateMaps; BOOL supportsTileShadersImageBlocks; BOOL supportsDisplayCompositorParameters; BOOL supportsCmdExecIndirect3; BOOL supportsSwizzledTextures; BOOL supportsDynamicAttributeStride; BOOL supportsBlitEncoderSPI; BOOL supportsMultiplaneMippedBlitTextures; BOOL supportsComputePassDescriptorDispatchType; BOOL supportsObjectUniqueIdentifier; BOOL supportsCommandBufferJump; BOOL supportsSharedStorageHeaps; BOOL supportsHeapHazardTracking; BOOL supportsProtectionOptionsEnvelope; BOOL supportsInsertCompressedTextureReinterpretationFlush; BOOL supportsArgumentBuffers; BOOL supportsDisplaySetGuestICCProfile; BOOL supportsCorrect2pXR10A8; } _features;
    struct { unsigned int enabled; unsigned int start; unsigned int length; unsigned int depth; unsigned int mode; unsigned int stride; } _efi;
    PGEFIDisplay *_efiDisplay;
    struct atomic<unsigned long long> { struct __cxx_atomic_impl<unsigned long long, std::__cxx_atomic_base_impl<unsigned long long>> { _Atomic unsigned long long __a_value; } __a_; } _waitingStamps;
    struct { unsigned int nextWaitingIndex; unsigned int nextWaitingValue; struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>> { _Atomic unsigned int __a_value; } __a_; } lastPendingStamp; } _waitingInfo[64];
    NSObject<OS_dispatch_queue> *_reportingQueue;
    NSObject<OS_dispatch_source> *_reportStampWaitTimeoutSource;
    BOOL _enableProcessIsolation;
    BOOL _supportsResourceDetachBacking;
    int _guestDeviceInfoMaxKey;
}

@property (readonly, nonatomic) char enableProtectedContent;
@property (readonly) id<MTLDevice> mtlDevice;
@property (readonly) id<MTLCommandQueue> blitDownQueue;
@property (readonly) id<MTLCommandQueue> blitUpQueue;
@property (readonly) id<MTLCommandQueue> execQueue;
@property (readonly) int binaryVersion;
@property (readonly) const struct APVFeatures { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; unsigned int x17; unsigned int x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; BOOL x25; BOOL x26; BOOL x27; BOOL x28; BOOL x29; BOOL x30; BOOL x31; BOOL x32; BOOL x33; BOOL x34; BOOL x35; BOOL x36; BOOL x37; BOOL x38; BOOL x39; BOOL x40; BOOL x41; BOOL x42; } *features;
@property (readonly) int runState;
@property (readonly) unsigned long long deviceTraceId;
@property (readonly) PGIOSurfaceHostDevice *mapperService;
@property (readonly, nonatomic) unsigned int displayPortCount;
@property (readonly) PGMemoryMap *memoryMap;
@property (readonly) BOOL supportsSharedTextures;
@property (readonly) BOOL supportsBufferWithIOSurface;
@property (readonly) BOOL supportsLargeUserTasks;
@property (readonly) BOOL supportsLargeKernelTasks;
@property (readonly) BOOL supportsRangeBuffer;
@property (readonly) BOOL supportsSharedMemoryHeap;
@property (readonly) BOOL supportsArgumentBuffers;
@property (readonly) unsigned long long deviceFeatureLevel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)pause;
- (void)reset;
- (void)interrupt;
- (void)stop;
- (id)initWithDescriptor:(id)a0;
- (id)saveState;
- (void)didResume;
- (void)unpause;
- (unsigned int)fifoFaultOffset;
- (unsigned int)getEFIModeValue;
- (unsigned int)getEFIModeCount;
- (void)initWaitingInfo;
- (void)setFifoWritten:(unsigned int)a0;
- (struct PGTraceRange_s { } *)addTraceRange:(struct PGPhysicalMemoryRange_s { unsigned long long x0; unsigned long long x1; } *)a0 handler:(id /* block */)a1;
- (void)addWait:(unsigned int)a0 waitingFor:(unsigned int)a1 value:(unsigned int)a2;
- (BOOL)attachDisplay:(id)a0 port:(unsigned long long)a1;
- (char)checkSuspendDeviceInfo:(const struct PGSuspendStateSerialized_t { unsigned int x0; unsigned int x1; union { struct PGSuspendStateSerializedPayloadV1_t { struct APVKeyValuePair { unsigned int x0; unsigned int x1; } x0[0]; } x0; struct PGSuspendStateSerializedPayloadV2_t { unsigned int x0; unsigned int x1; struct APVKeyValuePair { unsigned int x0; unsigned int x1; } x2[0]; } x1; } x2; } *)a0 error:(id *)a1;
- (BOOL)createFIFO:(unsigned int)a0;
- (BOOL)createFIFOInternal:(unsigned int)a0 restoring:(BOOL)a1;
- (void)createRootFifo;
- (BOOL)createTask:(unsigned long long)a0 taskInfo:(struct PGTaskInfo_s { struct PGTask_s *x0; void *x1; } *)a1;
- (void)createTaskID:(unsigned int)a0 taskRoot:(unsigned int)a1 length:(unsigned long long)a2 restoring:(BOOL)a3;
- (BOOL)deleteFIFO:(unsigned int)a0;
- (BOOL)deleteTaskID:(unsigned int)a0;
- (void)destroyTask:(struct PGTaskInfo_s { struct PGTask_s *x0; void *x1; } *)a0;
- (void)detachDisplay:(id)a0 port:(unsigned long long)a1;
- (void)displayPokePort:(unsigned long long)a0;
- (void)enableFifo;
- (id)fifoForStampIndex:(unsigned int)a0;
- (id)finishSuspend;
- (void)finishWait:(unsigned int)a0;
- (void)getDeviceInfo:(unsigned int)a0 length:(unsigned int)a1 dst:(unsigned int)a2;
- (id)getDisplayAtPort:(unsigned long long)a0;
- (id)getDisplayNubAtPort:(unsigned long long)a0;
- (unsigned int)getEFIStrideAlignment;
- (id)getKernelTask;
- (id)getTaskID:(unsigned int)a0;
- (id)getUserTaskID:(unsigned int)a0;
- (void)logDeviceFeatureLevel;
- (BOOL)mapMemoryInTask:(struct PGTask_s { } *)a0 segmentCount:(unsigned int)a1 offset:(unsigned long long)a2 readonly:(BOOL)a3 ranges:(struct PGPhysicalMemoryRange_s { unsigned long long x0; unsigned long long x1; } *)a4;
- (unsigned int)mmioReadAtOffset:(unsigned long long)a0;
- (void)mmioWriteAtOffset:(unsigned long long)a0 value:(unsigned int)a1;
- (id)newContiguousMapping:(unsigned int)a0 length:(unsigned long long)a1;
- (id)newDisplayWithDescriptor:(id)a0 port:(unsigned long long)a1 serialNum:(unsigned int)a2;
- (id)newRangeMapping:(struct PGPhysicalMemoryRange_s { unsigned long long x0; unsigned long long x1; } *)a0 rangeCount:(unsigned int)a1 totalLength:(unsigned long long)a2 readOnly:(BOOL)a3;
- (id)newTaskMapping:(struct PGTaskInfo_s { struct PGTask_s *x0; void *x1; } *)a0 ranges:(struct PGPhysicalMemoryRange_s { unsigned long long x0; unsigned long long x1; } *)a1 rangeCount:(unsigned int)a2 totalLength:(unsigned long long)a3 offset:(unsigned long long)a4 readOnly:(BOOL)a5;
- (unsigned long long)nextTraceID;
- (BOOL)readFromPhysicalAddress:(unsigned long long)a0 length:(unsigned int)a1 dst:(void *)a2;
- (unsigned int)readInterruptFault;
- (void)removeTraceRange:(struct PGTraceRange_s { } *)a0;
- (void)reportStampWaitTimeout;
- (char)resetWithMemoryMap:(id)a0;
- (void)resumeChildFifo:(unsigned int)a0;
- (void)resumeFifo;
- (void)ringDisplayDoorbellAtPort:(unsigned int)a0;
- (id)serializeSuspendState;
- (void)setBinaryVersion:(unsigned int)a0;
- (void)setEFIDisplay:(unsigned int)a0;
- (void)setEFIFramebufferDepth:(unsigned int)a0;
- (void)setEFIFramebufferLength:(unsigned int)a0;
- (void)setEFIFramebufferMode:(unsigned int)a0;
- (void)setEFIFramebufferStart:(unsigned int)a0;
- (void)setEFIFramebufferStride:(unsigned int)a0;
- (void)setEFIModeSelect:(unsigned int)a0;
- (void)setFifoBasePage:(unsigned int)a0;
- (void)setFifoLength:(unsigned int)a0;
- (void)setFifoStart:(unsigned int)a0;
- (void)setRootPage:(unsigned int)a0;
- (void)setSharedDisplayStatePage:(unsigned int)a0 forPort:(unsigned long long)a1 restoring:(BOOL)a2;
- (BOOL)setupReporting;
- (void)signalFIFOs;
- (void)signalFaultInFIFO:(id)a0;
- (void)signalStamp:(unsigned int)a0 value:(unsigned int)a1;
- (void)teardownDisplays;
- (void)teardownFifos;
- (void)teardownRoot;
- (void)teardownTasks;
- (void)unmap:(id)a0;
- (BOOL)unmapMemoryInTask:(struct PGTask_s { } *)a0 offset:(unsigned long long)a1 length:(unsigned long long)a2;
- (BOOL)waitStamp:(struct { unsigned int x0; unsigned int x1; } *)a0 waitingFIFO:(id)a1;
- (BOOL)waitStamps:(unsigned int)a0 barriers:(struct { unsigned int x0; unsigned int x1; } *)a1 waitingFIFO:(id)a2;
- (void)wakeFifo:(unsigned int)a0;
- (BOOL)willResumeWithSuspendState:(id)a0 error:(id *)a1;
- (void)willSuspend;

@end

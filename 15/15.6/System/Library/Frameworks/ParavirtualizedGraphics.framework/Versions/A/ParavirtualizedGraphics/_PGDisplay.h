@class PGDisplayPipelineCache, NSString, NSArray, _PGDisplayNub, PGDisplayPipelineDescriptor, NSObject, _PGDevice;
@protocol MTLTexture, MTLDevice, OS_dispatch_source, OS_dispatch_queue, MTLBuffer;

@interface _PGDisplay : NSObject <PGDisplay, PGDisplayPrivate> {
    char _reservedSerialNum;
    char _attached;
    _PGDevice *_device;
    struct { struct { float x; float y; } redPrimary; struct { float x; float y; } greenPrimary; struct { float x; float y; } bluePrimary; struct { float x; float y; } whitePoint; } _colorSpace;
    id /* block */ _compositorParametersHandler;
    unsigned long long _configEpoch;
    struct { unsigned short x; unsigned short y; } _origin;
    unsigned char _scaleFactor;
    char _optIntoUsingUnplugMethod;
    int _connectionType;
    unsigned long long _protectionOptions;
    unsigned long long _protectionRequirements;
    float _minNits;
    float _maxNits;
    float _maxSDRNits;
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _displayMutex;
    NSObject<OS_dispatch_source> *_newFrameEventSource;
    id<MTLDevice> _mtlDevice;
    unsigned short _width;
    unsigned short _height;
    id<MTLBuffer> _posBuf;
    id<MTLBuffer> _texBuf;
    id<MTLBuffer> _fragShaderPropertyBuf;
    id<MTLTexture> _currentFrame;
    BOOL _currentFrameEncoded;
    unsigned long long _vtxCount;
    PGDisplayPipelineDescriptor *_renderPipelineDescriptor;
    PGDisplayPipelineCache *_renderPipelineCache;
    unsigned int _iosurfacePixelFormat;
    id<MTLTexture> _gammaTableTex;
    struct { struct { void /* unknown type, empty encoding */ columns[4]; } colorMatrix; struct { float red; float green; float blue; } gammaTableSlopeAtZero; struct { float red; float green; float blue; } gammaTableSlopeAtOne; } _fragShaderProperties;
    struct CGColorSpace { } *_guestColorSpace;
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _nubMutex;
    struct condition_variable { struct _opaque_pthread_cond_t { long long __sig; char __opaque[40]; } __cv_; } _inFlightCondition;
    unsigned int _inFlightFrameCount;
}

@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) struct CGSize { double width; double height; } sizeInMillimeters;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) id /* block */ newFrameEventHandler;
@property (readonly, nonatomic) id /* block */ cursorGlyphHandler;
@property (readonly, nonatomic) id /* block */ cursorShowHandler;
@property (readonly, nonatomic) id /* block */ cursorMoveHandler;
@property (readonly, nonatomic) struct { unsigned short x0; unsigned short x1; } cursorPosition;
@property (readonly, nonatomic) unsigned int serialNum;
@property (readonly, nonatomic) unsigned long long minimumTextureUsage;
@property (readonly, nonatomic) unsigned long long guestPresentCount;
@property (readonly, nonatomic) unsigned long long hostPresentCount;
@property (readonly, nonatomic) unsigned long long port;
@property (copy, nonatomic) NSArray *modeList;
@property (readonly, nonatomic) id /* block */ cursorGlyphHandler2;
@property (readonly, nonatomic) id /* block */ sleepHandler;
@property (readonly, nonatomic) id /* block */ modeListResponsivenessChangeHandler;
@property (readonly, nonatomic) int modeListResponsiveness;
@property (readonly, nonatomic) struct { struct { float x0; float x1; } x0; struct { float x0; float x1; } x1; struct { float x0; float x1; } x2; struct { float x0; float x1; } x3; } colorSpace;
@property (readonly, nonatomic) unsigned long long configEpoch;
@property (readonly, nonatomic) struct { unsigned short x0; unsigned short x1; } origin;
@property (readonly, nonatomic) unsigned char scaleFactor;
@property (readonly, nonatomic) char optIntoUsingUnplugMethod;
@property (nonatomic) BOOL guestColorSpaceDirty;
@property (nonatomic) _PGDisplayNub *nub;
@property (readonly, nonatomic) id /* block */ modeChangeHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id /* block */ compositorParametersHandler;
@property (readonly, nonatomic) float minNits;
@property (readonly, nonatomic) float maxNits;
@property (readonly, nonatomic) float maxSDRNits;
@property (readonly, nonatomic) int connectionType;
@property (nonatomic) unsigned long long protectionOptions;
@property (readonly, nonatomic) unsigned long long protectionRequirements;
@property (readonly, nonatomic) struct CGColorSpace { } *guestColorSpace;

+ (void)initSerialNumDB;
+ (BOOL)reserveSerialNum:(unsigned int)a0;
+ (void)unreserveSerialNum:(unsigned int)a0;

- (void)dealloc;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)unplug;
- (BOOL)encodeCurrentFrameToCommandBuffer:(id)a0 texture:(id)a1 region:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a2;
- (void)encodeRenderFrame:(id)a0 toDisplay:(id)a1 withCmdBuf:(id)a2 viewport:(struct { double x0; double x1; double x2; double x3; double x4; double x5; })a3;
- (id)initWithDevice:(id)a0 descriptor:(id)a1 port:(unsigned long long)a2 serialNum:(unsigned int)a3;
- (void)internalEncodeCurrentFrameToCommandBuffer:(id)a0 texture:(id)a1 region:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a2;
- (void)modeChangeWidth:(unsigned long long)a0 height:(unsigned long long)a1 iosurfacePixelFormat:(unsigned int)a2 protectionRequirements:(unsigned long long)a3;
- (void)presentFrame:(id)a0 iosurfacePixelFormat:(unsigned int)a1 protectionRequirements:(unsigned long long)a2 task:(id)a3 gammaTableVirtualOffset:(unsigned long long)a4 gammaTableMappedLength:(unsigned long long)a5 gammaTableEntryCount:(unsigned int)a6 gammaTableSum:(unsigned int)a7 colorMatrix:(float[3][4])a8 completionBlock:(id /* block */)a9;
- (void)signalCurrentFrame;
- (void)signalResponsiveness;
- (void)updateColorMatrix:(float[3][4])a0;
- (void)updateGammaSlopesRedSlopeAtZero:(float)a0 greenSlopeAtZero:(float)a1 blueSlopeAtZero:(float)a2 redSlopeAtOne:(float)a3 greenSlopeAtOne:(float)a4 blueSlopeAtOne:(float)a5;
- (void)updateGammaTable:(id)a0 virtualOffset:(unsigned long long)a1 mappedLength:(unsigned long long)a2 entryCount:(unsigned int)a3 sum:(unsigned int)a4;
- (void)updateResponsiveness;
- (void)waitForPendingFrames:(void *)a0;

@end

@class NSString, NSArray, NSXPCListenerEndpoint, ACTimedExpirer, ACAccountStoreCache, ACNotifyAccountCache, NSMutableDictionary, NSObject, ACRemoteAccountStoreSession;
@protocol OS_dispatch_queue;

@interface ACAccountStore : NSObject {
    id _daemonAccountStoreDidChangeObserver;
    NSMutableDictionary *_accountCache;
    NSXPCListenerEndpoint *_endpoint;
    ACRemoteAccountStoreSession *_remoteAccountStoreSession;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _remoteAccountStoreSessionLock;
    ACTimedExpirer *_remoteAccountStoreSessionExpirer;
    ACRemoteAccountStoreSession *_longLivedRemoteAccountStoreSession;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _longLivedRemoteAccountStoreSessionLock;
    ACTimedExpirer *_longLivedRemoteAccountStoreSessionExpirer;
}

@property (class, retain, nonatomic, setter=_setDefaultStore:) ACAccountStore *defaultStore;

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *replyQueue;
@property (readonly, nonatomic) ACRemoteAccountStoreSession *remoteAccountStoreSession;
@property (readonly, nonatomic) ACRemoteAccountStoreSession *longLivedRemoteAccountStoreSession;
@property (retain) ACNotifyAccountCache *_primaryAppleAccountCache;
@property (retain) ACAccountStoreCache *_testCache;
@property (readonly) NSString *effectiveBundleID;
@property (readonly, weak) NSArray *accounts;

+ (id)_obsoleteAccountTypeIDsToRemove;
+ (void)_setConnectionTimeout:(unsigned long long)a0;
+ (int)accountsWithAccountTypeIdentifierExist:(id)a0;
+ (char)canSaveAccountsOfAccountTypeIdentifier:(id)a0;
+ (long long)countOfAccountsWithAccountTypeIdentifier:(id)a0;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (id)_cache;
- (id)initWithEffectiveBundleID:(id)a0;
- (void)kerberosAccountsForDomainFromURL:(id)a0 completion:(id /* block */)a1;
- (void)renewCredentialsForAccount:(id)a0 completion:(id /* block */)a1;
- (unsigned int)_uidOfAccountsd;
- (id)credentialForAccount:(id)a0 serviceID:(id)a1;
- (void)notifyRemoteDevicesOfUpdatedCredentials:(id)a0 withOptions:(id)a1 completion:(id /* block */)a2;
- (id)allAccountTypes;
- (id)dataclassActionsForAccountSave:(id)a0;
- (void)_checkSaveRateLimitForAccountType:(id)a0;
- (void)_clearAccountCaches;
- (id)_connectionFailureError;
- (id)_createSMTPAccountForServerAccount:(id)a0;
- (void)_removeObsoleteAccountsInternal:(id)a0 completion:(id /* block */)a1;
- (id)_removeObsoleteOSXServerAccountForMacOS:(id)a0;
- (void)_removeObsoleteOSXServerAccountForiOS:(id)a0;
- (id)_sanitizeOptionsDictionary:(id)a0;
- (void)_saveAccount:(id)a0 verify:(char)a1 dataclassActions:(id)a2 completion:(id /* block */)a3;
- (id)_unsanitizeError:(id)a0;
- (id)accessKeysForAccountType:(id)a0;
- (id)accountIdentifiersEnabledForDataclass:(id)a0;
- (void)accountIdentifiersEnabledForDataclasses:(id)a0 withAccountTypeIdentifiers:(id)a1 completion:(id /* block */)a2;
- (id)accountIdentifiersEnabledToSyncDataclass:(id)a0;
- (id)accountTypeWithAccountTypeIdentifier:(id)a0;
- (id)accountTypeWithAccountTypeIdentifier:(id)a0 error:(id *)a1;
- (void)accountTypeWithIdentifier:(id)a0 completion:(id /* block */)a1;
- (id)accountWithIdentifier:(id)a0;
- (void)accountWithIdentifier:(id)a0 completion:(id /* block */)a1;
- (id)accountWithIdentifier:(id)a0 error:(id *)a1;
- (void)accountsOfTypeID:(id)a0 customProperty:(id)a1 value:(id)a2 cacheSuffix:(id)a3 completion:(id /* block */)a4;
- (id)accountsOfTypeID:(id)a0 customProperty:(id)a1 value:(id)a2 cacheSuffix:(id)a3 error:(id *)a4;
- (void)accountsOnPairedDeviceWithAccountType:(id)a0 completion:(id /* block */)a1;
- (void)accountsOnPairedDeviceWithAccountTypes:(id)a0 withOptions:(id)a1 completion:(id /* block */)a2;
- (id)accountsWithAccountType:(id)a0;
- (void)accountsWithAccountType:(id)a0 completion:(id /* block */)a1;
- (void)accountsWithAccountType:(id)a0 options:(unsigned long long)a1 completion:(id /* block */)a2;
- (id)accountsWithAccountType:(id)a0 options:(unsigned long long)a1 error:(id *)a2;
- (void)accountsWithAccountTypeIdentifiers:(id)a0 completion:(id /* block */)a1;
- (id)accountsWithAccountTypeIdentifiers:(id)a0 error:(id *)a1;
- (void)accountsWithAccountTypeIdentifiers:(id)a0 preloadedProperties:(id)a1 completion:(id /* block */)a2;
- (id)accountsWithAccountTypeIdentifiers:(id)a0 preloadedProperties:(id)a1 error:(id *)a2;
- (char)addClientToken:(id)a0 forAccount:(id)a1;
- (id)allCredentialItems;
- (id)allDataclasses;
- (id)appPermissionsForAccountType:(id)a0;
- (void)cachedAccountWithIdentifier:(id)a0 completion:(id /* block */)a1;
- (void)cachedAccountsWithAccountType:(id)a0 options:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)canSaveAccount:(id)a0 withCompletionHandler:(id /* block */)a1;
- (id)childAccountsForAccount:(id)a0;
- (id)childAccountsForAccount:(id)a0 error:(id *)a1;
- (id)childAccountsForAccount:(id)a0 withTypeIdentifier:(id)a1;
- (void)clearAllPermissionsGrantedForAccountType:(id)a0;
- (void)clearGrantedPermissionsForAccountType:(id)a0;
- (id)clientTokenForAccount:(id)a0;
- (id)credentialForAccount:(id)a0;
- (id)credentialForAccount:(id)a0 bundleID:(id)a1;
- (id)credentialForAccount:(id)a0 error:(id *)a1;
- (id)credentialForAccount:(id)a0 serviceID:(id)a1 error:(id *)a2;
- (id)credentialItemForAccount:(id)a0 serviceName:(id)a1;
- (id)dataclassActionsForAccountDeletion:(id)a0;
- (id)dataclassActionsForAccountDeletion:(id)a0 error:(id *)a1;
- (id)dataclassActionsForAccountSave:(id)a0 error:(id *)a1;
- (void)disconnectFromRemoteAccountStore;
- (void)discoverPropertiesForAccount:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (id)displayTypeForAccountWithIdentifier:(id)a0;
- (id)enabledDataclassesForAccount:(id)a0;
- (id)enabledDataclassesForAccount:(id)a0 error:(id *)a1;
- (unsigned long long)generationForCacheSuffix:(id)a0;
- (id)grantedPermissionsForAccountType:(id)a0;
- (void)handleURL:(id)a0;
- (char)hasAccountWithDescription:(id)a0;
- (id)initWithRemoteEndpoint:(id)a0;
- (id)initWithRemoteEndpoint:(id)a0 effectiveBundleID:(id)a1;
- (void)insertAccountType:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)insertCredentialItem:(id)a0 withCompletionHandler:(id /* block */)a1;
- (char)isPerformingDataclassActionsForAccount:(id)a0;
- (char)isPerformingDataclassActionsForAccount:(id)a0 error:(id *)a1;
- (char)isPushSupportedForAccount:(id)a0;
- (char)isTetheredSyncingEnabledForDataclass:(id)a0;
- (void)migrateCredentialForAccount:(id)a0 completion:(id /* block */)a1;
- (void)notifyRemoteDevicesOfModifiedAccount:(id)a0;
- (void)notifyRemoteDevicesOfModifiedAccount:(id)a0 withOptions:(id)a1;
- (void)notifyRemoteDevicesOfModifiedAccount:(id)a0 withOptions:(id)a1 completion:(id /* block */)a2;
- (void)notifyRemoteDevicesOfUpdatedCredentials:(id)a0;
- (void)notifyRemoteDevicesOfUpdatedCredentials:(id)a0 withOptions:(id)a1;
- (void)openAuthenticationURL:(id)a0 forAccount:(id)a1 shouldConfirm:(char)a2 completion:(id /* block */)a3;
- (void)openAuthenticationURLForAccount:(id)a0 withDelegateClassName:(id)a1 fromBundleAtPath:(id)a2 shouldConfirm:(char)a3 completion:(id /* block */)a4;
- (id)parentAccountForAccount:(id)a0;
- (id)parentAccountForAccount:(id)a0 error:(id *)a1;
- (char)permissionForAccountType:(id)a0;
- (void)preloadDataclassOwnersWithCompletion:(id /* block */)a0;
- (id)provisionedDataclassesForAccount:(id)a0;
- (id)provisionedDataclassesForAccount:(id)a0 error:(id *)a1;
- (void)removeAccount:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)removeAccount:(id)a0 withDataclassActions:(id)a1 completion:(id /* block */)a2;
- (void)removeAccount:(id)a0 withDeleteSync:(char)a1 completion:(id /* block */)a2;
- (void)removeAccountFromPairedDevice:(id)a0 withCompletion:(id /* block */)a1;
- (void)removeAccountFromPairedDevice:(id)a0 withOptions:(id)a1 completion:(id /* block */)a2;
- (void)removeAccountType:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)removeAccountsFromPairedDeviceWithCompletion:(id /* block */)a0;
- (void)removeAccountsFromPairedDeviceWithOptions:(id)a0 completion:(id /* block */)a1;
- (void)removeCredentialItem:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)removeObsoleteAccounts:(id /* block */)a0;
- (void)renewCredentialsForAccount:(id)a0 force:(char)a1 reason:(id)a2 completion:(id /* block */)a3;
- (void)renewCredentialsForAccount:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)renewCredentialsForAccount:(id)a0 reason:(id)a1 completion:(id /* block */)a2;
- (void)renewCredentialsForAccount:(id)a0 services:(id)a1 completion:(id /* block */)a2;
- (void)reportTelemetryForLandmarkEvent:(id /* block */)a0;
- (void)requestAccessToAccountsWithType:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)requestAccessToAccountsWithType:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)resetDatabaseToVersion:(id)a0 withCompletion:(id /* block */)a1;
- (void)runAccountMigrationPlugins:(id /* block */)a0;
- (void)saveAccount:(id)a0 toPairedDeviceWithOptions:(id)a1 completion:(id /* block */)a2;
- (void)saveAccount:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)saveAccount:(id)a0 withDataclassActions:(id)a1 completion:(id /* block */)a2;
- (void)saveAccount:(id)a0 withDataclassActions:(id)a1 doVerify:(char)a2 completion:(id /* block */)a3;
- (void)saveCredentialItem:(id)a0 withCompletionHandler:(id /* block */)a1;
- (char)saveVerifiedAccount:(id)a0 error:(id *)a1;
- (void)saveVerifiedAccount:(id)a0 withCompletionHandler:(id /* block */)a1;
- (void)scheduleBackupIfNonexistent:(id /* block */)a0;
- (void)setCredential:(id)a0 forAccount:(id)a1 serviceID:(id)a2 error:(id *)a3;
- (void)setNotificationsEnabled:(char)a0;
- (void)setPermissionGranted:(char)a0 forBundleID:(id)a1 onAccountType:(id)a2;
- (void)shutdownAccountsD:(id /* block */)a0;
- (id)supportedDataclassesForAccountType:(id)a0;
- (id)syncableDataclassesForAccountType:(id)a0;
- (id)tetheredSyncSourceTypeForDataclass:(id)a0;
- (char)triggerKeychainMigrationIfNecessary:(id *)a0;
- (int)updateExistenceCacheOfAccountWithTypeIdentifier:(id)a0;
- (void)verifyCredentialsForAccount:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)verifyCredentialsForAccount:(id)a0 saveWhenAuthorized:(char)a1 withHandler:(id /* block */)a2;
- (void)verifyCredentialsForAccount:(id)a0 withHandler:(id /* block */)a1;
- (void)visibleTopLevelAccountsWithAccountTypeIdentifiers:(id)a0 completion:(id /* block */)a1;

@end

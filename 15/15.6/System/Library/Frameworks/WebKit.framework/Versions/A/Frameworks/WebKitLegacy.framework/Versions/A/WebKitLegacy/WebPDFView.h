@class NSString, PDFView, NSArray, WebDataSource;

@interface WebPDFView : NSView <PDFViewDelegate, WebDocumentView, WebDocumentSearching, WebDocumentIncrementalSearching, WebMultipleTextMatches, WebDocumentSelection, WebDocumentElement, WebDocumentPDF, _WebDocumentViewState, _WebDocumentZooming> {
    PDFView *PDFSubview;
    NSString *path;
    char firstResponderIsPDFDocumentView;
    char written;
    char _ignoreScaleAndDisplayModeAndPageNotifications;
    char _willUpdatePreferencesSoon;
    PDFView *PDFSubviewProxy;
    WebDataSource *dataSource;
    NSArray *textMatches;
    struct CGPoint { double x; double y; } lastScrollPosition;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)_PDFSelectionClass;
+ (Class)_PDFViewClass;
+ (id)PDFKitBundle;
+ (id)supportedMIMETypes;

- (void)dealloc;
- (id)string;
- (void)layout;
- (void)scrollLineDown:(id)a0;
- (void)setNeedsLayout:(char)a0;
- (void)setNextKeyView:(id)a0;
- (void)scrollPageDown:(id)a0;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(char)a0 visRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 isVisibleRect:(char)a1 rectIsVisibleRectForView:(id)a2 topView:(char)a3;
- (char)acceptsFirstResponder;
- (id)attributedString;
- (char)becomeFirstResponder;
- (void)centerSelectionInVisibleArea:(id)a0;
- (void)copy:(id)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)menuForEvent:(id)a0;
- (void)scrollLineUp:(id)a0;
- (void)scrollPageUp:(id)a0;
- (void)scrollToBeginningOfDocument:(id)a0;
- (void)scrollToEndOfDocument:(id)a0;
- (id)selectedString;
- (void)setDataSource:(id)a0;
- (char)validateUserInterfaceItem:(id)a0;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)a0;
- (void)setViewState:(id)a0;
- (id)viewState;
- (id)_path;
- (void)PDFViewSavePDFToDownloadFolder:(id)a0;
- (void)PDFViewPerformPrint:(id)a0;
- (id)elementAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_applyPDFDefaults;
- (char)markedTextMatchesAreHighlighted;
- (char)_canZoomIn;
- (char)_canZoomOut;
- (id)selectionImageForcingBlackText:(char)a0;
- (void)PDFViewWillClickOnLink:(id)a0 withURL:(id)a1;
- (id)PDFDocument;
- (void)PDFViewOpenPDFInNativeApplication:(id)a0;
- (void)_PDFDocumentViewMightHaveScrolled:(id)a0;
- (id)_PDFSubview;
- (char)_canLookUpInDictionary;
- (char)_canResetZoom;
- (id)_clipViewForPDFDocumentView;
- (void)setPDFDocument:(id)a0;
- (void)setScrollPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_fakeKeyEventWithFunctionKey:(unsigned short)a0;
- (void)_lookUpInDictionaryFromMenu:(id)a0;
- (id)_menuItemsFromPDFKitForEvent:(id)a0;
- (id)_nextMatchFor:(id)a0 direction:(char)a1 caseSensitive:(char)a2 wrap:(char)a3 fromSelection:(id)a4 startInSelection:(char)a5;
- (void)_openWithFinder:(id)a0;
- (char)_pointIsInSelection:(struct CGPoint { double x0; double x1; })a0;
- (void)_recursive:(char)a0 displayRectIgnoringOpacity:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inContext:(id)a2 topView:(char)a3;
- (void)_recursive:(char)a0 displayRectIgnoringOpacity:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inGraphicsContext:(id)a2 CGContext:(struct CGContext { } *)a3 topView:(char)a4 shouldChangeFontReferenceColor:(char)a5;
- (void)_resetZoom:(id)a0;
- (void)_scaleOrDisplayModeOrPageChanged:(id)a0;
- (id)_scaledAttributedString:(id)a0;
- (void)_setTextMatches:(id)a0;
- (id)_temporaryPDFDirectoryPath;
- (void)_trackFirstResponder;
- (void)_updatePreferences:(id)a0;
- (void)_updatePreferencesSoon;
- (id)_visiblePDFPages;
- (void)_zoomIn:(id)a0;
- (void)_zoomOut:(id)a0;
- (char)canPrintHeadersAndFooters;
- (unsigned long long)countMatchesForText:(id)a0 inDOMRange:(id)a1 options:(unsigned long long)a2 limit:(unsigned long long)a3 markMatches:(char)a4;
- (void)dataSourceUpdated:(id)a0;
- (void)deselectAll;
- (id)elementAtPoint:(struct CGPoint { double x0; double x1; })a0 allowShadowContent:(char)a1;
- (void)jumpToSelection:(id)a0;
- (id)pasteboardTypesForSelection;
- (id)printOperationWithPrintInfo:(id)a0;
- (id)rectsForTextMatches;
- (struct CGPoint { double x0; double x1; })scrollPoint;
- (char)searchFor:(id)a0 direction:(char)a1 caseSensitive:(char)a2 wrap:(char)a3;
- (char)searchFor:(id)a0 direction:(char)a1 caseSensitive:(char)a2 wrap:(char)a3 startInSelection:(char)a4;
- (void)selectAll;
- (id)selectedAttributedString;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionImageRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionRect;
- (id)selectionTextRects;
- (id)selectionView;
- (void)setMarkedTextMatchesAreHighlighted:(char)a0;
- (char)supportsTextEncoding;
- (void)takeFindStringFromSelection:(id)a0;
- (void)unmarkAllTextMatches;
- (char)validateUserInterfaceItemWithoutDelegate:(id)a0;
- (void)viewDidMoveToHostWindow;
- (void)viewWillMoveToHostWindow:(id)a0;
- (void)writeSelectionWithPasteboardTypes:(id)a0 toPasteboard:(id)a1;

@end

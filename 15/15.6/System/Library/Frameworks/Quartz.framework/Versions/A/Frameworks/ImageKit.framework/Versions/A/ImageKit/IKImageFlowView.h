@class NSOpenGLContext;

@interface IKImageFlowView : NSOpenGLView {
    id _dataSource;
    id _dragDestinationDelegate;
    id _delegate;
    void *_reserved;
    char _wasLayerBacked;
    NSOpenGLContext *_sharedOpenGLContext;
}

+ (void)initialize;
+ (id)pixelFormat;
+ (char)flowViewIsSupportedByCurrentHardware;
+ (void)setImportAnimationStyle:(unsigned long long)a0;

- (void)dealloc;
- (void)finalize;
- (id)delegate;
- (void)setDelegate:(id)a0;
- (void)setHidden:(char)a0;
- (id)valueForUndefinedKey:(id)a0;
- (float)offset;
- (id)pixelFormat;
- (void)setValue:(id)a0 forUndefinedKey:(id)a1;
- (id)backgroundColor;
- (void)draggedImage:(id)a0 endedAt:(struct CGPoint { double x0; double x1; })a1 operation:(unsigned long long)a2;
- (void)draggingExited:(id)a0;
- (id)_createLayer;
- (char)acceptsFirstMouse:(id)a0;
- (char)acceptsFirstResponder;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)a0;
- (id)accessibilityChildren;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (unsigned int)accessibilityIndexOfChild:(id)a0;
- (char)accessibilityIsAttributeSettable:(id)a0;
- (char)accessibilityIsIgnored;
- (char)becomeFirstResponder;
- (void)beginGestureWithEvent:(id)a0;
- (id)cellBackgroundColor;
- (Class)cellClass;
- (id)cells;
- (void)concludeDragOperation:(id)a0;
- (id)dataSource;
- (id)draggedImage;
- (void)draggingEnded:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (unsigned long long)draggingUpdated:(id)a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)endGestureWithEvent:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)invalidateLayout;
- (char)isAnimating;
- (char)isOpaque;
- (unsigned long long)itemsCount;
- (void)keyDown:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseDragged:(id)a0;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void)mouseUp:(id)a0;
- (id)openGLContext;
- (char)performDragOperation:(id)a0;
- (char)prepareForDragOperation:(id)a0;
- (id)previewPanel:(id)a0 transitionImageForPreviewItem:(id)a1 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (void)reloadData;
- (id)renderer;
- (void)renewGState;
- (void)resetCursorRects;
- (char)resignFirstResponder;
- (void)scrollWheel:(id)a0;
- (unsigned long long)selectedIndex;
- (void)setBackgroundColor:(id)a0;
- (void)setCellBackgroundColor:(id)a0;
- (void)setCellClass:(Class)a0;
- (void)setDataSource:(id)a0;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setOpenGLContext:(id)a0;
- (void)setSelectedIndex:(unsigned long long)a0;
- (char)shouldDelayWindowOrderingForEvent:(id)a0;
- (void)updateLayout;
- (void)updateTrackingAreas;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)a0;
- (char)wantsBestResolutionOpenGLSurface;
- (id)taskManager;
- (void)drawBackground;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titleFrame;
- (void)deleteSelection;
- (id)newCellForRepresentedItem:(id)a0;
- (void)setAnimationsMask:(unsigned int)a0;
- (void)_cacheDidPurge:(id)a0;
- (id)backgroundLayer;
- (id)cellBorderColor;
- (id)foregroundLayer;
- (void)frameDidChange:(id)a0;
- (void)initImportAnimationWithIndexes:(id)a0;
- (char)installViewport;
- (float)pageScrollValue;
- (void)startAutoscroll;
- (void)_adjustScroller;
- (id)_viewIdentifier;
- (char)handleDoubleClickOnCellAtIndex:(unsigned long long)a0;
- (void)inlinePreview:(id)a0 didChangeToState:(int)a1;
- (id)prepareThumbnailBuildersForCells:(id)a0 size:(int)a1 quality:(int)a2 skipPlaceHolders:(char)a3;
- (void)setDraggingDestinationDelegate:(id)a0;
- (void)__copyGLToCurrentFocusedView;
- (void)__copyPixels:(void *)a0 withSize:(struct CGSize { double x0; double x1; })a1 toCurrentFocusedViewAtPoint:(struct CGPoint { double x0; double x1; })a2 scaleFactor:(double)a3;
- (void)__ikSetupGLContext:(id)a0;
- (void)__performSynchronousTasksIfAnyInSecondaryThread:(id)a0 delegate:(id)a1;
- (char)__scrollerIsVisible;
- (void)_autoSelectCallback;
- (void)_cacheWillPurge:(id)a0;
- (void)_cancelSynchronousTask;
- (void)_cellFinishedImportAnimation:(id)a0;
- (void)_colorProfileDidChange;
- (double)_computeCameraDY;
- (double)_computeCameraDZ;
- (char)_containsCell:(id)a0;
- (void)_contextDidChange;
- (char)_convertColor:(id)a0 toRed:(float *)a1 green:(float *)a2 blue:(float *)a3 alpha:(float *)a4;
- (int)_countOfVisibleCellsOnEachSide;
- (char)_didComputeThumbnail:(id)a0;
- (void)_didImportAsynchronousThumbnail:(id)a0;
- (void)_didImportThumbnail:(id)a0;
- (void)_drawBluishBackgroundColor;
- (void)_drawCALayer:(id)a0 forceUpdateRect:(char)a1;
- (void)_drawCALayer:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 forceUpdateRect:(char)a2;
- (char)_freeTemporaryCacheStepWithVisibleIndexes:(id)a0;
- (void)_getFogColorForCell:(id)a0 reflection:(char)a1 red:(float *)a2 green:(float *)a3 blue:(float *)a4;
- (void)_ikCommonInit;
- (void)_ikSetNeedsDisplay;
- (char)_importThumbnails:(id)a0 state:(struct { unsigned long long x0; char x1; } *)a1;
- (void)_inlinePreviewLayerTreeDidChange;
- (void)_inlinePreviewRedisplay;
- (char)_needImport:(id)a0 forCellSize:(double)a1;
- (int)_prepareThumbnailBuildersForCells:(id)a0 size:(int)a1 start:(long long)a2 quality:(int)a3 skipPlaceHolders:(char)a4 arrayOut:(id)a5;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_rangeToPrefetch;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_reflectionFrame;
- (void)_reloadCellDataAtIndex:(unsigned long long)a0;
- (void)_scaleFactorDidChange:(id)a0;
- (id)_scrollerEventForEvent:(id)a0;
- (void)_scrollerPrefsDidChange;
- (void)_scrollingAnimationCallback;
- (void)_setBackgroundColorWithRed:(float)a0 green:(float)a1 blue:(float)a2 alpha:(float)a3;
- (void)_setDefaultTextAttributes;
- (char)_shouldProcessLongTasks;
- (void)_showOverlayIfNeeded;
- (void)_taskRedisplay;
- (char)_updateIndexAndDropOperationWithDrop:(id)a0;
- (void)_updateTasksCellsCopy;
- (double)_viewAspectRatio;
- (double)_zScreen;
- (void)abortFreeTemporaryCache;
- (void)abortImportVisibleCells;
- (void)abortNicestRendering;
- (void)abortPrefetchThumbnails;
- (double)alignOnPixelValue;
- (void)animateScrolling;
- (id)animationValueForKey:(id)a0 forCell:(id)a1;
- (unsigned int)animationsMask;
- (void)autoscrollCallBack;
- (char)autoscrollWithLocalPoint:(struct CGPoint { double x0; double x1; })a0;
- (char)backgroundIsBlack;
- (char)backgroundIsLight;
- (char)bluishFlavor;
- (char)bluishFlavorSupported;
- (void)caNeedsDisplay;
- (id)caRenderer;
- (id)cacheManager;
- (double)cameraDY;
- (double)cameraDZ;
- (unsigned long long)cellIndexAtLocation:(struct CGPoint { double x0; double x1; })a0;
- (unsigned long long)cellIndexAtMouseEvent:(id)a0;
- (int)cellIndexAtPosition:(float)a0;
- (double)cellMargin;
- (char)cellsAlignOnBaseline;
- (id)cellsArrayForTasks;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })clampedBounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })clampedFrame;
- (float)convert3DUnitToPixelUnit:(float)a0 z:(float)a1;
- (float)convertPixelUnitTo3DUnit:(float)a0;
- (char)copyDataToPasteboard:(id)a0;
- (int)countOfVisibleCellsOnEachSide;
- (void)dataSourceDidChange;
- (void)defaultDoubleClickAction:(int)a0;
- (char)delegatesImageManagementToDatasource;
- (char)didImportCell:(id)a0 thumbnail:(id)a1 visible:(char)a2;
- (void)didStabilize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })displayedImageFrame;
- (struct CGPoint { double x0; double x1; })dragStartPoint;
- (id)draggingDestinationDelegate;
- (void)drawBluishBackground;
- (void)drawBluishBackgroundColorInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawFocusRing;
- (void)drawInlinePreview;
- (void)drawOverlaysInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawTitle;
- (void)drawVisibleCells:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)drawWithCurrentRendererInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)dropOverCell;
- (void)flipCellsWithOldSelectedIndex:(unsigned long long)a0 newSelectedIndex:(unsigned long long)a1;
- (void)flowLayout:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (unsigned long long)focusedIndex;
- (float)fogAtLocation:(float)a0;
- (void *)fogShader;
- (id)freeTemporaryCacheProgress;
- (id)glRenderer;
- (int)heightOfInfoSpace;
- (char)hitTestWithImage:(id)a0 x:(float)a1 y:(float)a2;
- (double)imageAspectRatio;
- (id)imageFlowContext;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageFrameAtIndex:(unsigned long long)a0;
- (struct CGSize { double x0; double x1; })imageRenderedSize;
- (id)importVisibleCellsPriority;
- (unsigned long long)indexAtLocationOfDroppedItem;
- (long long)indexOfItemAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)initAppearingAnimationWithItems:(id)a0 diff:(id)a1;
- (void)initMovingAndDisappearingAnimationWithItems:(id)a0 diff:(id)a1;
- (void)initRenderingContext;
- (void)inlinePreview:(id)a0 didLoadPreviewItem:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })inlinePreview:(id)a0 frameForPreviewItem:(id)a1;
- (id)inlinePreviewController;
- (char)inlinePreviewEnabled;
- (char)inlinePreviewIsVisible;
- (id)inlinePreviewItemForCellAtIndex:(long long)a0;
- (char)inlinePreviewMouseDown:(id)a0;
- (void)inlinePreviewMouseEntered:(id)a0;
- (void)inlinePreviewMouseExited:(id)a0;
- (char)inlinePreviewShouldAlwaysHandleMultiClicks:(id)a0;
- (id)inlinePreviewView;
- (void)installPerspetive;
- (void)invalidateCameraPosition;
- (char)itemAtIndexIsLoaded:(unsigned long long)a0;
- (void)keyWindowChanged:(id)a0;
- (void)makeContextCurrent;
- (id)nicestRenderingDelay;
- (char)nicestRenderingExpendStep;
- (void)nicestRenderingLoop;
- (id)nicestRenderingPriority;
- (id)nicestRenderingProgress;
- (id)openGLContextCreateIfNeeded:(char)a0;
- (void)performSynchronousTasksIfAny;
- (id)prefetchThumbnailsDelay;
- (id)prefetchThumbnailsProgress;
- (id)prepareThumbnailBuilderForCell:(id)a0 size:(double)a1 quality:(int)a2;
- (id)previewImageAtIndex:(unsigned long long)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfVisibleIndexes;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfVisibleIndexesAtSelection;
- (void)registerTasks;
- (void)reloadAllCellsData;
- (void)reloadCellDataAtIndex:(unsigned long long)a0;
- (void)removeInlinePreview;
- (void)restartTasks;
- (char)scrollBy:(struct CGSize { double x0; double x1; })a0;
- (void)scrollerDidChange:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectedImageFrame;
- (void)setBackgroundLayer:(id)a0;
- (void)setBluishFlavor:(char)a0;
- (void)setBorderMask:(unsigned int)a0;
- (void)setCacheManager:(id)a0;
- (void)setCellBorderColor:(id)a0;
- (void)setCellsAlignOnBaseline:(char)a0;
- (void)setDelegatesImageManagementToDatasource:(char)a0;
- (void)setForegroundLayer:(id)a0;
- (void)setImageAspectRatio:(double)a0;
- (void)setImageFlowContext:(id)a0;
- (void)setInlinePreviewEnabled:(char)a0;
- (void)setIsDraggingOver:(char)a0;
- (void)setNextFrameTime:(double)a0;
- (void)setScrollerValueFromSelection;
- (void)setSharingPreviewPanel:(id)a0;
- (void)setShowSplitter:(char)a0;
- (void)setShowSubtitles:(char)a0;
- (void)setTrackingOfRequestingViewsEnabled:(char)a0;
- (void)setUpdatesCGSurfaceOnDrawRect:(char)a0;
- (void)setZoomOnSelectedLayer:(char)a0;
- (void)setupGLState;
- (void)setupInlinePreview;
- (id)sharingPreviewPanel;
- (char)shouldStartTaskNamed:(id)a0;
- (char)showScroller;
- (char)showSplitter;
- (char)showSubtitles;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })splitterFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })splitterTrackingRect;
- (void)startDragNDropWithEvent:(id)a0;
- (void)startFreeTemporaryCache;
- (void)startImportVisibleCells;
- (void)startInlinePreview;
- (void)startInlinePreviewWithReflectedLayer:(id)a0;
- (void)startNicestRendering;
- (void)startPrefetchThumbnails;
- (void)stopAutoscroll;
- (void)stopInlinePreview;
- (void)stopPlayingInlinePreview;
- (void)stopScrollingAnimation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })subtitleFrame;
- (void)switchOffCARenderer;
- (void)switchOnCARenderer;
- (void)switchOnCARenderer:(id)a0;
- (void)synchronousDisplayIfNeeded;
- (id)thumbnailImageAtIndex:(unsigned long long)a0;
- (char)trackingOfRequestingViewsEnabled;
- (void)unsetupInlinePreview;
- (void)updateInlinePreview;
- (void)updateInlinePreviewTrackingAreas;
- (void)updateLayoutInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (char)updatesCGSurfaceOnDrawRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })viewportRect;
- (id)visibleCellIndexes;
- (id)visibleCellIndexesAtSelection;
- (char)zoomOnSelectedLayer;
- (void)zoomOnSelectedLayerLayout:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;

@end

@class NSString, QCStreamManager, QCPatch;

@interface QCOpenCL : QCProgrammablePatch {
    NSString *_kernelName;
    struct __CFArray { } *_argumentInfos;
    struct __CFArray { } *_argumentCache;
    struct __CFArray { } *_resultInfos;
    struct __CFArray { } *_functions;
    struct __CFArray { } *_kernels;
    struct _cl_kernel { } *_kernel;
    struct _cl_program { } *_program;
    struct _cl_device_id { } *_device;
    struct _cl_device_id { } *_currentDevice;
    char _useBestDevice;
    char _useLocalKernel;
    char _automaticThreadDimensions;
    char _automaticOutputDimensions;
    char _customPixelFormat;
    char _zeroOutputs;
    unsigned long long _deviceIndex;
    unsigned long long _workGroupSize;
    QCStreamManager *_manager;
    QCPatch *_rootPatch;
    id _ui;
    unsigned long long _saveGlobalSize[3];
    unsigned long long _saveLocalSize[3];
    NSString *_saveResultInfoString;
    char _sample;
    double _sampleTime;
    char _settingsVisible;
}

@property unsigned long long selectedKernel;

+ (void)initialize;
+ (char)isSafe;
+ (char)allowsSubpatchesWithIdentifier:(id)a0;
+ (void)addPatch:(id)a0 forComposition:(id)a1;
+ (id)compileStatusForComposition:(id)a0;
+ (struct _cl_context { } *)deviceForComposition:(id)a0;
+ (struct __CFArray { } *)functionNamesForComposition:(id)a0;
+ (int)indicesType;
+ (Class)inspectorClassWithIdentifier:(id)a0;
+ (id)kernelNamesForComposition:(id)a0;
+ (id)parseFunctionsForComposition:(id)a0;
+ (struct _cl_program { } *)programForComposition:(id)a0;
+ (void)releaseCompositions:(id)a0;
+ (void)removePatch:(id)a0 forComposition:(id)a1;
+ (void)setDevice:(struct _cl_context { } *)a0 forComposition:(id)a1;
+ (void)setProgram:(struct _cl_program { } *)a0 forComposition:(id)a1;
+ (void)setSource:(id)a0 forComposition:(id)a1;
+ (id)sourceForComposition:(id)a0;
+ (id)sourceTypes;
+ (id)stateKeysWithIdentifier:(id)a0;
+ (unsigned long long)stateVersionWithIdentifier:(id)a0;

- (void)dealloc;
- (void)finalize;
- (id)state;
- (id)initWithIdentifier:(id)a0;
- (char)setState:(id)a0;
- (void)setDeviceIndex:(unsigned long long)a0;
- (char)setup:(id)a0;
- (id)_compileKernel:(id)a0;
- (void)_computeKernelDimensions:(struct __CFArray { } *)a0 kernelExecutionInfo:(struct _KernelExecutionInfo { unsigned int x0[3]; unsigned int x1[3]; unsigned int x2[40]; } *)a1 globalDim:(unsigned long long *)a2 globalDimCount:(unsigned long long *)a3 localDim:(unsigned long long *)a4 localDimCount:(unsigned long long *)a5;
- (void)_setUI:(id)a0;
- (id)_compileGlobalKernel:(id)a0;
- (struct __CFArray { } *)_executeKernel:(struct __CFArray { } *)a0 context:(id)a1 kernelExecutionInfo:(struct _KernelExecutionInfo { unsigned int x0[3]; unsigned int x1[3]; unsigned int x2[40]; } *)a2;
- (id)_functionNames;
- (void)_initRootPatch;
- (id)_kernelNames;
- (unsigned long long)_lineOfFunction:(unsigned long long)a0;
- (void)_parseFunctionsAndKernels:(id)a0;
- (id)_parseKernel:(id)a0 kernelName:(id)a1;
- (void)_setGlobalSize:(unsigned long long *)a0 count:(unsigned long long)a1;
- (void)_setLocalSize:(unsigned long long *)a0 count:(unsigned long long)a1;
- (id)_setSelectedKernel:(unsigned long long)a0 source:(id)a1;
- (char)_updateDevice;
- (void)_updateInputArguments;
- (void)_updateOutputArguments:(struct __CFArray { } *)a0;
- (id)attributesForParameterPortWithInfo:(id)a0 name:(id)a1 index:(unsigned long long)a2;
- (void)cleanup:(id)a0;
- (id)compileSourceOfType:(id)a0;
- (id)computeDeviceString;
- (id)createInputWithPortClass:(Class)a0 forKey:(id)a1 attributes:(id)a2 arguments:(id)a3 order:(unsigned long long)a4;
- (char)execute:(id)a0 time:(double)a1 arguments:(id)a2;
- (void)finalize_QCOpenCL;
- (id)globalWorkSizeString;
- (id)inputArgumentsInfoString;
- (id)localWorkSizeString;
- (id)outputArgumentsInfoString;
- (id)sampleString;
- (id)serializedValueForStateKey:(id)a0;
- (void)setAutomaticOutputDimensions:(char)a0;
- (void)setAutomaticThreadDimensions:(char)a0;
- (void)setComputeDeviceString:(id)a0;
- (void)setCustomPixelFormat:(char)a0;
- (void)setGlobalWorkSizeString:(id)a0;
- (void)setInputArgumentsInfoString:(id)a0;
- (void)setLocalWorkSizeString:(id)a0;
- (void)setOutputArgumentsInfoString:(id)a0;
- (void)setSampleKernel:(char)a0;
- (void)setSampleString:(id)a0;
- (void)setSelectedKernel:(unsigned long long)a0;
- (void)setUseBestDevice:(char)a0;
- (void)setUseLocalKernel:(char)a0;

@end

@class NSString, NSColor, CIFilter;

@interface IKImageView : NSView {
    void *_privateData;
}

@property id delegate;
@property double zoomFactor;
@property double rotationAngle;
@property (copy) NSString *currentToolMode;
@property char autoresizes;
@property char hasHorizontalScroller;
@property char hasVerticalScroller;
@property char autohidesScrollers;
@property char supportsDragAndDrop;
@property char editable;
@property char doubleClickOpensImageEditPanel;
@property CIFilter *imageCorrection;
@property NSColor *backgroundColor;

+ (void)initialize;
+ (struct CGImage { } *)imageFromCGImage:(struct CGImage { } *)a0 imageProperties:(id)a1 imageState:(id)a2 options:(id)a3;
+ (struct CGImage { } *)imageFromURL:(id)a0 imageState:(id)a1 options:(id)a2;

- (void)dealloc;
- (void)finalize;
- (void)forwardInvocation:(id)a0;
- (id)methodSignatureForSelector:(SEL)a0;
- (char)respondsToSelector:(SEL)a0;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setImage:(id)a0;
- (struct CGImage { } *)image;
- (void)dump;
- (void)draggingExited:(id)a0;
- (id)exposedBindings;
- (void)setUserInterfaceItemIdentifier:(id)a0;
- (void)_finishedMakingConnections;
- (char)acceptsFirstResponder;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustScroll:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)animates;
- (int)annotationType;
- (char)becomeFirstResponder;
- (void)changeColor:(id)a0;
- (void)changeFont:(id)a0;
- (void)commonInit;
- (void)concludeDragOperation:(id)a0;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 fromView:(id)a1;
- (void)copy:(id)a0;
- (void)cut:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)enclosingScrollView;
- (void)flagsChanged:(id)a0;
- (struct CGSize { double x0; double x1; })imageSize;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)invalidateCursorRects;
- (char)isFlipped;
- (char)isOpaque;
- (void)keyDown:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseDragged:(id)a0;
- (void)mouseUp:(id)a0;
- (void)paste:(id)a0;
- (char)performDragOperation:(id)a0;
- (char)performKeyEquivalent:(id)a0;
- (void)removeFromSuperview;
- (void)removeLayer:(id)a0;
- (void)resetCursorRects;
- (char)resignFirstResponder;
- (void)rotateWithEvent:(id)a0;
- (void)scrollToPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)selectAll:(id)a0;
- (void)setAnimates:(char)a0;
- (void)setAnnotationType:(int)a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setImageAlignment:(unsigned long long)a0;
- (void)setImageFrameStyle:(unsigned long long)a0;
- (void)setImageScaling:(unsigned long long)a0;
- (void)setLayer:(id)a0;
- (void)setNeedsDisplay:(char)a0;
- (void)setRotation:(id)a0;
- (char)validateMenuItem:(id)a0;
- (Class)valueClassForBinding:(id)a0;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)a0;
- (void)scrollToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)imageProperties;
- (id)imageURL;
- (id)composer;
- (void)zoomIn:(id)a0;
- (void)zoomOut:(id)a0;
- (char)embedded;
- (void)setEmbedded:(char)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectionRect;
- (void)rotateImageLeft:(id)a0;
- (void)rotateImageRight:(id)a0;
- (void)updateBackgroundColor;
- (id)backgroundLayer;
- (void)closeInspector:(id)a0;
- (void)setFilterArray:(id)a0;
- (void)zoomImageToFit:(id)a0;
- (struct CGImage { } *)createThumbnailWithMaximumSize:(struct CGSize { double x0; double x1; })a0;
- (void)debugLayerTree:(id)a0;
- (id)overlayForType:(id)a0;
- (void)preZoom;
- (void)setFilterChain:(id)a0;
- (void)setImageZoomFactor:(double)a0 centerPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_didInitWithCoder;
- (void)_didInitWithCoder:(id)a0;
- (void)_willInitWithCoder;
- (void)addLayer:(id)a0 linkedTo:(id)a1;
- (void)autoResizeToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)centerImage;
- (void)connectToBackgroundLayer;
- (struct CGPoint { double x0; double x1; })convertImagePointToViewPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertImageRectToViewRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGPoint { double x0; double x1; })convertViewPointToImagePoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertViewRectToImageRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGImage { } *)createThumbnailOfSize:(unsigned long long)a0;
- (void)crop:(id)a0;
- (void)dumpLayer:(id)a0 prefix:(id)a1;
- (void)dumpLayer:(id)a0 prefix:(id)a1 verbose:(char)a2;
- (void)filter:(id)a0 setValue:(id)a1 forKey:(id)a2;
- (id)filter:(id)a0 valueForKey:(id)a1;
- (void)filterAdded:(id)a0 filterChain:(id)a1;
- (id)filterArray;
- (id)filterChain;
- (void)filterChainChanged:(id)a0;
- (void)filterRemoved:(id)a0 filterChain:(id)a1;
- (void)flipImageHorizontal:(id)a0;
- (void)flipImageVertical:(id)a0;
- (void)handleViewDidMoveToSuperView;
- (void)ibSetSampleURL;
- (id)imageLayer;
- (void)imageState:(id *)a0 image:(struct CGImage **)a1 options:(id)a2;
- (struct CGImage { } *)imageWithOptions:(id)a0;
- (id)layerOfType:(id)a0;
- (void)postZoom;
- (char)registerLayer:(id)a0;
- (void)saveScrollInfo:(struct CGSize { double x0; double x1; })a0 scaling:(struct CGPoint { double x0; double x1; })a1;
- (void)selectionRectAdded;
- (void)selectionRectDidChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)selectionRectRemoved;
- (void)setCIImage:(id)a0 imageProperties:(id)a1;
- (void)setImage:(struct CGImage { } *)a0 imageProperties:(id)a1;
- (void)setImage:(struct CGImage { } *)a0 imageProperties:(id)a1 imageState:(id)a2;
- (void)setImage:(struct CGImage { } *)a0 imageProperties:(id)a1 imageState:(id)a2 options:(id)a3;
- (void)setImage:(struct CGImage { } *)a0 imageProperties:(id)a1 options:(id)a2;
- (void)setImageWithCGImageSource:(struct CGImageSource { } *)a0;
- (void)setImageWithCGImageSource:(struct CGImageSource { } *)a0 imageProperties:(id)a1 options:(id)a2;
- (void)setImageWithData:(id)a0;
- (void)setImageWithData:(id)a0 imageProperties:(id)a1 options:(id)a2;
- (void)setImageWithURL:(id)a0;
- (void)setImageWithURL:(id)a0 imageState:(id)a1;
- (void)setImageWithURL:(id)a0 imageState:(id)a1 options:(id)a2;
- (void)setNSImage:(id)a0 imageProperties:(id)a1;
- (void)setOverlay:(id)a0 forType:(id)a1;
- (void)setReuseImageLayer:(char)a0;
- (void)setRotationAngle:(double)a0 centerPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)setSelectionRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setValueURL:(id)a0;
- (void)showInspector:(id)a0;
- (void)turnoffAutoresizes;
- (void)updateImageEditPanelIfNeeded;
- (id)valueURL;
- (void)writeImageAtIndex:(unsigned long long)a0 toFile:(id)a1 options:(id)a2;
- (void)zoomImageToActualSize:(id)a0;
- (void)zoomImageToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;

@end

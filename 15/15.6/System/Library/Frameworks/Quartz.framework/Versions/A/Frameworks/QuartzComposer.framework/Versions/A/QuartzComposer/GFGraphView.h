@class GFList, GFPort, GFNode, NSUndoManager, NSTrackingArea, GFConnection, NSMutableDictionary, NSColor, GFGraph, GFGraphEditorView;

@interface GFGraphView : NSView {
    GFGraph *_graph;
    GFNode *_firstResponder;
    char _drawsBackground;
    char _drawsShadows;
    unsigned long long _gridStep;
    NSColor *_backgroundColor;
    NSColor *_gridColor;
    double _tooltipDelay;
    char _spaceDown;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _selectionBounds;
    GFPort *_connectionPort;
    struct CGPoint { double x; double y; } _connectionStart;
    struct CGPoint { double x; double y; } _connectionEnd;
    GFConnection *_connection;
    struct __CFRunLoopTimer { } *_tooltipTimer;
    char _tooltipPending;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _tooltipBounds;
    GFNode *_tooltipNode;
    NSMutableDictionary *_alignment;
    GFList *_nodeActorCache;
    GFGraphEditorView *_graphEditor;
    NSUndoManager *_undoManager;
    char _disableValidation;
    struct CGPoint { double x; double y; } _cachedCenter;
    float _cachedZoomFactor;
    NSTrackingArea *_trackingArea;
    void *_unused[1];
}

+ (id)_noteAttributes;

- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)backgroundColor;
- (char)drawsBackground;
- (char)knowsPageRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a0;
- (void)otherMouseDown:(id)a0;
- (void)rightMouseDown:(id)a0;
- (void)swipeWithEvent:(id)a0;
- (void)delete:(id)a0;
- (char)_deselectAll;
- (void)_finishInitialization;
- (char)acceptsFirstMouse:(id)a0;
- (char)acceptsFirstResponder;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustScroll:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)autoscroll:(id)a0;
- (char)becomeFirstResponder;
- (void)copy:(id)a0;
- (void)cut:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (unsigned long long)draggingUpdated:(id)a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)gridColor;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)isFlipped;
- (char)isOpaque;
- (void)keyDown:(id)a0;
- (void)keyUp:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (id)menuForEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseMoved:(id)a0;
- (void)paste:(id)a0;
- (char)performDragOperation:(id)a0;
- (char)performKeyEquivalent:(id)a0;
- (void)print:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForPage:(long long)a0;
- (void)redo:(id)a0;
- (void)removeFromSuperview;
- (char)resignFirstResponder;
- (void)scrollWheel:(id)a0;
- (void)selectAll:(id)a0;
- (void)setBackgroundColor:(id)a0;
- (void)setBoundsOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)setBoundsSize:(struct CGSize { double x0; double x1; })a0;
- (void)setDrawsBackground:(char)a0;
- (void)setGridColor:(id)a0;
- (void)undo:(id)a0;
- (void)updateTrackingAreas;
- (char)validateMenuItem:(id)a0;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)a0;
- (id)graph;
- (void)setGraph:(id)a0;
- (struct CGPoint { double x0; double x1; })_centerPoint;
- (char)handleKeyDown:(id)a0;
- (char)handleKeyUp:(id)a0;
- (void)duplicate:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForNode:(id)a0;
- (void)_setZoomFactor:(float)a0;
- (void)drawBackground:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)__frameChanged:(id)a0;
- (void)_zoomToFitRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)__layoutUpdated:(id)a0;
- (void)__removeFromSelection:(id)a0 context:(void *)a1;
- (void)__restorePosition:(id)a0 context:(void *)a1;
- (void)__savePosition:(id)a0 context:(void *)a1;
- (void)__select:(id)a0 context:(void *)a1;
- (char)__selectionFilter:(id)a0;
- (void)__undoableMove:(id)a0 context:(void *)a1;
- (void)__windowKey:(id)a0;
- (char)_addNode:(id)a0 atPosition:(struct CGPoint { double x0; double x1; })a1;
- (void)_adjustFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsForSelection;
- (id)_colorForConnection:(id)a0;
- (id)_createSubgraphFromSelection:(id)a0;
- (void)__move:(id)a0 context:(void *)a1;
- (void)__stateUpdated:(id)a0;
- (void)_cacheZoomState;
- (void)__addToSelection:(id)a0 context:(void *)a1;
- (void)__delete:(id)a0 context:(void *)a1;
- (void)__deselect:(id)a0 context:(void *)a1;
- (void)__restoreSelection:(id)a0 context:(void *)a1;
- (void)__saveSelection:(id)a0 context:(void *)a1;
- (void)__unionRect:(id)a0 context:(void *)a1;
- (void)__validatePosition:(id)a0 context:(void *)a1;
- (void)_addNote:(id)a0;
- (id)_createSubgraphFromSelection:(id)a0 withMacroType:(Class)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titlebarBoundsForNote:(id)a0 inBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_deleteNote:(id)a0;
- (void)_drawConnection:(id)a0 fromPort:(id)a1 point:(struct CGPoint { double x0; double x1; })a2 toPoint:(struct CGPoint { double x0; double x1; })a3;
- (void)_drawGraph:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 selectionRingColor:(id)a1 selectionRingWidth:(double)a2 nodeCount:(unsigned long long)a3 nodeList:(id *)a4 connectionCount:(unsigned long long)a5 connectionList:(id *)a6;
- (void)_drawNode:(id)a0 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_drawSelectionRingWithColor:(id)a0 width:(double)a1 forNode:(id)a2 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3;
- (char)_editNode:(id)a0;
- (void)_editNote:(id)a0;
- (void)_editNoteAtIndex:(unsigned long long)a0;
- (void)_editParentGraph:(id)a0;
- (id)_firstResponderNode;
- (id)_graphEditor;
- (char)_handleKeyDown:(id)a0 inNode:(id)a1;
- (char)_handleKeyUp:(id)a0 inNode:(id)a1;
- (void)_hideTooltip;
- (id)_imageForSelection;
- (id)_menuForNode:(id)a0;
- (id)_menuForNote:(unsigned long long)a0;
- (char)_nodeAcceptsFirstResponder:(id)a0;
- (id)_nodeAtPosition:(struct CGPoint { double x0; double x1; })a0 outBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (char)_nodeBecomesFirstResponder:(id)a0;
- (char)_nodeResignsFirstResponder:(id)a0;
- (struct CGPoint { double x0; double x1; })_pastePoint;
- (unsigned long long)_performActionOnAllNodes:(SEL)a0 context:(void *)a1;
- (unsigned long long)_performActionOnNodes:(SEL)a0 context:(void *)a1 selectedOnly:(char)a2;
- (unsigned long long)_performActionOnSelectedNodes:(SEL)a0 context:(void *)a1;
- (struct CGPoint { double x0; double x1; })_pointForPort:(id)a0 inNode:(id)a1 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (id)_portForPoint:(struct CGPoint { double x0; double x1; })a0 inNode:(id)a1 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)_printWithInfo:(id)a0 showingPrintPanel:(char)a1;
- (void)_readSelectionFromPasteboard:(id)a0 toPoint:(struct CGPoint { double x0; double x1; })a1;
- (char)_readSelectionFromState:(id)a0 toPoint:(struct CGPoint { double x0; double x1; })a1;
- (char)_readSelectionFromUnarchiver:(id)a0 toPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_restoreZoomState;
- (void)_setCenterPoint:(struct CGPoint { double x0; double x1; })a0;
- (char)_setFirstResponderNode:(id)a0;
- (void)_setGraphEditor:(id)a0;
- (void)_setNoteColor:(id)a0;
- (void)_setUndoManager:(id)a0;
- (void)_setZoomFactor:(float)a0 centerPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_showTooltip;
- (struct CGSize { double x0; double x1; })_sizeForNode:(id)a0;
- (void)_startTooltips;
- (void)_stopTooltips;
- (char)_trackMouse:(id)a0 inNode:(id)a1 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (id)_trackedConnection;
- (void)_updateTooltipsForMouseLocation:(struct CGPoint { double x0; double x1; })a0;
- (void)_validateNodePosition:(id)a0;
- (void)_validateNodePositions;
- (void)_writeSelectionToArchiver:(id)a0 fromPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_writeSelectionToPasteboard:(id)a0 fromPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_writeSelectionToState:(id)a0 fromPoint:(struct CGPoint { double x0; double x1; })a1;
- (float)_zoomFactor;
- (void)_zoomToFitAll;
- (void)_zoomToFitSelection;
- (void)_zoomWithSpeedFactor:(float)a0;
- (char)alignNodes;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForConnection:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForConnection:(id)a0 fromPoint:(struct CGPoint { double x0; double x1; })a1 toPoint:(struct CGPoint { double x0; double x1; })a2;
- (void)drawConnection:(id)a0 fromPoint:(struct CGPoint { double x0; double x1; })a1 toPoint:(struct CGPoint { double x0; double x1; })a2;
- (void)drawNote:(id)a0 inBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 withColor:(id)a2;
- (void)drawSelectionArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)drawsShadows;
- (unsigned long long)gridStep;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maxBounds;
- (id)menuForGraph;
- (id)nodeActorForNode:(id)a0;
- (void)noteContentChanged;
- (void)resetInspectorViews;
- (void)resetTooltipView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })resizeBoundsForNote:(id)a0 inBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)setAlignNodes:(char)a0;
- (void)setDrawsShadows:(char)a0;
- (void)setGridStep:(unsigned long long)a0;
- (void)setNeedsDisplayForNode:(id)a0;
- (void)setTooltipDelay:(double)a0;
- (id)setupInspectorViews;
- (id)setupTooltipViewForPoint:(struct CGPoint { double x0; double x1; })a0 tooltipBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (double)tooltipDelay;
- (id)tooltipStringForPoint:(struct CGPoint { double x0; double x1; })a0 tooltipBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (char)trackConnection:(id)a0 fromPort:(id)a1 atPoint:(struct CGPoint { double x0; double x1; })a2;
- (char)trackMouse:(id)a0;

@end

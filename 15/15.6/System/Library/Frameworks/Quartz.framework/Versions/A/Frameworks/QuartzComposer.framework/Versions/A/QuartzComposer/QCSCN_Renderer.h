@class QCSCN_Node, QCSCN_Scene, NSString;
@protocol QCSCN_SceneRendererDelegate;

@interface QCSCN_Renderer : NSObject <QCSCN_SceneRenderer> {
    id _reserved;
}

@property (retain) id cameraModifier;
@property (retain, nonatomic) QCSCN_Scene *scene;
@property (nonatomic) double currentTime;
@property (nonatomic) id<QCSCN_SceneRendererDelegate> delegate;
@property (getter=isPlaying) char playing;
@property (nonatomic) char loops;
@property (retain, nonatomic) QCSCN_Node *pointOfView;
@property (nonatomic) char autoenablesDefaultLighting;
@property (nonatomic, getter=isJitteringEnabled) char jitteringEnabled;
@property (readonly, nonatomic) void *context;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)propertyKeys;
+ (char)isKeyExcludedFromWebScript:(const char *)a0;
+ (char)isSelectorExcludedFromWebScript:(SEL)a0;
+ (int)_baseTypeForProperty:(id)a0;
+ (id)rendererWithContext:(void *)a0 options:(id)a1;
+ (Class)typeForProperty:(id)a0;

- (void)dealloc;
- (id)init;
- (void)lock;
- (void)setContext:(void *)a0;
- (void)unlock;
- (id)initWithOptions:(id)a0;
- (void)pause;
- (struct _CGLPixelFormatObject { } *)pixelFormat;
- (void)stop;
- (id)backgroundColor;
- (void)play;
- (void)setBackgroundColor:(id)a0;
- (void)stop:(id)a0;
- (double)nextFrameTime;
- (void)render;
- (struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __C3DEngineContext *x2; void *x3; } *)engine;
- (void)setEngine:(struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __C3DEngineContext *x2; void *x3; } *)a0;
- (void)pause:(id)a0;
- (id)propertyKeys;
- (struct C3DColor4 { union { float x0[4]; struct { float x0; float x1; float x2; float x3; } x1; } x0; } *)backgroundColorComponents;
- (void)play:(id)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 options:(id)a1;
- (void)setNextFrameTime:(double)a0;
- (void)_detachTexture:(id)a0;
- (void)evaluateAnimationsAtSystemTime:(double)a0;
- (char)warmUpResourcesWhenLoadingScene;
- (void)_attachTexture:(id)a0;
- (void *)__CFObject;
- (void)didRenderScene:(id)a0;
- (void)_attachShader:(id)a0;
- (void)sceneWillChange;
- (void)_commonInitWithOptions:(id)a0;
- (void)_detachShader:(id)a0;
- (void)_engineDidChange:(struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __C3DEngineContext *x2; void *x3; } *)a0;
- (void)_engineWillChange:(struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __C3DEngineContext *x2; void *x3; } *)a0;
- (void)_setCurrentTime:(double)a0;
- (void)_setScene:(id)a0;
- (void)_setupCallbacks:(struct __C3DEngineAdaptor { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; void *x1; struct __C3DEngineContext *x2; void *x3; } *)a0;
- (char)autoAdjustCamera;
- (struct CGImage { } *)copySnapshotWithSize:(struct CGSize { double x0; double x1; })a0;
- (void)drawInGLContext:(void *)a0;
- (char)enableDefaultLight;
- (struct __C3DEngineContext { struct __CFRuntimeBase { unsigned long long x0; _Atomic unsigned long long x1; } x0; struct __C3DScene *x1; struct __C3DNode *x2; struct __C3DNode *x3; struct { void /* function */ *x0; void /* function */ *x1; } x4; void *x5; struct __C3DRendererContext *x6; struct __C3DFXContext *x7; BOOL x8; struct __C3DCommonProfileProgramTree *x9; struct __CFDictionary *x10; struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x11; struct __CFDictionary *x12; struct __C3DObjectPool *x13; struct __CFDictionary *x14; struct __CFArray *x15; double x16; } *)engineContext;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 viewport:(struct CGSize { double x0; double x1; })a1 options:(id)a2;
- (id)initOffscreenRendererWithSize:(struct CGSize { double x0; double x1; })a0;
- (id)initOffscreenRendererWithSize:(struct CGSize { double x0; double x1; })a0 options:(id)a1;
- (id)initPublicWithOptions:(id)a0;
- (void)initializeOffscreenWithSize:(struct CGSize { double x0; double x1; })a0 options:(id)a1;
- (char)jitteringEnabled;
- (struct CGSize { double x0; double x1; })offscreenBufferSize;
- (void)renderNode:(id)a0 options:(id)a1;
- (void)sceneDidChange;
- (id)scnContext;
- (void)setAutoAdjustCamera:(char)a0;
- (void)setEnableDefaultLight:(char)a0;
- (void)setWarmUpResourcesWhenLoadingScene:(char)a0;
- (void)updateCurrentTimeWithSystemTime:(double)a0;
- (char)warmUpScene:(id)a0 abortHandler:(id /* block */)a1;
- (void)willRenderScene:(id)a0;

@end

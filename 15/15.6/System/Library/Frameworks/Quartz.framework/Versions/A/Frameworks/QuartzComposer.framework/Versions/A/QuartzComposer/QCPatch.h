@class QCRenderingManager, QCPatchRenderingInfo, QCRenderState, QCNumberPort, QCBooleanPort;

@interface QCPatch : GFGraph {
    QCPatchRenderingInfo *_renderingInfo;
    QCRenderState *_renderState;
    int _executionMode;
    QCRenderingManager *_renderingManager;
    struct _QCPatchExecutionInfo { double x0; unsigned long long x1; double x2; double x3; id x4; char x5; char x6; } *_executionInfo;
    unsigned long long _executionFlags;
    int _timebase;
    QCBooleanPort *_enableInput;
    QCNumberPort *_timeInput;
    char _enabled;
    unsigned long long _activeCount;
    void *_observationInfo;
    id _proExtension;
    double _unused31[2];
    unsigned long long _unused32[1];
}

+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (void)initialize;
+ (char)automaticallyNotifiesObserversForKey:(id)a0;
+ (char)isSafe;
+ (Class)connectionClass;
+ (char)allowsSubpatchesWithIdentifier:(id)a0;
+ (char)getMatrixFrom:(id)a0 toPatch:(id)a1 matrix:(double *)a2 ignoreWithin:(id)a3 includeFromTransform:(BOOL)a4;
+ (id)inspectorNibNameWithIdentifier:(id)a0;
+ (id)inspectorNibNameWithIdentifier:(id)a0;
+ (id)_keyFromName:(id)a0;
+ (Class)_listClass;
+ (id)_privateAttributesWithIdentifier:(id)a0;
+ (id)_publicAttributesWithIdentifier:(id)a0;
+ (Class)baseClass;
+ (id)cachedStateArrays;
+ (char)canInstantiateWithFile:(id)a0;
+ (id)createPatchWithName:(id)a0;
+ (int)executionModeWithIdentifier:(id)a0;
+ (Class)inspectorClassWithIdentifier:(id)a0;
+ (Class)inspectorClassWithIdentifier:(id)a0;
+ (id)instantiateWithFile:(id)a0;
+ (void)loadPlugInAtPath:(id)a0;
+ (void)loadPlugInsInFolder:(id)a0;
+ (void)loadPlugInsInLibrary:(id)a0;
+ (Class)nodeClassDescriptionClass;
+ (id)patchAttributesWithName:(id)a0;
+ (id)patchManager;
+ (id)patchNames;
+ (id)patchWithName:(id)a0;
+ (Class)proxyPortClass;
+ (void)registerPatch:(id)a0 withName:(id)a1;
+ (id)serializedStateKeysWithIdentifier:(id)a0;
+ (char)setShouldLoadAttributes:(char)a0;
+ (char)shouldLoadAttributes;
+ (id)stateArrays;
+ (id)stateKeysWithIdentifier:(id)a0;
+ (char)supportsOptimizedExecutionForIdentifier:(id)a0;
+ (int)timeModeWithIdentifier:(id)a0;
+ (char)usesLocalContextForIdentifier:(id)a0;
+ (id)validateResourceURL:(id)a0 withOptions:(id)a1;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void)finalize;
- (void)_activate;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setObservationInfo:(void *)a0;
- (void)setValue:(id)a0 forKey:(id)a1;
- (id)state;
- (id)initWithIdentifier:(id)a0;
- (char)setState:(id)a0;
- (id)valueForKey:(id)a0;
- (void *)observationInfo;
- (void)setNilValueForKey:(id)a0;
- (void)suspendExecution;
- (void)_enable;
- (void)_cleanup;
- (void)_disable;
- (char)_enabled;
- (id)selectedNodes;
- (id)outputs;
- (id)inputs;
- (void)_deactivate;
- (int)timebase;
- (id)performanceCounters;
- (char)setup:(id)a0;
- (int)_executionFlags;
- (void)_resetExecution;
- (char)__execute:(double)a0 arguments:(id)a1;
- (char)checkForGLError;
- (void)endLocalContext;
- (id)findSubpatchesWithName:(id)a0 options:(unsigned long long)a1;
- (id)keyForSubpatch:(id)a0;
- (id)_baseKey;
- (char)patchIsInMacro:(id)a0;
- (int)_checkExecutionMode;
- (void)resumeRendering;
- (void)setSerializedValue:(id)a0 forStateKey:(id)a1;
- (char)__isPatchInUse:(id)a0;
- (void)_QCArrayResetSize:(id)a0 newSize:(unsigned long long)a1;
- (char)addNode:(id)a0 forKey:(id)a1;
- (char)canAddSubpatch:(id)a0;
- (char)canPublishPort:(id)a0;
- (void)__setValue:(id)a0 forPortKey:(id)a1;
- (void)enable:(id)a0;
- (unsigned long long)_activeCount;
- (void)receiveMessage:(id)a0 name:(id)a1 attributes:(id)a2;
- (void)removeSubpatch:(id)a0;
- (void)resumeExecution;
- (id)safeURLFromURL:(id)a0;
- (id)subpatchForKey:(id)a0;
- (void)updateTimebase:(int)a0;
- (void)_drawDirtyRect;
- (id)_enableInput;
- (char)_execute:(double)a0 arguments:(id)a1;
- (char)_executeSubpatches:(double)a0 arguments:(id)a1;
- (int)_executionMode;
- (void)_forwardRenderingFlag;
- (void)_invalidateDodForSubpatches;
- (void)_invalidateExecutionMode;
- (void)_invalidateTimeMode;
- (void)_logMessage:(id)a0;
- (double)_nextExecutionTime;
- (double)_nextExecutionTime:(double)a0 arguments:(id)a1;
- (char)_renderAtTime:(double)a0 arguments:(id)a1;
- (id)_renderState;
- (id)_renderingInfo;
- (void)_resetExecutionFlags;
- (void)_setIndex:(id)a0 forPort:(id)a1;
- (void)_setKey:(id)a0 forPort:(id)a1;
- (char)_setup:(id)a0 state:(id)a1;
- (void)abortExecution;
- (char)addSubpatch:(id)a0;
- (void)applyFunctionOnSubpatches:(void /* function */ *)a0 context:(void *)a1 recursive:(char)a2;
- (char)beginLocalContext;
- (char)boolForStateKey:(id)a0;
- (char)canAddNode:(id)a0;
- (char)canCreateConnectionFromPort:(id)a0 toPort:(id)a1;
- (void)cleanup:(id)a0;
- (id)consumerSubpatches;
- (id)createConnectionFromPort:(id)a0 toPort:(id)a1 forKey:(id)a2;
- (id)createInputPortWithArguments:(id)a0 forKey:(id)a1;
- (id)createInputWithPortClass:(Class)a0 forKey:(id)a1 attributes:(id)a2;
- (id)createInputWithPortClass:(Class)a0 forKey:(id)a1 attributes:(id)a2 arguments:(id)a3 order:(unsigned long long)a4;
- (id)createOutputPortWithArguments:(id)a0 forKey:(id)a1;
- (id)createOutputWithPortClass:(Class)a0 forKey:(id)a1 attributes:(id)a2;
- (id)createOutputWithPortClass:(Class)a0 forKey:(id)a1 attributes:(id)a2 arguments:(id)a3 order:(unsigned long long)a4;
- (id)createProxyPortWithOriginalPort:(id)a0 forKey:(id)a1;
- (id)customInputPorts;
- (id)customInputPorts;
- (id)customOutputPorts;
- (id)customOutputPorts;
- (id)dataWithContentsOfURL:(id)a0 error:(id *)a1;
- (char)debuggingMode;
- (void)deleteConnectionForKey:(id)a0;
- (void)deleteInputForKey:(id)a0;
- (void)deleteInputPortForKey:(id)a0;
- (void)deleteOutputForKey:(id)a0;
- (void)deleteOutputPortForKey:(id)a0;
- (void)deleteProxyPortForKey:(id)a0;
- (int)directionForPort:(id)a0;
- (void)disable:(id)a0;
- (double)doubleForStateKey:(id)a0;
- (char)execute:(id)a0 time:(double)a1 arguments:(id)a2;
- (char)executeSubpatches:(double)a0 arguments:(id)a1;
- (char)getMatrix:(double *)a0;
- (id)getNthInputImagePort:(unsigned int)a0;
- (id)getNthInputPort:(unsigned int)a0;
- (unsigned long long)getNumberOfInputImagePorts;
- (unsigned long long)getNumberOfInputPorts;
- (double *)getTransform;
- (Class)graphViewClass;
- (char)inSafeMode;
- (long long)integerForStateKey:(id)a0;
- (void)invalidateDodForSubpatches;
- (char)isExecutionSuspended;
- (char)isPausedRendering;
- (id)isPortPublished:(id)a0;
- (char)isRendering;
- (char)isStateKey:(id)a0;
- (struct { unsigned char x0[16]; })md5WithTime:(double)a0 arguments:(id)a1;
- (double)nextExecutionTime:(double)a0 arguments:(id)a1;
- (double)nextExecutionTime:(id)a0 time:(double)a1 arguments:(id)a2;
- (double)nextExecutionTimeForSubpatches:(id)a0 time:(double)a1 arguments:(id)a2;
- (id)nodeActorForView:(id)a0;
- (void)nodeDidAddToGraph:(id)a0;
- (unsigned long long)orderForConsumerSubpatch:(id)a0;
- (id)parentPatch;
- (char)patchSetsTransform;
- (id)pathForSubpatch:(id)a0;
- (void)pauseRendering;
- (char)prerenderAtTime:(double)a0 imageSizeHint:(struct CGSize { double x0; double x1; })a1 arguments:(id)a2;
- (id)proxyPortForOriginalPort:(id)a0;
- (id)publishPort:(id)a0;
- (void)removeNodeForKey:(id)a0;
- (char)render:(double)a0 arguments:(id)a1;
- (id)renderingContext;
- (int)renderingFlags;
- (id)safeURLFromString:(id)a0;
- (id)serializedValueForStateKey:(id)a0;
- (void)setBool:(char)a0 forStateKey:(id)a1;
- (void)setCustomizedName:(id)a0;
- (void)setDouble:(double)a0 forStateKey:(id)a1;
- (void)setForceInputsUpdate;
- (void)setInputOrder:(unsigned long long)a0 forKey:(id)a1;
- (void)setInputPortOrder:(unsigned long long)a0 forKey:(id)a1;
- (void)setInteger:(long long)a0 forStateKey:(id)a1;
- (void)setNeedsExecution;
- (void)setOrder:(unsigned long long)a0 forConsumerSubpatch:(id)a1;
- (void)setOutputOrder:(unsigned long long)a0 forKey:(id)a1;
- (void)setOutputPortOrder:(unsigned long long)a0 forKey:(id)a1;
- (void)setPatchSetsTransform:(char)a0;
- (void)setRenderingFlags:(int)a0;
- (void)setTimebase:(int)a0;
- (void)setValue:(id)a0 forStateKey:(id)a1;
- (char)shouldAbortExecution;
- (char)startRendering:(id)a0 options:(id)a1;
- (void)stateUpdated;
- (void)stopRendering;
- (id)subpatchForPath:(id)a0;
- (id)subpatches;
- (id)systemInputPorts;
- (id)systemOutputPorts;
- (void)unpublishPort:(id)a0;
- (id)valueForStateKey:(id)a0;

@end

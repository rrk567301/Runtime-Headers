@class IKImageBrowserView, NSArray, NSMutableIndexSet, NSMutableArray, NSLock;
@protocol IKImageBrowserLayoutManagerDelegate;

@interface IKImageBrowserLayoutManager : NSObject {
    struct __IKImageBrowserLayoutParameter { NSArray *_content; struct CGSize { double width; double height; } _containerSize; unsigned int _cellCount; struct CGSize { double width; double height; } _cellSize; struct CGSize { double width; double height; } _cellMargin; struct CGSize { double width; double height; } _margin; int _alignment; unsigned int _contentResizingMask; char _alignLeftForSingleRow; char _automaticallyMinimizeRowMargin; char _cellsHaveACommonHeightOfInfoSpace; int _columnCount; float _cellAspectRatio; struct CGSize { double width; double height; } _adjustedMargin; struct CGSize { double width; double height; } _adjustedCellMargin; } _layoutParameters;
    id _subManagerClass;
    NSMutableArray *_subManagers;
    NSArray *_groups;
    unsigned long long _groupToSpaceOutDownwards;
    unsigned long long _subManagerToSpaceOutDownwards;
    char _subManagerListDirty;
    char _hasiOSGroup;
    char _iOSGroupOpened;
    unsigned long long _iOSGroupMasterCellIndex;
    unsigned long long _iOSGroupWrapCount;
    NSMutableIndexSet *_iOSGroupCollapsedIndexes;
    NSLock *_lock;
    NSMutableIndexSet *_indexInRectCache;
    struct { struct { double x; double y; } origin; struct { double width; double height; } size; } _rectCache;
    char _layoutIsUpToDate;
    char _gridFramesAreUpToDate;
    char _hasCoverflowSubLayout;
    IKImageBrowserView *_parent;
}

@property IKImageBrowserView *parent;
@property id<IKImageBrowserLayoutManagerDelegate> delegate;
@property double verticalOffset;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)invalidate;
- (void)lock;
- (void)unlock;
- (void)setAlignment:(int)a0;
- (int)alignment;
- (id)groups;
- (void)setGroups:(id)a0;
- (id)content;
- (int)columnCount;
- (void)setContent:(id)a0;
- (struct CGSize { double x0; double x1; })cellSize;
- (int)columnAtIndex:(int)a0;
- (struct CGSize { double x0; double x1; })containerSize;
- (struct { double x0; double x1; })contentSize;
- (struct CGSize { double x0; double x1; })margin;
- (int)rowAtIndex:(int)a0;
- (int)rowsCount;
- (void)setCellSize:(struct CGSize { double x0; double x1; })a0;
- (void)setContainerSize:(struct CGSize { double x0; double x1; })a0;
- (void)setMargin:(struct CGSize { double x0; double x1; })a0;
- (char)update;
- (void)updateIfNeeded;
- (int)flavor;
- (void)setContentResizingMask:(unsigned long long)a0;
- (void)moveIndexOnTop:(long long)a0;
- (int)rowAtY:(double)a0;
- (double)yAtRow:(int)a0;
- (char)cellAtIndexOverlapsAnotherCell:(unsigned long long)a0;
- (void)layoutDidChange;
- (void)translateAllBy:(struct CGSize { double x0; double x1; })a0;
- (void)_animateHeaderAndFooterOffsetFrom:(double)a0 startingWithGroupIndex:(unsigned long long)a1 usingAnimationManager:(id)a2;
- (long long)_clientIndexToGridIndex:(unsigned long long)a0;
- (int)_contentColumnCount;
- (long long)_gridIndexToClientIndex:(unsigned long long)a0;
- (id)_newGridWithClass:(Class)a0 pool:(id)a1;
- (char)_shouldForceAlignLeft;
- (void)_wrapCellsForiOSGroups;
- (double)_yAtRow:(int)a0;
- (void)addGroup:(id)a0 inGroupList:(id)a1;
- (void)adjustGroupsHorizontalOffsetIfNeeded;
- (char)alignLeftForSingleRow;
- (char)automaticallyMinimizeRowMargin;
- (unsigned long long)bottomIndex;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })cellFrameAtIndex:(unsigned long long)a0;
- (int)cellIndexAtColumn:(int)a0 andRow:(int)a1;
- (int)cellIndexAtLocation:(struct { double x0; double x1; })a0;
- (id)cellIndexesAtLocation:(struct { double x0; double x1; })a0;
- (id)cellIndexesInRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })cellMargin;
- (char)cellsHaveACommonHeightOfInfoSpace;
- (unsigned long long)clientIndexToGridIndex:(unsigned long long)a0;
- (id)clientIndexesToGridIndexes:(id)a0;
- (void)collapsedStateChanged:(id)a0;
- (int)columnAtX:(double)a0;
- (char)computeColumnCount;
- (void)computeMargin;
- (void)contentDidChangeAtIndexes:(id)a0;
- (unsigned long long)contentResizingMask;
- (void)createGrids;
- (struct CGSize { double x0; double x1; })freeFormDocumentTranslation;
- (struct CGSize { double x0; double x1; })freeFormScaleFactor;
- (struct CGSize { double x0; double x1; })freeFormTotalDocumentOffset;
- (long long)gridIndexToClientIndex:(unsigned long long)a0;
- (id)gridIndexesToClientIndexes:(id)a0;
- (char)hasCoverflowSubLayout;
- (int)heightOfInfoSpaceAtRow:(int)a0;
- (unsigned long long)indexToRenderForNonOrderedIndex:(unsigned long long)a0;
- (void)invalidateBSP;
- (struct __IKImageBrowserLayoutParameter { id x0; struct CGSize { double x0; double x1; } x1; unsigned int x2; struct CGSize { double x0; double x1; } x3; struct CGSize { double x0; double x1; } x4; struct CGSize { double x0; double x1; } x5; int x6; unsigned int x7; char x8; char x9; char x10; int x11; float x12; struct CGSize { double x0; double x1; } x13; struct CGSize { double x0; double x1; } x14; } *)layoutParameters;
- (unsigned long long)leftIndex;
- (long long)nearestCellOfPosition:(struct { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })normalizedPositionAtIndex:(long long)a0;
- (struct CGPoint { double x0; double x1; })positionAtIndex:(long long)a0;
- (void)prepareRenderingOrderingWithIndexes:(id)a0;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rectOfGroup:(id)a0;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rectOfGroupHeader:(id)a0;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rectOfGroupTail:(id)a0;
- (void)resetGroupsOffset;
- (unsigned long long)rightIndex;
- (int)rowsCountForGrid:(id)a0;
- (double)scaleFactorAtIndex:(long long)a0;
- (int)screenColumnAtIndex:(unsigned long long)a0;
- (void)setAlignLeftForSingleRow:(char)a0;
- (void)setAnchorPointTranslation:(struct CGPoint { double x0; double x1; })a0;
- (void)setAutomaticallyMinimizeRowMargin:(char)a0;
- (void)setCellMargin:(struct CGSize { double x0; double x1; })a0;
- (void)setCellsHaveACommonHeightOfInfoSpace:(char)a0;
- (void)setFreeFormDocumentOffset:(struct CGPoint { double x0; double x1; })a0;
- (void)setFreeFormLayoutMode:(char)a0;
- (void)setFreeFormScaleFactor:(struct CGSize { double x0; double x1; })a0;
- (void)setPosition:(struct CGPoint { double x0; double x1; })a0 atIndex:(long long)a1;
- (void)setScaleFactor:(double)a0 atIndex:(long long)a1;
- (struct { double x0; double x1; })sizeOfGrid:(id)a0;
- (void)spaceOutCellsForDropAtIndex:(unsigned long long)a0 atPos:(struct { double x0; double x1; })a1 nearestCell:(unsigned long long)a2 isMoreThanHalfwayAcrossCell:(char)a3;
- (void)spaceOutGroup:(unsigned long long)a0 usingAnimationManager:(id)a1 animate:(char)a2;
- (double)spaceOutGroupsHeight;
- (id)subManagerForCellAtIndex:(unsigned long long)a0;
- (id)subManagers;
- (unsigned long long)topIndex;
- (struct CGPoint { double x0; double x1; })topLeftItemPosition;
- (void)updateGridFrames;
- (double)xAtColumn:(int)a0;
- (double)zAtIndex:(unsigned long long)a0;
- (void)zSortWithZValues:(double *)a0;

@end

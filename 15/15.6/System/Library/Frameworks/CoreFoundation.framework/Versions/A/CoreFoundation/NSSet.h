@class NSString;

@interface NSSet : NSObject <BSCollection, NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (class, readonly) char supportsSecureCoding;

@property (readonly) unsigned long long count;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long count;

+ (char)_subclassesMustBeExplicitlyMentionedWhenDecoded;
+ (id)allocWithZone:(struct _NSZone { } *)a0;
+ (id)set;
+ (id)setWithObjects:(id)a0;
+ (id)newSetWithObjects:(const id *)a0 count:(unsigned long long)a1;
+ (id)setWithArray:(id)a0;
+ (id)setWithArray:(id)a0 copyItems:(char)a1;
+ (id)setWithArray:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
+ (id)setWithArray:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 copyItems:(char)a2;
+ (id)setWithObject:(id)a0;
+ (id)setWithObjects:(const id *)a0 count:(unsigned long long)a1;
+ (id)setWithOrderedSet:(id)a0;
+ (id)setWithOrderedSet:(id)a0 copyItems:(char)a1;
+ (id)setWithOrderedSet:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
+ (id)setWithOrderedSet:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 copyItems:(char)a2;
+ (id)setWithSet:(id)a0;
+ (id)setWithSet:(id)a0 copyItems:(char)a1;
+ (char)supportsSecureCoding;

- (Class)classForCoder;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setValue:(id)a0 forKey:(id)a1;
- (id)valueForKey:(id)a0;
- (id)_avgForKeyPath:(id)a0;
- (id)_minForKeyPath:(id)a0;
- (id)_distinctUnionOfSetsForKeyPath:(id)a0;
- (id)_maxForKeyPath:(id)a0;
- (id)_sumForKeyPath:(id)a0;
- (id)_countForKeyPath:(id)a0;
- (id)_distinctUnionOfArraysForKeyPath:(id)a0;
- (id)_distinctUnionOfObjectsForKeyPath:(id)a0;
- (void)addObserver:(id)a0 forKeyPath:(id)a1 options:(unsigned long long)a2 context:(void *)a3;
- (id)filteredSetUsingPredicate:(id)a0;
- (void)removeObserver:(id)a0 forKeyPath:(id)a1;
- (void)removeObserver:(id)a0 forKeyPath:(id)a1 context:(void *)a2;
- (id)replacementObjectForPortCoder:(id)a0;
- (id)sortedArrayUsingDescriptors:(id)a0;
- (id)valueForKeyPath:(id)a0;
- (id)bs_map:(id /* block */)a0;
- (id)bs_array;
- (id)bs_compactMap:(id /* block */)a0;
- (char)bs_containsObjectPassingTest:(id /* block */)a0;
- (id)bs_dictionaryByPartitioning:(id /* block */)a0;
- (void)bs_each:(id /* block */)a0;
- (id)bs_filter:(id /* block */)a0;
- (id)bs_firstObjectPassingTest:(id /* block */)a0;
- (id)bs_orderedSet;
- (id)bs_reduce:(id)a0 block:(id /* block */)a1;
- (id)bs_set;
- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)a0;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (char)isEqual:(id)a0;
- (id)mutableCopyWithZone:(struct _NSZone { } *)a0;
- (id)initWithObject:(id)a0;
- (char)__getValue:(id *)a0 forObj:(id)a1;
- (char)containsObject:(id)a0;
- (unsigned long long)countForObject:(id)a0;
- (void)__applyValues:(void /* function */ *)a0 context:(void *)a1;
- (id)member:(id)a0;
- (id)objectsWithOptions:(unsigned long long)a0 passingTest:(id /* block */)a1;
- (unsigned long long)_cfTypeID;
- (id)allObjects;
- (id)anyObject;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id *x1; unsigned long long *x2; unsigned long long x3[5]; } *)a0 objects:(id *)a1 count:(unsigned long long)a2;
- (id)descriptionWithLocale:(id)a0;
- (id)descriptionWithLocale:(id)a0 indent:(unsigned long long)a1;
- (void)encodeWithCoder:(id)a0;
- (void)enumerateObjectsUsingBlock:(id /* block */)a0;
- (void)enumerateObjectsWithOptions:(unsigned long long)a0 usingBlock:(id /* block */)a1;
- (void)getObjects:(id *)a0;
- (void)getObjects:(id *)a0 count:(unsigned long long)a1;
- (void)getObjects:(id *)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)initWithArray:(id)a0;
- (id)initWithArray:(id)a0 copyItems:(char)a1;
- (id)initWithArray:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)initWithArray:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 copyItems:(char)a2;
- (id)initWithCoder:(id)a0;
- (id)initWithObjects:(id)a0;
- (id)initWithObjects:(const id *)a0 count:(unsigned long long)a1;
- (id)initWithOrderedSet:(id)a0;
- (id)initWithOrderedSet:(id)a0 copyItems:(char)a1;
- (id)initWithOrderedSet:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)initWithOrderedSet:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 copyItems:(char)a2;
- (id)initWithSet:(id)a0;
- (id)initWithSet:(id)a0 copyItems:(char)a1;
- (char)intersectsOrderedSet:(id)a0;
- (char)intersectsSet:(id)a0;
- (char)isEqualToSet:(id)a0;
- (char)isNSSet__;
- (char)isSubsetOfOrderedSet:(id)a0;
- (char)isSubsetOfSet:(id)a0;
- (void)makeObjectsPerformSelector:(SEL)a0;
- (void)makeObjectsPerformSelector:(SEL)a0 withObject:(id)a1;
- (id)members:(id)a0 notFoundMarker:(id)a1;
- (id)objectEnumerator;
- (id)objectPassingTest:(id /* block */)a0;
- (id)objectWithOptions:(unsigned long long)a0 passingTest:(id /* block */)a1;
- (id)objectsPassingTest:(id /* block */)a0;
- (id)setByAddingObject:(id)a0;
- (id)setByAddingObjectsFromArray:(id)a0;
- (id)setByAddingObjectsFromSet:(id)a0;
- (id)sortedArrayUsingComparator:(id /* block */)a0;
- (id)sortedArrayWithOptions:(unsigned long long)a0 usingComparator:(id /* block */)a1;

@end

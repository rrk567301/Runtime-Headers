@class NSTimeZone, NSString, NSDictionary, _HKFeatureFlags, NSNumber;

@interface _HKBehavior : NSObject {
    struct _HKLazyLoader<_HKFeatureFlags *> { _HKFeatureFlags *_value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _featureFlags;
    NSNumber *_overriddenSupportsSwimmingWorkoutSessions;
    NSNumber *_overriddenEnableManateeForHSA2Accounts;
    NSNumber *_overriddenSupportsWorkoutSmoothing;
    NSNumber *_overriddenSupportsCachedStatisticsCollectionQueries;
    NSNumber *_overriddenSupportsCachedSleepDaySummaryQueries;
    NSNumber *_overriddenSupportsActiveQueryDaemonTransactions;
    NSNumber *_overriddenFitnessMode;
    NSString *_overriddenCurrentDeviceDisplayName;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _isRunningStoreDemoMode;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _runningInStoreDemoModeF201;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _futureMigrationsEnabled;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _ontologyDatabaseFutureMigrationsEnabled;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _performsAutomaticUserDomainConceptProcessing;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _shouldReceiveECGSamples;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _supportsCloudSync;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _supportsCloudSyncSharding;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _supportsCloudSyncStagingShard;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _supportsPeriodicFullCloudSync;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _supportsPeriodicLiteCloudSync;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _supportsCoordinatedCloudSync;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _supportsSharedSummarySync;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _supportsMedicalIDSync;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _canPerformOwnershipTakeover;
    struct _HKLazyLoader<signed char> { char _value; BOOL _hasLoaded; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _loadLock; } _isiPad;
}

@property (class, readonly, nonatomic) char processHasLoadedUIKit;

@property (nonatomic) char invalidatesNotificationInstructionsOnLaunch;
@property (copy, nonatomic) NSString *currentDeviceName;
@property (nonatomic) struct { long long majorVersion; long long minorVersion; long long patchVersion; } currentOSVersionStruct;
@property (nonatomic) char isDeviceSupported;
@property (nonatomic) char isAppleInternalInstall;
@property (nonatomic) char isAppleWatch;
@property (nonatomic) char isCompanionCapable;
@property (nonatomic) char hasTelephonyCapability;
@property (nonatomic) char isTestingDevice;
@property (nonatomic) char isRunningStoreDemoMode;
@property (nonatomic) char runningInStoreDemoModeF201;
@property (nonatomic) char isRunningSeedBuild;
@property (nonatomic) char shouldReceiveECGSamples;
@property (nonatomic) char supportsBluetoothDiscovery;
@property (nonatomic) char supportsPeriodicFullCloudSync;
@property (nonatomic) char supportsPeriodicLiteCloudSync;
@property (nonatomic) char isRealityDevice;
@property (nonatomic) char supportsCoordinatedCloudSync;
@property (nonatomic) char supportsSharedSummarySync;
@property (nonatomic) char supportsMedicalIDSync;
@property (nonatomic) char canPerformOwnershipTakeover;
@property (nonatomic) char isiPad;
@property (nonatomic) char isProdFused;
@property (copy, nonatomic) NSString *currentDeviceDisplayName;
@property (copy, nonatomic) NSString *unitTest_deviceRegionCode;
@property (copy, nonatomic) NSString *currentDeviceClass;
@property (copy, nonatomic) NSString *currentDeviceProductType;
@property (copy, nonatomic) NSString *currentDeviceSerialNumber;
@property (copy, nonatomic) NSString *currentOSBuild;
@property (copy, nonatomic) NSString *currentOSName;
@property (copy, nonatomic) NSString *currentOSVersion;
@property (nonatomic) char collectsCalorimetry;
@property (nonatomic) char collectsData;
@property (nonatomic) char ontologyIndexingEnabled;
@property (nonatomic) char ontologyIndexingRequiresAccounts;
@property (nonatomic) char performsAutomaticUserDomainConceptProcessing;
@property (nonatomic) char performsAutomaticConceptIndexing;
@property (nonatomic) char performsWorkoutCondensation;
@property (nonatomic) char supportsAWDMetricSubmission;
@property (nonatomic) char supportsActivitySharing;
@property (nonatomic) char supportsAppSubscriptions;
@property (nonatomic) char supportsBackgroundSyncRequests;
@property (nonatomic) char supportsCloudSync;
@property (nonatomic) char supportsCloudSyncSharding;
@property (nonatomic) char supportsCloudSyncStagingShard;
@property (nonatomic) char supportsComputedUserCharacteristicCaching;
@property (nonatomic) char supportsHeartRateDataCollection;
@property (nonatomic) char supportsNanoSync;
@property (nonatomic) char supportsOntology;
@property (nonatomic) char supportsOntologyDatabaseUpdates;
@property (nonatomic) char supportsOntologyFeatureEvaluation;
@property (nonatomic) char supportsOntologyDatabaseFutureMigrations;
@property (nonatomic) char supportsPeriodicCountryMonitoring;
@property (nonatomic) char supportsSampleExpiration;
@property (nonatomic) char supportsSwimmingWorkoutSessions;
@property (nonatomic) char supportsWorkouts;
@property (nonatomic) char supportsWorkoutRouteSmoothing;
@property (nonatomic) char tinkerModeEnabled;
@property (nonatomic) char healthAppHidden;
@property (nonatomic) char healthAppSupportedOnDevice;
@property (nonatomic) char healthAppNotInstalled;
@property (nonatomic) char schedulesXPCAlarms;
@property (nonatomic) char isStandalonePhoneFitnessMode;
@property (nonatomic) unsigned long long fitnessMode;
@property (nonatomic) char showSensitiveLogItems;
@property (nonatomic) char futureMigrationsEnabled;
@property (copy, nonatomic) NSString *additionalEntitlementForConnection;
@property (nonatomic) char shouldOverrideSiriUOD;
@property (nonatomic) char shouldRegisterPeriodicActivities;
@property (retain, nonatomic) NSDictionary *featureRequirementOverrides;
@property (readonly, nonatomic) _HKFeatureFlags *features;
@property (readonly, nonatomic) char supportsEED;
@property (readonly, nonatomic) char supportsCachedStatisticsCollectionQueries;
@property (readonly, nonatomic) char supportsCachedSleepDaySummaryQueries;
@property (readonly, nonatomic) char supportsActiveQueryDaemonTransactions;
@property (readonly, nonatomic) char supportsSecondaryProfiles;
@property (readonly, nonatomic) char healthAppHiddenOrNotInstalled;
@property (readonly, copy, nonatomic) NSString *currentDeviceManufacturer;
@property (readonly, copy, nonatomic) NSString *currentDeviceHWModelString;
@property (readonly, copy, nonatomic) NSString *currentDeviceRegionCode;
@property (readonly, copy, nonatomic) NSString *currentDeviceRegionInfo;
@property (readonly, copy, nonatomic) NSString *currentInternalDeviceModel;
@property (readonly, copy, nonatomic) NSTimeZone *localTimeZone;
@property (readonly, nonatomic) NSDictionary *currentDiskUsage;
@property (readonly, nonatomic) unsigned long long totalDiskCapacity;
@property (readonly, nonatomic) unsigned long long currentDiskSpaceAvailable;
@property (readonly, nonatomic) char processHasLoadedUIKit;

+ (char)isAppleInternalInstall;
+ (char)isiPod;
+ (id)currentOSVersion;
+ (char)hasTelephonyCapability;
+ (id)_currentDeviceName;
+ (id)_currentOSBuild;
+ (char)_isiPad;
+ (char)isTestingDevice;
+ (char)shouldShowBuddy;
+ (char)isBuddyDisabled;
+ (char)_condensesHeartRateSamples;
+ (id)_currentOSVersion;
+ (struct { long long x0; long long x1; long long x2; })_currentOSVersionStruct;
+ (unsigned long long)_fitnessMode;
+ (char)_futureMigrationsEnabled;
+ (char)_hasCompletedBuddyWithKey:(id)a0 version:(long long)a1;
+ (char)_hasCompletedBuddyWithVersion:(long long)a0;
+ (char)_hasTelephonyCapability;
+ (char)_healthAppHidden;
+ (char)_healthAppNotInstalled;
+ (char)_healthAppSupportedOnDevice;
+ (char)_isAppleInternalInstall;
+ (char)_isAutomaticProcessingEnabled;
+ (char)_isBuddyDisabled;
+ (char)_isCollectBLETypesFromLocalSourceEnabled;
+ (char)_isDataCollectionForwarderDisabled;
+ (char)_isDeviceSupported;
+ (char)_isForceBuddyEnabled;
+ (char)_isStandalonePhoneFitnessMode;
+ (char)_ontologyDatabaseFutureMigrationsEnabled;
+ (void)_resetBuddy;
+ (void)_setHasCompletedBuddyWithKey:(id)a0 version:(long long)a1;
+ (void)_setHasCompletedBuddyWithVersion:(long long)a0;
+ (char)_shouldShowBuddy;
+ (char)_tinkerModeEnabled;
+ (char)activePairedWatchHasSmartFitnessCoaching;
+ (char)activePairedWatchSupportsBradycardiaDetection;
+ (char)activePairedWatchSupportsHeartRateMotionContexts;
+ (char)allPairedWatchesSupportBradycardiaDetection;
+ (char)allPairedWatchesSupportHeartRateMotionContexts;
+ (char)anyPairedWatchHasFlightsClimbedCapability;
+ (id)currentDeviceClass;
+ (id)currentDeviceDisplayName;
+ (id)currentDeviceHWModelString;
+ (id)currentDeviceManufacturer;
+ (id)currentDeviceName;
+ (id)currentDeviceProductType;
+ (id)currentDeviceRegionCode;
+ (id)currentDeviceRegionInfo;
+ (id)currentDeviceReleaseType;
+ (id)currentOSBuild;
+ (id)currentOSName;
+ (struct { long long x0; long long x1; long long x2; })currentOSVersionStruct;
+ (char)hasCompletedBuddyWithVersion:(long long)a0;
+ (char)hasPairedWatch;
+ (char)isCollectBLETypesFromLocalSourceEnabled;
+ (char)isDataCollectionForwarderDisabled;
+ (char)isDeviceSupported;
+ (char)isRunningStoreDemoMode;
+ (int)nanoSyncProtocolVersionForCompanionSystemBuildVersion:(id)a0;
+ (int)nanoSyncProtocolVersionForWatchSystemBuildVersion:(id)a0;
+ (void)resetBuddy;
+ (void)resetSharedBehavior;
+ (char)runningInStoreDemoModeF201;
+ (void)setForceBuddy:(char)a0;
+ (void)setHasCompletedBuddyWithVersion:(long long)a0;
+ (void)setSharedBehavior:(id)a0;
+ (id)sharedBehavior;

- (id)init;
- (void).cxx_destruct;
- (id).cxx_construct;
- (void)setIsIOSDevice:(char)a0;
- (char)_hasProductTypePrefix:(id)a0;
- (id)currentDeviceReleaseType;
- (void)resetSupportsCloudSync;
- (void)setSupportsActiveQueryDaemonTransactions:(char)a0;
- (void)setSupportsCachedSleepDaySummaryQueries:(char)a0;
- (void)setSupportsCachedStatisticsCollectionQueries:(char)a0;
- (void)setSupportsWorkoutRouteSmoothingOverride:(char)a0;

@end

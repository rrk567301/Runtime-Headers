@class NSNumber, NSString, NSMutableDictionary, NSDictionary, NSObject, NSUserDefaults, MPPlaybackEQSetting;
@protocol OS_dispatch_queue;

@interface MPPlaybackUserDefaults : NSObject {
    NSUserDefaults *_iPodUserDefaults;
    NSUserDefaults *_videoUserDefaults;
    NSUserDefaults *_mediaPlaybackCoreUserDefaults;
    NSUserDefaults *_airplayUserDefaults;
    NSMutableDictionary *_autoplaySettingCache;
    NSObject<OS_dispatch_queue> *_accountsQueue;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
    struct { int mobileiPodPrefsChanged; int mobileiPodPlaybackPrefsChangedAllowCellularData; int videoPrefsChanged; int airplayPrefsChanged; } _notifyTokens;
}

@property (class, readonly, nonatomic) MPPlaybackUserDefaults *standardUserDefaults;

@property (readonly, nonatomic) MPPlaybackEQSetting *musicEQSetting;
@property (nonatomic) long long musicRepeatType;
@property (nonatomic) long long musicShuffleType;
@property (nonatomic) char soundCheckEnabled;
@property (nonatomic, getter=isCrossFadeEnabled) char crossFadeEnabled;
@property (nonatomic) double crossFadeDuration;
@property (nonatomic) float playbackRate;
@property (copy, nonatomic, getter=isPrivateListeningEnabled) NSNumber *privateListeningEnabled;
@property (readonly, copy, nonatomic, getter=isDevicePrivateListeningEnabled) NSNumber *devicePrivateListeningEnabled;
@property (copy, nonatomic, getter=isFocusModePrivateListeningEnabled) NSNumber *focusModePrivateListeningEnabled;
@property (nonatomic) long long preferredMusicLowBandwidthResolution;
@property (nonatomic) long long preferredMusicHighBandwidthResolution;
@property (nonatomic) long long preferredMusicDownloadResolution;
@property (nonatomic) long long spatialAudioPreference;
@property (nonatomic) char prefersSpatialAudio;
@property (nonatomic) char prefersSpatialDownloads;
@property (nonatomic) char showLosslessAudio;
@property (readonly, nonatomic) long long preferredVideoLowBandwidthResolution;
@property (readonly, nonatomic) long long preferredVideoHighBandwidthResolution;
@property (readonly, nonatomic) long long preferredVideoDownloadResolution;
@property (readonly, nonatomic) char allowsHighQualityMusicStreamingOnCellular;
@property (readonly, nonatomic) float defaultVocalLevel;
@property (readonly, nonatomic) float minVocalLevel;
@property (readonly, nonatomic) char allowScreenRecording;
@property (readonly, nonatomic) char disableAssetCaching;
@property (readonly, nonatomic) char disableHLSAssetCaching;
@property (readonly, nonatomic) NSNumber *progressiveDownloadAssetRatio;
@property (readonly, nonatomic) char disableAudioAnalysis;
@property (readonly, nonatomic) char disableAudioProcessing;
@property (readonly, nonatomic) char disableMiniSINF;
@property (readonly, nonatomic) char disablePeriodicStateRestore;
@property (readonly, nonatomic) char disableQHO;
@property (readonly, nonatomic, getter=isProcessTapEnabled) char enableProcessTap;
@property (readonly, nonatomic) unsigned long long audioAnalysisRefreshRate;
@property (readonly, nonatomic) char forceMusicResolution;
@property (readonly, nonatomic) long long forcedMusicResolution;
@property (readonly, nonatomic) char forceMusicStreaming;
@property (readonly, nonatomic) char forceLibrarySupplementalContexts;
@property (readonly, nonatomic) char includeContentItemDebugFields;
@property (readonly, nonatomic) long long maximumQueueHandOffSize;
@property (readonly, nonatomic) char showDebugUI;
@property (readonly, nonatomic) char speakerRouteEnabled;
@property (readonly, nonatomic) double assetURLExpirationDuration;
@property (readonly, nonatomic) double activationDelay;
@property (readonly, nonatomic) double forwardBufferDuration;
@property (readonly, nonatomic) char prerollEnabled;
@property (readonly, nonatomic) char archiveSessionArtwork;
@property (readonly, nonatomic) char shouldPurgeSideLoadedVocalAttenuationModels;
@property (readonly, nonatomic) char shouldRecordVocalAttenuationStatistics;
@property (readonly, copy, nonatomic) NSString *vocalAttenuationStatisticsName;
@property (readonly, nonatomic) char shouldBypassVocalAttenuationDenoising;
@property (readonly, nonatomic) char shouldBypassVocalAttenuationSupportFlag;
@property (readonly, nonatomic) char shouldUseRemoteVocalAttenuationModel;
@property (readonly, nonatomic) char shouldUseSideLoadedVocalAttenuationModel;
@property (readonly, nonatomic) float audioTapTimeOutRatioForFailureDetection;
@property (readonly, nonatomic) double vocalAttenuationGracePeriodAfterPause;
@property (readonly, nonatomic) char vocalAttenuationLogInputAndOuputRMSValues;
@property (readonly, copy, nonatomic) NSNumber *forcedIntentDestination;
@property (readonly, copy, nonatomic) NSNumber *delayQueueLoadDuration;
@property (readonly, copy, nonatomic) NSNumber *delayAssetLoadDuration;
@property (readonly, nonatomic) char forceDisableUpNext;
@property (readonly, nonatomic) char ignoreDisableUpNext;
@property (readonly, nonatomic) double HomePodPFSQForcedLeaseRenewThreshold;
@property (readonly, nonatomic) double unloadingPlaybackAssetsOnIdleDuration;
@property (readonly, nonatomic) long long artworkCacheLimit;
@property (readonly, nonatomic) long long exportableArtworkCacheLimit;
@property (readonly, nonatomic) char disableStateRestoration;
@property (readonly, nonatomic) char sonicHijack;
@property (readonly, copy, nonatomic) NSDictionary *rewrittenAssetInfo;
@property (readonly, nonatomic) char shouldSkipNextStateRestoration;

- (void)dealloc;
- (void).cxx_destruct;
- (id)_init;
- (char)autoPlayEnabledForUserIdentity:(id)a0;
- (void)_accountStoreChangedNotification:(id)a0;
- (void)_loadAccountProperties;
- (void)_migrateUserDefaults;
- (void)clearShouldSkipNextStateRestoration;
- (void)resetAllInternalSettings;
- (void)setAutoPlayEnabled:(char)a0 forUserIdentity:(id)a1;

@end

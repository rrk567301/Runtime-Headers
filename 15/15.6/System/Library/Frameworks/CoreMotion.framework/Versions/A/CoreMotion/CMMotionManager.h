@class CMGyroData, CMMagnetometerData, CMAccelerometerData, CMAmbientPressureData, CMDeviceMotion;
@protocol CMMotionVirtualDevice;

@interface CMMotionManager : NSObject {
    id _internal;
}

@property (class, retain) id<CMMotionVirtualDevice> virtualAlmondDevice;

@property (readonly, nonatomic, getter=isSidebandSensorFusionAvailable) char sidebandSensorFusionAvailable;
@property (readonly, nonatomic, getter=isDisplayGravityAvailable) char displayGravityAvailable;
@property (readonly, nonatomic, getter=isPredictedDeviceMotionAvailable) char predictedDeviceMotionAvailable;
@property (readonly) CMAmbientPressureData *ambientPressureData;
@property (readonly) CMAmbientPressureData *compensatedAmbientPressureData;
@property (readonly, nonatomic, getter=isDeviceMotionLiteAvailable) char isDeviceMotionLiteAvailable;
@property (nonatomic) double accelerometerUpdateInterval;
@property (readonly, nonatomic, getter=isAccelerometerAvailable) char accelerometerAvailable;
@property (readonly, nonatomic, getter=isAccelerometerActive) char accelerometerActive;
@property (readonly) CMAccelerometerData *accelerometerData;
@property (nonatomic) double gyroUpdateInterval;
@property (readonly, nonatomic, getter=isGyroAvailable) char gyroAvailable;
@property (readonly, nonatomic, getter=isGyroActive) char gyroActive;
@property (readonly) CMGyroData *gyroData;
@property (nonatomic) double magnetometerUpdateInterval;
@property (readonly, nonatomic, getter=isMagnetometerAvailable) char magnetometerAvailable;
@property (readonly, nonatomic, getter=isMagnetometerActive) char magnetometerActive;
@property (readonly) CMMagnetometerData *magnetometerData;
@property (nonatomic) double deviceMotionUpdateInterval;
@property (readonly, nonatomic) unsigned long long attitudeReferenceFrame;
@property (readonly, nonatomic, getter=isDeviceMotionAvailable) char deviceMotionAvailable;
@property (readonly, nonatomic, getter=isDeviceMotionActive) char deviceMotionActive;
@property (readonly) CMDeviceMotion *deviceMotion;
@property (nonatomic) char showsDeviceMovementDisplay;

+ (void)initialize;
+ (unsigned long long)availableAttitudeReferenceFrames;
+ (char)configureM7Activity:(char)a0 stepCounting:(char)a1 activityForceCodeTransition:(char)a2 stepCountingForceCodeTransition:(char)a3 threshold:(char)a4 onBodyDetection:(char)a5 ispMode:(unsigned char)a6 predictionInterval:(float)a7 logLevel:(char)a8 proactiveRevisitTime:(unsigned short)a9;
+ (BOOL)deviceMotionInitialized:(struct Sample { double x0; struct { struct { double x0; double x1; double x2; double x3; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; int x4; BOOL x5; BOOL x6; BOOL x7; float x8; BOOL x9; BOOL x10; int x11; } x1; struct { float x0; struct { float x0; float x1; float x2; } x1; } x2; BOOL x3; unsigned int x4; unsigned char x5; struct Status { unsigned short x0; } x6; float x7; } *)a0;
+ (void)dummySelector:(id)a0;
+ (void)dumpDb:(long long)a0 toURL:(id)a1 onCompletion:(id /* block */)a2;
+ (struct { int x0; double x1; double x2; float x3; float x4; union { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; } x0; struct { BOOL x0; char x1[282]; } x1; } x5; })gyroCalibrationDatabaseGetBiasFit;
+ (struct { int x0; double x1; double x2; float x3; float x4; union { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; } x0; struct { BOOL x0; char x1[282]; } x1; } x5; })gyroCalibrationDatabaseGetBiasFitAndEstimate:(struct { double x0; double x1; double x2; } *)a0 atTemperature:(float)a1;
+ (char)hasRunMiniCal;
+ (BOOL)northAlignedReferenceFrame:(unsigned long long)a0;
+ (void)setAllowInBackground:(char)a0;
+ (char)startGyroMiniCalibration;
+ (char)supportsGyroMiniCalibration;

- (void)dealloc;
- (id)init;
- (void)connect;
- (id)initPrivate;
- (void)setAccelerometerUpdateInterval:(double)a0;
- (void)stopGyroUpdates;
- (id)accelerometerData;
- (double)accelerometerUpdateInterval;
- (id)deviceMotion;
- (double)deviceMotionUpdateInterval;
- (id)gyroData;
- (double)gyroUpdateInterval;
- (void)setDeviceMotionUpdateInterval:(double)a0;
- (void)setGyroUpdateInterval:(double)a0;
- (void)startAccelerometerUpdates;
- (void)startAccelerometerUpdatesToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startDeviceMotionUpdates;
- (void)startDeviceMotionUpdatesToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(unsigned long long)a0;
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(unsigned long long)a0 toQueue:(id)a1 withHandler:(id /* block */)a2;
- (void)startGyroUpdates;
- (void)startGyroUpdatesToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)stopAccelerometerUpdates;
- (void)stopDeviceMotionUpdates;
- (void)didBecomeActive:(id)a0;
- (void)onGyro:(const struct Sample { double x0; struct { float x0; float x1; float x2; } x1; unsigned short x2; BOOL x3; } *)a0;
- (void)stopAccelerometerUpdatesPrivate;
- (void)onDeviceMotion:(const struct Sample { double x0; struct { struct { double x0; double x1; double x2; double x3; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; int x4; BOOL x5; BOOL x6; BOOL x7; float x8; BOOL x9; BOOL x10; int x11; } x1; struct { float x0; struct { float x0; float x1; float x2; } x1; } x2; BOOL x3; unsigned int x4; unsigned char x5; struct Status { unsigned short x0; } x6; float x7; } *)a0;
- (void)onMagnetometer:(const struct Sample { double x0; struct { float x0; float x1; float x2; } x1; float x2; } *)a0;
- (void)_startDeviceMotionErrorUpdatesToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)_stopDeviceMotionErrorUpdates;
- (double)ambientPressureUpdateInterval;
- (void)applyInitialReference:(struct Sample { double x0; struct { struct { double x0; double x1; double x2; double x3; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; int x4; BOOL x5; BOOL x6; BOOL x7; float x8; BOOL x9; BOOL x10; int x11; } x1; struct { float x0; struct { float x0; float x1; float x2; } x1; } x2; BOOL x3; unsigned int x4; unsigned char x5; struct Status { unsigned short x0; } x6; float x7; } *)a0;
- (void)applyNorthReference:(struct Sample { double x0; struct { struct { double x0; double x1; double x2; double x3; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; int x4; BOOL x5; BOOL x6; BOOL x7; float x8; BOOL x9; BOOL x10; int x11; } x1; struct { float x0; struct { float x0; float x1; float x2; } x1; } x2; BOOL x3; unsigned int x4; unsigned char x5; struct Status { unsigned short x0; } x6; float x7; } *)a0;
- (unsigned long long)attitudeReferenceFrame;
- (double)compensatedAmbientPressureUpdateInterval;
- (id)computeNonlinearPRTTFromDB:(id)a0 where:(id)a1;
- (void)deallocPrivate;
- (void)didBecomeActivePrivate:(id)a0;
- (void)dismissDeviceMovementDisplay;
- (int)gyttNumTemperatures;
- (id)initUsing6AxisSensorFusion;
- (id)initUsingGyroOnlySensorFusion;
- (char)isAmbientPressureActive;
- (char)isAmbientPressureAvailable;
- (char)isCompensatedAmbientPressureActive;
- (void)onAccelerometer:(const struct Sample { double x0; struct { float x0; float x1; float x2; } x1; } *)a0;
- (void)onAmbientPressure:(const struct Sample { double x0; struct { float x0; float x1; } x1; } *)a0;
- (void)onCompensatedAmbientPressure:(const struct Sample { double x0; struct { float x0; float x1; } x1; } *)a0;
- (void)onDeviceMotionForKeyboardMotion:(const struct Sample { double x0; struct { struct { double x0; double x1; double x2; double x3; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; int x4; BOOL x5; BOOL x6; BOOL x7; float x8; BOOL x9; BOOL x10; int x11; } x1; struct { float x0; struct { float x0; float x1; float x2; } x1; } x2; BOOL x3; unsigned int x4; unsigned char x5; struct Status { unsigned short x0; } x6; float x7; } *)a0;
- (void)onFactoryGyro:(const struct Sample { double x0; struct { float x0; float x1; float x2; } x1; unsigned short x2; BOOL x3; } *)a0;
- (void)onFactoryGyroTemperature:(const struct Temperature { double x0; float x1; } *)a0;
- (id)predictedDeviceMotionAtTimestamp:(double)a0 error:(out id *)a1;
- (char)readRawAmbientPressureSamplesFromDB:(id)a0 toQueue:(id)a1 where:(id)a2 withHandler:(id /* block */)a3;
- (void)rebuildGytt;
- (BOOL)sendDeviceMotionError:(int)a0;
- (char)sendDeviceMotionHostGravityToKeyboard:(const struct { unsigned char x0[3]; unsigned char x1; unsigned char x2; } *)a0;
- (void)setAccelerometerDataCallback:(void /* function */ *)a0 info:(void *)a1 interval:(double)a2;
- (void)setAccelerometerUpdateIntervalPrivate:(double)a0;
- (void)setAmbientPressureUpdateInterval:(double)a0;
- (void)setAmbientPressureUpdateIntervalPrivate:(double)a0;
- (void)setCompensatedAmbientPressureUpdateInterval:(double)a0;
- (void)setCompensatedAmbientPressureUpdateIntervalPrivate:(double)a0;
- (void)setDeviceMotionCallback:(void /* function */ *)a0 info:(void *)a1 interval:(double)a2 fsync:(char)a3;
- (void)setDeviceMotionUpdateIntervalPrivate:(double)a0;
- (void)setDisplayGravityHandler:(id /* block */)a0 interval:(double)a1;
- (void)setGyroDataCallback:(void /* function */ *)a0 info:(void *)a1 interval:(double)a2;
- (void)setGyroUpdateIntervalPrivate:(double)a0;
- (void)setMagnetometerDataCallback:(void /* function */ *)a0 info:(void *)a1 interval:(double)a2;
- (void)setMagnetometerUpdateIntervalPrivate:(double)a0;
- (BOOL)setMotionThreadPriority:(int)a0;
- (void)setNotificationCallback:(void /* function */ *)a0 info:(void *)a1;
- (void)setPowerConservationMode:(int)a0;
- (void)setShowsDeviceMovementDisplayPrivate:(char)a0;
- (char)setSidebandSensorFusionEnable:(char)a0;
- (char)setSidebandSensorFusionEnable:(char)a0 measureLatency:(char)a1 withSnoopHandler:(id /* block */)a2;
- (char)setSidebandSensorFusionEnable:(char)a0 withSnoopHandler:(id /* block */)a1;
- (void)setSidebandTimeSyncHandler:(id /* block */)a0;
- (void)setUseAccelerometer:(char)a0;
- (void)showDeviceMovementDisplay;
- (void)startAccelerometerUpdatesPrivateToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startAmbientPressureUpdates;
- (void)startAmbientPressureUpdatesPrivateToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startAmbientPressureUpdatesToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startCompensatedAmbientPressureUpdates;
- (void)startCompensatedAmbientPressureUpdatesPrivateToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startCompensatedAmbientPressureUpdatesToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startDeviceMotionLiteFusedUpdatesForDeviceID:(id)a0 toQueue:(id)a1 withHandler:(id /* block */)a2;
- (void)startDeviceMotionLiteUpdatesForDeviceID:(id)a0 usingConfiguration:(struct { int x0; })a1 toQueue:(id)a2 withFusedHandler:(id /* block */)a3;
- (void)startDeviceMotionUpdatesForKeyboardMotionPrivateToQueue:(id)a0 withGravityDeltaThreshold:(double)a1 notificationFrequency:(double)a2 andHandler:(id /* block */)a3;
- (void)startDeviceMotionUpdatesForKeyboardMotionToQueue:(id)a0 withGravityDeltaThreshold:(double)a1 sendFrequency:(double)a2 andHandler:(id /* block */)a3;
- (void)startDeviceMotionUpdatesPrivateUsingReferenceFrame:(unsigned long long)a0 toQueue:(id)a1 withHandler:(id /* block */)a2;
- (void)startFactoryGyroUpdatesPrivateToQueue:(id)a0 atUpdateInterval:(double)a1 withHandler:(id /* block */)a2 residualHandler:(id /* block */)a3;
- (void)startFactoryGyroUpdatesToQueue:(id)a0 atUpdateInterval:(double)a1 withHandler:(id /* block */)a2;
- (void)startFactoryGyroUpdatesToQueue:(id)a0 atUpdateInterval:(double)a1 withHandler:(id /* block */)a2 residualHandler:(id /* block */)a3;
- (void)startFactoryGyroUpdatesToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startGyroUpdatesPrivateToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startMagnetometerUpdates;
- (void)startMagnetometerUpdatesPrivateToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)startMagnetometerUpdatesToQueue:(id)a0 withHandler:(id /* block */)a1;
- (void)stopAmbientPressureUpdates;
- (void)stopAmbientPressureUpdatesPrivate;
- (void)stopCompensatedAmbientPressureUpdates;
- (void)stopCompensatedAmbientPressureUpdatesPrivate;
- (void)stopDeviceMotionLiteUpdatesForDeviceID:(id)a0;
- (void)stopDeviceMotionUpdatesForKeyboardMotion;
- (void)stopDeviceMotionUpdatesForKeyboardMotionPrivate;
- (void)stopDeviceMotionUpdatesPrivate;
- (void)stopFactoryGyroUpdates;
- (void)stopFactoryGyroUpdatesPrivate;
- (void)stopGyroUpdatesPrivate;
- (void)stopMagnetometerUpdates;
- (void)stopMagnetometerUpdatesPrivate;
- (void)updateDeviceMotionMode;
- (char)useAccelerometer;
- (void)willResignActive:(id)a0;
- (void)willResignActivePrivate:(id)a0;

@end

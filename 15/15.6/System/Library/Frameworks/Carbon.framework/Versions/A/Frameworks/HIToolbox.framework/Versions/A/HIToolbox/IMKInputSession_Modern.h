@class NSString, NSXPCConnection, NSMutableDictionary, NSMutableArray, IMKClient_Modern;

@interface IMKInputSession_Modern : NSObject <IMKTextInput, IMKUnicodeTextInput, IMTSMSupport, IMKXPCSupport, IMKTextInput_FunctionRowUI, IMKTextInput_AutoCorrection, IMKTextInput_NSAppearance> {
    IMKClient_Modern *_client;
    NSMutableDictionary *_supportedEvents;
    int _eventStatus;
    struct OpaqueTSMDocumentID { } *_tsmDocument;
    long long _charactersEntered;
    struct _NSRange { unsigned long long location; unsigned long long length; } _markedRange;
    char _supportsDocumentAccess;
    long long _eventPending;
    char _commiting;
    char _sessionFinishedPreviously;
    NSMutableDictionary *placeholdersCachedWeakRef;
    NSMutableDictionary *_pendingEvents;
}

@property char _allowRetryOnInvalidPortException;
@property char didActivate;
@property char activatePending;
@property char deferredActivatePending;
@property (retain, nonatomic) NSString *deferredActivateInputMode;
@property char deferredActivateHaveEventsQueued;
@property char deferredActivateHaveInputSessionActionsQueued;
@property (retain, nonatomic) NSMutableArray *queuedInputSessionActions;
@property (retain, nonatomic) NSMutableArray *queuedDeferredEvents;
@property (retain, nonatomic) NSXPCConnection *inputMethodXPCConnection;
@property (retain, nonatomic) id touchBarViewController;

+ (void)IMKXPCPerformBlockOnMainThread:(id /* block */)a0;
+ (void)IMKXPCPerformBlockOnMainThreadInMode:(struct __CFString { } *)a0 performHow:(int)a1 callerCmd:(SEL)a2 workBlock:(id /* block */)a3;
+ (void)IMKCFRunLoopSetup;
+ (id)inputSessionWithClient:(id)a0 document:(struct OpaqueTSMDocumentID { } *)a1;
+ (void)whileAwaitingReplyFromProcess:(int)a0 performActions:(id /* block */)a1;
+ (void)withActivity:(id)a0 performActions:(id /* block */)a1;

- (void)dealloc;
- (long long)length;
- (id)attributedSubstringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)activate;
- (id)bundleIdentifier;
- (id)client;
- (unsigned long long)incrementalSearchClientGeometry;
- (char)_TIPropertyValueIsValid:(unsigned long long)a0;
- (void)deactivate;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (void)handleEvent:(struct OpaqueEventRef { } *)a0 completionHandler:(id /* block */)a1;
- (void)insertText:(id)a0;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 completionHandler:(id /* block */)a2;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })markedRange;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectedRange;
- (id)textInputContext;
- (id)validAttributesForMarkedText;
- (int)windowLevel;
- (void)wouldHandleEvent:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (id)_glyphInfoData:(id)a0;
- (char)isIncrementalSearchInputContext;
- (id)lookupPlaceholderCachedWeakRef:(id)a0;
- (void)removePlaceholderCachedWeakRef:(id)a0;
- (void)_addString:(id)a0 toEventRef:(struct OpaqueEventRef { } *)a1;
- (id)_adjustChromaticIMKAttributes_forSetMarkedText:(id)a0;
- (id)_adjustIronwoodAttributes_forSetMarkedText:(id)a0;
- (id)_adjustServerStringAttributes_forSetMarkedText:(id)a0;
- (short)_attributesToHighlightStyle:(id)a0 fallback:(char)a1 isChromaticMarkedText:(char)a2;
- (char)supportsUnicode;
- (char)isFixTSMIsFromDiscardMarkedText;
- (void)_addLineInformationFromCarbonEvent:(struct OpaqueEventRef { } *)a0 toDictionary:(id)a1;
- (id)_adjustAttachmentAttributes_forInsertText:(id)a0;
- (id)_adjustIronwoodAttributes_forInsertText:(id)a0;
- (id)_adjustServerStringAttributes_forInsertText:(id)a0;
- (void)_attributesFromRangeViaGetSelectedText:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (char)supportsTextAttachmentInsertion;
- (struct OpaqueEventRef { } *)_blankEvent:(unsigned int)a0 kind:(unsigned short)a1;
- (void)_closeInputPalette_withCompletionHandler:(id /* block */)a0;
- (void)_commitOnMouseDown:(struct OpaqueEventRef { } *)a0 completionHandler:(id /* block */)a1;
- (struct __TISInputSource { } *)_copyPaletteInputSource;
- (void)_copyUniCharsForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 intoBuffer:(unsigned short *)a1 ofLength:(long long)a2 completionHandler:(id /* block */)a3;
- (void)_coreAttributesFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 whichAttributes:(long long)a1 completionHandler:(id /* block */)a2;
- (void)_createAndSendOffsetToPointEvent:(long long)a0 completionHandler:(id /* block */)a1;
- (void)_eventIsOn:(struct OpaqueEventRef { } *)a0 completionHandler:(id /* block */)a1;
- (id)_glyphAttributesFromEventRef:(struct OpaqueEventRef { } *)a0 forString:(id)a1;
- (double)_heightFromFontData:(struct OpaqueEventRef { } *)a0;
- (void)_postEvent:(struct OpaqueEventRef { } *)a0 completionHandler:(id /* block */)a1;
- (void)_showHideInputWindow:(char)a0 completionHandler:(id /* block */)a1;
- (char)_supportsDocumentAccess;
- (struct OpaqueEventRef { } *)_unicodeTextEventFromString:(id)a0;
- (struct OpaqueEventRef { } *)_unmarkEventFromString:(id)a0;
- (void)_unmarkIMKMarkedRange;
- (struct OpaqueEventRef { } *)_updateEventFromAttributedString:(id)a0 pinRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a2 resultShouldUnmark:(char *)a3 resultLength:(unsigned long long *)a4;
- (void)_updateIMKMarkedRange:(char)a0 markedLength:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)activateAfterServerConnection;
- (void)addPendingEvent:(id)a0 withUniqueSeqNum:(unsigned long long)a1;
- (void)attributedSubstringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (id)attributesForCharacterIndex:(unsigned long long)a0;
- (void)attributesForCharacterIndex:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (id)attributesForCharacterIndex:(unsigned long long)a0 lineHeightRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (void)attributesForCharacterIndex_andLineRect:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (void)characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0 tracking:(long long)a1 completionHandler:(id /* block */)a2;
- (long long)characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0 tracking:(long long)a1 inMarkedRange:(char *)a2;
- (void)commitComposition;
- (void)commitPendingInlineSession;
- (id)currentInputSourceBundleID;
- (unsigned int)deadKeyState;
- (char)didCommandBySelector:(SEL)a0;
- (char)didCommandBySelector:(SEL)a0 completionHandler:(id /* block */)a1;
- (void)dismissFunctionRowItemTextInputView;
- (void)doCommandBySelector:(SEL)a0 commandDictionary:(id)a1;
- (void)do_coreAttributesFromRange_postEventLoopWithContext:(struct CoreAttributesFromRangeCompletionContext { unsigned short *x0; long long x1; unsigned short *x2; long long x3; long long x4; struct _NSRange { unsigned long long x0; unsigned long long x1; } x5; struct _NSRange { unsigned long long x0; unsigned long long x1; } x6; int x7; id x8; long long x9; struct { long long x0; long long x1; } x10; struct { long long x0; long long x1; } x11; struct _NSRange { unsigned long long x0; unsigned long long x1; } x12; struct OpaqueEventRef *x13; long long x14; long long x15; char x16; char x17; char x18; } *)a0 initBlockEach:(id /* block */)a1 postEventCompletionEach:(id /* block */)a2 whileConditionBlock:(id /* block */)a3 finalCompletion:(id /* block */)a4;
- (void)enqueueDeferredActivateInputSessionAction:(unsigned int)a0 timestamp:(double)a1 withInfo:(id)a2;
- (void)enqueueEventForDeferredActivate:(struct OpaqueEventRef { } *)a0;
- (void)fetchViewServiceEndpointWithCompletionHandler:(id /* block */)a0;
- (void)finishSession;
- (void)hidePalettes;
- (void)hidePalettesAtInsertionPoint;
- (void)imkxpc_attributedSubstringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 reply:(id /* block */)a1;
- (void)imkxpc_attributesForCharacterIndex:(unsigned long long)a0 reply:(id /* block */)a1;
- (void)imkxpc_bundleIdentifierWithReply:(id /* block */)a0;
- (void)imkxpc_characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0 tracking:(long long)a1 reply:(id /* block */)a2;
- (void)imkxpc_commitPendingInlineSessionWithReply:(id /* block */)a0;
- (void)imkxpc_currentInputSourceBundleIDWithReply:(id /* block */)a0;
- (void)imkxpc_deadKeyStateWithReply:(id /* block */)a0;
- (void)imkxpc_dismissFunctionRowItemTextInputViewWithReply:(id /* block */)a0;
- (void)imkxpc_firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 reply:(id /* block */)a1;
- (void)imkxpc_getApplicationProperty:(unsigned long long)a0 reply:(id /* block */)a1;
- (void)imkxpc_hidePalettesAtInsertionPointWithReply:(id /* block */)a0;
- (void)imkxpc_incrementalSearchClientGeometryWithReply:(id /* block */)a0;
- (void)imkxpc_inputSessionDoneSleepWithReply:(id /* block */)a0;
- (void)imkxpc_insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 validFlags:(unsigned long long)a2 reply:(id /* block */)a3;
- (void)imkxpc_insertText:(id)a0 reply:(id /* block */)a1;
- (void)imkxpc_isAutomaticCapitalizationEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isAutomaticDashSubstitutionEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isAutomaticPeriodSubstitutionEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isAutomaticQuoteSubstitutionEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isAutomaticSpellingCorrectionEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isAutomaticTextCompletionEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isAutomaticTextReplacementEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isBottomLineInputContextWithReply:(id /* block */)a0;
- (void)imkxpc_isContinuousSpellCheckingEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isDictationHiliteCapableInputContextWithReply:(id /* block */)a0;
- (void)imkxpc_isGrammarCheckingEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isIncrementalSearchInputContextWithReply:(id /* block */)a0;
- (void)imkxpc_isPaletteTerminated:(id)a0 reply:(id /* block */)a1;
- (void)imkxpc_isSmartInsertDeleteEnabledWithReply:(id /* block */)a0;
- (void)imkxpc_isTextPlaceholderAwareInputContextWithReply:(id /* block */)a0;
- (void)imkxpc_lengthWithReply:(id /* block */)a0;
- (void)imkxpc_markedRangeValueWithReply:(id /* block */)a0;
- (void)imkxpc_overrideKeyboardWithKeyboardNamed:(id)a0 reply:(id /* block */)a1;
- (char)imkxpc_passSanityCheckAsyncClient:(SEL)a0;
- (void)imkxpc_presentFunctionRowItemTextInputViewWithEndpoint:(id)a0 reply:(id /* block */)a1;
- (void)imkxpc_selectInputMode:(id)a0 reply:(id /* block */)a1;
- (void)imkxpc_selectedRangeWithReply:(id /* block */)a0;
- (oneway void)imkxpc_setApplicationProperty:(unsigned long long)a0 value:(id)a1;
- (void)imkxpc_setApplicationProperty:(unsigned long long)a0 value:(id)a1 reply:(id /* block */)a2;
- (void)imkxpc_setMarkedText:(id)a0 selectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 validFlags:(unsigned long long)a3 reply:(id /* block */)a4;
- (void)imkxpc_stringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 reply:(id /* block */)a1;
- (void)imkxpc_supportsChromaticMarkedTextWithReply:(id /* block */)a0;
- (void)imkxpc_supportsProperty:(unsigned int)a0 reply:(id /* block */)a1;
- (void)imkxpc_supportsTextAttachmentInsertionWithReply:(id /* block */)a0;
- (void)imkxpc_supportsUnicodeWithReply:(id /* block */)a0;
- (void)imkxpc_terminatePalette:(id)a0 reply:(id /* block */)a1;
- (void)imkxpc_uniqueClientIdentifierStringWithReply:(id /* block */)a0;
- (oneway void)imkxpc_updateMenusDictionary:(id)a0;
- (void)imkxpc_validAttributesForMarkedTextWithReply:(id /* block */)a0;
- (void)imkxpc_viewEffectiveAppearanceNameWithReply:(id /* block */)a0;
- (void)imkxpc_viewEffectiveAppearanceWithReply:(id /* block */)a0;
- (void)imkxpc_windowEffectiveAppearanceNameWithReply:(id /* block */)a0;
- (void)imkxpc_windowEffectiveAppearanceWithReply:(id /* block */)a0;
- (void)imkxpc_windowLevelWithReply:(id /* block */)a0;
- (void)imkxpc_wouldHandleEvent:(unsigned long long)a0 reply:(id /* block */)a1;
- (id)initWithClient:(id)a0 document:(struct OpaqueTSMDocumentID { } *)a1;
- (void)inputSessionDoneSleep;
- (id)insertPlaceholderCachedWeakRef:(id)a0 forKey:(id)a1;
- (void)insertText:(id)a0 completionHandler:(id /* block */)a1;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 validFlags:(unsigned long long)a2;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 validFlags:(unsigned long long)a2 completionHandler:(id /* block */)a3;
- (void)invalidateAllPendingEvents;
- (void)invalidateClientGeometry;
- (void)ironwoodInputSessionPlaceholderWasInvalidated:(id)a0;
- (void)ironwoodInputSessionTextWasCorrected:(id)a0;
- (char)isAutomaticCapitalizationEnabled_WithAvailability:(char *)a0;
- (char)isAutomaticDashSubstitutionEnabled_WithAvailability:(char *)a0;
- (char)isAutomaticPeriodSubstitutionEnabled_WithAvailability:(char *)a0;
- (char)isAutomaticQuoteSubstitutionEnabled_WithAvailability:(char *)a0;
- (char)isAutomaticSpellingCorrectionEnabled_WithAvailability:(char *)a0;
- (char)isAutomaticTextCompletionEnabled_WithAvailability:(char *)a0;
- (char)isAutomaticTextReplacementEnabled_WithAvailability:(char *)a0;
- (char)isBottomLineInputContext;
- (char)isContinuousSpellCheckingEnabled_WithAvailability:(char *)a0;
- (char)isDictationHiliteCapableInputContext;
- (char)isGrammarCheckingEnabled_WithAvailability:(char *)a0;
- (char)isPaletteTerminated:(id)a0;
- (char)isSmartInsertDeleteEnabled_WithAvailability:(char *)a0;
- (char)isTextPlaceholderAwareInputContext;
- (void)length_withCompletionHandler:(id /* block */)a0;
- (id)markedRangeValue;
- (void)overrideKeyboardWithKeyboardNamed:(id)a0;
- (void)presentFunctionRowItemTextInputView;
- (void)presentFunctionRowItemTextInputViewWithEndpoint:(id)a0 completionHandler:(id /* block */)a1;
- (void)replyWaitCount_decrementWithLocking;
- (void)replyWaitCount_incrementWithLocking;
- (void)replyWaitCount_lockDecrement;
- (void)replyWaitCount_lockIncrement;
- (int)replyWaitCount_testWithLocking;
- (void)replyWaitCount_unlock;
- (void)resetDeferredActivateInputSessionQueuedActions;
- (void)resetDeferredActivateQueuedEvents;
- (void)selectInputMode:(id)a0;
- (void)selectedRange_withCompletionHandler:(id /* block */)a0;
- (void)sendInputSessionSessAction:(unsigned int)a0 timestamp:(double)a1 withInfo:(struct __CFDictionary { } *)a2;
- (void)sessionConnectionIsInvalid:(id)a0;
- (void)setInputMethodProperty:(unsigned long long)a0 value:(id)a1;
- (void)setMarkedText:(id)a0 selectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setMarkedText:(id)a0 selectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 completionHandler:(id /* block */)a3;
- (void)setMarkedText:(id)a0 selectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 validFlags:(unsigned long long)a3;
- (void)setMarkedText:(id)a0 selectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 validFlags:(unsigned long long)a3 completionHandler:(id /* block */)a4;
- (void)setValue:(id)a0 forTag:(unsigned int)a1;
- (id)stringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)stringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (char)supportsChromaticMarkedText;
- (char)supportsProperty:(unsigned int)a0;
- (void)terminatePalette:(id)a0;
- (void)tryCoreAttributesFromRange_CheckForSurrogateCharacter_CopyUniCharsForRangeAdjusted_wTest:(char)a0 context:(struct CoreAttributesFromRangeCompletionContext { unsigned short *x0; long long x1; unsigned short *x2; long long x3; long long x4; struct _NSRange { unsigned long long x0; unsigned long long x1; } x5; struct _NSRange { unsigned long long x0; unsigned long long x1; } x6; int x7; id x8; long long x9; struct { long long x0; long long x1; } x10; struct { long long x0; long long x1; } x11; struct _NSRange { unsigned long long x0; unsigned long long x1; } x12; struct OpaqueEventRef *x13; long long x14; long long x15; char x16; char x17; char x18; } *)a1 initialBlock:(id /* block */)a2 continuationBlock:(id /* block */)a3;
- (void)tryCoreAttributesFromRange_CheckForSurrogateCharacter_GetDocLength_CopyUniCharsForRangeAdjusted_wTest:(char)a0 context:(struct CoreAttributesFromRangeCompletionContext { unsigned short *x0; long long x1; unsigned short *x2; long long x3; long long x4; struct _NSRange { unsigned long long x0; unsigned long long x1; } x5; struct _NSRange { unsigned long long x0; unsigned long long x1; } x6; int x7; id x8; long long x9; struct { long long x0; long long x1; } x10; struct { long long x0; long long x1; } x11; struct _NSRange { unsigned long long x0; unsigned long long x1; } x12; struct OpaqueEventRef *x13; long long x14; long long x15; char x16; char x17; char x18; } *)a1 nextDispatchTest:(id /* block */)a2 initialBlock:(id /* block */)a3 continuationBlock:(id /* block */)a4;
- (void)tryHandleEventSwitchedInputMode:(struct OpaqueEventRef { } *)a0 eventWasHandled:(char)a1 continuationHandler:(id /* block */)a2;
- (void)tryHandleEvent_GetOffsetAndLocationForMouseEvent__withDispatchCondition:(id /* block */)a0 initialization:(id /* block */)a1 dispatchWork:(id /* block */)a2 postEventCompletion:(id /* block */)a3 continuationHandler:(id /* block */)a4;
- (void)tryHandleEvent_commitOnMouseDown_withDispatchCondition:(id /* block */)a0 dispatchWork:(id /* block */)a1 continuation:(id /* block */)a2;
- (void)tryUpdateIMKMarkedRange_withDispatchCondition:(id /* block */)a0 dispatchWork:(id /* block */)a1 continuation:(id /* block */)a2;
- (id)uniqueClientIdentifierString;
- (void)unmarkTextInClient;
- (id)valueForTag:(unsigned int)a0;
- (id)valueForTag:(unsigned int)a0 completionHandler:(id /* block */)a1;
- (id)viewEffectiveAppearance;
- (void)whileAwaitingReplyPerformActions:(id /* block */)a0;
- (id)windowEffectiveAppearance;

@end

@class IMKTextDocument, NSMutableSet, NSNumber, IMKTextDocumentTraits;
@protocol IMKTextInput;

@interface IMKTextDocumentTextInputAdaptor : IMKAbstractTextDocument

@property (readonly, nonatomic) NSMutableSet *unreliableApps;
@property (nonatomic) struct { char insertTextUnreliable; char selectedRangeUnreliable; } textInputReliability;
@property (nonatomic) struct { char insertTextUnreliable; char selectedRangeUnreliable; } textInputReliabilityChecked;
@property (readonly, nonatomic) IMKTextDocument *cache;
@property (retain, nonatomic) NSNumber *cacheStartPosition;
@property (nonatomic) char hasMoreTextBeforeCache;
@property (nonatomic) char hasMoreTextAfterCache;
@property (readonly, nonatomic) unsigned long long cursorPosition;
@property (readonly, nonatomic) unsigned long long composingTextStartPosition;
@property (readonly, nonatomic) unsigned long long composingTextEndPosition;
@property (nonatomic, getter=isEditingInternally) char editingInternally;
@property (nonatomic) char hasChanges;
@property (nonatomic) char hasComposingTextChanges;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } composingTextRangeInTextInput;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } composingTextAndSelectedTextRangeUnionInTextInput;
@property (nonatomic) unsigned long long dereferenceCount;
@property (readonly, nonatomic) IMKTextDocumentTraits *clientTraits;
@property (readonly, weak, nonatomic) id<IMKTextInput> textInput;
@property (nonatomic) char showsComposingTextAsMarkedText;
@property (readonly, nonatomic) char alwaysShowsComposingTextAsMarkedText;
@property (copy, nonatomic) id /* block */ willInvalidateCacheBlock;
@property (copy, nonatomic) id /* block */ didInvalidateCacheBlock;
@property (nonatomic, getter=isRecomposing) char recomposing;
@property (nonatomic) char allowClientQueries;

+ (id)appsWithUnreliableTextInputImplementation;

- (void)dealloc;
- (id)description;
- (id)init;
- (void).cxx_destruct;
- (void)invalidateCache;
- (void)_invalidateCache;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (char)hasSelection;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (id)selectedText;
- (id)traits;
- (void)commitChanges;
- (id)initWithTraits:(id)a0;
- (void)endEdit;
- (void)_alignCursorInTextInput;
- (void)_deleteTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)_ensureCacheHasUpTo:(long long)a0 charactersRelativeTo:(long long)a1;
- (char)_invalidateCachePreservingComposingText:(char)a0;
- (char)_isCachePositionKnown;
- (char)_isComposingTextPositionKnown;
- (char)_isCursorPositionKnown;
- (unsigned long long)_moveCursorInComposingTextBy:(long long)a0;
- (unsigned long long)_moveCursorInDocumentBy:(unsigned long long)a0;
- (void)_moveCursorToTheEndOf:(id)a0 containedIn:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (char)_numberOfCharactersIsBounded:(long long)a0;
- (long long)_pointsOutsideOfCompsitionWhenMovingCursor:(long long)a0;
- (char)_shouldCommitCompositionBeforeMovingCursorBy:(long long)a0;
- (id)_substringFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (id)_text:(id)a0 alignedInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 error:(id *)a2;
- (void)addAppWithUnreliableTextInputImplementation:(id)a0;
- (void)beginEdit;
- (id)characters:(unsigned long long)a0 after:(long long)a1 untilCharacterFromSet:(id)a2;
- (id)characters:(unsigned long long)a0 before:(long long)a1 untilCharacterFromSet:(id)a2;
- (void)commitComposingText;
- (id)composingText;
- (unsigned long long)deleteCharacters:(unsigned long long)a0 after:(long long)a1;
- (unsigned long long)deleteCharacters:(unsigned long long)a0 before:(long long)a1;
- (id)initWithTextInputToAdapt:(id)a0;
- (id)initWithTextInputToAdapt:(id)a0 traits:(id)a1;
- (id)initWithTextInputToAdapt:(id)a0 traits:(id)a1 candidateMenu:(id)a2;
- (id)initWithTextInputToAdapt:(id)a0 traits:(id)a1 candidateMenu:(id)a2 alwaysShowsComposingTextAsMarkedText:(char)a3;
- (id)initWithTextInputToAdapt:(id)a0 traits:(id)a1 candidateMenu:(id)a2 unreliableTextInputApps:(id)a3;
- (id)initWithTextInputToAdapt:(id)a0 traits:(id)a1 candidateMenu:(id)a2 unreliableTextInputApps:(id)a3 alwaysShowsComposingTextAsMarkedText:(char)a4;
- (id)initWithTextInputToAdapt:(id)a0 unreliableTextInputApps:(id)a1;
- (void)insertCharacters:(id)a0 after:(long long)a1;
- (void)insertCharacters:(id)a0 before:(long long)a1;
- (void)insertCharactersAtCursor:(id)a0;
- (char)isAppTextInputImplementationUnreliable:(id)a0;
- (unsigned long long)moveCursorByCharacterCount:(long long)a0;
- (id)recomposeCharacters:(unsigned long long)a0 after:(long long)a1 untilCharacterFromSet:(id)a2;
- (id)recomposeCharacters:(unsigned long long)a0 before:(long long)a1 untilCharacterFromSet:(id)a2;
- (void)replaceCharactersAtCursor:(unsigned long long)a0 withCharacters:(id)a1;
- (void)setComposingText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (char)syncCacheWithAdaptedTextInput;

@end

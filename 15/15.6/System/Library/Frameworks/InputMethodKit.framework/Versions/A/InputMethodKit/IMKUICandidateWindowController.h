@class NSMutableDictionary, NSURL, IMKUICandidateSortingBarView, IMKUIPanelMask, IMKCandidate, NSAppearance, NSString, IMKUICandidateLayoutTraits, IMKCandidatePopoverController, IMKUICandidateItemLayout, NSArray, NSView, IMKUIPanel, IMKCandidateListDictionary;
@protocol IMKUICandidateControllerDelegate;

@interface IMKUICandidateWindowController : NSWindowController <IMKUIAbstractCandidateController, IMKUICandidateItemViewHandling, IMKUICandidateLayoutDelegate, IMKUICandidateListViewState, IMKUICandidateSortingBarDelegate, IMKUICandidateAccessibilityDelegate, IMKUICandidateAccessibilityTarget> {
    struct __IDXIndex { } *_definitionIndexRef;
}

@property (retain, nonatomic) NSArray *accessibilityItems;
@property (readonly, nonatomic) NSArray *accessibilityVisibleItems;
@property (retain, nonatomic) NSMutableDictionary *candidateToAccessibilityItemMapping;
@property (retain, nonatomic) NSMutableDictionary *candidateToCandidateItemCache;
@property (retain, nonatomic) IMKCandidatePopoverController *popoverController;
@property (retain, nonatomic) NSMutableDictionary *selectionKeyToCandidateCache;
@property (retain, nonatomic) NSAppearance *appearance;
@property (nonatomic) char allowImplicitAnimations;
@property (retain, nonatomic) NSView *backgroundView;
@property (nonatomic) char cachesItems;
@property (nonatomic) char cachesViews;
@property (nonatomic) struct CGSize { double width; double height; } defaultCellSize;
@property (nonatomic) struct __DCSDictionary { } *definitionDictionary;
@property (nonatomic) unsigned long long numberOfFixedWidthCandidates;
@property (retain, nonatomic) NSView *informationView;
@property (readonly, nonatomic, getter=isFlipped) char flipped;
@property (nonatomic) char isScrubber;
@property (retain, nonatomic) IMKUICandidateItemLayout *itemLayout;
@property (retain, nonatomic) NSMutableDictionary *itemToItemViewCache;
@property (nonatomic) char isUsingIncrementalSearch;
@property (nonatomic) long long movementStyle;
@property (copy, nonatomic) NSString *noCandidatesMessage;
@property (retain, nonatomic) IMKUICandidateLayoutTraits *layoutTraits;
@property (retain, nonatomic) IMKUIPanelMask *panelMask;
@property (copy, nonatomic) NSString *selectedSortingMode;
@property (retain, nonatomic) IMKCandidate *selectedCandidate;
@property (nonatomic) long long selectionKeyAlignment;
@property (nonatomic) char singleClickCommitsCandidate;
@property (retain, nonatomic) IMKUICandidateSortingBarView *sortingBarView;
@property (retain, nonatomic) NSArray *selectionKeys;
@property (readonly, nonatomic) char showsGroups;
@property (retain, nonatomic) NSArray *sortingModes;
@property (retain, nonatomic) NSURL *styleSheetURL;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } textFrameForWindowPositioning;
@property (nonatomic) unsigned long long topVisibleLine;
@property (nonatomic) unsigned long long truncatedNumberOfCandidates;
@property (nonatomic) Class UICandidateClass;
@property (readonly, nonatomic) IMKUIPanel *window;
@property (nonatomic) unsigned long long windowLevel;
@property (nonatomic) char windowShouldAdjustToTotalCandidateSize;
@property (nonatomic) char windowSizeCanShrink;
@property (retain, nonatomic) IMKCandidateListDictionary *candidateGroups;
@property (weak, nonatomic) id<IMKUICandidateControllerDelegate> delegate;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (id)identifier;
- (void)pageUp:(id)a0;
- (void)elementPressed:(id)a0;
- (void)moveUp:(id)a0;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (long long)accessibilityOrientation;
- (void)hide;
- (void)keyDown:(id)a0;
- (void)loadWindow;
- (void)moveBackward:(id)a0;
- (void)moveDown:(id)a0;
- (void)moveForward:(id)a0;
- (void)moveLeft:(id)a0;
- (void)moveRight:(id)a0;
- (void)moveToBeginningOfDocument:(id)a0;
- (void)moveToEndOfDocument:(id)a0;
- (void)pageDown:(id)a0;
- (id)parentView;
- (id)selectedCandidateAccessibilityElement;
- (void)setSelectedIndex:(unsigned long long)a0;
- (void)showCandidates;
- (void)updateLayout;
- (void)updateVisualElements;
- (void)updateWindowVisibility;
- (id)visibleCandidates;
- (unsigned long long)firstLine;
- (void)keyPressed:(id)a0;
- (void)clearPasteboard;
- (void)elementQueried:(id)a0;
- (void)updateWindowFrameWithAnimation:(char)a0;
- (void)moveToBeginning;
- (struct CGPoint { double x0; double x1; })preferredWindowPositionForSize:(struct CGSize { double x0; double x1; })a0;
- (id)accessibilityElementForCandidate:(id)a0;
- (void)addCandidatesToPasteboard;
- (id)allCandidateAccessibilityElements;
- (id)appearanceView;
- (id)candidateItemForCandidate:(id)a0 layout:(id)a1;
- (id)candidatesSelectableByKeyboard;
- (void)didRemoveFromSuperview:(id)a0;
- (void)didSelectSortingMethodAtIndex:(unsigned long long)a0;
- (void)didShowCandidates;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForAccessibilityElement:(id)a0;
- (void)itemViewClicked:(id)a0 clickCount:(unsigned long long)a1;
- (void)moveAccessibilityElementToVisibleArea:(id)a0;
- (void)moveBackwardOneElement;
- (void)moveBackwardOneLine;
- (void)moveBackwardOnePage;
- (void)moveForwardOneElement;
- (void)moveForwardOneLine;
- (void)moveForwardOnePage;
- (void)moveToEnd;
- (id)panelMaskWithRoundedButtonForSize:(struct CGSize { double x0; double x1; })a0;
- (id)panelMaskWithStandardRoundingForSize:(struct CGSize { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })preferredContentFrameForWindowWithSize:(struct CGSize { double x0; double x1; })a0;
- (struct CGSize { double x0; double x1; })preferredSizeForItem:(id)a0 layout:(id)a1;
- (struct CGSize { double x0; double x1; })preferredSizeForItem:(id)a0 layout:(id)a1 itemLayout:(id)a2;
- (struct CGSize { double x0; double x1; })preferredWindowSize;
- (struct CGSize { double x0; double x1; })recommendedWindowSize;
- (void)resetSelectionKeys;
- (void)selectNextSortingMode;
- (void)selectPreviousSortingMode;
- (id)selectedCandidateForProposedCandidate:(id)a0;
- (void)setSelectedCandidate:(id)a0 setByVoiceOver:(char)a1;
- (void)setSelectedSortingMode:(id)a0 userInitiated:(char)a1;
- (void)setSelectionKey:(id)a0 forItemView:(id)a1;
- (void)updateAppearanceView;
- (void)updateLayoutTraits;
- (void)updateMaskImageBasedOnPositioning:(id)a0;
- (void)updatePanelMaskForSize:(struct CGSize { double x0; double x1; })a0 finalSize:(struct CGSize { double x0; double x1; })a1;
- (void)updateVisualSelection:(char)a0 forCandidate:(id)a1;
- (void)updateWindowFrame;
- (id)viewForCandidateItem:(id)a0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)visibleCandidateAccessibilityElements;
- (void)visibleIndicesChanged:(id)a0 sender:(id)a1;
- (id)visibleSelectionKeys;
- (void)willShowCandidates;

@end

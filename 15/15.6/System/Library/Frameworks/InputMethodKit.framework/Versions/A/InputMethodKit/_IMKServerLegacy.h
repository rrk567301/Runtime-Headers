@class _IMKServerPrivateLegacy;

@interface _IMKServerLegacy : NSObject <IMKServerProxy> {
    _IMKServerPrivateLegacy *_private;
}

+ (void)initialize;
+ (struct __CFString { } *)privateRunLoopMode;
+ (id)_clientWrapperForDOProxy:(id)a0;
+ (id)_clientWrapperForXPCConn:(id)a0;
+ (id)imkServerSingleton;
+ (id)inputControllerClassNameFor:(id)a0;
+ (id)inputDelegateClassNameFor:(id)a0;
+ (char)sendsTouchBarCandidatesToApp;

- (void)dealloc;
- (char)listener:(id)a0 shouldAcceptNewConnection:(id)a1;
- (id)bundle;
- (double)replyTimeout;
- (struct __CFString { } *)privateRunLoopMode;
- (void)_handleCommand:(SEL)a0;
- (id)_currentClient;
- (void)_handleText:(id)a0;
- (void)_invalidateConnectionsAsNecessary:(id)a0;
- (void)doCommandBySelector:(SEL)a0;
- (void)insertText:(id)a0;
- (id)keyBindingManager;
- (void)activateServer:(id)a0;
- (void)modesWithReply:(id /* block */)a0;
- (oneway void)sessionFinished;
- (char)_isPalette;
- (oneway void)activateServer;
- (void)activateServerWithReply:(id /* block */)a0;
- (oneway void)commitComposition;
- (void)commitComposition:(id)a0;
- (oneway void)commitCompositionWithDiscardMarkedTextFlag:(char)a0;
- (void)commitCompositionWithReply:(id /* block */)a0;
- (oneway void)deactivateServer;
- (void)deactivateServer:(id)a0;
- (void)deactivateServerWithReply:(id /* block */)a0;
- (char)didCommandBySelector:(SEL)a0 client:(id)a1;
- (void)didCommandBySelector:(SEL)a0 reply:(id /* block */)a1;
- (oneway void)doCommandBySelector:(SEL)a0 commandDictionary:(id)a1;
- (void)doCommandBySelector:(SEL)a0 commandDictionary:(id)a1 client:(id)a2;
- (void)doCommandBySelector:(SEL)a0 commandDictionary:(id)a1 reply:(id /* block */)a2;
- (void)handleEvent:(bycopy id)a0 characterIndex:(unsigned long long)a1 edge:(unsigned long long)a2 asyncClient:(char)a3 reply:(id /* block */)a4;
- (char)handleEvent:(bycopy id)a0 characterIndex:(unsigned long long)a1 edge:(unsigned long long)a2 client:(id)a3;
- (void)handleEvent:(bycopy id)a0 characterIndex:(unsigned long long)a1 edge:(unsigned long long)a2 reply:(id /* block */)a3;
- (oneway void)hidePalettes;
- (void)hidePalettes:(id)a0;
- (oneway void)invalidateClientGeometry;
- (void)invalidateClientGeometry:(id)a0;
- (oneway void)ironwoodPlaceholderWasInvalidated:(id)a0;
- (void)ironwoodPlaceholderWasInvalidated:(id)a0 client:(id)a1;
- (oneway void)ironwoodTextWasCorrected:(id)a0;
- (void)ironwoodTextWasCorrected:(id)a0 client:(id)a1;
- (id)menusDictionary:(id)a0;
- (void)menusDictionaryWithClientAsync:(char)a0 reply:(id /* block */)a1;
- (void)menusDictionaryWithReply:(id /* block */)a0;
- (id)modes:(id)a0;
- (void)modesWithClientAsync:(char)a0 reply:(id /* block */)a1;
- (unsigned long long)recognizedEvents:(id)a0;
- (void)recognizedEventsWithClientAsync:(char)a0 reply:(id /* block */)a1;
- (void)recognizedEventsWithReply:(id /* block */)a0;
- (void)replyWaitCount_decrementWithLocking;
- (void)replyWaitCount_incrementWithLocking;
- (void)replyWaitCount_lockDecrement;
- (void)replyWaitCount_lockIncrement;
- (int)replyWaitCount_testWithLocking;
- (void)replyWaitCount_unlock;
- (oneway void)sendInputSessionSessAction:(unsigned int)a0;
- (void)sendInputSessionSessAction:(unsigned int)a0 client:(id)a1;
- (oneway void)sendInputSessionSessAction:(unsigned int)a0 timestamp:(double)a1 withInfo:(id)a2;
- (void)sendInputSessionSessAction:(unsigned int)a0 timestamp:(double)a1 withInfo:(id)a2 client:(id)a3;
- (void)sessionFinished:(id)a0;
- (void)setInputMethodProperty:(unsigned long long)a0 value:(id)a1;
- (oneway void)setValue:(id)a0 forTag:(unsigned long long)a1;
- (void)setValue:(id)a0 forTag:(unsigned long long)a1 client:(id)a2;
- (void)setValue:(id)a0 forTag:(unsigned long long)a1 reply:(id /* block */)a2;
- (void)valueForTag:(unsigned long long)a0 asyncClient:(char)a1 reply:(id /* block */)a2;
- (id)valueForTag:(unsigned long long)a0 client:(id)a1;
- (void)valueForTag:(unsigned long long)a0 reply:(id /* block */)a1;
- (void)viewServiceEndpointWithClientAsync:(char)a0 reply:(id /* block */)a1;
- (id)initWithName:(id)a0 bundleIdentifier:(id)a1;
- (char)_createConnection;
- (void)_rememberKeyboardType:(id)a0 inClient:(id)a1;
- (void)_sendKeyToView:(unsigned short)a0;
- (void)_setCachedMenu:(id)a0;
- (id)IMBundleIdentifier;
- (id)_attributedStringFromEventPack:(id)a0;
- (id)keyboardService;
- (id)_IMKCandidates;
- (id)_actionsFromMenu:(id)a0;
- (struct CGPoint { double x0; double x1; })_breakDownMouseEvent:(id)a0 theModifiers:(unsigned long long *)a1;
- (id)_controllerForClientDOProxy:(id)a0;
- (id)_controllerForClientProxy:(id)a0 withDictKey:(id)a1;
- (id)_controllerForClientXPCConn:(id)a0;
- (id)_copySynchronizedActions:(id)a0 withMenuItems:(id)a1;
- (id)_currentClientWrapper;
- (id)_currentController;
- (id)_currentIMKEvent;
- (id)_currentPresentingController;
- (id)_eventRefToNSEvent:(id)a0 repeat:(char)a1;
- (id)_eventsForController:(id)a0;
- (void)_forgetValidEventsInClient:(id)a0;
- (id)_getModeDictionary;
- (id)_getStringForKeyCode:(unsigned int *)a0 andModifiers:(unsigned long long *)a1 unmodifiedString:(id *)a2 fromEventPackage:(id)a3;
- (void)_hideWindow;
- (char)_insertTextForEvent:(id)a0;
- (char)_isMenuKeyEquivalent:(id)a0 modifierMask:(unsigned long long)a1;
- (char)_isValidKeyForCandidateView:(id)a0;
- (id)_keyBindings;
- (id)_mapClientDOProxyToController:(id)a0;
- (id)_mapClientXPCConnToController:(id)a0;
- (id)_menuActions:(id)a0;
- (id)_preferences;
- (id)_presentingClientWrapper;
- (unsigned short)_remapKeyEventForCandidateKeylayout:(unsigned short)a0;
- (void)_rememberValidEvent:(id)a0 fromEventPack:(id)a1 inClient:(id)a2;
- (id)_searchSubMenus:(id)a0 forTitle:(id)a1;
- (void)_sendKey:(id)a0;
- (char)_serverGetsFirstShotAtWindowEvents;
- (void)_setCurrentClientWrapper:(id)a0;
- (void)_setCurrentController:(id)a0;
- (void)_setCurrentIMKEvent:(id)a0;
- (void)_setEvents:(id)a0 forController:(id)a1;
- (void)_setIMKCandidates:(id)a0;
- (void)_setMouseMovedState:(char)a0 forClient:(id)a1 controller:(id)a2;
- (void)_setPresentingClientWrapper:(id)a0;
- (char)_windowIsOpen;
- (void)activateServer_CommonWithClientWrapper:(id)a0 controller:(id)a1;
- (void)clientProxy:(id)a0;
- (void)commitComposition_CommonWithClientWrapper:(id)a0 controller:(id)a1;
- (void)deactivateServer_CommonWithClientWrapper:(id)a0 controller:(id)a1;
- (char)didCommandBySelector:(SEL)a0 withObject:(id)a1;
- (char)didCommandBySelector_Common:(SEL)a0 clientWrapper:(id)a1 controller:(id)a2;
- (void)doCommandBySelector_Common:(SEL)a0 commandDictionary:(id)a1 clientWrapper:(id)a2 controller:(id)a3;
- (void)endpointCheckinRequestedFromLaunchAgent:(id)a0;
- (id)functionRowItemViewServiceXPCEndpoint;
- (char)handleEvent_Common:(id)a0 characterIndex:(unsigned long long)a1 edge:(unsigned long long)a2 clientWrapper:(id)a3 controller:(id)a4;
- (void)hidePalettes_CommonWithController:(id)a0;
- (id)higherRunLoopInvocation;
- (id)initWithName:(id)a0 controllerClass:(Class)a1 delegateClass:(Class)a2;
- (void)invalidateClientGeometry_CommonWithController:(id)a0;
- (void)ironwoodPlaceholderWasInvalidated_Common:(id)a0 clientWrapper:(id)a1 controller:(id)a2;
- (void)ironwoodTextWasCorrected_Common:(id)a0 clientWrapper:(id)a1 controller:(id)a2;
- (char)lastKeyEventWasDeadKey;
- (id)menusDictionary_CommonWithController:(id)a0;
- (id)modes_CommonWithClientWrapper:(id)a0 controller:(id)a1;
- (id)newKeyBindings;
- (char)paletteWillTerminate;
- (void)performDelayedEndpointCheckin:(id)a0;
- (void)popRunLoopInvocation;
- (void)pushRunLoopInvocation:(id)a0;
- (unsigned long long)recognizedEvents_CommonWithClientWrapper:(id)a0 controller:(id)a1;
- (void)registerConnectionAfterDidFinishLaunch:(id)a0;
- (void)registerIMKXPCEndpointWithLaunchAgent;
- (void)releasePAHController:(id)a0;
- (void)sendInputSessionSessAction_Common:(unsigned int)a0 clientWrapper:(id)a1 controller:(id)a2;
- (void)sendInputSessionSessAction_Common:(unsigned int)a0 timestamp:(double)a1 withInfo:(id)a2 clientWrapper:(id)a3 controller:(id)a4;
- (void)sessionFinished_CommonWithClientWrapper:(id)a0 controller:(id)a1;
- (void)setEventHandlingStatus:(int)a0;
- (void)setFunctionRowItemViewServiceXPCEndpoint:(id)a0;
- (void)setValue_Common:(id)a0 forTag:(unsigned long long)a1 clientWrapper:(id)a2 controller:(id)a3;
- (id)tailRunLoopInvocation;
- (id)textInputFor:(id)a0;
- (id)valueForTag_Common:(unsigned long long)a0 clientWrapper:(id)a1 controller:(id)a2;

@end

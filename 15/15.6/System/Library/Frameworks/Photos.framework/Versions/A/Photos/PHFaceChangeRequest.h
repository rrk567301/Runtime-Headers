@class PHObjectPlaceholder, PHFaceprint, NSString, NSURL, NSMutableArray, NSManagedObjectID;
@protocol PLChangesForServiceHandling;

@interface PHFaceChangeRequest : PHChangeRequest <PHInsertChangeRequest, PHUpdateChangeRequest> {
    PHFaceprint *_faceprint;
    char _didSetFaceprint;
    NSMutableArray *_detectionTraits;
    char _didSetDetectionTraits;
    NSString *_associatedPersonUUID;
    char _didSetAssociatedPersonUUID;
    NSString *_gazeRectString;
    char _didSetGazeRect;
    int _nameSource;
    char _didSetNameSource;
}

@property (nonatomic) char shouldClearFaceCropGenerationState;
@property (copy, nonatomic) NSURL *associatedPersonLibraryURL;
@property (readonly, nonatomic) PHObjectPlaceholder *placeholderForCreatedFace;
@property (nonatomic) double size;
@property (nonatomic) double centerX;
@property (nonatomic) double centerY;
@property (nonatomic) double bodyCenterX;
@property (nonatomic) double bodyCenterY;
@property (nonatomic) double bodyWidth;
@property (nonatomic) double bodyHeight;
@property (nonatomic) short detectionType;
@property (nonatomic) long long sourceWidth;
@property (nonatomic) long long sourceHeight;
@property (nonatomic) double roll;
@property (nonatomic) char isInVIPModel;
@property (nonatomic, getter=isHidden) char hidden;
@property (nonatomic, getter=isInTrash) char inTrash;
@property (nonatomic) char manual;
@property (nonatomic) char hasSmile;
@property (nonatomic) double blurScore;
@property (nonatomic, getter=isLeftEyeClosed) char leftEyeClosed;
@property (nonatomic, getter=isRightEyeClosed) char rightEyeClosed;
@property (copy, nonatomic) id adjustmentVersion;
@property (nonatomic) long long nameSource;
@property (nonatomic) long long faceAlgorithmVersion;
@property (nonatomic) double poseYaw;
@property (retain, nonatomic) PHFaceprint *faceprint;
@property (nonatomic) long long clusterSequenceNumber;
@property (nonatomic) long long qualityMeasure;
@property (nonatomic) double quality;
@property (nonatomic) long long vuObservationID;
@property (nonatomic) unsigned short ageType;
@property (nonatomic) unsigned short sexType;
@property (nonatomic) unsigned short eyesState;
@property (nonatomic) unsigned short smileType;
@property (nonatomic) unsigned short facialHairType;
@property (nonatomic) unsigned short hairColorType;
@property (nonatomic) unsigned short glassesType;
@property (nonatomic) unsigned short eyeMakeupType;
@property (nonatomic) unsigned short lipMakeupType;
@property (nonatomic) unsigned short faceExpressionType;
@property (nonatomic) unsigned short headgearType;
@property (nonatomic) unsigned short hairType;
@property (nonatomic) unsigned short poseType;
@property (nonatomic) unsigned short skintoneType;
@property (nonatomic) unsigned short ethnicityType;
@property (nonatomic) char hasFaceMask;
@property (nonatomic) unsigned short gazeType;
@property (nonatomic) double gazeCenterX;
@property (nonatomic) double gazeCenterY;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } gazeRect;
@property (nonatomic) float gazeAngle;
@property (nonatomic) float gazeConfidence;
@property (nonatomic) double startTime;
@property (nonatomic) double duration;
@property (retain, nonatomic) NSString *groupingIdentifier;
@property (readonly) char isNewRequest;
@property (readonly, getter=isMutated) char mutated;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) id<PLChangesForServiceHandling> changesForServiceHandler;
@property (readonly, nonatomic) NSString *changeTypeForSummary;
@property (readonly, nonatomic) long long accessScopeOptionsRequirement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *managedEntityName;
@property (readonly, nonatomic, getter=isClientEntitled) char clientEntitled;
@property (readonly, nonatomic) NSString *clientName;
@property (readonly, nonatomic) NSString *clientBundleID;
@property (nonatomic) char shouldPerformConcurrentWork;

+ (id)changeRequestForFace:(id)a0;
+ (id)creationRequestForFace;
+ (void)deleteFaces:(id)a0;

- (void).cxx_destruct;
- (char)_associateFace:(id)a0 withPersonInPhotoLibrary:(id)a1 error:(id *)a2;
- (id)_copyPersonWithPersonUUID:(id)a0 toLibrary:(id)a1 error:(id *)a2;
- (char)applyMutationsToManagedObject:(id)a0 photoLibrary:(id)a1 error:(id *)a2;
- (void)associateFaceWithPersonUUID:(id)a0;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)a0 error:(id *)a1;
- (void)encodeToXPCDict:(id)a0;
- (id)initForNewObject;
- (id)initWithUUID:(id)a0 objectID:(id)a1;
- (id)initWithXPCDict:(id)a0 request:(id)a1 clientAuthorization:(id)a2;
- (void)setDetectionTraits:(id)a0;
- (char)validateInsertIntoPhotoLibrary:(id)a0 error:(id *)a1;
- (char)validateMutationsToManagedObject:(id)a0 error:(id *)a1;

@end

@class NSString, NSArray, NSData, NSUUID, NSNumber, NSHashTable;

@interface CBClassicPeer : CBPeer

@property (nonatomic) unsigned char deviceType;
@property (nonatomic) unsigned short productID;
@property (nonatomic) unsigned short vendorID;
@property (nonatomic) unsigned short vendorIDSource;
@property (nonatomic) unsigned short version;
@property (nonatomic) char isDevFused;
@property (nonatomic) unsigned char colorID;
@property (copy, nonatomic) NSString *appleModelIdentifier;
@property (nonatomic) char isConnectedOverUSB;
@property (nonatomic) char isAppleAccessoryServer;
@property (retain, nonatomic) NSArray *syncGroups;
@property (nonatomic) unsigned short syncSettings;
@property (nonatomic) unsigned char batteryPercentSingle;
@property (nonatomic) unsigned char batteryPercentLeft;
@property (nonatomic) unsigned char batteryPercentRight;
@property (nonatomic) unsigned char batteryPercentCase;
@property (nonatomic) unsigned char batteryPercentCombined;
@property (nonatomic) char panEnabled;
@property (nonatomic) char browsingEnabled;
@property (nonatomic) char objectPushEnabled;
@property (nonatomic) unsigned char listeningMode;
@property (nonatomic) unsigned int listeningModeConfigs;
@property (nonatomic) char LRDetectionEnabled;
@property (nonatomic) char EQConfigEnabled;
@property (nonatomic) unsigned char EQConfigTreble;
@property (nonatomic) unsigned char EQConfigMid;
@property (nonatomic) unsigned char EQConfigBass;
@property (nonatomic) char autoAnswerCalls;
@property (nonatomic) unsigned char crownRotationDirection;
@property (nonatomic) unsigned char singleClickMode;
@property (nonatomic) unsigned char doubleClickMode;
@property (nonatomic) unsigned char clickHoldModeLeft;
@property (nonatomic) unsigned char clickHoldModeRight;
@property (nonatomic) unsigned int doubleClickInterval;
@property (nonatomic) unsigned int clickHoldInterval;
@property (nonatomic) unsigned char oneBudANCMode;
@property (nonatomic) unsigned char switchControlMode;
@property (nonatomic) unsigned short doubleTapAction;
@property (nonatomic) unsigned short doubleTapActionLeft;
@property (nonatomic) unsigned short doubleTapActionRight;
@property (nonatomic) unsigned char doubleTapCapability;
@property (nonatomic) unsigned char micMode;
@property (nonatomic) char inEarDetectionEnabled;
@property (nonatomic) char smartRoutingSupported;
@property (nonatomic) unsigned char smartRoutingEnabled;
@property (nonatomic) char remoteTimeSyncEnabled;
@property (nonatomic) unsigned char primaryInEarStatus;
@property (nonatomic) unsigned char secondaryInEarStatus;
@property (retain, nonatomic) NSArray *services;
@property (retain, nonatomic) NSData *sdpRecordData;
@property (retain, nonatomic) NSData *aacpCapabilityBits;
@property (nonatomic) unsigned int appleFeatureBitMask;
@property (nonatomic) unsigned long long appleExtendedFeatureBitMask;
@property (retain, nonatomic) NSUUID *trustedUID;
@property (retain, nonatomic) NSString *serialNumber;
@property (retain, nonatomic) NSNumber *RSSI;
@property (retain, nonatomic) NSHashTable *L2CAPChannels;
@property (retain, nonatomic) NSHashTable *RFCOMMChannels;
@property (nonatomic) char isIncoming;
@property (nonatomic) long long state;
@property (nonatomic) long long internalState;
@property (nonatomic) unsigned short connectionHandle;
@property (copy, nonatomic) NSString *addressString;
@property (nonatomic) unsigned char modeSupported;
@property (nonatomic) char traceLogging;
@property (copy, nonatomic) NSString *name;
@property (copy) id /* block */ connectL2CAPCallback;
@property (copy) id /* block */ disconnectL2CAPCallback;
@property (copy) id /* block */ connectRFCOMMCallback;
@property (copy) id /* block */ disconnectRFCOMMCallback;

- (void)dealloc;
- (id)description;
- (unsigned long long)hash;
- (void).cxx_destruct;
- (void)openL2CAPChannel:(unsigned short)a0;
- (void)closeL2CAPChannel:(unsigned short)a0;
- (void)closeRFCOMMChannel:(unsigned char)a0;
- (char)isAppleDevice;
- (char)isAppleFeatureSupported:(unsigned int)a0;
- (char)isGameController;
- (char)isMac;
- (char)isMultiBatteryDevice;
- (char)isNintendoGameController;
- (char)isSonyGameController;
- (char)isXboxGameController;
- (char)isiPad;
- (char)isiPhone;
- (void)openRFCOMMChannel:(unsigned char)a0;
- (id)channelWithPSM:(unsigned short)a0;
- (void)handleMsg:(int)a0 args:(id)a1;
- (id)importServices:(id)a0;
- (void)sendMsg:(int)a0 requiresConnected:(char)a1 args:(id)a2;
- (id)channelWithID:(unsigned char)a0;
- (void)configureRFCOMMPortParams:(id)a0;
- (unsigned int)getConnectedServices;
- (void)handleDisconnection;
- (void)handleFailedConnection;
- (void)handleGetPeerState:(id)a0;
- (void)handleL2CAPChannelClosed:(id)a0;
- (void)handleL2CAPChannelOpened:(id)a0;
- (void)handlePeerUpdated:(id)a0;
- (void)handleRFCOMMChannelClosed:(id)a0;
- (void)handleRFCOMMChannelOpened:(id)a0;
- (void)handleSuccessfulConnection:(id)a0;
- (id)initWithInfo:(id)a0 manager:(id)a1;
- (char)isAACPCapabilityBit:(unsigned int)a0;
- (char)isRFCOMMServiceSupported:(id)a0;
- (char)isReportingBatteryPercent;
- (char)isServiceSupported:(id)a0;
- (void)openRFCOMMChannel:(unsigned char)a0 options:(id)a1;
- (unsigned short)psmForService:(id)a0;
- (unsigned char)rfcommChannelIDForService:(id)a0;
- (void)sendMsg:(int)a0 args:(id)a1;
- (id)service:(id)a0;
- (id)serviceForPSM:(unsigned short)a0;
- (id)serviceForRFCOMMChannelID:(unsigned char)a0;
- (void)setOrphan;

@end

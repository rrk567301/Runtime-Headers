@class NSString, AVMicaPackage, AVRoutePickerButton, AVOutputContext, NSColor, AVCustomRoutingController, NSMutableDictionary, AVRoutePickerRemoteViewController, AVRoutePickerViewRemoteViewService, AVObservationController, AVPlayer;
@protocol AVRoutePickerViewDelegate;

@interface AVRoutePickerView : NSView <NSPopoverDelegate, AVRoutePickerViewRemoteViewControllerDelegate, NSAccessibilityButton> {
    AVObservationController *_observationController;
    AVRoutePickerButton *_pickerButton;
    AVMicaPackage *_pickerButtonMicaPackage;
    NSColor *_defaultBorderedButtonColor;
    NSColor *_defaultBorderlessButtonColor;
    NSColor *_defaultHighlightButtonColor;
    NSColor *_defaultActiveButtonColor;
    NSMutableDictionary *_pickerButtonColors;
    char _airPlayActive;
    AVRoutePickerRemoteViewController *_audioRoutesRemoteViewController;
    AVOutputContext *_outputContext;
    AVOutputContext *_defaultOutputContext;
    char _coordinatedPlaybackActive;
    double _routePickerButtonImageHorizontalInset;
    double _routePickerButtonImageVerticalInset;
    char _routeListAlwaysHasDarkAppearance;
    char _enabled;
    char _prioritizesVideoDevices;
    NSString *_outputContextID;
    char _routePickerButtonRemainsHighlightedWhileRoutesPresented;
    char _included;
    AVRoutePickerViewRemoteViewService *_routePickerViewRemoteViewService;
    char canOnlyAppearInOverflowMenu;
    char included;
    char collapsed;
}

@property (nonatomic) long long routingMethod;
@property (weak, nonatomic) id<AVRoutePickerViewDelegate> delegate;
@property (retain, nonatomic) AVPlayer *player;
@property (nonatomic, getter=isRoutePickerButtonBordered) char routePickerButtonBordered;
@property (retain, nonatomic) NSColor *activeTintColor;
@property (nonatomic) long long routePickerButtonStyle;
@property (nonatomic) char prioritizesVideoDevices;
@property (retain, nonatomic) AVCustomRoutingController *customRoutingController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dealloc;
- (void).cxx_destruct;
- (id)initWithCoder:(id)a0;
- (void)setEnabled:(char)a0;
- (char)isEnabled;
- (void)layout;
- (char)acceptsFirstResponder;
- (id)accessibilityLabel;
- (char)accessibilityPerformPress;
- (char)allowsVibrancy;
- (void)drawFocusRingMask;
- (double)firstBaselineOffsetFromTop;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })focusRingMaskBounds;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (char)isCollapsed;
- (void)keyDown:(id)a0;
- (double)lastBaselineOffsetFromBottom;
- (void)popoverDidClose:(id)a0;
- (void)popoverWillShow:(id)a0;
- (void)setCollapsed:(char)a0;
- (void)_registerNotifications;
- (void)_unregisterNotifications;
- (void)showRoutePickingControlsForOutputContext:(id)a0 relativeToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (void)setRouteListAlwaysHasDarkAppearance:(char)a0;
- (id)routePickerButtonColorForState:(long long)a0;
- (void)_outputContextDevicesDidChange:(id)a0;
- (id)outputContextID;
- (void)setCanOnlyAppearInOverflowMenu:(char)a0;
- (struct CGImage { } *)_createFocusRingMaskImage;
- (void)_createPickerButton;
- (char)_hasInvisibleAncestor;
- (char)_isAirPlayActive;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_micaLayerIconRect;
- (struct CGSize { double x0; double x1; })_micaLayerSize;
- (void)_pickerButtonPressed:(id)a0;
- (void)_presentRoutePickingPopoverForOutputContext:(id)a0 relativeToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (id)_recursivelyFindAncestorOfView:(id)a0 withAlphaValue:(double)a1;
- (void)_routePickerButtonHighlightedDidChange:(id)a0;
- (void)_setAirPlayActive:(char)a0;
- (void)_updateAirPlayActive;
- (void)_updatePickerButton;
- (void)_updatePickerButtonAppearance;
- (void)_updateRoutingMethodIfNeeded;
- (char)canOnlyAppearInOverflowMenu;
- (char)included;
- (char)isCoordinatedPlaybackActive;
- (char)routeListAlwaysHasDarkAppearance;
- (double)routePickerButtonImageHorizontalInset;
- (double)routePickerButtonImageVerticalInset;
- (char)routePickerButtonRemainsHighlightedWhileRoutesPresented;
- (void)routePickerRemoteViewController:(id)a0 viewBridgeConnectionDidFailWithError:(id)a1;
- (void)setCoordinatedPlaybackActive:(char)a0;
- (void)setIncluded:(char)a0;
- (void)setOutputContextID:(id)a0;
- (void)setRoutePickerButtonColor:(id)a0 forState:(long long)a1;
- (void)setRoutePickerButtonImageHorizontalInset:(double)a0;
- (void)setRoutePickerButtonImageVerticalInset:(double)a0;
- (void)setRoutePickerButtonRemainsHighlightedWhileRoutesPresented:(char)a0;
- (void)setRoutePickerViewService:(id)a0;

@end

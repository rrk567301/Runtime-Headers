@class _NSScrollViewLayoutHelper, _NSScrollViewContentBackgroundView, NSCursor, NSString, NSScrollingBehavior, _NSDrawingHandlerView, NSClipView, _NSScrollViewFloatingDebugView, NSArray, NSGestureRecognizer, _NSScrollViewMoreContentIndicatorView, NSRulerView, NSScrollViewMirrorView, NSColor, NSScrollerImpPair, _NSScrollViewFloatingSubviewsContainerView, NSView, _NSScrollViewRulerLineView, NSScroller, NSHashTable;
@protocol NSScrollViewDelegate;

@interface NSScrollView : NSView <NSGestureRecognizerDelegate, NSScrollViewSeparatorTrackingAdapter, NSScrollerImpPairDelegate, NSTextFinderBarContainer> {
    NSClipView *_contentView;
    NSClipView *_headerClipView;
    struct { unsigned char  : 5; unsigned char findBarPosition : 2; unsigned char predominantAxisScrolling : 1; unsigned char hContentElasticity : 2; unsigned char vContentElasticity : 2; unsigned char  : 1; unsigned char findBarVisible : 1; unsigned char autoforwardsScrollWheelEvents : 1; unsigned char autohidesScrollers : 1; unsigned char  : 2; unsigned char skipRemoveSuperviewCheck : 1; unsigned char  : 1; unsigned char needsTile : 1; unsigned char hasVerticalRuler : 1; unsigned char hasHorizontalRuler : 1; unsigned char showRulers : 1; unsigned char  : 1; unsigned char borderType : 2; unsigned char noDynamicScrolling : 1; unsigned char hScrollerStatus : 1; unsigned char vScrollerStatus : 1; unsigned char hScrollerRequired : 1; unsigned char vScrollerRequired : 1; } _sFlags;
    NSScroller *_vScroller;
    NSScroller *_hScroller;
    NSView *_cornerView;
    id _extraIvars;
    NSRulerView *_horizontalRuler;
    NSRulerView *_verticalRuler;
    double _hPageAmt;
    double _vPageAmt;
    double _hLineAmt;
    double _vLineAmt;
    double _hThumbDestination;
    double _vThumbDestination;
    struct NSEdgeInsets { double top; double left; double bottom; double right; } _contentInsets;
    struct NSEdgeInsets { double top; double left; double bottom; double right; } _scrollerInsets;
    _NSScrollViewLayoutHelper *_baseContentAreaLayout;
    NSView *_findBarView;
    NSScrollingBehavior *_scrollingBehavior;
    NSScrollerImpPair *_scrollerImpPair;
    double _effectiveMagnification;
    double _magnification;
    double _minMagnification;
    double _maxMagnification;
    double _magnificationLock;
    struct CGPoint { double x; double y; } _lastSmartMagnificationLocation;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastSmartMagnificationRect;
    struct CGPoint { double x; double y; } _magnificationAnchorPoint;
    NSScrollView *_synchronizedSiblingHorizontal;
    NSScrollView *_synchronizedSiblingVertical;
    id<NSScrollViewDelegate> _delegate;
    NSArray *_pageAlignmentsHorizontal;
    NSArray *_pageAlignmentsVertical;
    _NSScrollViewFloatingSubviewsContainerView *_floatingSubviewsHorizontalContainer;
    _NSScrollViewFloatingSubviewsContainerView *_floatingSubviewsVerticalContainer;
    _NSScrollViewFloatingDebugView *_floatingDebugView;
    _NSScrollViewRulerLineView *_currentRulerLineView;
    id _mouseDownMonitor;
    struct CGSize { double width; double height; } _decelerationRate;
    _NSScrollViewMoreContentIndicatorView *_moreLeftContentIndicator;
    _NSScrollViewMoreContentIndicatorView *_moreRightContentIndicator;
    _NSScrollViewMoreContentIndicatorView *_topShadowView;
    _NSScrollViewMoreContentIndicatorView *_bottomShadowView;
    NSGestureRecognizer *_panGestureRecognizer;
    _NSScrollViewContentBackgroundView *_contentBackgroundView;
    NSScrollViewMirrorView *_mirrorView;
    _NSDrawingHandlerView *_betweenScrollersView;
    NSHashTable *_registeredNonInterferingAccessoryViews;
    NSHashTable *_backgroundViews;
    double _topShadowTopInset;
    double _topShadowMinimumRequiredContentYOffset;
    unsigned char _tilingContentView : 1;
    unsigned char _inScrollGesture : 1;
    unsigned char _hasAccessoryViewsInScrollerAreas : 1;
    unsigned char _hasScrollOccurred : 1;
    unsigned char _allowMagnification : 1;
    unsigned char _suppressMagnificationUpdateFromBoundsChange : 1;
    unsigned char _inMagnificationGesture : 1;
    unsigned char _ignoreSynchronizedSiblings : 1;
    unsigned char _delegateImplementsDidScroll : 1;
    unsigned char _horizontalAxisScrollingMode : 2;
    unsigned char _verticalAxisScrollingMode : 2;
    unsigned char _stuntedForIB : 1;
    unsigned char _automaticallyAdjustsContentInsets : 1;
    unsigned char _haveCheckedForScrollerSizeMethodOverrides : 1;
    unsigned char _useCompatibiltyScrollerWidthMethods : 1;
    unsigned char _hasHorizontalMoreContentIndicators : 2;
    unsigned char _inMagnificationAnimationCount : 8;
    unsigned char _contentExtendsUnderHeader : 1;
    unsigned char _isRegisteredWithWindowSectionController : 1;
    unsigned char _hasTopShadowView : 1;
    unsigned char _hasBottomShadowView : 1;
}

@property (class) Class rulerViewClass;
@property (class, readonly) Class _horizontalScrollerClass;
@property (class, readonly) Class _verticalScrollerClass;

@property (nonatomic, readonly) Class _intelligenceBaseClass;
@property char rulersVisible;
@property char hasHorizontalRuler;
@property char hasVerticalRuler;
@property (retain) NSRulerView *horizontalRulerView;
@property (retain) NSRulerView *verticalRulerView;
@property (readonly) struct NSEdgeInsets { double x0; double x1; double x2; double x3; } _distancesScrolledFromDocumentEdges;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _mirrorRect;
@property (nonatomic, setter=_setContentExtendsUnderHeader:) char _contentExtendsUnderHeader;
@property (nonatomic, setter=_setContentExtendsPastContentInsets:) char _contentExtendsPastContentInsets;
@property (nonatomic) char autoforwardsScrollWheelEvents;
@property (retain, nonatomic, setter=_setLineBorderColor:) NSColor *_lineBorderColor;
@property (readonly) char _usesOverlayScrollers;
@property (nonatomic) char drawsContentShadow;
@property (weak) id<NSScrollViewDelegate> delegate;
@property (nonatomic, getter=_isStuntedForIB, setter=_setStuntedForIB:) char _stuntedForIB;
@property double decelerationRate;
@property double horizontalScrollDecelerationFactor;
@property double verticalScrollDecelerationFactor;
@property char hasHorizontalMoreContentIndicators;
@property struct NSEdgeInsets { double x0; double x1; double x2; double x3; } contentInset;
@property char automaticallyAdjustsContentViewInsets;
@property (readonly) NSClipView *_headerClipView;
@property char hasTopShadow;
@property char hasBottomShadow;
@property double topShadowTopInset;
@property double topShadowMinimumRequiredContentYOffset;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } documentVisibleRect;
@property (readonly) struct CGSize { double x0; double x1; } contentSize;
@property (retain) NSView *documentView;
@property (retain) NSClipView *contentView;
@property (retain) NSCursor *documentCursor;
@property unsigned long long borderType;
@property (copy) NSColor *backgroundColor;
@property char drawsBackground;
@property char hasVerticalScroller;
@property char hasHorizontalScroller;
@property (retain) NSScroller *verticalScroller;
@property (retain) NSScroller *horizontalScroller;
@property char autohidesScrollers;
@property double horizontalLineScroll;
@property double verticalLineScroll;
@property double lineScroll;
@property double horizontalPageScroll;
@property double verticalPageScroll;
@property double pageScroll;
@property char scrollsDynamically;
@property long long scrollerStyle;
@property long long scrollerKnobStyle;
@property long long horizontalScrollElasticity;
@property long long verticalScrollElasticity;
@property char usesPredominantAxisScrolling;
@property char allowsMagnification;
@property double magnification;
@property double maxMagnification;
@property double minMagnification;
@property char automaticallyAdjustsContentInsets;
@property struct NSEdgeInsets { double x0; double x1; double x2; double x3; } contentInsets;
@property struct NSEdgeInsets { double x0; double x1; double x2; double x3; } scrollerInsets;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollViewFrame;
@property (readonly) char hasScrolledContentsUnderTitlebar;
@property (readonly) double separatorOffset;
@property (readonly) char relaxRegistrationRequirements;
@property (retain) NSView *findBarView;
@property (getter=isFindBarVisible) char findBarVisible;

+ (void)initialize;
+ (char)automaticallyNotifiesObserversForKey:(id)a0;
+ (void)_drawBetweenScrollersWidgetInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withSmallSize:(char)a1;
+ (void)_drawCornerWidgetInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withSmallSize:(char)a1;
+ (id)_findScrollViewToAutoLiveScrollInWindow:(id)a0;
+ (char)automaticallyNotifiesObserversOfDocumentView;
+ (struct CGSize { double x0; double x1; })contentSizeForFrameSize:(struct CGSize { double x0; double x1; })a0 hasHorizontalScroller:(char)a1 hasVerticalScroller:(char)a2 borderType:(unsigned long long)a3;
+ (struct CGSize { double x0; double x1; })contentSizeForFrameSize:(struct CGSize { double x0; double x1; })a0 horizontalScrollerClass:(Class)a1 verticalScrollerClass:(Class)a2 borderType:(unsigned long long)a3 controlSize:(unsigned long long)a4 scrollerStyle:(long long)a5;
+ (id)defaultAnimationForKey:(id)a0;
+ (struct CGSize { double x0; double x1; })frameSizeForContentSize:(struct CGSize { double x0; double x1; })a0 hasHorizontalScroller:(char)a1 hasVerticalScroller:(char)a2 borderType:(unsigned long long)a3;
+ (struct CGSize { double x0; double x1; })frameSizeForContentSize:(struct CGSize { double x0; double x1; })a0 horizontalScrollerClass:(Class)a1 verticalScrollerClass:(Class)a2 borderType:(unsigned long long)a3 controlSize:(unsigned long long)a4 scrollerStyle:(long long)a5;
+ (char)isCompatibleWithResponsiveScrolling;
+ (id)keyPathsForValuesAffectingDocumentView;
+ (id)keyPathsForValuesAffectingSeparatorOffset;

- (void)dealloc;
- (void).cxx_destruct;
- (void)didChangeValueForKey:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)layout;
- (void)_update;
- (void)_doScroller:(id)a0 hitPart:(long long)a1 multiplier:(double)a2;
- (void)_drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 clip:(char)a1;
- (void)_setMirrorView:(id)a0;
- (char)_wantsPageAlignedHorizontalAxis;
- (id)accessibilityActionDescription:(id)a0;
- (void)encodeRestorableStateWithCoder:(id)a0;
- (long long)findBarPosition;
- (char)inLiveResizeForScrollerImpPair:(id)a0;
- (void)pageUp:(id)a0;
- (id)scrollerImpPair;
- (void)setFrameOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)setNeedsLayout:(char)a0;
- (void)setNextKeyView:(id)a0;
- (void)_informDelegateDidEndLiveScroll;
- (void)_setIngoreSynchronizedSiblings:(char)a0;
- (id)_accessibilityAdditionalChildren;
- (char)_accessoryViewMightInterfereWithOverlayScrollers:(id)a0;
- (void)_addBackgroundView:(id)a0;
- (char)_allowsHorizontalStretching;
- (char)_allowsVerticalStretching;
- (Class)_animatorClass;
- (void)_applyContentAreaLayout:(id)a0;
- (void)_automateLiveScroll;
- (void)_automatedLiveScrollingDidEnd;
- (void)_automatedLiveScrollingWillBegin;
- (void)_beginMagnifyGesture;
- (void)_beginMagnifying;
- (void)_beginScrollGesture;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_betweenScrollersRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsInsetForBorder;
- (char)_canOptInToConcurrentScrolling;
- (Class)_classToCheckForWantsUpdateLayer;
- (void)_commonNewScroll:(id)a0;
- (void)_conditionallyReflectScrolledClipView;
- (id)_contentView;
- (id)_copySubviewsInOrderOfDisplay;
- (id)_cornerView;
- (char)_cornerViewHidesWithVerticalScroller;
- (double)_destinationFloatValueForScroller:(id)a0;
- (void)_dirtyFocusRingOrMask;
- (void)_doScroller:(id)a0;
- (char)_documentViewWantsHeaderView;
- (void)_drawBetweenScrollersWidgetInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawOldSchoolFocusRingIfNecessaryInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_dynamicColorsChanged:(id)a0;
- (void)_endMagnifyGesture;
- (void)_endMagnifying;
- (void)_endScrollGesture;
- (void)_ensureOverlayScrollerFlashForWindowOrderIn:(id)a0;
- (double)_findBarDesiredHeight;
- (char)_fixHeaderAndCornerViews;
- (id)_floatingSubviewsContainerForAxis:(long long)a0;
- (char)_gestureRecognizer:(id)a0 shouldAttemptToRecognizeWithEvent:(id)a1;
- (char)_gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (void)_gestureRecognizerFailed:(id)a0;
- (void)_handleBoundsChangeForSubview:(id)a0;
- (char)_hasNonHiddenNonLayeredOverlappingSiblingView;
- (char)_hasRectangularFocusRingAroundFrame;
- (char)_hasScrollOccurredOutsideOfGesture;
- (void)_hideOverlayScrollers;
- (double)_horizontalScrollerHeight;
- (double)_horizontalScrollerHeightWithBorder;
- (void)_informDelegateUserDidLiveScroll;
- (void)_informDelegateWillStartLiveScroll;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_insetBounds;
- (void)_intelligenceCollectContentIn:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 collector:(id)a1;
- (char)_isConcurrentScrollingCompatible;
- (void)_lockOverlayScrollerState:(unsigned long long)a0;
- (double)_magnification;
- (id)_magnificationInflectionPoints;
- (void)_magnifyToFitRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 animate:(char)a1;
- (id)_mirrorView;
- (void)_newScroll:(char)a0;
- (void)_overlayScroller:(id)a0 didBecomeShown:(char)a1;
- (char)_overlayScrollerStateIsLocked;
- (char)_overlayScrollersShown;
- (id)_pageAlignmentsForAxis:(long long)a0;
- (void)_panWithGestureRecognizer:(id)a0;
- (char)_pinnedInDirectionOfScroll:(id)a0;
- (char)_pinnedInDirectionX:(double)a0 y:(double)a1;
- (id)_pointInVisibleScroller:(struct CGPoint { double x0; double x1; })a0;
- (void)_pulseOverlayScrollers;
- (void)_reflectDocumentViewBoundsChange;
- (struct CGSRegionObject { } *)_regionForOpaqueDescendants:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forMove:(char)a1;
- (void)_registerNonInterferingAccessoryView:(id)a0;
- (double)_repeatMultiplier:(double)a0;
- (void)_resetOverlayScrollerFlashForWindowOrderOut:(id)a0;
- (void)_resetScrollingBehavior;
- (void)_scrollPageInDirection:(int)a0;
- (void)_scrollViewDidMoveToWindow;
- (void)_scrollViewWillMoveToWindow:(id)a0;
- (void)_scrollerDidBeginTracking:(id)a0;
- (void)_scrollerDidEndTracking:(id)a0;
- (unsigned long long)_scrollingModeForAxis:(long long)a0;
- (void)_setContentViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_setHasScrollOccurredOutsideOfGesture:(char)a0;
- (void)_setHorizontalScrollerHidden:(char)a0;
- (void)_setMagnification:(double)a0;
- (void)_setMagnification:(double)a0 centeredAroundPoint:(struct CGPoint { double x0; double x1; })a1 animate:(char)a2;
- (void)_setPageAlignments:(id)a0 forAxis:(long long)a1;
- (void)_setScrollerNeedsDisplay:(id)a0;
- (void)_setScrollingMode:(unsigned long long)a0 forAxis:(long long)a1;
- (void)_setSynchronizedSibling:(id)a0 forAxis:(long long)a1;
- (void)_setVerticalScrollerHidden:(char)a0;
- (void)_setWantsPageAlignedHorizontalAxis:(char)a0;
- (void)_setWantsPageAlignedVerticalAxis:(char)a0;
- (void)_setWindow:(id)a0;
- (char)_shouldUseFocusRingMask;
- (char)_shouldUseInclusiveLayersAutomatically;
- (void)_smartMagnifyToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 centeredAt:(struct CGPoint { double x0; double x1; })a1 animate:(char)a2;
- (void)_snapRubberBandDueToNotification:(id)a0;
- (void)_sortSubviews;
- (struct CGSize { double x0; double x1; })_stretchAmount;
- (id)_synchronizedSiblingForAxis:(long long)a0;
- (id)_synchronizedSiblingsForAxis:(long long)a0;
- (void)_tileIfNeeded;
- (void)_tileWithoutRecursing;
- (void)_unlockOverlayScrollerState;
- (void)_unregisterNonInterferingAccessoryView:(id)a0;
- (void)_updateBetweenScrollersView;
- (void)_updateRulerlineForRuler:(id)a0 oldPosition:(double)a1 newPosition:(double)a2 vertical:(char)a3;
- (void)_updateTrackingAreasWithInvalidCursorRects:(char)a0;
- (void)_updateWithDisplay;
- (double)_verticalScrollerWidth;
- (double)_verticalScrollerWidthWithBorder;
- (void)_viewDidDrawInLayer:(id)a0 inContext:(struct CGContext { } *)a1;
- (char)_wantsPageAlignedVerticalAxis;
- (char)_willCoverBackingStore;
- (char)acceptsFirstResponder;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityContentsAttribute;
- (id)accessibilityHorizontalScrollBarAttribute;
- (char)accessibilityIsAttributeSettable:(id)a0;
- (char)accessibilityIsContentsAttributeSettable;
- (char)accessibilityIsHorizontalScrollBarAttributeSettable;
- (char)accessibilityIsIgnored;
- (char)accessibilityIsVerticalScrollBarAttributeSettable;
- (id)accessibilityParameterizedAttributeNames;
- (void)accessibilityPerformAction:(id)a0;
- (id)accessibilityPositionAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityScrollToShowDescendantAttributeForParameter:(id)a0;
- (void)accessibilitySetValue:(id)a0 forAttribute:(id)a1;
- (id)accessibilitySizeAttribute;
- (id)accessibilityVerticalScrollBarAttribute;
- (void)addFloatingHeaderView:(id)a0 forAxis:(long long)a1;
- (void)addFloatingSubview:(id)a0 forAxis:(long long)a1;
- (void)addSubview:(id)a0;
- (void)addSubview:(id)a0 positioned:(long long)a1 relativeTo:(id)a2;
- (char)becomeFirstResponder;
- (void)beginGestureWithEvent:(id)a0;
- (char)computedHasScrolledContentsUnderTitlebar;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })computedScrollViewFrame;
- (char)computed_contentExtendsPastContentInsets;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })computed_distancesScrolledFromDocumentEdges;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentAreaRectForScrollerImpPair:(id)a0;
- (void)drawFocusRingMask;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)endGestureWithEvent:(id)a0;
- (void)findBarViewDidChangeHeight;
- (void)flashScrollers;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })focusRingMaskBounds;
- (void)geometryInWindowDidChange;
- (char)gestureRecognizer:(id)a0 shouldReceiveTouch:(id)a1;
- (id)gestureRecognizerForScrolling;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)isFlipped;
- (char)isOpaque;
- (void)magnifyToFitRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)magnifyWithEvent:(id)a0;
- (struct CGPoint { double x0; double x1; })mouseLocationInContentAreaForScrollerImpPair:(id)a0;
- (char)needsPanelToBecomeKey;
- (id)ns_widgetType;
- (void)pageDown:(id)a0;
- (void)reflectScrolledClipView:(id)a0;
- (void)removeFloatingHeaderView:(id)a0;
- (void)removeFromSuperview;
- (void)resizeSubviewsWithOldSize:(struct CGSize { double x0; double x1; })a0;
- (void)restoreStateWithCoder:(id)a0;
- (id)rulerStateDescription;
- (void)scrollClipView:(id)a0 toPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)scrollWheel:(id)a0;
- (struct CGPoint { double x0; double x1; })scrollerImpPair:(id)a0 convertContentPoint:(struct CGPoint { double x0; double x1; })a1 toScrollerImp:(id)a2;
- (char)scrollerImpPair:(id)a0 isContentPointVisible:(struct CGPoint { double x0; double x1; })a1;
- (void)scrollerImpPair:(id)a0 updateScrollerStyleForNewRecommendedScrollerStyle:(long long)a1;
- (void)setFindBarPosition:(long long)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)setLayer:(id)a0;
- (void)setMagnification:(double)a0 centeredAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)showActiveFirstResponderIndication;
- (void)smartMagnifyWithEvent:(id)a0;
- (void)tile;
- (void)updateLayer;
- (void)updateTrackingAreas;
- (void)viewDidChangeBackingProperties;
- (void)viewDidChangeEffectiveAppearance;
- (void)viewDidEndLiveResize;
- (void)viewDidHide;
- (void)viewDidUnhide;
- (void)viewWillDraw;
- (void)viewWillMoveToSuperview:(id)a0;
- (void)viewWillStartLiveResize;
- (void)willRemoveSubview:(id)a0;

@end

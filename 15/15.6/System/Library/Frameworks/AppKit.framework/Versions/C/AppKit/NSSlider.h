@class NSString, NSSliderAccessory, NSDictionary, NSColor;
@protocol NSSliderDelegate, NSSliderVisualElement;

@interface NSSlider : NSControl <NSSliderAccessoryContainer, NSSliderCellControlView, NSSliderTickMarksDelegate, NSAccessibilitySlider> {
    id<NSSliderDelegate> _delegate;
    NSDictionary *_tickMarkLayoutPoints;
}

@property (weak) id<NSSliderDelegate> delegate;
@property (readonly) char _hasStepBehaviorContext;
@property double value;
@property double minimumValue;
@property double maximumValue;
@property double incrementValue;
@property (readonly) NSSliderAccessory *minimumValueAccessory;
@property (readonly) NSSliderAccessory *maximumValueAccessory;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) id<NSSliderVisualElement> _visualElement;
@property char delegateRespondsToValidateValue;
@property unsigned long long sliderType;
@property double minValue;
@property double maxValue;
@property double altIncrementValue;
@property (readonly) double knobThickness;
@property (getter=isVertical) char vertical;
@property (copy) NSColor *trackFillColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (id)verticalSliderWithMinValue:(double)a0 maxValue:(double)a1 initialValue:(double)a2 target:(id)a3 action:(SEL)a4;
+ (id)_sliderWithMinValue:(double)a0 maxValue:(double)a1 initialValue:(double)a2 target:(id)a3 action:(SEL)a4;
+ (id)defaultAnimationForKey:(id)a0;
+ (id)horizontalSliderWithMinValue:(double)a0 maxValue:(double)a1 initialValue:(double)a2 target:(id)a3 action:(SEL)a4;
+ (id)horizontalSliderWithTarget:(id)a0 action:(SEL)a1;
+ (id)horizontalSliderWithValue:(double)a0 minValue:(double)a1 maxValue:(double)a2 target:(id)a3 action:(SEL)a4;
+ (id)keyPathsForValuesAffecting_hasStepBehaviorContext;
+ (id)sliderWithTarget:(id)a0 action:(SEL)a1;
+ (id)sliderWithValue:(double)a0 minValue:(double)a1 maxValue:(double)a2 target:(id)a3 action:(SEL)a4;
+ (id)verticalSliderWithTarget:(id)a0 action:(SEL)a1;
+ (id)verticalSliderWithValue:(double)a0 minValue:(double)a1 maxValue:(double)a2 target:(id)a3 action:(SEL)a4;

- (void)dealloc;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setEnabled:(char)a0;
- (void)setImage:(id)a0;
- (void)setTitle:(id)a0;
- (id)image;
- (void)layout;
- (id)title;
- (double)normalizedTickMarkValueAtIndex:(long long)a0;
- (void)pageUp:(id)a0;
- (void)setTickMarkIsProminent:(char)a0 atIndex:(long long)a1;
- (void)sliderCellDidChangeControlSize:(id)a0;
- (void)moveUp:(id)a0;
- (id)setTitleNoCopy:(id)a0;
- (char)_autoCancelIfTouchTooLong:(id *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_barRectFlipped:(char)a0;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })a0;
- (void)_clearComponentSubviews;
- (void)_clearComponentSubviewsAndRemoveFromSuperview:(char)a0;
- (char)_contentHuggingDefault_isUsuallyFixedHeight;
- (char)_contentHuggingDefault_isUsuallyFixedWidth;
- (char)_hasCustomTickMarkPositioning;
- (void)_incrementValue:(char)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_knobRectFlipped:(char)a0 value:(double)a1;
- (void)_layoutComponentSubviewsIfNecessary;
- (void)_moveInDirection:(unsigned long long)a0;
- (id)_preferredAppearance;
- (void)_removeAnchorsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)_setSubviewRenderingMode:(unsigned long long)a0;
- (void)_setTickMarkLayoutPoints:(id)a0;
- (unsigned long long)_subviewRenderingMode;
- (id)_tickMarkLayoutPoints;
- (void)_updateComponentSubviewDrawingStateIfNecessary;
- (void)_updateComponentSubviewRenderingState;
- (void)_updateTickMarkConstraintPositionsIfNeeded;
- (char)_usesMetricsAppearance;
- (void)_viewDidChangeAppearance:(id)a0;
- (char)_wantsKeyDownForEvent:(id)a0;
- (char)acceptsFirstMouse:(id)a0;
- (id)accessibilityLabel;
- (char)accessibilityPerformDecrement;
- (char)accessibilityPerformIncrement;
- (id)accessibilityValue;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (char)allowsTickMarkValuesOnly;
- (char)animates;
- (double)baselineOffsetFromBottom;
- (double)closestTickMarkValueToValue:(double)a0;
- (id)declaredLayoutConstraints;
- (id)designatedFocusRingView;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (long long)indexOfTickMarkAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (char)isFlipped;
- (double)lastBaselineOffsetFromBottom;
- (id)layoutPointForTickMarkAtIndex:(long long)a0;
- (id)maxValueImage;
- (id)minValueImage;
- (void)moveDown:(id)a0;
- (void)moveLeft:(id)a0;
- (void)moveRight:(id)a0;
- (id)ns_widgetType;
- (long long)numberOfTickMarks;
- (void)pageDown:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectOfTickMarkAtIndex:(long long)a0;
- (void)sendAction;
- (void)setAllowsTickMarkValuesOnly:(char)a0;
- (void)setAnimates:(char)a0;
- (void)setCell:(id)a0;
- (void)setKnobThickness:(double)a0;
- (void)setMaxValueImage:(id)a0;
- (void)setMaximumValueAccessory:(id)a0;
- (void)setMinValueImage:(id)a0;
- (void)setMinimumValueAccessory:(id)a0;
- (void)setNumberOfTickMarks:(long long)a0;
- (void)setTickMarkPosition:(unsigned long long)a0;
- (void)setTitleCell:(id)a0;
- (void)setTitleColor:(id)a0;
- (void)setTitleFont:(id)a0;
- (void)setUserInterfaceLayoutDirection:(long long)a0;
- (void)sizeToFit;
- (void)sliderCellDidChangeNumberOfTickMarks:(id)a0 oldNumberOfTickMarks:(long long)a1;
- (void)sliderCellDidChangeSliderType:(id)a0;
- (void)sliderCellDidChangeTickMarkPosition:(id)a0;
- (void)sliderCellDidChangeVertical:(id)a0;
- (void)sliderCellDidInvalidateComponentRects:(id)a0;
- (char)tickMarkIsProminentAtIndex:(long long)a0;
- (unsigned long long)tickMarkPosition;
- (double)tickMarkValueAtIndex:(long long)a0;
- (id)titleCell;
- (id)titleColor;
- (id)titleFont;
- (void)updateCell:(id)a0;

@end

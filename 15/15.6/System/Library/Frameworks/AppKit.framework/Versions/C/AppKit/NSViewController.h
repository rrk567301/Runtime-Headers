@class NSPointerArray, NSString, NSView, NSExtensionContext, NSBundle, NSArray;
@protocol NSViewControllerPresentationAnimator;

@interface NSViewController : NSResponder <NSExtensionRequestHandling, NSNibFinishedLoadingDependent, NSEditor, NSSeguePerforming, NSUserInterfaceItemIdentification> {
    NSString *_nibName;
    NSBundle *_nibBundle;
    NSView *view;
    NSArray *_topLevelObjects;
    NSPointerArray *_editors;
    id _autounbinder;
    NSString *_designNibBundleIdentifier;
    id __privateData;
    unsigned char _viewIsAppearing : 1;
    unsigned char _delayViewDidAppear : 1;
    unsigned char _isContentViewController : 1;
    unsigned char _shouldDirtyLayoutOnSizeChanges : 1;
    unsigned char _hasObservationTrackingDictionary : 1;
    unsigned int _reserved : 27;
}

@property (readonly, retain) NSExtensionContext *extensionContext;
@property (retain) NSView *sourceItemView;
@property struct CGPoint { double x0; double x1; } preferredScreenOrigin;
@property (readonly) struct CGSize { double x0; double x1; } preferredMinimumSize;
@property (readonly) struct CGSize { double x0; double x1; } preferredMaximumSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property struct NSEdgeInsets { double x0; double x1; double x2; double x3; } additionalSafeAreaInsets;
@property (setter=_setParentViewController:) NSViewController *parentViewController;
@property (setter=_setPresentingViewController:) NSViewController *presentingViewController;
@property (getter=_presentationAnimator, setter=_setPresentationAnimator:) id<NSViewControllerPresentationAnimator> presentationAnimator;
@property (readonly, copy) NSString *nibName;
@property (readonly) NSBundle *nibBundle;
@property (retain) id representedObject;
@property (copy) NSString *title;
@property (retain) NSView *view;
@property (readonly) NSView *viewIfLoaded;
@property (readonly, getter=isViewLoaded) char viewLoaded;
@property struct CGSize { double x0; double x1; } preferredContentSize;
@property (readonly, copy) NSArray *_nibLoadingDependencies;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy) NSString *identifier;

+ (Class)_classToCheckForRequiresConstraintBasedLayout;
+ (char)requiresConstraintBasedLayout;

- (oneway void)release;
- (void)dealloc;
- (id)init;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)beginRequestWithExtensionContext:(id)a0;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)_commonPostInit;
- (void)_removePresentedViewController:(id)a0;
- (void)presentViewController:(id)a0 animator:(id)a1;
- (void)_finishedLoadingNibDependencies;
- (id)_segueTemplates;
- (char)_shouldDirtyLayoutOnSizeChanges;
- (void)_viewWillUnhide;
- (void)presentWindowControllerAsSheet:(id)a0;
- (void)willMoveToParentViewController:(id)a0;
- (void)_addPresentedViewController:(id)a0;
- (void)_addPresentedWindowController:(id)a0;
- (id)_applicationExtensionSession;
- (id)_autounbinder;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_defaultInitialViewFrame;
- (void)_didRestoreUserActivity:(id)a0;
- (void)_editor:(id)a0 didCommit:(char)a1 withOriginalDelegateInvocation:(id)a2;
- (id)_extensionContext;
- (id)_findValidNibNameInBundle:(id)a0;
- (void)_insertInResponderChain;
- (void)_intelligenceCollectSubelementsIn:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 using:(id)a1 transformToRoot:(id /* block */)a2;
- (char)_isAppearing;
- (char)_isContentViewController;
- (char)_isSecondary;
- (void)_loadViewIfRequired;
- (void)_makeDefaultView;
- (id)_nibBundleIdentifier;
- (id)_nibWithName:(id)a0 bundle:(id)a1;
- (id)_ns_observationTrackingDictionary;
- (void)_ns_setObservationTrackingDictionary:(id)a0;
- (id)_persistentUIIdentifier;
- (id)_persistentUIWindow;
- (void)_removeFromResponderChain;
- (void)_removePresentedWindowController:(id)a0;
- (id)_representedObject;
- (id)_responderDebugDescription;
- (void)_scheduleBridgedServiceLayoutPropertyChange;
- (void)_sendViewDidAppear;
- (void)_sendViewDidDisappear;
- (void)_sendViewDidLoad;
- (void)_sendViewWillAppear;
- (void)_sendViewWillDisappear;
- (void)_serviceBridgedServiceLayoutPropertyChanges:(id)a0;
- (void)_setApplicationExtensionSession:(id)a0;
- (void)_setExtensionContext:(id)a0;
- (void)_setIsContentViewController:(char)a0;
- (void)_setNibBundleIdentifier:(id)a0;
- (void)_setNibName:(id)a0;
- (void)_setSegueTemplates:(id)a0;
- (void)_setTopLevelObjects:(id)a0;
- (id)_topEditor;
- (void)_updateViewConstraintsWithObservationTracking;
- (id)_view;
- (id)_viewControllerForPresentingViewController:(id)a0;
- (char)_viewControllerSupports10_10Features;
- (void)_viewDidHide;
- (void)_viewDidLayoutWithObservationTracking;
- (void)_viewDidMoveToWindow:(id)a0 fromWindow:(id)a1;
- (void)_viewDidUnhide;
- (void)_viewWillHide;
- (void)_viewWillLayoutWithObservationTracking;
- (void)_viewWillMoveToWindow:(id)a0 hiding:(char)a1 unhiding:(char)a2;
- (void)_windowDidOrderOffScreen;
- (void)_windowDidOrderOnScreen;
- (void)_windowWillClose:(id)a0;
- (void)_windowWillOrderOffScreen;
- (void)_windowWillOrderOnScreen;
- (void)addChildViewController:(id)a0;
- (id)applicationExtensionSession;
- (void)beginAppearanceTransition:(char)a0;
- (char)canPerformUnwindSegueAction:(SEL)a0 fromViewController:(id)a1 withSender:(id)a2;
- (void)childViewControllerDidChangePreferredContentSize:(id)a0;
- (id)childViewControllers;
- (char)commitEditing;
- (char)commitEditingAndReturnError:(id *)a0;
- (void)commitEditingWithDelegate:(id)a0 didCommitSelector:(SEL)a1 contextInfo:(void *)a2;
- (id /* block */)constrainServiceScreenFrameBlock;
- (char)definesPresentationContext;
- (void)didMoveToParentViewController:(id)a0;
- (void)discardEditing;
- (void)dismissController:(id)a0;
- (void)dismissViewController:(id)a0;
- (void)dismissWindowController:(id)a0;
- (void)endAppearanceTransition;
- (id)extensionContext;
- (void)insertChildViewController:(id)a0 atIndex:(long long)a1;
- (void)loadView;
- (void)loadViewIfNeeded;
- (struct CGSize { double x0; double x1; })maximumSize;
- (struct CGSize { double x0; double x1; })minimumSize;
- (void)moveChildViewControllerAtIndex:(long long)a0 toIndex:(long long)a1;
- (void)objectDidBeginEditing:(id)a0;
- (void)objectDidEndEditing:(id)a0;
- (void)performSegueWithIdentifier:(id)a0 sender:(id)a1;
- (void)preferredContentSizeDidChangeForViewController:(id)a0;
- (void)prepareForSegue:(id)a0 sender:(id)a1;
- (void)presentViewController:(id)a0 asPopoverRelativeToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2 preferredEdge:(unsigned long long)a3 behavior:(long long)a4;
- (void)presentViewController:(id)a0 asPopoverRelativeToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2 preferredEdge:(unsigned long long)a3 behavior:(long long)a4 hasFullSizeContent:(char)a5;
- (void)presentViewControllerAsModalWindow:(id)a0;
- (void)presentViewControllerAsSheet:(id)a0;
- (void)presentWindowControllerAsModalWindow:(id)a0;
- (void)presentedViewControllerDidChangePreferredContentSize:(id)a0;
- (id)presentedViewControllers;
- (id)presentedWindowControllers;
- (void)removeChildViewControllerAtIndex:(long long)a0;
- (void)removeFromParentViewController;
- (id)segueForUnwindingToViewController:(id)a0 fromViewController:(id)a1 identifier:(id)a2;
- (void)setChildViewControllers:(id)a0;
- (void)setConstrainServiceScreenFrameBlock:(id /* block */)a0;
- (void)setNextResponder:(id)a0;
- (void)setStoryboard:(id)a0;
- (char)shouldPerformSegueWithIdentifier:(id)a0 sender:(id)a1;
- (void)showChildViewController:(id)a0;
- (void)showInParentViewController;
- (id)storyboard;
- (void)transitionFromViewController:(id)a0 toViewController:(id)a1 options:(unsigned long long)a2 completionHandler:(id /* block */)a3;
- (void)updateViewConstraints;
- (id)viewControllerForUnwindSegueAction:(SEL)a0 fromViewController:(id)a1 withSender:(id)a2;
- (void)viewDidAppear;
- (void)viewDidDisappear;
- (void)viewDidLayout;
- (void)viewDidLoad;
- (void)viewWillAppear;
- (void)viewWillDisappear;
- (void)viewWillLayout;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })a0;

@end

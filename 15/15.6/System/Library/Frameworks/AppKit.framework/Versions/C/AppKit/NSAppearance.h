@class NSString, NSBundle, CUICatalog, NSObject, NSColor;
@protocol NSAppearanceCustomization, NSObject;

@interface NSAppearance : NSObject <NSSecureCoding> {
    NSBundle *_bundle;
    struct OpaqueCUIRendererRef { } *_coreUIRenderer;
    CUICatalog *_coreUICatalog;
    int _defaultBlendMode;
    NSColor *_tintColor;
    NSColor *_cachedNormalizedBezelTintColor;
    double _bezelBrightness;
    double _glyphBrightness;
    unsigned long long _colorTemperature;
    id<NSObject> _functionRowAppearanceShouldChangeALSAttributesNotificationToken;
    double _maxScaleFactor;
    unsigned char _preventArchiving : 1;
    unsigned char _allowsVibrancy : 1;
    unsigned char _supportsWhitePointAdjustments : 1;
    unsigned char _supportsBrightnessAdjustments : 1;
    unsigned char _allowsSystemTintColors : 1;
    unsigned char _allowsCustomTintColors : 1;
    unsigned char _tintedWithSystemAccent : 1;
    unsigned char _hasLightTintColor : 1;
    unsigned char _calculatedHasLightTintColor : 1;
}

@property (class, setter=_setSystemAppearanceTestingOverrides:) unsigned long long _systemAppearanceTestingOverrides;
@property (class, readonly) unsigned long long _effectiveSystemAppearanceOverrides;
@property (class, readonly) NSAppearance *_applicationAppearance;
@property (class, readonly) NSObject<NSAppearanceCustomization> *_menuBarAppearanceProxy;
@property (class, readonly) NSObject<NSAppearanceCustomization> *_systemAppearanceProxy;
@property (class, retain) NSAppearance *currentAppearance;
@property (class, readonly) NSAppearance *currentDrawingAppearance;
@property (class, readonly) char supportsSecureCoding;

@property (readonly) char _backstoppedByFullAppearance;
@property (readonly) double _textGlyphBrightnessMultiplier;
@property (readonly) unsigned long long _textGlyphColorTemperature;
@property (readonly) char _prefersMoreHorizontalContentIndicators;
@property (readonly) char _prefersSliderAccessoryStepBehavior;
@property (readonly) struct CGSize { double x0; double x1; } _minimumSizeForStandardButton;
@property (readonly) struct CGSize { double x0; double x1; } _minimumSizeForToolbarButton;
@property (readonly) struct CGSize { double x0; double x1; } _minimumSizeForSmallToolbarButton;
@property (readonly) struct CGSize { double x0; double x1; } _minimumSizeForCompressedButton;
@property (readonly) struct CGSize { double x0; double x1; } _minimumSizeForStandardSegment;
@property (readonly) struct CGSize { double x0; double x1; } _minimumSizeForCompressedSegment;
@property (readonly) double _maxScaleFactor;
@property (readonly) char _allowsScrollers;
@property (readonly) char _disallowsFontSmoothing;
@property (readonly) NSColor *tintColor;
@property (readonly, copy) NSString *name;
@property (readonly) char allowsVibrancy;

+ (id)_aquaAppearance;
+ (id)_aquaAppearanceWithAccessibility:(char)a0;
+ (id)_contentBackgroundAppearance;
+ (id)_controlStripAppearance;
+ (id)_controlStripCustomizationPaletteAppearance;
+ (id)_coreUIOptionsSharedKeySet;
+ (id)_darkAquaAppearance;
+ (id)_darkAquaAppearanceWithAccessibility:(char)a0;
+ (id)_fauxVibrantDarkAppearance;
+ (id)_fauxVibrantLightAppearance;
+ (id)_functionRowAppearance;
+ (void)_initializeCoreUI;
+ (char)_isLightTintColor:(id)a0;
+ (void)_performWithCurrentAppearance:(id)a0 usingBlock:(id /* block */)a1;
+ (void)_setSystemAppearanceTestingOverride:(long long)a0;
+ (id)_syrahAppearance;
+ (id)_touchBarCustomizationPaletteAppearance;
+ (id)_vibrantDarkAppearance;
+ (id)_vibrantLightAppearance;
+ (id)appearanceNamed:(id)a0;
+ (id)colorByAdjustingLightnessOfColor:(id)a0 darker:(char)a1;
+ (void)setFunctionRowALSAttributes:(id)a0;

- (void)dealloc;
- (id)debugDescription;
- (id)init;
- (char)isEqual:(id)a0;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)uniqueIdentifier;
- (id)bestMatchFromAppearancesWithNames:(id)a0;
- (id)_appearanceForNonVibrantContent;
- (struct OpaqueCUIRendererRef { } *)_coreUIRenderer;
- (struct CGSize { double x0; double x1; })_intrinsicContentSizeForWidget:(id)a0;
- (id)initWithAppearanceNamed:(id)a0 bundle:(id)a1;
- (id)_bundle;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_alignmentRectInsetsForWidget:(id)a0;
- (char)_allowsCustomControlTintColors;
- (char)_allowsSystemControlTintColors;
- (char)_allowsVibrancyForColor:(id)a0;
- (char)_allowsVibrancyForForegroundColorsInAttributedString:(id)a0;
- (id)_appearanceForVibrantContent;
- (double)_baselineOffsetForWidget:(id)a0;
- (int)_blendModeForAttributedString:(id)a0;
- (int)_blendModeForWidget:(id)a0;
- (id)_bundleResourceName;
- (int)_callCoreUIWithBlock:(id /* block */)a0 options:(id)a1 requireBezelTintColor:(char)a2;
- (id)_catalystName;
- (void)_commonInit;
- (id)_compositingFilterForWidget:(id)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_contentInsetsForWidget:(id)a0;
- (struct CGColor { } *)_copyCustomCGColor:(id)a0;
- (struct CGColor { } *)_copyCustomCGColor:(id)a0 withTint:(id)a1;
- (struct CGPath { } *)_copyMaskShapeInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 options:(id)a1;
- (id)_copyMeasurements:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 context:(struct CGContext { } *)a1 options:(id)a2 requestedMeasurements:(id)a3;
- (id)_coreUICatalog;
- (struct CGImage { } *)_createLayerContents:(id)a0 contentsCenter:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (char)_createOrUpdateLayer:(id *)a0 options:(id)a1;
- (id)_customColor:(id)a0;
- (id)_customColor:(id)a0 withSystemEffectOptions:(id)a1;
- (id)_customColor:(id)a0 withTint:(id)a1;
- (double)_defaultBezelBrightness;
- (int)_defaultBlendMode;
- (id)_defaultCompositingFilter;
- (struct CGSize { double x0; double x1; })_defaultSizeForWidget:(id)a0;
- (char)_drawInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 context:(struct CGContext { } *)a1 options:(id)a2;
- (id)_flattenedAppearanceNamesList;
- (struct CGSize { double x0; double x1; })_frameSizeForWidget:(id)a0;
- (long long)_hitTest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 atPoint:(struct CGPoint { double x0; double x1; })a1 options:(id)a2;
- (void)_idealContentInsets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; } *)a0 maximumContentInsets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; } *)a1 forWidget:(id)a2;
- (id)_initForArchivingOnlyWithAppearanceNamed:(id)a0 bundle:(id)a1;
- (id)_initWithContentsOfURL:(id)a0;
- (char)_isBuiltinAppearance;
- (char)_isFunctionRowAppearance;
- (char)_isLightBezelTintColor:(id)a0;
- (char)_isTintedWithLightColor;
- (id)_normalizedBezelTintColorForColor:(id)a0;
- (char)_optionsMustContainTintColor;
- (void)_queryCommonMetrics:(struct { struct CGSize { double x0; double x1; } x0; unsigned long long x1; double x2; struct NSEdgeInsets { double x0; double x1; double x2; double x3; } x3; struct NSEdgeInsets { double x0; double x1; double x2; double x3; } x4; struct NSEdgeInsets { double x0; double x1; double x2; double x3; } x5; } *)a0 forWidget:(id)a1;
- (void)_queryFrameSize:(struct CGSize { double x0; double x1; } *)a0 scalableAxes:(unsigned long long *)a1 baselineOffset:(double *)a2 alignmentInsets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; } *)a3 idealContentInsets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; } *)a4 maxContentInsets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; } *)a5 forWidget:(id)a6;
- (id)_refreshedAppearance;
- (char)_resolvesToFunctionRowAppearanceForWidget:(id)a0;
- (unsigned long long)_scalableAxesForWidget:(id)a0;
- (char)_setCustomColor:(id)a0;
- (char)_setCustomFillColor:(id)a0;
- (char)_setCustomStrokeColor:(id)a0;
- (void)_setTintColor:(id)a0;
- (char)_usesMetricsAppearance;
- (id)appearanceByApplyingTintColor:(id)a0;
- (int)blendModeForStyleName:(id)a0 styleConfiguration:(id)a1;
- (id)compositingFilterForStyleName:(id)a0 styleConfiguration:(id)a1 tintColor:(id)a2;
- (id)imageNamed:(id)a0;
- (void)performAsCurrentDrawingAppearance:(id /* block */)a0;
- (id)resolvedAppearanceForColor:(id)a0;
- (id)resolvedAppearanceForCustomTintedWidget:(id)a0;
- (id)resolvedAppearanceForStyleName:(id)a0 styleConfiguration:(id)a1;
- (id)resolvedAppearanceForWidget:(id)a0;
- (id)resolvedAppearanceForWidget:(id)a0 styleConfiguration:(id)a1;
- (id)resolvedAppearanceForWidget:(id)a0 variant:(id)a1;
- (void)setShouldBeArchived:(char)a0;
- (char)shouldBeArchived;
- (id)systemFontForControlSize:(unsigned long long)a0 weight:(double)a1;
- (double)systemFontSizeForControlSize:(unsigned long long)a0;

@end

@class UTType, NSString, NSArray, NSURL, NSView, NSTextField, NSDictionary, NSButton, NSCFRunLoopSemaphore;
@protocol NSOpenSavePanelDelegate;

@interface NSSavePanel : NSPanel <NSOSPHostExportedToServiceProtocol, _NSSavePanelCommonIPI, _NSModalWindowProtocol> {
    NSTextField *_nameField;
    NSButton *_newFolderButton;
    NSButton *_okButton;
    NSButton *_cancelButton;
    NSArray *_allowedContentTypes;
    NSDictionary *_preferredExtensions;
    UTType *_currentContentType;
    char _showsContentTypes;
    char _showsContentTypesExclusive;
}

@property char hidesSharedSection;
@property (setter=_setShowNewDocumentButton:) char _showNewDocumentButton;
@property (setter=_setOkButtonDisabled:) char _okButtonDisabled;
@property (setter=_setUseAlertStyle:) char _useAlertStyle;
@property (copy, setter=_setAlertMessage:) NSString *_alertMessage;
@property (copy, setter=_setAlertInformativeMessage:) NSString *_alertInformativeMessage;
@property (setter=_setShowsRevertOriginalDocumentButton:) char _showsRevertOriginalDocumentButton;
@property (setter=_setShouldRevertOriginalDocument:) char _shouldRevertOriginalDocument;
@property (setter=_setShowsFormats:) char _showsFormats;
@property (copy, setter=_setFormatFileTypes:) NSArray *_formatFileTypes;
@property (copy, setter=_setFormatTitles:) NSArray *_formatTitles;
@property (copy, setter=_setSaveFormatType:) NSString *_saveFormatType;
@property (copy) NSDictionary *contentTypeNames;
@property (readonly) NSString *currentExtension;
@property (setter=_setShouldShowOptionsButton:) char _shouldShowOptionsButton;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSCFRunLoopSemaphore *advanceToRunPhaseIfNeededSemaphore;
@property struct CGSize { double width; double height; } lastReportedAccessorySize;
@property (copy) id /* block */ completionHandler;
@property (weak) id<NSOpenSavePanelDelegate> openSaveDelegate;
@property (retain) NSSavePanel *retainedSelf;
@property (retain) NSURL *finalURL;
@property (retain) NSArray *finalURLs;
@property char observingBridge;
@property char attachSandboxExtensionsToFinalURLDone;
@property char attachSandboxExtensionsToFinalURLsDone;
@property long long runMode;
@property char panelCompleted;
@property char nsAppObservers;
@property char didPrepareToRun;
@property char didBeginServicePanel;
@property char _shouldSendRunModal;
@property char becameAppModalWindow;
@property char panelIsNowUseless;
@property (setter=_setShowsContentTypesExclusive:) char _showsContentTypesExclusive;
@property (copy) NSArray *customActions;
@property (readonly, copy) NSURL *URL;
@property (copy) NSString *identifier;
@property (copy) NSURL *directoryURL;
@property (copy) NSArray *allowedContentTypes;
@property char allowsOtherFileTypes;
@property (copy) UTType *currentContentType;
@property (retain) NSView *accessoryView;
@property (weak) id<NSOpenSavePanelDelegate> delegate;
@property (readonly, getter=isExpanded) char expanded;
@property char canCreateDirectories;
@property char canSelectHiddenExtension;
@property (getter=isExtensionHidden) char extensionHidden;
@property char treatsFilePackagesAsDirectories;
@property (copy) NSString *prompt;
@property (copy) NSString *title;
@property (copy) NSString *nameFieldLabel;
@property (copy) NSString *nameFieldStringValue;
@property (copy) NSString *message;
@property char showsHiddenFiles;
@property char showsTagField;
@property (copy) NSArray *tagNames;
@property char showsContentTypes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (char)automaticallyNotifiesObserversForKey:(id)a0;
+ (id)keyPathsForValuesAffectingValueForKey:(id)a0;
+ (id)kvoKeysForType:(long long)a0;
+ (void)_warmUp;
+ (char)_actuallyValidateURLs:(id)a0 fromPanel:(id)a1 onDelegate:(id)a2 outError:(id *)a3;
+ (struct { unsigned int x0[8]; })_cachedAuditTokenForMovePanel;
+ (char)_clientWithSecurityTaskRef:(struct __SecTask { } *)a0 hasEntitlement:(const char *)a1 sandboxPermissions:(const char **)a2;
+ (id)_containerURLsForRemoteProcessWithAuditToken:(struct { unsigned int x0[8]; } *)a0;
+ (id)_createPanel;
+ (char)_defaultSettingForUbiquitousBehaviors;
+ (char)_isDirectoryURL:(id)a0 treatFilePackagesAsDirectories:(char)a1 fauxFilePackageTypes:(id)a2 enabledFileTypes:(id)a3;
+ (char)_isFauxFilePackageURL:(id)a0 fauxFilePackageTypes:(id)a1 enabledFileTypes:(id)a2;
+ (void)_spiPropertySelectorForKey:(id)a0 withClass:(Class)a1 isSetter:(char)a2 outSelector:(SEL *)a3;
+ (id)keyPathsForValuesAffectingURL;
+ (void)newDocument:(id)a0;
+ (void)newDocumentAfterDelay;
+ (id)savePanel;
+ (char)setValue:(id)a0 forUndefinedKey:(id)a1 onObject:(id)a2;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (id)identifier;
- (void)setURL:(id)a0;
- (id)URLs;
- (void)beginSheetModalForWindow:(id)a0 completionHandler:(id /* block */)a1;
- (long long)runModal;
- (void)setAccessoryViewDisclosed:(char)a0;
- (void)setAllowedFileTypes:(id)a0;
- (void)setIdentifier:(id)a0;
- (void)setTitle:(id)a0;
- (void)validateVisibleColumns;
- (id)exportedInterface;
- (id)filename;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)setURL:(id)a0 forKey:(id)a1;
- (void)setValue:(id)a0 forUndefinedKey:(id)a1;
- (void)MondoSetFilenameWithProperSelection:(id)a0;
- (id)_overwritingAlertSuppressionURL;
- (void)cancel:(id)a0;
- (void)delegateValidateURLs:(id)a0 withReply:(id /* block */)a1;
- (void)ok:(id)a0;
- (char)resolvesAliases;
- (void)_setIsExpanded:(char)a0;
- (void)_setSet:(id)a0 forKey:(id)a1;
- (void)_updateServiceShowsContentTypes;
- (id)kvoKeys;
- (id)_URLWithSecurityScoped:(char)a0;
- (id)_URLsWithSecurityScoped:(char)a0;
- (char)_accessoryViewDisclosed;
- (char)_accessoryViewDisclosureIsSupported;
- (char)_allowsAnyType;
- (id)_arrayForKey:(id)a0;
- (void)_attachSandboxExtension:(id)a0 toURL:(id)a1;
- (char)_attachSandboxExtensions:(id)a0 toURL:(id)a1 orURLs:(id)a2;
- (void)_attachSandboxExtensionsAndStartAccessing;
- (char)_boolForKey:(id)a0;
- (id)_configurationDescription;
- (void)_configureForFilename:(id)a0;
- (id)_createVBSemaphore;
- (void)_customActionChanged:(id)a0;
- (id)_descriptionProperties;
- (id)_dictForKey:(id)a0;
- (void)_didPresentErrorWithRecovery:(char)a0 contextInfo:(void *)a1;
- (void)_displayCannotCreatePanelAlertIfNeeded;
- (void)_documentWindowFrameForPanelRunningAsASheetInService:(id /* block */)a0;
- (id)_dontSaveButtonTitle;
- (char)_excludeFilesInEnableURLDelegateCheck;
- (char)_fauxToolbarShouldDragWindow;
- (double)_floatForKey:(id)a0;
- (id)_initBridgeAndStuff;
- (void)_invalidateRemoteView;
- (char)_isAllowedExtension:(id)a0;
- (void)_logMethod:(SEL)a0;
- (void)_maintainAppObservers:(char)a0;
- (void)_maintainObservers:(char)a0 onBridge:(id)a1;
- (id)_preferredFilenameExtension;
- (void)_prepareForReuse;
- (void)_reallyDoOrderWindow:(id)a0;
- (void)_resetPrivateState;
- (char)_saveMode;
- (id)_securityScopedURL;
- (id)_securityScopedURLs;
- (void)_sendCustomActionsToOSP;
- (void)_serviceDidChangeContentType:(id)a0;
- (id)_serviceProxy;
- (void)_setAccessoryViewDisclosed:(char)a0;
- (void)_setAlertWindow:(char)a0;
- (void)_setArray:(id)a0 forKey:(id)a1;
- (void)_setBool:(char)a0 forKey:(id)a1;
- (void)_setDefaultBridgeValues;
- (void)_setDict:(id)a0 forKey:(id)a1;
- (void)_setDontSaveButtonTitle:(id)a0;
- (void)_setEnabledFileTypes:(id)a0;
- (id)_setForKey:(id)a0;
- (void)_setIsExpanded:(char)a0 andStoreState:(char)a1;
- (void)_setOverwritingAlertSuppressionURL:(id)a0;
- (void)_setString:(id)a0 forKey:(id)a1;
- (void)_setSupportedDelegateMethods:(id)a0;
- (char)_shouldSetTagsForClient;
- (double)_startRectForSheetHeightOffset;
- (char)_startServiceFailedAlert;
- (id)_stringForKey:(id)a0;
- (id)_supportedDelegateMethods;
- (void)_updateContentTypeNames;
- (void)_updateCurrentContentType;
- (void)_updateSidebarDividerPosition:(double)a0;
- (id)accessibilityAttributeNames;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityIdentifier;
- (char)accessibilityIsDescriptionAttributeSettable;
- (void)accessoryDidChangeConstraints:(struct CGSize { double x0; double x1; })a0;
- (void)accessoryWindowOfViewWillUpdateConstraintsIfNeeded:(id)a0;
- (id)allowedFileTypes;
- (char)allowsMultipleSelection;
- (char)beginServicePanel;
- (void)beginSheetForDirectory:(id)a0 file:(id)a1 modalForWindow:(id)a2 modalDelegate:(id)a3 didEndSelector:(SEL)a4 contextInfo:(void *)a5;
- (void)beginSheetForDirectory:(id)a0 file:(id)a1 types:(id)a2 modalForWindow:(id)a3 modalDelegate:(id)a4 didEndSelector:(SEL)a5 contextInfo:(void *)a6;
- (void)beginWithCompletionHandler:(id /* block */)a0;
- (id)bridge;
- (char)canBecomeMainWindow;
- (char)canChooseDirectories;
- (char)canChooseFiles;
- (char)canDownloadUbiquitousContents;
- (char)canResolveUbiquitousConflicts;
- (char)commonPrep:(id /* block */)a0 mode:(long long)a1;
- (void)completeModal:(long long)a0;
- (void)completeModeless:(long long)a0;
- (void)completeSheet:(long long)a0;
- (void)completeWithReturnCode:(long long)a0 url:(id)a1 urls:(id)a2;
- (void)configureContentView:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })constrainFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toScreen:(id)a1;
- (void)delegateCustomActionInvoked:(id)a0 forURLs:(id)a1;
- (void)delegateRequestNewDocumentNameWithReply:(id /* block */)a0;
- (void)delegateShouldCreateNewDocumentAtURL:(id)a0;
- (void)didEndPanelWithReturnCode:(long long)a0;
- (void)didEndSheet:(id)a0 returnCode:(long long)a1 contextInfo:(void *)a2;
- (id)directory;
- (id)filenames;
- (void)induceEventLoopIterationSoon;
- (id)initWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1 backing:(unsigned long long)a2 defer:(char)a3;
- (char)isAccessoryViewDisclosed;
- (void)observeAsynchronousDelegateMethodCallKeyPath:(id)a0 paramDict:(id)a1;
- (void)observeAsynchronousIBActionKeyPath:(id)a0 paramDict:(id)a1;
- (void)observeAsynchronousRemoteMethodCallKeyPath:(id)a0 paramDict:(id)a1;
- (void)observeMostRecentCompletion:(id)a0;
- (void)refreshDelegateOptions;
- (id)remoteView;
- (void)requestAppEnabledStateForItems:(id)a0 replyBlock:(id /* block */)a1;
- (id)requiredFileType;
- (long long)runModalForDirectory:(id)a0 file:(id)a1;
- (long long)runModalForDirectory:(id)a0 file:(id)a1 types:(id)a2;
- (long long)runModalForTypes:(id)a0;
- (id)serviceViewControllerInterface;
- (void)setAllowsMultipleSelection:(char)a0;
- (void)setCanChooseDirectories:(char)a0;
- (void)setCanChooseFiles:(char)a0;
- (void)setCanDownloadUbiquitousContents:(char)a0;
- (void)setCanResolveUbiquitousConflicts:(char)a0;
- (void)setDirectory:(id)a0;
- (void)setRequiredFileType:(id)a0;
- (void)setResolvesAliases:(char)a0;
- (void)setSpi_customActions:(id)a0;
- (char)shouldRetainExportedObject;
- (unsigned long long)styleMaskForHostWindow;
- (id)urlForKey:(id)a0;
- (id)valueforUndefinedKey:(id)a0;
- (void)viewDidAdvanceToRunPhase:(id)a0;
- (void)viewDidInvalidate:(id)a0;
- (void)viewWillInvalidate:(id)a0;

@end

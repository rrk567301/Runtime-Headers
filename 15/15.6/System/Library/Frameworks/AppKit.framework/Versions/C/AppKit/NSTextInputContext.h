@class NSBridgedTextSubstitutionController, NSString, NSBridgedTextCorrectionController, NSInputContextHistory, NSArray, NSInputMethodUICandidateTouchBarItemController, TITextInputTraits, NSBridgedTextTouchBarController, NSWindow;

@interface NSTextInputContext : NSObject <RTIInputSystemSessionDelegate> {
    TITextInputTraits *_tiTextInputTraits;
    NSArray *_inputLocales;
    void *_documentID;
    id _keyBindings;
    id _keyBindingManager;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _documentStateScrollingTransform;
    NSString *_commandCharacters;
    long long _documentRefcon;
    id _auxiliary;
    struct { unsigned char _acceptsGlyphInfo : 1; unsigned char _secureInput : 1; unsigned char _attributedString : 1; unsigned char _fractionOfDistance : 1; unsigned char _baselineDelta : 1; unsigned char _windowLevel : 1; unsigned char _drawsVertically : 1; unsigned char _compatibilityMode : 1; unsigned char _hasTS : 1; unsigned char _hasLM : 1; unsigned char _hasTLM : 1; unsigned short _inputLocaleGeneration : 16; unsigned char _blockTSM : 1; unsigned char _keyProcess : 1; unsigned char _preflight : 1; unsigned char _bindingFound : 1; unsigned char _unmarkbeforeinsert : 1; unsigned char _completionHandlingClient : 1; } _ticFlags;
}

@property (class, copy) id /* block */ handleUIKeyCommandEvent;
@property (class, copy) id /* block */ isUIKeyCommandEvent;
@property (class, readonly) NSTextInputContext *currentInputContext;

@property (readonly) TITextInputTraits *tiTextInputTraits;
@property (readonly) struct _NSRange { unsigned long long x0; unsigned long long x1; } tiSelectedTextRange;
@property (nonatomic, setter=setRTISelectedTextRange:) struct _NSRange { unsigned long long x0; unsigned long long x1; } rtiSelectedTextRange;
@property (readonly) id bridgedTextCorrectionController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) char hasActiveTextInputFunctionRowItem;
@property char showsCursorAccessories;
@property (retain) TITextInputTraits *tiTextInputTraits;
@property struct _NSRange { unsigned long long location; unsigned long long length; } tiSelectedTextRange;
@property (retain) NSBridgedTextTouchBarController *bridgedTextTouchBarController;
@property (retain) NSBridgedTextCorrectionController *bridgedTextCorrectionController;
@property (retain) NSBridgedTextSubstitutionController *bridgedTextSubstitutionController;
@property (readonly) char markedTextWithRoundedUnderline;
@property (retain, nonatomic) NSInputContextHistory *inputContextHistory;
@property (weak, nonatomic) NSWindow *clientWindow;
@property (readonly) char hasMenuOpened;
@property (readonly) char hasMarkedTextForDictation;
@property (retain, nonatomic) NSInputMethodUICandidateTouchBarItemController *inputMethodCandidateController;
@property (readonly) id client;
@property char acceptsGlyphInfo;
@property (copy) NSArray *allowedInputSourceLocales;
@property (readonly) NSArray *keyboardInputSources;
@property (copy) NSString *selectedKeyboardInputSource;

+ (void)initialize;
+ (char)automaticallyNotifiesObserversForKey:(id)a0;
+ (id)catalystSession;
+ (void)cycleToNextInputKeyboardLayout:(id)a0;
+ (char)_TIPropertyValueIsValid:(long long)a0;
+ (void)_applicationDeactivated:(id)a0;
+ (id)_currentKeyboardLayoutName;
+ (unsigned int)_currentKeyboardType;
+ (id)currentInputContext_withFirstResponderSync:(char)a0;
+ (char)currentKeyboardInputSourceParticipatesInTouchBar;
+ (void)cycleToNextInputScript:(id)a0;
+ (id /* block */)handleUIKeyCommandEvent;
+ (id)inputContextWithClient:(id)a0;
+ (id)inputSourcesFromInputSourceLocales:(id)a0;
+ (char)isInputContextRefconValid:(const void *)a0;
+ (id /* block */)isUIKeyCommandEvent;
+ (id)keyPathsForValuesAffectingKeyboardInputSourceOverlayVisible;
+ (id)localeForInputSource:(id)a0;
+ (id)localizedNameForInputSource:(id)a0;
+ (char)processInputKeyBindings:(id)a0;
+ (id)selectedInputSourceUcharDataForInputContext:(id)a0;
+ (void)setHandleUIKeyCommandEvent:(id /* block */)a0;
+ (void)setIsUIKeyCommandEvent:(id /* block */)a0;
+ (void)updateInputContexts;

- (void)dealloc;
- (void).cxx_destruct;
- (void)activate;
- (char)isActive;
- (id)image;
- (id)language;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_handleCommand:(SEL)a0;
- (char)_isIOSMacClient;
- (id)annotatedString;
- (void)capitalizeWord:(id)a0;
- (id)catalystSession;
- (void)changeSpelling:(id)a0;
- (unsigned long long)incrementalSearchClientGeometry;
- (id)initWithClient:(id)a0;
- (void)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 completionHandler:(id /* block */)a3;
- (void)setSelectedKeyboardInputSource:(id)a0;
- (void)toggleAutomaticTextReplacement:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })unionRectForCharacterRange_RTI:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)_stopDictation:(id)a0;
- (void)cycleToNextInputKeyboardLayout:(id)a0;
- (int)handleTSMEvent:(void *)a0;
- (void)ignoreSpelling:(id)a0;
- (id)keyBindingState;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })markedRange_RTI;
- (void)setCharacterPickerTouchBarItem:(id)a0;
- (void)showGuessPanel:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_correctRTIRangeIfRequired:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)_dictationDidEnd:(id)a0;
- (void)_dictationDidStart:(id)a0;
- (char)_forceAttributedString;
- (void)_forceReSyncCurrentAllowedInputSources;
- (char)_handleEvent:(id)a0 allowingSyntheticEvent:(char)a1;
- (void)_handleEvent:(id)a0 options:(unsigned long long)a1 allowingSyntheticEvent:(char)a2 completionHandler:(id /* block */)a3;
- (void)_handleEvent:(id)a0 options:(unsigned long long)a1 completionHandler:(id /* block */)a2;
- (void)_handleText:(id)a0;
- (char)_handleUIKeyCommandEvent:(id)a0;
- (void)_invalidate;
- (char)_isAsyncTextInputClient;
- (char)_isIOSMacClientNonTextEditing;
- (char)_isIOSMacClientTextEditing;
- (char)_isRTISourceSession;
- (char)_isUIKeyCommandEvent:(id)a0;
- (void)_menuDidBeginTracking:(id)a0;
- (void)_menuDidEndTracking:(id)a0;
- (void)_reflectKeyboardType:(unsigned long long)a0;
- (void)_reflectSecureInput:(char)a0;
- (void)_reflectTITraits:(id)a0;
- (void)_setValue:(id)a0 forTIProperty:(long long)a1;
- (void)_startObservingWindowClosure;
- (void)_stopObservingWindowClosure;
- (void)_updateAllowedInputSources;
- (void)_updateWritingToolsAffordance:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (id)_valueForTIProperty:(long long)a0;
- (void)_windowWillClose:(id)a0;
- (char)acceptsGlyphInfo;
- (void)addLinksInSelection:(id)a0;
- (id)allowedInputSourceLocales;
- (id)annotatedString_RTI;
- (id)attributedString;
- (void)attributedStringWithCompletionHandler:(id /* block */)a0;
- (id)attributedString_RTI;
- (id)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)attributedSubstringForProposedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (id)attributedSubstringForProposedRange_RTI:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (id)auxiliary;
- (double)baselineDeltaForCharacterAtIndex:(unsigned long long)a0;
- (void)baselineDeltaForCharacterAtIndex:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (double)baselineDeltaForCharacterAtIndex_RTI:(unsigned long long)a0;
- (id)candidateListTouchBarItem;
- (unsigned long long)characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)characterIndexForPoint:(struct CGPoint { double x0; double x1; })a0 completionHandler:(id /* block */)a1;
- (unsigned long long)characterIndexForPoint_RTI:(struct CGPoint { double x0; double x1; })a0;
- (id)characterPickerTouchBarItem;
- (id)characterPickerViewController;
- (void)checkSpelling:(id)a0;
- (id)completeAnnotationAttributesWithFontSize:(double)a0;
- (id)completeTitleAttributesWithFontSize:(double)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectFromUIKitToAppKit:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)convertToFullWidth:(id)a0;
- (void)convertToHalfWidth:(id)a0;
- (void)convertToSimplifiedChinese:(id)a0;
- (void)convertToTraditionalChinese:(id)a0;
- (void)cycleToNextInputScript:(id)a0;
- (void)deactivate;
- (void)didCommitCandidate:(id)a0 sender:(id)a1;
- (void)didFinishInteracting:(id)a0;
- (void)didSelectCandidate:(id)a0 sender:(id)a1;
- (void)discardMarkedText;
- (void)dismissCharacterPickerFunctionRowItemViewController;
- (void)dismissCharacterPickerTouchBarItemViewController;
- (void)dismissKeyboardIMFunctionRowItemViewController;
- (void)dismissKeyboardIMTouchBarItemViewController;
- (void)dismissKeyboardIMTouchBarItemViewController:(id)a0;
- (void)dismissPressAndHoldFunctionRowItemViewController;
- (void)dismissPressAndHoldTouchBarItemViewController;
- (void)dismissTrackpadHandwritingFunctionRowItemViewController;
- (void)dismissTrackpadHandwritingTouchBarItemViewController;
- (void)doCommandBySelector:(SEL)a0;
- (void)doCommandBySelector:(SEL)a0 completionHandler:(id /* block */)a1;
- (void)doCommandBySelector:(SEL)a0 completionHandlerWithResult:(id /* block */)a1;
- (char)doCommandBySelectorWithResult:(SEL)a0;
- (void)doCommandBySelector_RTI:(SEL)a0;
- (void)doCommandBySelector_RTI:(SEL)a0 resultHandler:(id /* block */)a1;
- (void)do_HandleTSMEvent_firstRectInRangeLoop:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 whileCondition:(id /* block */)a1 dispatchWorkEach:(id /* block */)a2 eachLoopCompletion:(id /* block */)a3 continuation:(id /* block */)a4;
- (void)do_HandleTSMEvent_insertFixLenTextLoop:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 whileCondition:(id /* block */)a1 dispatchWorkEach:(id /* block */)a2 afterEachInsertText:(id /* block */)a3 continuation:(id /* block */)a4;
- (char)drawsVerticallyForCharacterAtIndex:(unsigned long long)a0;
- (void)drawsVerticallyForCharacterAtIndex:(unsigned long long)a0 completionHandler:(id /* block */)a1;
- (char)drawsVerticallyForCharacterAtIndex_RTI:(unsigned long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstLineRectForCharacterRange_RTI:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (void)firstRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })firstRectForCharacterRange_RTI:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 actualRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)a1;
- (double)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint { double x0; double x1; })a0 completionHandler:(id /* block */)a1;
- (double)fractionOfDistanceThroughGlyphForPoint_RTI:(struct CGPoint { double x0; double x1; })a0;
- (id)generateFunctionRowItemIdentifiers;
- (char)handleEvent:(id)a0;
- (void)handleEvent:(id)a0 completionHandler:(id /* block */)a1;
- (void)handleEventByInputMethod:(id)a0 completionHandler:(id /* block */)a1;
- (char)handleEventByKeyboardLayout:(id)a0;
- (char)handleMouseEvent:(id)a0;
- (void)handleTSMEvent:(void *)a0 completionHandler:(id /* block */)a1;
- (char)hasCorrectionIndicatorUnderlines;
- (char)hasCorrectionPanels;
- (char)hasMarkedText;
- (void)hasMarkedTextWithCompletionHandler:(id /* block */)a0;
- (char)hasMarkedText_RTI;
- (void)hideAppCandidates;
- (void)hideDictationIndicator;
- (void)inputSession:(id)a0 documentStateDidChange:(id)a1;
- (void)inputSession:(id)a0 documentTraitsDidChange:(id)a1;
- (void)inputSession:(id)a0 performInputOperation:(id)a1;
- (void)inputSessionDidBegin:(id)a0;
- (void)inputSessionDidEnd:(id)a0;
- (void)inputSessionDocumentDidChange:(id)a0;
- (void)insertAdaptiveImageGlyph:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)insertAdaptiveImageGlyph_RTI:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)insertEmojiImageTextAttachment:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)insertEmojiImageTextAttachment_RTI:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)insertSmartText:(id)a0 completionHandler:(id /* block */)a1;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)insertText:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 completionHandler:(id /* block */)a2;
- (void)insertTextInputStickerPayload:(id)a0;
- (void)insertText_RTI:(id)a0 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 additionalOperations:(id /* block */)a2;
- (void)invalidateCharacterCoordinates;
- (char)isCurrent;
- (char)isEmojiPickerActive;
- (char)isKeyboardInputSourceOverlayVisible;
- (char)isSecureInputMode;
- (id)keyBindingManager;
- (id)keyboardInputSourcePopoverTouchBar;
- (id)keyboardInputSourcePopoverTouchBarItem;
- (id)keyboardInputSources;
- (id)localizedInputManagerName;
- (void)lowercaseWord:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })markedRange;
- (void)markedRangeWithCompletionHandler:(id /* block */)a0;
- (void)markedTextAbandoned:(id)a0;
- (void)markedTextSelectionChanged:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 client:(id)a1;
- (void)modifyAndApplyRTISessionTextOperations:(id /* block */)a0;
- (char)onlyAllowRomanInputSources;
- (void)orderFrontSubstitutionsPanel:(id)a0;
- (void)periodSubstitutionWithCompletionHandler:(id /* block */)a0;
- (void)prepareAndShowAppCandidates:(id)a0;
- (void)prepareContextMenu:(id)a0;
- (void)presentCharacterPickerFunctionRowItemViewController:(id)a0;
- (void)presentCharacterPickerTouchBarItemViewController:(id)a0;
- (void)presentKeyboardIMFunctionRowItemViewController:(id)a0;
- (void)presentKeyboardIMTouchBarItemViewController:(id)a0;
- (void)presentPressAndHoldFunctionRowItemViewController:(id)a0;
- (void)presentPressAndHoldTouchBarItemViewController:(id)a0;
- (void)presentTrackpadHandwritingFunctionRowItemViewController:(id)a0;
- (void)presentTrackpadHandwritingTouchBarItemViewController:(id)a0;
- (char)remapsArrowKeysForVerticalOrientation;
- (void)removeAnnotation:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)removeAnnotation_RTI:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withAnnotatedString:(id)a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)replaceCharactersInRange_RTI:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 withAnnotatedString:(id)a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)replaceDashesInSelection:(id)a0;
- (void)replaceQuotesInSelection:(id)a0;
- (void)replaceTextInSelection:(id)a0;
- (id)rtiDocumentState;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rtiSelectedTextRange;
- (id)rtiSession;
- (id)selectedKeyboardInputSource;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectedRange;
- (void)selectedRangeWithCompletionHandler:(id /* block */)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })selectedRange_RTI;
- (void)sendMessageToIMWithCandidate:(id)a0 status:(unsigned long long)a1;
- (id)server;
- (void)setAcceptsGlyphInfo:(char)a0;
- (void)setAllowedInputSourceLocales:(id)a0;
- (void)setFunctionRowItemIdentifiers:(id)a0;
- (void)setKeyBindingManager:(id)a0;
- (void)setKeyboardInputSourcePopoverTouchBar:(id)a0;
- (void)setMarkedText:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setMarkedText_RTI:(id)a0 selectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setRTIDocumentState:(id)a0;
- (void)setRTISession:(id)a0;
- (void)setSecureInputMode:(char)a0;
- (void)setTiTextInputTraits:(id)a0;
- (void)showAppCandidates;
- (void)showWritingTools:(id)a0 forDelegate:(id)a1;
- (char)supportsAdaptiveImageGlyph;
- (char)supportsAdaptiveImageGlyph_RTI;
- (char)supportsEmojiImageTextAttachments;
- (char)supportsEmojiImageTextAttachments_RTI;
- (void)textInputClientDidEndScrollingOrZooming;
- (void)textInputClientDidScroll;
- (void)textInputClientDidUpdateSelection;
- (void)textInputClientWillStartScrollingOrZooming;
- (void)toggleAutomaticDashSubstitution:(id)a0;
- (void)toggleAutomaticLinkDetection:(id)a0;
- (void)toggleAutomaticQuoteSubstitution:(id)a0;
- (void)toggleAutomaticSpellingCorrection:(id)a0;
- (void)toggleContinuousSpellChecking:(id)a0;
- (void)toggleGrammarChecking:(id)a0;
- (void)tryDoubleSpaceSubstitution_WithDispatchCondition:(id /* block */)a0 dispatchSubstitutionWork:(id /* block */)a1 continuation:(id /* block */)a2;
- (void)tryHandleEvent_HasMarkedText_withDispatchCondition:(id /* block */)a0 dispatchWork:(id /* block */)a1 continuation:(id /* block */)a2;
- (void)tryHandleTSMEvent_HasMarkedText_withDispatchCondition:(id /* block */)a0 dispatchWork:(id /* block */)a1 continuation:(id /* block */)a2;
- (void)tryHandleTSMEvent_attributedString_attributedSubstringForProposedRange_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 dispatchWork:(id /* block */)a2 dispatchFurtherCondition:(id /* block */)a3 dispatchFurtherWork:(id /* block */)a4 continuation:(id /* block */)a5;
- (void)tryHandleTSMEvent_attributedString_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 dispatchWork:(id /* block */)a2 continuation:(id /* block */)a3;
- (void)tryHandleTSMEvent_attributedSubstringForProposedRange_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 dispatchWork:(id /* block */)a2 continuation:(id /* block */)a3;
- (void)tryHandleTSMEvent_baselineDeltaForCharacterAtIndex_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 furtherDispatchCondition:(id /* block */)a2 dispatchWork:(id /* block */)a3 continuation:(id /* block */)a4;
- (void)tryHandleTSMEvent_clearMarkedTextForAlternatives_withTest:(id /* block */)a0 dispatchWork:(id /* block */)a1 continuation:(id /* block */)a2;
- (void)tryHandleTSMEvent_drawsVerticallyForCharacterAtIndex_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 dispatchWork:(id /* block */)a2 continuation:(id /* block */)a3;
- (void)tryHandleTSMEvent_firstRectInRangeLoop_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 setupForDispatch:(id /* block */)a1 loopCondition:(id /* block */)a2 dispatchWorkEach:(id /* block */)a3 eachLoopCompletion:(id /* block */)a4 continuation:(id /* block */)a5;
- (void)tryHandleTSMEvent_fractionOfDistanceThroughGlyphForPoint_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 furtherDispatchCondition:(id /* block */)a2 dispatchWork:(id /* block */)a3 continuation:(id /* block */)a4;
- (void)tryHandleTSMEvent_insertFixLenText_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 setupForDispatch:(id /* block */)a2 nestedWorkaroundCondition:(id /* block */)a3 nestedWorkaroundDispatchWork:(id /* block */)a4 loopCondition:(id /* block */)a5 dispatchWorkEach:(id /* block */)a6 afterEachInsertText:(id /* block */)a7 continuation:(id /* block */)a8;
- (void)tryHandleTSMEvent_markedRange_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 setupForDispatch:(id /* block */)a2 furtherDispatchCondition:(id /* block */)a3 dispatchWork:(id /* block */)a4 continuation:(id /* block */)a5;
- (void)tryHandleTSMEvent_offsetToPos_markedOrSelRange_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 markedOrSelRangeDispatchCondition:(id /* block */)a1 markedRangeContinuation:(id /* block */)a2 selectedRangeContinuation:(id /* block */)a3 continuation:(id /* block */)a4;
- (void)tryHandleTSMEvent_setMarkedText_withContext:(struct HandleTSMEventCompletionContext { int x0; char x1; char x2; struct OpaqueEventRef *x3; unsigned short x4[128]; unsigned short *x5; id x6; id x7; id x8; struct _NSRange { unsigned long long x0; unsigned long long x1; } x9; struct _NSRange { unsigned long long x0; unsigned long long x1; } x10; unsigned long long x11; unsigned long long x12; char x13; char x14; unsigned long long x15; unsigned char x16; unsigned int x17; struct _NSRange { unsigned long long x0; unsigned long long x1; } x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; struct _NSRange { unsigned long long x0; unsigned long long x1; } x20; struct _NSRange { unsigned long long x0; unsigned long long x1; } x21; char x22; struct _NSRange { unsigned long long x0; unsigned long long x1; } x23; long long x24; } *)a0 dispatchCondition:(id /* block */)a1 setupForDispatch:(id /* block */)a2 dispatchWork:(id /* block */)a3 continuation:(id /* block */)a4;
- (void)tryPeriodSubstitution_initialDispatchWork:(id /* block */)a0 dispatchSelRange:(id /* block */)a1 attrStringDispatchWork:(id /* block */)a2 validAttrString:(id /* block */)a3 attrSubstringProposedRange:(id /* block */)a4 attrSubstringDispatchWork:(id /* block */)a5 validProposedSubstring:(id /* block */)a6 stringFromNSSpellChecker:(id /* block */)a7 insertSubstitutionWork:(id /* block */)a8 continuation:(id /* block */)a9;
- (void)tryTSMProcessRawKeyEvent_orSubstitution:(struct OpaqueEventRef { } *)a0 dispatchCondition:(id /* block */)a1 setupForDispatch:(id /* block */)a2 furtherCondition:(id /* block */)a3 doubleSpaceSubstitutionCondition:(id /* block */)a4 doubleSpaceSubstitutionWork:(id /* block */)a5 dispatchTSMWork:(id /* block */)a6 continuation:(id /* block */)a7;
- (char)tsmLimitsInputSources;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })unionRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0;
- (void)unionRectForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a0 completionHandler:(id /* block */)a1;
- (void)unmarkText;
- (void)unmarkTextWithCompletionHandler:(id /* block */)a0;
- (void)unmarkText_RTI;
- (void)updateCorrectionIndicatorUnderlines;
- (void)updateCorrectionPanels;
- (void)updateCursorGlowViewMode:(long long)a0;
- (void)updateFunctionRowItemState;
- (void)uppercaseWord:(id)a0;
- (id)validAttributesForMarkedText;
- (id)validAttributesForMarkedText_RTI;
- (char)validateMenuItem:(id)a0;
- (char)wantsToDelayTextChangeNotifications;
- (char)wantsToHandleMouseEvents;
- (char)wantsToInterpretAllKeystrokes;
- (long long)windowLevel;
- (void)wouldHandleEvent:(id)a0 completionHandler:(id /* block */)a1;

@end

@class NSArray, NSButtonCell, NSScrollView, NSTableView, NSMutableArray, NSWindow;
@protocol NSComboBoxCellDataSource;

@interface NSComboBoxCell : NSTextFieldCell {
    id _delegate;
    id _dataSource;
    NSMutableArray *_popUpList;
    struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *_cellFrame;
    struct __cbcFlags { unsigned char usesDataSource : 1; unsigned char completes : 1; unsigned char buttonBordered : 1; unsigned char popUpIsUp : 1; unsigned char reserved : 1; unsigned char drawing : 1; unsigned char synchronizingSelection : 1; unsigned char _needsUpdatedTextInsets : 1; unsigned char reserved1 : 8; unsigned short visibleItems : 16; } _cbcFlags;
    NSButtonCell *_buttonCell;
    NSTableView *_tableView;
    NSScrollView *_scrollView;
    NSWindow *_popUp;
    struct NSEdgeInsets { double top; double left; double bottom; double right; } _previousContentInsets;
}

@property char hasVerticalScroller;
@property struct CGSize { double x0; double x1; } intercellSpacing;
@property double itemHeight;
@property long long numberOfVisibleItems;
@property (getter=isButtonBordered) char buttonBordered;
@property char usesDataSource;
@property (readonly) long long indexOfSelectedItem;
@property (readonly) long long numberOfItems;
@property char completes;
@property id<NSComboBoxCellDataSource> dataSource;
@property (readonly) id objectValueOfSelectedItem;
@property (readonly, copy) NSArray *objectValues;

+ (void)initialize;
+ (char)automaticTextCompletionEnabled;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)delegate;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setDelegate:(id)a0;
- (void)setEnabled:(char)a0;
- (void)setAlignment:(long long)a0;
- (void)setBaseWritingDirection:(long long)a0;
- (void)removeAllItems;
- (void)setFormatter:(id)a0;
- (void)_setDataSource:(id)a0;
- (void)initPopUpWindow;
- (void)setControlSize:(unsigned long long)a0;
- (void)setControlView:(id)a0;
- (void)_combobox_windowWillBeginSheet:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_accessibilityButtonRect;
- (id)_accessibilityButtonUIElement;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_alignmentRectInsetsInView:(id)a0;
- (void)_applicationDidResignActive:(id)a0;
- (double)_buttonHeight;
- (double)_buttonWidth;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_cellFrame;
- (void)_combobox_windowDidBecomeKey:(id)a0;
- (void)_complete:(id)a0;
- (void)_completeNoRecursion:(id)a0;
- (char)_controlView:(id)a0 textView:(id)a1 doCommandBySelector:(SEL)a2;
- (id)_coreUIDrawOptionsWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1 focusRingOnly:(char)a2;
- (struct __CFString { } *)_coreUIStateInView:(id)a0 forFocusRing:(char)a1;
- (struct __CFString { } *)_coreUIWidgetName;
- (void)_dismissPopUpIfNeeded;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_editingBoundsForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_effectiveFontDidChangeTo:(id)a0;
- (char)_fillsWithBackgroundColor;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_focusRingFrameForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 cellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (char)_hasInsetEditingBounds;
- (void)_idealBoundsForTextCell:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 maximumBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1 forCellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (void)_idealContentInsets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; } *)a0 maximumContentInsets:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; } *)a1 forRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2 inView:(id)a3;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_idealContentInsetsForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (id)_initWithTypedStreamCoder_NSComboBoxCell:(id)a0;
- (void)_initializeButtonCell;
- (char)_isButtonBordered;
- (char)_isToolbarComboBox;
- (char)_needRedrawOnWindowChangedKeyState;
- (char)_needsUpdatedTextInsets;
- (void)_noteLengthAndSelectedRange:(id)a0;
- (void)_numberOfRowsDidChangeInComboBoxTableView:(id)a0;
- (void)_old_encodeWithCoder_NSComboBoxCell:(id)a0;
- (char)_popUpIsUp;
- (void)_registerForCompletion:(id)a0;
- (void)_setButtonBordered:(char)a0;
- (void)_setCellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_setNeedsUpdatedTextInsets:(char)a0;
- (char)_shouldDrawWithRolloverInView:(id)a0;
- (char)_shouldRegisterForEditingNotifications;
- (char)_suppressNonTitleDrawing;
- (char)_textDimsWhenDisabled;
- (double)_textVerticalAdjust;
- (double)_textVerticalInset;
- (void)_unregisterForCompletion:(id)a0;
- (void)_updateFieldEditorPositionIfNeeded;
- (void)_updateLengthAndSelectedRange:(id)a0;
- (void)_updatePopUpWindowFrameFirstTimeInSession:(char)a0;
- (int)_vibrancyBlendModeForControlView:(id)a0;
- (void)_windowWillOrderOut:(id)a0;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityExpandedAttribute;
- (id)accessibilityHelpStringForChild:(id)a0;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (char)accessibilityIsChildFocusable:(id)a0;
- (char)accessibilityIsChildrenAttributeSettable;
- (char)accessibilityIsExpandedAttributeSettable;
- (void)accessibilityPerformAction:(id)a0;
- (id)accessibilityPositionOfChild:(id)a0;
- (id)accessibilityRoleAttribute;
- (void)accessibilitySetExpandedAttribute:(id)a0;
- (id)accessibilitySizeOfChild:(id)a0;
- (void)addItemWithObjectValue:(id)a0;
- (void)addItemsWithObjectValues:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForButtonCell:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForTextCell:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })cellSizeForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)completedString:(id)a0;
- (void)deselectItemAtIndex:(long long)a0;
- (void)dismissPopUp:(id)a0;
- (void)drawFocusRingMaskWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)drawWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })drawingRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)editWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1 editor:(id)a2 delegate:(id)a3 event:(id)a4;
- (void)endEditing:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForPopUpWithOldFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 cellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 controlView:(id)a2;
- (unsigned long long)hitTestForEvent:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (long long)indexOfItemWithObjectValue:(id)a0;
- (id)initTextCell:(id)a0;
- (void)insertItemWithObjectValue:(id)a0 atIndex:(long long)a1;
- (long long)interiorBackgroundStyle;
- (char)isButtonHighlighted;
- (char)isOpaque;
- (id)itemObjectValueAtIndex:(long long)a0;
- (void)noteNumberOfItemsChanged;
- (long long)numberOfRowsInTableView:(id)a0;
- (void)orderOutPopUpWindow:(id)a0;
- (void)popUp:(id)a0;
- (void)reloadData;
- (void)removeItemAtIndex:(long long)a0;
- (void)removeItemWithObjectValue:(id)a0;
- (void)resetCursorRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)scrollItemAtIndexToTop:(long long)a0;
- (void)scrollItemAtIndexToVisible:(long long)a0;
- (void)selectItemAtIndex:(long long)a0;
- (void)selectItemWithObjectValue:(id)a0;
- (void)selectWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1 editor:(id)a2 delegate:(id)a3 start:(long long)a4 length:(long long)a5;
- (void)setButtonHighlighted:(char)a0;
- (char)shouldEdit:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (void)synchronizeTableViewSelectionWithStringValue:(id)a0;
- (void)synchronizeTableViewSelectionWithText:(id)a0;
- (id)tableView:(id)a0 objectValueForTableColumn:(id)a1 row:(long long)a2;
- (void)tableViewAction:(id)a0;
- (void)tableViewSelectionDidChange:(id)a0;
- (void)tableViewSelectionIsChanging:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titleRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)trackMouse:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2 untilMouseUp:(char)a3;

@end

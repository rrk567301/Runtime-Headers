@class NSArray, NSString, NSMenu, NSMenuItem;
@protocol NSPopUpButtonCellDelegate;

@interface NSPopUpButtonCell : NSMenuItemCell <NSMenuItemValidation> {
    NSMenu *_menu;
    int _selectedIndex;
    struct __pbcFlags { unsigned char pullsDown : 1; unsigned char preferredEdge : 3; unsigned char menuIsAttached : 1; unsigned char usesItemFromMenu : 1; unsigned char altersStateOfSelectedItem : 1; unsigned char decoding : 1; unsigned char arrowPosition : 2; unsigned char drawing : 1; unsigned char menuShouldBeUniquedAgainstMain : 1; unsigned int RESERVED : 20; } _pbcFlags;
    id _popupReserved;
    long long _sizingBehavior;
    unsigned char _matchMenuItemImageSizeToPopUp : 1;
    unsigned char _shouldAnimateImageUpdates : 1;
}

@property (setter=_setSizingBehavior:) long long _sizingBehavior;
@property (weak) id<NSPopUpButtonCellDelegate> delegate;
@property char matchMenuItemImageSizeToPopUp;
@property (retain) NSMenu *menu;
@property char pullsDown;
@property char autoenablesItems;
@property unsigned long long preferredEdge;
@property char usesItemFromMenu;
@property char altersStateOfSelectedItem;
@property (readonly, copy) NSArray *itemArray;
@property (readonly) long long numberOfItems;
@property (readonly) NSMenuItem *lastItem;
@property (readonly) NSMenuItem *selectedItem;
@property (readonly) long long indexOfSelectedItem;
@property (readonly, copy) NSArray *itemTitles;
@property (readonly, copy) NSString *titleOfSelectedItem;
@property unsigned long long arrowPosition;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (id)_attachedCell;
+ (long long)_buttonStyleWithStyleInfo:(struct { unsigned long long x0; long long x1; char x2; char x3; char x4; char x5; char x6; char x7; char x8; })a0;
+ (Class)_visualProviderClass;
+ (Class)bezelConfigurationClass;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)itemAtIndex:(long long)a0;
- (void)addItemWithTitle:(id)a0;
- (void)setImage:(id)a0;
- (void)setTitle:(id)a0;
- (id)attributedTitle;
- (void)setObjectValue:(id)a0;
- (id)objectValue;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)removeAllItems;
- (id)_indicatorImage;
- (struct CGPoint { double x0; double x1; })_locationForPopUpMenuWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)_obeysHiddenBit;
- (char)_configurationSupportsFormStyle;
- (id)_highlightColor;
- (void)synchronizeTitleAndSelectedItem;
- (void)_accessibilityPressAction:(id)a0;
- (void)_allItemsRemoved:(id)a0;
- (char)_allowsContextMenus;
- (char)_alwaysShowBezelForCurrentBezelStyleAndState;
- (long long)_applicableArrowLocation;
- (char)_canBecomeDefaultButtonCell;
- (Class)_classForOverrideCheck;
- (void)_clearTargetsFromMenuPointingAtSelf:(id)a0;
- (id)_copyWithoutMenu;
- (void)_createAndPopulateKeyEquivalentUniquerIfNecessary;
- (void)_doPopupSearchString;
- (void)_effectiveFontDidChangeTo:(id)a0;
- (unsigned long long)_effectiveImagePositionBeforeCompression;
- (double)_extraWidthForCellHeight:(double)a0;
- (void)_fixTargetsForMenu:(id)a0;
- (void)_handleWillPopUpNotification;
- (char)_hasAttributedStringValue;
- (char)_hasImage;
- (char)_hasRolloverBezelArt;
- (id)_highlightTextColor;
- (void)_itemAdded:(id)a0;
- (void)_itemChanged:(id)a0;
- (void)_itemRemoved:(id)a0;
- (id)_keyEquivalentUniquerCreatingIfNecessary:(char)a0;
- (void)_menuItemSelected:(id)a0;
- (struct CGPoint { double x0; double x1; })_menuLocationForEvent:(id)a0 inCellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (double)_menuMinimumWidthForEvent:(id)a0 inCellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (void)_menuWillSendAction:(id)a0;
- (char)_needRedrawOnWindowChangedKeyState;
- (char)_performKeyEquivalent:(id)a0 conditionally:(char)a1;
- (void)_popUpItemAction:(id)a0;
- (unsigned long long)_popUpMenuFlags:(char)a0;
- (id)_popUpMenuOptionsForFlags:(unsigned long long)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (char)_positionsMenuAsPullDown;
- (char)_positionsMenuRelativeToRightEdge;
- (long long)_preferredFocusLocation;
- (long long)_previousItemIfExists;
- (void)_rawSetSelectedIndex:(long long)a0;
- (void)_removePreviousItem;
- (void)_selectItemAtIndex:(long long)a0 alteringState:(char)a1;
- (void)_setMenuShouldBeUniquedAgainstMainMenu:(char)a0;
- (void)_setMouseInside:(char)a0;
- (void)_setPreviousItem:(long long)a0;
- (char)_shouldDrawTextWithDisabledAppearance;
- (char)_shouldHideFirstMenuItemInPullDown;
- (char)_shouldUseTextAppearanceInToolbar;
- (char)_subclassOverridesAnyDrawMethodsAffectingVibrancy:(char *)a0;
- (void)_subscribeToNotificationsForMenu:(id)a0;
- (void)_unsubscribeFromNotificationsForMenu:(id)a0;
- (void)_updateTableViewContextForControlView:(id)a0;
- (char)_wantsLegacyHorizontalBorderlessInset;
- (char)_wantsMultilineLayout;
- (char)_wantsToObserveInTableView;
- (void)_withAnimatedImageUpdatesIfApplicable:(id /* block */)a0;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (char)accessibilityIsChildrenAttributeSettable;
- (char)accessibilityIsFocusedAttributeSettable;
- (char)accessibilityIsValueAttributeSettable;
- (void)accessibilityPerformAction:(id)a0;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (void)addItemsWithTitles:(id)a0;
- (void)attachPopUpWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (id)bezelConfigurationInView:(id)a0 appearance:(id)a1;
- (struct CGSize { double x0; double x1; })cellSizeForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)defaultSymbolContentTransition;
- (void)didChangeResolvedButtonStyleInControlView:(id)a0 oldButtonStyle:(long long)a1;
- (void)dismissPopUp;
- (void)drawBorderAndBackgroundWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)drawImageWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)drawInteriorWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)drawSeparatorItemWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })drawTitle:(id)a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inView:(id)a2;
- (void)drawWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })focusRingMaskBoundsForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (unsigned long long)hitTestForEvent:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (long long)indexOfItem:(id)a0;
- (long long)indexOfItemWithRepresentedObject:(id)a0;
- (long long)indexOfItemWithTag:(long long)a0;
- (long long)indexOfItemWithTarget:(id)a0 andAction:(SEL)a1;
- (long long)indexOfItemWithTitle:(id)a0;
- (id)initTextCell:(id)a0;
- (id)initTextCell:(id)a0 pullsDown:(char)a1;
- (void)insertItemWithTitle:(id)a0 atIndex:(long long)a1;
- (char)isOpaque;
- (id)itemTitleAtIndex:(long long)a0;
- (id)itemWithTitle:(id)a0;
- (char)keyDown:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })keyEquivalentRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)menuView;
- (void)observeMenuItemProperties;
- (void)performClickWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)removeItemAtIndex:(long long)a0;
- (void)removeItemWithTitle:(id)a0;
- (void)selectItem:(id)a0;
- (void)selectItemAtIndex:(long long)a0;
- (char)selectItemWithTag:(long long)a0;
- (void)selectItemWithTitle:(id)a0;
- (void)setBackgroundStyle:(long long)a0;
- (void)setBordered:(char)a0;
- (void)setMenuItem:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })stateImageRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titleRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)touchBeganAt:(struct CGPoint { double x0; double x1; })a0 inView:(id)a1;
- (char)trackMouse:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2 untilMouseUp:(char)a3;
- (void)unobserveMenuItemProperties;
- (char)validateMenuItem:(id)a0;

@end

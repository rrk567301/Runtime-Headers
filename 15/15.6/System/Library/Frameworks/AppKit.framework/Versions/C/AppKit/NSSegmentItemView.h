@class NSFont, NSString, NSUserInterfaceCompressionOptions, NSSegmentedCell, NSColor, NSSegmentItemImageView, NSImage, NSLegacySegmentItem, NSSegmentItemLabelView, NSSegmentItemBezelView;

@interface NSSegmentItemView : NSView {
    NSSegmentItemBezelView *_bezelView;
    NSSegmentItemLabelView *_labelView;
    NSSegmentItemImageView *_imageView;
    NSSegmentItemImageView *_menuIndicatorView;
    struct CGSize { double width; double height; } _labelSize;
    char _rollover;
    unsigned long long _imageScaling;
    NSFont *_font;
    char _isObserving;
}

@property (weak) NSSegmentedCell *parentCell;
@property (weak) NSLegacySegmentItem *segmentItemData;
@property (copy) NSString *label;
@property (retain) NSImage *image;
@property unsigned long long imageScaling;
@property double segmentWidth;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } labelRect;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } imageRect;
@property long long segmentStyle;
@property unsigned long long controlSize;
@property char drawsBezel;
@property (retain) NSFont *font;
@property char enabled;
@property char highlighted;
@property char emphasized;
@property char rollover;
@property char active;
@property char selected;
@property char leadingCap;
@property char trailingCap;
@property char leadingSeparator;
@property char trailingSeparator;
@property long long leadingSegmentHighlightState;
@property long long trailingSegmentHighlightState;
@property char showMenuIndicator;
@property (copy) NSColor *bezelTintColor;
@property long long alignment;
@property NSUserInterfaceCompressionOptions *compressibleOptions;
@property char useSlidingSegmentStyle;
@property char useTextToolbarStyle;

+ (char)automaticallyNotifiesObserversOfImage;

- (void)dealloc;
- (void).cxx_destruct;
- (void)layout;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_updateBezelAndContentsAnimated;
- (struct CGSize { double x0; double x1; })_minimumSegmentSizeWithOptions:(id)a0;
- (void)_setupObserving;
- (double)_availableTruncationWidth;
- (double)_contentWidth;
- (double)_contentWidthWithOptions:(id)a0;
- (id)_coreUIOptions;
- (id)_coreUISegmentPosition;
- (id)_coreUIState;
- (id)_imageViewCreatingIfNeeded;
- (struct CGSize { double x0; double x1; })_labelSize;
- (id)_labelViewCreatingIfNeeded;
- (id)_menuIndicatorViewCreatingIfNeeded;
- (double)_minimumContentWidthWithOptions:(id)a0;
- (struct CGSize { double x0; double x1; })_minimumSegmentSize;
- (id)_preferredAppearanceForSegmentImageView:(id)a0;
- (id)_preferredAppearanceForSegmentLabelView:(id)a0;
- (struct CGSize { double x0; double x1; })_preferredImageAlignmentSize;
- (struct CGSize { double x0; double x1; })_preferredSegmentSize;
- (struct CGSize { double x0; double x1; })_preferredSegmentSizeWithOptions:(id)a0;
- (struct CGSize { double x0; double x1; })_preferredSizeForContentWidth:(double)a0;
- (id)_requestMetrics:(id)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })_segmentAlignmentRectInsets;
- (struct { struct CGSize { double x0; double x1; } x0; struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; } x1; struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; } x2; })_segmentMetricsWithCompressionOptions:(id)a0;
- (char)_showsDisabledStateInBezel;
- (void)_stopObserving;
- (void)_updateBezelView;
- (void)_updateCachedLabelSize;
- (void)_updateContentState;
- (char)_useLegacyContentInsets;
- (int)_vibrancyBlendMode;
- (int)_vibrancyBlendModeForSegmentBezelView:(id)a0 proposedBlendMode:(int)a1;
- (int)_vibrancyBlendModeForSegmentImageView:(id)a0 proposedBlendMode:(int)a1;
- (int)_vibrancyBlendModeForSegmentLabelView:(id)a0 proposedBlendMode:(int)a1;
- (void)_windowDidOrderOnScreen;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (double)contentSpacing;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)isAccessibilityElement;
- (id)labelView;
- (double)lastBaselineOffsetFromBottom;
- (double)minimumLabelWidth;
- (void)setImageRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setLabelView:(id)a0;
- (void)viewDidChangeEffectiveAppearance;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;

@end

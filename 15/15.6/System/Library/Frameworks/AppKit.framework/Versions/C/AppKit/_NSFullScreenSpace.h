@class NSScreen, _NSFullScreenCreateTileDropTargetController, _NSFullScreenContentController, _NSFullScreenTileResizeCrossfadeOverlayWindow, _NSFullScreenModalStackController, _NSFullScreenTileDividerWindow, _NSFullScreenTileOverlayWindow, NSMutableArray, NSPointerArray, NSHIPresentationInstance, _NSFullScreenBackdropController;

@interface _NSFullScreenSpace : NSObject {
    char _modelInvalidated;
    unsigned long long _parentSpaceID;
    unsigned long long _wallSpaceID;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _tileRect;
    double _tileDividerSize;
    NSScreen *_screen;
    NSPointerArray *_activeTransitions;
    long long _liveResizeCount;
    unsigned long long _dividerDirections;
    _NSFullScreenTileDividerWindow *_westDividerWindow;
    _NSFullScreenTileDividerWindow *_eastDividerWindow;
    char _isDoingExternalCloseAnimation;
    char _hasSiblings;
    char _suppressFetchingNewTileSize;
    _NSFullScreenTileResizeCrossfadeOverlayWindow *_resizeCrossfadeOverlay;
    double _resizeCrossfadeDuration;
    long long _tileOverlayShowCount;
    char _tileHadLimitedClipping;
    _NSFullScreenTileOverlayWindow *_tileOverlayWindow;
    _NSFullScreenTileOverlayWindow *_siblingTileOverlayWindow;
    char _siblingOverlayNeedsBeginPresentation;
    NSMutableArray *_animatingOverlayWindows;
    char _presentationInstanceHasInitializedSpace;
    NSHIPresentationInstance *_presentationInstance;
    unsigned long long _presentationOptions;
}

@property (readonly) NSHIPresentationInstance *presentationInstance;
@property (readonly, nonatomic) unsigned long long tileSpaceID;
@property (nonatomic) _NSFullScreenContentController *contentController;
@property (readonly, nonatomic) _NSFullScreenBackdropController *backdropController;
@property (readonly, nonatomic) _NSFullScreenModalStackController *modalStackController;
@property (readonly, nonatomic) _NSFullScreenCreateTileDropTargetController *createTileDropTargetController;
@property (nonatomic) double bottomReservedSpace;
@property (nonatomic) double leftReservedSpace;
@property (nonatomic) double rightReservedSpace;
@property (readonly, nonatomic) unsigned int exitReplacementWindowID;

+ (void)initialize;
+ (id)_placeholderFullScreenInstances;
+ (id)visibleFullScreenSpaceOnScreen:(id)a0;
+ (id)_fullScreenMapTable;
+ (void)_fullscreenMenuBarVisibilityChanged;
+ (void)_registerCGSNotificationsIfNeededForSpace:(id)a0;
+ (void)_unregisterUnusedCGSNotifications;
+ (void)addPostDecodeAction:(id /* block */)a0;
+ (char)alwaysShowsMenuBarInFullScreen;
+ (id)fullScreenSpaceEnteringFullScreen;
+ (id)fullScreenSpaceWithTileID:(unsigned long long)a0;
+ (id)fullScreenSpaceWithTileID:(unsigned long long)a0 createIfNeeded:(char)a1;
+ (id)fullScreenSpaces;
+ (id)fullScreenSpacesOnParentSpace:(unsigned long long)a0;
+ (char)hasSpaceEnteringOrExitingFullScreen;
+ (char)hasTransitionForWindowID:(unsigned int)a0;
+ (char)hasTransitionForWindowID:(unsigned int)a0 ofClass:(Class)a1;
+ (char)hasVisibleFullScreenSpaces;
+ (void)interruptTransitions;
+ (id)placeholderFullScreenSpace;
+ (id)spaceWithContentWindowID:(unsigned int)a0;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tileRectForSpaceWithID:(unsigned long long)a0;
+ (id)visibleFullScreenSpaces;

- (void)dealloc;
- (id)init;
- (void)_cacheTileRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_cancelResizeCrossfadeAnimation;
- (char)showingSiblingTileOverlayWindow;
- (void)startLiveResize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tileContentRect;
- (void)updateTileShape;
- (unsigned long long)_effectiveSpaceResizeDirections;
- (char)isTransitioning;
- (char)tileFillsScreen;
- (id)windowIDsInTile;
- (void)_beginOverlayPresentation:(id)a0;
- (void)_didBeginExitTransition;
- (void)_endOverlayPresentation:(id)a0;
- (void)_hideTileDividerWindows;
- (void)_makePresentationInstanceIfNeeded;
- (void)_removeEastTileDividerWindow;
- (void)_removeTileDividerWindows;
- (void)_removeWestTileDividerWindow;
- (void)_reshapeTileDividerWindows;
- (void)_showTileDividerWindows;
- (char)_spaceConsideredVisible;
- (void)_updateSpaceProperties;
- (void)_updateTileDividerWindows;
- (void)_updateTileShapeAndReshapeContentsWithAckServer:(char)a0;
- (void)activateFullScreenPresentationOptions;
- (char)alwaysReservesSpaceForMenuBarInFullScreen;
- (struct CGSize { double x0; double x1; })availableWallSpaceSize;
- (id)backgroundWindowIDs;
- (void)beginSeparateExternalCloseAnimation;
- (void)beginSiblingOverlayPresentationIfNeeded;
- (void)cancelSiblingOverlayAnimations;
- (struct CGImage { } *)captureSnapshotIncludingMenuBar:(char)a0 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a1;
- (id)currentDividerResizeDirections;
- (id)cursorForResizeDirection:(long long)a0;
- (void)discardPresentationInstance;
- (void)displayChanged;
- (void)enableFetchingNewTileSize;
- (void)endLiveResize;
- (char)hasSiblingFromThisApp;
- (void)hideOverlayWindow;
- (char)inLiveResize;
- (id)initWithTileSpaceID:(unsigned long long)a0;
- (void)interruptTransitions;
- (void)invalidateModelBacking;
- (char)isEnteringFullScreen;
- (char)isExitingFullScreen;
- (char)isInFullScreen;
- (char)isLeftTile;
- (char)isPerformingExternalCloseAnimation;
- (char)modelBackingIsValid;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })parentSpaceCGRect;
- (unsigned long long)parentSpaceID;
- (void)parentSpaceRelocated;
- (id)perfTestResizeWindow;
- (char)performDividerDragWithEvent:(id)a0 forResizeDirection:(long long)a1;
- (void)performResizeCrossfadeIfNeeded;
- (void)prepareResizeCrossfadeOverlayWithDuration:(double)a0 resize:(char)a1;
- (void)removeSiblingOverlayWindow;
- (void)removeTransition:(id)a0;
- (void)replaceContentWithSnapshotForClose;
- (void)resolveTileSpaceID:(unsigned long long)a0;
- (id)screen;
- (void)setupSiblingOverlayWindowImmediately:(char)a0 blurContent:(char)a1;
- (void)showOverlayWindowFromFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 blurContent:(char)a1;
- (char)showingOverlayWindowFrame;
- (id)siblingFullScreenSpaceFromThisApp;
- (void)startMenuBarAnimation:(double)a0;
- (void)startTransition:(id)a0;
- (void)suppressFetchingNewTileSize;
- (char)suppressImplicitFullScreenForOtherWindows;
- (id)tileOverlayWindow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tileRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tileToolbarContentRect;
- (void)updateOverlayWithBlur:(char)a0;
- (void)updateSiblingOverlayWindow;
- (void)updateTileShapeAndReshapeContents;
- (void)updateTileShapeAndReshapeContentsUsingTileFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)updateTileShapeAndReshapeContentsUsingTileFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 ackServer:(char)a1;
- (void)updateTileShapeAndReshapeContentsWithoutNotifyingServer;
- (unsigned long long)wallSpaceID;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })wallSpaceRect;

@end

@class NSString, NSImage, NSImageSymbolConfiguration, NSFont, NSColor;

@interface NSImageView : NSControl <_NSAsynchronousPreparationDelegate, NSAccessibilityImage, NSMenuItemValidation> {
    struct { unsigned char _hasImageSubview : 1; unsigned char _usesSubview : 1; unsigned char _hasCachedUsesSubview : 1; unsigned int _unused : 22; unsigned char _rejectsMultiFileDrops : 1; unsigned char _compatibleScalingAndAlignment : 1; unsigned char _reserved : 1; unsigned char _overridesDrawing : 1; unsigned char _allowsCutCopyPaste : 1; unsigned char _editable : 1; unsigned char _placeholderPropertyPrecedence : 1; } _ivFlags;
    id _target;
    SEL _action;
}

@property (class) long long defaultPreferredImageDynamicRange;

@property (nonatomic, readonly) Class _intelligenceBaseClass;
@property (copy) NSColor *templateTintColor;
@property (nonatomic, setter=_setUsesCachedImage:) char _usesCachedImage;
@property (retain) NSImage *placeholderImage;
@property (copy) NSFont *symbolFont;
@property long long symbolScale;
@property (retain) NSImage *image;
@property (getter=isEditable) char editable;
@property unsigned long long imageAlignment;
@property unsigned long long imageScaling;
@property unsigned long long imageFrameStyle;
@property (copy) NSImageSymbolConfiguration *symbolConfiguration;
@property (copy) NSColor *contentTintColor;
@property char animates;
@property char allowsCutCopyPaste;
@property long long preferredImageDynamicRange;
@property (readonly) long long imageDynamicRange;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (id)imageViewWithImage:(id)a0;
+ (id)imageWellWithImage:(id)a0 target:(id)a1 action:(SEL)a2;

- (void)dealloc;
- (id)init;
- (char)respondsToSelector:(SEL)a0;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setEnabled:(char)a0;
- (void)setTarget:(id)a0;
- (id)target;
- (void)setAction:(SEL)a0;
- (void)layout;
- (void)setObjectValue:(id)a0;
- (SEL)action;
- (id)_vibrancyFilter;
- (void)draggingExited:(id)a0;
- (long long)backgroundStyle;
- (void)delete:(id)a0;
- (void)_addSymbolEffect:(id)a0 options:(id)a1 animated:(char)a2;
- (void)_commonInit;
- (char)_contentHuggingDefault_isUsuallyFixedHeight;
- (char)_contentHuggingDefault_isUsuallyFixedWidth;
- (char)_copyImageToPasteboard;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_drawingRectForImage;
- (id)_imageSubview;
- (void)_intelligenceCollectContentIn:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 collector:(id)a1;
- (id)_menuForEvent:(id)a0;
- (char)_rejectsMultiFileDrops;
- (void)_removeAllSymbolEffectsWithOptions:(id)a0 animated:(char)a1;
- (void)_removeSymbolEffectOfType:(id)a0 options:(id)a1 animated:(char)a2;
- (void)_setBackgroundStyleForSubtree:(long long)a0;
- (void)_setImageAndNotifyTarget:(id)a0;
- (void)_setImageSubview:(id)a0;
- (void)_setRejectsMultiFileDrops:(char)a0;
- (void)_setSymbolImage:(id)a0 withContentTransition:(id)a1 options:(id)a2;
- (char)_shouldTrackMouseWithEvent:(id)a0;
- (void)_updateImageSubview;
- (void)_updateImageSubviewIfNecessary;
- (void)_updateUsesSubview;
- (char)_usesSubview;
- (char)_validateMenuItem:(id)a0;
- (id)accessibilityLabel;
- (void)addSymbolEffect:(id)a0;
- (void)addSymbolEffect:(id)a0 options:(id)a1;
- (void)addSymbolEffect:(id)a0 options:(id)a1 animated:(char)a2;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (char)allowsVibrancy;
- (id)asynchronousPreparation:(id)a0 prepareResultUsingParameters:(id)a1;
- (void)asynchronousPreparationDidChangePreparedResult:(id)a0;
- (void)awakeFromNib;
- (void)concludeDragOperation:(id)a0;
- (void)copy:(id)a0;
- (void)cut:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (double)firstBaselineOffsetFromTop;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (char)isOpaque;
- (void)keyDown:(id)a0;
- (double)lastBaselineOffsetFromBottom;
- (id)menuForEvent:(id)a0;
- (id)ns_widgetType;
- (void)paste:(id)a0;
- (char)performDragOperation:(id)a0;
- (void)registerForDrags;
- (void)removeAllSymbolEffects;
- (void)removeAllSymbolEffectsWithOptions:(id)a0;
- (void)removeAllSymbolEffectsWithOptions:(id)a0 animated:(char)a1;
- (void)removeSymbolEffectOfType:(id)a0;
- (void)removeSymbolEffectOfType:(id)a0 options:(id)a1;
- (void)removeSymbolEffectOfType:(id)a0 options:(id)a1 animated:(char)a2;
- (void)setCell:(id)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)setLayer:(id)a0;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setSymbolImage:(id)a0 withContentTransition:(id)a1;
- (void)setSymbolImage:(id)a0 withContentTransition:(id)a1 options:(id)a2;
- (void)toggleAllAnimations:(id)a0;
- (void)toggleAnimation:(id)a0;
- (void)updateCell:(id)a0;
- (void)updateLayer;
- (char)validateMenuItem:(id)a0;
- (char)wantsUpdateLayer;

@end

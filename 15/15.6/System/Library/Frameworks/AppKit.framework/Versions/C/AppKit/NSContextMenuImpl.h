@class NSView, NSString, NSMenu, NSPriorityQueue, NSMenuScrollView, NSObject, NSWindow, NSMutableArray;
@protocol NSMenuLifecycleDelegate, NSMenuBatchUpdateSupporting, NSMenuRepresentable, NSContextMenuWindowProtocol, NSMenuLifecycleProtocol, NSMenuContextProtocol;

@interface NSContextMenuImpl : NSCocoaMenuImpl <_NSPopupMenuScrollViewDelegate, NSContextMenuLifecycleProtocol> {
    NSObject<NSMenuRepresentable, NSMenuBatchUpdateSupporting> *_representationView;
    NSView *_rootView;
    NSMenuScrollView *_scrollView;
    NSView *_topScrollIndicator;
    NSView *_bottomScrollIndicator;
    NSPriorityQueue *_titleWidths;
    NSPriorityQueue *_keWidths;
    NSPriorityQueue *_customViewWidths;
    NSMutableArray *_preferredHeights;
    struct CGSize { double width; double height; } _preferredSize;
    struct CGSize { double width; double height; } _lastVisibleSize;
    long long _pendingAsyncUpdates;
    long long _maxTitleWidthMenuIndex;
    long long _maxKEWidthMenuIndex;
    long long _maxCustomViewWidthMenuIndex;
    long long _preferredHeightsNumberOfItems;
    unsigned long long _effectiveControlSize;
    double _maxTitleWidth;
    double _maxKEWidth;
    double _maxCustomViewWidth;
    double _estimatedTotalHeight;
    double _minFilteringWidth;
    double _sharedImageWidth;
    double _minUnsharedImageWidth;
    double _maxUnsharedImageWidth;
    double _maxSubmenuScreenTimeIndicatorWidth;
    double _maxCommandKeyWidth;
    double _maxModifiersWidth;
    double _maxMarkWidth;
    double _maxMarkWidthIncludingIndent;
    double _lastRenderedMarkWidth;
    unsigned int _markAtIndentLevel;
    char _haveSeenMarkAtIndentZero;
    char _shouldIgnorePopupCallbacks;
    char _shouldIgnoreScrollChanges;
    char _needsProcessMenuInsertion;
    char _needsSharedImageWidthPass;
    char _isGroupingWidth;
    char _isGroupingHeight;
    char _hasDeferredHighlight;
    char _hasNonEmptyWindow;
    char _isKey;
    char _isRunLoopNested;
    char _isOperationCompleted;
}

@property (readonly, weak) NSWindow *window;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frame;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentBounds;
@property (setter=setTopScrollPositionIndicatorHidden:) char isTopScrollPositionIndicatorHidden;
@property (setter=setBottomScrollPositionIndicatorHidden:) char isBottomScrollPositionIndicatorHidden;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSView *view;
@property (weak) NSObject<NSContextMenuWindowProtocol> *windowProxy;
@property (readonly, weak) NSObject<NSMenuLifecycleProtocol> *presentationParent;
@property (retain) NSObject<NSMenuContextProtocol> *presentationContext;
@property (weak) NSObject<NSMenuLifecycleDelegate> *delegate;
@property (readonly, weak) NSMenu *menu;
@property (readonly) char shouldSendLifecycleNotifications;

+ (void)presentPopup:(id)a0 fromView:(id)a1 withContext:(id)a2 animated:(char)a3;

- (void)dealloc;
- (void).cxx_destruct;
- (void)_updateAdditionalSizeAttributes;
- (id)_window;
- (double)_paddingOnEdge:(unsigned long long)a0;
- (void)_updateStateColumnWidthForItem:(id)a0;
- (double)_additionalHeightOffset;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsIfOpen;
- (char)_canOpenSubmenuFromView:(id)a0;
- (void)_commitWindowSizeChangesForWidth:(char)a0 height:(char)a1 animated:(char)a2;
- (void)_commitWindowSizeChangesIfNeeded;
- (int)_countMarksUpToIndentLevel:(int)a0;
- (void)_didAutoScroll:(long long)a0 direction:(long long)a1;
- (char)_filterDownWithEvent:(id)a0;
- (void)_handleDeferredHighlightActionIfNeeded;
- (char)_hasMarkAtIndentLevel:(long long)a0;
- (id)_hostWindow;
- (void)_initTrackingSessionIfNeeded;
- (char)_isMenuEmpty;
- (void)_layoutSubtreeAfterWindowFrameChange;
- (id)_makeItemViewForMenuItem:(id)a0 filterQuery:(id)a1 appearanceOverride:(id)a2;
- (struct CGSize { double x0; double x1; })_maximumSizeForScreen:(id)a0;
- (void)_menuBackingViewDidChangeIntrinsicSizeWithAnimation:(char)a0;
- (void)_menuDidChangeFontFrom:(id)a0 to:(id)a1;
- (void)_menuDidChangeHasBottomPaddingFrom:(char)a0 to:(char)a1;
- (void)_menuDidChangeHasTopPaddingFrom:(char)a0 to:(char)a1;
- (void)_menuDidChangeIndentationWidthFrom:(unsigned long long)a0 to:(unsigned long long)a1;
- (void)_menuDidChangeShowsStateColumnFrom:(char)a0 to:(char)a1;
- (void)_menuDidChangeWidthFrom:(double)a0 to:(double)a1;
- (void)_menuDidRemoveAllItems:(id)a0;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 customViewDidChangeSize:(struct CGSize { double x0; double x1; })a2;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeAttributedTitleFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeBadgeFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeEnabledStateFrom:(char)a2 to:(char)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeFontFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeGroupHeaderFrom:(char)a2 to:(char)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeHiddenFrom:(char)a2 to:(char)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeImageFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeIndentFrom:(long long)a2 to:(long long)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeKeyEquivalentDisplayOverrideTo:(id)a2;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeKeyEquivalentFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeKeyEquivalentModifierMaskFrom:(unsigned long long)a2 to:(unsigned long long)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeKeyEquivalentVirtualKeyCodeFrom:(unsigned short)a2 to:(unsigned short)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeShowsBlockedByScreenTimeFrom:(char)a2 to:(char)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeStateImageFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeSubmenuFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeSubtitleFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 atIndex:(unsigned long long)a1 didChangeTitleFrom:(id)a2 to:(id)a3;
- (void)_menuItem:(id)a0 wasAddedToNewIndex:(unsigned long long)a1;
- (void)_menuItem:(id)a0 wasRemovedFromPreviousIndex:(unsigned long long)a1;
- (void)_populateMenuPresentationIfNeeded;
- (struct CGSize { double x0; double x1; })_preferredMenuSize;
- (char)_prefersSyncRendering;
- (void)_prepareForPresentation;
- (void)_recalculateOptimalSize;
- (void)_reloadData;
- (id)_rootView;
- (void)_scrollIfNecessaryToKeepSelectionVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectionLayerFrameForView:(id)a0;
- (void)_sendMenuOpening;
- (void)_setHasMarkAtIndentLevel:(long long)a0;
- (void)_setHighlighted:(char)a0 menuItemView:(id)a1;
- (char)_shouldUseAsyncUpdateBehavior;
- (double)_targetHeight;
- (double)_targetHeight:(char)a0;
- (double)_targetWidth;
- (id)_textFieldResponder;
- (double)_updateHeightForMenuItemAtIndex:(unsigned long long)a0 withNewPreferredHeight:(double)a1;
- (void)_updateSizeEstimateForItemAtIndex:(long long)a0 includingHeight:(char)a1;
- (id)activeRepresentationView;
- (double)additionalPulldownMenuOffset;
- (void)beginGroupingUpdates;
- (char)canBeginAutoScrollWithEvent:(id)a0;
- (char)canPerformActionForHighlightedItem;
- (void)createScrollPositionIndicators;
- (id)deepestKeySubmenu;
- (id)deepestPresentedSubmenu;
- (void)didBecomeKey;
- (void)didResignKey;
- (char)dismissAnimated:(char)a0 completion:(id /* block */)a1;
- (void)endGroupingUpdates;
- (char)filterMenuWithKeyEvent:(id)a0;
- (id)firstResponderView;
- (void)forEachRepresentationViewDo:(id /* block */)a0;
- (void)handleMovedDraggedEvent:(id)a0;
- (void)highlightItemUnderMouse;
- (char)isKey;
- (double)lineHeight;
- (void)loadView;
- (id)makeViewForMenuItemAtIndex:(long long)a0 withFilterQuery:(id)a1;
- (double)markWidthsForItem:(id)a0;
- (void)menuBackingViewDidInsertItemAtIndex:(unsigned long long)a0;
- (void)menuBackingViewDidRemoveItemAtIndex:(unsigned long long)a0;
- (void)mouseDragged:(id)a0;
- (void)mouseMoved:(id)a0;
- (char)performSearchWithString:(id)a0;
- (void)popupWindowWillShrinkMenu:(double)a0;
- (double)preferredViewHeightForMenuItemAtIndex:(unsigned long long)a0;
- (void)reloadHeightForFilteredMenuItems:(id)a0 withAdditionalSpacingExcludingPadding:(double)a1;
- (void)removeScrollPositionIndicators;
- (void)scrollWheel:(id)a0;
- (long long)scrollingBehavior;
- (void)setScrollingBehavior:(long long)a0;
- (char)shouldDismissOnEvent:(id)a0 withTracking:(long long)a1;
- (void)userDidScroll:(struct CGPoint { double x0; double x1; })a0;
- (double)verticalOffset;
- (id)viewAtCurrentMouseLocation;
- (id)viewAtCurrentMouseLocation:(id)a0;
- (id)viewAtMenuIndex:(unsigned long long)a0;
- (id)viewAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)viewDidAppear;
- (void)viewDidDisappear;
- (void)viewDidLayout;
- (void)viewDidLoad;
- (void)viewWillAppear;
- (void)willMoveToWindow;
- (void)windowDidChangeFrameTo:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 focusedItem:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;

@end

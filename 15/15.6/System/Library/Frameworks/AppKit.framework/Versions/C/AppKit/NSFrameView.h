@class NSCell, NSString, NSButton, NSMutableArray;

@interface NSFrameView : NSView {
    unsigned long long styleMask;
    NSString *_title;
    NSString *_subtitle;
    NSCell *titleCell;
    NSButton *closeButton;
    NSButton *zoomButton;
    NSButton *minimizeButton;
    char resizeByIncrement;
    char ___available_for_whatever;
    unsigned char __unused_wasTabViewCount;
    struct CGSize { double width; double height; } resizeParameter;
    NSMutableArray *edgeResizingTrackingAreas;
}

@property unsigned long long styleMask;

+ (id)_defaultTitleFontForWindowWithStyleMask:(unsigned long long)a0;
+ (unsigned long long)_validateStyleMask:(unsigned long long)a0;
+ (char)clipsToBounds;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
+ (void)initTitleCell:(id)a0 styleMask:(unsigned long long)a1;
+ (struct CGSize { double x0; double x1; })minContentSizeForMinFrameSize:(struct CGSize { double x0; double x1; })a0 styleMask:(unsigned long long)a1;
+ (struct CGSize { double x0; double x1; })minFrameSizeForMinContentSize:(struct CGSize { double x0; double x1; })a0 styleMask:(unsigned long long)a1;
+ (double)minFrameWidthWithTitle:(id)a0 styleMask:(unsigned long long)a1;

- (void)dealloc;
- (void)setTitle:(id)a0;
- (void)setSubtitle:(id)a0;
- (id)subtitle;
- (id)title;
- (char)_toolbarIsShown;
- (void)setAspectRatio:(struct CGSize { double x0; double x1; })a0;
- (char)_canHaveToolbar;
- (void)setIsResizable:(char)a0;
- (double)_distanceFromToolbarBaseToTitlebar;
- (void)_drawFrameRects:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_edgeResizingTrackingAreas;
- (void)_hideToolbarWithAnimation:(char)a0;
- (char)_isHUDWindow;
- (char)_isSheet;
- (char)_isUtility;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_maxTitlebarTitleRect;
- (void)_setFrameNeedsDisplay:(char)a0;
- (void)_setNonactivatingPanel:(char)a0;
- (void)_setUtilityWindow:(char)a0;
- (unsigned long long)_shadowFlags;
- (void)_showToolbarWithAnimation:(char)a0;
- (char)_toolbarIsHidden;
- (char)_toolbarIsInTransition;
- (char)_toolbarIsManagedByExternalWindow;
- (void)_updateButtonState;
- (void)_updateTitleProperties:(id)a0 animated:(char)a1;
- (void)_windowTitlePropertiesChanged:(id)a0;
- (void)addSubview:(id)a0;
- (void)adjustHalftonePhase;
- (struct CGSize { double x0; double x1; })aspectRatio;
- (id)closeButton;
- (double)contentAlpha;
- (id)contentFill;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
- (id)defaultTitleFont;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dragRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawThemeContentFill:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)drawWindowBackgroundRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawWindowBackgroundRegion:(struct CGSRegionObject { } *)a0;
- (char)frameNeedsDisplay;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
- (void)initTitleCell:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1 owner:(id)a2;
- (struct CGSize { double x0; double x1; })minFrameSize;
- (struct CGSize { double x0; double x1; })minFrameSizeForMinContentSize:(struct CGSize { double x0; double x1; })a0 styleMask:(unsigned long long)a1;
- (struct CGSize { double x0; double x1; })miniaturizedSize;
- (id)minimizeButton;
- (id)representedFilename;
- (struct CGSize { double x0; double x1; })resizeIncrements;
- (void)setDocumentEdited:(char)a0;
- (void)setIsClosable:(char)a0;
- (void)setRepresentedFilename:(id)a0;
- (void)setResizeIncrements:(struct CGSize { double x0; double x1; })a0;
- (void)setTitle:(id)a0 andDefeatWrap:(char)a1;
- (void)setUpGState;
- (void)shapeWindow;
- (void)tile;
- (void)tileAndSetWindowShape:(char)a0;
- (void)titleBarHiddenChanged;
- (id)titleCell;
- (id)titleFont;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titlebarRect;
- (void)updateTrackingAreas;
- (void)viewDidMoveToWindow;
- (id)zoomButton;

@end

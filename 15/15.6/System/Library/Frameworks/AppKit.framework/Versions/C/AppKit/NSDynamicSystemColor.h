@class NSColor;

@interface NSDynamicSystemColor : NSDynamicNamedColor {
    NSColor *_tintColor;
    char _useHardwareAccentColor;
}

+ (void)initialize;
+ (id)labelColor;
+ (id)secondaryLabelColor;
+ (id)shadowColor;
+ (id)alternateSelectionGraphiteColor;
+ (id)headerTextColor;
+ (id)systemBlueColor;
+ (id)systemCyanColor;
+ (id)systemGrayColor;
+ (id)systemPinkColor;
+ (id)systemTealColor;
+ (id)systemFillColor;
+ (id)systemMintColor;
+ (id)_alternateDisabledSelectedControlTextColor;
+ (id)_selectionMaterialTintColor;
+ (id)alternateSecondarySelectedControlColor;
+ (id)alternateSelectedControlColor;
+ (id)alternateSelectedControlTextColor;
+ (id)alternateSelectionBlueColor;
+ (id)alternatingContentBackgroundColor;
+ (id)blueControlTintColor;
+ (id)clearControlTintColor;
+ (id)containerBorderColor;
+ (id)contentBackgroundColor;
+ (id)controlAccentBlueColor;
+ (id)controlAccentColor;
+ (id)controlAccentGoldColor;
+ (id)controlAccentGreenColor;
+ (id)controlAccentHardwareColor;
+ (id)controlAccentNoColor;
+ (id)controlAccentOrangeColor;
+ (id)controlAccentPinkColor;
+ (id)controlAccentPurpleColor;
+ (id)controlAccentRedColor;
+ (id)controlAccentRoseGoldColor;
+ (id)controlAccentSilverColor;
+ (id)controlAccentSpaceGrayColor;
+ (id)controlAccentYellowColor;
+ (id)controlAlternatingRowColor;
+ (id)controlBackgroundColor;
+ (id)controlColor;
+ (id)controlDarkShadowColor;
+ (id)controlHighlightColor;
+ (id)controlLightHighlightColor;
+ (id)controlShadowColor;
+ (id)controlTextColor;
+ (id)detailAccentColor;
+ (id)disabledControlTextColor;
+ (id)findHighlightColor;
+ (id)graphiteControlTintColor;
+ (id)graphiteSelectedTextBackgroundColor;
+ (id)gridColor;
+ (id)headerColor;
+ (id)highlightColor;
+ (id)keyboardFocusIndicatorColor;
+ (id)knobColor;
+ (id)linkColor;
+ (id)placeholderTextColor;
+ (id)progressIndicatorColor;
+ (id)quaternaryLabelColor;
+ (id)quaternarySystemFillColor;
+ (id)quinaryLabelColor;
+ (id)quinarySystemFillColor;
+ (void)recacheAllColors:(id)a0;
+ (id)scrollBarColor;
+ (id)secondarySelectedControlColor;
+ (id)secondarySystemFillColor;
+ (id)selectedContentBackgroundColor;
+ (id)selectedContentTextColor;
+ (id)selectedControlColor;
+ (id)selectedControlTextColor;
+ (id)selectedHeaderTextColor;
+ (id)selectedKnobColor;
+ (id)selectedMenuItemColor;
+ (id)selectedMenuItemTextColor;
+ (id)selectedTextBackgroundColor;
+ (id)selectedTextColor;
+ (id)separatorColor;
+ (id)springLoadedOverlayColor;
+ (id)systemBrownColor;
+ (id)systemGreenColor;
+ (id)systemIndigoColor;
+ (id)systemOrangeColor;
+ (id)systemPurpleColor;
+ (id)systemRedColor;
+ (id)systemYellowColor;
+ (id)tertiaryLabelColor;
+ (id)tertiarySystemFillColor;
+ (id)textBackgroundColor;
+ (id)textColor;
+ (id)textCorrectionIndicatorColor;
+ (id)textGrammarIndicatorColor;
+ (id)textInsertionPointColor;
+ (id)textSpellingIndicatorColor;
+ (id)thinSplitViewDividerColor;
+ (id)toolTipColor;
+ (id)toolTipTextColor;
+ (id)underPageBackgroundColor;
+ (id)unemphasizedSelectedContentBackgroundColor;
+ (id)unemphasizedSelectedTextBackgroundColor;
+ (id)unemphasizedSelectedTextColor;
+ (id)windowBackgroundColor;
+ (id)windowFrameColor;
+ (id)windowFrameTextColor;

- (oneway void)release;
- (void)dealloc;
- (char)allowsWeakReference;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)retain;
- (unsigned long long)retainCount;
- (char)retainWeakReference;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)a0;
- (struct CGColor { } *)CGColor;
- (char)_getSemanticallyEquivalentVisualEffectMaterial:(long long *)a0;
- (id)colorWithAlphaComponent:(double)a0;
- (id)initWithSelector:(SEL)a0;
- (id)initWithSelector:(SEL)a0 tintedWithColor:(id)a1;
- (void)recacheColor;
- (id)resolvedColor;

@end

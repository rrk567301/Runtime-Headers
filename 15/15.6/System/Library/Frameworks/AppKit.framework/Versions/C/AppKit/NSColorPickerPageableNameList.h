@class NSMutableDictionary, NSSegmentedControl, NSPopUpButton, NSButton, NSAppearance, NSString, NSSearchField, NSLayoutConstraint, NSPageableTableView, NSPanel, NSView, NSArray, NSTextField, NSColorList;

@interface NSColorPickerPageableNameList : NSColorPicker <NSTableViewDelegate, NSTableViewDataSource, NSColorPickingCustom> {
    NSPopUpButton *listPopUp;
    NSTextField *renamePrompt;
    NSTextField *renameString;
    NSButton *renameButton;
    NSPanel *renamePanel;
    NSButton *newColorButton;
    NSSearchField *filterField;
    NSPopUpButton *actionPopupButton;
    NSLayoutConstraint *trailingRemoveButtonLayoutConstraint;
    NSMutableDictionary *_listDict;
    NSMutableDictionary *_attachedListDict;
    NSString *_currListName;
    NSColorList *_activeColorList;
    NSArray *_sortedColorListNames;
    NSPageableTableView *_tableView;
    NSButton *removeColorButton;
    NSAppearance *_appearanceForRenderingColor;
    unsigned char _showingError : 1;
    unsigned char _selectionDidChangeHappened : 1;
    unsigned char _ui_is_built : 1;
    unsigned int _reserved : 29;
}

@property (retain) NSSegmentedControl *addRemoveControl;
@property (retain) NSView *listPickerView;
@property (copy) NSString *currListName;
@property (retain) NSAppearance *appearanceForRenderingColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)keyPathsForValuesAffectingValueForKey:(id)a0;

- (void)dealloc;
- (long long)currentMode;
- (void)setColor:(id)a0;
- (double)_insertionOrder;
- (id)activeColorList;
- (char)addColorAllowed;
- (id)provideNewView:(char)a0;
- (void)replaceColorList:(id)a0 withColorList:(id *)a1;
- (void)restoreDefaults;
- (void)_availableColorSyncProfileColorListsChanged:(id)a0;
- (void)_changedPossibleKeys;
- (id)_colorForRow:(long long)a0;
- (long long)_colorIndexInTableView;
- (void)_colorListChanged:(id)a0;
- (long long)_currentColorIndex;
- (id)_currentFilterString;
- (id)_currentSelectedColorListColorName;
- (char)_endColorListInlineEditing;
- (void)_errorDuplicateColor:(id)a0;
- (double)_matchQualityOfColorAtIndex:(unsigned long long)a0 toColor:(id)a1 ifBetterThan:(double)a2;
- (void)_populatePopUpItemsFromColorLists;
- (void)_reloadColorListTableView;
- (void)_reloadColorListTableViewForFilterChange;
- (void)_removeCurrentColor;
- (void)_selectColorInTableView;
- (void)_updateSortedColorListNames;
- (void)addNewColor:(id)a0 andShowInWell:(char)a1;
- (void)addOrRemoveColor:(id)a0;
- (void)attachColorList:(id)a0;
- (void)attachColorList:(id)a0 makeSelected:(char)a1;
- (void)attachColorList:(id *)a0 systemList:(char)a1 makeSelected:(char)a2;
- (id)attachedListDictionary;
- (void)awakeFromNib;
- (id)buttonToolTip;
- (char)control:(id)a0 textShouldEndEditing:(id)a1;
- (char)control:(id)a0 textView:(id)a1 doCommandBySelector:(SEL)a2;
- (void)controlTextDidChange:(id)a0;
- (void)copyColorAtIndex:(long long)a0 toIndex:(long long)a1 saveList:(char)a2;
- (void)detachColorList:(id)a0;
- (void)didPresentErrorWithRecovery:(char)a0 contextInfo:(void *)a1;
- (void)endSheetReturningTag:(id)a0;
- (void)filterChanged:(id)a0;
- (long long)findColorNamed:(id)a0 inList:(id)a1 usingLocalName:(char)a2;
- (id)initWithPickerMask:(unsigned long long)a0 colorPanel:(id)a1;
- (void)insertNewColor:(id)a0 atIndex:(long long)a1 andShowInWell:(char)a2;
- (void)insertPopItemWithTitle:(id)a0 andObject:(id)a1;
- (void)insertPopItemWithTitle:(id)a0 andObject:(id)a1 atIndex:(long long)a2;
- (char)isCurrListEditable;
- (id)listDictionary;
- (void)loadColorLists;
- (struct CGSize { double x0; double x1; })minContentSize;
- (void)moveColorAtIndex:(long long)a0 toIndex:(long long)a1 saveList:(char)a2;
- (void)newColor:(id)a0;
- (id)newColorName:(id)a0;
- (void)newList:(id)a0;
- (id)newListName:(id)a0;
- (long long)numberOfRowsInTableView:(id)a0;
- (void)openList:(id)a0;
- (void)openListFromFile:(id)a0;
- (char)pageableTableView:(id)a0 handleKeyDownEvent:(id)a1;
- (id)pasteboardTypeForReordering;
- (id)provideNewButtonImage;
- (void)refreshUI;
- (void)removeColor:(id)a0;
- (char)removeColorAllowed;
- (void)removeList:(id)a0;
- (char)removeListEnabled;
- (void)renameList:(id)a0;
- (void)saveDefaults;
- (char)saveList:(id)a0;
- (void)setupLoadedNib;
- (char)supportsMode:(long long)a0;
- (void)switchList:(id)a0;
- (void)switchToListNamed:(id)a0;
- (char)tableView:(id)a0 acceptDrop:(id)a1 row:(long long)a2 dropOperation:(unsigned long long)a3;
- (id)tableView:(id)a0 objectValueForTableColumn:(id)a1 row:(long long)a2;
- (void)tableView:(id)a0 setObjectValue:(id)a1 forTableColumn:(id)a2 row:(long long)a3;
- (char)tableView:(id)a0 shouldEditTableColumn:(id)a1 row:(long long)a2;
- (unsigned long long)tableView:(id)a0 validateDrop:(id)a1 proposedRow:(long long)a2 proposedDropOperation:(unsigned long long)a3;
- (void)tableView:(id)a0 willDisplayCell:(id)a1 forTableColumn:(id)a2 row:(long long)a3;
- (char)tableView:(id)a0 writeRowsWithIndexes:(id)a1 toPasteboard:(id)a2;
- (void)tableViewClicked:(id)a0;
- (void)tableViewSelectionDidChange:(id)a0;
- (void)updateAddRemoveControlEnablement;
- (void)updatePopupTooltip;
- (char)validateMenuItem:(id)a0;

@end

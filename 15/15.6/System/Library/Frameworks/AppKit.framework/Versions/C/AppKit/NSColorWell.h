@class NSColor, NSColorWellEndcapButton, NSImage, NSTrackingArea, NSString, NSPopover;

@interface NSColorWell : NSControl <NSPopoverDelegate> {
    NSColor *_color;
    struct __cwFlags { unsigned char isActive : 1; unsigned char isBordered : 1; unsigned char cantDraw : 1; unsigned char isNotContinuous : 1; unsigned char refusesFR : 1; unsigned int reservedColorWell : 27; } _cwFlags;
}

@property char orderColorPanelOnActivate;
@property char mouseInside;
@property (retain) NSTrackingArea *pulldownTrackingArea;
@property (retain) NSPopover *presentedPopover;
@property (retain) NSColorWellEndcapButton *endcapButton;
@property struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } wellFrame;
@property char subclassOverridesDrawColor;
@property (readonly) char _effectivelySupportsAlpha;
@property char showsMixedState;
@property (readonly, getter=isActive) char active;
@property (getter=isBordered) char bordered;
@property (copy) NSColor *color;
@property long long colorWellStyle;
@property (retain) NSImage *image;
@property (weak) id pulldownTarget;
@property SEL pulldownAction;
@property char supportsAlpha;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (void)_delayedDeactiveWindowlessWell:(id)a0;
+ (char)_allActiveWellsSupportAlpha;
+ (void)_deactivateAllColorWells;
+ (id)_exclusiveColorPanelOwner;
+ (void)_updateSharedPanelShowsAlpha;
+ (char)accessibilityIsSingleCelled;
+ (char)automaticallyNotifiesObserversOfObjectValue;
+ (void)colorPanelColorChanged:(id)a0;
+ (id)colorWellWithStyle:(long long)a0;

- (void)dealloc;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setEnabled:(char)a0;
- (void)layout;
- (void)setObjectValue:(id)a0;
- (id)objectValue;
- (id)accessibilityActionDescription:(id)a0;
- (void)setControlSize:(unsigned long long)a0;
- (id)_old_initWithCoder_NSColorWell:(id)a0;
- (void)drawWellInside:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })a0;
- (double)_bottomInset;
- (void)_colorWellCommonAwake;
- (char)_contentHuggingDefault_isUsuallyFixedHeight;
- (char)_contentHuggingDefault_isUsuallyFixedWidth;
- (id)_coreUIBorderDrawOptions;
- (id)_coreUIInnerBorderDrawOptionsMasked:(char)a0;
- (id)_coreUIRolloverArrowOptions;
- (void)_drawBorderInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawInteriorBorderInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_drawingRectForWell;
- (double)_endcapButtonOverlap;
- (char)_hasKeyboardFocus;
- (char)_hasPullDownBehavior;
- (char)_ownsColorPanelExclusively;
- (void)_performActivationClickWithShiftDown:(char)a0;
- (char)_shouldOrderFront;
- (void)_showColorPanel:(id)a0;
- (id)_takeColorFrom:(id)a0 andSendAction:(char)a1;
- (id)_takeColorFromAndSendActionIfContinuous:(id)a0;
- (id)_takeColorFromDoAction:(id)a0;
- (double)_wellBorderThickness;
- (void)_windowChangedKeyState;
- (void)acceptColor:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1;
- (char)acceptsFirstMouse:(id)a0;
- (char)acceptsFirstResponder;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (char)accessibilityIsValueAttributeSettable;
- (void)accessibilityPerformAction:(id)a0;
- (id)accessibilityRoleAttribute;
- (id)accessibilityRoleDescription;
- (id)accessibilityValueAttribute;
- (void)activate:(char)a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (void)altModifySelection:(id)a0;
- (double)baselineOffsetFromBottom;
- (char)becomeFirstResponder;
- (void)deactivate;
- (unsigned long long)draggingEntered:(id)a0;
- (char)drawColor;
- (void)drawFocusRingMask;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })focusRingMaskBounds;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (char)isContinuous;
- (char)isEmptyColorEnabled;
- (char)isOpaque;
- (void)mouseDown:(id)a0;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void)performClick:(id)a0;
- (char)performDragOperation:(id)a0;
- (void)popoverDidClose:(id)a0;
- (char)refusesFirstResponder;
- (char)resignFirstResponder;
- (void)setContinuous:(char)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)setNeedsDisplay:(char)a0;
- (void)setRefusesFirstResponder:(char)a0;
- (void)shiftModifySelection:(id)a0;
- (void)takeColorFrom:(id)a0;
- (void)viewWillMoveToWindow:(id)a0;
- (void)windowWillClose:(id)a0;

@end

@class _NSSplitViewPartitionAdapter, NSToolbar, NSSplitView, NSMenuItem, NSToolbarItemGroup, _NSToolbarItemAuxiliary, NSToolbarItemViewer, NSString, NSSet, NSImage, NSArray, NSView, NSColor;

@interface NSToolbarItem : NSObject <NSMenuItemValidation, NSValidatedUserInterfaceItem, NSCopying> {
    NSToolbar *_toolbar;
    NSToolbarItemGroup *_itemGroup;
    NSImage *_image;
    NSString *_title;
    NSString *_itemIdentifier;
    NSString *_label;
    NSString *_paletteLabel;
    NSString *_toolTip;
    NSMenuItem *_menuItemRep;
    long long _tag;
    long long _visibilityCount;
    long long _forcesHiddenItemsVisibleCount;
    NSToolbarItemViewer *_itemViewer;
    NSView *_view;
    struct CGSize { double width; double height; } _minSize;
    struct CGSize { double width; double height; } _maxSize;
    _NSToolbarItemAuxiliary *_itemAux;
    unsigned long long _itemPosition;
    struct __tbiFlags { unsigned char viewRespondsToIsEnabled : 1; unsigned char viewRespondsToSetEnabled : 1; unsigned char viewRespondsToTag : 1; unsigned char viewRespondsToSetTag : 1; unsigned char viewRespondsToAction : 1; unsigned char viewRespondsToSetAction : 1; unsigned char viewRespondsToTarget : 1; unsigned char viewRespondsToSetTarget : 1; unsigned char viewRespondsToImage : 1; unsigned char viewRespondsToSetImage : 1; unsigned char viewRespondsToTitle : 1; unsigned char viewRespondsToSetTitle : 1; unsigned char viewRespondsToBordered : 1; unsigned char viewRespondsToSetBordered : 1; unsigned char isEnabled : 1; unsigned char menuHasBeenSet : 1; unsigned char menuRepIsDefault : 1; unsigned char viewHasBeenLoaded : 1; unsigned char drawingForDragImage : 1; unsigned char isCustomItemType : 1; unsigned char hasValidatedAutoModeConfiguration : 1; unsigned char useAutoModeConfiguration : 1; unsigned char fromBaseLocalizedNib : 1; unsigned char autovalidationDisabled : 1; unsigned char tagHasBeenSet : 1; unsigned char sizeHasBeenSet : 1; unsigned char stateWasDisabledBeforeSheet : 1; unsigned char wantsToBeCentered : 1; unsigned char isMeasuring : 1; unsigned char ignoresEncodedMinMaxValue : 1; unsigned char usesStaticMinMaxValues : 1; unsigned char isNavigational : 1; unsigned char isValidatingMenuItem : 1; unsigned char isLoadingRemoteContent : 1; unsigned char bordered : 1; unsigned char hidden : 1; unsigned char hasFullHeightView : 1; } _tbiFlags;
}

@property (weak, setter=_setToolbar:) NSToolbar *_toolbar;
@property (retain, setter=_setItemViewer:) NSToolbarItemViewer *_itemViewer;
@property (readonly) char _isCustomItemType;
@property (readonly) char isSpace;
@property (readonly) char isTrackingSeparator;
@property (readonly) unsigned long long itemPosition;
@property (readonly) char isCollapsed;
@property (readonly) char isGapItem;
@property (readonly) char _isPartitionItem;
@property (retain, setter=_setPartitionAdapter:) _NSSplitViewPartitionAdapter *_partitionAdapter;
@property (readonly) double _logicalPartitionPosition;
@property (readonly) double _visualPartitionPosition;
@property (readonly) double _preferredTrailingPosition;
@property (readonly) char isGroupItem;
@property (readonly) char _subitemsSupportLabelOnlyMode;
@property (readonly) NSMenuItem *_menuFormRepresentationForOverflowMenu;
@property (setter=_setIgnoresMinMaxSizes:) char _ignoresMinMaxSizes;
@property (copy) NSColor *bezelColor;
@property (readonly) NSView *_view;
@property (readonly, copy) NSString *_label;
@property (readonly, copy) NSString *_paletteLabel;
@property double preferredWidthRatio;
@property (retain) id propertyListRepresentation;
@property (weak) NSToolbarItemGroup *itemGroup;
@property char hasFullHeightView;
@property (retain, nonatomic) NSSplitView *trackedSplitView;
@property (nonatomic) long long trackedSplitViewDividerIndex;
@property (copy, setter=_setAllPossibleLabelsToFit:) NSArray *_allPossibleLabelsToFit;
@property char wantsToBeCentered;
@property (readonly, copy) NSString *itemIdentifier;
@property (readonly, weak) NSToolbar *toolbar;
@property (copy) NSString *label;
@property (copy) NSString *paletteLabel;
@property (copy) NSSet *possibleLabels;
@property (copy) NSString *toolTip;
@property (retain) NSMenuItem *menuFormRepresentation;
@property long long tag;
@property (weak) id target;
@property SEL action;
@property (getter=isEnabled) char enabled;
@property (retain) NSImage *image;
@property (copy) NSString *title;
@property (getter=isBordered) char bordered;
@property (getter=isNavigational) char navigational;
@property (retain) NSView *view;
@property (readonly, getter=isVisible) char visible;
@property (getter=isHidden) char hidden;
@property struct CGSize { double x0; double x1; } minSize;
@property struct CGSize { double x0; double x1; } maxSize;
@property long long visibilityPriority;
@property char autovalidates;
@property (readonly) char allowsDuplicatesInToolbar;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)standardItemWithItemIdentifier:(id)a0;
+ (char)automaticallyNotifiesObserversOfEnabled;
+ (id)keyPathsForValuesAffectingVisible;
+ (id)keyPathsForValuesAffecting_logicalPartitionPosition;
+ (id)keyPathsForValuesAffecting_visualPartitionPosition;
+ (id)spaceItemIdentifier;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)init;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (id)_buttonAtIndex:(unsigned long long)a0;
- (char)_accessibilityShouldProvideCustomAccessibilityElements;
- (id)_allocDefaultView;
- (char)_allowToolbarToStealEvent:(id)a0;
- (char)_applicableLabelIsEnabledAtIndex:(long long)a0 forDisplayMode:(unsigned long long)a1 isInPalette:(char)a2;
- (id)_applicableLabelsArrayForDisplayMode:(unsigned long long)a0 isInPalette:(char)a1;
- (void)_collectItemRectsForViews:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0 inBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (id)_computeDefaultMenuFormRepresentation;
- (void)_copyViewToCopiedItem:(id)a0;
- (void)_forceSetView:(id)a0;
- (char)_groupItemHandlesTooltipsInternally;
- (id)_initialViewToSelectFromDirection:(long long)a0;
- (char)_isEnabledAndHasEnabledSubitem;
- (char)_isHiddenOrHasHiddenSubitems;
- (id)_itemAtLabelIndex:(long long)a0;
- (id)_itemAtViewIndex:(long long)a0;
- (id)_itemAtVisibleLabelIndex:(long long)a0;
- (long long)_itemIndexAtVisibleLabelIndex:(long long)a0;
- (void)_itemLayoutChanged;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_itemRect;
- (id)_itemsWithToolTips;
- (char)_needsRedisplayWhenBeginningToolbarEditing;
- (void)_noteCustomizationModeRunning:(char)a0;
- (void)_partitionAdapterConfigurationChanged;
- (void)_setItemIdentifier:(id)a0;
- (void)_setView:(id)a0 fromCoder:(id)a1;
- (void)_standardCommonMenuFormRepresentationClicked:(id)a0;
- (void)_standardCustomMenuFormRepresentationClicked:(id)a0;
- (char)_supportsLabelOnlyMode;
- (void)_updateItemPosition;
- (char)_validatesWithoutPrimaryAction;
- (id)_viewForCoder:(id)a0;
- (id)_viewForPopoverAnchorWithPositioningRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a0;
- (char)_viewIsEnabledAtIndex:(long long)a0;
- (id)_viewsArray;
- (void)configureForDisplayMode:(unsigned long long)a0 andSizeMode:(unsigned long long)a1;
- (id)initWithItemIdentifier:(id)a0;
- (char)isLoadingRemoteContent;
- (void)setLoadingRemoteContent:(char)a0;
- (void)setUICustomViewHost:(id)a0;
- (id)uiCustomViewHost;
- (char)usesMenuFormRepresentationInDisplayMode:(unsigned long long)a0;
- (void)validate;
- (char)validateMenuItem:(id)a0;
- (char)wantsHiddenLabelInDisplayMode:(unsigned long long)a0;
- (char)wantsToDrawIconInDisplayMode:(unsigned long long)a0;
- (char)wantsToDrawIconIntoLabelAreaInDisplayMode:(unsigned long long)a0;
- (char)wantsToDrawLabelInDisplayMode:(unsigned long long)a0;
- (char)wantsToDrawLabelInPalette;

@end

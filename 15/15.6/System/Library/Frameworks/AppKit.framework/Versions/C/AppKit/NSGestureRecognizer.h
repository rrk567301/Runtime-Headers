@class NSView, NSMutableSet, NSPressureConfiguration, NSMutableArray, NSTouchDevice;
@protocol NSGestureRecognizerDelegate;

@interface NSGestureRecognizer : NSObject <NSCoding> {
    char _shouldBeArchived;
    NSMutableArray *_targets;
    id _target;
    NSMutableArray *_delayedEvents;
    NSView *_view;
    id<NSGestureRecognizerDelegate> _delegate;
    NSMutableSet *_friends;
    long long _state;
    unsigned long long _gestureFlags;
    unsigned long long _delayFlags;
    id _failureMap;
    NSPressureConfiguration *_activePressureConfiguration;
    NSTouchDevice *_touchDevice;
    long long _touchContextId;
    unsigned long long _allowedTouchTypes;
    struct { unsigned char sendsActionWhenPossible : 1; unsigned char privateDelegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer : 1; unsigned char delegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer : 1; unsigned char viewIsUnsafeUnretained : 1; unsigned char delegateIsUnsafeUnretained : 1; unsigned char targetIsUnsafeUnretained : 1; unsigned char privateDelegateShouldReceiveTouch : 1; unsigned char delegateShouldReceiveTouch : 1; unsigned int reserved : 24; } _additionalFlags;
}

@property (readonly, nonatomic) NSMutableSet *_failureRequirements;
@property (readonly, nonatomic) NSMutableSet *_failureDependents;
@property (readonly, nonatomic) NSMutableSet *_dynamicFailureRequirements;
@property (readonly, nonatomic) NSMutableSet *_dynamicFailureDependents;
@property (weak) id target;
@property SEL action;
@property (readonly) long long state;
@property (weak) id<NSGestureRecognizerDelegate> delegate;
@property (getter=isEnabled) char enabled;
@property (readonly) NSView *view;
@property (retain) NSPressureConfiguration *pressureConfiguration;
@property char delaysPrimaryMouseButtonEvents;
@property char delaysSecondaryMouseButtonEvents;
@property char delaysOtherMouseButtonEvents;
@property char delaysKeyEvents;
@property char delaysMagnificationEvents;
@property char delaysRotationEvents;

+ (id)_mostCompatibleRecognizerFromConfigured:(id)a0;

- (void)dealloc;
- (id)description;
- (id)init;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setState:(long long)a0;
- (void)reset;
- (void)setView:(id)a0;
- (void)_didSendActions;
- (void)_setFailureMap:(id)a0;
- (void)otherMouseDown:(id)a0;
- (void)rightMouseDown:(id)a0;
- (long long)_touchContextId;
- (struct CGPoint { double x0; double x1; })locationInView:(id)a0;
- (unsigned long long)_acceptedEventMask;
- (char)_acceptsFailureRequirements;
- (id)_activePressureConfiguration;
- (void)_addDynamicFailureDependent:(id)a0;
- (void)_addDynamicFailureRequirement:(id)a0;
- (void)_addFailureDependent:(id)a0;
- (void)_addFriendGesture:(id)a0;
- (char)_affectedByGesture:(id)a0;
- (void)_appendDescription:(id)a0 forDependencies:(id)a1 toString:(id)a2 atLevel:(int)a3;
- (void)_appendDescriptionToString:(id)a0 atLevel:(int)a1 includingDependencies:(char)a2;
- (void)_appendSubclassDescription:(id)a0;
- (id)_briefDescription;
- (void)_cancelRecognition;
- (void)_clearDelayedEvents;
- (void)_clearReferencesToRelatedGesture:(id)a0;
- (void)_clearUpdateTimer;
- (char)_delayEvent:(id)a0;
- (id)_delayedEvents;
- (void)_delayedUpdateGesture;
- (char)_delegateCanPreventGestureRecognizer:(id)a0;
- (char)_delegateShouldAttemptToRecognizeWithEvent:(id)a0;
- (char)_delegateShouldReceiveTouch:(id)a0;
- (char)_delegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer:(id)a0;
- (long long)_depthFirstViewCompare:(id)a0;
- (id)_desiredPressureBehavior;
- (void)_enqueueDelayedEventsToSend;
- (void)_eventWasCancelled:(id)a0;
- (void)_exclude;
- (id)_failureMap;
- (void)_failureRequirementCompleted:(id)a0;
- (char)_hasDelayedEvents;
- (char)_hasTargets;
- (char)_hasUnmetFailureRequirements;
- (void)_invalidate;
- (char)_isDirty;
- (char)_isExcludedByGesture:(id)a0;
- (char)_isFriendWithGesture:(id)a0;
- (char)_isRecognized;
- (void)_noteDesiredPressureBehaviorChanged;
- (void)_queueForResetIfFinished;
- (void)_removeActiveGestureRecognizerFromTouchDevice;
- (void)_removeFailureDependent:(id)a0;
- (char)_requiresGestureRecognizerToFail:(id)a0;
- (char)_requiresSystemGesturesToFail;
- (void)_resetGestureRecognizer;
- (void)_resetIfFinished;
- (void)_setAcceptsFailureRequiments:(char)a0;
- (void)_setDirty;
- (void)_setRequiresSystemGesturesToFail:(char)a0;
- (void)_setTouchContextId:(long long)a0;
- (void)_setTouchDevice:(id)a0;
- (void)_setWantsFunctionRowTouches:(char)a0;
- (char)_shouldBeRequiredToFailByGestureRecognizer:(id)a0;
- (char)_shouldBegin;
- (char)_shouldRequireFailureOfGestureRecognizer:(id)a0;
- (char)_shouldSendActionWhenPossibleConcurrentlyWithRecognizer:(id)a0;
- (id)_touchDevice;
- (void)_updateForActiveEvents;
- (void)_updateGesture;
- (void)_updateGestureStateAfterDelay:(char)a0;
- (char)_wantsFunctionRowTouches;
- (void)_willBeginAfterSatisfyingFailureRequirements;
- (char)acceptsFirstMouse:(id)a0;
- (void)addTarget:(id)a0 action:(SEL)a1;
- (unsigned long long)allowedTouchTypes;
- (char)canBePreventedByGestureRecognizer:(id)a0;
- (char)canPreventGestureRecognizer:(id)a0;
- (char)cancelsTouchesInView;
- (void)flagsChanged:(id)a0;
- (id)initWithTarget:(id)a0 action:(SEL)a1;
- (void)keyDown:(id)a0;
- (void)keyUp:(id)a0;
- (void)magnifyWithEvent:(id)a0;
- (unsigned long long)modifierFlags;
- (void)mouseCancelledWithEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseDragged:(id)a0;
- (void)mouseUp:(id)a0;
- (void)otherMouseDragged:(id)a0;
- (void)otherMouseUp:(id)a0;
- (void)pressureChangeWithEvent:(id)a0;
- (void)quickLookWithEvent:(id)a0;
- (void)removeFailureRequirement:(id)a0;
- (void)removeTarget:(id)a0 action:(SEL)a1;
- (void)requireOtherGestureToFail:(id)a0;
- (void)rightMouseDragged:(id)a0;
- (void)rightMouseUp:(id)a0;
- (void)rotateWithEvent:(id)a0;
- (char)sendsActionWhenPossible;
- (void)setAllowedTouchTypes:(unsigned long long)a0;
- (void)setCancelsTouchesInView:(char)a0;
- (void)setSendsActionWhenPossible:(char)a0;
- (void)setShouldBeArchived:(char)a0;
- (char)shouldBeArchived;
- (char)shouldBeRequiredToFailByGestureRecognizer:(id)a0;
- (char)shouldRequireFailureOfGestureRecognizer:(id)a0;
- (void)tabletPoint:(id)a0;
- (void)touchesBeganWithEvent:(id)a0;
- (void)touchesCancelledWithEvent:(id)a0;
- (void)touchesEndedWithEvent:(id)a0;
- (void)touchesMovedWithEvent:(id)a0;
- (void)translateWithEvent:(id)a0;
- (char)wantsForceGestureEvents;

@end

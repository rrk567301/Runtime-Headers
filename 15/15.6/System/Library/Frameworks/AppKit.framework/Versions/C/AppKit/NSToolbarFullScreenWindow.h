@interface NSToolbarFullScreenWindow : NSWindow {
    char _forcingToolbarVisible;
    char _hotKeyNavigationForcingToolbarAndAuxViewVisible;
    long long _childWindowOrderingPriority;
    long long _menubarAutohidingCount;
}

@property (nonatomic) char positionManagedByWindowServer;
@property (nonatomic) char windowIsMoving;

- (id)description;
- (char)_allowsSnapping;
- (char)_canMiniaturize;
- (id)_currentDividerResizeDirections;
- (id)_findKeyLoopGroupingViewFollowingKeyLoopGroupingView:(id)a0 direction:(unsigned long long)a1;
- (id)_originalWindow;
- (char)_wantsFullScreenTileDropTargets;
- (void)resignKeyWindow;
- (char)_shouldStartWindowDragForEvent:(id)a0;
- (void)becomeKeyWindow;
- (char)canHide;
- (void)_adjustWindowToScreen;
- (char)_allowsExteriorResizing;
- (char)_canBeSnappingTarget;
- (char)_cgsPositionManagedByExternalAgent;
- (long long)_childWindowOrderingPriority;
- (id)_cursorForResizeDirection:(long long)a0;
- (void)_disableFullScreenMenubarAutohiding;
- (double)_effectiveTitlebarAlphaValue;
- (void)_enableFullScreenMenubarAutohiding;
- (void)_getResizeEdgeAndCornerThicknesses:(double[8])a0;
- (char)_hasActiveAppearanceIgnoringKeyFocus;
- (char)_hostsLayersInWindowServer;
- (char)_ignoreForFullScreenTransition;
- (char)_ignoreForVisibleNonFullScreenSpace;
- (char)_ignoredForScripting;
- (char)_isRunningADocModalAttachedSheet;
- (char)_keyViewLoopsMayCrossWindows;
- (char)_newFirstResponderIsInToolbar:(id)a0;
- (id)_orderedDrawerAndWindowKeyLoopGroupingViews;
- (id)_parentWindowForAddingToMovementGroupWithProposedParent:(id)a0;
- (char)_performDividerDragWithEvent:(id)a0 forResizeDirection:(long long)a1;
- (char)_prepareToZoom;
- (void)_setChildWindowOrderingPriority:(long long)a0;
- (void)_setCursorForMouseLocation:(struct CGPoint { double x0; double x1; })a0;
- (void)_setFirstResponder:(id)a0;
- (void)_setWindowTag;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sheetDimmingMaterialRect;
- (void)_startClientSideMove;
- (void)_stopClientSideMove;
- (id)_supplementalSharingServicePickerToolbarItemDelegate;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleTileFrameForFullScreen;
- (char)_visualEffectViewAlwaysUseWSAwareBackdrops;
- (char)_wantsSheetDimmingMaterial;
- (id)_windowForToolbar;
- (char)_windowIsBeingMoved;
- (void)_windowMoved:(id)a0;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)a0;
- (id)accessibilityParameterizedAttributeNames;
- (id)appearance;
- (char)canBecomeKeyWindow;
- (char)canBecomeMainWindow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })constrainFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toScreen:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
- (char)hasKeyAppearanceIncludingSheets:(char)a0;
- (char)isMainWindow;
- (char)isMovable;
- (void)performWindowDragWithEvent:(id)a0;
- (void)setAppearance:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })startRectForSheet:(id)a0;
- (void)updateForceToolbarVisible;

@end

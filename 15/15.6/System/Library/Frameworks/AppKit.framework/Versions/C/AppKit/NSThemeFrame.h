@class NSView, NSString, NSTrackingArea, NSVisualEffectView, NSTitlebarView, NSSheetEffectDimmingView, NSObject, NSButton, NSMapTable, NSTitlebarContainerView;
@protocol NSSidebarTrackingAdapter;

@interface NSThemeFrame : NSTitledFrame <NSViewLayerContentScaleDelegate> {
    NSButton *toolbarButton;
    int _toolbarVisibleStatus;
    NSView *_temporaryContentView;
    struct CGSize { double width; double height; } _showToolbarPreWindowSize;
    NSButton *fullScreenButton;
    NSTrackingArea *_leftGroupTrackingArea;
    NSTrackingArea *_rightGroupTrackingArea;
    struct { unsigned char mouseInsideLeftGroup : 1; unsigned char disableMouseInsideLeftGroup : 1; unsigned char mouseInsideRightGroup : 1; unsigned char movableByBottomBar : 1; unsigned char removingToolbarForEnteringFullScreen : 1; unsigned char suppressTitleBackgroundDrawing : 1; unsigned char suppressTitleDrawing : 1; unsigned char suppressBackgroundCellDrawing : 1; unsigned char hasCachedWindowCornerRadius : 1; unsigned char autoFlattenEnabled : 1; unsigned char addingKnownSubview : 1; unsigned char hasUnknownSubview : 1; unsigned char titlebarViewInFullScreen : 1; unsigned char useViewsHeight : 1; unsigned char useViewsMinHeight : 1; unsigned char pendingWillChangeCount : 8; unsigned char needsSidebarPositionUpdate : 1; unsigned char needsAuxiliaryViewPositionUpdate : 1; unsigned char prefersFullWidthTitlebarWhenAccessoriesVisible : 1; } _tFlags;
    int widgetState;
    NSString *_displayName;
    NSButton *lockButton;
    double topBorderThickness;
    double bottomBorderThickness;
    NSObject<NSSidebarTrackingAdapter> *_sidebarTrackingAdapter;
    NSObject<NSSidebarTrackingAdapter> *_trailingSidebarTrackingAdapter;
    id _windowFullScreenObservers[2];
    struct CGSize { double width; double height; } _stoplightOffset;
    double _sidebarDividerPosition;
    double _trailingSidebarDividerPosition;
    double _sidebarLogicalDividerPosition;
    double _trailingSidebarLogicalDividerPosition;
    NSTitlebarView *_titlebarView;
    NSTitlebarContainerView *_titlebarContainerView;
    NSSheetEffectDimmingView *_sheetDimmingView;
    NSMapTable *_associatedViewsToUnderTitlebarViews;
    double _cachedCornerRadius;
}

@property double customTitlebarHeightPriorToFSMode;
@property (retain) NSView *sharingIndicator;
@property (readonly) id contentLayoutGuide;
@property (readonly) NSVisualEffectView *_backdropView;
@property (readonly) long long titlebarBlendingMode;
@property double customTitlebarHeight;
@property struct CGSize { double x0; double x1; } stoplightOffset;
@property char applySafeAreaInsetsForTransparentTitlebar;
@property (readonly) NSTitlebarContainerView *titlebarContainerView;
@property (readonly) double titleHeightToHideInFullScreen;
@property double buttonRevealAmount;
@property (retain) NSObject<NSSidebarTrackingAdapter> *sidebarTrackingAdapter;
@property (retain) NSObject<NSSidebarTrackingAdapter> *trailingSidebarTrackingAdapter;
@property char prefersFullWidthTitlebarWhenAccessoriesVisible;
@property (retain) NSView *temporaryContentView;
@property double titlebarAlphaValue;
@property (getter=isTitlebarHidden) char titlebarHidden;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (char)_resizeFromEdge;
+ (double)_contentToFrameMaxXWidth:(unsigned long long)a0;
+ (double)_contentToFrameMaxYHeight:(unsigned long long)a0;
+ (double)_contentToFrameMinXWidth:(unsigned long long)a0;
+ (double)_contentToFrameMinYHeight:(unsigned long long)a0;
+ (id)_cornerMaskImageForWindowType:(struct __CFString { } *)a0 window:(id)a1;
+ (double)_cornerRadiusForWindowType:(struct __CFString { } *)a0 window:(id)a1;
+ (double)_fileButtonSpacingWidthForWindowWithStyleMask:(unsigned long long)a0;
+ (double)_maxXTitlebarWidgetInset:(unsigned long long)a0;
+ (double)_maxXWindowBorderWidth:(unsigned long long)a0;
+ (double)_minXTitlebarWidgetInset:(unsigned long long)a0;
+ (double)_minXWindowBorderWidth:(unsigned long long)a0;
+ (double)_minYWindowBorderHeight:(unsigned long long)a0;
+ (void)_prepareRenameField:(id)a0 forEditingMode:(unsigned long long)a1;
+ (id)_renameFieldForWindowWithStyleMask:(unsigned long long)a0;
+ (double)_resizeHeight:(unsigned long long)a0;
+ (double)_sideTitlebarWidth:(unsigned long long)a0;
+ (struct CGSize { double x0; double x1; })_sizeOfTitlebarFileButtonForWindowWithStyleMask:(unsigned long long)a0;
+ (double)_titlebarHeight:(unsigned long long)a0;
+ (unsigned long long)_validateStyleMask:(unsigned long long)a0;
+ (double)_windowBorderThickness:(unsigned long long)a0;
+ (double)_windowFileButtonSpacingWidth:(unsigned long long)a0;
+ (double)_windowSideTitlebarTitleMinWidth:(unsigned long long)a0;
+ (double)_windowTitlebarButtonSpacingWidth:(unsigned long long)a0;
+ (double)_windowTitlebarTitleMinHeight:(unsigned long long)a0;
+ (char)automaticallyNotifiesObserversOfTitlebarBlendingMode;
+ (char)automaticallyNotifiesObserversOf_backdropView;
+ (id)containingThemeFrameFromView:(id)a0;
+ (double)minFrameWidthWithTitle:(id)a0 styleMask:(unsigned long long)a1;
+ (struct CGSize { double x0; double x1; })sizeOfTitlebarButtons:(unsigned long long)a0;

- (void)dealloc;
- (void)setTitle:(id)a0;
- (void)layout;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustToolbarFrameIfNecessary:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawNormalThemeBackgroundRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawTransparentTitlebarInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (double)_maxXTitlebarDecorationMinWidth;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_minXBorderRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_minYBorderRect;
- (void)_noteNeedsSidebarPositionUpdate;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rightGroupRect;
- (void)_syncSideAuxillaryViewPositions;
- (id)_titleTextField;
- (char)_titlebarViewAppearsTransparent;
- (char)_toolbarIsShown;
- (long long)_visibleAuxViewControllersCount;
- (void)rightMouseDown:(id)a0;
- (char)_canHaveToolbar;
- (void)_didRemoveLayer;
- (char)_hasRegularDrawWindowBackground;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_maxXBorderRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_maxYBorderRect;
- (double)_minXTitlebarDecorationMinWidth;
- (void)_resetTitleFont;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_separatorRectForInactiveWindow;
- (void)_setTextShadow:(char)a0;
- (double)_titlebarHeight;
- (double)_topHeightForTexturedBackground;
- (void)_updateUnderTitlebarViewFrame:(id)a0 associatedView:(id)a1 titlebarViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a2;
- (unsigned long long)_vibrantBlendingStyleForSubtree;
- (id)makeRenameField;
- (char)_accessoriesRequireFullWidthTitlebar;
- (void)_addKnownSubview:(id)a0;
- (void)_addKnownSubview:(id)a0 positioned:(long long)a1 relativeTo:(id)a2;
- (double)_additionalTopHeightForFloatingToolbar;
- (struct CGPoint { double x0; double x1; })_adjustPointToTitlebarView:(struct CGPoint { double x0; double x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustRectToTitlebarView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)_alwaysNeedsTitleBarTextField;
- (void)_animateFromStartingTitleControlState;
- (void)_animateToolbarWithReason:(int)a0 showToolbarPostWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (struct CGPoint { double x0; double x1; })_autosaveButtonOrigin;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_autosaveButtonRevealOverRect;
- (id)_autosaveButtonSeparatorField;
- (struct CGPoint { double x0; double x1; })_autosaveButtonSeparatorFieldOrigin;
- (id)_auxViewControllers;
- (id)_auxiliaryTitlebarViewContainerView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_auxiliaryViewStartingFrame;
- (id)_backgroundLayer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_backgroundLayerFrame;
- (long long)_backgroundStyleForTitleTextField;
- (void)_beginTitleAnimation;
- (double)_bottomBarHeight;
- (void)_bottomBarHeightChanged;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_bottomCornerRect;
- (struct CGSize { double x0; double x1; })_bottomCornerSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_bottomLeftCornerRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_bottomRightCornerRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_calculateToolbarFrameAndUpdateSize:(char)a0;
- (char)_canAddWindowTabs;
- (char)_canFloatForTabsOrTitlebar:(char)a0;
- (struct CGPoint { double x0; double x1; })_closeButtonAlignmentOrigin;
- (struct CGSize { double x0; double x1; })_closeButtonAlignmentSize;
- (struct CGPoint { double x0; double x1; })_closeButtonOrigin;
- (struct CGPoint { double x0; double x1; })_collapseButtonOrigin;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_commandPopupRect;
- (void)_commonBackgroundAlphaDrawHandler:(id /* block */)a0;
- (void)_computeHeightOfTop:(char)a0 bottom:(char)a1;
- (id)_contentLayoutGuide;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentLayoutRect;
- (id)_contentLayoutView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectExcludingToolbar;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectIncludingToolbarAtHome;
- (double)_contentToFrameMaxXWidth;
- (double)_contentToFrameMaxYHeight;
- (double)_contentToFrameMinXWidth;
- (double)_contentToFrameMinYHeight;
- (id)_cornerMask;
- (struct CGPath { } *)_cornerPath;
- (double)_cornerRadius;
- (id)_createAuxiliaryTitlebarViewContainerViewIfNecessary;
- (void)_cuiMakeOrUpdateBackgroundLayer:(id *)a0;
- (void)_cuiMakeOrUpdateBackgroundLayer:(id *)a0 topHeight:(double)a1 drawTopSeparator:(char)a2 bottomHeight:(double)a3 forTitlebar:(char)a4;
- (void)_cuiMakeOrUpdateBackgroundLayerForTitlebarView:(id *)a0;
- (id)_cuiOptionsForHUDIncludeScaleKey:(char)a0;
- (id)_cuiOptionsForWindowType:(struct __CFString { } *)a0 topHeight:(double)a1 drawTopSeparator:(char)a2 bottomBarHeight:(double)a3 shouldSetScaleKey:(char)a4 forTitlebar:(char)a5;
- (struct __CFString { } *)_cuiWindowType;
- (struct __CFString { } *)_currentHUDPresentationStateValue;
- (int)_currentThemeState;
- (struct __CFString { } *)_currentThemeStateKey;
- (unsigned long long)_currentThemeStyle;
- (id)_currentTitleColor;
- (id)_currentTitleTextFieldAttributedString;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentTitlebarContainerViewFrame;
- (double)_currentToolbarHeightWhileAnimating;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_defaultTitlebarTitleRect;
- (void)_didChangeContentLayoutRect;
- (void)_didEnd:(char)a0 renameWithTitle:(id)a1 editingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 grantHandler:(id /* block */)a3;
- (void)_displayLayer:(id)a0;
- (id)_displayName;
- (double)_distanceFromToolbarBaseToTitlebar;
- (char)_doLayerBackedTitleAnimations;
- (id)_documentAutosavingError;
- (long long)_documentEditingState;
- (void)_drawCoreUIHUD;
- (void)_drawCoreUIHUDInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawFrameRects:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_drawHandlerDelegate;
- (void)_drawNormalBackgroundRegion:(struct CGSRegionObject { } *)a0;
- (void)_drawRectFrameNeedsDisplay:(char)a0;
- (void)_drawSideUtilityTitleBar;
- (void)_drawTexturedBackground;
- (void)_drawTexturedBackgroundRegion:(struct CGSRegionObject { } *)a0;
- (void)_drawTexturedThemeBackgroundRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawTexturedWindowWithClipRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawTexturedWindowWithClipRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)_drawTitleBar:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawTitleBarBackgroundInClipRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawTitleStringInClip:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_drawToolbarTransitionIfNecessary;
- (void)_drawUnifiedToolbar:(int)a0;
- (void)_drawUnifiedToolbarBackgroundInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 withState:(long long)a1;
- (void)_drawUnifiedToolbarWithState:(int)a0 inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_effectiveAutosaveButtonFrame;
- (struct CGSize { double x0; double x1; })_effectiveAutosaveButtonFrameSize;
- (long long)_effectiveLayoutAttributeForAttribute:(long long)a0;
- (char)_effectiveMovableByBottomBar;
- (long long)_effectiveToolbarStyle;
- (void)_endTitleAnimation;
- (void)_ensureContentLayoutGuide;
- (void)_ensureContentLayoutView;
- (void)_enumerateAuxViewControllersOfType:(long long)a0 handler:(id /* block */)a1;
- (void)_enumerateAuxViewControllersOfType:(long long)a0 useEffectiveLayoutAttribute:(char)a1 handler:(id /* block */)a2;
- (struct CGPoint { double x0; double x1; })_fileButtonOrigin;
- (void)_floatTitlebarAndToolbarFromInit:(char)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameConvertedToSelf:(id)a0;
- (struct CGPoint { double x0; double x1; })_fullScreenButtonOrigin;
- (double)_getCachedWindowCornerRadius;
- (void)_growContentReshapeContentAndToolbarView:(int)a0 animate:(char)a1;
- (char)_growWindowReshapeContentAndToolbarView:(int)a0 withOldToolbarFrameSize:(struct CGSize { double x0; double x1; })a1 animate:(char)a2;
- (char)_hasContiguousBottomAccessoryViewController;
- (char)_hasCustomTitlebarHeight;
- (char)_hasFullSizeContentView;
- (char)_hasToolbar;
- (char)_hasToolbarReservedSpace;
- (char)_hasTopAlignedAccessoryView;
- (double)_heightOfBottomAuxillaryViews;
- (void)_hideToolbarWithAnimation:(char)a0;
- (char)_hidingTitlebarOrInAnotherWindow;
- (id)_hitTest:(struct CGPoint { double x0; double x1; })a0 ignoringResizeRegion:(char)a1;
- (id)_hitTestForEvent:(id)a0;
- (id)_hitTestToBlockWindowResizing:(struct CGPoint { double x0; double x1; })a0 forResizeDirection:(long long)a1;
- (char)_inactiveButtonsNeedMask;
- (void)_invalidateAllButtons;
- (void)_invalidateDocumentIcon;
- (void)_invalidateTitleCellSize;
- (char)_isClosable;
- (char)_isFullScreen;
- (char)_isHUDWindow;
- (char)_isInResizeRegion:(struct CGPoint { double x0; double x1; })a0;
- (char)_isMiniaturizable;
- (char)_isResizable;
- (char)_isSheet;
- (char)_isTexturedWindow;
- (char)_isUtility;
- (char)_isZoomButtonEnabled;
- (void)_layerBackedAnimateToolbarWithReason:(int)a0 showToolbarPostWindowFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_leftGroupRect;
- (struct CGPoint { double x0; double x1; })_lockButtonOrigin;
- (id)_makeTitlebarViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_maxTitlebarTitleRect;
- (double)_maxXTitlebarButtonsWidth;
- (double)_maxXTitlebarDragWidth;
- (double)_maxXTitlebarWidgetInset;
- (double)_maxXWindowBorderWidth;
- (double)_maxYTitlebarDragHeight;
- (double)_maxYWindowBorderHeight;
- (double)_minXInsetForAccessoryViews;
- (double)_minXTitlebarButtonsWidth;
- (double)_minXTitlebarDragWidth;
- (double)_minXTitlebarWidgetInset;
- (double)_minXWindowBorderWidth;
- (double)_minYTitlebarButtonsOffset;
- (double)_minYWindowBorderHeight;
- (char)_mouseInGroup:(id)a0;
- (char)_mouseInPopupRect:(id)a0;
- (char)_mouseInTitleRect:(id)a0;
- (char)_mouseIsInTitleOrIconArea:(id)a0;
- (char)_movableByBottomBar;
- (void)_moveTitlebarViewsToView:(id)a0;
- (char)_needsBehindWindowBlendingForFullScreenTitlebar;
- (char)_needsTitlebarSeparator;
- (char)_needsVisualEffectViewBackgroundWithMaterial:(long long *)a0 blendingMode:(long long *)a1;
- (id)_nonModalDocumentError;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_normalTitleBarFrame;
- (void)_noteNeedsAuxiliaryViewPositionUpdate;
- (void)_noteToolbarLayoutChanged;
- (struct CGSRegionObject { } *)_opaqueFullSizeContentViewRegionWithClipRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)_preferredAppearance;
- (void)_reacquireToolbarFullScreenAuxiliaryView:(id)a0;
- (void)_reacquireToolbarViewFromFullScreenWindowAndShow:(char)a0;
- (struct CGSRegionObject { } *)_regionForOpaqueDescendants:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 forMove:(char)a1 forUnderTitlebar:(char)a2;
- (void)_relayoutAuxiliaryViewsOfType:(unsigned long long)a0;
- (void)_relayoutBottomAuxiliaryViews;
- (void)_removeBackgroundLayer;
- (void)_removeTitleTextField;
- (void)_renamingDidEndNormally:(char)a0;
- (void)_replaceKnownSubview:(id)a0 with:(id)a1;
- (void)_resetTitleBarButtons;
- (void)_reshapeContentAndToolbarView:(int)a0 withOldToolbarFrameSize:(struct CGSize { double x0; double x1; })a1 resizeWindow:(char)a2 animate:(char)a3;
- (void)_setAutosaveButton:(id)a0;
- (void)_setAutosaveButtonSeparatorField:(id)a0;
- (void)_setAuxiliaryTitlebarViewContainerView:(id)a0;
- (void)_setBackdropView:(id)a0;
- (void)_setBackgroundLayer:(id)a0;
- (void)_setButton:(id)a0 canBeEnabled:(char)a1;
- (void)_setButton:(id)a0 frameOrigin:(struct CGPoint { double x0; double x1; })a1;
- (void)_setContentLayoutGuide:(id)a0;
- (void)_setContentLayoutView:(id)a0;
- (void)_setContentView:(id)a0;
- (void)_setDisplayName:(id)a0;
- (void)_setDocumentAutosavingError:(id)a0;
- (void)_setDocumentButtonEnabled:(char)a0;
- (void)_setDocumentEditingState:(long long)a0 animate:(char)a1;
- (void)_setDrawHandlerDelegate:(id)a0;
- (void)_setFrameNeedsDisplay:(char)a0;
- (void)_setLayoutEngine:(id)a0;
- (void)_setMouseEnteredGroup:(char)a0 entered:(char)a1;
- (void)_setMovableByBottomBar:(char)a0;
- (void)_setNonModalDocumentError:(id)a0;
- (void)_setRenameField:(id)a0;
- (void)_setSuppressTitleControlDrawing:(char)a0;
- (void)_setTemporaryMouseOutsideLeftGroup:(char)a0;
- (void)_setTitleTextField:(id)a0;
- (void)_setTitlebarViewController:(id)a0;
- (void)_setToolbarMockView:(id)a0;
- (void)_setToolbarShowHideResizeWeightingOptimizationOn:(char)a0;
- (void)_setToolbarVisibleStatus:(int)a0;
- (void)_setWidget:(id)a0 frameOrigin:(struct CGPoint { double x0; double x1; })a1;
- (double)_sheetHeightAdjustment;
- (char)_shouldCenterTrafficLights;
- (char)_shouldDrawTitlebarTitle;
- (char)_shouldFlipTitleStuffForRTL;
- (char)_shouldFlipTrafficLightsForRTL;
- (char)_shouldHideTitleView;
- (char)_shouldRepresentFilename;
- (char)_shouldRoundCornersForSurface;
- (char)_shouldSendMouseDownToAutosaveButton:(id)a0;
- (char)_shouldShowDocumentIcon;
- (char)_shouldUseDarkAppearanceInHUDWindows;
- (void)_showHideToolbar:(int)a0 resizeWindow:(char)a1 animate:(char)a2;
- (void)_showToolbarWithAnimation:(char)a0;
- (char)_showsAutosaveButton;
- (double)_sideTitlebarWidth;
- (void)_size:(struct CGSize { double x0; double x1; } *)a0 ofCell:(id)a1 withTitle:(id)a2;
- (struct CGSize { double x0; double x1; })_sizeOfTitlebarFileButton;
- (id)_snapshotCurrentTitleControlStateInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_snapshotStartingTitleControlState;
- (void)_surrenderToolbarViewForFullScreenWindow;
- (void)_syncAuxillaryViewPositions;
- (void)_syncBottomAuxillaryViewPositions;
- (void)_syncToolbarPosition;
- (void)_syncToolbarViewSplitViewKnowledge;
- (void)_syncTopAuxillaryViewPositions;
- (void)_texturedComputeHeightOfTop:(char)a0 bottom:(char)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_texturedMaxXminYResizeRect;
- (char)_themeFrameShouldDrawTitlebar;
- (void)_tileTitlebarAndRedisplay:(char)a0;
- (void)_titleBarViewHeightChanged;
- (struct CGSize { double x0; double x1; })_titleCellSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_titleControlRect;
- (char)_titlePositionIsInline;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_titleTextFieldFrame;
- (char)_titleVisibilityIsHidden;
- (void)_titlebarAssociatedViewFrameChanged:(id)a0;
- (double)_titlebarHeightIncludingInlineToolbar;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_titlebarTitleRect;
- (id)_titlebarViewControllerIfAvailable;
- (id)_toolbar;
- (struct CGPoint { double x0; double x1; })_toolbarButtonOrigin;
- (void)_toolbarFrameSizeChanged:(id)a0 oldSize:(struct CGSize { double x0; double x1; })a1;
- (char)_toolbarIsHidden;
- (char)_toolbarIsInTransition;
- (char)_toolbarIsManagedByExternalWindow;
- (double)_toolbarLeadingSpace;
- (id)_toolbarMockView;
- (double)_toolbarOffsetIfTitleIsHidden;
- (char)_toolbarShouldDrawTitle;
- (double)_toolbarTrailingSpace;
- (id)_toolbarView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_toolbarViewFrame;
- (double)_topBarHeight;
- (double)_topBarHeightWithoutContentBorderThickness;
- (struct CGSize { double x0; double x1; })_topCornerSize;
- (void)_unfloatTitlebarAndToolbarIfNeeded;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_unifiedToolbarFrame;
- (void)_updateAllUnderTitlebarViews;
- (void)_updateAuxiliaryViewPositionsIfNeeded;
- (void)_updateBackdropView;
- (void)_updateBackgroundLayer;
- (void)_updateButtonPositions;
- (void)_updateButtonState;
- (void)_updateButtons;
- (void)_updateButtonsBecauseTitleChanged:(char)a0 havingATitleChanged:(char)a1;
- (void)_updateButtonsForWindowSharingSession;
- (void)_updateButtonsWithDocumentEdited:(char)a0;
- (void)_updateContentLayoutGuideFrame;
- (void)_updateContentViewFrame;
- (void)_updateLayerMasksToBoundsFromView;
- (void)_updateMouseTracking;
- (void)_updateObscuredStateOfButtonsForWindowSharingSession;
- (void)_updateSidebarPositionIfNeeded;
- (void)_updateTemporaryContentViewFrame;
- (void)_updateTitleBarField;
- (void)_updateTitleProperties:(id)a0 animated:(char)a1;
- (void)_updateTitleSeparatorViewIfNeeded;
- (void)_updateTitleTextField;
- (void)_updateTitlebarContainerViewFrameIfNecessary;
- (void)_updateToolbarTitleVisibility;
- (void)_updateWidgets;
- (char)_usingToolbarShowHideWeightingOptimization;
- (char)_wantsFloatingTitlebar;
- (char)_wantsLeftHandButtons;
- (char)_wantsSideUtilityTitleBar;
- (char)_wantsTitleBar;
- (char)_wantsTitleString;
- (char)_wantsToolbarHeightTitlebarWithoutToolbar;
- (void)_willChangeContentLayoutRect;
- (void)_willStartRenameWithTitle:(id)a0 editingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (double)_windowBorderThickness;
- (void)_windowChangedKeyState;
- (double)_windowFileButtonSpacingWidth;
- (double)_windowResizeBorderThickness;
- (double)_windowTitlebarButtonSpacingWidth;
- (double)_windowTitlebarXResizeBorderThickness;
- (double)_windowTitlebarYResizeBorderThickness;
- (char)_windowUsesFullSizeContentView;
- (void)_windowWillEnterFullscreen:(id)a0;
- (void)_windowWillExitFullscreen:(id)a0;
- (struct CGPoint { double x0; double x1; })_zoomButtonOrigin;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })activationRect;
- (void)addFileButton:(id)a0;
- (void)addSubview:(id)a0;
- (void)addSubview:(id)a0 positioned:(long long)a1 relativeTo:(id)a2;
- (void)addTitlebarSubview:(id)a0;
- (void)addUnderTitlebarView:(id)a0 withAssociatedWithView:(id)a1;
- (void)allowTitleDrawing;
- (void)animationDidEnd:(id)a0;
- (void)animationDidStop:(id)a0;
- (id)autosaveButton;
- (void)backgroundColorChanged:(id)a0;
- (char)bottomCornerRounded;
- (double)buttonRevealAmount;
- (char)canAddUnderTitlebarViews;
- (void)closeButtonDidChangeGeometry;
- (void)closeButtonDidHideOrShow;
- (double)contentAlpha;
- (double)contentBorderThicknessForEdge:(unsigned long long)a0;
- (id)contentFill;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForFrameRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
- (void)cursorUpdate:(id)a0;
- (void)drawFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawWindowBackgroundRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawWindowBackgroundRegion:(struct CGSRegionObject { } *)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1;
- (id)fullScreenButton;
- (double)fullScreenTitlebarMaxHeight;
- (double)fullScreenTitlebarMinHeight;
- (char)handleMouseDown:(id)a0;
- (char)handleRightMouseDown:(id)a0;
- (void)handleSetFrameCommonRedisplay;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 styleMask:(unsigned long long)a1 owner:(id)a2;
- (char)isOpaque;
- (char)layer:(id)a0 shouldInheritContentsScale:(double)a1 fromWindow:(id)a2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })leftButtonGroupFrameInTitlebarView;
- (id)lockButton;
- (id)menuForEvent:(id)a0;
- (struct CGSize { double x0; double x1; })minFrameSize;
- (struct CGSize { double x0; double x1; })minFrameSizeForMinContentSize:(struct CGSize { double x0; double x1; })a0 styleMask:(unsigned long long)a1;
- (struct CGSize { double x0; double x1; })miniaturizedSize;
- (void)mouseDown:(id)a0;
- (void)mouseEntered:(id)a0;
- (void)mouseEnteredLeftButtonGroup;
- (void)mouseExited:(id)a0;
- (void)mouseExitedLeftButtonGroup;
- (void)mouseUp:(id)a0;
- (id)newAutosaveButton;
- (id)newCloseButton;
- (id)newFileButton;
- (id)newFullScreenButton;
- (id)newLockButton;
- (id)newMiniaturizeButton;
- (id)newSharingIndicator;
- (id)newToolbarButton;
- (id)newZoomButton;
- (id)opaqueAncestor;
- (char)preservesContentDuringLiveResize;
- (void)relayoutAuxiliaryViewsOfType:(unsigned long long)a0;
- (void)removeFromSuperview;
- (void)removeUnderTitlebarView:(id)a0 withAssociatedWithView:(id)a1;
- (id)renameField;
- (void)setBoundsSize:(struct CGSize { double x0; double x1; })a0;
- (void)setButtonRevealAmount:(double)a0;
- (void)setContentBorderThickness:(double)a0 forEdge:(unsigned long long)a1;
- (void)setDocumentEdited:(char)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (void)setNeedsDisplay:(char)a0;
- (void)setRepresentedFilename:(id)a0;
- (void)setRepresentedURL:(id)a0;
- (void)setStyleMask:(unsigned long long)a0;
- (void)setTemporaryContentView:(id)a0;
- (void)setThemeFrameWidgetState:(int)a0;
- (void)setTitlebarContainerView:(id)a0;
- (void)setTitlebarView:(id)a0;
- (void)shapeWindow;
- (char)shouldAttemptResize;
- (char)shouldStartWindowDragForEvent:(id)a0;
- (struct CGSize { double x0; double x1; })sizeOfTitlebarToolbarButton;
- (double)startingYLocationForSheets;
- (id)temporaryContentView;
- (id)titleBarViewsForMouseHitTest;
- (double)titleHeightToHideInFullScreen;
- (id)titlebarAccessoryViewControllers;
- (void)titlebarAppearsTransparentChanged;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titlebarRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titlebarRectIncludingToolbar;
- (id)titlebarView;
- (id)titlebarViewController;
- (id)toolbarButton;
- (char)topCornerRounded;
- (void)updateLayer;
- (void)updateTitleTextField;
- (void)updateTitlebarViewBlendingMode;
- (void)viewDidChangeEffectiveAppearance;
- (void)viewDidEndLiveResize;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)a0;
- (char)wantsUpdateLayer;
- (void)windowCornerMaskChanged;
- (void)windowTitleModeChanged;
- (void)windowTitlePositionChanged;
- (void)windowToolbarStyleChanged;

@end

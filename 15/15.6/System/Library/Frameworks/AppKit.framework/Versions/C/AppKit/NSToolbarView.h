@class NSBarLayout, NSString, NSToolbarClippedItemsIndicatorViewer, _NSGapToolbarItem, NSResponder, NSToolbarItem, NSFont, NSToolbar, NSMutableArray, NSToolbarTitleView, NSIndexSet, NSEvent;

@interface NSToolbarView : NSView <NSDraggingSource, NSBarLayoutDelegate> {
    NSToolbar *_toolbar;
    NSToolbarClippedItemsIndicatorViewer *_clipIndicatorViewer;
    NSToolbarTitleView *_windowTitleView;
    NSEvent *_lastEventProcessedForValidation;
    NSMutableArray *_allItemViewers;
    NSMutableArray *_layoutViews;
    NSMutableArray *_clippedViews;
    NSBarLayout *_leadingLayout;
    NSBarLayout *_trailingLayout;
    NSMutableArray *_contentLayouts;
    NSToolbarItem *_dragSourceItem;
    long long _dragSourceItemViewerStartIndex;
    char _dragSourceItemShouldBeRemoved;
    NSToolbarItem *_dragDestinationItem;
    _NSGapToolbarItem *_dragDestinationInsertionGapItem;
    long long _dragDestinationItemViewerStartIndex;
    struct CGPoint { double x; double y; } _dragDestinationLastPoint;
    NSIndexSet *_dragDestinationValidInsertionIndexes;
    long long _layoutEnabledCount;
    double _sidebarDividerPosition;
    double _trailingSidebarDividerPosition;
    double _minimumSidebarWidth;
    double _minimumInspectorWidth;
    double _minimumInlineWindowTitleWidth;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _preCustomizationFrame;
    NSToolbar *_savedToolbar;
    NSResponder *_windowPriorFirstResponder;
    char *_delayedValidationCancel;
    unsigned long long _editingMode;
    struct __tbvFlags { unsigned char layoutInProgress : 1; unsigned char dragIsInsideView : 1; unsigned char wantsKeyboardLoop : 1; unsigned char clipIndicatorWasFirstResponder : 1; unsigned char scheduledDelayedValidateVisibleItems : 1; unsigned char canDeferDelayedValidateVisibleItems : 1; unsigned char skippedLayoutWhileDisabled : 1; unsigned char shouldHideAfterKeyboardHotKeyEvent : 1; unsigned char subviewLayoutInProgress : 1; unsigned char shouldDrawWindowTitle : 1; unsigned char isTitleSidebarAdjacent : 1; unsigned char needsViewAssembly : 1; unsigned char handlingUserInsertDelete : 1; } _tbvFlags;
    NSFont *__titleFont;
}

@property double sidebarDividerPosition;
@property (weak) NSToolbar *toolbar;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_findFirstKeyViewInDirection:(unsigned long long)a0 forKeyLoopGroupingView:(id)a1;
+ (id)defaultMenu;
+ (id)newViewForToolbar:(id)a0 inWindow:(id)a1;

- (void)dealloc;
- (void).cxx_destruct;
- (void)layout;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (void)_windowIsAddingOrRemovingSheet:(id)a0;
- (void)draggingExited:(id)a0;
- (char)_isKeyLoopGroup;
- (id)_itemViewerThatTracksTheSidebar;
- (void)_endLiveResize;
- (id)_hitTest:(struct CGPoint { double x0; double x1; } *)a0 dragTypes:(id)a1;
- (id)_hitTestForEvent:(id)a0;
- (id)_hitTestToBlockWindowResizing:(struct CGPoint { double x0; double x1; })a0 forResizeDirection:(long long)a1;
- (void)_layoutDirtyItemViewersAndTileToolbar;
- (char)_layoutEnabled;
- (char)_layoutInProgress;
- (id)_sidebarTrackingAdapter;
- (void)_windowChangedKeyState;
- (char)acceptsFirstMouse:(id)a0;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (char)accessibilityIsIgnored;
- (char)accessibilityIsOverflowButtonAttributeSettable;
- (char)accessibilityIsSelectedChildrenAttributeSettable;
- (id)accessibilityOverflowButtonAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySelectedChildrenAttribute;
- (unsigned long long)draggingEntered:(id)a0;
- (void)draggingSession:(id)a0 endedAtPoint:(struct CGPoint { double x0; double x1; })a1 operation:(unsigned long long)a2;
- (unsigned long long)draggingSession:(id)a0 sourceOperationMaskForDraggingContext:(long long)a1;
- (void)draggingSession:(id)a0 willBeginAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (unsigned long long)draggingUpdated:(id)a0;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)isFlipped;
- (double)layout:(id)a0 visualCenterXForCenterItems:(id)a1;
- (id)menuForEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (char)mouseDownCanMoveWindow;
- (char)performDragOperation:(id)a0;
- (char)preservesContentDuringLiveResize;
- (void)removeToolbarItem:(id)a0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })a0;
- (long long)userInterfaceLayoutDirection;
- (char)validateMenuItem:(id)a0;
- (void)viewDidChangeBackingProperties;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)a0;
- (char)wantsLayer;
- (char)wantsPeriodicDraggingUpdates;
- (void)windowDidMove:(id)a0;
- (void)windowDidUpdate:(id)a0;

@end

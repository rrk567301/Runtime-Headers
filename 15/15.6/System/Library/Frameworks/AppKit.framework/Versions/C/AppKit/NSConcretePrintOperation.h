@class NSView, NSString, NSProgressPanel, NSPDFPanel, NSPrintOperationPrintEventRetrofitInfo, NSObject, NSPrintInfo, NSMutableData, NSPrintPanel, NSGraphicsContext;
@protocol OS_dispatch_group;

@interface NSConcretePrintOperation : NSPrintOperation {
    NSGraphicsContext *_graphicsContext;
    NSObject<OS_dispatch_group> *_graphicsContextCompletionGroup;
    long long _pageOrder;
    NSPrintPanel *_printPanel;
    id _accessoryView;
    id _thumbnailView;
    void *jobVars;
    NSView *_view;
    NSPrintInfo *_printInfo;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _copyingBounds;
    char _copyingToEPSNotPDF;
    NSMutableData *_copyingData;
    NSString *_copyingPath;
    NSString *_jobStyleHint;
    NSString *_jobTitle;
    NSProgressPanel *_progressPanel;
    struct _NSModalSession { } *_progressPanelAppModalSession;
    NSPDFPanel *_pdfPanel;
    struct { id x0; id x1; SEL x2; void *x3; } *_modalContextInfo;
    NSPrintOperationPrintEventRetrofitInfo *_printEventRetrofitInfo;
    long long _firstPageNumber;
    long long _lastPageNumber;
    double _pageScaling;
    long long _firstJobPageNumber;
    long long _lastJobPageNumber;
    long long _firstRenderPageNumber;
    long long _lastRenderPageNumber;
    long long _currentPageNumber;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _currentPageBounds;
    long long _renderQuality;
    char canSpawnSeparateThread;
    char _showsPrintPanel;
    char _showsProgressPanel;
    char _isCopying;
    char _didRunToCompletion;
    char _paginationIsValid;
    char _viewKnowsPages;
    char _jobPageNumbersAreValid;
    char _isLockingFocus;
    char _isRenderingBorder;
    char _wasCancelledByUser;
    char _didAddSaveURL;
    char _isResponsibleForFileCoordination;
    char _allowDeferredPrintSpooling;
}

- (void)dealloc;
- (id)context;
- (void)setAccessoryView:(id)a0;
- (id)view;
- (char)_isLockingFocus;
- (void)runOperationModalForWindow:(id)a0 delegate:(id)a1 didRunSelector:(SEL)a2 contextInfo:(void *)a3;
- (char)showsPrintPanel;
- (id)PDFPanel;
- (long long)_lastPageNumber;
- (long long)_viewKnowsPages;
- (void)_beginPDFPanelModalForWindow:(id)a0 thenContinue:(id /* block */)a1;
- (void)_continueModalOperationPastPrintPanel;
- (void)_continueModalOperationToTheEnd:(id)a0;
- (void)_createAndShowProgressPanelIfAppropriate:(char)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentPageBounds;
- (id)_effectiveJobTitle;
- (void)_finishModalOperation;
- (long long)_firstJobPageNumber;
- (long long)_firstPageNumber;
- (long long)_firstRenderPageNumber;
- (void)_forceKnowsPageRangeMessage;
- (id)_initWithView:(id)a0 printInfo:(id)a1;
- (id)_initWithView:(id)a0 printInfo:(id)a1 epsNotPDF:(char)a2 bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a3 data:(id)a4 orPath:(id)a5;
- (void)_invalidatePagination;
- (char)_isCancelledAfterHandlingUserEvents;
- (char)_isRenderingBorder;
- (char)_isResponsibleForFileCoordination;
- (long long)_lastJobPageNumber;
- (long long)_lastRenderPageNumber;
- (void)_messageTraceExportAsPDFIfNecessary;
- (long long)_nUpPages;
- (struct _PrivatePrintOperationInfo { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; char x2; char x3; char x4; char x5; char x6; char x7; char x8; char x9; long long x10; long long x11; long long x12; long long x13; long long x14; long long x15; long long x16; id x17; id x18; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x19; char x20; char x21; char x22; long long x23; double x24; double x25; double x26; double x27; long long x28; long long x29; struct CGPoint { double x0; double x1; } x30; unsigned int x31; void *x32; long long x33; long long x34; char x35; long long x36; long long x37; long long x38; id x39; char x40; id x41; long long x42; char x43; id x44; id x45; long long x46; id x47; double *x48; long long x49; double *x50; long long x51; } *)_operationInfo;
- (double)_pageScaling;
- (long long)_pageSet;
- (id)_preparedPrintPanel;
- (void)_printPanel:(id)a0 didEndAndReturn:(long long)a1 contextInfo:(void *)a2;
- (void)_progressPanel:(id)a0 didEndAndReturn:(long long)a1 contextInfo:(void *)a2;
- (void)_progressPanelWasCancelled:(id)a0 contextInfo:(void *)a1;
- (char)_renderView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_renderingBounds;
- (void)_setAllowsDeferredPrintSpooling:(char)a0;
- (void)_setLockingFocus:(char)a0;
- (void)_setPageOrderFromPrintInfo;
- (void)_setPreferredRenderingQuality:(long long)a0;
- (void)_setRenderingBorder:(char)a0;
- (void)_setShowPrintPanel:(char)a0;
- (void)_setShowProgressPanel:(char)a0;
- (void)_setThumbnailView:(id)a0;
- (char)_showsPreviewByDefault;
- (id)_thumbnailView;
- (char)_tryToSetCurrentPageNumber:(long long)a0;
- (void)_validateJobPageNumbers;
- (void)_validatePagination;
- (id)accessoryView;
- (id)baseAffineTransform;
- (char)canSpawnSeparateThread;
- (void)cleanUpOperation;
- (id)createContext;
- (long long)currentPage;
- (char)deliverResult;
- (void)destroyContext;
- (char)isCopyingOperation;
- (char)isEPSOperation;
- (id)jobStyleHint;
- (id)jobTitle;
- (long long)pageOrder;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })pageRange;
- (long long)preferredRenderingQuality;
- (id)printInfo;
- (id)printPanel;
- (char)runOperation;
- (void)setBaseAffineTransform:(id)a0;
- (void)setCanSpawnSeparateThread:(char)a0;
- (void)setJobStyleHint:(id)a0;
- (void)setJobTitle:(id)a0;
- (void)setPDFPanel:(id)a0;
- (void)setPageOrder:(long long)a0;
- (void)setPrintInfo:(id)a0;
- (void)setPrintPanel:(id)a0;
- (void)setShowPanels:(char)a0;
- (void)setShowsPrintPanel:(char)a0;
- (void)setShowsProgressPanel:(char)a0;
- (char)showPanels;
- (char)showsProgressPanel;

@end

@class NSString, NSArray, NSTrackingArea, NSMutableDictionary, NSColoredPencil, NSColor, NSMutableArray, NSColorPickerPencils, NSColorList, NSLayoutConstraint;

@interface NSColorPickerPencilView : NSView {
    NSMutableArray *_pencils;
    NSMutableDictionary *_pencilLayers;
    NSColoredPencil *_hoveredPencil;
    NSColoredPencil *_selectedPencil;
    NSColoredPencil *_currentFocusedPencil;
    NSTrackingArea *_trackingArea;
    NSColorList *_pencilColorList;
    NSColorPickerPencils *_controllingPicker;
    NSLayoutConstraint *_aspectRatioConstraint;
    unsigned char _didHoverOutsideSelectedPencil : 1;
    unsigned char _didCompleteScaledPencilRender : 1;
    unsigned int _reservedFlags : 31;
}

@property (readonly, copy) NSArray *_pencils;
@property (readonly) NSColorList *_colorList;
@property (readonly) NSColoredPencil *_selectedPencil;
@property (readonly) NSColoredPencil *_focusedPencil;
@property (readonly) char _hasFocusRing;
@property (readonly) char _shouldShowFocusRing;
@property (copy) NSColor *color;
@property (readonly, copy) NSString *localizedColorNameComponent;

+ (char)clipsToBounds;

- (void)dealloc;
- (id)initWithCoder:(id)a0;
- (void)layout;
- (void)_hoverAndSelectPencilWithEvent:(id)a0;
- (id)_leftMostPencil;
- (id)_pencilRightOf:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameOfPencil:(id)a0;
- (void)moveUp:(id)a0;
- (void)_addFocusToLayer:(id)a0;
- (void)_addFocusToLayer:(id)a0 animate:(char)a1;
- (id)_bottomMostPencil;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_calculateFrameForPencil:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_calculateFrameForPencil:(id)a0 atRow:(long long)a1 column:(long long)a2;
- (void)_enumeratePencilsWithBlock:(id /* block */)a0;
- (void)_hoverPencil:(id)a0;
- (id)_layerForPencil:(id)a0;
- (id)_namedPencil;
- (id)_pencilAbove:(id)a0;
- (id)_pencilAtEventLocation:(id)a0;
- (id)_pencilAtRow:(long long)a0 column:(long long)a1;
- (id)_pencilAtViewPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)_pencilBelow:(id)a0;
- (id)_pencilLeftOf:(id)a0;
- (void)_pencilViewCommonInit;
- (id)_pencilWithColor:(id)a0;
- (void)_removeAllPencilLayers;
- (void)_removeFocusFromLayer:(id)a0;
- (id)_rightMostPencil;
- (void)_row:(long long *)a0 column:(long long *)a1 ofPencil:(id)a2;
- (void)_selectPencil:(id)a0 updateSelection:(char)a1 animate:(char)a2;
- (void)_setLayer:(id)a0 forPencil:(id)a1;
- (id)_topMostPencil;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_unobscuredFrameOfPencil:(id)a0;
- (void)_updateFocusRing;
- (void)_updateFramesForPencils:(id)a0 duration:(double)a1;
- (void)_updatePencilsFromColorList;
- (void)_windowChangedKeyState;
- (char)acceptsFirstMouse:(id)a0;
- (char)acceptsFirstResponder;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (char)accessibilityIsIgnored;
- (char)accessibilityIsValueAttributeSettable;
- (id)accessibilityLabel;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (void)awakeFromNib;
- (char)becomeFirstResponder;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)insertBacktab:(id)a0;
- (void)insertTab:(id)a0;
- (char)isFlipped;
- (void)keyDown:(id)a0;
- (void)mouseDown:(id)a0;
- (char)mouseDownCanMoveWindow;
- (void)mouseDragged:(id)a0;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void)mouseMoved:(id)a0;
- (void)mouseUp:(id)a0;
- (void)moveDown:(id)a0;
- (void)moveLeft:(id)a0;
- (void)moveRight:(id)a0;
- (char)needsPanelToBecomeKey;
- (char)resignFirstResponder;
- (void)updateTrackingAreas;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;

@end

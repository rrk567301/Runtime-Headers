@class NSPathComponentCell, NSArray, NSURL, NSString, NSColor, NSAttributedString, NSAnimation, NSPopUpButtonCell, NSPathControlItem, NSMutableArray;
@protocol NSPathCellDelegate;

@interface NSPathCell : NSActionCell <NSMenuItemValidation, NSOpenSavePanelDelegate> {
    NSColor *_backgroundColor;
    NSMutableArray *_borderColors;
    NSPathControlItem *_hoveredItem;
    NSPopUpButtonCell *_popUpButtonCell;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _currentRect;
    NSAnimation *_animation;
    NSMutableArray *_pathItems;
    SEL _doubleAction;
    struct { unsigned char cbs : 4; unsigned int reserved : 28; } _piFlags;
    long long _pathStyle;
}

@property (class, readonly) Class pathComponentCellClass;

@property (copy) NSArray *pathItems;
@property (weak, setter=_setHoveredItem:) NSPathControlItem *_hoveredItem;
@property (retain, setter=_setClickedItem:) NSPathControlItem *_clickedItem;
@property (retain, setter=_setPopupButtonCell:) NSPopUpButtonCell *_popupButtonCell;
@property long long pathStyle;
@property (copy) NSURL *URL;
@property (copy) NSArray *allowedTypes;
@property (weak) id<NSPathCellDelegate> delegate;
@property (copy) NSArray *pathComponentCells;
@property (readonly) NSPathComponentCell *clickedPathComponentCell;
@property SEL doubleAction;
@property (copy) NSColor *backgroundColor;
@property (copy) NSString *placeholderString;
@property (copy) NSAttributedString *placeholderAttributedString;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (char)prefersTrackingUntilMouseUp;

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)init;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setEnabled:(char)a0;
- (void)setAlignment:(long long)a0;
- (void)setBaseWritingDirection:(long long)a0;
- (void)setObjectValue:(id)a0;
- (void)_menuItemClick:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })expansionFrameWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)removePathComponentCellAtIndex:(long long)a0;
- (void)setControlSize:(unsigned long long)a0;
- (void)accessibilitySetFocus:(id)a0 forChild:(id)a1;
- (void)animation:(id)a0 didReachProgressMark:(float)a1;
- (void)setBorderColor:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_accessibilityScreenRectForPathComponent:(id)a0;
- (void)_autoUpdateCellContents;
- (id)_borderColors;
- (void)_changeContentsToPath:(id)a0;
- (void)_createHoverChangeAnimation;
- (void)_drawBorderWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_effectiveFontDidChangeTo:(id)a0;
- (struct CGSize { double x0; double x1; })_iconSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_insetFrameForBorder:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_legacyDrawFocusRingInCellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)_menuDidEndTracking:(id)a0;
- (char)_needRedrawOnWindowChangedKeyState;
- (void)_otherItemClick:(id)a0;
- (id)_pathControlItemAtPoint:(struct CGPoint { double x0; double x1; })a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inView:(id)a2;
- (id)_popUpButtonCell;
- (id)_popUpMenu;
- (id)_realPlaceHolderAttributedString;
- (void)_resetClickedCell;
- (id)_scaleImage:(id)a0 forSize:(struct CGSize { double x0; double x1; })a1 lockFocusOK:(char)a2;
- (char)_sendActionOrDoubleAction:(char)a0;
- (void)_setNeedsSizeUpdate;
- (void)_setPopUpButtonCell:(id)a0;
- (void)_setupPopUpButtonCellWithResizedImages:(char)a0;
- (char)_shouldDrawRTL;
- (void)_stopAnimation;
- (id)_titleAttributes;
- (void)_updateCell;
- (void)_updateSizesForInteriorFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)_updateTrackingRects;
- (id)_valueAsFilePath;
- (char)_wantsToUseFocusRingMask;
- (void)_willDisplayOpenPanel:(id)a0;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityHelpStringForChild:(id)a0;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (char)accessibilityIsChildFocusable:(id)a0;
- (char)accessibilityIsChildrenAttributeSettable;
- (char)accessibilityIsDescriptionAttributeSettable;
- (char)accessibilityIsOrientationAttributeSettable;
- (char)accessibilityIsSelectedChildrenAttributeSettable;
- (char)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilityOrientationAttribute;
- (void)accessibilityPerformAction:(id)a0 forChild:(id)a1;
- (id)accessibilityPositionOfChild:(id)a0;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySelectedChildrenAttribute;
- (id)accessibilitySizeOfChild:(id)a0;
- (id)accessibilityVisibleChildrenAttribute;
- (struct CGPoint { double x0; double x1; })accessibilityWindowPointForShowMenu;
- (void)addPathComponentCell:(id)a0;
- (void)animationDidEnd:(id)a0;
- (void)animationDidStop:(id)a0;
- (id)arrayWithArray:(id)a0 transformedByBlock:(id /* block */)a1;
- (unsigned long long)bezelStyle;
- (id)borderColorForEdge:(unsigned long long)a0;
- (struct CGSize { double x0; double x1; })cellSizeForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawFocusRingMaskWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)drawInteriorWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)drawWithExpansionFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)drawWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)editWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1 editor:(id)a2 delegate:(id)a3 event:(id)a4;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })focusRingMaskBoundsForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (unsigned long long)hitTestForEvent:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (void)insertPathComponentCell:(id)a0 atIndex:(long long)a1;
- (char)isOpaque;
- (id)menuForEvent:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (void)mouseEntered:(id)a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inView:(id)a2;
- (void)mouseExited:(id)a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inView:(id)a2;
- (id)pathComponentCellAtPoint:(struct CGPoint { double x0; double x1; })a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inView:(id)a2;
- (void)performClick:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectOfPathComponentCell:(id)a0 withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 inView:(id)a2;
- (void)resetCursorRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)selectWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1 editor:(id)a2 delegate:(id)a3 start:(long long)a4 length:(long long)a5;
- (void)setBezelStyle:(unsigned long long)a0;
- (void)setBorderColor:(id)a0 forEdge:(unsigned long long)a1;
- (void)setBordered:(char)a0;
- (void)setUserInterfaceLayoutDirection:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titleRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (char)trackMouse:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2 untilMouseUp:(char)a3;
- (char)validateMenuItem:(id)a0;

@end

@interface VZNATNetworkDeviceAttachment : VZNetworkDeviceAttachment {
    char _interfaceIsolationEnabled;
}

@property (setter=_setInterfaceIsolationEnabled:) char _interfaceIsolationEnabled;

- (id)init;
- (struct Expected<std::variant<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser>, NSError *> { union storage<std::variant<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser>, NSError *> { char x0; struct variant<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { struct __impl<VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { union __union<std::__variant_detail::_Trait::_Available, 0UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { char x0; struct __alt<0UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Bridged> { struct Bridged { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x0; BOOL x1; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 1UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { char x0; struct __alt<1UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::FileDescriptor> { struct FileDescriptor { struct FileDescriptor { int x0; } x0; unsigned long long x1; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 2UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { char x0; struct __alt<2UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::HostOnly> { struct HostOnly { } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 3UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { char x0; struct __alt<3UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::Nat> { struct Nat { BOOL x0; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 4UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { char x0; struct __alt<4UL, VzCore::VirtualMachineConfiguration::NetworkDevice::Attachments::VhostUser> { struct VhostUser { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { union __rep { struct __short { struct { unsigned char x0 : 1; unsigned char x1 : 7; } x0; char x1[0]; char x2[23]; } x0; struct __long { struct { unsigned char x0 : 1; unsigned long x1 : 63; } x0; unsigned long long x1; char *x2; } x1; } x0; } x0; } x0; int x1; unsigned long long x2; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x3; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x4; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x5; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x6; } x0; } x1; union __union<std::__variant_detail::_Trait::_Available, 5UL> { } x2; } x2; } x2; } x2; } x2; } x0; unsigned int x1; } x0; } x1; id x2; } x0; BOOL x1; })_attachment;
- (struct Expected<NSDictionary *, NSError *> { union storage<NSDictionary *, NSError *> { char x0; id x1; id x2; } x0; BOOL x1; })encodeWithEncoder:(id)a0;

@end

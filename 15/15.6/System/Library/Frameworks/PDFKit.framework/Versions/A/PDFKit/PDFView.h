@class NSView, NSString, NSArray, PDFDestination, PDFDetectedFormField, NSColor, PDFDocument, PDFSelection, PDFPage, PDFViewPrivate, PDFOverlayViewsController, PDFPageBackgroundManager;
@protocol PDFViewDelegate, PDFPageOverlayViewProvider;

@interface PDFView : NSView <PDFPasswordViewControllerDelegate, NSAnimationDelegate, NSMenuDelegate> {
    PDFViewPrivate *_private;
    unsigned long long _currentPageIndex;
    PDFPageBackgroundManager *_pageBackgroundManager;
    PDFDetectedFormField *_detectedFormField;
    PDFPage *_detectedFormFieldPage;
    PDFOverlayViewsController *_overlayViewController;
    char _annotationEditingAllowed;
    char _formDetectionEnabled;
}

@property (retain, nonatomic) PDFDocument *document;
@property (readonly, nonatomic) char canGoToFirstPage;
@property (readonly, nonatomic) char canGoToLastPage;
@property (readonly, nonatomic) char canGoToNextPage;
@property (readonly, nonatomic) char canGoToPreviousPage;
@property (readonly, nonatomic) char canGoBack;
@property (readonly, nonatomic) char canGoForward;
@property (readonly, nonatomic) PDFPage *currentPage;
@property (readonly, nonatomic) PDFDestination *currentDestination;
@property (nonatomic) long long displayMode;
@property (nonatomic) long long displayDirection;
@property (nonatomic) char displaysPageBreaks;
@property (nonatomic) struct NSEdgeInsets { double x0; double x1; double x2; double x3; } pageBreakMargins;
@property (nonatomic) long long displayBox;
@property (nonatomic) char displaysAsBook;
@property (nonatomic) char displaysRTL;
@property (retain, nonatomic) NSColor *backgroundColor;
@property (nonatomic) long long interpolationQuality;
@property (nonatomic, setter=enablePageShadows:) char pageShadowsEnabled;
@property (weak, nonatomic) id<PDFViewDelegate> delegate;
@property (weak, nonatomic) id<PDFPageOverlayViewProvider> pageOverlayViewProvider;
@property (nonatomic) double scaleFactor;
@property (nonatomic) double minScaleFactor;
@property (nonatomic) double maxScaleFactor;
@property (nonatomic) char autoScales;
@property (readonly, nonatomic) double scaleFactorForSizeToFit;
@property (readonly, nonatomic) char canZoomIn;
@property (readonly, nonatomic) char canZoomOut;
@property (retain, nonatomic) PDFSelection *currentSelection;
@property (copy, nonatomic) NSArray *highlightedSelections;
@property (readonly, nonatomic) NSView *documentView;
@property (nonatomic) char acceptsDraggedFiles;
@property (readonly, nonatomic) NSArray *visiblePages;
@property (nonatomic) char enableDataDetectors;
@property (nonatomic, getter=isInMarkupMode) char inMarkupMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)EnableAnnotationKit;
+ (void)DisableAnnotationKit;
+ (void)setUseIOSurfaceForTiles:(BOOL)a0;
+ (BOOL)useIOSurfaceForTiles;

- (void)dealloc;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)performAction:(id)a0;
- (void)revealContext:(id)a0 drawRectsForItem:(id)a1;
- (void)scrollLineDown:(id)a0;
- (void)scrollPageDown:(id)a0;
- (void)_commonInit;
- (char)_gestureRecognizer:(id)a0 shouldAttemptToRecognizeWithEvent:(id)a1;
- (void)_intelligenceCollectContentIn:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 collector:(id)a1;
- (char)acceptsFirstMouse:(id)a0;
- (char)acceptsFirstResponder;
- (id)accessibilityFocusedUIElement;
- (char)allowsUndo;
- (char)becomeFirstResponder;
- (id)controller;
- (void)copy:(id)a0;
- (void)copyLink:(id)a0;
- (void)cursorUpdate:(id)a0;
- (unsigned long long)draggingEntered:(id)a0;
- (void)immediateActionRecognizerWillPrepare:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)keyDown:(id)a0;
- (id)menuForEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (void)mouseEntered:(id)a0;
- (void)mouseExited:(id)a0;
- (void)mouseMoved:(id)a0;
- (void)moveToBeginningOfDocument:(id)a0;
- (void)moveToEndOfDocument:(id)a0;
- (char)performDragOperation:(id)a0;
- (char)prepareForDragOperation:(id)a0;
- (void)print:(id)a0;
- (void)printDocument:(id)a0;
- (void)removeFromSuperview;
- (char)resignFirstResponder;
- (id)revealContext:(id)a0 rectsForItem:(id)a1;
- (void)revealContext:(id)a0 startHighlightingItem:(id)a1;
- (void)revealContext:(id)a0 stopHighlightingItem:(id)a1;
- (void)scrollLineUp:(id)a0;
- (void)scrollPageUp:(id)a0;
- (void)scrollToBeginningOfDocument:(id)a0;
- (void)scrollToEndOfDocument:(id)a0;
- (void)scrollWheel:(id)a0;
- (void)selectAll:(id)a0;
- (void)setAllowsUndo:(char)a0;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setNeedsDisplay:(char)a0;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)startSpeaking:(id)a0;
- (void)stopSpeaking:(id)a0;
- (id)validRequestorForSendType:(id)a0 returnType:(id)a1;
- (char)validateMenuItem:(id)a0;
- (char)validateUserInterfaceItem:(id)a0;
- (void)viewDidMoveToWindow;
- (void)windowDidBecomeKey:(id)a0;
- (void)windowDidResignKey:(id)a0;
- (char)writeSelectionToPasteboard:(id)a0 types:(id)a1;
- (void)zoomIn:(id)a0;
- (void)zoomOut:(id)a0;
- (double)PDFViewWillChangeScaleFactor:(id)a0 toScale:(double)a1;
- (void)_setActualSize:(id)a0;
- (void)_setSinglePage:(id)a0;
- (void)PDFViewWillClickOnLink:(id)a0 withURL:(id)a1;
- (void)_setDoublePage:(id)a0;
- (void)goBack:(id)a0;
- (void)_searchInDictionary:(id)a0;
- (void)_searchInGoogle:(id)a0;
- (void)_setAutoSize:(id)a0;
- (void)_setDoublePageScrolling:(id)a0;
- (void)_setSinglePageScrolling:(id)a0;
- (void)clearSelection;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromPage:(id)a1;
- (id)documentScrollView;
- (void)goForward:(id)a0;
- (void)goToNextPage:(id)a0;
- (void)goToPage:(id)a0;
- (void)goToPreviousPage:(id)a0;
- (id)pageForPoint:(struct CGPoint { double x0; double x1; })a0 nearest:(char)a1;
- (void)scrollSelectionToVisible:(id)a0;
- (void)_setupScrollView;
- (id)PDFLayout;
- (double)autoScaleFactor;
- (struct CGSize { double x0; double x1; })rowSizeForPage:(id)a0;
- (void)goToDestination:(id)a0;
- (double)gutterWidth;
- (void)positionInternalViews:(id)a0;
- (void)setCursorForAreaOfInterest:(long long)a0;
- (void)setDocument:(id)a0 waitDuration:(double)a1;
- (void)setActiveAnnotation:(id)a0;
- (void)setPageColor:(id)a0;
- (char)allowsDragging;
- (void)setAnnotationEditingEnabled:(char)a0;
- (void)_addNote:(id)a0;
- (char)PDFKitHandleBackTabInTextWidget:(id)a0;
- (struct CGPoint { double x0; double x1; })centerPointOfVisibleRectOfPage:(id)a0;
- (void)drawTextSelectionBoundingBoxes:(BOOL)a0;
- (void)goToPageNoPush:(id)a0;
- (void)presentPDFScannerResult:(id)a0 onPage:(id)a1;
- (void)setAnnotationKitCursorOverride:(id)a0;
- (void)setGutterWidth:(double)a0;
- (char)shouldAntiAlias;
- (char)PDFKitHandleTabInTextWidget:(id)a0;
- (void)_selfDidResize:(id)a0;
- (double)_unboundAutoScaleFactorForPage:(id)a0;
- (double)autoScaleFactorForPageWithSize:(struct CGSize { double x0; double x1; })a0;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })documentMargins;
- (id)pdfDocumentView;
- (void)setPDFPageView:(id)a0 tileLayoutScale:(double)a1;
- (BOOL)_addAnnotationItemsToMenu:(id)a0 forAnnotation:(id)a1 onPage:(id)a2 atPagePoint:(struct CGPoint { double x0; double x1; })a3;
- (void)_addCopyItemsToMenu:(id)a0 onPage:(id)a1 atPagePoint:(struct CGPoint { double x0; double x1; })a2;
- (void)_addNavigationAndDisplayModeItemsToMenu:(id)a0;
- (void)_addOpenItemsToMenu:(id)a0 onPage:(id)a1 atPagePoint:(struct CGPoint { double x0; double x1; })a2;
- (void)_addWebSearchItemToMenu:(id)a0;
- (double)_autoScaleFactorForFloatingPage:(id)a0 withTargetView:(id)a1;
- (void)_axPostPageChangeNotification:(id)a0;
- (void)_doNotQueryScaleFactor;
- (void)_ensureOverlayViewController;
- (void)_findVisiblePages;
- (id)_getDocumentAKController;
- (void)_goToPage:(id)a0 animated:(char)a1 withBackgroundUpdate:(char)a2;
- (void)_internalSetAutoScaleFactor;
- (void)_internalSetScaleFactor:(double)a0;
- (id)_menuItemsForRVItem:(id)a0 onPage:(id)a1 atPagePoint:(struct CGPoint { double x0; double x1; })a2;
- (double)_pageViewHeight:(id)a0;
- (void)_reflectNewPageOn;
- (void)_releaseDocument;
- (void)_releaseScrollView;
- (void)_removeMarkup:(id)a0;
- (void)_removeNote:(id)a0;
- (void)_removePasswordView;
- (void)_reorderTranslateItem:(id)a0;
- (void)_resizeDisplayView:(id)a0;
- (void)_revealItem:(id)a0 atPoint:(struct CGPoint { double x0; double x1; })a1 onPage:(id)a2;
- (void)_revealSelection:(id)a0;
- (void)_scrollByPage:(char)a0;
- (void)_scrollHorizontalBy:(double)a0;
- (struct CGPoint { double x0; double x1; })_scrollOriginForPageTopLeft:(id)a0;
- (void)_scrollVerticalBy:(double)a0;
- (void)_setupPasswordView;
- (void)_syncPageIndexToScrollView;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_transformFromPageToPageView:(id)a0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_transformFromPageViewToPage:(id)a0;
- (double)_unboundAutoScaleFactorForPageWithSize:(struct CGSize { double x0; double x1; })a0;
- (void)_updateAnnotations;
- (void)_updateBackingScale:(id)a0;
- (void)_updateBookmarksForPages;
- (void)_updateCurrentPageUsingViewCenter;
- (void)_updatePDFRedactionTransparencyAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_updatePDFScannerResultHighlightAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_updatePasswordView;
- (id)activeAnnotation;
- (unsigned long long)activeMarkupStyle;
- (void)addMarkupWithStyle:(unsigned long long)a0 fromSelection:(id)a1;
- (char)akAnnotationEditingEnabled;
- (id)akToolbarView;
- (char)allowsMarkupAnnotationEditing;
- (void)annotationsChangedOnPage:(id)a0;
- (long long)areaOfInterestForMouse:(id)a0;
- (long long)areaOfInterestForPoint:(struct CGPoint { double x0; double x1; })a0;
- (double)autoScaleFactorForPage:(id)a0;
- (BOOL)backgroundImagesEnabled;
- (void)callPageVisibilityDelegateMethod:(int)a0 forPageView:(id)a1 atPageIndex:(unsigned long long)a2;
- (void)callPageVisibilityDelegateMethodForOverlayAdaptorOnly:(int)a0 forPageView:(id)a1 atPageIndex:(unsigned long long)a2;
- (void)colorWidgetBackgrounds:(BOOL)a0;
- (void)constrainedScrollToPoint:(struct CGPoint { double x0; double x1; })a0;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 fromPage:(id)a1;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })a0 toPage:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toPage:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToRootView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 fromPageLayer:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRootViewRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toPageLayer:(id)a1;
- (void)debugAccessibilityMenu:(id)a0;
- (char)debugAccessibilityShouldDrawLayer:(int)a0;
- (void)debugMenu:(id)a0;
- (void)debugNodeBoundingBoxesMenu:(id)a0;
- (void)debugTextBoundingBoxesMenu:(id)a0;
- (double)defaultGutterWidth;
- (id)determineCurrentPage;
- (char)displaysBookmarksForPages;
- (void)documentWasUnlocked;
- (void)drawAccessibilityTags:(BOOL)a0;
- (void)drawDetectedAnnotationBounds:(BOOL)a0;
- (void)drawNodeBoundingBoxesType:(int)a0 enableDrawing:(BOOL)a1;
- (void)drawPage:(id)a0;
- (void)drawPage:(id)a0 toContext:(struct CGContext { } *)a1;
- (void)drawPagePost:(id)a0;
- (void)drawPagePost:(id)a0 toContext:(struct CGContext { } *)a1;
- (void)drawTextBoundingBoxesType:(int)a0 enableDrawing:(BOOL)a1;
- (void)drawTextPreciseBoundingBoxes:(BOOL)a0;
- (void)dumpPDFViewLayer;
- (void)enableBackgroundImages:(BOOL)a0;
- (void)enableMouseEvents:(BOOL)a0;
- (void)enableSwipeGestures:(BOOL)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extendedRootViewBounds;
- (BOOL)flipsTileContents;
- (void)fluidSwipeWithEvent:(id)a0;
- (BOOL)focusOnColumnAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)forceTileRefresh;
- (char)formFillingUpdatesAnnotationOnEveryTextChange;
- (void)gestureInit;
- (void)goToDestinationNoPush:(id)a0;
- (void)goToFirstPage:(id)a0;
- (void)goToLastPage:(id)a0;
- (void)goToPage:(id)a0 animated:(char)a1;
- (void)goToPage:(id)a0 withAccessibilityBroadcast:(char)a1;
- (void)goToPageNoPush:(id)a0 animated:(char)a1;
- (void)goToPageNoPush:(id)a0 withAccessibilityBroadcast:(char)a1;
- (void)goToPageWithoutBackgroundUpdate:(id)a0;
- (void)goToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 onPage:(id)a1;
- (void)goToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 onPage:(id)a1 withAccessibilityBroadcast:(char)a2;
- (void)goToSelection:(id)a0;
- (double)greekingThreshold;
- (char)handleBackTabInDetectedFormField;
- (char)handleBackTabInTextWidget:(id)a0;
- (char)handleScrollWheel:(id)a0;
- (char)handleTabInDetectedFormField;
- (char)handleTabInTextWidget:(id)a0;
- (void)handleTextSuggestion:(id)a0 completionHandler:(id /* block */)a1;
- (BOOL)hasEnabledMouseEvents;
- (BOOL)hasEnabledSwipeGestures;
- (void)highlightDetectedFormFields:(BOOL)a0;
- (void)highlightPDFRedactions:(BOOL)a0;
- (void)hintScrollDirectionHorizontal:(unsigned long long)a0 andVertical:(unsigned long long)a1;
- (void)insertFormFieldAtBestLocationNearPoint:(struct CGPoint { double x0; double x1; })a0 onPage:(id)a1;
- (void)insertFormFieldAtDefaultLocation;
- (void)insertFormFieldWithBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 onPage:(id)a1;
- (void)installDebugMenu;
- (void)interactWithAnnotation:(id)a0;
- (void)internalForceAnnotationRefresh;
- (void)internalForceTileRefresh;
- (char)isAnnotationEditingEnabled;
- (char)isFormDetectionEnabled;
- (char)isInFormFillingMode;
- (char)isOverLinkAnnotation:(struct CGPoint { double x0; double x1; })a0;
- (char)isRectVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 onPage:(id)a1;
- (char)isTextSelectionEnabled;
- (char)isUpdatingSelectionMarkups;
- (unsigned long long)lastPageIndex;
- (void)layoutDocumentView;
- (double)lineWidthThreshold;
- (long long)mouseEventAreasOfInterestMask;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })movePDFPageView:(id)a0 toView:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })movePDFPageView:(id)a0 toView:(id)a1 withAutoScale:(BOOL)a2;
- (id)nextPage;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })normalizedPageBounds:(id)a0;
- (void)openRepresentedLink:(id)a0;
- (id)pageColor;
- (void)pageViewControllerSaysPageChanged:(id)a0;
- (id)pageViewForPageAtIndex:(unsigned long long)a0;
- (struct CGSize { double x0; double x1; })pageViewSizeForPage:(id)a0;
- (void)pdfViewDidChangePage:(id)a0;
- (void)pdfViewDidChangeScale:(id)a0;
- (void)performBeep;
- (void)performOverlayAdaptorPageVisibilityTrueUpAfterSettingDocument;
- (void)previewRotatePage:(id)a0 byDegrees:(double)a1;
- (void)previewRotatePageBegin:(id)a0;
- (void)previewRotatePageComplete:(id)a0 willCommitRotation:(BOOL)a1 byDegrees:(double)a2;
- (id)previousPage;
- (void)printAccessibilityTree;
- (void)printActivePageAnnotations;
- (void)printActivePageInfo;
- (void)printActivePageText;
- (void)printDocumentAttributes;
- (void)printWithInfo:(id)a0 autoRotate:(char)a1;
- (void)printWithInfo:(id)a0 autoRotate:(char)a1 pageScaling:(long long)a2;
- (void)pushDestination:(id)a0;
- (void)removeControlForAnnotation:(id)a0;
- (id)renderingProperties;
- (void)resetAccessibilityTree;
- (void)revertPDFPageView:(id)a0 withOriginalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rootViewBounds;
- (void)scrollViewSaysPageMayHaveChanged:(id)a0;
- (void)setActiveMarkupStyle:(unsigned long long)a0;
- (void)setAkAnnotationEditingEnabled:(char)a0;
- (void)setAllowsDragging:(char)a0;
- (void)setAllowsMarkupAnnotationEditing:(char)a0;
- (void)setBackgroundImage:(id)a0 forPage:(id)a1;
- (void)setCurrentPageIndex:(unsigned long long)a0 withNotification:(char)a1;
- (void)setCurrentSelection:(id)a0 animate:(char)a1;
- (void)setCurrentSelection:(id)a0 updateTextInput:(BOOL)a1;
- (void)setDisplaysBookmarksForPages:(char)a0;
- (void)setDocument:(id)a0 withInitialPageIndex:(unsigned long long)a1;
- (void)setDocumentMargins:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (void)setEnableTileUpdates:(BOOL)a0;
- (void)setFormDetectionEnabled:(char)a0;
- (void)setFormFillingUpdatesAnnotationOnEveryTextChange:(char)a0;
- (void)setGreekingThreshold:(double)a0;
- (void)setInFormFillingMode:(char)a0;
- (void)setLineWidthThreshold:(double)a0;
- (void)setMouseEventAreasOfInterestMask:(long long)a0;
- (void)setNewPageVisibilityDelegate:(id)a0 withOldDelegate:(id)a1;
- (void)setScaleFactor:(double)a0 anchorPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)setShouldAntiAlias:(char)a0;
- (void)setShowsScrollIndicators:(char)a0;
- (void)setTextSelectionEnabled:(char)a0;
- (char)showsScrollIndicators;
- (void)simpleSelectionEnabledChanged;
- (void)startEditingTextWidgetAnnotation:(id)a0;
- (void)syncPageIndexToScrollView;
- (void)takeBackgroundColorFrom:(id)a0;
- (void)takePasswordFrom:(id)a0;
- (double)targetBackingScaleFactor;
- (void)updateAccessibilityTags;
- (void)updateNodeBoundingBoxes;
- (char)userDidEnterPassword:(id)a0 forPasswordViewController:(id)a1;
- (char)validateDebugAccessibilityMenuItem:(id)a0;
- (char)validateDebugMenuItem:(id)a0;
- (char)validateDebugNodeBoundingBoxesMenuItem:(id)a0;
- (char)validateDebugTextBoundingBoxesMenuItem:(id)a0;
- (id)viewForPage:(id)a0;
- (id)visibleAnnotations;
- (id)visiblePageViews;
- (void)visiblePagesChanged:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleRectForPageView:(id)a0;

@end

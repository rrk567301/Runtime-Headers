@class NSXPCConnection, NSString, NSXPCListenerEndpoint, NSLock, NSArray, ICScannerProperties, NSMutableDictionary, NSDictionary, NSObject, ICScannerFunctionalUnit, NSURL;
@protocol OS_dispatch_semaphore;

@interface ICScannerDevice : ICDevice

@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *endpointSemaphore;
@property (nonatomic) struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } endpointLock;
@property (copy, nonatomic) NSString *buttonPressed;
@property (nonatomic) unsigned int assertionID;
@property (retain, nonatomic) NSXPCConnection *connection;
@property (retain, nonatomic) NSXPCListenerEndpoint *endpoint;
@property (retain, nonatomic) NSLock *connectionLock;
@property (retain, nonatomic) struct CGImage { } *scannerDeviceIcon;
@property (retain, nonatomic) ICScannerProperties *scannerProperties;
@property (readonly) char supportsICARawFileFormat;
@property (readonly) NSMutableDictionary *scanContext;
@property char scanParamsRetained;
@property (copy, nonatomic) NSString *bonjourServiceType;
@property (copy, nonatomic) NSString *bonjourServiceName;
@property (retain, nonatomic) NSDictionary *bonjourTXTRecord;
@property (copy, nonatomic) NSString *ipAddress;
@property (nonatomic) int ipPort;
@property (readonly) NSArray *availableFunctionalUnitTypes;
@property (readonly) ICScannerFunctionalUnit *selectedFunctionalUnit;
@property unsigned long long transferMode;
@property unsigned int maxMemoryBandSize;
@property (retain) NSURL *downloadsDirectory;
@property (copy) NSString *documentName;
@property (copy) NSString *documentUTI;
@property (copy) NSString *defaultUsername;

- (void)dealloc;
- (id)description;
- (id)init;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)a0;
- (void)disconnect;
- (void)observeValueForKeyPath:(id)a0 ofObject:(id)a1 change:(id)a2 context:(void *)a3;
- (struct CGImage { } *)icon;
- (char)isConnected;
- (void)cancelScan;
- (void)connectWithParameters:(id)a0;
- (void)resetConnection;
- (id)getConnection;
- (char)updateName:(id)a0;
- (void)releasePowerAssertion;
- (char)hasEndpoint;
- (void)requestCloseSession;
- (void)requestEjectOrDisconnect;
- (void)requestOpenSession;
- (void)requestOverviewScan;
- (void)requestScan;
- (void)requestSelectFunctionalUnit:(unsigned long long)a0;
- (void)saveAsVirtualScanner;
- (void)requestEject;
- (void)requestOpenSessionWithOptions:(id)a0 completion:(id /* block */)a1;
- (char)sendMessageCmd:(id)a0 from:(id)a1 completion:(id /* block */)a2;
- (void)handlePageDone:(id)a0;
- (void)handleTransfer:(id)a0;
- (char)sendMessageCmd:(id)a0;
- (void)addCommonConnectionInfo:(id)a0;
- (char)bringupDeviceConnection;
- (void)cleanupDeviceWithErrorCode:(id)a0 completionBlock:(id /* block */)a1;
- (id)createBonjourLocationNameWithTxtRecord:(id)a0 andServiceName:(id)a1;
- (void)getScanParameters:(id)a0;
- (void)getScannerDictionary;
- (char)handleCommandCompletion:(id)a0;
- (void)handleImageCaptureEventNotification:(id)a0 completion:(id /* block */)a1;
- (void)handleObjectAdded:(id)a0;
- (void)handleOverviewScanEnded:(id)a0;
- (void)handleScanEnded:(id)a0;
- (void)handleScanParameters:(id)a0;
- (void)handleScannerDictionary:(id)a0;
- (void)initPowerAssertion;
- (void)initializeScannerProperties:(id)a0;
- (void)legacySupportMemoryTransferWithURL:(id)a0;
- (char)loadDeviceModuleWithOptions:(id)a0;
- (void)lockConnection;
- (unsigned int)numOpenSessionRetries;
- (void)registerForImageCaptureEventNotifications:(id)a0;
- (void)releaseConnection;
- (id)remoteDevice:(id *)a0;
- (void)requestChangeVendorFeature:(id)a0;
- (void)requestCloseSessionWithOptions:(id)a0 completion:(id /* block */)a1;
- (void)requestEjectWithCompletion:(id /* block */)a0;
- (void)requestOpenSessionWithCredentials:(id)a0 password:(id)a1;
- (void)requestOverviewScanWithOptions:(id)a0 completion:(id /* block */)a1;
- (void)requestScanWithOptions:(id)a0 completion:(id /* block */)a1;
- (void)requestSendMessage:(unsigned int)a0 outData:(id)a1 maxReturnedDataSize:(unsigned int)a2 sendMessageDelegate:(id)a3 didSendMessageSelector:(SEL)a4 contextInfo:(void *)a5;
- (void)requestYield;
- (void)setEndpoint:(id)a0 deviceID:(id)a1;
- (void)setNumOpenSessionRetries:(unsigned int)a0;
- (void)takePowerAssertion:(id)a0;
- (void)unlockConnection;
- (void)unregisterForImageCaptureEventNotifications:(id)a0;
- (char)updateIcon:(id)a0;
- (char)updateProperties:(id)a0;
- (id)validIconPath:(id)a0;
- (void)virtualScanStateMachine:(int)a0 functionalUnit:(unsigned int)a1 andError:(unsigned int)a2;

@end

@class NSDate, NSString, NSArray, NSUUID, NSSet, NSDictionary, LSApplicationRecord, _LSDiskUsage, NSProgress, _LSApplicationState, NSNumber;

@interface LSApplicationProxy : LSBundleProxy <LSDetachable, NSSecureCoding> {
    LSApplicationRecord *_record;
    NSArray *_plugInKitPlugins;
}

@property (class, readonly) char supportsSecureCoding;

@property (readonly, nonatomic) int bundleModTime;
@property (nonatomic) char userInitiatedUninstall;
@property (readonly, nonatomic) char supportsAlternateIconNames;
@property (readonly, nonatomic) LSApplicationRecord *correspondingApplicationRecord;
@property (readonly, nonatomic) NSString *applicationIdentifier;
@property (readonly, nonatomic) NSString *companionApplicationIdentifier;
@property (readonly, nonatomic) NSArray *counterpartIdentifiers;
@property (readonly, nonatomic) NSDate *registeredDate;
@property (readonly, nonatomic) NSNumber *itemID;
@property (readonly, nonatomic) NSString *vendorName;
@property (readonly, nonatomic) NSString *itemName;
@property (readonly, nonatomic) NSString *storeCohortMetadata;
@property (readonly, nonatomic) NSString *genre;
@property (readonly, nonatomic) NSNumber *genreID;
@property (readonly, nonatomic) NSArray *subgenres;
@property (readonly, nonatomic) NSArray *staticShortcutItems;
@property (readonly, nonatomic) NSString *minimumSystemVersion;
@property (readonly, nonatomic) NSString *maximumSystemVersion;
@property (readonly, nonatomic) NSString *shortVersionString;
@property (readonly, nonatomic) NSString *preferredArchitecture;
@property (readonly, nonatomic) NSString *applicationType;
@property (readonly, nonatomic) NSArray *directionsModes;
@property (readonly, nonatomic) NSArray *UIBackgroundModes;
@property (readonly, nonatomic) NSArray *audioComponents;
@property (readonly, nonatomic) NSUUID *deviceIdentifierForVendor;
@property (readonly, nonatomic) NSUUID *deviceIdentifierForAdvertising;
@property (readonly, nonatomic) NSProgress *installProgress;
@property (readonly, nonatomic) NSNumber *staticDiskUsage;
@property (readonly, nonatomic) NSNumber *dynamicDiskUsage;
@property (readonly, nonatomic) NSNumber *ODRDiskUsage;
@property (readonly, nonatomic) _LSDiskUsage *diskUsage;
@property (readonly, nonatomic) _LSApplicationState *appState;
@property (readonly, nonatomic, getter=isInstalled) char installed;
@property (readonly, nonatomic, getter=isPlaceholder) char placeholder;
@property (readonly, nonatomic, getter=isRestricted) char restricted;
@property (readonly, nonatomic, getter=isRemovedSystemApp) char removedSystemApp;
@property (readonly, nonatomic) NSArray *VPNPlugins;
@property (readonly, nonatomic) NSArray *plugInKitPlugins;
@property (readonly, nonatomic) NSArray *appTags;
@property (readonly, nonatomic) NSString *applicationDSID;
@property (readonly, nonatomic) NSNumber *purchaserDSID;
@property (readonly, nonatomic) NSNumber *downloaderDSID;
@property (readonly, nonatomic) NSNumber *familyID;
@property (readonly, nonatomic) unsigned long long installType;
@property (readonly, nonatomic) unsigned long long originalInstallType;
@property (readonly, nonatomic) NSArray *requiredDeviceCapabilities;
@property (readonly, nonatomic) NSArray *deviceFamily;
@property (readonly, nonatomic) NSArray *activityTypes;
@property (readonly, nonatomic) NSArray *externalAccessoryProtocols;
@property (readonly, nonatomic) NSString *teamID;
@property (readonly, nonatomic) NSString *appIDPrefix;
@property (readonly, nonatomic) NSNumber *storeFront;
@property (readonly, nonatomic) NSNumber *externalVersionIdentifier;
@property (readonly, nonatomic) NSNumber *betaExternalVersionIdentifier;
@property (readonly, nonatomic) NSNumber *ratingRank;
@property (readonly, nonatomic) NSString *ratingLabel;
@property (readonly, nonatomic) NSString *sourceAppIdentifier;
@property (readonly, nonatomic) NSString *applicationVariant;
@property (readonly, nonatomic, getter=isAppUpdate) char appUpdate;
@property (readonly, nonatomic) char hasParallelPlaceholder;
@property (readonly, nonatomic, getter=isNewsstandApp) char newsstandApp;
@property (readonly, nonatomic, getter=isWhitelisted) char whitelisted;
@property (readonly, nonatomic, getter=isAppStoreVendable) char appStoreVendable;
@property (readonly, nonatomic, getter=isDeviceBasedVPP) char deviceBasedVPP;
@property (readonly, nonatomic, getter=isBetaApp) char betaApp;
@property (readonly, nonatomic, getter=isAdHocCodeSigned) char adHocCodeSigned;
@property (readonly, nonatomic) char supportsAudiobooks;
@property (readonly, nonatomic, getter=isLaunchProhibited) char launchProhibited;
@property (readonly, nonatomic) char supportsODR;
@property (readonly, nonatomic) char hasSettingsBundle;
@property (readonly, nonatomic) char supportsExternallyPlayableContent;
@property (readonly, nonatomic) char supportsOpenInPlace;
@property (readonly, nonatomic) char fileSharingEnabled;
@property (readonly, nonatomic) char iconIsPrerendered;
@property (readonly, nonatomic) char iconUsesAssetCatalog;
@property (readonly, nonatomic, getter=isPurchasedReDownload) char purchasedReDownload;
@property (readonly, nonatomic) char hasMIDBasedSINF;
@property (readonly, nonatomic) char missingRequiredSINF;
@property (readonly, nonatomic) char supportsPurgeableLocalStorage;
@property (readonly, nonatomic, getter=isDeletable) char deletable;
@property (readonly, nonatomic) NSArray *managedPersonas;
@property (readonly, nonatomic, getter=isRemoveableSystemApp) char removeableSystemApp;
@property (readonly, nonatomic, getter=isWatchKitApp) char watchKitApp;
@property (readonly, nonatomic) NSString *watchKitVersion;
@property (readonly, nonatomic) NSString *complicationPrincipalClass;
@property (readonly, nonatomic) NSArray *supportedComplicationFamilies;
@property (readonly, nonatomic) char hasCustomNotification;
@property (readonly, nonatomic) char hasComplication;
@property (readonly, nonatomic) char hasGlance;
@property (readonly, nonatomic) char shouldSkipWatchAppInstall;
@property (readonly, nonatomic, getter=isGameCenterEnabled) char gameCenterEnabled;
@property (readonly, nonatomic) char gameCenterEverEnabled;
@property (readonly, nonatomic) NSNumber *installFailureReason;
@property (readonly, nonatomic) long long deviceManagementPolicy;
@property (readonly, nonatomic) NSDictionary *siriActionDefinitionURLs;
@property (readonly, nonatomic) NSString *appStoreToolsBuildVersion;
@property (readonly, nonatomic) NSSet *claimedDocumentContentTypes;
@property (readonly, nonatomic) NSSet *claimedURLSchemes;
@property (readonly, nonatomic) char canHandleWebAuthentication;
@property (readonly, nonatomic) char supportsMultiwindow;
@property (readonly, nonatomic) NSNumber *platform;
@property (readonly, nonatomic) NSArray *backgroundTaskSchedulerPermittedIdentifiers;
@property (readonly, nonatomic, getter=isStandaloneWatchApp) char standaloneWatchApp;
@property (readonly, nonatomic) char runsIndependentlyOfCompanionApp;
@property (readonly, nonatomic, getter=isArcadeApp) char arcadeApp;
@property (readonly, nonatomic) NSArray *carPlayInstrumentClusterURLSchemes;

+ (id)applicationProxyForBundleType:(unsigned long long)a0 identifier:(id)a1 isCompanion:(char)a2 URL:(id)a3 itemID:(id)a4 bundleUnit:(unsigned int *)a5;
+ (id)applicationProxyForBundleURL:(id)a0;
+ (id)applicationProxyForCompanionIdentifier:(id)a0;
+ (id)applicationProxyForIdentifier:(id)a0;
+ (id)applicationProxyForIdentifier:(id)a0 placeholder:(char)a1;
+ (id)applicationProxyForIdentifier:(id)a0 withContext:(struct LSContext { id x0; } *)a1;
+ (id)applicationProxyForItemID:(id)a0;
+ (id)applicationProxyForSystemPlaceholder:(id)a0;
+ (id)applicationProxyWithBundleUnitID:(unsigned int)a0 withContext:(struct LSContext { id x0; } *)a1;

- (id)description;
- (id)forwardingTargetForSelector:(SEL)a0;
- (id)methodSignatureForSelector:(SEL)a0;
- (char)respondsToSelector:(SEL)a0;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (id)iconDataForVariant:(int)a0 withOptions:(int)a1;
- (char)isDeletableIgnoringRestrictions;
- (char)UPPValidated;
- (id)_initWithBundleUnit:(unsigned int)a0 context:(struct LSContext { id x0; } *)a1 bundleIdentifier:(id)a2;
- (id)_initWithContext:(struct LSContext { id x0; } *)a0 bundleUnit:(unsigned int)a1 applicationRecord:(id)a2 bundleID:(id)a3 resolveAndDetach:(char)a4;
- (id)_localizedNameWithPreferredLocalizations:(id)a0 useShortNameOnly:(char)a1;
- (id)_managedPersonas;
- (id)_stringLocalizerForTable:(id)a0;
- (char)_usesSystemPersona;
- (id)alternateIconName;
- (id)bundleType;
- (void)clearAdvertisingIdentifier;
- (id)dataContainerURL;
- (void)detach;
- (id)environmentVariables;
- (char)freeProfileValidated;
- (id)getBundleMetadata;
- (void)getDeviceManagementPolicyWithCompletionHandler:(id /* block */)a0;
- (char)getGenericTranslocationTargetURL:(id *)a0 error:(id *)a1;
- (id)groupContainerURLs;
- (id)handlerRankOfClaimForContentType:(id)a0;
- (id)iconDataForVariant:(int)a0;
- (id)installProgressSync;
- (id)localizedNameForContext:(id)a0;
- (id)localizedNameForContext:(id)a0 preferredLocalizations:(id)a1;
- (id)localizedNameForContext:(id)a0 preferredLocalizations:(id)a1 useShortNameOnly:(char)a2;
- (id)primaryIconDataForVariant:(int)a0;
- (char)profileValidated;
- (void)setAlternateIconName:(id)a0 withResult:(id /* block */)a1;
- (id)signerIdentity;
- (id)signerOrganization;
- (id)valueForUndefinedKey:(id)a0;

@end

@interface LSEligibilityPredicate : NSObject {
    struct DelayedInitable<LaunchServices::Predicate> { struct optional<LaunchServices::Predicate> { union { char __null_state_; struct Predicate { struct map<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>, std::less<os_eligibility_domain_t>, std::allocator<std::pair<const os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>>> { struct __tree<std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>, std::__map_value_compare<os_eligibility_domain_t, std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>, std::less<os_eligibility_domain_t>>, std::allocator<std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<os_eligibility_domain_t, std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>, std::less<os_eligibility_domain_t>>> { unsigned long long __value_; } __pair3_; } __tree_; } _match_map; } __val_; } ; BOOL __engaged_; } _storage; } _predicate;
}

+ (char)getInstallationPredicate:(id *)a0 uninstallationPredicate:(id *)a1 forBundle:(unsigned int)a2 bundleData:(const struct LSBundleData { struct LSBundleBaseData { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; int x6; struct LSVersionNumber { unsigned char x0[32]; } x7; struct LSVersionNumber { unsigned char x0[32]; } x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned char x19; unsigned char x20; unsigned int x21; unsigned short x22; struct LSBundleBaseFlags { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; } x23; } x0; unsigned int x1; unsigned long long x2; unsigned int x3; unsigned int x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; struct LSBundleMoreFlags { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; } x15; unsigned int x16; unsigned int x17; unsigned long long x18; unsigned long long x19; int x20; unsigned int x21; struct LSVersionNumber { unsigned char x0[32]; } x22; struct LSVersionNumber { unsigned char x0[32]; } x23; int x24; struct LSVersionNumber { unsigned char x0[32]; } x25; unsigned long long x26; unsigned long long x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; unsigned long long x38; unsigned int x39; unsigned long long x40; unsigned long long x41; unsigned long long x42; unsigned int x43; unsigned long long x44; unsigned long long x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned long long x49; unsigned int x50; unsigned long long x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; unsigned int x56; unsigned int x57; unsigned int x58; unsigned int x59; unsigned int x60; unsigned int x61; unsigned int x62; unsigned int x63; unsigned int x64; unsigned int x65; unsigned int x66; unsigned int x67; unsigned int x68; unsigned char x69; unsigned char x70; unsigned char x71; unsigned int x72; unsigned int x73[0]; unsigned int x74; unsigned int x75; int x76; unsigned int x77; unsigned int x78; unsigned int x79; unsigned int x80; unsigned int x81; } *)a3 database:(id)a4 error:(id *)a5;

- (id)description;
- (void).cxx_destruct;
- (id).cxx_construct;
- (id)evaluateWithDomainEligibilityResolver:(id)a0 error:(id *)a1;
- (id)initWithDictionary:(id)a0 error:(id *)a1;

@end

@class TSPSupportMetadata, NSRecursiveLock, TSPDocumentSaveOperationState, TSPDataManager, TSPResourceContext, NSMutableArray, TSPDataReferenceMap, TSPDocumentMetadata, TSPRegistry, NSMapTable, TSPSupportManager, NSData, NSProgress, TSPDownloadObserverManager, NSURL, TSUTemporaryDirectory, TSPObjectUUIDMap, TSPPackageWriteCoordinator, TSPCancellationState, TSPDocumentProperties, TSPDataDownloadManager, SFUCryptoKey, TSPDocumentRevision, NSArray, TSPComponentManager, TSPPackage, NSMutableDictionary, TSPObject, NSString, NSObject, NSHashTable, TSPSupportPackageWriteCoordinator, NSUUID, TSPObjectContainer, NSSet;
@protocol OS_dispatch_group, NSFilePresenter, TSPObjectContextDelegate, OS_dispatch_queue;

@interface TSPObjectContext : NSObject <TSPDataReferenceMapDelegate, TSPObjectUUIDMapDelegate, TSPFileCoordinatorDelegate, TSPLazyReferenceDelegate, TSPObjectDelegate, TSPSupportDirectoryDelegate, TSPDataProviding, TSPPassphraseConsumer> {
    _Atomic long long _lastObjectIdentifier;
    _Atomic long long _modifyObjectToken;
    _Atomic int _modifyObjectCount;
    _Atomic int _ignoreDataLifecycleErrorsCount;
    _Atomic char _didClose;
    unsigned int _mode;
    SFUCryptoKey *_decryptionKey;
    NSURL *_documentURL;
    TSPPackage *_documentPackage;
    TSPPackage *_supportPackage;
    NSURL *_supportURL;
    NSProgress *_readProgress;
    TSPCancellationState *_readCancellationState;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _documentPropertiesLock;
    TSPDocumentProperties *_documentProperties;
    NSMapTable *_objects;
    TSPObjectUUIDMap *_objectUUIDMap;
    NSMutableDictionary *_deterministicObjectUUIDSetPerObject;
    TSPDocumentRevision *_documentRevision;
    long long _preferredPackageType;
    NSSet *_featureIdentifiers;
    NSSet *_unsupportedFeatureIdentifiers;
    NSObject<OS_dispatch_queue> *_objectsQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
    NSRecursiveLock *_readLock;
    NSObject<OS_dispatch_queue> *_documentStateQueue;
    NSObject<OS_dispatch_queue> *_dataAttributesQueue;
    NSObject<OS_dispatch_queue> *_loadObserversQueue;
    NSObject<OS_dispatch_queue> *_runLoadObserversQueue;
    _Atomic long long _runLoadObserversQueueSuspendCount;
    NSObject<OS_dispatch_queue> *_resourceAccessQueue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    NSProgress *_nextSaveProgress;
    TSPDocumentSaveOperationState *_saveOperationState;
    TSPPackageWriteCoordinator *_packageWriteCoordinator;
    NSHashTable *_objectModifyDelegates;
    char _isWaitingForEndSave;
    NSObject<OS_dispatch_group> *_pendingEndSaveGroup;
    NSObject<OS_dispatch_group> *_outstandingReadsGroup;
    NSObject<OS_dispatch_queue> *_temporaryDirectoryQueue;
    TSUTemporaryDirectory *_temporaryDirectory;
    struct IdentifierMap<NSMutableArray<TSPObjectContextObserver *> *> { struct __hash_table<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, std::hash<long long>, std::equal_to<const long long>>, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, std::equal_to<const long long>, std::hash<long long>>, std::allocator<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<const long long, std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, std::hash<long long>, std::equal_to<const long long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<const long long, std::__hash_value_type<const long long, NSMutableArray<TSPObjectContextObserver *> *>, std::equal_to<const long long>, std::hash<long long>>> { float __value_; } __p3_; } __table_; } _loadObservers;
    NSObject<OS_dispatch_queue> *_asynchronousObjectModifierQueue;
    NSHashTable *_asynchronousObjectModifiers;
    NSMutableArray *_suspendedAsynchronousObjectModifierStack;
    TSPObject *_supportObject;
    TSPSupportPackageWriteCoordinator *_supportWriteCoordinator;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _dataObserversLock;
    NSHashTable *_dataObservers;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _deferredInitialDataPropertiesBlocksLock;
    NSMutableArray *_deferredInitialDataPropertiesBlocks;
    struct { unsigned char delegateRespondsToAdditionalDocumentPropertiesForWrite : 1; unsigned char delegateRespondsToAdditionalDocumentSupportPropertiesForWrite : 1; unsigned char delegateRespondsToDocumentPasswordHintForWrite : 1; unsigned char delegateRespondsToPackageDataForWrite : 1; unsigned char delegateRespondsToAreNewExternalReferencesToDataAllowed : 1; unsigned char delegateRespondsToAreExternalReferencesToDataAllowedAtURL : 1; unsigned char delegateRespondsToBaseUUIDForObjectUUID : 1; unsigned char delegateRespondsToPreserveDocumentRevisionIdentifierForSaveURL : 1; unsigned char delegateRespondsToFilePresenter : 1; unsigned char delegateRespondsToSupportDirectoryURLReturningIsUnique : 1; unsigned char delegateRespondsToSupportDirectoryURL : 1; unsigned char delegateRespondsToDocumentLoadValidationPolicy : 1; unsigned char delegateRespondsToDocumentSaveValidationPolicy : 1; unsigned char delegateRespondsToIgnoreDocumentSupport : 1; unsigned char delegateRespondsToIsDocumentSupportTemporary : 1; unsigned char delegateRespondsToShouldLoadAllComponents : 1; unsigned char delegateRespondsToIsInCollaborationMode : 1; unsigned char delegateRespondsToIsInReadOnlyMode : 1; unsigned char delegateRespondsToContextDidUpdateDocumentRevision : 1; unsigned char delegateRespondsToRetryUploadForData : 1; unsigned char delegateRespondsToShouldDisableCloneMode : 1; unsigned char skipDocumentUpgrade : 1; } _flags;
}

@property (class, readonly, nonatomic) TSPObjectContext *contextForTransientObjects;
@property (class) char shouldValidateCRCOnWrite;

@property (readonly, nonatomic) NSArray *allDataWithLastDigestMismatch;
@property (readonly, nonatomic) NSArray *allErasedDataWithLastDigestMismatch;
@property (readonly, nonatomic) char hasMissingOrUnmaterializedRemoteData;
@property (readonly, nonatomic) char hasExternalReferenceOrMissingOrUnmaterializedRemoteData;
@property (readonly, nonatomic) TSPRegistry *registry;
@property (readonly, nonatomic) id<NSFilePresenter> filePresenter;
@property (readonly, nonatomic) char ignoreDocumentSupport;
@property (readonly, nonatomic) char isDocumentSupportTemporary;
@property (readonly, nonatomic) char ignoreDocumentSupportVersioning;
@property (readonly, nonatomic) char ignoreUnknownContentWhileReading;
@property (readonly, nonatomic) char ignoreVersionCheckingWhileReading;
@property (readonly, nonatomic) char ignoreDocumentResourcesWhileReading;
@property (readonly, nonatomic) char ignoreDataReferenceCountValidationWhileReading;
@property (readonly, nonatomic) char ignoreDataLifecycleNotifications;
@property (readonly, nonatomic) char ignoreDataLifecycleErrors;
@property (readonly, nonatomic) char isInCollaborationMode;
@property (readonly, nonatomic) TSPComponentManager *componentManager;
@property (readonly, nonatomic) TSPResourceContext *resourceContext;
@property (readonly, nonatomic) TSPDataManager *dataManager;
@property (readonly, nonatomic) TSPDataReferenceMap *dataReferenceMap;
@property (readonly, nonatomic) TSPDataDownloadManager *dataDownloadManager;
@property (readonly, nonatomic) TSPDownloadObserverManager *downloadObserverManager;
@property (readonly, nonatomic) TSPSupportManager *supportManager;
@property (readonly, nonatomic) TSPPackage *documentPackage;
@property (readonly, nonatomic) TSPPackage *supportPackage;
@property (readonly, nonatomic) TSPObjectContainer *documentObjectContainer;
@property (readonly, nonatomic) TSPObjectContainer *supportObjectContainer;
@property (readonly, nonatomic) TSPDocumentMetadata *documentMetadata;
@property (readonly, nonatomic) TSPSupportMetadata *supportMetadata;
@property (nonatomic) long long lastObjectIdentifier;
@property (readonly, nonatomic) unsigned long long saveToken;
@property (readonly, nonatomic) NSData *passwordVerifier;
@property (readonly, nonatomic) char areNewExternalReferencesToDataAllowed;
@property (readonly, nonatomic) NSUUID *documentUUID;
@property (readonly, nonatomic) NSUUID *versionUUID;
@property (retain, nonatomic) TSPObject *supportObject;
@property (readonly) long long aggregateReadabilityForDocumentResources;
@property (readonly) SFUCryptoKey *decryptionKey;
@property (readonly, nonatomic) char isReadCancelled;
@property (readonly, nonatomic) NSURL *documentURL;
@property (readonly, nonatomic) NSURL *supportURL;
@property (nonatomic) char nested;
@property (readonly, nonatomic) char hasCurrentFileFormatVersion;
@property (readonly, nonatomic) unsigned long long documentReadVersion;
@property (readonly, nonatomic) NSSet *featureIdentifiers;
@property (readonly, nonatomic) char losesDataOnWrite;
@property (readonly, nonatomic) NSSet *unsupportedFeatureIdentifiers;
@property (readonly) char closed;
@property (readonly, nonatomic) char isPasswordProtected;
@property (readonly, nonatomic) NSString *documentPasswordHint;
@property (readonly, nonatomic) char isInReadOnlyMode;
@property (readonly, nonatomic) TSPDocumentProperties *documentProperties;
@property (readonly, nonatomic) TSPDocumentProperties *unsafeDocumentProperties;
@property (readonly, nonatomic) TSPObject *documentObject;
@property (weak, nonatomic) id<TSPObjectContextDelegate> delegate;
@property (readonly, nonatomic) long long packageType;
@property long long preferredPackageType;
@property (readonly, nonatomic) unsigned long long documentSize;
@property (readonly, nonatomic) unsigned long long documentDataSize;
@property (readonly, nonatomic) unsigned long long documentObjectSize;
@property (readonly, nonatomic) unsigned long long reservedDocumentSize;
@property (readonly, nonatomic) unsigned long long reservedDocumentDataSize;
@property (retain) TSPDocumentRevision *documentRevision;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) char ignoreReferencesToUnknownObjects;
@property (readonly, nonatomic) TSPObjectContext *context;
@property (readonly, nonatomic) NSString *lastPasswordAttempted;
@property (readonly, nonatomic) NSString *passphraseHint;
@property (readonly, nonatomic) NSData *keychainGenericItem;
@property (readonly, nonatomic) char requiresNetworkValidation;

+ (void)waitForPendingEndSaveGroup:(id)a0;
+ (long long)documentTypeAtURL:(id)a0 hasNativeUTI:(char)a1;
+ (id)documentRevisionAtURL:(id)a0 passphrase:(id)a1 error:(id *)a2;
+ (long long)documentTypeAtURL:(id)a0;
+ (long long)documentTypeAtURL:(id)a0 hasNativeUTI:(char)a1 nestedDocumentFilename:(id)a2;
+ (id)downloadURLForDataWithDigest:(id)a0;
+ (char)dumpMessagesForDocumentURL:(id)a0 supportURL:(id)a1 decryptionKey:(id)a2 toURL:(id)a3;
+ (char)isNativeDirectoryFormatURL:(id)a0;
+ (char)isTangierEditingDirectoryFormatURL:(id)a0;
+ (char)isTangierEditingFormatURL:(id)a0;
+ (id)releaseQueue;
+ (void)removeDefaultSupportDirectory;
+ (id)supportBundleURLForDocumentUUID:(id)a0 delegate:(id)a1;
+ (char)validateCRCForDocumentAtURL:(id)a0 error:(id *)a1;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)close;
- (id)initWithDelegate:(id)a0;
- (id).cxx_construct;
- (id)temporaryDirectory;
- (char)setPassphrase:(id)a0;
- (id)objectForIdentifier:(long long)a0;
- (char)setDecryptionKey:(id)a0;
- (void)setDocumentObject:(id)a0;
- (void)setDocumentProperties:(id)a0;
- (void)addDataObserver:(id)a0;
- (void)removeDataObserver:(id)a0;
- (void)endIgnoringCachedObjectEviction;
- (void)addLoadObserver:(id)a0 action:(SEL)a1 forLazyReference:(id)a2;
- (void)addLoadObserver:(id)a0 action:(SEL)a1 forObjectIdentifier:(long long)a2 objectOrNil:(id)a3;
- (void)addLoadedObjectsAndEnqueueNotifications:(id)a0;
- (char)areExternalReferencesSupported;
- (char)areExternalReferencesToDataAllowedAtURL:(id)a0;
- (void)beginAssertOnModify;
- (void)beginIgnoringCachedObjectEviction;
- (void)beginWriteOperation;
- (void)didMoveSupportToURL:(id)a0;
- (void)didMoveToURL:(id)a0;
- (void)didReadDocumentObject:(id)a0;
- (void)endAssertOnModify;
- (void)endWriteOperation;
- (long long)incrementLastObjectIdentifier:(long long)a0;
- (long long)modifyObjectTokenForNewObject;
- (long long)newObjectIdentifier;
- (void)performReadOperation:(id /* block */)a0;
- (void)performReadOperationOnKnownObjects:(id /* block */)a0;
- (void)performReadUsingAccessor:(id /* block */)a0;
- (void)presentPersistenceError:(id)a0;
- (void)resumeLoadingModifiedFlushedComponents;
- (void)suspendLoadingModifiedFlushedComponentsAndWait;
- (long long)updateModifyObjectToken;
- (void)waitForSaveToFinishIfNeeded;
- (unsigned long long)fileFormatVersion;
- (id)objectWithUUID:(id)a0;
- (id)objectWithUUIDIfAvailable:(id)a0;
- (id)objectWithUUIDIfAvailableAndLoaded:(id)a0;
- (id)objectWithUUIDPath:(id)a0;
- (void)requestAutosave;
- (char)writeToURL:(id)a0 encryptionKey:(id)a1 error:(id *)a2;
- (id)baseUUIDForObjectUUID;
- (void)beginSaveToURL:(id)a0 updateType:(long long)a1 packageType:(long long)a2 documentUUID:(id)a3;
- (void)beginWriteWithOriginalURL:(id)a0;
- (id)currentPackageDataWriter;
- (id)dataWithContentsOfPackagePath:(id)a0;
- (void)didEncounterValidationError:(id)a0 forData:(id)a1 timing:(long long)a2;
- (id)documentLoadValidationPolicy;
- (id)documentSaveValidationPolicy;
- (void)endSaveWithSuccess:(char)a0;
- (char)endWriteWithSuccess:(char)a0 error:(id *)a1;
- (id)initForQuickLookWithURL:(id)a0 registry:(id)a1 delegate:(id)a2 passphrase:(id)a3 error:(id *)a4;
- (id)initWithURL:(id)a0 delegate:(id)a1 error:(id *)a2;
- (void)requestAutosaveForExpensiveCalculation;
- (void)resumeAutosaveWithReason:(id)a0;
- (void)resumeSaveAndAutosaveWithReason:(id)a0;
- (id)supportDirectoryURLReturningIsBundleURL:(char *)a0;
- (void)suspendAutosaveWithReason:(id)a0;
- (void)suspendSaveAndAutosaveWithReason:(id)a0;
- (void)canPerformUserActionUsingBlock:(id /* block */)a0;
- (id)dataWithDigest:(id)a0;
- (char)readLazyReference:(id)a0 object:(id *)a1 error:(id *)a2;
- (void)resumeAsynchronousModifications;
- (id)UUIDsFromObjects:(id)a0;
- (void)addDataInDocumentObserver:(id)a0;
- (void)addDataPackageObserver:(id)a0;
- (void)addObjectModifyDelegate:(id)a0;
- (id)allValidatedDataWithDigestMismatchCreatedPriorToVersion:(unsigned long long)a0;
- (id)anonymousIdentifierForDigest:(id)a0;
- (void)applyDeferredInitialDataProperties;
- (void)beginAddingLoadedObjects;
- (void)beginIgnoringModificationsForObject:(id)a0;
- (void)beginSaveToURL:(id)a0 updateType:(long long)a1 packageType:(long long)a2;
- (void)beginWriteWithOriginalURL:(id)a0 relativeURLForExternalData:(id)a1;
- (char)canModifyObject:(id)a0;
- (char)canPerformUserActions;
- (char)canSetObjectUUIDForObject:(id)a0;
- (void)checkForDataWarnings;
- (void)closeFromDealloc:(char)a0;
- (void)conditionallyBeginAccessingResourcesWithCompletionQueue:(id)a0 completionHandler:(id /* block */)a1;
- (char)containsDataConformingToUTI:(id)a0;
- (char)continueReadingDocumentObjectFromDatabasePackageURL:(id)a0 error:(id *)a1;
- (char)continueReadingDocumentObjectFromPackageURL:(id)a0 areExternalDataReferencesAllowed:(char)a1 finalizeHandlerQueue:(id)a2 readCoordinator:(id *)a3 objects:(id *)a4 error:(id *)a5;
- (char)copyIfAppropriateFromOriginalURL:(id)a0 toURL:(id)a1 cloneMode:(char)a2 originalPackage:(id)a3 packageType:(long long)a4 inheritAttributes:(char)a5;
- (void)createInternalMetadataIfNeeded;
- (void)dataInDocumentDidChangeForDataReferenceMap:(id)a0;
- (id)dataManagingForDataReferenceMap:(id)a0;
- (id)dataObserversConformingToProtocol:(id)a0;
- (id)dataWithDigest:(id)a0 length:(unsigned long long)a1 preferredFilename:(id)a2 canDownload:(char)a3 isMissingFromServer:(char)a4 documentRevision:(id)a5 downloadPriority:(long long)a6 uploadStatus:(long long)a7;
- (id)dataWithLegacyDataIdentifier:(long long)a0;
- (char)didFinishSuccessfullyReadingObjects:(id)a0 readCoordinator:(id)a1 finalizeHandlerQueue:(id)a2;
- (void)didReadSupportObject:(id)a0;
- (id)documentResourceDataForDigestString:(id)a0 locator:(id)a1 filename:(id)a2 canDownload:(char)a3;
- (char)endAddingLoadedObjects;
- (void)endIgnoringModificationsForObject:(id)a0;
- (void)ensureObject:(id)a0 isKnownWithIdentifier:(long long)a1;
- (void)enumerateAllDataUsingBlock:(id /* block */)a0;
- (void)enumerateDataInDocumentUsingBlock:(id /* block */)a0;
- (void)enumerateDocumentResourcesUsingBlock:(id /* block */)a0;
- (unsigned long long)estimatedProgressTotalUnitCountForURL:(id)a0 packageType:(long long)a1 originalDocumentURL:(id)a2;
- (void)handleFatalError:(id)a0 withReason:(id)a1;
- (id)incrementDocumentRevisionWithIdentifier:(id)a0;
- (id)initForSpotlightWithURL:(id)a0 delegate:(id)a1 registry:(id)a2 error:(id *)a3;
- (id)initForSpotlightWithURL:(id)a0 delegate:(id)a1 registry:(id)a2 passphrase:(id)a3 error:(id *)a4;
- (id)initWithDelegate:(id)a0 registry:(id)a1 resourceContext:(id)a2 mode:(unsigned int)a3 isLoadingDocument:(char)a4 shouldCreateInternalMetadataObject:(char)a5;
- (id)initWithPartialDocumentURL:(id)a0 delegate:(id)a1 passphrase:(id)a2 error:(id *)a3;
- (id)initWithURL:(id)a0 delegate:(id)a1 passphrase:(id)a2 error:(id *)a3;
- (id)initWithURL:(id)a0 delegate:(id)a1 registry:(id)a2 resourceContext:(id)a3 mode:(unsigned int)a4 passphrase:(id)a5 skipDocumentUpgrade:(char)a6 error:(id *)a7;
- (id)initWithURL:(id)a0 delegate:(id)a1 resourceContext:(id)a2 mode:(unsigned int)a3 passphrase:(id)a4 skipDocumentUpgrade:(char)a5 error:(id *)a6;
- (id)initWithURL:(id)a0 delegate:(id)a1 resourceContext:(id)a2 passphrase:(id)a3 skipDocumentUpgrade:(char)a4 error:(id *)a5;
- (char)isObjectInDocument:(id)a0;
- (char)isResourceAccessTypeFinished:(long long)a0;
- (id)lazyReferenceDelegateForDataReferenceMap:(id)a0;
- (void)logDocumentStatistics;
- (id)newObjectUUIDForObject:(id)a0 uuidNamespace:(unsigned char)a1 offset:(unsigned long long)a2 ignoringBaseUUIDForObjectUUID:(char)a3 requireDeterministicUUID:(char)a4;
- (id)objectInDocumentContainingForDataReferenceMap:(id)a0;
- (id)objectUUIDMap;
- (void)objectUUIDMap:(id)a0 didUpdateWithObjectIdentifierAddedToDocument:(long long)a1 objectIdentifierRemovedFromDocument:(long long)a2;
- (id)objectUUIDMap:(id)a0 needsObjectForIdentifier:(long long)a1 componentIdentifier:(long long)a2 onlyIfLoaded:(char)a3;
- (id)objectWithUUID:(id)a0 onlyIfLoaded:(char)a1 validateNewObjects:(char)a2 identifier:(long long *)a3;
- (id)objectsFromUUIDs:(id)a0;
- (void)performAsynchronousWriteOperationOnDataAttributes:(id /* block */)a0;
- (void)performAsynchronousWriteOperationOnDocumentState:(id /* block */)a0;
- (void)performBlockIgnoringDataLifecycleErrors:(id /* block */)a0;
- (void)performReadOperationOnDataAttributes:(id /* block */)a0;
- (void)performReadOperationOnDocumentState:(id /* block */)a0;
- (void)performReadUsingAccessorImpl:(id /* block */)a0;
- (id)performResourceAccessUsingQueue:(id)a0 block:(id /* block */)a1;
- (void)prepareForDocumentDumpWithDocumentPackage:(id)a0 supportPackage:(id)a1 documentRevision:(id)a2 passphrase:(id)a3;
- (void)prepareForDocumentReplacement;
- (void)prepareForDocumentReplacementWithSuccess:(char)a0 forSafeSave:(char)a1;
- (id)prepareSaveProgress;
- (void)prepareToReadSupportObjectExternalDataReferencesAllowed:(char)a0 finalizeHandlerQueue:(id)a1 objects:(id *)a2 accessor:(id /* block */)a3;
- (char)readComponent:(id)a0 isWeakReference:(char)a1 documentPackage:(id)a2 supportPackage:(id)a3 rootObject:(id *)a4 allObjects:(id *)a5 error:(id *)a6;
- (char)readComponent:(id)a0 isWeakReference:(char)a1 rootObject:(id *)a2 allObjects:(id *)a3 error:(id *)a4;
- (char)readDocumentObjectFromDatabasePackageURL:(id)a0 error:(id *)a1;
- (char)readDocumentObjectFromPackageURL:(id)a0 error:(id *)a1;
- (char)readObjectForIdentifier:(long long)a0 isWeakReference:(char)a1 ignoreUnknownContentWhileReading:(char)a2 rootObjectComponent:(id)a3 object:(id *)a4 error:(id *)a5;
- (id)readObjectIfNeededForIdentifier:(long long)a0 isWeakReference:(char)a1 componentIdentifier:(long long)a2;
- (char)readWithReadCoordinator:(id)a0 finalizeHandlerQueue:(id)a1 rootObject:(id *)a2 error:(id *)a3 readCompletion:(id /* block */)a4;
- (void)registerAsynchronousObjectModifier:(id)a0;
- (void)removeObjectModifyDelegate:(id)a0;
- (void)replaceDocumentObject:(id)a0;
- (void)resetDocumentRevision;
- (char)saveToURL:(id)a0 packageType:(long long)a1 encryptionKey:(id)a2 originalURL:(id)a3 error:(id *)a4;
- (void)setProperties:(struct DataProperties { int x0; id x1; unsigned long long x2; id x3; unsigned int x4; })a0 forData:(id)a1;
- (void)setSupportObjectImpl:(id)a0;
- (char)shouldLoadAllComponentsForDocumentURL:(id)a0;
- (char)shouldUseCloneModeToWriteToURL:(id)a0 originalURL:(id)a1;
- (unsigned long long)sizeOfComponentsWithLocator:(id)a0;
- (void)suspendAsynchronousModificationsForObjectTargetType:(unsigned long long)a0;
- (void)updateAdditionalResourceRequests;
- (char)updateDocumentUUIDPreserveOriginalDocumentSupport:(char)a0 preserveShareUUID:(char)a1 preserveStableDocumentUUID:(char)a2 error:(id *)a3;
- (void)willModifyObject:(id)a0 options:(unsigned long long)a1;
- (char)writeToURL:(id)a0 originalPackage:(id)a1 supportURL:(id)a2 originalSupportPackage:(id)a3 encryptionKey:(id)a4 error:(id *)a5;

@end

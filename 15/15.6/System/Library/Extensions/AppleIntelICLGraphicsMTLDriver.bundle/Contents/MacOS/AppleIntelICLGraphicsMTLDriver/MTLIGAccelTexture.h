@class NSString;
@protocol MTLDevice, MTLHeap, MTLTexture, MTLBuffer, MTLResource;

@interface MTLIGAccelTexture : MTLIOAccelTexture <MTLTextureImplementation> {
    struct MTLIGAccelTextureInfo { struct IOAccelClientSharedROPrivate *clientSharedROPrivate; struct SGfxRenderSurfaceState { union { struct { unsigned char Reserved532 : 6; unsigned char MediaBoundaryPixelMode : 2; unsigned char RenderCacheReadWriteMode : 1; unsigned char SamplerL2BypassModeDisable : 1; unsigned char VerticalLineStrideOffset : 1; unsigned char VerticalLineStride : 1; unsigned char TileMode : 2; unsigned char SurfaceHorizontalAlignment : 2; unsigned char SurfaceVerticalAlignment : 2; unsigned short SurfaceFormat : 9; unsigned char Astc_Enable : 1; unsigned char SurfaceArray : 1; unsigned char SurfaceType : 3; unsigned short SurfaceQpitch : 15; unsigned char Reserved_47 : 3; unsigned char CornerTexelMode : 1; unsigned char BaseMipLevel : 5; unsigned char MemoryObjectControlState_Reserved_56 : 1; unsigned char MemoryObjectControlState_IndexToMocsTables : 6; unsigned char EnableUnormPathInColorPipe : 1; unsigned short Width : 14; unsigned char Reserved_78 : 2; unsigned short Height : 14; unsigned char Reserved_94 : 2; unsigned int SurfacePitch : 18; unsigned char Reserved_114 : 1; unsigned char StandardTilingModeExtensions : 1; unsigned char TileAddressMappingMode : 1; unsigned short Depth : 11; unsigned int Reserved561; unsigned char MipCount : 4; unsigned char SurfaceMinLod : 4; unsigned char MipTailStartLod : 4; unsigned char Reserved_172 : 2; unsigned char CoherencyType : 1; unsigned char Reserved_175 : 3; unsigned char TiledResourceMode : 2; unsigned char EwaDisableForCube : 1; unsigned char YOffset : 3; unsigned char Reserved_184 : 1; unsigned char XOffset : 7; unsigned short Reserved573 : 15; unsigned char YuvInterpolationEnable : 1; unsigned short Reserved575 : 16; unsigned short ResourceMinLod : 12; unsigned char Reserved_236 : 4; unsigned char ShaderChannelSelectAlpha : 3; unsigned char ShaderChannelSelectBlue : 3; unsigned char ShaderChannelSelectGreen : 3; unsigned char ShaderChannelSelectRed : 3; unsigned char Reserved_252 : 2; unsigned char MemoryCompressionEnable : 1; unsigned char MemoryCompressionMode : 1; unsigned long long SurfaceBaseAddress; unsigned char QuiltWidth : 5; unsigned char QuiltHeight : 5; unsigned char ClearValueAddressEnable : 1; unsigned long Reserved_331 : 53; unsigned int Reserved590; unsigned int Reserved591; unsigned int Reserved592; unsigned int Reserved593; } ; struct { unsigned char CubeFaceEnablePositiveZ : 1; unsigned char CubeFaceEnableNegativeZ : 1; unsigned char CubeFaceEnablePositiveY : 1; unsigned char CubeFaceEnableNegativeY : 1; unsigned char CubeFaceEnablePositiveX : 1; unsigned char CubeFaceEnableNegativeX : 1; unsigned int Reserved602 : 26; unsigned int Reserved603; unsigned int Reserved604; unsigned int Reserved605; unsigned int Reserved606; unsigned int Reserved607; unsigned int Reserved608; unsigned int Reserved609; unsigned long long Reserved610; unsigned long long Reserved611; unsigned int Reserved612; unsigned int Reserved613; unsigned int Reserved614; unsigned int Reserved615; } ; struct { unsigned int Reserved618; unsigned int Reserved619; unsigned int Reserved620; unsigned int Reserved621; unsigned int Reserved_128; unsigned int Reserved623; unsigned int Reserved624; unsigned int Reserved625; unsigned long long Reserved626; unsigned long long Reserved627; unsigned int Reserved628; unsigned int Reserved629; unsigned int Reserved630; unsigned int Reserved631; } ; struct { unsigned int Reserved634; unsigned int Reserved635; unsigned int Reserved636; unsigned int Reserved637; unsigned char MultisamplePositionPaletteIndex : 3; unsigned char NumberOfMultisamples : 3; unsigned char MultisampledSurfaceStorageFormat : 1; unsigned short RenderTargetViewExtent : 11; unsigned short MinimumArrayElement : 11; unsigned char RenderTargetAndSampleUnormRotation : 2; unsigned char Reserved_159 : 1; unsigned int Reserved645; unsigned int Reserved646; unsigned int Reserved647; unsigned long long Reserved648; unsigned long long Reserved649; unsigned int Reserved650; unsigned int Reserved651; unsigned int Reserved652; unsigned int Reserved653; } ; struct { unsigned int Reserved656; unsigned int Reserved657; unsigned int Reserved658; unsigned int Reserved659; unsigned int Reserved660; unsigned int Reserved661; unsigned char AuxiliarySurfaceMode : 3; unsigned short AuxiliarySurfacePitch : 9; unsigned char Reserved_204 : 4; unsigned short AuxiliarySurfaceQpitch : 15; unsigned char Reserved_223 : 1; unsigned int Reserved667; unsigned long long Reserved668; unsigned long long Reserved669; unsigned int Reserved670; unsigned int Reserved671; unsigned int Reserved672; unsigned int Reserved673; } ; struct { unsigned int Reserved676; unsigned int Reserved677; unsigned int Reserved678; unsigned int Reserved679; unsigned int Reserved680; unsigned int Reserved681; unsigned short YOffsetForUOrUvPlane : 14; unsigned char Reserved_206 : 2; unsigned short XOffsetForUOrUvPlane : 14; unsigned char HalfPitchForChroma : 1; unsigned char SeparateUvPlaneEnable : 1; unsigned int Reserved687; unsigned long long Reserved688; unsigned int Reserved689 : 32; unsigned short YOffsetForVPlane : 14; unsigned char Reserved_366 : 2; unsigned short XOffsetForVPlane : 14; unsigned char Reserved_382 : 2; unsigned int Reserved694; unsigned int Reserved695; unsigned int Reserved696; unsigned int Reserved697; } ; struct { unsigned int Reserved700; unsigned int Reserved701; unsigned int Reserved702; unsigned int Reserved703; unsigned int Reserved704; unsigned int Reserved705; unsigned int Reserved706; unsigned int Reserved707; unsigned long long Reserved708; unsigned short Reserved709 : 12; unsigned long AuxiliarySurfaceBaseAddress : 52; unsigned int Reserved711; unsigned int Reserved712; unsigned int Reserved713; unsigned int Reserved714; } ; struct { unsigned int Reserved717; unsigned int Reserved718; unsigned int Reserved719; unsigned int Reserved720; unsigned int Reserved721; unsigned int Reserved722; unsigned int Reserved723; unsigned int Reserved724; unsigned long long Reserved725; unsigned int Reserved726 : 21; unsigned short AuxiliaryTableIndexForMediaCompressedSurface : 11; unsigned int Reserved728 : 32; unsigned int Reserved729; unsigned int Reserved730; unsigned int Reserved731; unsigned int Reserved732; } ; struct { unsigned int Reserved735; unsigned int Reserved736; unsigned int Reserved737; unsigned int Reserved738; unsigned int Reserved739; unsigned int Reserved740; unsigned int Reserved741; unsigned int Reserved742; unsigned long long Reserved743; unsigned long long Reserved744; unsigned char Reserved745 : 5; unsigned char ClearColorConversionEnable : 1; unsigned int ClearColorAddress : 26; unsigned short ClearColorAddressHigh : 16; unsigned short Reserved749 : 16; unsigned int Reserved750; unsigned int Reserved751; } ; struct { unsigned int Reserved754; unsigned int Reserved755; unsigned int Reserved756; unsigned int Reserved757; unsigned int Reserved758; unsigned int Reserved759; unsigned int Reserved760; unsigned int Reserved761; unsigned long long Reserved762; unsigned long long Reserved763; unsigned int Reserved764; unsigned int Reserved765; unsigned int Reserved766; unsigned int Reserved767; } ; struct { unsigned int Reserved770; unsigned int Reserved771; unsigned int Reserved772; unsigned int Reserved773; unsigned int Reserved774; unsigned int Reserved775; unsigned int Reserved776; unsigned int Reserved777; unsigned long long Reserved778; unsigned long long Reserved779; unsigned int Reserved780; unsigned int Reserved781; unsigned int Reserved782; unsigned int Reserved783; } ; struct { unsigned int Reserved786; unsigned int Reserved787; unsigned int Reserved788; unsigned int Reserved789; unsigned int Reserved790; unsigned int Reserved791; unsigned int Reserved792; unsigned int Reserved793; unsigned long long Reserved794; unsigned long long Reserved795; unsigned int RedClearColor; unsigned int Reserved797; unsigned int Reserved798; unsigned int Reserved799; } ; struct { unsigned int Reserved802; unsigned int Reserved803; unsigned int Reserved804; unsigned int Reserved805; unsigned int Reserved806; unsigned int Reserved807; unsigned int Reserved808; unsigned int Reserved809; unsigned long long Reserved810; unsigned long long Reserved811; unsigned char Reserved812 : 6; unsigned int ClearDepthAddressLow : 26; unsigned short ClearDepthAddressHigh : 16; unsigned short Reserved815 : 16; unsigned int Reserved816; unsigned int Reserved817; } ; struct { unsigned int Reserved820; unsigned int Reserved821; unsigned int Reserved822; unsigned int Reserved823; unsigned int Reserved824; unsigned int Reserved825; unsigned int Reserved826; unsigned int Reserved827; unsigned long long Reserved828; unsigned long long Reserved829; unsigned int Reserved830; unsigned int Reserved831; unsigned int Reserved832; unsigned int Reserved_480; } ; struct { unsigned int Reserved836; unsigned int Reserved837; unsigned int Reserved838; unsigned int Reserved839; unsigned int Reserved840; unsigned int Reserved841; unsigned int Reserved842; unsigned int Reserved843; unsigned long long Reserved844; unsigned long long Reserved845; unsigned int Reserved846; unsigned int GreenClearColor; unsigned int BlueClearColor; unsigned int AlphaClearColor; } ; struct { unsigned int Reserved852; unsigned int Reserved853; unsigned int Reserved854; unsigned int Reserved855; unsigned int Reserved856; unsigned int Reserved857; unsigned int Reserved858; unsigned int Reserved859; unsigned long long Reserved860; unsigned long long Reserved861; unsigned int Reserved862; unsigned int Reserved_416; unsigned int Reserved864; unsigned int Reserved865; } ; struct { unsigned int Reserved868; unsigned int Reserved869; unsigned int Reserved870; unsigned int Reserved871; unsigned int Reserved872; unsigned int Reserved873; unsigned int Reserved874; unsigned int Reserved875; unsigned long long Reserved876; unsigned long long Reserved877; unsigned int Reserved878; unsigned int Reserved879; unsigned int Reserved880; unsigned int Reserved881; } ; struct { unsigned int Overridden884[12]; float HierarchicalDepthClearValue; unsigned int Reserved886 : 32; unsigned int Reserved887 : 32; unsigned int Reserved888 : 32; } ; } ; } hwSurfaceState; struct SGfxRenderSurfaceState { union { struct { unsigned char Reserved532 : 6; unsigned char MediaBoundaryPixelMode : 2; unsigned char RenderCacheReadWriteMode : 1; unsigned char SamplerL2BypassModeDisable : 1; unsigned char VerticalLineStrideOffset : 1; unsigned char VerticalLineStride : 1; unsigned char TileMode : 2; unsigned char SurfaceHorizontalAlignment : 2; unsigned char SurfaceVerticalAlignment : 2; unsigned short SurfaceFormat : 9; unsigned char Astc_Enable : 1; unsigned char SurfaceArray : 1; unsigned char SurfaceType : 3; unsigned short SurfaceQpitch : 15; unsigned char Reserved_47 : 3; unsigned char CornerTexelMode : 1; unsigned char BaseMipLevel : 5; unsigned char MemoryObjectControlState_Reserved_56 : 1; unsigned char MemoryObjectControlState_IndexToMocsTables : 6; unsigned char EnableUnormPathInColorPipe : 1; unsigned short Width : 14; unsigned char Reserved_78 : 2; unsigned short Height : 14; unsigned char Reserved_94 : 2; unsigned int SurfacePitch : 18; unsigned char Reserved_114 : 1; unsigned char StandardTilingModeExtensions : 1; unsigned char TileAddressMappingMode : 1; unsigned short Depth : 11; unsigned int Reserved561; unsigned char MipCount : 4; unsigned char SurfaceMinLod : 4; unsigned char MipTailStartLod : 4; unsigned char Reserved_172 : 2; unsigned char CoherencyType : 1; unsigned char Reserved_175 : 3; unsigned char TiledResourceMode : 2; unsigned char EwaDisableForCube : 1; unsigned char YOffset : 3; unsigned char Reserved_184 : 1; unsigned char XOffset : 7; unsigned short Reserved573 : 15; unsigned char YuvInterpolationEnable : 1; unsigned short Reserved575 : 16; unsigned short ResourceMinLod : 12; unsigned char Reserved_236 : 4; unsigned char ShaderChannelSelectAlpha : 3; unsigned char ShaderChannelSelectBlue : 3; unsigned char ShaderChannelSelectGreen : 3; unsigned char ShaderChannelSelectRed : 3; unsigned char Reserved_252 : 2; unsigned char MemoryCompressionEnable : 1; unsigned char MemoryCompressionMode : 1; unsigned long long SurfaceBaseAddress; unsigned char QuiltWidth : 5; unsigned char QuiltHeight : 5; unsigned char ClearValueAddressEnable : 1; unsigned long Reserved_331 : 53; unsigned int Reserved590; unsigned int Reserved591; unsigned int Reserved592; unsigned int Reserved593; } ; struct { unsigned char CubeFaceEnablePositiveZ : 1; unsigned char CubeFaceEnableNegativeZ : 1; unsigned char CubeFaceEnablePositiveY : 1; unsigned char CubeFaceEnableNegativeY : 1; unsigned char CubeFaceEnablePositiveX : 1; unsigned char CubeFaceEnableNegativeX : 1; unsigned int Reserved602 : 26; unsigned int Reserved603; unsigned int Reserved604; unsigned int Reserved605; unsigned int Reserved606; unsigned int Reserved607; unsigned int Reserved608; unsigned int Reserved609; unsigned long long Reserved610; unsigned long long Reserved611; unsigned int Reserved612; unsigned int Reserved613; unsigned int Reserved614; unsigned int Reserved615; } ; struct { unsigned int Reserved618; unsigned int Reserved619; unsigned int Reserved620; unsigned int Reserved621; unsigned int Reserved_128; unsigned int Reserved623; unsigned int Reserved624; unsigned int Reserved625; unsigned long long Reserved626; unsigned long long Reserved627; unsigned int Reserved628; unsigned int Reserved629; unsigned int Reserved630; unsigned int Reserved631; } ; struct { unsigned int Reserved634; unsigned int Reserved635; unsigned int Reserved636; unsigned int Reserved637; unsigned char MultisamplePositionPaletteIndex : 3; unsigned char NumberOfMultisamples : 3; unsigned char MultisampledSurfaceStorageFormat : 1; unsigned short RenderTargetViewExtent : 11; unsigned short MinimumArrayElement : 11; unsigned char RenderTargetAndSampleUnormRotation : 2; unsigned char Reserved_159 : 1; unsigned int Reserved645; unsigned int Reserved646; unsigned int Reserved647; unsigned long long Reserved648; unsigned long long Reserved649; unsigned int Reserved650; unsigned int Reserved651; unsigned int Reserved652; unsigned int Reserved653; } ; struct { unsigned int Reserved656; unsigned int Reserved657; unsigned int Reserved658; unsigned int Reserved659; unsigned int Reserved660; unsigned int Reserved661; unsigned char AuxiliarySurfaceMode : 3; unsigned short AuxiliarySurfacePitch : 9; unsigned char Reserved_204 : 4; unsigned short AuxiliarySurfaceQpitch : 15; unsigned char Reserved_223 : 1; unsigned int Reserved667; unsigned long long Reserved668; unsigned long long Reserved669; unsigned int Reserved670; unsigned int Reserved671; unsigned int Reserved672; unsigned int Reserved673; } ; struct { unsigned int Reserved676; unsigned int Reserved677; unsigned int Reserved678; unsigned int Reserved679; unsigned int Reserved680; unsigned int Reserved681; unsigned short YOffsetForUOrUvPlane : 14; unsigned char Reserved_206 : 2; unsigned short XOffsetForUOrUvPlane : 14; unsigned char HalfPitchForChroma : 1; unsigned char SeparateUvPlaneEnable : 1; unsigned int Reserved687; unsigned long long Reserved688; unsigned int Reserved689 : 32; unsigned short YOffsetForVPlane : 14; unsigned char Reserved_366 : 2; unsigned short XOffsetForVPlane : 14; unsigned char Reserved_382 : 2; unsigned int Reserved694; unsigned int Reserved695; unsigned int Reserved696; unsigned int Reserved697; } ; struct { unsigned int Reserved700; unsigned int Reserved701; unsigned int Reserved702; unsigned int Reserved703; unsigned int Reserved704; unsigned int Reserved705; unsigned int Reserved706; unsigned int Reserved707; unsigned long long Reserved708; unsigned short Reserved709 : 12; unsigned long AuxiliarySurfaceBaseAddress : 52; unsigned int Reserved711; unsigned int Reserved712; unsigned int Reserved713; unsigned int Reserved714; } ; struct { unsigned int Reserved717; unsigned int Reserved718; unsigned int Reserved719; unsigned int Reserved720; unsigned int Reserved721; unsigned int Reserved722; unsigned int Reserved723; unsigned int Reserved724; unsigned long long Reserved725; unsigned int Reserved726 : 21; unsigned short AuxiliaryTableIndexForMediaCompressedSurface : 11; unsigned int Reserved728 : 32; unsigned int Reserved729; unsigned int Reserved730; unsigned int Reserved731; unsigned int Reserved732; } ; struct { unsigned int Reserved735; unsigned int Reserved736; unsigned int Reserved737; unsigned int Reserved738; unsigned int Reserved739; unsigned int Reserved740; unsigned int Reserved741; unsigned int Reserved742; unsigned long long Reserved743; unsigned long long Reserved744; unsigned char Reserved745 : 5; unsigned char ClearColorConversionEnable : 1; unsigned int ClearColorAddress : 26; unsigned short ClearColorAddressHigh : 16; unsigned short Reserved749 : 16; unsigned int Reserved750; unsigned int Reserved751; } ; struct { unsigned int Reserved754; unsigned int Reserved755; unsigned int Reserved756; unsigned int Reserved757; unsigned int Reserved758; unsigned int Reserved759; unsigned int Reserved760; unsigned int Reserved761; unsigned long long Reserved762; unsigned long long Reserved763; unsigned int Reserved764; unsigned int Reserved765; unsigned int Reserved766; unsigned int Reserved767; } ; struct { unsigned int Reserved770; unsigned int Reserved771; unsigned int Reserved772; unsigned int Reserved773; unsigned int Reserved774; unsigned int Reserved775; unsigned int Reserved776; unsigned int Reserved777; unsigned long long Reserved778; unsigned long long Reserved779; unsigned int Reserved780; unsigned int Reserved781; unsigned int Reserved782; unsigned int Reserved783; } ; struct { unsigned int Reserved786; unsigned int Reserved787; unsigned int Reserved788; unsigned int Reserved789; unsigned int Reserved790; unsigned int Reserved791; unsigned int Reserved792; unsigned int Reserved793; unsigned long long Reserved794; unsigned long long Reserved795; unsigned int RedClearColor; unsigned int Reserved797; unsigned int Reserved798; unsigned int Reserved799; } ; struct { unsigned int Reserved802; unsigned int Reserved803; unsigned int Reserved804; unsigned int Reserved805; unsigned int Reserved806; unsigned int Reserved807; unsigned int Reserved808; unsigned int Reserved809; unsigned long long Reserved810; unsigned long long Reserved811; unsigned char Reserved812 : 6; unsigned int ClearDepthAddressLow : 26; unsigned short ClearDepthAddressHigh : 16; unsigned short Reserved815 : 16; unsigned int Reserved816; unsigned int Reserved817; } ; struct { unsigned int Reserved820; unsigned int Reserved821; unsigned int Reserved822; unsigned int Reserved823; unsigned int Reserved824; unsigned int Reserved825; unsigned int Reserved826; unsigned int Reserved827; unsigned long long Reserved828; unsigned long long Reserved829; unsigned int Reserved830; unsigned int Reserved831; unsigned int Reserved832; unsigned int Reserved_480; } ; struct { unsigned int Reserved836; unsigned int Reserved837; unsigned int Reserved838; unsigned int Reserved839; unsigned int Reserved840; unsigned int Reserved841; unsigned int Reserved842; unsigned int Reserved843; unsigned long long Reserved844; unsigned long long Reserved845; unsigned int Reserved846; unsigned int GreenClearColor; unsigned int BlueClearColor; unsigned int AlphaClearColor; } ; struct { unsigned int Reserved852; unsigned int Reserved853; unsigned int Reserved854; unsigned int Reserved855; unsigned int Reserved856; unsigned int Reserved857; unsigned int Reserved858; unsigned int Reserved859; unsigned long long Reserved860; unsigned long long Reserved861; unsigned int Reserved862; unsigned int Reserved_416; unsigned int Reserved864; unsigned int Reserved865; } ; struct { unsigned int Reserved868; unsigned int Reserved869; unsigned int Reserved870; unsigned int Reserved871; unsigned int Reserved872; unsigned int Reserved873; unsigned int Reserved874; unsigned int Reserved875; unsigned long long Reserved876; unsigned long long Reserved877; unsigned int Reserved878; unsigned int Reserved879; unsigned int Reserved880; unsigned int Reserved881; } ; struct { unsigned int Overridden884[12]; float HierarchicalDepthClearValue; unsigned int Reserved886 : 32; unsigned int Reserved887 : 32; unsigned int Reserved888 : 32; } ; } ; } hwSurfaceStateTarget; struct SGfx3dStateDepthBuffer { unsigned char DWordLength : 8; unsigned char  : 8; unsigned char _3DCommandSubOpcode : 8; unsigned char _3DCommandOpcode : 3; unsigned char CommandSubType : 2; unsigned char CommandType : 3; unsigned int SurfacePitch : 18; unsigned char SurfaceFormat : 3; unsigned char  : 1; unsigned char HierarchicalDepthBufferEnable : 1; unsigned char  : 4; unsigned char StencilWriteEnable : 1; unsigned char DepthWriteEnable : 1; unsigned char SurfaceType : 3; unsigned long SurfaceBaseAddress : 48; unsigned short  : 16; unsigned char Lod : 4; unsigned short Width : 14; unsigned short Height : 14; unsigned char  : 1; unsigned char DepthBufferObjectControlState_IndexToMocsTables : 6; unsigned char  : 3; unsigned short MinimumArrayElement : 11; unsigned short Depth : 11; unsigned int  : 26; unsigned char MipTailStartLOD : 4; unsigned char TiledResourceMode : 2; unsigned short SurfaceQpitch : 15; unsigned char  : 6; unsigned short RenderTargetViewExtent : 11; } hwDepthBufferState; struct sClearRequirements { union { struct { unsigned char valid : 1; unsigned char isTiled : 1; unsigned char isMSAA : 1; unsigned char isMCS : 1; unsigned char isColorByteAlign8 : 1; unsigned char isColorByteAlign16 : 1; unsigned char isDepthAligned : 1; unsigned char isSingleLayer : 1; unsigned char isWideClearFormat : 1; unsigned char isWideClearFormatSRGB : 1; } ; unsigned short value; } ; } clearRequirements[15]; int HWPixelFormat; struct MTLPixelFormatInfo { char *name; unsigned int flags; unsigned long long castClass; union { struct MTLNormalPixelFormatInfo { unsigned long long pixelBytes; unsigned char componentCount; unsigned char alignment; unsigned long long pixelBytesRender; unsigned long long pixelBytesRenderMSAA; } normal; struct MTLCompressedPixelFormatInfo { unsigned long long blockBytes; unsigned long long blockWidth; unsigned long long blockHeight; unsigned long long blockDepth; } compressed; } type; } formatInfo; unsigned int vramRowBytes; unsigned int sysRowBytes; unsigned int surfaceHeight; unsigned int bytesPerTexel; unsigned int blitWidth; unsigned int blitHeight; struct IntelResourceInfo { unsigned int pitch; unsigned int qpitch; unsigned int pixel_fmt; unsigned short tileMode; unsigned short samples; unsigned int hiz_offset; unsigned int hiz_pitch; unsigned int hiz_qpitch; unsigned int sd_offset; unsigned int sd_pitch; unsigned int ss_offset; unsigned int ss_width; unsigned int ss_height; unsigned int ss_pitch; unsigned int ss_qpitch; unsigned int ccs_offset; unsigned int ccs_pitch; unsigned int ccs_qpitch; unsigned int ccs_format; unsigned int clear_color_offset; unsigned char mapPadPageCount; unsigned char deferFlipCount; union { struct { unsigned char isArray : 1; unsigned char is2d : 1; unsigned char is3d : 1; unsigned char isCubemap : 1; unsigned char isDepthView : 1; unsigned char isStencilView : 1; unsigned char isGenMipMap : 1; unsigned char isGenMipMapFallback : 1; unsigned char fixedGPUAddress : 1; unsigned char mapForKernelCPU : 1; unsigned char isDisplayableIOSurface : 1; } ; unsigned short flags; } ; } resInfo; unsigned long long resourceOffset; unsigned long long planeOffset; MTLIGAccelTexture *pRootTexture; unsigned short relativeLevel; unsigned short relativeLevelRange; unsigned short relativeSlice; unsigned short relativeSliceRange; unsigned long long cacheId; unsigned long long IGResourceId; unsigned long long bindlessId; unsigned int bindlessOffset; unsigned int hizBindCount; union { struct { unsigned char canUseSWSwizzle : 1; unsigned char canSampleHiZ : 1; unsigned char forceDisableHiZ : 1; unsigned char hasEDRAM : 1; unsigned char isSubresource : 1; unsigned char isTextureWriteable : 1; unsigned char hasTexViewFmtMismatch : 1; } ; unsigned int flags; } ; struct { struct { unsigned int gtt_offset; unsigned int vram_offset; unsigned int gtt_rowbytes; unsigned int vram_rowbytes; unsigned short w; unsigned short h; unsigned short w_uncompressed; unsigned short h_uncompressed; unsigned short depth; unsigned short bpp; unsigned short pixel_fmt; unsigned short tile_mode; union { struct *offsetData; unsigned long long offsetDataAddr; } ; } maps[6][15]; } textureHeader; } m_Info;
    unsigned long long _uniqueIdentifier;
}

@property (readonly) unsigned long long uniqueIdentifier;
@property (readonly) struct __IOSurface { } *iosurface;
@property (readonly) unsigned long long iosurfacePlane;
@property (readonly) unsigned long long rotation;
@property (readonly) char isCompressed;
@property (readonly) long long compressionFeedback;
@property (readonly, nonatomic) unsigned long long resourceIndex;
@property (readonly, nonatomic) unsigned long long gpuAddress;
@property (readonly) unsigned int swizzleKey;
@property (readonly) unsigned long long numFaces;
@property (readonly) char isDrawable;
@property (readonly) unsigned long long sparseSurfaceDefaultValue;
@property (readonly, nonatomic) unsigned long long compressionFootprint;
@property (readonly, nonatomic) unsigned long long colorSpaceConversionMatrix;
@property (readonly) unsigned long long gpuHandle;
@property (readonly) id<MTLResource> rootResource;
@property (readonly) id<MTLTexture> parentTexture;
@property (readonly) unsigned long long parentRelativeLevel;
@property (readonly) unsigned long long parentRelativeSlice;
@property (readonly) id<MTLBuffer> buffer;
@property (readonly) unsigned long long bufferOffset;
@property (readonly) unsigned long long bufferBytesPerRow;
@property (readonly) unsigned long long textureType;
@property (readonly) unsigned long long pixelFormat;
@property (readonly) unsigned long long width;
@property (readonly) unsigned long long height;
@property (readonly) unsigned long long depth;
@property (readonly) unsigned long long mipmapLevelCount;
@property (readonly) unsigned long long sampleCount;
@property (readonly) unsigned long long arrayLength;
@property (readonly) unsigned long long usage;
@property (readonly, getter=isShareable) char shareable;
@property (readonly, getter=isFramebufferOnly) char framebufferOnly;
@property (readonly) unsigned long long firstMipmapInTail;
@property (readonly) unsigned long long tailSizeInBytes;
@property (readonly) char isSparse;
@property (readonly) char allowGPUOptimizedContents;
@property (readonly) long long compressionType;
@property (readonly) struct MTLResourceID { unsigned long long x0; } gpuResourceID;
@property (readonly) id<MTLTexture> remoteStorageTexture;
@property (readonly, nonatomic) struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; } swizzle;
@property (copy) NSString *label;
@property (readonly) id<MTLDevice> device;
@property (readonly) unsigned long long cpuCacheMode;
@property (readonly) unsigned long long storageMode;
@property (readonly) unsigned long long hazardTrackingMode;
@property (readonly) unsigned long long resourceOptions;
@property (readonly) id<MTLHeap> heap;
@property (readonly) unsigned long long heapOffset;
@property (readonly) unsigned long long allocatedSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property int responsibleProcess;
@property (readonly) unsigned long long allocationID;
@property (readonly) unsigned long long protectionOptions;
@property (readonly) unsigned long long unfilteredResourceOptions;

- (void)dealloc;
- (id).cxx_construct;
- (void)getBytes:(void *)a0 bytesPerRow:(unsigned long long)a1 bytesPerImage:(unsigned long long)a2 fromRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a3 mipmapLevel:(unsigned long long)a4 slice:(unsigned long long)a5;
- (void)getBytes:(void *)a0 bytesPerRow:(unsigned long long)a1 fromRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a2 mipmapLevel:(unsigned long long)a3;
- (id)newTextureViewWithPixelFormat:(unsigned long long)a0;
- (id)newTextureViewWithPixelFormat:(unsigned long long)a0 resourceIndex:(unsigned long long)a1;
- (id)newTextureViewWithPixelFormat:(unsigned long long)a0 textureType:(unsigned long long)a1 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (id)newTextureViewWithPixelFormat:(unsigned long long)a0 textureType:(unsigned long long)a1 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 resourceIndex:(unsigned long long)a4;
- (id)newTextureViewWithPixelFormat:(unsigned long long)a0 textureType:(unsigned long long)a1 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 swizzle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; })a4;
- (id)newTextureViewWithPixelFormat:(unsigned long long)a0 textureType:(unsigned long long)a1 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 swizzle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; })a4 resourceIndex:(unsigned long long)a5;
- (void)replaceRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a0 mipmapLevel:(unsigned long long)a1 slice:(unsigned long long)a2 withBytes:(const void *)a3 bytesPerRow:(unsigned long long)a4 bytesPerImage:(unsigned long long)a5;
- (void)replaceRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a0 mipmapLevel:(unsigned long long)a1 withBytes:(const void *)a2 bytesPerRow:(unsigned long long)a3;
- (id)initWithDevice:(id)a0 descriptor:(id)a1 iosurface:(struct __IOSurface { } *)a2 plane:(unsigned int)a3 field:(unsigned int)a4 args:(struct IOAccelNewResourceArgs { struct IOAccelNewResourceData { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned long long x6; unsigned long long x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned int x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; union { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned long long x4[2]; } x2; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x3; } x16; } x0; } *)a5 argsSize:(unsigned int)a6;
- (id)initWithDevice:(id)a0 descriptor:(id)a1 sysMemSize:(unsigned long long)a2 sysMemRowBytes:(unsigned long long)a3 vidMemSize:(unsigned long long)a4 vidMemRowBytes:(unsigned long long)a5 args:(struct IOAccelNewResourceArgs { struct IOAccelNewResourceData { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned long long x6; unsigned long long x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned int x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; union { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned long long x4[2]; } x2; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x3; } x16; } x0; } *)a6 argsSize:(unsigned int)a7;
- (id)initWithDevice:(id)a0 surface:(unsigned int)a1 buffer:(unsigned int)a2 args:(struct IOAccelNewResourceArgs { struct IOAccelNewResourceData { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned long long x6; unsigned long long x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned int x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; union { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned long long x4[2]; } x2; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x3; } x16; } x0; } *)a3 argsSize:(unsigned int)a4 returnData:(struct IOAccelGetResourceInfoReturnData { unsigned int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12[2]; unsigned int x13; unsigned long long x14[0]; } *)a5 returnDataSize:(unsigned int)a6;
- (id)initWithTexture:(id)a0 pixelFormat:(unsigned long long)a1;
- (id)initWithTexture:(id)a0 pixelFormat:(unsigned long long)a1 textureType:(unsigned long long)a2 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a4;
- (id)initWithTexture:(id)a0 pixelFormat:(unsigned long long)a1 textureType:(unsigned long long)a2 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a4 swizzle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; })a5;
- (unsigned int)fixedHeapOffset;
- (unsigned int)fixedHeapOffsetAtIndex:(unsigned long long)a0;
- (void)generateClearRequirements;
- (void)generateDepthBufferState;
- (void)generateSurfaceStateTarget;
- (unsigned int)hasFixedHeapOffset;
- (id)initWithBuffer:(id)a0 descriptor:(id)a1 device:(id)a2 sysMemOffset:(unsigned long long)a3 sysMemRowBytes:(unsigned long long)a4 vidMemSize:(unsigned long long)a5 vidMemRowBytes:(unsigned long long)a6 args:(struct IOAccelNewResourceArgs { struct IOAccelNewResourceData { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned long long x6; unsigned long long x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned int x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; union { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned long long x4[2]; } x2; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x3; } x16; } x0; } *)a7 argsSize:(unsigned int)a8 isStrideTexture:(char)a9;
- (id)initWithTexture:(id)a0 pixelFormat:(unsigned long long)a1 resourceIndex:(unsigned long long)a2;
- (id)initWithTexture:(id)a0 pixelFormat:(unsigned long long)a1 textureType:(unsigned long long)a2 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a4 resourceIndex:(unsigned long long)a5;
- (id)initWithTexture:(id)a0 pixelFormat:(unsigned long long)a1 textureType:(unsigned long long)a2 levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3 slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a4 swizzle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; })a5 resourceIndex:(unsigned long long)a6;
- (char)resolveCCS:(unsigned long long)a0 slice:(unsigned long long)a1 waitForCompletion:(char)a2;
- (unsigned long long)subresourceID;
- (char)unlockForCPUAccess:(unsigned int)a0 readOnly:(char)a1;
- (void)calculateBlitDimensions:(unsigned int)a0;
- (id)initWithHeap:(id)a0 resource:(id)a1 offset:(unsigned long long)a2 length:(unsigned long long)a3 device:(id)a4 descriptor:(id)a5 args:(struct VendorNewTextureDataStruc { struct IOAccelNewResourceData { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned long long x6; unsigned long long x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned int x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; union { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; } x0; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x1; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned long long x4[2]; } x2; struct { unsigned int x0; unsigned int x1; unsigned long long x2[3]; } x3; } x16; } x0; struct { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; union { struct *x0; unsigned long long x1; } x12; } x0[6][15]; } x1; struct IntelResourceInfo { unsigned int x0; unsigned int x1; unsigned int x2; unsigned short x3; unsigned short x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned char x20; unsigned char x21; union { struct { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; unsigned char x9 : 1; unsigned char x10 : 1; } x0; unsigned short x1; } x22; } x2; } *)a6 argsSize:(unsigned int)a7;
- (void)initializeHWSurfaceState:(id)a0;
- (BOOL)isTextureWriteable;
- (unsigned long long)lockForCPUAccess:(unsigned int *)a0 readOnly:(char)a1 level:(unsigned int)a2 slice:(unsigned int)a3;

@end

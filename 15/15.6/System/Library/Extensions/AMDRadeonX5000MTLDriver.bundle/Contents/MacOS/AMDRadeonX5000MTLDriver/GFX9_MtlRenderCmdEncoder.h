@class GFX9_MtlRenderPipelineState, NSString, GFX9AMD_MtlBuffer, MTLIOAccelResource, GFX9AMD_MtlTexture, GFX9_MtlCmdBuffer;
@protocol MTLDevice;

@interface GFX9_MtlRenderCmdEncoder : MTLIOAccelRenderCommandEncoder <MTLRenderCommandEncoderSPI, AmdPrivateCommandEncoder, MTLRenderCommandEncoderAMD> {
    struct GFX9_RenderCmdEncoderMembersRec { GFX9_MtlCmdBuffer *cmdBuffer; struct AMD_HwCmdBufInfoRec *hwCmdBufInfo; struct GFX9_RsrcMgrRec *rsrcMgr; struct GFX9_RsrcMgrConstStateRec *constState; struct AMDBitVectorRec *knownExpandedVec; struct AMDBitVectorRec *renderedToVec; struct AMDBitVectorRec *readFromVec; struct AMD_TextureBitMapRec { union { unsigned int bits[8]; struct { unsigned int vertexBits[4]; unsigned int fragmentBits[4]; } ; struct { unsigned __int128 vertexAll; unsigned __int128 fragmentAll; } ; } ; } pipelineTextures; unsigned short renderedToVecSize : 16; unsigned short readFromVecSize : 16; unsigned int umm : 32; unsigned int *cachedSurfSyncCmdPtr; struct AMD_ScissorRectRec { unsigned int left; unsigned int right; unsigned int top; unsigned int bottom; } vpScissorRects[16]; unsigned int viewportCount; struct AMD_ScissorRectRec { unsigned int left; unsigned int right; unsigned int top; unsigned int bottom; } apiScissorRects[16]; unsigned int scissorRectCount; struct AMD_ResourceBindInfoRec { MTLIOAccelResource *rsrc; unsigned int index; unsigned int usageFlags; } currentResources[690]; void *splitHandlers; struct GFX9_DeviceMembersRec *deviceMembers; struct AMD_DeviceMembersRec *deviceBaseMembers; struct GFX9_RenderEncoderHwCtxRegsRec { union CB_BLEND_RED { struct { unsigned int BLEND_RED : 32; } bitfields; struct { unsigned int BLEND_RED : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_BLEND_RED; union CB_BLEND_GREEN { struct { unsigned int BLEND_GREEN : 32; } bitfields; struct { unsigned int BLEND_GREEN : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_BLEND_GREEN; union CB_BLEND_BLUE { struct { unsigned int BLEND_BLUE : 32; } bitfields; struct { unsigned int BLEND_BLUE : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_BLEND_BLUE; union CB_BLEND_ALPHA { struct { unsigned int BLEND_ALPHA : 32; } bitfields; struct { unsigned int BLEND_ALPHA : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_BLEND_ALPHA; union DB_COUNT_CONTROL { struct { unsigned char ZPASS_INCREMENT_DISABLE : 1; unsigned char PERFECT_ZPASS_COUNTS : 1; unsigned char  : 2; unsigned char SAMPLE_RATE : 3; unsigned char  : 1; unsigned char ZPASS_ENABLE : 4; unsigned char ZFAIL_ENABLE : 4; unsigned char SFAIL_ENABLE : 4; unsigned char DBFAIL_ENABLE : 4; unsigned char SLICE_EVEN_ENABLE : 4; unsigned char SLICE_ODD_ENABLE : 4; } bitfields; struct { unsigned char ZPASS_INCREMENT_DISABLE : 1; unsigned char PERFECT_ZPASS_COUNTS : 1; unsigned char  : 2; unsigned char SAMPLE_RATE : 3; unsigned char  : 1; unsigned char ZPASS_ENABLE : 4; unsigned char ZFAIL_ENABLE : 4; unsigned char SFAIL_ENABLE : 4; unsigned char DBFAIL_ENABLE : 4; unsigned char SLICE_EVEN_ENABLE : 4; unsigned char SLICE_ODD_ENABLE : 4; } bits; unsigned int u32All; int i32All; float f32All; } DB_COUNT_CONTROL; union DB_STENCIL_CONTROL { struct { unsigned char STENCILFAIL : 4; unsigned char STENCILZPASS : 4; unsigned char STENCILZFAIL : 4; unsigned char STENCILFAIL_BF : 4; unsigned char STENCILZPASS_BF : 4; unsigned char STENCILZFAIL_BF : 4; unsigned char  : 8; } bitfields; struct { unsigned char STENCILFAIL : 4; unsigned char STENCILZPASS : 4; unsigned char STENCILZFAIL : 4; unsigned char STENCILFAIL_BF : 4; unsigned char STENCILZPASS_BF : 4; unsigned char STENCILZFAIL_BF : 4; unsigned char  : 8; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCIL_CONTROL; union DB_STENCILREFMASK { struct { unsigned char STENCILTESTVAL : 8; unsigned char STENCILMASK : 8; unsigned char STENCILWRITEMASK : 8; unsigned char STENCILOPVAL : 8; } bitfields; struct { unsigned char STENCILTESTVAL : 8; unsigned char STENCILMASK : 8; unsigned char STENCILWRITEMASK : 8; unsigned char STENCILOPVAL : 8; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCILREFMASK; union DB_STENCILREFMASK_BF { struct { unsigned char STENCILTESTVAL_BF : 8; unsigned char STENCILMASK_BF : 8; unsigned char STENCILWRITEMASK_BF : 8; unsigned char STENCILOPVAL_BF : 8; } bitfields; struct { unsigned char STENCILTESTVAL_BF : 8; unsigned char STENCILMASK_BF : 8; unsigned char STENCILWRITEMASK_BF : 8; unsigned char STENCILOPVAL_BF : 8; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCILREFMASK_BF; union DB_DEPTH_CONTROL { struct { unsigned char STENCIL_ENABLE : 1; unsigned char Z_ENABLE : 1; unsigned char Z_WRITE_ENABLE : 1; unsigned char DEPTH_BOUNDS_ENABLE : 1; unsigned char ZFUNC : 3; unsigned char BACKFACE_ENABLE : 1; unsigned char STENCILFUNC : 3; unsigned short  : 9; unsigned char STENCILFUNC_BF : 3; unsigned char  : 7; unsigned char ENABLE_COLOR_WRITES_ON_DEPTH_FAIL : 1; unsigned char DISABLE_COLOR_WRITES_ON_DEPTH_PASS : 1; } bitfields; struct { unsigned char STENCIL_ENABLE : 1; unsigned char Z_ENABLE : 1; unsigned char Z_WRITE_ENABLE : 1; unsigned char DEPTH_BOUNDS_ENABLE : 1; unsigned char ZFUNC : 3; unsigned char BACKFACE_ENABLE : 1; unsigned char STENCILFUNC : 3; unsigned short  : 9; unsigned char STENCILFUNC_BF : 3; unsigned char  : 7; unsigned char ENABLE_COLOR_WRITES_ON_DEPTH_FAIL : 1; unsigned char DISABLE_COLOR_WRITES_ON_DEPTH_PASS : 1; } bits; unsigned int u32All; int i32All; float f32All; } DB_DEPTH_CONTROL; union DB_DEPTH_BOUNDS_MIN { struct { unsigned int MIN : 32; } bitfields; struct { unsigned int MIN : 32; } bits; unsigned int u32All; int i32All; float f32All; } DB_DEPTH_BOUNDS_MIN; union DB_DEPTH_BOUNDS_MAX { struct { unsigned int MAX : 32; } bitfields; struct { unsigned int MAX : 32; } bits; unsigned int u32All; int i32All; float f32All; } DB_DEPTH_BOUNDS_MAX; union PA_SC_SCREEN_SCISSOR_BR { struct { unsigned short BR_X : 16; unsigned short BR_Y : 16; } bitfields; struct { unsigned short BR_X : 16; unsigned short BR_Y : 16; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_SCREEN_SCISSOR_BR; union PA_SC_WINDOW_SCISSOR_TL { struct { unsigned short TL_X : 15; unsigned char  : 1; unsigned short TL_Y : 15; unsigned char WINDOW_OFFSET_DISABLE : 1; } bitfields; struct { unsigned short TL_X : 15; unsigned char  : 1; unsigned short TL_Y : 15; unsigned char WINDOW_OFFSET_DISABLE : 1; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_WINDOW_SCISSOR_TL; union PA_SC_WINDOW_SCISSOR_BR { struct { unsigned short BR_X : 15; unsigned char  : 1; unsigned short BR_Y : 15; unsigned char  : 1; } bitfields; struct { unsigned short BR_X : 15; unsigned char  : 1; unsigned short BR_Y : 15; unsigned char  : 1; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_WINDOW_SCISSOR_BR; union PA_SC_GENERIC_SCISSOR_TL { struct { unsigned short TL_X : 15; unsigned char  : 1; unsigned short TL_Y : 15; unsigned char WINDOW_OFFSET_DISABLE : 1; } bitfields; struct { unsigned short TL_X : 15; unsigned char  : 1; unsigned short TL_Y : 15; unsigned char WINDOW_OFFSET_DISABLE : 1; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_GENERIC_SCISSOR_TL; union PA_SC_GENERIC_SCISSOR_BR { struct { unsigned short BR_X : 15; unsigned char  : 1; unsigned short BR_Y : 15; unsigned char  : 1; } bitfields; struct { unsigned short BR_X : 15; unsigned char  : 1; unsigned short BR_Y : 15; unsigned char  : 1; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_GENERIC_SCISSOR_BR; union GFX9_PaVPortScissorRegsRec { struct { union PA_SC_VPORT_SCISSOR_0_TL { struct { unsigned short TL_X : 15; unsigned char  : 1; unsigned short TL_Y : 15; unsigned char WINDOW_OFFSET_DISABLE : 1; } bitfields; struct { unsigned short TL_X : 15; unsigned char  : 1; unsigned short TL_Y : 15; unsigned char WINDOW_OFFSET_DISABLE : 1; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_VPORT_SCISSOR_TL; union PA_SC_VPORT_SCISSOR_0_BR { struct { unsigned short BR_X : 15; unsigned char  : 1; unsigned short BR_Y : 15; unsigned char  : 1; } bitfields; struct { unsigned short BR_X : 15; unsigned char  : 1; unsigned short BR_Y : 15; unsigned char  : 1; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_VPORT_SCISSOR_BR; } ; unsigned int u32All[2]; } PaVPortScissorRegs[16]; union GFX9_PaVPortZMinMaxRegsRec { struct { union PA_SC_VPORT_ZMIN_0 { struct { unsigned int VPORT_ZMIN : 32; } bitfields; struct { unsigned int VPORT_ZMIN : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_VPORT_ZMIN; union PA_SC_VPORT_ZMAX_0 { struct { unsigned int VPORT_ZMAX : 32; } bitfields; struct { unsigned int VPORT_ZMAX : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_VPORT_ZMAX; } ; unsigned int u32All[2]; } PaVPortZMinMaxRegs[16]; union GFX9_PaVPortScaleOffsetRegsVPortScaleOffsetRegsRec { struct { union PA_CL_VPORT_XSCALE { struct { unsigned int VPORT_XSCALE : 32; } bitfields; struct { unsigned int VPORT_XSCALE : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_VPORT_XSCALE; union PA_CL_VPORT_XOFFSET { struct { unsigned int VPORT_XOFFSET : 32; } bitfields; struct { unsigned int VPORT_XOFFSET : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_VPORT_XOFFSET; union PA_CL_VPORT_YSCALE { struct { unsigned int VPORT_YSCALE : 32; } bitfields; struct { unsigned int VPORT_YSCALE : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_VPORT_YSCALE; union PA_CL_VPORT_YOFFSET { struct { unsigned int VPORT_YOFFSET : 32; } bitfields; struct { unsigned int VPORT_YOFFSET : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_VPORT_YOFFSET; union PA_CL_VPORT_ZSCALE { struct { unsigned int VPORT_ZSCALE : 32; } bitfields; struct { unsigned int VPORT_ZSCALE : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_VPORT_ZSCALE; union PA_CL_VPORT_ZOFFSET { struct { unsigned int VPORT_ZOFFSET : 32; } bitfields; struct { unsigned int VPORT_ZOFFSET : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_VPORT_ZOFFSET; } ; unsigned int u32All[6]; } PaVPortScaleOffsetRegs[16]; union PA_CL_CLIP_CNTL { struct { unsigned char UCP_ENA_0 : 1; unsigned char UCP_ENA_1 : 1; unsigned char UCP_ENA_2 : 1; unsigned char UCP_ENA_3 : 1; unsigned char UCP_ENA_4 : 1; unsigned char UCP_ENA_5 : 1; unsigned char  : 7; unsigned char PS_UCP_Y_SCALE_NEG : 1; unsigned char PS_UCP_MODE : 2; unsigned char CLIP_DISABLE : 1; unsigned char UCP_CULL_ONLY_ENA : 1; unsigned char BOUNDARY_EDGE_FLAG_ENA : 1; unsigned char DX_CLIP_SPACE_DEF : 1; unsigned char DIS_CLIP_ERR_DETECT : 1; unsigned char VTX_KILL_OR : 1; unsigned char DX_RASTERIZATION_KILL : 1; unsigned char  : 1; unsigned char DX_LINEAR_ATTR_CLIP_ENA : 1; unsigned char VTE_VPORT_PROVOKE_DISABLE : 1; unsigned char ZCLIP_NEAR_DISABLE : 1; unsigned char ZCLIP_FAR_DISABLE : 1; unsigned char  : 4; } bitfields; struct { unsigned char UCP_ENA_0 : 1; unsigned char UCP_ENA_1 : 1; unsigned char UCP_ENA_2 : 1; unsigned char UCP_ENA_3 : 1; unsigned char UCP_ENA_4 : 1; unsigned char UCP_ENA_5 : 1; unsigned char  : 7; unsigned char PS_UCP_Y_SCALE_NEG : 1; unsigned char PS_UCP_MODE : 2; unsigned char CLIP_DISABLE : 1; unsigned char UCP_CULL_ONLY_ENA : 1; unsigned char BOUNDARY_EDGE_FLAG_ENA : 1; unsigned char DX_CLIP_SPACE_DEF : 1; unsigned char DIS_CLIP_ERR_DETECT : 1; unsigned char VTX_KILL_OR : 1; unsigned char DX_RASTERIZATION_KILL : 1; unsigned char  : 1; unsigned char DX_LINEAR_ATTR_CLIP_ENA : 1; unsigned char VTE_VPORT_PROVOKE_DISABLE : 1; unsigned char ZCLIP_NEAR_DISABLE : 1; unsigned char ZCLIP_FAR_DISABLE : 1; unsigned char  : 4; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_CLIP_CNTL; union PA_SU_SC_MODE_CNTL { struct { unsigned char CULL_FRONT : 1; unsigned char CULL_BACK : 1; unsigned char FACE : 1; unsigned char POLY_MODE : 2; unsigned char POLYMODE_FRONT_PTYPE : 3; unsigned char POLYMODE_BACK_PTYPE : 3; unsigned char POLY_OFFSET_FRONT_ENABLE : 1; unsigned char POLY_OFFSET_BACK_ENABLE : 1; unsigned char POLY_OFFSET_PARA_ENABLE : 1; unsigned char  : 2; unsigned char VTX_WINDOW_OFFSET_ENABLE : 1; unsigned char  : 2; unsigned char PROVOKING_VTX_LAST : 1; unsigned char PERSP_CORR_DIS : 1; unsigned char MULTI_PRIM_IB_ENA : 1; unsigned char RIGHT_TRIANGLE_ALTERNATE_GRADIENT_REF : 1; unsigned char NEW_QUAD_DECOMPOSITION : 1; unsigned char  : 8; } bitfields; struct { unsigned char CULL_FRONT : 1; unsigned char CULL_BACK : 1; unsigned char FACE : 1; unsigned char POLY_MODE : 2; unsigned char POLYMODE_FRONT_PTYPE : 3; unsigned char POLYMODE_BACK_PTYPE : 3; unsigned char POLY_OFFSET_FRONT_ENABLE : 1; unsigned char POLY_OFFSET_BACK_ENABLE : 1; unsigned char POLY_OFFSET_PARA_ENABLE : 1; unsigned char  : 2; unsigned char VTX_WINDOW_OFFSET_ENABLE : 1; unsigned char  : 2; unsigned char PROVOKING_VTX_LAST : 1; unsigned char PERSP_CORR_DIS : 1; unsigned char MULTI_PRIM_IB_ENA : 1; unsigned char RIGHT_TRIANGLE_ALTERNATE_GRADIENT_REF : 1; unsigned char NEW_QUAD_DECOMPOSITION : 1; unsigned char  : 8; } bits; unsigned int u32All; int i32All; float f32All; } PA_SU_SC_MODE_CNTL; union PA_SU_LINE_CNTL { struct { unsigned short WIDTH : 16; unsigned short  : 16; } bitfields; struct { unsigned short WIDTH : 16; unsigned short  : 16; } bits; unsigned int u32All; int i32All; float f32All; } PA_SU_LINE_CNTL; union PA_SC_MODE_CNTL_0 { struct { unsigned char MSAA_ENABLE : 1; unsigned char VPORT_SCISSOR_ENABLE : 1; unsigned char LINE_STIPPLE_ENABLE : 1; unsigned char SEND_UNLIT_STILES_TO_PKR : 1; unsigned char SCALE_LINE_WIDTH_PAD : 1; unsigned char ALTERNATE_RBS_PER_TILE : 1; unsigned char COARSE_TILE_STARTS_ON_EVEN_RB : 1; unsigned int  : 25; } bitfields; struct { unsigned char MSAA_ENABLE : 1; unsigned char VPORT_SCISSOR_ENABLE : 1; unsigned char LINE_STIPPLE_ENABLE : 1; unsigned char SEND_UNLIT_STILES_TO_PKR : 1; unsigned char SCALE_LINE_WIDTH_PAD : 1; unsigned char ALTERNATE_RBS_PER_TILE : 1; unsigned char COARSE_TILE_STARTS_ON_EVEN_RB : 1; unsigned int  : 25; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_MODE_CNTL_0; union PA_SU_POLY_OFFSET_DB_FMT_CNTL { struct { unsigned char POLY_OFFSET_NEG_NUM_DB_BITS : 8; unsigned char POLY_OFFSET_DB_IS_FLOAT_FMT : 1; unsigned int  : 23; } bitfields; struct { unsigned char POLY_OFFSET_NEG_NUM_DB_BITS : 8; unsigned char POLY_OFFSET_DB_IS_FLOAT_FMT : 1; unsigned int  : 23; } bits; unsigned int u32All; int i32All; float f32All; } PA_SU_POLY_OFFSET_DB_FMT_CNTL; union PA_SU_POLY_OFFSET_CLAMP { struct { unsigned int CLAMP : 32; } bitfields; struct { unsigned int CLAMP : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_SU_POLY_OFFSET_CLAMP; union PA_SU_POLY_OFFSET_FRONT_SCALE { struct { unsigned int SCALE : 32; } bitfields; struct { unsigned int SCALE : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_SU_POLY_OFFSET_FRONT_SCALE; union PA_SU_POLY_OFFSET_FRONT_OFFSET { struct { unsigned int OFFSET : 32; } bitfields; struct { unsigned int OFFSET : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_SU_POLY_OFFSET_FRONT_OFFSET; union PA_SU_POLY_OFFSET_BACK_SCALE { struct { unsigned int SCALE : 32; } bitfields; struct { unsigned int SCALE : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_SU_POLY_OFFSET_BACK_SCALE; union PA_SU_POLY_OFFSET_BACK_OFFSET { struct { unsigned int OFFSET : 32; } bitfields; struct { unsigned int OFFSET : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_SU_POLY_OFFSET_BACK_OFFSET; union PA_CL_GB_VERT_CLIP_ADJ { struct { unsigned int DATA_REGISTER : 32; } bitfields; struct { unsigned int DATA_REGISTER : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_GB_VERT_CLIP_ADJ; union PA_CL_GB_VERT_DISC_ADJ { struct { unsigned int DATA_REGISTER : 32; } bitfields; struct { unsigned int DATA_REGISTER : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_GB_VERT_DISC_ADJ; union PA_CL_GB_HORZ_CLIP_ADJ { struct { unsigned int DATA_REGISTER : 32; } bitfields; struct { unsigned int DATA_REGISTER : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_GB_HORZ_CLIP_ADJ; union PA_CL_GB_HORZ_DISC_ADJ { struct { unsigned int DATA_REGISTER : 32; } bitfields; struct { unsigned int DATA_REGISTER : 32; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_GB_HORZ_DISC_ADJ; union PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_0 { struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bitfields; struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0[4]; union PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_0 { struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bitfields; struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0[4]; union PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_0 { struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bitfields; struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1[4]; union PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_0 { struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bitfields; struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1[4]; union PA_SC_BINNER_CNTL_0 { struct { unsigned char BINNING_MODE : 2; unsigned char BIN_SIZE_X : 1; unsigned char BIN_SIZE_Y : 1; unsigned char BIN_SIZE_X_EXTEND : 3; unsigned char BIN_SIZE_Y_EXTEND : 3; unsigned char CONTEXT_STATES_PER_BIN : 3; unsigned char PERSISTENT_STATES_PER_BIN : 5; unsigned char DISABLE_START_OF_PRIM : 1; unsigned char FPOVS_PER_BATCH : 8; unsigned char OPTIMAL_BIN_SELECTION : 1; unsigned char  : 4; } bitfields; struct { unsigned char BINNING_MODE : 2; unsigned char BIN_SIZE_X : 1; unsigned char BIN_SIZE_Y : 1; unsigned char BIN_SIZE_X_EXTEND : 3; unsigned char BIN_SIZE_Y_EXTEND : 3; unsigned char CONTEXT_STATES_PER_BIN : 3; unsigned char PERSISTENT_STATES_PER_BIN : 5; unsigned char DISABLE_START_OF_PRIM : 1; unsigned char FPOVS_PER_BATCH : 8; unsigned char OPTIMAL_BIN_SELECTION : 1; unsigned char  : 4; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_BINNER_CNTL_0; union PA_SC_BINNER_CNTL_1 { struct { unsigned short MAX_ALLOC_COUNT : 16; unsigned short MAX_PRIM_PER_BATCH : 16; } bitfields; struct { unsigned short MAX_ALLOC_COUNT : 16; unsigned short MAX_PRIM_PER_BATCH : 16; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_BINNER_CNTL_1; union VGT_REUSE_OFF { struct { unsigned char REUSE_OFF : 1; unsigned int  : 31; } bitfields; struct { unsigned char REUSE_OFF : 1; unsigned int  : 31; } bits; unsigned int u32All; int i32All; float f32All; } VGT_REUSE_OFF; union GFX9_HwCBRegsRec { struct { union CB_COLOR0_BASE { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_BASE; union CB_COLOR0_BASE_EXT { struct { unsigned char BASE_256B : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_256B : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_BASE_EXT; union CB_COLOR0_ATTRIB2 { struct { unsigned short MIP0_HEIGHT : 14; unsigned short MIP0_WIDTH : 14; unsigned char MAX_MIP : 4; } bitfields; struct { unsigned short MIP0_HEIGHT : 14; unsigned short MIP0_WIDTH : 14; unsigned char MAX_MIP : 4; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_ATTRIB2; union CB_COLOR0_VIEW { struct { unsigned short SLICE_START : 11; unsigned char  : 2; unsigned short SLICE_MAX : 11; unsigned char MIP_LEVEL : 4; unsigned char  : 4; } bitfields; struct { unsigned short SLICE_START : 11; unsigned char  : 2; unsigned short SLICE_MAX : 11; unsigned char MIP_LEVEL : 4; unsigned char  : 4; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_VIEW; union CB_COLOR0_INFO { struct { unsigned char ENDIAN : 2; unsigned char FORMAT : 5; unsigned char  : 1; unsigned char NUMBER_TYPE : 3; unsigned char COMP_SWAP : 2; unsigned char FAST_CLEAR : 1; unsigned char COMPRESSION : 1; unsigned char BLEND_CLAMP : 1; unsigned char BLEND_BYPASS : 1; unsigned char SIMPLE_FLOAT : 1; unsigned char ROUND_MODE : 1; unsigned char  : 1; unsigned char BLEND_OPT_DONT_RD_DST : 3; unsigned char BLEND_OPT_DISCARD_PIXEL : 3; unsigned char FMASK_COMPRESSION_DISABLE : 1; unsigned char FMASK_COMPRESS_1FRAG_ONLY : 1; unsigned char DCC_ENABLE : 1; unsigned char CMASK_ADDR_TYPE : 2; unsigned char  : 1; } bitfields; struct { unsigned char ENDIAN : 2; unsigned char FORMAT : 5; unsigned char  : 1; unsigned char NUMBER_TYPE : 3; unsigned char COMP_SWAP : 2; unsigned char FAST_CLEAR : 1; unsigned char COMPRESSION : 1; unsigned char BLEND_CLAMP : 1; unsigned char BLEND_BYPASS : 1; unsigned char SIMPLE_FLOAT : 1; unsigned char ROUND_MODE : 1; unsigned char  : 1; unsigned char BLEND_OPT_DONT_RD_DST : 3; unsigned char BLEND_OPT_DISCARD_PIXEL : 3; unsigned char FMASK_COMPRESSION_DISABLE : 1; unsigned char FMASK_COMPRESS_1FRAG_ONLY : 1; unsigned char DCC_ENABLE : 1; unsigned char CMASK_ADDR_TYPE : 2; unsigned char  : 1; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_INFO; union CB_COLOR0_ATTRIB { struct { unsigned short MIP0_DEPTH : 11; unsigned char META_LINEAR : 1; unsigned char NUM_SAMPLES : 3; unsigned char NUM_FRAGMENTS : 2; unsigned char FORCE_DST_ALPHA_1 : 1; unsigned char COLOR_SW_MODE : 5; unsigned char FMASK_SW_MODE : 5; unsigned char RESOURCE_TYPE : 2; unsigned char RB_ALIGNED : 1; unsigned char PIPE_ALIGNED : 1; } bitfields; struct { unsigned short MIP0_DEPTH : 11; unsigned char META_LINEAR : 1; unsigned char NUM_SAMPLES : 3; unsigned char NUM_FRAGMENTS : 2; unsigned char FORCE_DST_ALPHA_1 : 1; unsigned char COLOR_SW_MODE : 5; unsigned char FMASK_SW_MODE : 5; unsigned char RESOURCE_TYPE : 2; unsigned char RB_ALIGNED : 1; unsigned char PIPE_ALIGNED : 1; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_ATTRIB; union CB_COLOR0_DCC_CONTROL { struct { unsigned char OVERWRITE_COMBINER_DISABLE : 1; unsigned char KEY_CLEAR_ENABLE : 1; unsigned char MAX_UNCOMPRESSED_BLOCK_SIZE : 2; unsigned char MIN_COMPRESSED_BLOCK_SIZE : 1; unsigned char MAX_COMPRESSED_BLOCK_SIZE : 2; unsigned char COLOR_TRANSFORM : 2; unsigned char INDEPENDENT_64B_BLOCKS : 1; unsigned char LOSSY_RGB_PRECISION : 4; unsigned char LOSSY_ALPHA_PRECISION : 4; unsigned short  : 14; } bitfields; struct { unsigned char OVERWRITE_COMBINER_DISABLE : 1; unsigned char KEY_CLEAR_ENABLE : 1; unsigned char MAX_UNCOMPRESSED_BLOCK_SIZE : 2; unsigned char MIN_COMPRESSED_BLOCK_SIZE : 1; unsigned char MAX_COMPRESSED_BLOCK_SIZE : 2; unsigned char COLOR_TRANSFORM : 2; unsigned char INDEPENDENT_64B_BLOCKS : 1; unsigned char LOSSY_RGB_PRECISION : 4; unsigned char LOSSY_ALPHA_PRECISION : 4; unsigned short  : 14; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_DCC_CONTROL; union CB_COLOR0_CMASK { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_CMASK; union CB_COLOR0_CMASK_BASE_EXT { struct { unsigned char BASE_256B : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_256B : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_CMASK_BASE_EXT; union CB_COLOR0_FMASK { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_FMASK; union CB_COLOR0_FMASK_BASE_EXT { struct { unsigned char BASE_256B : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_256B : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_FMASK_BASE_EXT; union CB_COLOR0_CLEAR_WORD0 { struct { unsigned int CLEAR_WORD0 : 32; } bitfields; struct { unsigned int CLEAR_WORD0 : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_CLEAR_WORD0; union CB_COLOR0_CLEAR_WORD1 { struct { unsigned int CLEAR_WORD1 : 32; } bitfields; struct { unsigned int CLEAR_WORD1 : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_CLEAR_WORD1; union CB_COLOR0_DCC_BASE { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_DCC_BASE; union CB_COLOR0_DCC_BASE_EXT { struct { unsigned char BASE_256B : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_256B : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_DCC_BASE_EXT; union CB_MRT0_EPITCH { struct { unsigned short EPITCH : 16; unsigned short  : 16; } bitfields; struct { unsigned short EPITCH : 16; unsigned short  : 16; } bits; unsigned int u32All; int i32All; float f32All; } CB_MRT_EPITCH; } ; unsigned int u32All[16]; } hwCBRegs[8]; union GFX9_HwDBRegsRec { struct { union DB_DEPTH_VIEW { struct { unsigned short SLICE_START : 11; unsigned char  : 2; unsigned short SLICE_MAX : 11; unsigned char Z_READ_ONLY : 1; unsigned char STENCIL_READ_ONLY : 1; unsigned char MIPID : 4; unsigned char  : 2; } bitfields; struct { unsigned short SLICE_START : 11; unsigned char  : 2; unsigned short SLICE_MAX : 11; unsigned char Z_READ_ONLY : 1; unsigned char STENCIL_READ_ONLY : 1; unsigned char MIPID : 4; unsigned char  : 2; } bits; unsigned int u32All; int i32All; float f32All; } DB_DEPTH_VIEW; union DB_HTILE_DATA_BASE { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } DB_HTILE_DATA_BASE; union DB_HTILE_DATA_BASE_HI { struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } DB_HTILE_DATA_BASE_HI; union DB_DEPTH_SIZE { struct { unsigned short X_MAX : 14; unsigned char  : 2; unsigned short Y_MAX : 14; unsigned char  : 2; } bitfields; struct { unsigned short X_MAX : 14; unsigned char  : 2; unsigned short Y_MAX : 14; unsigned char  : 2; } bits; unsigned int u32All; int i32All; float f32All; } DB_DEPTH_SIZE; union DB_STENCIL_CLEAR { struct { unsigned char CLEAR : 8; unsigned int  : 24; } bitfields; struct { unsigned char CLEAR : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCIL_CLEAR; union DB_DEPTH_CLEAR { struct { unsigned int DEPTH_CLEAR : 32; } bitfields; struct { unsigned int DEPTH_CLEAR : 32; } bits; unsigned int u32All; int i32All; float f32All; } DB_DEPTH_CLEAR; union DB_Z_INFO { struct { unsigned char FORMAT : 2; unsigned char NUM_SAMPLES : 2; unsigned char SW_MODE : 5; unsigned char  : 3; unsigned char PARTIALLY_RESIDENT : 1; unsigned char FAULT_BEHAVIOR : 2; unsigned char ITERATE_FLUSH : 1; unsigned char MAXMIP : 4; unsigned char  : 3; unsigned char DECOMPRESS_ON_N_ZPLANES : 4; unsigned char ALLOW_EXPCLEAR : 1; unsigned char READ_SIZE : 1; unsigned char TILE_SURFACE_ENABLE : 1; unsigned char CLEAR_DISALLOWED : 1; unsigned char ZRANGE_PRECISION : 1; } bitfields; struct { unsigned char FORMAT : 2; unsigned char NUM_SAMPLES : 2; unsigned char SW_MODE : 5; unsigned char  : 3; unsigned char PARTIALLY_RESIDENT : 1; unsigned char FAULT_BEHAVIOR : 2; unsigned char ITERATE_FLUSH : 1; unsigned char MAXMIP : 4; unsigned char  : 3; unsigned char DECOMPRESS_ON_N_ZPLANES : 4; unsigned char ALLOW_EXPCLEAR : 1; unsigned char READ_SIZE : 1; unsigned char TILE_SURFACE_ENABLE : 1; unsigned char CLEAR_DISALLOWED : 1; unsigned char ZRANGE_PRECISION : 1; } bits; unsigned int u32All; int i32All; float f32All; } DB_Z_INFO; union DB_STENCIL_INFO { struct { unsigned char FORMAT : 1; unsigned char  : 3; unsigned char SW_MODE : 5; unsigned char  : 3; unsigned char PARTIALLY_RESIDENT : 1; unsigned char FAULT_BEHAVIOR : 2; unsigned char ITERATE_FLUSH : 1; unsigned short  : 11; unsigned char ALLOW_EXPCLEAR : 1; unsigned char  : 1; unsigned char TILE_STENCIL_DISABLE : 1; unsigned char CLEAR_DISALLOWED : 1; unsigned char  : 1; } bitfields; struct { unsigned char FORMAT : 1; unsigned char  : 3; unsigned char SW_MODE : 5; unsigned char  : 3; unsigned char PARTIALLY_RESIDENT : 1; unsigned char FAULT_BEHAVIOR : 2; unsigned char ITERATE_FLUSH : 1; unsigned short  : 11; unsigned char ALLOW_EXPCLEAR : 1; unsigned char  : 1; unsigned char TILE_STENCIL_DISABLE : 1; unsigned char CLEAR_DISALLOWED : 1; unsigned char  : 1; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCIL_INFO; union DB_Z_READ_BASE { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } DB_Z_READ_BASE; union DB_Z_READ_BASE_HI { struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } DB_Z_READ_BASE_HI; union DB_STENCIL_READ_BASE { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCIL_READ_BASE; union DB_STENCIL_READ_BASE_HI { struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCIL_READ_BASE_HI; union DB_Z_WRITE_BASE { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } DB_Z_WRITE_BASE; union DB_Z_WRITE_BASE_HI { struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } DB_Z_WRITE_BASE_HI; union DB_STENCIL_WRITE_BASE { struct { unsigned int BASE_256B : 32; } bitfields; struct { unsigned int BASE_256B : 32; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCIL_WRITE_BASE; union DB_STENCIL_WRITE_BASE_HI { struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCIL_WRITE_BASE_HI; union DB_Z_INFO2 { struct { unsigned short EPITCH : 16; unsigned short  : 16; } bitfields; struct { unsigned short EPITCH : 16; unsigned short  : 16; } bits; unsigned int u32All; int i32All; float f32All; } DB_Z_INFO2; union DB_STENCIL_INFO2 { struct { unsigned short EPITCH : 16; unsigned short  : 16; } bitfields; struct { unsigned short EPITCH : 16; unsigned short  : 16; } bits; unsigned int u32All; int i32All; float f32All; } DB_STENCIL_INFO2; union DB_HTILE_SURFACE { struct { unsigned char  : 1; unsigned char FULL_CACHE : 1; unsigned char HTILE_USES_PRELOAD_WIN : 1; unsigned char PRELOAD : 1; unsigned char PREFETCH_WIDTH : 6; unsigned char PREFETCH_HEIGHT : 6; unsigned char DST_OUTSIDE_ZERO_TO_ONE : 1; unsigned char  : 1; unsigned char PIPE_ALIGNED : 1; unsigned char RB_ALIGNED : 1; unsigned short  : 12; } bitfields; struct { unsigned char  : 1; unsigned char FULL_CACHE : 1; unsigned char HTILE_USES_PRELOAD_WIN : 1; unsigned char PRELOAD : 1; unsigned char PREFETCH_WIDTH : 6; unsigned char PREFETCH_HEIGHT : 6; unsigned char DST_OUTSIDE_ZERO_TO_ONE : 1; unsigned char  : 1; unsigned char PIPE_ALIGNED : 1; unsigned char RB_ALIGNED : 1; unsigned short  : 12; } bits; unsigned int u32All; int i32All; float f32All; } DB_HTILE_SURFACE; union DB_PRELOAD_CONTROL { struct { unsigned char START_X : 8; unsigned char START_Y : 8; unsigned char MAX_X : 8; unsigned char MAX_Y : 8; } bitfields; struct { unsigned char START_X : 8; unsigned char START_Y : 8; unsigned char MAX_X : 8; unsigned char MAX_Y : 8; } bits; unsigned int u32All; int i32All; float f32All; } DB_PRELOAD_CONTROL; } ; unsigned int u32All[20]; } hwDBRegs; } renderEncoderHwCtxRegs; struct GFX9_RenderEncoderHwUCfgRegsRec { union IA_MULTI_VGT_PARAM { struct { unsigned short PRIMGROUP_SIZE : 16; unsigned char PARTIAL_VS_WAVE_ON : 1; unsigned char SWITCH_ON_EOP : 1; unsigned char PARTIAL_ES_WAVE_ON : 1; unsigned char SWITCH_ON_EOI : 1; unsigned char WD_SWITCH_ON_EOP : 1; unsigned char EN_INST_OPT_BASIC : 1; unsigned char EN_INST_OPT_ADV : 1; unsigned char HW_USE_ONLY : 1; unsigned char  : 8; } bitfields; struct { unsigned short PRIMGROUP_SIZE : 16; unsigned char PARTIAL_VS_WAVE_ON : 1; unsigned char SWITCH_ON_EOP : 1; unsigned char PARTIAL_ES_WAVE_ON : 1; unsigned char SWITCH_ON_EOI : 1; unsigned char WD_SWITCH_ON_EOP : 1; unsigned char EN_INST_OPT_BASIC : 1; unsigned char EN_INST_OPT_ADV : 1; unsigned char HW_USE_ONLY : 1; unsigned char  : 8; } bits; unsigned int u32All; int i32All; float f32All; } IA_MULTI_VGT_PARAM; union VGT_INDX_OFFSET { struct { unsigned int INDX_OFFSET : 32; } bitfields; struct { unsigned int INDX_OFFSET : 32; } bits; unsigned int u32All; int i32All; float f32All; } VGT_INDX_OFFSET; union VGT_MULTI_PRIM_IB_RESET_EN { struct { unsigned char RESET_EN : 1; unsigned char MATCH_ALL_BITS : 1; unsigned int  : 30; } bitfields; struct { unsigned char RESET_EN : 1; unsigned char MATCH_ALL_BITS : 1; unsigned int  : 30; } bits; unsigned int u32All; int i32All; float f32All; } VGT_MULTI_PRIM_IB_RESET_EN; union VGT_TF_RING_SIZE { struct { unsigned short SIZE : 16; unsigned short  : 16; } bitfields; struct { unsigned short SIZE : 16; unsigned short  : 16; } bits; unsigned int u32All; int i32All; float f32All; } VGT_TF_RING_SIZE; union VGT_HS_OFFCHIP_PARAM { struct { unsigned short OFFCHIP_BUFFERING : 9; unsigned char OFFCHIP_GRANULARITY : 2; unsigned int  : 21; } bitfields; struct { unsigned short OFFCHIP_BUFFERING : 9; unsigned char OFFCHIP_GRANULARITY : 2; unsigned int  : 21; } bits; unsigned int u32All; int i32All; float f32All; } VGT_HS_OFFCHIP_PARAM; union VGT_TF_MEMORY_BASE { struct { unsigned int BASE : 32; } bitfields; struct { unsigned int BASE : 32; } bits; unsigned int u32All; int i32All; float f32All; } VGT_TF_MEMORY_BASE; union VGT_TF_MEMORY_BASE_HI { struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bitfields; struct { unsigned char BASE_HI : 8; unsigned int  : 24; } bits; unsigned int u32All; int i32All; float f32All; } VGT_TF_MEMORY_BASE_HI; } renderEncoderHwUCfgRegs; struct GFX9_RenderPipelineHwCtxRegsRec { union CB_TARGET_MASK { struct { unsigned char TARGET0_ENABLE : 4; unsigned char TARGET1_ENABLE : 4; unsigned char TARGET2_ENABLE : 4; unsigned char TARGET3_ENABLE : 4; unsigned char TARGET4_ENABLE : 4; unsigned char TARGET5_ENABLE : 4; unsigned char TARGET6_ENABLE : 4; unsigned char TARGET7_ENABLE : 4; } bitfields; struct { unsigned char TARGET0_ENABLE : 4; unsigned char TARGET1_ENABLE : 4; unsigned char TARGET2_ENABLE : 4; unsigned char TARGET3_ENABLE : 4; unsigned char TARGET4_ENABLE : 4; unsigned char TARGET5_ENABLE : 4; unsigned char TARGET6_ENABLE : 4; unsigned char TARGET7_ENABLE : 4; } bits; unsigned int u32All; int i32All; float f32All; } CB_TARGET_MASK; union CB_SHADER_MASK { struct { unsigned char OUTPUT0_ENABLE : 4; unsigned char OUTPUT1_ENABLE : 4; unsigned char OUTPUT2_ENABLE : 4; unsigned char OUTPUT3_ENABLE : 4; unsigned char OUTPUT4_ENABLE : 4; unsigned char OUTPUT5_ENABLE : 4; unsigned char OUTPUT6_ENABLE : 4; unsigned char OUTPUT7_ENABLE : 4; } bitfields; struct { unsigned char OUTPUT0_ENABLE : 4; unsigned char OUTPUT1_ENABLE : 4; unsigned char OUTPUT2_ENABLE : 4; unsigned char OUTPUT3_ENABLE : 4; unsigned char OUTPUT4_ENABLE : 4; unsigned char OUTPUT5_ENABLE : 4; unsigned char OUTPUT6_ENABLE : 4; unsigned char OUTPUT7_ENABLE : 4; } bits; unsigned int u32All; int i32All; float f32All; } CB_SHADER_MASK; union CB_BLEND0_CONTROL { struct { unsigned char COLOR_SRCBLEND : 5; unsigned char COLOR_COMB_FCN : 3; unsigned char COLOR_DESTBLEND : 5; unsigned char  : 3; unsigned char ALPHA_SRCBLEND : 5; unsigned char ALPHA_COMB_FCN : 3; unsigned char ALPHA_DESTBLEND : 5; unsigned char SEPARATE_ALPHA_BLEND : 1; unsigned char ENABLE : 1; unsigned char DISABLE_ROP3 : 1; } bitfields; struct { unsigned char COLOR_SRCBLEND : 5; unsigned char COLOR_COMB_FCN : 3; unsigned char COLOR_DESTBLEND : 5; unsigned char  : 3; unsigned char ALPHA_SRCBLEND : 5; unsigned char ALPHA_COMB_FCN : 3; unsigned char ALPHA_DESTBLEND : 5; unsigned char SEPARATE_ALPHA_BLEND : 1; unsigned char ENABLE : 1; unsigned char DISABLE_ROP3 : 1; } bits; unsigned int u32All; int i32All; float f32All; } CB_BLEND_CONTROL_MRT[8]; union CB_COLOR_CONTROL { struct { unsigned char DISABLE_DUAL_QUAD : 1; unsigned char  : 2; unsigned char DEGAMMA_ENABLE : 1; unsigned char MODE : 3; unsigned short  : 9; unsigned char ROP3 : 8; unsigned char  : 8; } bitfields; struct { unsigned char DISABLE_DUAL_QUAD : 1; unsigned char  : 2; unsigned char DEGAMMA_ENABLE : 1; unsigned char MODE : 3; unsigned short  : 9; unsigned char ROP3 : 8; unsigned char  : 8; } bits; unsigned int u32All; int i32All; float f32All; } CB_COLOR_CONTROL; union DB_RENDER_OVERRIDE { struct { unsigned char FORCE_HIZ_ENABLE : 2; unsigned char FORCE_HIS_ENABLE0 : 2; unsigned char FORCE_HIS_ENABLE1 : 2; unsigned char FORCE_SHADER_Z_ORDER : 1; unsigned char FAST_Z_DISABLE : 1; unsigned char FAST_STENCIL_DISABLE : 1; unsigned char NOOP_CULL_DISABLE : 1; unsigned char FORCE_COLOR_KILL : 1; unsigned char FORCE_Z_READ : 1; unsigned char FORCE_STENCIL_READ : 1; unsigned char FORCE_FULL_Z_RANGE : 2; unsigned char FORCE_QC_SMASK_CONFLICT : 1; unsigned char DISABLE_VIEWPORT_CLAMP : 1; unsigned char IGNORE_SC_ZRANGE : 1; unsigned char DISABLE_FULLY_COVERED : 1; unsigned char FORCE_Z_LIMIT_SUMM : 2; unsigned char MAX_TILES_IN_DTT : 5; unsigned char DISABLE_TILE_RATE_TILES : 1; unsigned char FORCE_Z_DIRTY : 1; unsigned char FORCE_STENCIL_DIRTY : 1; unsigned char FORCE_Z_VALID : 1; unsigned char FORCE_STENCIL_VALID : 1; unsigned char PRESERVE_COMPRESSION : 1; } bitfields; struct { unsigned char FORCE_HIZ_ENABLE : 2; unsigned char FORCE_HIS_ENABLE0 : 2; unsigned char FORCE_HIS_ENABLE1 : 2; unsigned char FORCE_SHADER_Z_ORDER : 1; unsigned char FAST_Z_DISABLE : 1; unsigned char FAST_STENCIL_DISABLE : 1; unsigned char NOOP_CULL_DISABLE : 1; unsigned char FORCE_COLOR_KILL : 1; unsigned char FORCE_Z_READ : 1; unsigned char FORCE_STENCIL_READ : 1; unsigned char FORCE_FULL_Z_RANGE : 2; unsigned char FORCE_QC_SMASK_CONFLICT : 1; unsigned char DISABLE_VIEWPORT_CLAMP : 1; unsigned char IGNORE_SC_ZRANGE : 1; unsigned char DISABLE_FULLY_COVERED : 1; unsigned char FORCE_Z_LIMIT_SUMM : 2; unsigned char MAX_TILES_IN_DTT : 5; unsigned char DISABLE_TILE_RATE_TILES : 1; unsigned char FORCE_Z_DIRTY : 1; unsigned char FORCE_STENCIL_DIRTY : 1; unsigned char FORCE_Z_VALID : 1; unsigned char FORCE_STENCIL_VALID : 1; unsigned char PRESERVE_COMPRESSION : 1; } bits; unsigned int u32All; int i32All; float f32All; } DB_RENDER_OVERRIDE; union DB_RENDER_OVERRIDE2 { struct { unsigned char PARTIAL_SQUAD_LAUNCH_CONTROL : 2; unsigned char PARTIAL_SQUAD_LAUNCH_COUNTDOWN : 3; unsigned char DISABLE_ZMASK_EXPCLEAR_OPTIMIZATION : 1; unsigned char DISABLE_SMEM_EXPCLEAR_OPTIMIZATION : 1; unsigned char DISABLE_COLOR_ON_VALIDATION : 1; unsigned char DECOMPRESS_Z_ON_FLUSH : 1; unsigned char DISABLE_REG_SNOOP : 1; unsigned char DEPTH_BOUNDS_HIER_DEPTH_DISABLE : 1; unsigned char SEPARATE_HIZS_FUNC_ENABLE : 1; unsigned char HIZ_ZFUNC : 3; unsigned char HIS_SFUNC_FF : 3; unsigned char HIS_SFUNC_BF : 3; unsigned char PRESERVE_ZRANGE : 1; unsigned char PRESERVE_SRESULTS : 1; unsigned char DISABLE_FAST_PASS : 1; unsigned char  : 1; unsigned char ALLOW_PARTIAL_RES_HIER_KILL : 1; unsigned char  : 6; } bitfields; struct { unsigned char PARTIAL_SQUAD_LAUNCH_CONTROL : 2; unsigned char PARTIAL_SQUAD_LAUNCH_COUNTDOWN : 3; unsigned char DISABLE_ZMASK_EXPCLEAR_OPTIMIZATION : 1; unsigned char DISABLE_SMEM_EXPCLEAR_OPTIMIZATION : 1; unsigned char DISABLE_COLOR_ON_VALIDATION : 1; unsigned char DECOMPRESS_Z_ON_FLUSH : 1; unsigned char DISABLE_REG_SNOOP : 1; unsigned char DEPTH_BOUNDS_HIER_DEPTH_DISABLE : 1; unsigned char SEPARATE_HIZS_FUNC_ENABLE : 1; unsigned char HIZ_ZFUNC : 3; unsigned char HIS_SFUNC_FF : 3; unsigned char HIS_SFUNC_BF : 3; unsigned char PRESERVE_ZRANGE : 1; unsigned char PRESERVE_SRESULTS : 1; unsigned char DISABLE_FAST_PASS : 1; unsigned char  : 1; unsigned char ALLOW_PARTIAL_RES_HIER_KILL : 1; unsigned char  : 6; } bits; unsigned int u32All; int i32All; float f32All; } DB_RENDER_OVERRIDE2; union DB_EQAA { struct { unsigned char MAX_ANCHOR_SAMPLES : 3; unsigned char  : 1; unsigned char PS_ITER_SAMPLES : 3; unsigned char  : 1; unsigned char MASK_EXPORT_NUM_SAMPLES : 3; unsigned char  : 1; unsigned char ALPHA_TO_MASK_NUM_SAMPLES : 3; unsigned char  : 1; unsigned char HIGH_QUALITY_INTERSECTIONS : 1; unsigned char INCOHERENT_EQAA_READS : 1; unsigned char INTERPOLATE_COMP_Z : 1; unsigned char INTERPOLATE_SRC_Z : 1; unsigned char STATIC_ANCHOR_ASSOCIATIONS : 1; unsigned char ALPHA_TO_MASK_EQAA_DISABLE : 1; unsigned char  : 2; unsigned char OVERRASTERIZATION_AMOUNT : 3; unsigned char ENABLE_POSTZ_OVERRASTERIZATION : 1; unsigned char  : 4; } bitfields; struct { unsigned char MAX_ANCHOR_SAMPLES : 3; unsigned char  : 1; unsigned char PS_ITER_SAMPLES : 3; unsigned char  : 1; unsigned char MASK_EXPORT_NUM_SAMPLES : 3; unsigned char  : 1; unsigned char ALPHA_TO_MASK_NUM_SAMPLES : 3; unsigned char  : 1; unsigned char HIGH_QUALITY_INTERSECTIONS : 1; unsigned char INCOHERENT_EQAA_READS : 1; unsigned char INTERPOLATE_COMP_Z : 1; unsigned char INTERPOLATE_SRC_Z : 1; unsigned char STATIC_ANCHOR_ASSOCIATIONS : 1; unsigned char ALPHA_TO_MASK_EQAA_DISABLE : 1; unsigned char  : 2; unsigned char OVERRASTERIZATION_AMOUNT : 3; unsigned char ENABLE_POSTZ_OVERRASTERIZATION : 1; unsigned char  : 4; } bits; unsigned int u32All; int i32All; float f32All; } DB_EQAA; union DB_SHADER_CONTROL { struct { unsigned char Z_EXPORT_ENABLE : 1; unsigned char STENCIL_TEST_VAL_EXPORT_ENABLE : 1; unsigned char STENCIL_OP_VAL_EXPORT_ENABLE : 1; unsigned char  : 1; unsigned char Z_ORDER : 2; unsigned char KILL_ENABLE : 1; unsigned char COVERAGE_TO_MASK_ENABLE : 1; unsigned char MASK_EXPORT_ENABLE : 1; unsigned char EXEC_ON_HIER_FAIL : 1; unsigned char EXEC_ON_NOOP : 1; unsigned char ALPHA_TO_MASK_DISABLE : 1; unsigned char DEPTH_BEFORE_SHADER : 1; unsigned char CONSERVATIVE_Z_EXPORT : 2; unsigned char DUAL_QUAD_DISABLE : 1; unsigned char PRIMITIVE_ORDERED_PIXEL_SHADER : 1; unsigned char EXEC_IF_OVERLAPPED : 1; unsigned char  : 2; unsigned char POPS_OVERLAP_NUM_SAMPLES : 3; unsigned short  : 9; } bitfields; struct { unsigned char Z_EXPORT_ENABLE : 1; unsigned char STENCIL_TEST_VAL_EXPORT_ENABLE : 1; unsigned char STENCIL_OP_VAL_EXPORT_ENABLE : 1; unsigned char  : 1; unsigned char Z_ORDER : 2; unsigned char KILL_ENABLE : 1; unsigned char COVERAGE_TO_MASK_ENABLE : 1; unsigned char MASK_EXPORT_ENABLE : 1; unsigned char EXEC_ON_HIER_FAIL : 1; unsigned char EXEC_ON_NOOP : 1; unsigned char ALPHA_TO_MASK_DISABLE : 1; unsigned char DEPTH_BEFORE_SHADER : 1; unsigned char CONSERVATIVE_Z_EXPORT : 2; unsigned char DUAL_QUAD_DISABLE : 1; unsigned char PRIMITIVE_ORDERED_PIXEL_SHADER : 1; unsigned char EXEC_IF_OVERLAPPED : 1; unsigned char  : 2; unsigned char POPS_OVERLAP_NUM_SAMPLES : 3; unsigned short  : 9; } bits; unsigned int u32All; int i32All; float f32All; } DB_SHADER_CONTROL; union DB_ALPHA_TO_MASK { struct { unsigned char ALPHA_TO_MASK_ENABLE : 1; unsigned char  : 7; unsigned char ALPHA_TO_MASK_OFFSET0 : 2; unsigned char ALPHA_TO_MASK_OFFSET1 : 2; unsigned char ALPHA_TO_MASK_OFFSET2 : 2; unsigned char ALPHA_TO_MASK_OFFSET3 : 2; unsigned char OFFSET_ROUND : 1; unsigned short  : 15; } bitfields; struct { unsigned char ALPHA_TO_MASK_ENABLE : 1; unsigned char  : 7; unsigned char ALPHA_TO_MASK_OFFSET0 : 2; unsigned char ALPHA_TO_MASK_OFFSET1 : 2; unsigned char ALPHA_TO_MASK_OFFSET2 : 2; unsigned char ALPHA_TO_MASK_OFFSET3 : 2; unsigned char OFFSET_ROUND : 1; unsigned short  : 15; } bits; unsigned int u32All; int i32All; float f32All; } DB_ALPHA_TO_MASK; union PA_CL_VS_OUT_CNTL { struct { unsigned char CLIP_DIST_ENA_0 : 1; unsigned char CLIP_DIST_ENA_1 : 1; unsigned char CLIP_DIST_ENA_2 : 1; unsigned char CLIP_DIST_ENA_3 : 1; unsigned char CLIP_DIST_ENA_4 : 1; unsigned char CLIP_DIST_ENA_5 : 1; unsigned char CLIP_DIST_ENA_6 : 1; unsigned char CLIP_DIST_ENA_7 : 1; unsigned char CULL_DIST_ENA_0 : 1; unsigned char CULL_DIST_ENA_1 : 1; unsigned char CULL_DIST_ENA_2 : 1; unsigned char CULL_DIST_ENA_3 : 1; unsigned char CULL_DIST_ENA_4 : 1; unsigned char CULL_DIST_ENA_5 : 1; unsigned char CULL_DIST_ENA_6 : 1; unsigned char CULL_DIST_ENA_7 : 1; unsigned char USE_VTX_POINT_SIZE : 1; unsigned char USE_VTX_EDGE_FLAG : 1; unsigned char USE_VTX_RENDER_TARGET_INDX : 1; unsigned char USE_VTX_VIEWPORT_INDX : 1; unsigned char USE_VTX_KILL_FLAG : 1; unsigned char VS_OUT_MISC_VEC_ENA : 1; unsigned char VS_OUT_CCDIST0_VEC_ENA : 1; unsigned char VS_OUT_CCDIST1_VEC_ENA : 1; unsigned char VS_OUT_MISC_SIDE_BUS_ENA : 1; unsigned char USE_VTX_GS_CUT_FLAG : 1; unsigned char USE_VTX_LINE_WIDTH : 1; unsigned char USE_VTX_SHD_OBJPRIM_ID : 1; unsigned char  : 4; } bitfields; struct { unsigned char CLIP_DIST_ENA_0 : 1; unsigned char CLIP_DIST_ENA_1 : 1; unsigned char CLIP_DIST_ENA_2 : 1; unsigned char CLIP_DIST_ENA_3 : 1; unsigned char CLIP_DIST_ENA_4 : 1; unsigned char CLIP_DIST_ENA_5 : 1; unsigned char CLIP_DIST_ENA_6 : 1; unsigned char CLIP_DIST_ENA_7 : 1; unsigned char CULL_DIST_ENA_0 : 1; unsigned char CULL_DIST_ENA_1 : 1; unsigned char CULL_DIST_ENA_2 : 1; unsigned char CULL_DIST_ENA_3 : 1; unsigned char CULL_DIST_ENA_4 : 1; unsigned char CULL_DIST_ENA_5 : 1; unsigned char CULL_DIST_ENA_6 : 1; unsigned char CULL_DIST_ENA_7 : 1; unsigned char USE_VTX_POINT_SIZE : 1; unsigned char USE_VTX_EDGE_FLAG : 1; unsigned char USE_VTX_RENDER_TARGET_INDX : 1; unsigned char USE_VTX_VIEWPORT_INDX : 1; unsigned char USE_VTX_KILL_FLAG : 1; unsigned char VS_OUT_MISC_VEC_ENA : 1; unsigned char VS_OUT_CCDIST0_VEC_ENA : 1; unsigned char VS_OUT_CCDIST1_VEC_ENA : 1; unsigned char VS_OUT_MISC_SIDE_BUS_ENA : 1; unsigned char USE_VTX_GS_CUT_FLAG : 1; unsigned char USE_VTX_LINE_WIDTH : 1; unsigned char USE_VTX_SHD_OBJPRIM_ID : 1; unsigned char  : 4; } bits; unsigned int u32All; int i32All; float f32All; } PA_CL_VS_OUT_CNTL; union PA_SC_MODE_CNTL_1 { struct { unsigned char WALK_SIZE : 1; unsigned char WALK_ALIGNMENT : 1; unsigned char WALK_ALIGN8_PRIM_FITS_ST : 1; unsigned char WALK_FENCE_ENABLE : 1; unsigned char WALK_FENCE_SIZE : 3; unsigned char SUPERTILE_WALK_ORDER_ENABLE : 1; unsigned char TILE_WALK_ORDER_ENABLE : 1; unsigned char TILE_COVER_DISABLE : 1; unsigned char TILE_COVER_NO_SCISSOR : 1; unsigned char ZMM_LINE_EXTENT : 1; unsigned char ZMM_LINE_OFFSET : 1; unsigned char ZMM_RECT_EXTENT : 1; unsigned char KILL_PIX_POST_HI_Z : 1; unsigned char KILL_PIX_POST_DETAIL_MASK : 1; unsigned char PS_ITER_SAMPLE : 1; unsigned char MULTI_SHADER_ENGINE_PRIM_DISCARD_ENABLE : 1; unsigned char MULTI_GPU_SUPERTILE_ENABLE : 1; unsigned char GPU_ID_OVERRIDE_ENABLE : 1; unsigned char GPU_ID_OVERRIDE : 4; unsigned char MULTI_GPU_PRIM_DISCARD_ENABLE : 1; unsigned char FORCE_EOV_CNTDWN_ENABLE : 1; unsigned char FORCE_EOV_REZ_ENABLE : 1; unsigned char OUT_OF_ORDER_PRIMITIVE_ENABLE : 1; unsigned char OUT_OF_ORDER_WATER_MARK : 3; unsigned char  : 1; } bitfields; struct { unsigned char WALK_SIZE : 1; unsigned char WALK_ALIGNMENT : 1; unsigned char WALK_ALIGN8_PRIM_FITS_ST : 1; unsigned char WALK_FENCE_ENABLE : 1; unsigned char WALK_FENCE_SIZE : 3; unsigned char SUPERTILE_WALK_ORDER_ENABLE : 1; unsigned char TILE_WALK_ORDER_ENABLE : 1; unsigned char TILE_COVER_DISABLE : 1; unsigned char TILE_COVER_NO_SCISSOR : 1; unsigned char ZMM_LINE_EXTENT : 1; unsigned char ZMM_LINE_OFFSET : 1; unsigned char ZMM_RECT_EXTENT : 1; unsigned char KILL_PIX_POST_HI_Z : 1; unsigned char KILL_PIX_POST_DETAIL_MASK : 1; unsigned char PS_ITER_SAMPLE : 1; unsigned char MULTI_SHADER_ENGINE_PRIM_DISCARD_ENABLE : 1; unsigned char MULTI_GPU_SUPERTILE_ENABLE : 1; unsigned char GPU_ID_OVERRIDE_ENABLE : 1; unsigned char GPU_ID_OVERRIDE : 4; unsigned char MULTI_GPU_PRIM_DISCARD_ENABLE : 1; unsigned char FORCE_EOV_CNTDWN_ENABLE : 1; unsigned char FORCE_EOV_REZ_ENABLE : 1; unsigned char OUT_OF_ORDER_PRIMITIVE_ENABLE : 1; unsigned char OUT_OF_ORDER_WATER_MARK : 3; unsigned char  : 1; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_MODE_CNTL_1; union PA_SC_AA_CONFIG { struct { unsigned char MSAA_NUM_SAMPLES : 3; unsigned char  : 1; unsigned char AA_MASK_CENTROID_DTMN : 1; unsigned char  : 8; unsigned char MAX_SAMPLE_DIST : 4; unsigned char  : 3; unsigned char MSAA_EXPOSED_SAMPLES : 3; unsigned char  : 1; unsigned char DETAIL_TO_EXPOSED_MODE : 2; unsigned char COVERAGE_TO_SHADER_SELECT : 2; unsigned char  : 4; } bitfields; struct { unsigned char MSAA_NUM_SAMPLES : 3; unsigned char  : 1; unsigned char AA_MASK_CENTROID_DTMN : 1; unsigned char  : 8; unsigned char MAX_SAMPLE_DIST : 4; unsigned char  : 3; unsigned char MSAA_EXPOSED_SAMPLES : 3; unsigned char  : 1; unsigned char DETAIL_TO_EXPOSED_MODE : 2; unsigned char COVERAGE_TO_SHADER_SELECT : 2; unsigned char  : 4; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_AA_CONFIG; union PA_SC_AA_MASK_X0Y0_X1Y0 { struct { unsigned short AA_MASK_X0Y0 : 16; unsigned short AA_MASK_X1Y0 : 16; } bitfields; struct { unsigned short AA_MASK_X0Y0 : 16; unsigned short AA_MASK_X1Y0 : 16; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_AA_MASK_X0Y0_X1Y0; union PA_SC_AA_MASK_X0Y1_X1Y1 { struct { unsigned short AA_MASK_X0Y1 : 16; unsigned short AA_MASK_X1Y1 : 16; } bitfields; struct { unsigned short AA_MASK_X0Y1 : 16; unsigned short AA_MASK_X1Y1 : 16; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_AA_MASK_X0Y1_X1Y1; union PA_SC_SHADER_CONTROL { struct { unsigned char REALIGN_DQUADS_AFTER_N_WAVES : 2; unsigned char LOAD_COLLISION_WAVEID : 1; unsigned char LOAD_INTRAWAVE_COLLISION : 1; unsigned int  : 28; } bitfields; struct { unsigned char REALIGN_DQUADS_AFTER_N_WAVES : 2; unsigned char LOAD_COLLISION_WAVEID : 1; unsigned char LOAD_INTRAWAVE_COLLISION : 1; unsigned int  : 28; } bits; unsigned int u32All; int i32All; float f32All; } PA_SC_SHADER_CONTROL; union SPI_PS_INPUT_CNTL_0 { struct { unsigned char OFFSET : 6; unsigned char  : 2; unsigned char DEFAULT_VAL : 2; unsigned char FLAT_SHADE : 1; unsigned char  : 2; unsigned char CYL_WRAP : 4; unsigned char PT_SPRITE_TEX : 1; unsigned char DUP : 1; unsigned char FP16_INTERP_MODE : 1; unsigned char USE_DEFAULT_ATTR1 : 1; unsigned char DEFAULT_VAL_ATTR1 : 2; unsigned char PT_SPRITE_TEX_ATTR1 : 1; unsigned char ATTR0_VALID : 1; unsigned char ATTR1_VALID : 1; unsigned char  : 6; } bitfields; struct { unsigned char OFFSET : 6; unsigned char  : 2; unsigned char DEFAULT_VAL : 2; unsigned char FLAT_SHADE : 1; unsigned char  : 2; unsigned char CYL_WRAP : 4; unsigned char PT_SPRITE_TEX : 1; unsigned char DUP : 1; unsigned char FP16_INTERP_MODE : 1; unsigned char USE_DEFAULT_ATTR1 : 1; unsigned char DEFAULT_VAL_ATTR1 : 2; unsigned char PT_SPRITE_TEX_ATTR1 : 1; unsigned char ATTR0_VALID : 1; unsigned char ATTR1_VALID : 1; unsigned char  : 6; } bits; unsigned int u32All; int i32All; float f32All; } SPI_PS_INPUT_CNTL[32]; union SPI_VS_OUT_CONFIG { struct { unsigned char  : 1; unsigned char VS_EXPORT_COUNT : 5; unsigned char VS_HALF_PACK : 1; unsigned int  : 25; } bitfields; struct { unsigned char  : 1; unsigned char VS_EXPORT_COUNT : 5; unsigned char VS_HALF_PACK : 1; unsigned int  : 25; } bits; unsigned int u32All; int i32All; float f32All; } SPI_VS_OUT_CONFIG; union SPI_PS_INPUT_ENA { struct { unsigned char PERSP_SAMPLE_ENA : 1; unsigned char PERSP_CENTER_ENA : 1; unsigned char PERSP_CENTROID_ENA : 1; unsigned char PERSP_PULL_MODEL_ENA : 1; unsigned char LINEAR_SAMPLE_ENA : 1; unsigned char LINEAR_CENTER_ENA : 1; unsigned char LINEAR_CENTROID_ENA : 1; unsigned char LINE_STIPPLE_TEX_ENA : 1; unsigned char POS_X_FLOAT_ENA : 1; unsigned char POS_Y_FLOAT_ENA : 1; unsigned char POS_Z_FLOAT_ENA : 1; unsigned char POS_W_FLOAT_ENA : 1; unsigned char FRONT_FACE_ENA : 1; unsigned char ANCILLARY_ENA : 1; unsigned char SAMPLE_COVERAGE_ENA : 1; unsigned char POS_FIXED_PT_ENA : 1; unsigned short  : 16; } bitfields; struct { unsigned char PERSP_SAMPLE_ENA : 1; unsigned char PERSP_CENTER_ENA : 1; unsigned char PERSP_CENTROID_ENA : 1; unsigned char PERSP_PULL_MODEL_ENA : 1; unsigned char LINEAR_SAMPLE_ENA : 1; unsigned char LINEAR_CENTER_ENA : 1; unsigned char LINEAR_CENTROID_ENA : 1; unsigned char LINE_STIPPLE_TEX_ENA : 1; unsigned char POS_X_FLOAT_ENA : 1; unsigned char POS_Y_FLOAT_ENA : 1; unsigned char POS_Z_FLOAT_ENA : 1; unsigned char POS_W_FLOAT_ENA : 1; unsigned char FRONT_FACE_ENA : 1; unsigned char ANCILLARY_ENA : 1; unsigned char SAMPLE_COVERAGE_ENA : 1; unsigned char POS_FIXED_PT_ENA : 1; unsigned short  : 16; } bits; unsigned int u32All; int i32All; float f32All; } SPI_PS_INPUT_ENA; union SPI_PS_INPUT_ADDR { struct { unsigned char PERSP_SAMPLE_ENA : 1; unsigned char PERSP_CENTER_ENA : 1; unsigned char PERSP_CENTROID_ENA : 1; unsigned char PERSP_PULL_MODEL_ENA : 1; unsigned char LINEAR_SAMPLE_ENA : 1; unsigned char LINEAR_CENTER_ENA : 1; unsigned char LINEAR_CENTROID_ENA : 1; unsigned char LINE_STIPPLE_TEX_ENA : 1; unsigned char POS_X_FLOAT_ENA : 1; unsigned char POS_Y_FLOAT_ENA : 1; unsigned char POS_Z_FLOAT_ENA : 1; unsigned char POS_W_FLOAT_ENA : 1; unsigned char FRONT_FACE_ENA : 1; unsigned char ANCILLARY_ENA : 1; unsigned char SAMPLE_COVERAGE_ENA : 1; unsigned char POS_FIXED_PT_ENA : 1; unsigned short  : 16; } bitfields; struct { unsigned char PERSP_SAMPLE_ENA : 1; unsigned char PERSP_CENTER_ENA : 1; unsigned char PERSP_CENTROID_ENA : 1; unsigned char PERSP_PULL_MODEL_ENA : 1; unsigned char LINEAR_SAMPLE_ENA : 1; unsigned char LINEAR_CENTER_ENA : 1; unsigned char LINEAR_CENTROID_ENA : 1; unsigned char LINE_STIPPLE_TEX_ENA : 1; unsigned char POS_X_FLOAT_ENA : 1; unsigned char POS_Y_FLOAT_ENA : 1; unsigned char POS_Z_FLOAT_ENA : 1; unsigned char POS_W_FLOAT_ENA : 1; unsigned char FRONT_FACE_ENA : 1; unsigned char ANCILLARY_ENA : 1; unsigned char SAMPLE_COVERAGE_ENA : 1; unsigned char POS_FIXED_PT_ENA : 1; unsigned short  : 16; } bits; unsigned int u32All; int i32All; float f32All; } SPI_PS_INPUT_ADDR; union SPI_INTERP_CONTROL_0 { struct { unsigned char FLAT_SHADE_ENA : 1; unsigned char PNT_SPRITE_ENA : 1; unsigned char PNT_SPRITE_OVRD_X : 3; unsigned char PNT_SPRITE_OVRD_Y : 3; unsigned char PNT_SPRITE_OVRD_Z : 3; unsigned char PNT_SPRITE_OVRD_W : 3; unsigned char PNT_SPRITE_TOP_1 : 1; unsigned int  : 17; } bitfields; struct { unsigned char FLAT_SHADE_ENA : 1; unsigned char PNT_SPRITE_ENA : 1; unsigned char PNT_SPRITE_OVRD_X : 3; unsigned char PNT_SPRITE_OVRD_Y : 3; unsigned char PNT_SPRITE_OVRD_Z : 3; unsigned char PNT_SPRITE_OVRD_W : 3; unsigned char PNT_SPRITE_TOP_1 : 1; unsigned int  : 17; } bits; unsigned int u32All; int i32All; float f32All; } SPI_INTERP_CONTROL_0; union SPI_PS_IN_CONTROL { struct { unsigned char NUM_INTERP : 6; unsigned char PARAM_GEN : 1; unsigned char OFFCHIP_PARAM_EN : 1; unsigned char LATE_PC_DEALLOC : 1; unsigned char  : 5; unsigned char BC_OPTIMIZE_DISABLE : 1; unsigned int  : 17; } bitfields; struct { unsigned char NUM_INTERP : 6; unsigned char PARAM_GEN : 1; unsigned char OFFCHIP_PARAM_EN : 1; unsigned char LATE_PC_DEALLOC : 1; unsigned char  : 5; unsigned char BC_OPTIMIZE_DISABLE : 1; unsigned int  : 17; } bits; unsigned int u32All; int i32All; float f32All; } SPI_PS_IN_CONTROL; union SPI_BARYC_CNTL { struct { unsigned char PERSP_CENTER_CNTL : 1; unsigned char  : 3; unsigned char PERSP_CENTROID_CNTL : 1; unsigned char  : 3; unsigned char LINEAR_CENTER_CNTL : 1; unsigned char  : 3; unsigned char LINEAR_CENTROID_CNTL : 1; unsigned char  : 3; unsigned char POS_FLOAT_LOCATION : 2; unsigned char  : 2; unsigned char POS_FLOAT_ULC : 1; unsigned char  : 3; unsigned char FRONT_FACE_ALL_BITS : 1; unsigned char  : 7; } bitfields; struct { unsigned char PERSP_CENTER_CNTL : 1; unsigned char  : 3; unsigned char PERSP_CENTROID_CNTL : 1; unsigned char  : 3; unsigned char LINEAR_CENTER_CNTL : 1; unsigned char  : 3; unsigned char LINEAR_CENTROID_CNTL : 1; unsigned char  : 3; unsigned char POS_FLOAT_LOCATION : 2; unsigned char  : 2; unsigned char POS_FLOAT_ULC : 1; unsigned char  : 3; unsigned char FRONT_FACE_ALL_BITS : 1; unsigned char  : 7; } bits; unsigned int u32All; int i32All; float f32All; } SPI_BARYC_CNTL; union SPI_TMPRING_SIZE { struct { unsigned short WAVES : 12; unsigned short WAVESIZE : 13; unsigned char  : 7; } bitfields; struct { unsigned short WAVES : 12; unsigned short WAVESIZE : 13; unsigned char  : 7; } bits; unsigned int u32All; int i32All; float f32All; } SPI_TMPRING_SIZE; union SPI_SHADER_POS_FORMAT { struct { unsigned char POS0_EXPORT_FORMAT : 4; unsigned char POS1_EXPORT_FORMAT : 4; unsigned char POS2_EXPORT_FORMAT : 4; unsigned char POS3_EXPORT_FORMAT : 4; unsigned short  : 16; } bitfields; struct { unsigned char POS0_EXPORT_FORMAT : 4; unsigned char POS1_EXPORT_FORMAT : 4; unsigned char POS2_EXPORT_FORMAT : 4; unsigned char POS3_EXPORT_FORMAT : 4; unsigned short  : 16; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_POS_FORMAT; union SPI_SHADER_Z_FORMAT { struct { unsigned char Z_EXPORT_FORMAT : 4; unsigned int  : 28; } bitfields; struct { unsigned char Z_EXPORT_FORMAT : 4; unsigned int  : 28; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_Z_FORMAT; union SPI_SHADER_COL_FORMAT { struct { unsigned char COL0_EXPORT_FORMAT : 4; unsigned char COL1_EXPORT_FORMAT : 4; unsigned char COL2_EXPORT_FORMAT : 4; unsigned char COL3_EXPORT_FORMAT : 4; unsigned char COL4_EXPORT_FORMAT : 4; unsigned char COL5_EXPORT_FORMAT : 4; unsigned char COL6_EXPORT_FORMAT : 4; unsigned char COL7_EXPORT_FORMAT : 4; } bitfields; struct { unsigned char COL0_EXPORT_FORMAT : 4; unsigned char COL1_EXPORT_FORMAT : 4; unsigned char COL2_EXPORT_FORMAT : 4; unsigned char COL3_EXPORT_FORMAT : 4; unsigned char COL4_EXPORT_FORMAT : 4; unsigned char COL5_EXPORT_FORMAT : 4; unsigned char COL6_EXPORT_FORMAT : 4; unsigned char COL7_EXPORT_FORMAT : 4; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_COL_FORMAT; union SX_PS_DOWNCONVERT { struct { unsigned char MRT0 : 4; unsigned char MRT1 : 4; unsigned char MRT2 : 4; unsigned char MRT3 : 4; unsigned char MRT4 : 4; unsigned char MRT5 : 4; unsigned char MRT6 : 4; unsigned char MRT7 : 4; } bitfields; struct { unsigned char MRT0 : 4; unsigned char MRT1 : 4; unsigned char MRT2 : 4; unsigned char MRT3 : 4; unsigned char MRT4 : 4; unsigned char MRT5 : 4; unsigned char MRT6 : 4; unsigned char MRT7 : 4; } bits; unsigned int u32All; int i32All; float f32All; } SX_PS_DOWNCONVERT; union SX_BLEND_OPT_EPSILON { struct { unsigned char MRT0_EPSILON : 4; unsigned char MRT1_EPSILON : 4; unsigned char MRT2_EPSILON : 4; unsigned char MRT3_EPSILON : 4; unsigned char MRT4_EPSILON : 4; unsigned char MRT5_EPSILON : 4; unsigned char MRT6_EPSILON : 4; unsigned char MRT7_EPSILON : 4; } bitfields; struct { unsigned char MRT0_EPSILON : 4; unsigned char MRT1_EPSILON : 4; unsigned char MRT2_EPSILON : 4; unsigned char MRT3_EPSILON : 4; unsigned char MRT4_EPSILON : 4; unsigned char MRT5_EPSILON : 4; unsigned char MRT6_EPSILON : 4; unsigned char MRT7_EPSILON : 4; } bits; unsigned int u32All; int i32All; float f32All; } SX_BLEND_OPT_EPSILON; union SX_BLEND_OPT_CONTROL { struct { unsigned char MRT0_COLOR_OPT_DISABLE : 1; unsigned char MRT0_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT1_COLOR_OPT_DISABLE : 1; unsigned char MRT1_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT2_COLOR_OPT_DISABLE : 1; unsigned char MRT2_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT3_COLOR_OPT_DISABLE : 1; unsigned char MRT3_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT4_COLOR_OPT_DISABLE : 1; unsigned char MRT4_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT5_COLOR_OPT_DISABLE : 1; unsigned char MRT5_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT6_COLOR_OPT_DISABLE : 1; unsigned char MRT6_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT7_COLOR_OPT_DISABLE : 1; unsigned char MRT7_ALPHA_OPT_DISABLE : 1; unsigned char  : 1; unsigned char PIXEN_ZERO_OPT_DISABLE : 1; } bitfields; struct { unsigned char MRT0_COLOR_OPT_DISABLE : 1; unsigned char MRT0_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT1_COLOR_OPT_DISABLE : 1; unsigned char MRT1_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT2_COLOR_OPT_DISABLE : 1; unsigned char MRT2_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT3_COLOR_OPT_DISABLE : 1; unsigned char MRT3_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT4_COLOR_OPT_DISABLE : 1; unsigned char MRT4_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT5_COLOR_OPT_DISABLE : 1; unsigned char MRT5_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT6_COLOR_OPT_DISABLE : 1; unsigned char MRT6_ALPHA_OPT_DISABLE : 1; unsigned char  : 2; unsigned char MRT7_COLOR_OPT_DISABLE : 1; unsigned char MRT7_ALPHA_OPT_DISABLE : 1; unsigned char  : 1; unsigned char PIXEN_ZERO_OPT_DISABLE : 1; } bits; unsigned int u32All; int i32All; float f32All; } SX_BLEND_OPT_CONTROL; union SX_MRT0_BLEND_OPT { struct { unsigned char COLOR_SRC_OPT : 3; unsigned char  : 1; unsigned char COLOR_DST_OPT : 3; unsigned char  : 1; unsigned char COLOR_COMB_FCN : 3; unsigned char  : 5; unsigned char ALPHA_SRC_OPT : 3; unsigned char  : 1; unsigned char ALPHA_DST_OPT : 3; unsigned char  : 1; unsigned char ALPHA_COMB_FCN : 3; unsigned char  : 5; } bitfields; struct { unsigned char COLOR_SRC_OPT : 3; unsigned char  : 1; unsigned char COLOR_DST_OPT : 3; unsigned char  : 1; unsigned char COLOR_COMB_FCN : 3; unsigned char  : 5; unsigned char ALPHA_SRC_OPT : 3; unsigned char  : 1; unsigned char ALPHA_DST_OPT : 3; unsigned char  : 1; unsigned char ALPHA_COMB_FCN : 3; unsigned char  : 5; } bits; unsigned int u32All; int i32All; float f32All; } SX_MRT_BLEND_OPT_MRT[8]; union VGT_HOS_MAX_TESS_LEVEL { struct { unsigned int MAX_TESS : 32; } bitfields; struct { unsigned int MAX_TESS : 32; } bits; unsigned int u32All; int i32All; float f32All; } VGT_HOS_MAX_TESS_LEVEL; union VGT_HOS_MIN_TESS_LEVEL { struct { unsigned int MIN_TESS : 32; } bitfields; struct { unsigned int MIN_TESS : 32; } bits; unsigned int u32All; int i32All; float f32All; } VGT_HOS_MIN_TESS_LEVEL; union VGT_PRIMITIVEID_EN { struct { unsigned char PRIMITIVEID_EN : 1; unsigned char DISABLE_RESET_ON_EOI : 1; unsigned char NGG_DISABLE_PROVOK_REUSE : 1; unsigned int  : 29; } bitfields; struct { unsigned char PRIMITIVEID_EN : 1; unsigned char DISABLE_RESET_ON_EOI : 1; unsigned char NGG_DISABLE_PROVOK_REUSE : 1; unsigned int  : 29; } bits; unsigned int u32All; int i32All; float f32All; } VGT_PRIMITIVEID_EN; union VGT_SHADER_STAGES_EN { struct { unsigned char LS_EN : 2; unsigned char HS_EN : 1; unsigned char ES_EN : 2; unsigned char GS_EN : 1; unsigned char VS_EN : 2; unsigned char  : 1; unsigned char DISPATCH_DRAW_EN : 1; unsigned char DIS_DEALLOC_ACCUM_0 : 1; unsigned char DIS_DEALLOC_ACCUM_1 : 1; unsigned char VS_WAVE_ID_EN : 1; unsigned char PRIMGEN_EN : 1; unsigned char ORDERED_ID_MODE : 1; unsigned char MAX_PRIMGRP_IN_WAVE : 4; unsigned char GS_FAST_LAUNCH : 1; unsigned short  : 12; } bitfields; struct { unsigned char LS_EN : 2; unsigned char HS_EN : 1; unsigned char ES_EN : 2; unsigned char GS_EN : 1; unsigned char VS_EN : 2; unsigned char  : 1; unsigned char DISPATCH_DRAW_EN : 1; unsigned char DIS_DEALLOC_ACCUM_0 : 1; unsigned char DIS_DEALLOC_ACCUM_1 : 1; unsigned char VS_WAVE_ID_EN : 1; unsigned char PRIMGEN_EN : 1; unsigned char ORDERED_ID_MODE : 1; unsigned char MAX_PRIMGRP_IN_WAVE : 4; unsigned char GS_FAST_LAUNCH : 1; unsigned short  : 12; } bits; unsigned int u32All; int i32All; float f32All; } VGT_SHADER_STAGES_EN; union VGT_LS_HS_CONFIG { struct { unsigned char NUM_PATCHES : 8; unsigned char HS_NUM_INPUT_CP : 6; unsigned char HS_NUM_OUTPUT_CP : 6; unsigned short  : 12; } bitfields; struct { unsigned char NUM_PATCHES : 8; unsigned char HS_NUM_INPUT_CP : 6; unsigned char HS_NUM_OUTPUT_CP : 6; unsigned short  : 12; } bits; unsigned int u32All; int i32All; float f32All; } VGT_LS_HS_CONFIG; union VGT_TF_PARAM { struct { unsigned char TYPE : 2; unsigned char PARTITIONING : 3; unsigned char TOPOLOGY : 3; unsigned char RESERVED_REDUC_AXIS : 1; unsigned char DEPRECATED : 1; unsigned char  : 4; unsigned char DISABLE_DONUTS : 1; unsigned char RDREQ_POLICY : 1; unsigned char  : 1; unsigned char DISTRIBUTION_MODE : 2; unsigned short  : 13; } bitfields; struct { unsigned char TYPE : 2; unsigned char PARTITIONING : 3; unsigned char TOPOLOGY : 3; unsigned char RESERVED_REDUC_AXIS : 1; unsigned char DEPRECATED : 1; unsigned char  : 4; unsigned char DISABLE_DONUTS : 1; unsigned char RDREQ_POLICY : 1; unsigned char  : 1; unsigned char DISTRIBUTION_MODE : 2; unsigned short  : 13; } bits; unsigned int u32All; int i32All; float f32All; } VGT_TF_PARAM; } currRenderPipelineHwCtxRegs; struct GFX9_RenderPipelineHwShRegsRec { union SPI_SHADER_PGM_RSRC3_VS { struct { unsigned short CU_EN : 16; unsigned char WAVE_LIMIT : 6; unsigned char LOCK_LOW_THRESHOLD : 4; unsigned char SIMD_DISABLE : 4; unsigned char  : 2; } bitfields; struct { unsigned short CU_EN : 16; unsigned char WAVE_LIMIT : 6; unsigned char LOCK_LOW_THRESHOLD : 4; unsigned char SIMD_DISABLE : 4; unsigned char  : 2; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_RSRC3_VS; union SPI_SHADER_LATE_ALLOC_VS { struct { unsigned char LIMIT : 6; unsigned int  : 26; } bitfields; struct { unsigned char LIMIT : 6; unsigned int  : 26; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_LATE_ALLOC_VS; union SPI_SHADER_PGM_LO_VS { struct { unsigned int MEM_BASE : 32; } bitfields; struct { unsigned int MEM_BASE : 32; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_LO_VS; union SPI_SHADER_PGM_HI_VS { struct { unsigned char MEM_BASE : 8; } bitfields; struct { unsigned char MEM_BASE : 8; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_HI_VS; union SPI_SHADER_PGM_RSRC1_VS { struct { unsigned char VGPRS : 6; unsigned char SGPRS : 4; unsigned char PRIORITY : 2; unsigned char FLOAT_MODE : 8; unsigned char PRIV : 1; unsigned char DX10_CLAMP : 1; unsigned char DEBUG_MODE : 1; unsigned char IEEE_MODE : 1; unsigned char VGPR_COMP_CNT : 2; unsigned char CU_GROUP_ENABLE : 1; unsigned char  : 3; unsigned char CDBG_USER : 1; unsigned char FP16_OVFL : 1; } bitfields; struct { unsigned char VGPRS : 6; unsigned char SGPRS : 4; unsigned char PRIORITY : 2; unsigned char FLOAT_MODE : 8; unsigned char PRIV : 1; unsigned char DX10_CLAMP : 1; unsigned char DEBUG_MODE : 1; unsigned char IEEE_MODE : 1; unsigned char VGPR_COMP_CNT : 2; unsigned char CU_GROUP_ENABLE : 1; unsigned char  : 3; unsigned char CDBG_USER : 1; unsigned char FP16_OVFL : 1; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_RSRC1_VS; union SPI_SHADER_PGM_RSRC2_VS { struct { unsigned char SCRATCH_EN : 1; unsigned char USER_SGPR : 5; unsigned char TRAP_PRESENT : 1; unsigned char OC_LDS_EN : 1; unsigned char SO_BASE0_EN : 1; unsigned char SO_BASE1_EN : 1; unsigned char SO_BASE2_EN : 1; unsigned char SO_BASE3_EN : 1; unsigned char SO_EN : 1; unsigned short EXCP_EN : 9; unsigned char PC_BASE_EN : 1; unsigned char  : 1; unsigned char DISPATCH_DRAW_EN : 1; unsigned char  : 2; unsigned char SKIP_USGPR0 : 1; unsigned char USER_SGPR_MSB : 1; unsigned char  : 3; } bitfields; struct { unsigned char SCRATCH_EN : 1; unsigned char USER_SGPR : 5; unsigned char TRAP_PRESENT : 1; unsigned char OC_LDS_EN : 1; unsigned char SO_BASE0_EN : 1; unsigned char SO_BASE1_EN : 1; unsigned char SO_BASE2_EN : 1; unsigned char SO_BASE3_EN : 1; unsigned char SO_EN : 1; unsigned short EXCP_EN : 9; unsigned char PC_BASE_EN : 1; unsigned char  : 1; unsigned char DISPATCH_DRAW_EN : 1; unsigned char  : 2; unsigned char SKIP_USGPR0 : 1; unsigned char USER_SGPR_MSB : 1; unsigned char  : 3; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_RSRC2_VS; union SPI_SHADER_PGM_LO_PS { struct { unsigned int MEM_BASE : 32; } bitfields; struct { unsigned int MEM_BASE : 32; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_LO_PS; union SPI_SHADER_PGM_HI_PS { struct { unsigned char MEM_BASE : 8; } bitfields; struct { unsigned char MEM_BASE : 8; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_HI_PS; union SPI_SHADER_PGM_RSRC1_PS { struct { unsigned char VGPRS : 6; unsigned char SGPRS : 4; unsigned char PRIORITY : 2; unsigned char FLOAT_MODE : 8; unsigned char PRIV : 1; unsigned char DX10_CLAMP : 1; unsigned char DEBUG_MODE : 1; unsigned char IEEE_MODE : 1; unsigned char CU_GROUP_DISABLE : 1; unsigned char  : 3; unsigned char CDBG_USER : 1; unsigned char FP16_OVFL : 1; unsigned char  : 2; } bitfields; struct { unsigned char VGPRS : 6; unsigned char SGPRS : 4; unsigned char PRIORITY : 2; unsigned char FLOAT_MODE : 8; unsigned char PRIV : 1; unsigned char DX10_CLAMP : 1; unsigned char DEBUG_MODE : 1; unsigned char IEEE_MODE : 1; unsigned char CU_GROUP_DISABLE : 1; unsigned char  : 3; unsigned char CDBG_USER : 1; unsigned char FP16_OVFL : 1; unsigned char  : 2; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_RSRC1_PS; union SPI_SHADER_PGM_RSRC2_PS { struct { unsigned char SCRATCH_EN : 1; unsigned char USER_SGPR : 5; unsigned char TRAP_PRESENT : 1; unsigned char WAVE_CNT_EN : 1; unsigned char EXTRA_LDS_SIZE : 8; unsigned short EXCP_EN : 9; unsigned char LOAD_COLLISION_WAVEID : 1; unsigned char LOAD_INTRAWAVE_COLLISION : 1; unsigned char SKIP_USGPR0 : 1; unsigned char USER_SGPR_MSB : 1; unsigned char  : 3; } bitfields; struct { unsigned char SCRATCH_EN : 1; unsigned char USER_SGPR : 5; unsigned char TRAP_PRESENT : 1; unsigned char WAVE_CNT_EN : 1; unsigned char EXTRA_LDS_SIZE : 8; unsigned short EXCP_EN : 9; unsigned char LOAD_COLLISION_WAVEID : 1; unsigned char LOAD_INTRAWAVE_COLLISION : 1; unsigned char SKIP_USGPR0 : 1; unsigned char USER_SGPR_MSB : 1; unsigned char  : 3; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_RSRC2_PS; union SPI_SHADER_PGM_LO_LS { struct { unsigned int MEM_BASE : 32; } bitfields; struct { unsigned int MEM_BASE : 32; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_LO_LS; union SPI_SHADER_PGM_HI_LS { struct { unsigned char MEM_BASE : 8; } bitfields; struct { unsigned char MEM_BASE : 8; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_HI_LS; union SPI_SHADER_PGM_LO_HS { struct { unsigned int MEM_BASE : 32; } bitfields; struct { unsigned int MEM_BASE : 32; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_LO_HS; union SPI_SHADER_PGM_HI_HS { struct { unsigned char MEM_BASE : 8; } bitfields; struct { unsigned char MEM_BASE : 8; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_HI_HS; union SPI_SHADER_PGM_RSRC1_HS { struct { unsigned char VGPRS : 6; unsigned char SGPRS : 4; unsigned char PRIORITY : 2; unsigned char FLOAT_MODE : 8; unsigned char PRIV : 1; unsigned char DX10_CLAMP : 1; unsigned char DEBUG_MODE : 1; unsigned char IEEE_MODE : 1; unsigned char  : 3; unsigned char CDBG_USER : 1; unsigned char LS_VGPR_COMP_CNT : 2; unsigned char FP16_OVFL : 1; unsigned char  : 1; } bitfields; struct { unsigned char VGPRS : 6; unsigned char SGPRS : 4; unsigned char PRIORITY : 2; unsigned char FLOAT_MODE : 8; unsigned char PRIV : 1; unsigned char DX10_CLAMP : 1; unsigned char DEBUG_MODE : 1; unsigned char IEEE_MODE : 1; unsigned char  : 3; unsigned char CDBG_USER : 1; unsigned char LS_VGPR_COMP_CNT : 2; unsigned char FP16_OVFL : 1; unsigned char  : 1; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_RSRC1_HS; union SPI_SHADER_PGM_RSRC2_HS { struct { unsigned char SCRATCH_EN : 1; unsigned char USER_SGPR : 5; unsigned char TRAP_PRESENT : 1; unsigned short EXCP_EN : 9; unsigned short LDS_SIZE : 9; unsigned char  : 2; unsigned char SKIP_USGPR0 : 1; unsigned char USER_SGPR_MSB : 1; unsigned char  : 3; } bitfields; struct { unsigned char SCRATCH_EN : 1; unsigned char USER_SGPR : 5; unsigned char TRAP_PRESENT : 1; unsigned short EXCP_EN : 9; unsigned short LDS_SIZE : 9; unsigned char  : 2; unsigned char SKIP_USGPR0 : 1; unsigned char USER_SGPR_MSB : 1; unsigned char  : 3; } bits; unsigned int u32All; int i32All; float f32All; } SPI_SHADER_PGM_RSRC2_HS; } currRenderPipelineHwShRegs; struct { struct { GFX9AMD_MtlTexture *texture; GFX9AMD_MtlTexture *resolveTexture; unsigned short layer; unsigned char level; unsigned char loadAction; unsigned short resolveLayer; unsigned char resolveLevel; unsigned char storeAction; unsigned long long storeActionOptions; union { double clearColor[4]; float clearDepth; unsigned int clearStencil; } clearValue; unsigned long long depthResolveFilter; unsigned long long stencilResolveFilter; } attachments[10]; unsigned short attachmentsMask; unsigned short pad; unsigned int renderTargetLength; unsigned int packedColorClearValues[8][2]; unsigned short attachFastCleared; unsigned short clearTcCompatible; union { struct { unsigned char S0_X : 4; unsigned char S0_Y : 4; unsigned char S1_X : 4; unsigned char S1_Y : 4; unsigned char S2_X : 4; unsigned char S2_Y : 4; unsigned char S3_X : 4; unsigned char S3_Y : 4; } bits; unsigned int u32All; } hwSampleLocs[4]; } loadStoreInfo; struct { unsigned int *dbCountControlRegPtr; unsigned long long stagingAddress; unsigned long long resultBaseAddress; unsigned long long resultOffset; unsigned long long mode; unsigned short initClearOffset; unsigned short numSamples; unsigned int ringTail; unsigned long long resultOffsets[256]; } hwZPassInfo; struct { union VGT_PRIMITIVE_TYPE { struct { unsigned char PRIM_TYPE : 6; unsigned int  : 26; } bitfields; struct { unsigned char PRIM_TYPE : 6; unsigned int  : 26; } bits; unsigned int u32All; int i32All; float f32All; } VGT_PRIMITIVE_TYPE; union VGT_INDEX_TYPE { struct { unsigned char INDEX_TYPE : 2; unsigned char  : 6; unsigned char PRIMGEN_EN : 1; unsigned int  : 23; } bitfields; struct { unsigned char INDEX_TYPE : 2; unsigned char  : 6; unsigned char PRIMGEN_EN : 1; unsigned int  : 23; } bits; unsigned int u32All; int i32All; float f32All; } VGT_INDEX_TYPE; union VGT_NUM_INSTANCES { struct { unsigned int NUM_INSTANCES : 32; } bitfields; struct { unsigned int NUM_INSTANCES : 32; } bits; unsigned int u32All; int i32All; float f32All; } VGT_NUM_INSTANCES; union VGT_NUM_INDICES { struct { unsigned int NUM_INDICES : 32; } bitfields; struct { unsigned int NUM_INDICES : 32; } bits; unsigned int u32All; int i32All; float f32All; } VGT_NUM_INDICES; union VGT_DRAW_INITIATOR { struct { unsigned char SOURCE_SELECT : 2; unsigned char MAJOR_MODE : 2; unsigned char SPRITE_EN_R6XX : 1; unsigned char NOT_EOP : 1; unsigned char USE_OPAQUE : 1; unsigned char UNROLLED_INST : 1; unsigned char GRBM_SKEW_NO_DEC : 1; unsigned int  : 20; unsigned char REG_RT_INDEX : 3; } bitfields; struct { unsigned char SOURCE_SELECT : 2; unsigned char MAJOR_MODE : 2; unsigned char SPRITE_EN_R6XX : 1; unsigned char NOT_EOP : 1; unsigned char USE_OPAQUE : 1; unsigned char UNROLLED_INST : 1; unsigned char GRBM_SKEW_NO_DEC : 1; unsigned int  : 20; unsigned char REG_RT_INDEX : 3; } bits; unsigned int u32All; int i32All; float f32All; } VGT_DRAW_INITIATOR; } currHwDrawSeqRegs; struct GFX9_DrawDispatchTableRec *drawDispatchTable; struct GFX9_MtlStatistics *statsMgr; struct AMD_MtlThreadTrace *pThreadTrace; struct AMD_MtlSPMTrace *pSpmTrace; GFX9_MtlRenderPipelineState *gfx9MtlPipelineState; unsigned int currPsoRegsId; struct { union { unsigned short u16All; struct { unsigned char DX_RASTERIZATION_KILL : 1; unsigned char MSAA_ENABLE : 1; unsigned char FORCE_DST_ALPHA_1 : 1; unsigned short unused : 13; } ; } ; } currPartialCtxRegKey; struct GFX9_TessConstsRec { float scaleFactor; unsigned int instanceStride; } tessConsts; unsigned int lastBaseVertex; unsigned int lastBaseInstance; unsigned int icbPsoStamp; unsigned char lastDrawBaseStage; unsigned char currDrawBaseStage; unsigned long long hwIndexBufGpuAddr; struct { unsigned int viewportArrayIndexOffset; unsigned int renderTargetArrayIndexOffset; } ampViewMappings[2]; union { unsigned char useDrawLoop; struct { unsigned char vsUsesDrawLoop : 1; unsigned char psUsesDrawLoop : 1; } ; } ; unsigned char hasDepthAttachment : 1; unsigned char hasStencilAttachment : 1; unsigned char depthWasWrittenTo : 1; unsigned char maxInterpolantsUsed : 6; unsigned char shaderWritesToRsrc : 1; unsigned char forceDstAlphaToOne : 1; unsigned char currMtlIndexType : 3; unsigned char currPipelineUsesTess : 1; unsigned char usingViewportArrayIndex : 1; unsigned char preRenderPassSurfSyncRequired : 1; unsigned char shaderWritesHappened : 1; unsigned char usingCustomSamplePositions : 1; unsigned char currPsoUseIndirectCmdBuffer : 1; unsigned char childEncoder : 1; unsigned char setScissorRectWaOnCtxRegWrite : 1; unsigned char vportScissorEnable : 1; unsigned char amplificationCount : 2; unsigned char drawLoopInit : 1; unsigned char counterSampling : 3; unsigned char reserved : 3; union { struct { unsigned char scissorDirty : 1; unsigned char scissorRectWaRequired : 1; unsigned char drawLoopDirty : 1; unsigned char bufStridesDirty : 1; unsigned int reserved : 28; } ; unsigned int value; } dirtyFlags; unsigned char renderTargetsExpanded; unsigned char restartEnableAutoIndexedPrimTypes; unsigned char restartEnabledIndexedPrimTypes; unsigned char canUse4xPrimTypesRestartEnabled; unsigned char canUse4xPrimTypesRestartDisabled; MTLIOAccelResource *shaderRsrc; MTLIOAccelResource *tempBufRsrc; MTLIOAccelResource *cmdBufRsrc; unsigned long long shaderOffset; unsigned long long tempOffset; unsigned long long cmdBufOffset; unsigned int renderTargetWidth; unsigned int renderTargetHeight; unsigned long long cmdBufGlblTraceObjID; struct __IOAccelDevice *amdMtlDeviceRef; unsigned short renderTargetsId[8]; unsigned int rtWithDCCThatMightNeedExpandMask; void *apiLayerData; struct GFX9_RsrcMgrRec *objectShaderRsrcMgr; struct GFX9_RsrcMgrRec *meshShaderRsrcMgr; struct GFX9_RsrcMgrRec *dispatchRsrcMgr; struct GFX9_RsrcMgrRec *currStageRsrcMgr; struct *meshEmuHeader; unsigned int dynamicObjectThreadgroupMemoryLength[32]; unsigned int dynamicMeshThreadgroupMemoryLength[32]; GFX9AMD_MtlBuffer *meshIntermediateBuffer; } m_members;
}

@property (readonly) id<MTLDevice> device;
@property (copy) NSString *label;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long tileWidth;
@property (readonly) unsigned long long tileHeight;

- (void)dealloc;
- (void)setObjectBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setScissorRect:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })a0;
- (void)setTileSamplerStates:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setVertexBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)useHeap:(id)a0 stages:(unsigned long long)a1;
- (void)setMeshSamplerStates:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setVisibilityResultMode:(unsigned long long)a0 offset:(unsigned long long)a1;
- (void)useHeaps:(const id *)a0 count:(unsigned long long)a1;
- (void)addSplitHandler:(id /* block */)a0;
- (void)dispatchThreadsPerTile:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0;
- (void)drawIndexedPatches:(unsigned long long)a0 patchIndexBuffer:(id)a1 patchIndexBufferOffset:(unsigned long long)a2 controlPointIndexBuffer:(id)a3 controlPointIndexBufferOffset:(unsigned long long)a4 indirectBuffer:(id)a5 indirectBufferOffset:(unsigned long long)a6;
- (void)drawIndexedPatches:(unsigned long long)a0 patchStart:(unsigned long long)a1 patchCount:(unsigned long long)a2 patchIndexBuffer:(id)a3 patchIndexBufferOffset:(unsigned long long)a4 controlPointIndexBuffer:(id)a5 controlPointIndexBufferOffset:(unsigned long long)a6 instanceCount:(unsigned long long)a7 baseInstance:(unsigned long long)a8;
- (void)drawIndexedPrimitives:(unsigned long long)a0 indexCount:(unsigned long long)a1 indexType:(unsigned long long)a2 indexBuffer:(id)a3 indexBufferOffset:(unsigned long long)a4;
- (void)drawIndexedPrimitives:(unsigned long long)a0 indexCount:(unsigned long long)a1 indexType:(unsigned long long)a2 indexBuffer:(id)a3 indexBufferOffset:(unsigned long long)a4 instanceCount:(unsigned long long)a5;
- (void)drawIndexedPrimitives:(unsigned long long)a0 indexCount:(unsigned long long)a1 indexType:(unsigned long long)a2 indexBuffer:(id)a3 indexBufferOffset:(unsigned long long)a4 instanceCount:(unsigned long long)a5 baseVertex:(long long)a6 baseInstance:(unsigned long long)a7;
- (void)drawIndexedPrimitives:(unsigned long long)a0 indexType:(unsigned long long)a1 indexBuffer:(id)a2 indexBufferOffset:(unsigned long long)a3 indirectBuffer:(id)a4 indirectBufferOffset:(unsigned long long)a5;
- (void)drawMeshThreadgroups:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0 threadsPerObjectThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a1 threadsPerMeshThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a2;
- (void)drawMeshThreadgroupsWithIndirectBuffer:(id)a0 indirectBufferOffset:(unsigned long long)a1 threadsPerObjectThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a2 threadsPerMeshThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a3;
- (void)drawMeshThreads:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0 threadsPerObjectThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a1 threadsPerMeshThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a2;
- (void)drawPatches:(unsigned long long)a0 patchIndexBuffer:(id)a1 patchIndexBufferOffset:(unsigned long long)a2 indirectBuffer:(id)a3 indirectBufferOffset:(unsigned long long)a4;
- (void)drawPatches:(unsigned long long)a0 patchStart:(unsigned long long)a1 patchCount:(unsigned long long)a2 patchIndexBuffer:(id)a3 patchIndexBufferOffset:(unsigned long long)a4 instanceCount:(unsigned long long)a5 baseInstance:(unsigned long long)a6;
- (void)drawPrimitives:(unsigned long long)a0 indirectBuffer:(id)a1 indirectBufferOffset:(unsigned long long)a2;
- (void)drawPrimitives:(unsigned long long)a0 vertexStart:(unsigned long long)a1 vertexCount:(unsigned long long)a2;
- (void)drawPrimitives:(unsigned long long)a0 vertexStart:(unsigned long long)a1 vertexCount:(unsigned long long)a2 instanceCount:(unsigned long long)a3;
- (void)drawPrimitives:(unsigned long long)a0 vertexStart:(unsigned long long)a1 vertexCount:(unsigned long long)a2 instanceCount:(unsigned long long)a3 baseInstance:(unsigned long long)a4;
- (void)endEncoding;
- (id)endEncodingAndRetrieveProgramAddressTable;
- (void)executeCommandsInBuffer:(id)a0 indirectBuffer:(id)a1 indirectBufferOffset:(unsigned long long)a2;
- (void)executeCommandsInBuffer:(id)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (char)isMemorylessRender;
- (void)memoryBarrierWithResources:(const id *)a0 count:(unsigned long long)a1 afterStages:(unsigned long long)a2 beforeStages:(unsigned long long)a3;
- (void)memoryBarrierWithScope:(unsigned long long)a0 afterStages:(unsigned long long)a1 beforeStages:(unsigned long long)a2;
- (void)sampleCountersInBuffer:(id)a0 atSampleIndex:(unsigned long long)a1 withBarrier:(char)a2;
- (void)setBlendColorRed:(float)a0 green:(float)a1 blue:(float)a2 alpha:(float)a3;
- (void)setColorStoreAction:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setColorStoreActionOptions:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setCullMode:(unsigned long long)a0;
- (void)setDepthBias:(float)a0 slopeScale:(float)a1 clamp:(float)a2;
- (void)setDepthClipMode:(unsigned long long)a0;
- (void)setDepthStencilState:(id)a0;
- (void)setDepthStoreAction:(unsigned long long)a0;
- (void)setDepthStoreActionOptions:(unsigned long long)a0;
- (void)setFragmentBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setFragmentBufferOffset:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setFragmentBuffers:(const id *)a0 offsets:(const unsigned long long *)a1 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setFragmentBytes:(const void *)a0 length:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setFragmentSamplerState:(id)a0 atIndex:(unsigned long long)a1;
- (void)setFragmentSamplerState:(id)a0 lodMinClamp:(float)a1 lodMaxClamp:(float)a2 atIndex:(unsigned long long)a3;
- (void)setFragmentSamplerStates:(const id *)a0 lodMinClamps:(const float *)a1 lodMaxClamps:(const float *)a2 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (void)setFragmentSamplerStates:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setFragmentTexture:(id)a0 atIndex:(unsigned long long)a1;
- (void)setFragmentTexture:(id)a0 atTextureIndex:(unsigned long long)a1 samplerState:(id)a2 atSamplerIndex:(unsigned long long)a3;
- (void)setFragmentTextures:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setFrontFacingWinding:(unsigned long long)a0;
- (void)setLineWidth:(float)a0;
- (void)setMeshBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setMeshBufferOffset:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setMeshBuffers:(const id *)a0 offsets:(const unsigned long long *)a1 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setMeshBytes:(const void *)a0 length:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setMeshSamplerState:(id)a0 atIndex:(unsigned long long)a1;
- (void)setMeshSamplerState:(id)a0 lodMinClamp:(float)a1 lodMaxClamp:(float)a2 atIndex:(unsigned long long)a3;
- (void)setMeshSamplerStates:(const id *)a0 lodMinClamps:(const float *)a1 lodMaxClamps:(const float *)a2 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (void)setMeshTexture:(id)a0 atIndex:(unsigned long long)a1;
- (void)setMeshTextures:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setObjectBufferOffset:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setObjectBuffers:(const id *)a0 offsets:(const unsigned long long *)a1 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setObjectBytes:(const void *)a0 length:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setObjectSamplerState:(id)a0 atIndex:(unsigned long long)a1;
- (void)setObjectSamplerState:(id)a0 lodMinClamp:(float)a1 lodMaxClamp:(float)a2 atIndex:(unsigned long long)a3;
- (void)setObjectSamplerStates:(const id *)a0 lodMinClamps:(const float *)a1 lodMaxClamps:(const float *)a2 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (void)setObjectSamplerStates:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setObjectTexture:(id)a0 atIndex:(unsigned long long)a1;
- (void)setObjectTextures:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setObjectThreadgroupMemoryLength:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setRenderPipelineState:(id)a0;
- (void)setScissorRects:(const struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)a0 count:(unsigned long long)a1;
- (void)setStencilFrontReferenceValue:(unsigned int)a0 backReferenceValue:(unsigned int)a1;
- (void)setStencilReferenceValue:(unsigned int)a0;
- (void)setStencilStoreAction:(unsigned long long)a0;
- (void)setStencilStoreActionOptions:(unsigned long long)a0;
- (void)setTessellationFactorBuffer:(id)a0 offset:(unsigned long long)a1 instanceStride:(unsigned long long)a2;
- (void)setTessellationFactorScale:(float)a0;
- (void)setThreadgroupMemoryLength:(unsigned long long)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setTileBuffer:(id)a0 offset:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setTileBufferOffset:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setTileBuffers:(const id *)a0 offsets:(const unsigned long long *)a1 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setTileBytes:(const void *)a0 length:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setTileSamplerState:(id)a0 atIndex:(unsigned long long)a1;
- (void)setTileSamplerState:(id)a0 lodMinClamp:(float)a1 lodMaxClamp:(float)a2 atIndex:(unsigned long long)a3;
- (void)setTileSamplerStates:(const id *)a0 lodMinClamps:(const float *)a1 lodMaxClamps:(const float *)a2 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (void)setTileTexture:(id)a0 atIndex:(unsigned long long)a1;
- (void)setTileTextures:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setTriangleFillMode:(unsigned long long)a0;
- (void)setVertexAmplificationCount:(unsigned long long)a0 viewMappings:(const struct { unsigned int x0; unsigned int x1; } *)a1;
- (void)setVertexAmplificationMode:(unsigned long long)a0 value:(unsigned long long)a1;
- (void)setVertexBuffer:(id)a0 offset:(unsigned long long)a1 attributeStride:(unsigned long long)a2 atIndex:(unsigned long long)a3;
- (void)setVertexBufferOffset:(unsigned long long)a0 atIndex:(unsigned long long)a1;
- (void)setVertexBufferOffset:(unsigned long long)a0 attributeStride:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setVertexBuffers:(const id *)a0 offsets:(const unsigned long long *)a1 attributeStrides:(const unsigned long long *)a2 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (void)setVertexBuffers:(const id *)a0 offsets:(const unsigned long long *)a1 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)setVertexBytes:(const void *)a0 length:(unsigned long long)a1 atIndex:(unsigned long long)a2;
- (void)setVertexBytes:(const void *)a0 length:(unsigned long long)a1 attributeStride:(unsigned long long)a2 atIndex:(unsigned long long)a3;
- (void)setVertexSamplerState:(id)a0 atIndex:(unsigned long long)a1;
- (void)setVertexSamplerState:(id)a0 lodMinClamp:(float)a1 lodMaxClamp:(float)a2 atIndex:(unsigned long long)a3;
- (void)setVertexSamplerStates:(const id *)a0 lodMinClamps:(const float *)a1 lodMaxClamps:(const float *)a2 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a3;
- (void)setVertexSamplerStates:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setVertexTexture:(id)a0 atIndex:(unsigned long long)a1;
- (void)setVertexTextures:(const id *)a0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1;
- (void)setViewport:(struct { double x0; double x1; double x2; double x3; double x4; double x5; })a0;
- (void)setViewports:(const struct { double x0; double x1; double x2; double x3; double x4; double x5; } *)a0 count:(unsigned long long)a1;
- (void)textureBarrier;
- (void)updateFence:(id)a0 afterStages:(unsigned long long)a1;
- (void)useHeap:(id)a0;
- (void)useHeaps:(const id *)a0 count:(unsigned long long)a1 stages:(unsigned long long)a2;
- (void)useResource:(id)a0 usage:(unsigned long long)a1;
- (void)useResource:(id)a0 usage:(unsigned long long)a1 stages:(unsigned long long)a2;
- (void)useResources:(const id *)a0 count:(unsigned long long)a1 usage:(unsigned long long)a2;
- (void)useResources:(const id *)a0 count:(unsigned long long)a1 usage:(unsigned long long)a2 stages:(unsigned long long)a3;
- (void)waitForFence:(id)a0 beforeStages:(unsigned long long)a1;
- (id)initWithCommandBuffer:(id)a0 descriptor:(id)a1;
- (void)drawMeshThreadgroups:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0;
- (void)drawMeshThreadgroupsWithIndirectBuffer:(id)a0 indirectBufferOffset:(unsigned long long)a1;
- (void)drawMeshThreads:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })a0;
- (void)dirtyTsQueryBuffer;
- (void)getTimestampAtOffset:(unsigned long long)a0;
- (void)setDepthBoundsTestAMD:(BOOL)a0 minDepth:(float)a1 maxDepth:(float)a2;
- (void)setDepthTestMinBound:(float)a0 maxBound:(float)a1;

@end
